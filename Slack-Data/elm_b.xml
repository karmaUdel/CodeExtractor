<?xml version='1.0' encoding='utf-8'?>
<slack>
  <team_domain>elmlang</team_domain>
  <channel_name>beginners</channel_name>
  <start_date>2014-11-07T12:02:12.695655</start_date>
  <end_date>2017-08-03T12:02:12.695655</end_date>
  <message>
    <ts>2017-06-18T05:36:29.465953</ts>
    <user>U5629K709</user>
    <text>Hi all, it looks like Elm does not have lazy list processing.

Example code:

```
(List.take 3 (List.map f (List.repeat 10 1)))

f x =
  let _ = Debug.log "x" x
  in x
```

Output:

```
10 times x: 1
```

Why not?
Thanks</text>
  </message>
  <message>
    <ts>2017-06-18T05:44:55.485246</ts>
    <user>U3SJEDR96</user>
    <text>Elm is an eager language, not laziness unless explicitly introduced</text>
  </message>
  <message>
    <ts>2017-06-18T05:46:36.489083</ts>
    <user>U3SJEDR96</user>
    <text>That choice was made back when we still did FRP, but some of the reasoning still applies - &lt;https://groups.google.com/d/msg/elm-discuss/9XxV9L0zoA0/cx3UMZ05Gc0J&gt;</text>
  </message>
  <message>
    <ts>2017-06-18T05:59:08.517333</ts>
    <user>U5CGE1K16</user>
    <text>my version are elm 0.18.0, node 8.1.1, npm 5.0.3.  Yes, I can see the "update: DoSignUp" in the console as well.  But I was expecting the "Got the cmd" and data being passed around using the ports feature.  That is not happening when I press the sign up button in the Main.elm page.  Thanks again for the assist &lt;@U0JFFPRHP&gt;.</text>
  </message>
  <message>
    <ts>2017-06-18T06:00:39.521841</ts>
    <user>U5CGE1K16</user>
    <text>I'll try a simple ports example and play around with that.</text>
  </message>
  <message>
    <ts>2017-06-18T06:02:59.527654</ts>
    <user>U5GJ5FEAU</user>
    <text>is there a quick way of getting the month number instead of the Month type, from a `Date.Date`</text>
  </message>
  <message>
    <ts>2017-06-18T06:03:18.528502</ts>
    <user>U4872964V</user>
    <text>Introducing laziness in Elm would only lead to strange bugs where you'd have to introduce strictness functions at non-obvious places. Not so good for newcomers</text>
  </message>
  <message>
    <ts>2017-06-18T06:10:36.546113</ts>
    <user>U18S4094L</user>
    <text>hardfire: the Date.Extra package will let you if you don't mind adding a dependency - &lt;http://package.elm-lang.org/packages/justinmimbs/elm-date-extra/latest/Date-Extra&gt;</text>
  </message>
  <message>
    <ts>2017-06-18T06:11:34.548307</ts>
    <user>U5GJ5FEAU</user>
    <text>thanks &lt;@U18S4094L&gt; , i might do that if have another Date-ish requirement again. Right now I just did my own Month-&amp;gt;Int function</text>
  </message>
  <message>
    <ts>2017-06-18T09:41:01.076428</ts>
    <user>U2SSNHFEJ</user>
    <text>&lt;@U48AEBJQ3&gt; i dont see logged content in the command line. Debug.log is supposed to print in the browser console, but there is none for the npm runner</text>
  </message>
  <message>
    <ts>2017-06-18T09:44:09.085025</ts>
    <user>U3SJEDR96</user>
    <text>When running Elm-test, it should just appear in the console</text>
  </message>
  <message>
    <ts>2017-06-18T09:45:46.089673</ts>
    <user>U3SJEDR96</user>
    <text>for example; I just added a `|&amp;gt; Debug "foo"` right before an expect, and see this:
```
Running 20 tests. To reproduce these results, run: elm-test --fuzz 100 --seed 287150092

foo: Ok (Branch ([Branch ([Val "foo",Val "bar"]),Val "foo"]))

TEST RUN PASSED
```</text>
  </message>
  <message>
    <ts>2017-06-18T10:40:22.250311</ts>
    <user>U2SSNHFEJ</user>
    <text>Ah. I was using Debug.log</text>
  </message>
  <message>
    <ts>2017-06-18T10:41:30.253900</ts>
    <user>U0CLDU8UB</user>
    <text>Yes, `Debug.log` is what ilias meant</text>
  </message>
  <message>
    <ts>2017-06-18T10:41:50.255042</ts>
    <user>U3SJEDR96</user>
    <text>indeed, my bad. `Debug.log "foo"` in this case</text>
  </message>
  <message>
    <ts>2017-06-18T11:30:59.409310</ts>
    <user>U5HM74BD0</user>
    <text>Is there a way I can persist my model to localstorage ?</text>
  </message>
  <message>
    <ts>2017-06-18T11:31:09.409801</ts>
    <user>U36C7SUAX</user>
    <text>Is there some easy way of using relative address with websockets, like `WebSocket.listen "&lt;ws://localhost:8080/api&gt;" Msg` -&amp;gt; `WebSocket.listen "&lt;ws://api&gt;" Msg`? Or do I have to create a task to retrieve `window.location.host` on start and use it to construct the url?</text>
  </message>
  <message>
    <ts>2017-06-18T11:32:35.414882</ts>
    <user>U36C7SUAX</user>
    <text>&lt;@U5HM74BD0&gt; &lt;https://github.com/elm-lang/persistent-cache&gt;</text>
  </message>
  <message>
    <ts>2017-06-18T11:42:10.444631</ts>
    <user>U0JFFPRHP</user>
    <text>oh, I see-- ah, the "Got the cmd" output is from &lt;https://youtu.be/X6e8KpPWHg0?t=10m20s&gt; in entry.js which I think I delete later on.</text>
  </message>
  <message>
    <ts>2017-06-18T11:55:22.486041</ts>
    <user>U0SES5Y3T</user>
    <text>&lt;@U5HM74BD0&gt; I don't think there is package out there currently but you can certainly do it with JS interop</text>
  </message>
  <message>
    <ts>2017-06-18T11:57:05.491903</ts>
    <user>U5HM74BD0</user>
    <text>It looks like elm-lang/persistent-cache isn't released yet. Is it better to avoid it, then, and use JS interop, as you're suggesting, &lt;@U0SES5Y3T&gt; ?</text>
  </message>
  <message>
    <ts>2017-06-18T11:57:55.494563</ts>
    <user>U0SES5Y3T</user>
    <text>&lt;@U5HM74BD0&gt; I would think so</text>
  </message>
  <message>
    <ts>2017-06-18T11:59:06.498170</ts>
    <user>U0SES5Y3T</user>
    <text>It's pretty straight forward process, just moving data between Elm the and DOM</text>
  </message>
  <message>
    <ts>2017-06-18T12:02:28.510716</ts>
    <user>U5HM74BD0</user>
    <text>Does localStorage work if the app is served up via file:// instead of http:// ?</text>
  </message>
  <message>
    <ts>2017-06-18T12:02:35.511144</ts>
    <user>U2CR5RDL5</user>
    <text>&lt;@U36C7SUAX&gt; What I do for making Http requests work locally as well as on a live server is to start the elm application with flags, passing through the correct host and keeping hold of it in the model, no need for tasks.</text>
  </message>
  <message>
    <ts>2017-06-18T12:08:10.529069</ts>
    <user>U0SES5Y3T</user>
    <text>&lt;@U5HM74BD0&gt; yes, since you are in the browser, you have access to localStorage</text>
  </message>
  <message>
    <ts>2017-06-18T12:09:24.532782</ts>
    <user>U0SES5Y3T</user>
    <text>&lt;@U2CR5RDL5&gt; I think you still need to call a Task because it's an async operation</text>
  </message>
  <message>
    <ts>2017-06-18T12:10:07.535031</ts>
    <user>U0SES5Y3T</user>
    <text>if you are calling your async operations in Elm than you will need a Task to run them, I believe, unless you are using JS interop to run your async operations</text>
  </message>
  <message>
    <ts>2017-06-18T12:12:47.544203</ts>
    <user>U2CR5RDL5</user>
    <text>It's not to run any async ops, &lt;@U36C7SUAX&gt; just needs a way to start listening on a specific host. If you embed the elm application with flags, passing through the host, that can be stored on the model and then used in subscriptions to listen for websocket messages on the host without hardcoding the hostname in the elm source.</text>
  </message>
  <message>
    <ts>2017-06-18T12:15:22.553065</ts>
    <user>U0SES5Y3T</user>
    <text>makes sense</text>
  </message>
  <message>
    <ts>2017-06-18T12:15:31.553718</ts>
    <user>U2CR5RDL5</user>
    <text>```Elm.Main.embed(node, {hostname: window.location.host});``` after keeping hold of the hostname flag in the model (within init) this can then be used in subscriptions ```
subscriptions model =
    WebSocket.listen model.hostname Msg``` No need to create a task to get the hostname, just initialise the app with flags instead.</text>
  </message>
  <message>
    <ts>2017-06-18T12:17:30.560608</ts>
    <user>U2CR5RDL5</user>
    <text>Also, if &lt;@U36C7SUAX&gt; is using the `Navigation.program` instead of `Html.program` then the programs init function already gets a `Navigation.Location` object which the hostname could be plucked out from.</text>
  </message>
  <message>
    <ts>2017-06-18T12:49:39.665496</ts>
    <user>U5VJL4AJZ</user>
    <text>hiya. two unrelated newbie questions here</text>
  </message>
  <message>
    <ts>2017-06-18T12:50:25.668366</ts>
    <user>U5VJL4AJZ</user>
    <text>1. looking at &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Maybe&gt; and it shows int he example for `andThen` an operator `|&amp;gt;` . what is that operator supposed to do?</text>
  </message>
  <message>
    <ts>2017-06-18T12:51:06.670700</ts>
    <user>U5VJL4AJZ</user>
    <text>2. is type annotation not available in the REPL? also, is there a way to create multiline functions on the REPL?</text>
  </message>
  <message>
    <ts>2017-06-18T12:52:06.673819</ts>
    <user>U5VJL4AJZ</user>
    <text>when i try to do type annotation, in the repl, i get the following error:
```
&amp;gt; getFirstMonth : List Int -&amp;gt; Maybe Int
-- SYNTAX PROBLEM -------------------------------------------- repl-temp-000.elm

A single colon is for type annotations. Maybe you want :: instead? Or maybe you
are defining a type annotation, but there is whitespace before it?

8|   getFirstMonth : List Int -&amp;gt; Maybe Int
                   ^
Maybe &amp;lt;http://elm-lang.org/docs/syntax&amp;gt; can help you figure it out.
```</text>
  </message>
  <message>
    <ts>2017-06-18T12:55:06.683107</ts>
    <user>U5VJL4AJZ</user>
    <text>i just figured out #2 , you need to terminate each line of a multiline with a `\`</text>
  </message>
  <message>
    <ts>2017-06-18T12:55:16.683660</ts>
    <user>U5VJL4AJZ</user>
    <text>i do remember reading that in the turtorial, but i forgot</text>
  </message>
  <message>
    <ts>2017-06-18T12:55:26.684194</ts>
    <user>U5VJL4AJZ</user>
    <text>so, just #1... type annotation ?</text>
  </message>
  <message>
    <ts>2017-06-18T12:55:43.685172</ts>
    <user>U5VJL4AJZ</user>
    <text>and `|&amp;gt;`</text>
  </message>
  <message>
    <ts>2017-06-18T12:55:49.685582</ts>
    <user>U18S4094L</user>
    <text>`|&amp;gt;` is documented here - &lt;http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#%7C&amp;gt;&gt; it's basically a way of sending the result of one function to another</text>
  </message>
  <message>
    <ts>2017-06-18T12:56:03.686417</ts>
    <user>U5VJL4AJZ</user>
    <text>great. so like a pipe operator</text>
  </message>
  <message>
    <ts>2017-06-18T12:56:09.686687</ts>
    <user>U18S4094L</user>
    <text>yeah exactly</text>
  </message>
  <message>
    <ts>2017-06-18T12:56:26.687679</ts>
    <user>U5VJL4AJZ</user>
    <text>makes sense. i think thats what they use in eilxir as well</text>
  </message>
  <message>
    <ts>2017-06-18T12:56:28.687793</ts>
    <user>U5VJL4AJZ</user>
    <text>thanks!</text>
  </message>
  <message>
    <ts>2017-06-18T12:57:38.691335</ts>
    <user>U18S4094L</user>
    <text>no worries :slightly_smiling_face: i'm not sure about type annotations in the repl, i don't use it much</text>
  </message>
  <message>
    <ts>2017-06-18T12:58:01.692641</ts>
    <user>U5VJL4AJZ</user>
    <text>kk, thanks for the insight!</text>
  </message>
  <message>
    <ts>2017-06-18T13:01:31.704990</ts>
    <user>U0SES5Y3T</user>
    <text>it works a little different in Elixir, just FYI</text>
  </message>
  <message>
    <ts>2017-06-18T13:01:39.705450</ts>
    <user>U5VJL4AJZ</user>
    <text>&lt;@U18S4094L&gt; , related question. when you say you don't use "it" much, are you saying you don't use the repl much or you don't use type annotations much (or both)?</text>
  </message>
  <message>
    <ts>2017-06-18T13:01:45.705764</ts>
    <user>U0SES5Y3T</user>
    <text>same concept though</text>
  </message>
  <message>
    <ts>2017-06-18T13:01:59.706481</ts>
    <user>U0SES5Y3T</user>
    <text>talking about the `|&amp;gt;` operator</text>
  </message>
  <message>
    <ts>2017-06-18T13:02:36.708386</ts>
    <user>U18S4094L</user>
    <text>bkirkby: the repl; type annotations are super useful!</text>
  </message>
  <message>
    <ts>2017-06-18T13:02:57.709439</ts>
    <user>U5VJL4AJZ</user>
    <text>:thumbsup:</text>
  </message>
  <message>
    <ts>2017-06-18T13:05:29.717900</ts>
    <user>U5VJL4AJZ</user>
    <text>at my current level of ignorance,  they seem to be mostly aesthetic. which is useful, but types seems to be inferred really well. is that true?</text>
  </message>
  <message>
    <ts>2017-06-18T13:06:10.720535</ts>
    <user>U18S4094L</user>
    <text>yeah the compiler is really good at inferring, but it can sometimes get confused with nested function calls</text>
  </message>
  <message>
    <ts>2017-06-18T13:06:30.721642</ts>
    <user>U18S4094L</user>
    <text>so explicitly listing what things should be just lets it tell you the actual problem if it's ambiguous</text>
  </message>
  <message>
    <ts>2017-06-18T13:08:19.727462</ts>
    <user>U5VJL4AJZ</user>
    <text>btw, the FAQ lised at the top is super useful. thanks for putting it together. i saw a different FAQ that was anemic before and i assumed what was in the channel topic was to that one.</text>
  </message>
  <message>
    <ts>2017-06-18T13:08:30.727991</ts>
    <user>U5VJL4AJZ</user>
    <text>and for annotations in the repl: &lt;http://faq.elm-community.org/#why-does-elm-repl-report-a-syntax-problem-for-any-type-annotation-such-as-for-fib--int---int&gt;</text>
  </message>
  <message>
    <ts>2017-06-18T13:09:22.730566</ts>
    <user>U5VJL4AJZ</user>
    <text>guess i need to delve deeper into the tooling and `elm-reactor`</text>
  </message>
  <message>
    <ts>2017-06-18T13:12:30.741428</ts>
    <user>U3SJEDR96</user>
    <text>as for type annotations: they help prevent bugs where the function doesn't do what you _think_ it does. By writing type annotations, you describe the actual shape of things your function is expected to work on, and what it is supposed to do with them. They also serve as a very succinct, formal type of documentation (there's even a search-engine that lets you look for functions based on their type). Furthermore, and this is fairly subjective, but I believe that writing things twice - once as a type annotation and once as an implementation - helps you mentally process things. It's sort of similar to the idea behind literate programming.</text>
  </message>
  <message>
    <ts>2017-06-18T13:46:05.849097</ts>
    <user>U23SA861Y</user>
    <text>kinda like a type unit test for the compiler :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-06-18T14:04:18.908138</ts>
    <user>U1NME8MS8</user>
    <text>Hi, I'm wondering whether anyone wants to give some general feedback on my little app on &lt;https://github.com/dawehner/mfp-elm/tree/master/src&gt; ?</text>
  </message>
  <message>
    <ts>2017-06-18T14:11:00.929735</ts>
    <user>U48AEBJQ3</user>
    <text>dawehner: &lt;http://package.elm-lang.org/packages/elm-community/random-extra/2.0.0/Random-Extra#sample&gt;</text>
  </message>
  <message>
    <ts>2017-06-18T14:11:29.931401</ts>
    <user>U1NME8MS8</user>
    <text>&lt;@U48AEBJQ3&gt; oh nice, this is exactly what I need. Let me see how its actually implemented</text>
  </message>
  <message>
    <ts>2017-06-18T14:12:13.933699</ts>
    <user>U48AEBJQ3</user>
    <text>It's still a `Maybe` because lists can be empty.</text>
  </message>
  <message>
    <ts>2017-06-18T14:12:22.934187</ts>
    <user>U1NME8MS8</user>
    <text>Fair</text>
  </message>
  <message>
    <ts>2017-06-18T14:12:38.934974</ts>
    <user>U1NME8MS8</user>
    <text>I guess one just skips the length checking</text>
  </message>
  <message>
    <ts>2017-06-18T14:12:55.935951</ts>
    <user>U1NME8MS8</user>
    <text>&lt;@U48AEBJQ3&gt; Conceptually does it make sense to copy this single function or would you include the library via the package manager</text>
  </message>
  <message>
    <ts>2017-06-18T14:14:07.939758</ts>
    <user>U48AEBJQ3</user>
    <text>I would just use the package. The core package is intentionally sparse. The elm-community packages are a semi-official extention.</text>
  </message>
  <message>
    <ts>2017-06-18T14:16:27.947381</ts>
    <user>U48AEBJQ3</user>
    <text>I would move this: &lt;https://github.com/dawehner/mfp-elm/blob/master/src/Update.elm#L15&gt; to your model and pass it down as an argument.</text>
  </message>
  <message>
    <ts>2017-06-18T14:17:08.949466</ts>
    <user>U1NME8MS8</user>
    <text>&lt;@U48AEBJQ3&gt;  good point. I started using a node based server for serving these, but then I switched to a simple static file.</text>
  </message>
  <message>
    <ts>2017-06-18T14:17:57.952112</ts>
    <user>U48AEBJQ3</user>
    <text>Yep. Those sorts of changes are common. It's best to try and collect those together in the model so that you don't have to think about where they are when you need to change them.</text>
  </message>
  <message>
    <ts>2017-06-18T14:19:39.956964</ts>
    <user>U48AEBJQ3</user>
    <text>Looking around at the code for handling the 'active song', you are using a `Maybe.withDefault` only to turn around and hand it to `Just`</text>
  </message>
  <message>
    <ts>2017-06-18T14:19:49.957523</ts>
    <user>U1NME8MS8</user>
    <text>ah I see, so this is basically elm's approach to constants?</text>
  </message>
  <message>
    <ts>2017-06-18T14:20:33.960210</ts>
    <user>U1NME8MS8</user>
    <text>Well, there is no active song when the app loads, so I thought this is the usecase for a maybe</text>
  </message>
  <message>
    <ts>2017-06-18T14:22:03.964847</ts>
    <user>U23SA861Y</user>
    <text>Thats actually fairly reasonable</text>
  </message>
  <message>
    <ts>2017-06-18T14:22:17.965550</ts>
    <user>U48AEBJQ3</user>
    <text>re: constants: Kinda? It's more that putting things like this url data in the model is a practice that tends to lead to better code.</text>
  </message>
  <message>
    <ts>2017-06-18T14:22:46.967013</ts>
    <user>U1NME8MS8</user>
    <text>Yeah I can totally see that. It just makes it easier to understand what might go inside the app</text>
  </message>
  <message>
    <ts>2017-06-18T14:22:49.967174</ts>
    <user>U48AEBJQ3</user>
    <text>As for the active song, it's fine that it is a `Maybe`, I'm saying that your random song generator should return its `Maybe` without switching to a default.</text>
  </message>
  <message>
    <ts>2017-06-18T14:23:04.968019</ts>
    <user>U1NME8MS8</user>
    <text>ah gotcha</text>
  </message>
  <message>
    <ts>2017-06-18T14:23:18.968742</ts>
    <user>U1NME8MS8</user>
    <text>well, then the question is, should I still use the SelectSong message?</text>
  </message>
  <message>
    <ts>2017-06-18T14:23:25.969090</ts>
    <user>U1NME8MS8</user>
    <text>At the moment it takes a Song</text>
  </message>
  <message>
    <ts>2017-06-18T14:23:26.969151</ts>
    <user>U23SA861Y</user>
    <text>Whats with the Noop message?</text>
  </message>
  <message>
    <ts>2017-06-18T14:23:48.970163</ts>
    <user>U48AEBJQ3</user>
    <text>`| SelectSong (Maybe Song)`</text>
  </message>
  <message>
    <ts>2017-06-18T14:23:48.970216</ts>
    <user>U1NME8MS8</user>
    <text>&lt;@U23SA861Y&gt; oh, right, I forgot to remove it</text>
  </message>
  <message>
    <ts>2017-06-18T14:24:45.973272</ts>
    <user>U1NME8MS8</user>
    <text>&lt;@U48AEBJQ3&gt; so the click handlers should pass along (Just song) ?</text>
  </message>
  <message>
    <ts>2017-06-18T14:25:34.975857</ts>
    <user>U48AEBJQ3</user>
    <text>Yes.</text>
  </message>
  <message>
    <ts>2017-06-18T14:26:43.979637</ts>
    <user>U1NME8MS8</user>
    <text>great, thank you so much for all the feedback already!</text>
  </message>
  <message>
    <ts>2017-06-18T14:31:01.993493</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;https://github.com/dawehner/mfp-elm/blob/master/src/Update.elm#L73&gt;
You should use `field` instead of `at`.</text>
  </message>
  <message>
    <ts>2017-06-18T14:56:55.076691</ts>
    <user>U1CE9DL9H</user>
    <text>general note - your files are really short. In elm there is generally no need for that (there is a great talk by elm's creator that is not uploaded yet from elm europe explaining why in elm long files are fine)</text>
  </message>
  <message>
    <ts>2017-06-18T14:58:56.083246</ts>
    <user>U1CE9DL9H</user>
    <text>if you're interested, the talk is here &lt;https://www.youtube.com/watch?v=2ihTgEYiKpI&gt;, but it is currently unlisted as the videos are re-edited</text>
  </message>
  <message>
    <ts>2017-06-18T15:12:24.128250</ts>
    <user>U1NME8MS8</user>
    <text>&lt;@U1CE9DL9H&gt; &lt;@U48AEBJQ3&gt; I've seen that talk live indeed</text>
  </message>
  <message>
    <ts>2017-06-18T15:12:31.128621</ts>
    <user>U1NME8MS8</user>
    <text>&lt;@U48AEBJQ3&gt; is field and at the same?</text>
  </message>
  <message>
    <ts>2017-06-18T15:13:23.131280</ts>
    <user>U48AEBJQ3</user>
    <text>`at ["key"] decoder` is equivalent to `field "key" decoder`</text>
  </message>
  <message>
    <ts>2017-06-18T15:13:34.131847</ts>
    <user>U1CE9DL9H</user>
    <text>ah well, why not restructure your app into one file :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-18T15:14:00.133277</ts>
    <user>U48AEBJQ3</user>
    <text>`at` tends to communicate that you are digging deep into the structure.</text>
  </message>
  <message>
    <ts>2017-06-18T15:14:02.133404</ts>
    <user>U1NME8MS8</user>
    <text>fair I could do that. I am just used for my bigger experiments to grow out quickly</text>
  </message>
  <message>
    <ts>2017-06-18T15:14:17.134255</ts>
    <user>U1NME8MS8</user>
    <text>oh yeah I like to use the field as a sign of 1level communication</text>
  </message>
  <message>
    <ts>2017-06-18T15:15:28.138197</ts>
    <user>U1CE9DL9H</user>
    <text>if you follow that talk, splitting into update/view/... should never happen anyway. I did split by update/view for my earlier projects, and later reverted it, splitting along data lines instead.</text>
  </message>
  <message>
    <ts>2017-06-18T15:18:14.147678</ts>
    <user>U48AEBJQ3</user>
    <text>As for code organization, in contrast to other experiences you may have had, it's less important to get it 'right' from the beginning in Elm.

The structure you end up making will often follow from your improved understanding of your application as you build it.

It's also easier and safer to make changes because the compiler is picky, so moving code around is less risky.</text>
  </message>
  <message>
    <ts>2017-06-18T15:19:34.152115</ts>
    <user>U1NME8MS8</user>
    <text>oh yeah that is a good point</text>
  </message>
  <message>
    <ts>2017-06-18T15:32:57.197807</ts>
    <user>U1NME8MS8</user>
    <text>I'm wondering whether its okay to put up another app, which though is bigger</text>
  </message>
  <message>
    <ts>2017-06-18T16:26:35.377616</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U36C7SUAX&gt; We did something like that here &lt;https://github.com/rubinmarty/Codenames/blob/master/src/State.elm#L21-L30&gt;.</text>
  </message>
  <message>
    <ts>2017-06-18T16:27:45.381359</ts>
    <user>U4F64AKQV</user>
    <text>The trick is to use `Navigation.program` from elm-lang/navigation.</text>
  </message>
  <message>
    <ts>2017-06-18T17:10:19.514782</ts>
    <user>U5US3G22C</user>
    <text>I'm having trouble understand what a `Value` is exactly. (Json.Decode.Value)</text>
  </message>
  <message>
    <ts>2017-06-18T17:12:09.520744</ts>
    <user>U3SJEDR96</user>
    <text>It's a Javascript value. Could be anything, really, which is why you need decoders to make sense of it in our strictly typed universe</text>
  </message>
  <message>
    <ts>2017-06-18T17:22:14.552099</ts>
    <user>U5ABF3BH7</user>
    <text>Hi everyone. I wonder if I haven't discovered a bug in Elm. I have a simple select element with an options of countries. When I select a country, I need to select it twice for it to work. I don't get it. &lt;https://screencast.com/t/GnvOvy2SMx1&gt;. If I remove 'onInput ChgCountry', then the issue doesn't happen. If I add onInput ChgCountry, then the country I select becomes the right one in my model but I need to select it twice for the UI to reflect the choice. Did anyone have that kind of issue before? This happens just in that section on that Model. I have a similar code on another model but it doesn't happen.   If I write the exact same code, in a function that doesn't display this element conditionally, then it works as expected. In the following screencast, the first country input is in the view that appears conditionally (depending on another selection), the lower country line behaves as expected, the select is changes without needing to select twice &lt;https://screencast.com/t/1nPCurv3NQ&gt;.</text>
  </message>
  <message>
    <ts>2017-06-18T17:23:06.554667</ts>
    <user>U5ABF3BH7</user>
    <text>```div [ class "col-xs-7" ]
                                                    [ select [ class "select form-control", onInput (config.toMsg Location.ChgCountry), value config.model.country ]
                                                        Addresses.countryOptions
                                                    ]
                                                ]```</text>
  </message>
  <message>
    <ts>2017-06-18T17:25:34.562307</ts>
    <user>U5US3G22C</user>
    <text>&lt;@U3SJEDR96&gt; is it possible to create a `Value` in elm? Without it being passed in from outside?</text>
  </message>
  <message>
    <ts>2017-06-18T17:25:54.563504</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5US3G22C&gt; Look at `Json.Encode`</text>
  </message>
  <message>
    <ts>2017-06-18T17:29:10.573344</ts>
    <user>U5US3G22C</user>
    <text>Thanks. Another question. I realized you can pass in arbitrary json to elm through ports and handle it as long as you have a record that represents that json. Is it possible to do the same with http request json? Or must I decode it manually?</text>
  </message>
  <message>
    <ts>2017-06-18T17:30:10.576876</ts>
    <user>U48AEBJQ3</user>
    <text>You have to provide your own decoder to the `Http` functions.</text>
  </message>
  <message>
    <ts>2017-06-18T17:30:52.579536</ts>
    <user>U5US3G22C</user>
    <text>So I cant just pass in the `value` decoder and then later on apply that value onto a `type alias`?</text>
  </message>
  <message>
    <ts>2017-06-18T17:31:38.582053</ts>
    <user>U48AEBJQ3</user>
    <text>Nope, you have to make your own decoder if you want to avoid hacky work-arounds.</text>
  </message>
  <message>
    <ts>2017-06-18T17:32:04.583479</ts>
    <user>U48AEBJQ3</user>
    <text>(e.g. passing the value out of and back in via a port)</text>
  </message>
  <message>
    <ts>2017-06-18T17:32:48.585829</ts>
    <user>U5US3G22C</user>
    <text>That's interesting, but hacky as well. Thanks for the help</text>
  </message>
  <message>
    <ts>2017-06-18T17:39:33.606493</ts>
    <user>U5US3G22C</user>
    <text>One more random question. What are some tips for being productive with elm?</text>
  </message>
  <message>
    <ts>2017-06-18T17:39:55.607522</ts>
    <user>U5US3G22C</user>
    <text>I hope this isn't a FAQ. If so, a link to existing notes would be great also</text>
  </message>
  <message>
    <ts>2017-06-18T17:40:08.608343</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5ABF3BH7&gt; :thinking_face:</text>
  </message>
  <message>
    <ts>2017-06-18T17:40:22.609181</ts>
    <user>U4PT7NG4V</user>
    <text>That's a pretty vague question :slightly_smiling_face: Could you be more specific?</text>
  </message>
  <message>
    <ts>2017-06-18T17:40:49.610921</ts>
    <user>U5ABF3BH7</user>
    <text>Let me try to be clearer</text>
  </message>
  <message>
    <ts>2017-06-18T17:41:10.612061</ts>
    <user>U5US3G22C</user>
    <text>If I'm working on a module, how can I try it out without integrating it into my existing code? Unit tests?</text>
  </message>
  <message>
    <ts>2017-06-18T17:42:34.616214</ts>
    <user>U5US3G22C</user>
    <text>When I make a new feature, I usually have to rewrite it a few times to make it nice and elegant (including making it work first). Having to make a Main for each one is kinda tedious. Is there a better workflow?</text>
  </message>
  <message>
    <ts>2017-06-18T17:43:39.619281</ts>
    <user>U4PT7NG4V</user>
    <text>I personally prefer to see it as a part of the whole. i.e. "Chase compiler errors until the feature is done". But unit tests sounds reasonable to me</text>
  </message>
  <message>
    <ts>2017-06-18T17:44:53.622994</ts>
    <user>U5US3G22C</user>
    <text>Maybe I don't have enough experience with the different features and how everything works. I see a bunch of errors and fall back on the workflow i just described.</text>
  </message>
  <message>
    <ts>2017-06-18T17:45:27.624781</ts>
    <user>U4PT7NG4V</user>
    <text>It's an interesting question for sure :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-18T17:45:53.626222</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5US3G22C&gt; Code organization in Elm is likely going to be different from what you are accustomed to. I would advise not worrying so much about organization until after at least one round of refactoring. Don't go making a bunch of modules before you know that you need them.</text>
  </message>
  <message>
    <ts>2017-06-18T17:49:16.635990</ts>
    <user>U5US3G22C</user>
    <text>It's not usually the organization that's the issue more along the lines of, "I've got this piece of json i need to get from the server, but I need to handle it in this way and how do I setup the decoding pipeline and etc to make it all work correctly (what records will I need, what unions types, etc.). I think this might just stem from a lack of understanding and experience with functional languages and elm</text>
  </message>
  <message>
    <ts>2017-06-18T17:53:14.648132</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5US3G22C&gt; Probably. I think that starting from "I've got this piece of json" is often the wrong approach. I usually start by thinking of the data structures that I want and then figuring out how to build one given the API requests I have available to me.</text>
  </message>
  <message>
    <ts>2017-06-18T17:55:10.653663</ts>
    <user>U5US3G22C</user>
    <text>Maybe I could be more specific.
``` { 
        "type": "A" or "B" or "Error"
        "data": some_json  // Only if type == A or B
        "error": "error message"  // Only if type == Error 
}```</text>
  </message>
  <message>
    <ts>2017-06-18T17:56:18.657319</ts>
    <user>U5US3G22C</user>
    <text>I wanted to decode that from a request I got. So I first had to figure out how to setup the get request, then what decoders I need (ok lets just use `value` and handle it down the line). Now how do I check the "type" field and decode based on what it is</text>
  </message>
  <message>
    <ts>2017-06-18T17:58:29.663589</ts>
    <user>U5US3G22C</user>
    <text>I've got it figured out now, but it took me a while and doing so in the original project (as I just used my workflow i described) would have led to a bunch of errors that would have kinda put me off</text>
  </message>
  <message>
    <ts>2017-06-18T17:59:36.666759</ts>
    <user>U5ABF3BH7</user>
    <text>Here is what I'm seeing. I have a Country field created using [this line of code, nested in a condition].</text>
  </message>
  <message>
    <ts>2017-06-18T17:59:43.667122</ts>
    <user>U5ABF3BH7</user>
    <text>```, div [ class "col-xs-7" ]
                                  [ select [ class "select form-control", onInput (config.toMsg Location.ChgCountry), value config.model.country ]
                                      Addresses.countryOptions
                                  ]```</text>
  </message>
  <message>
    <ts>2017-06-18T18:00:08.668850</ts>
    <user>U5ABF3BH7</user>
    <text>When a country other than United States is selected, the UI displays a different set of fields above the country field. This works as expected. 
However, what I'm finding, is that when I select a different country than US, "United States" continue to display instead of the country selected. I have to once again select a country for the field to update.

If the line creating the country field is in the main view, it works as expected, if it is in the subview, displayed on condition of the m model, then I have that issue.</text>
  </message>
  <message>
    <ts>2017-06-18T18:00:26.670377</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5US3G22C&gt; Understanding composible data structures is *the* biggest stumbling block for new Elm users despite many difficulties. It's a big problem for a lot of FP languages.</text>
  </message>
  <message>
    <ts>2017-06-18T18:00:38.671118</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;https://screencast.com/t/GnvOvy2SMx1&gt;</text>
  </message>
  <message>
    <ts>2017-06-18T18:08:08.694777</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5ABF3BH7&gt; It *seems* to be a problem with the virtual dom losing track of what goes where. Have you tried setting `selected` on the selected option?</text>
  </message>
  <message>
    <ts>2017-06-18T18:08:58.697043</ts>
    <user>U48AEBJQ3</user>
    <text>You might also try &lt;http://package.elm-lang.org/packages/elm-lang/html/2.0.0/Html-Keyed#node&gt;</text>
  </message>
  <message>
    <ts>2017-06-18T18:10:03.700228</ts>
    <user>U5ABF3BH7</user>
    <text>I tried that selected model.country, but get the error that selected is expecting a Bool</text>
  </message>
  <message>
    <ts>2017-06-18T18:10:06.700410</ts>
    <user>U5ABF3BH7</user>
    <text>```The argument to function `selected` is causing a mismatch.

88|                                                                                                                       selected model.country
                                                                                                                                   ^^^^^^^^^^^^^
Function `selected` is expecting the argument to be:

    Bool

But it is:

    String```</text>
  </message>
  <message>
    <ts>2017-06-18T18:10:41.702556</ts>
    <user>U5ABF3BH7</user>
    <text>Since I don't know in advance what the bool is I am a bit confused as what I should put for selected</text>
  </message>
  <message>
    <ts>2017-06-18T18:12:13.707430</ts>
    <user>U48AEBJQ3</user>
    <text>You have to put `selected True` in the currently selected `option` tag. But I think you should try `Keyed.node` first.</text>
  </message>
  <message>
    <ts>2017-06-18T18:12:53.709358</ts>
    <user>U5ABF3BH7</user>
    <text>Ok, thanks, I will try that</text>
  </message>
  <message>
    <ts>2017-06-18T18:14:01.712564</ts>
    <user>U48AEBJQ3</user>
    <text>```
countryOptionList id =
    List.map (\country -&amp;gt; option [selected (country.id == id), value country.id] [text country.name])
```</text>
  </message>
  <message>
    <ts>2017-06-18T18:17:04.721764</ts>
    <user>U5ABF3BH7</user>
    <text>Ok, thanks &lt;@U48AEBJQ3&gt;</text>
  </message>
  <message>
    <ts>2017-06-18T21:03:25.341734</ts>
    <user>U5HM74BD0</user>
    <text>Is there an Elm package for encoding my model to json? I want to store my model in localStorage.</text>
  </message>
  <message>
    <ts>2017-06-18T21:21:23.435354</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5HM74BD0&gt; `Json.Encode`?</text>
  </message>
  <message>
    <ts>2017-06-18T21:23:31.447131</ts>
    <user>U5HM74BD0</user>
    <text>&lt;@U48AEBJQ3&gt;, how would you work with tuples?</text>
  </message>
  <message>
    <ts>2017-06-18T21:24:40.453648</ts>
    <user>U48AEBJQ3</user>
    <text>Either in separate fields in an object or in a list.</text>
  </message>
  <message>
    <ts>2017-06-18T21:27:22.468983</ts>
    <user>U48AEBJQ3</user>
    <text>```
tupleToList : (a -&amp;gt; Value) -&amp;gt; (b -&amp;gt; Value) -&amp;gt; (a, b) -&amp;gt; Value
tupleToList xEncoder yEncoder (x, y) =
    Encode.list [xEncoder x, yEncoder y]
```</text>
  </message>
  <message>
    <ts>2017-06-18T21:30:46.487925</ts>
    <user>U5HM74BD0</user>
    <text>&lt;@U48AEBJQ3&gt; I see, yes.  Okay, I'll give it a whirl.  Am I thinking about this right: the model gets encoded into json; that json gets passed to javascript side, which can then convert it to a string representation; it can then store that string in localStorage. To decode, reverse the process?</text>
  </message>
  <message>
    <ts>2017-06-18T21:32:29.498017</ts>
    <user>U48AEBJQ3</user>
    <text>A `Value` isn't actually JSON, it is a JavaScript value. You have to call &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Json-Encode#encode&gt; to turn it into a JSON string. You are free to do this on either side of the port.</text>
  </message>
  <message>
    <ts>2017-06-18T21:33:48.505091</ts>
    <user>U5HM74BD0</user>
    <text>Okay, thanks very much.</text>
  </message>
  <message>
    <ts>2017-06-18T22:40:28.886675</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U48AEBJQ3&gt;, thanks you for your help earlier, it did solve the issue!</text>
  </message>
  <message>
    <ts>2017-06-19T00:34:35.524985</ts>
    <user>U5WDQMREK</user>
    <text>Hey all, wondering why `{a.b | c = d}` is not compiling? This type of `x...y | ...` merge seems pretty useful.</text>
  </message>
  <message>
    <ts>2017-06-19T00:38:52.547345</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5WDQMREK&gt; the record update syntax requires a single identifier, so you can't have `.` in there</text>
  </message>
  <message>
    <ts>2017-06-19T00:39:02.548173</ts>
    <user>U0PBSF05S</user>
    <text>&lt;http://faq.elm-community.org/#how-can-i-change-the-value-of-a-nested-field&gt;</text>
  </message>
  <message>
    <ts>2017-06-19T01:14:33.751655</ts>
    <user>U5MKS6L80</user>
    <text>hey all, i've been scratching my head about this for a while: is there any way to achieve the effect of emitting multiple `Cmd`s _in order_ (i.e. not executed in random order, like in `Cmd.batch`) (the use case is that i'm using `port`s)</text>
  </message>
  <message>
    <ts>2017-06-19T01:16:10.761159</ts>
    <user>U5MKS6L80</user>
    <text>so far the only workaround i could think of was: give a pair to all my `port`s that return `Sub`s which i could use to chain stuff (bloats the `port` module) or to use a timer to fire off the next `Cmd` in the chain</text>
  </message>
  <message>
    <ts>2017-06-19T01:16:59.765897</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5MKS6L80&gt; there isn't a way to order `Cmd`s besides having them go through `update`</text>
  </message>
  <message>
    <ts>2017-06-19T01:17:43.770037</ts>
    <user>U153UK3FA</user>
    <text>you can sequence `Task`s and things like http requests can be converted to `Task`s so they can be sequenced</text>
  </message>
  <message>
    <ts>2017-06-19T01:18:16.773161</ts>
    <user>U5MKS6L80</user>
    <text>&lt;@U153UK3FA&gt; how would having them go through `update` work? i would be OK with that workaround, but i couldn't figure it out either</text>
  </message>
  <message>
    <ts>2017-06-19T01:18:47.776191</ts>
    <user>U153UK3FA</user>
    <text>if you need to send a sequence of requests to a `port` you should make that `port` take a list of things to do</text>
  </message>
  <message>
    <ts>2017-06-19T01:19:20.779400</ts>
    <user>U5MKS6L80</user>
    <text>basically where i get stuck is that no matter what i do i can only fire off one `Cmd` at a time, but because these `Cmd`s come from `port`s they don't generate messages to keep the "state machine" moving</text>
  </message>
  <message>
    <ts>2017-06-19T01:22:05.795736</ts>
    <user>U5MKS6L80</user>
    <text>that was actually one of the earlier things i considered... but there i get stuck when providing the arguments (i tried heterogenous argument lists, but that didn't work 'cause heterogenous lists, and the only other option i could see was "everything is a string" which feels distinctively un-Elm-y :D)</text>
  </message>
  <message>
    <ts>2017-06-19T01:22:56.800651</ts>
    <user>U3SJEDR96</user>
    <text>You can send out a json.encode'd value</text>
  </message>
  <message>
    <ts>2017-06-19T01:23:56.806271</ts>
    <user>U5MKS6L80</user>
    <text>ah yeah good point! i've seen that suggestion somewhere. however in this case i'm working with video image data, and i cringe at the idea of having to json encode every frame :smile:</text>
  </message>
  <message>
    <ts>2017-06-19T01:24:10.807547</ts>
    <user>U153UK3FA</user>
    <text>you can also use a tuple or a record</text>
  </message>
  <message>
    <ts>2017-06-19T01:24:50.811158</ts>
    <user>U5MKS6L80</user>
    <text>ah nice</text>
  </message>
  <message>
    <ts>2017-06-19T01:24:53.811473</ts>
    <user>U5MKS6L80</user>
    <text>i might try that</text>
  </message>
  <message>
    <ts>2017-06-19T01:27:25.826141</ts>
    <user>U5MKS6L80</user>
    <text>so basically i'd have a single `port` that takes `List (String, Args)` where the first element is the function name to call, and `type alias Args = { fn1Args: Maybe ... , fn2Args: Maybe ..., ... }`</text>
  </message>
  <message>
    <ts>2017-06-19T01:27:51.828443</ts>
    <user>U5MKS6L80</user>
    <text>and all other methods in the `port` module are wrappers around that to provide the actual methods in some composable way</text>
  </message>
  <message>
    <ts>2017-06-19T01:34:13.867572</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5MKS6L80&gt; You might also consider writing functions in JS for the various things you'd want to do from Elm</text>
  </message>
  <message>
    <ts>2017-06-19T01:35:36.876049</ts>
    <user>U5MKS6L80</user>
    <text>yeah, but then in theory i'd have to provide all combinations and orders of the various methods on the port api (granted, some of those don't make sense, but still)</text>
  </message>
  <message>
    <ts>2017-06-19T01:35:53.877738</ts>
    <user>U153UK3FA</user>
    <text>`ports` being async makes them a lot more like network connections than function calls</text>
  </message>
  <message>
    <ts>2017-06-19T01:40:24.904427</ts>
    <user>U5MKS6L80</user>
    <text>yeah, but e.g. as you pointed out with `Task`s there are built-in primitives for chaining them</text>
  </message>
  <message>
    <ts>2017-06-19T01:41:32.911818</ts>
    <user>U5MKS6L80</user>
    <text>anyway, thanks for the suggestions! i'll try them soon hopefully</text>
  </message>
  <message>
    <ts>2017-06-19T01:41:50.913695</ts>
    <user>U153UK3FA</user>
    <text>yep, but `ports` can't be converted to `Task`s</text>
  </message>
  <message>
    <ts>2017-06-19T01:42:26.917512</ts>
    <user>U5MKS6L80</user>
    <text>yeah i was just going to say that `Task`s seem to be the "network connection" type things in Elm</text>
  </message>
  <message>
    <ts>2017-06-19T01:43:36.924343</ts>
    <user>U153UK3FA</user>
    <text>the difference between `Cmd`s and `Task`s is that Tasks can fail and `Cmd`s can't</text>
  </message>
  <message>
    <ts>2017-06-19T01:45:12.934353</ts>
    <user>U153UK3FA</user>
    <text>It's been suggested to make ports return Tasks but this exposes your Elm app to the error prone nature of JS</text>
  </message>
  <message>
    <ts>2017-06-19T01:45:51.938537</ts>
    <user>U153UK3FA</user>
    <text>ie. if you send on a port and never get a reply (because JS errored), what should the Elm app do?</text>
  </message>
  <message>
    <ts>2017-06-19T02:12:30.121765</ts>
    <user>U5GJ5FEAU</user>
    <text>&lt;@U153UK3FA&gt; that sounds like a good way to differentiate between `Task`s and `Port`s.</text>
  </message>
  <message>
    <ts>2017-06-19T02:20:31.180720</ts>
    <user>U0CLDU8UB</user>
    <text>&lt;@U5ABF3BH7&gt; Can you try `onChange` instead of `onInput`?</text>
  </message>
  <message>
    <ts>2017-06-19T05:49:32.781444</ts>
    <user>U5L2XPH54</user>
    <text>Can some help me to understand 

```
login : { r | email : String, password : String } -&amp;gt; Http.Request User
```

&lt;https://github.com/rtfeldman/elm-spa-example/blob/master/src/Request/User.elm#L23&gt;

What is ` { r | ` ?</text>
  </message>
  <message>
    <ts>2017-06-19T05:51:07.804619</ts>
    <user>U0CLDU8UB</user>
    <text>"a record that has at least `email : String` and `password : String`, I don't care about anything else that may be in the record"</text>
  </message>
  <message>
    <ts>2017-06-19T05:53:44.841954</ts>
    <user>U5L2XPH54</user>
    <text>thanks</text>
  </message>
  <message>
    <ts>2017-06-19T08:26:33.733144</ts>
    <user>U5TQ5FZA5</user>
    <text>Hi! I'm wondering how to model a dictionary in Elm which has arbitrary keys whose values are either a string  or another dictionary (which in turn has arbitrary keys and values of String | Dictionary). Is this possible in Elm?</text>
  </message>
  <message>
    <ts>2017-06-19T08:27:27.745497</ts>
    <user>U5TQ5FZA5</user>
    <text>So far the only examples I've seen refer to Dictionaries which aren't nested and whose keys are known.</text>
  </message>
  <message>
    <ts>2017-06-19T08:36:15.873344</ts>
    <user>U0CLDU8UB</user>
    <text>What do you mean by "arbitrary keys"?</text>
  </message>
  <message>
    <ts>2017-06-19T08:36:19.874471</ts>
    <user>U4872964V</user>
    <text>for arbitrary keys you could use &lt;http://package.elm-lang.org/packages/eeue56/elm-all-dict/latest&gt; and for values of either string or another dictionary you'd use a union type like so
```
type EitherStringOrDict
  = AString String
  | ADict YourDictType
```</text>
  </message>
  <message>
    <ts>2017-06-19T08:36:22.875095</ts>
    <user>U5WGZ2GTZ</user>
    <text>I am an Elm beginner, but I think this might be possible using the union types?</text>
  </message>
  <message>
    <ts>2017-06-19T08:37:32.891530</ts>
    <user>U5TQ5FZA5</user>
    <text>Arbitrary keys: {foo = ‘1', bar = ‘2'} or {fuzz = ‘3', bazz = ‘2'}. It doesn't matter what the keys are called, nor how many of them are present.</text>
  </message>
  <message>
    <ts>2017-06-19T08:38:25.904663</ts>
    <user>U1P6FFJ64</user>
    <text>&lt;@U5TQ5FZA5&gt; have you seen this package? &lt;http://package.elm-lang.org/packages/eeue56/elm-all-dict&gt; It has an EveryDict that allows the Dict keys to be of any type</text>
  </message>
  <message>
    <ts>2017-06-19T08:38:36.907329</ts>
    <user>U0EUHKVGB</user>
    <text>Eh, I don't think that's what they want</text>
  </message>
  <message>
    <ts>2017-06-19T08:38:48.910107</ts>
    <user>U0EUHKVGB</user>
    <text>&lt;@U5TQ5FZA5&gt;, i think you just want a plain dictionary</text>
  </message>
  <message>
    <ts>2017-06-19T08:39:06.914601</ts>
    <user>U0CLDU8UB</user>
    <text>So the key can be of type `String`</text>
  </message>
  <message>
    <ts>2017-06-19T08:39:18.917474</ts>
    <user>U0EUHKVGB</user>
    <text>Here's how your example would look: `Dict.fromList [ ("foo", 1), ("bar", 2) ]`</text>
  </message>
  <message>
    <ts>2017-06-19T08:39:20.918052</ts>
    <user>U5TQ5FZA5</user>
    <text>&lt;@U0EUHKVGB&gt; but don't I have to declare the keys and types then in my model?</text>
  </message>
  <message>
    <ts>2017-06-19T08:39:46.924362</ts>
    <user>U0EUHKVGB</user>
    <text>Yes. You cannot have varying keys in a record in Elm, because it makes the types impossible to figure out.</text>
  </message>
  <message>
    <ts>2017-06-19T08:39:59.927692</ts>
    <user>U0EUHKVGB</user>
    <text>You can have multiple different records</text>
  </message>
  <message>
    <ts>2017-06-19T08:40:07.929695</ts>
    <user>U0EUHKVGB</user>
    <text>But that's different from varying keys.</text>
  </message>
  <message>
    <ts>2017-06-19T08:41:49.956500</ts>
    <user>U5TQ5FZA5</user>
    <text>&lt;@U0CLDU8UB&gt; yeah - the keys are String and the values are String | Dict</text>
  </message>
  <message>
    <ts>2017-06-19T08:43:46.986538</ts>
    <user>U0CLDU8UB</user>
    <text>I think you might be confusing how Dicts and records work. Records have certain named fields, with specific types per field. Dicts are collections of for key and value pairs, where the keys need to be of one single type (strings are fine), and the values need to be of a single type, but that includes the union type &lt;@U4872964V&gt; showed earlier.</text>
  </message>
  <message>
    <ts>2017-06-19T08:43:49.987182</ts>
    <user>U4872964V</user>
    <text>ok, so then
```
type alias YourDictType = Dict String EitherStringOrDict
```</text>
  </message>
  <message>
    <ts>2017-06-19T08:43:58.989450</ts>
    <user>U0CLDU8UB</user>
    <text>yep, that</text>
  </message>
  <message>
    <ts>2017-06-19T09:24:03.700547</ts>
    <user>U5TQ5FZA5</user>
    <text>&lt;@U0CLDU8UB&gt; yep - I think you're right there!</text>
  </message>
  <message>
    <ts>2017-06-19T09:25:01.719393</ts>
    <user>U5TQ5FZA5</user>
    <text>Thanks, &lt;@U4872964V&gt;  - I'll try that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-19T11:44:12.934849</ts>
    <user>U3YA74FQD</user>
    <text>What's the best strategy when elm is reusing an input node (and erroneously displaying the old value)?
* Should I try to force a new empty value to the input?
* Should I look into `Html.Keyed`? I feel that this would be incompatible with packages like `rundis/elm-bootstrap`</text>
  </message>
  <message>
    <ts>2017-06-19T12:05:10.433544</ts>
    <user>U4RR7KX45</user>
    <text>Hello elmers :smile: How can I decode a json list? I have the following function:

```
fetchRandomQuotes : Http.Request (List String)
fetchRandomQuote =
    Http.get randomQuoteUrl decodeQuoteUrl

decodeQuoteUrl : Decoder (List String)
decodeQuoteUrl list =
    &lt;http://Decode.at|Decode.at&gt; [ "" ] list
```</text>
  </message>
  <message>
    <ts>2017-06-19T12:06:05.454269</ts>
    <user>U4RR7KX45</user>
    <text>I couldn't find a good tutorial that explains this so I sort of followed the cats git example</text>
  </message>
  <message>
    <ts>2017-06-19T12:06:08.455558</ts>
    <user>U4RR7KX45</user>
    <text>but couldn't get far</text>
  </message>
  <message>
    <ts>2017-06-19T12:06:29.463255</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U4RR7KX45&gt; What is in the list?</text>
  </message>
  <message>
    <ts>2017-06-19T12:07:07.476953</ts>
    <user>U4RR7KX45</user>
    <text>at the moment I'm just hard coding it on the api</text>
  </message>
  <message>
    <ts>2017-06-19T12:07:15.479647</ts>
    <user>U4RR7KX45</user>
    <text>and it's just an array of strings</text>
  </message>
  <message>
    <ts>2017-06-19T12:07:30.485526</ts>
    <user>U48AEBJQ3</user>
    <text>`Decode.list : Decoder a -&amp;gt; Decoder (List a)` So you need to hand it a decoder for each item in the list and it will apply it across the whole list.</text>
  </message>
  <message>
    <ts>2017-06-19T12:07:36.487457</ts>
    <user>U4RR7KX45</user>
    <text>but later on, I want to use the api that returns objects:
```
{"ID":1368,"title":"Thomas Manss","content":"&amp;lt;p&amp;gt;Decoration is just make-up for the wrinkles of the idea. &amp;lt;\/p&amp;gt;\n","link":"https:\/\/quotesondesign.com\/thomas-manss-2\/"}
```</text>
  </message>
  <message>
    <ts>2017-06-19T12:07:54.494007</ts>
    <user>U48AEBJQ3</user>
    <text>Then it is `Decode.field "myField" (list string)`</text>
  </message>
  <message>
    <ts>2017-06-19T12:08:33.507969</ts>
    <user>U48AEBJQ3</user>
    <text>Later on you will write a decoder for a single object and go `Decode.field "myField" (list myObjectDecoder)`</text>
  </message>
  <message>
    <ts>2017-06-19T12:09:24.526025</ts>
    <user>U4RR7KX45</user>
    <text>what does myField refer to in my case?</text>
  </message>
  <message>
    <ts>2017-06-19T12:09:48.534585</ts>
    <user>U4RR7KX45</user>
    <text>a specific field like title?</text>
  </message>
  <message>
    <ts>2017-06-19T12:10:03.539915</ts>
    <user>U48AEBJQ3</user>
    <text>A field in the JSON object. If your top-level is a list of strings, you *only* use `(list string)`</text>
  </message>
  <message>
    <ts>2017-06-19T12:10:38.552906</ts>
    <user>U48AEBJQ3</user>
    <text>Right, so in the object you gave as an example, you might have `Decode.field "ID" int`</text>
  </message>
  <message>
    <ts>2017-06-19T12:12:11.586364</ts>
    <user>U48AEBJQ3</user>
    <text>If you want to decode the entire thing:

```
Decode.map4 mkThing
    (Decode.field "ID" int)
    (Decode.field "title" string)
    (Decode.field "content" string)
    (Decode.field "link" string)
```</text>
  </message>
  <message>
    <ts>2017-06-19T12:12:21.589849</ts>
    <user>U4RR7KX45</user>
    <text>I think I have a mistake in the import too, as it says Cannot find variable Decode.field</text>
  </message>
  <message>
    <ts>2017-06-19T12:12:38.595756</ts>
    <user>U48AEBJQ3</user>
    <text>You can probably just use `field`</text>
  </message>
  <message>
    <ts>2017-06-19T12:12:44.598108</ts>
    <user>U4RR7KX45</user>
    <text>```import Json.Decode exposing (..)```</text>
  </message>
  <message>
    <ts>2017-06-19T12:12:47.599198</ts>
    <user>U48AEBJQ3</user>
    <text>or `import Json.Decode as Decode`</text>
  </message>
  <message>
    <ts>2017-06-19T12:12:53.601223</ts>
    <user>U4RR7KX45</user>
    <text>ah ok</text>
  </message>
  <message>
    <ts>2017-06-19T12:14:35.637776</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U3YA74FQD&gt; I don't know about elm-bootstrap, you might ask in &lt;#C3U2E3JRX|elm-bootstrap&gt;. Normally, you should use `Html.Keyed` to give the virtual dom extra information about when something is the same or different from something else.</text>
  </message>
  <message>
    <ts>2017-06-19T12:18:09.714852</ts>
    <user>U3YA74FQD</user>
    <text>Yeah, I just tried it and it works</text>
  </message>
  <message>
    <ts>2017-06-19T12:18:20.718801</ts>
    <user>U4RR7KX45</user>
    <text>&lt;@U48AEBJQ3&gt; what should `mkThing` do?</text>
  </message>
  <message>
    <ts>2017-06-19T12:18:45.728037</ts>
    <user>U3YA74FQD</user>
    <text>I'm writing a spa so I put a key on the problematic pages</text>
  </message>
  <message>
    <ts>2017-06-19T12:19:52.751176</ts>
    <user>U48AEBJQ3</user>
    <text>`mkThing : Int -&amp;gt; String -&amp;gt; String -&amp;gt; String -&amp;gt; YourFancyType`

This could be (but doesn't have to be)

`type YourFancyType = MkThing Int String String String`</text>
  </message>
  <message>
    <ts>2017-06-19T12:20:34.766727</ts>
    <user>U4RR7KX45</user>
    <text>ah so it should be a type I get it now :smile:</text>
  </message>
  <message>
    <ts>2017-06-19T12:20:39.768601</ts>
    <user>U4RR7KX45</user>
    <text>damn it's so confusing</text>
  </message>
  <message>
    <ts>2017-06-19T12:20:54.773979</ts>
    <user>U48AEBJQ3</user>
    <text>It's... very different from what many people have experience with.</text>
  </message>
  <message>
    <ts>2017-06-19T12:21:09.778994</ts>
    <user>U4RR7KX45</user>
    <text>so if I had 20 fields, do I need to write types for each?</text>
  </message>
  <message>
    <ts>2017-06-19T12:21:21.783522</ts>
    <user>U4RR7KX45</user>
    <text>I mean, define all of them in the type</text>
  </message>
  <message>
    <ts>2017-06-19T12:22:14.801976</ts>
    <user>U48AEBJQ3</user>
    <text>If you want to use all 20 fields to construct some type, you would need a function which could take all of those. Although, I might break it up into smaller pieces at that size.</text>
  </message>
  <message>
    <ts>2017-06-19T12:22:50.814747</ts>
    <user>U300LJUAK</user>
    <text>If you need to decode complex type aliases, you should look into elm-decode-pipeline &lt;https://github.com/NoRedInk/elm-decode-pipeline&gt; :wink:</text>
  </message>
  <message>
    <ts>2017-06-19T12:23:59.839358</ts>
    <user>U4RR7KX45</user>
    <text>I guess that makes sense elm-way.

Oh and also in this example:
&lt;http://elm-lang.org/examples/http&gt;
```
decodeGifUrl : Decode.Decoder String
decodeGifUrl =
  &lt;http://Decode.at|Decode.at&gt; ["data", "image_url"] Decode.string
```
Why is this a constant? shouldn't it be a function?</text>
  </message>
  <message>
    <ts>2017-06-19T12:24:28.849544</ts>
    <user>U4RR7KX45</user>
    <text>oh wait mine is the same :smile: nvm</text>
  </message>
  <message>
    <ts>2017-06-19T12:24:38.852658</ts>
    <user>U48AEBJQ3</user>
    <text>One useful thing that you might not have noticed in the documentation is that:

```
type alias YourFancyRecordAlias =
    { id : Int
    , title : String
    , content : String
    , link : String
    }
```

This gives you an auto-generated constructor `YourFancyRecordAlias : Int -&amp;gt; String -&amp;gt; String -&amp;gt; String -&amp;gt; YourFancyRecordAlias`</text>
  </message>
  <message>
    <ts>2017-06-19T12:30:25.975471</ts>
    <user>U4RR7KX45</user>
    <text>yeah I saw that. But now I have tons of type related issues.
so I created the type
```
type alias Content =
    { id : Int
    , content : String
    }
```

and then my decoder
```
decodeQuoteUrl : Decode.Decoder String
decodeQuoteUrl =
    Decode.map2 Content
        (Decode.field "ID" &lt;http://Decode.int|Decode.int&gt;)
        (Decode.field "content" Decode.string)
```
but this gives me an error saying that it should be `Decode.Decoder Content`, not `String` for some reason. If I change that to `Decode.Decoder Content`, then this one goes crazy:

```
fetchRandomQuoteCmd : Cmd Msg
fetchRandomQuoteCmd =
    Http.send FetchRandomQuoteCompleted fetchRandomQuote
```</text>
  </message>
  <message>
    <ts>2017-06-19T12:31:22.996044</ts>
    <user>U48AEBJQ3</user>
    <text>Because `FetchRandomQuoteCompleted` is a constructor that takes a `String` not a `Content`?</text>
  </message>
  <message>
    <ts>2017-06-19T12:31:57.008225</ts>
    <user>U4RR7KX45</user>
    <text>indeed it is :smile:</text>
  </message>
  <message>
    <ts>2017-06-19T12:32:11.012796</ts>
    <user>U4RR7KX45</user>
    <text>damn it</text>
  </message>
  <message>
    <ts>2017-06-19T12:38:23.138278</ts>
    <user>U4RR7KX45</user>
    <text>ok one more question please. I want to extract just the content fields from that list, to have a list of string. how can I do that? I tried this
```
    Decode.map String
        (Decode.field "content" Decode.string)
```</text>
  </message>
  <message>
    <ts>2017-06-19T12:39:11.153723</ts>
    <user>U48AEBJQ3</user>
    <text>So, you have a list of objects which each have a "content" field, and you want those collected as a `List String`?</text>
  </message>
  <message>
    <ts>2017-06-19T12:39:28.159334</ts>
    <user>U4RR7KX45</user>
    <text>yeah, I want to extract the content from them</text>
  </message>
  <message>
    <ts>2017-06-19T12:39:34.161434</ts>
    <user>U23SA861Y</user>
    <text>`Decode.list (Decode.field "content" Decode.string)`</text>
  </message>
  <message>
    <ts>2017-06-19T12:40:18.175665</ts>
    <user>U4RR7KX45</user>
    <text>yes! that's it :smile:</text>
  </message>
  <message>
    <ts>2017-06-19T12:40:20.176470</ts>
    <user>U4RR7KX45</user>
    <text>thank you</text>
  </message>
  <message>
    <ts>2017-06-19T13:36:16.335678</ts>
    <user>U5H8JJP24</user>
    <text>Hi, I've struggeling with a problem for a while now. I got a subscription which decodes an object as a string from the localstorage. I struggle quite some time with this issue, since my compiler gives me following error:
```
Error: "Expecting an object with a field named `id` but instead got: \"{\\\"id\\\":3,\\\"name\\\":\\\"12d3\\\",\\\"locations\\\":[{\\\"index\\\":1,\\\"description\\\":\\\"\\\",\\\"city\\\":\\\"\\\",\\\"country\\\":\\\"United Kingdom\\\",\\\"name\\\":\\\"Reigate Hill Golf Club\\\",\\\"state\\\":\\\"Surrey\\\",\\\"coordinates\\\":{\\\"lat\\\":51.263834,\\\"lng\\\":-0.161863}}, ...
```
I tried to make every fiel optional except name, and it seems he cannot parse the object.</text>
  </message>
  <message>
    <ts>2017-06-19T13:38:34.383885</ts>
    <user>U0LPMPL2U</user>
    <text>This string looks doubly escaped?</text>
  </message>
  <message>
    <ts>2017-06-19T13:38:50.389736</ts>
    <user>U5H8JJP24</user>
    <text>so the \\\ are not normal</text>
  </message>
  <message>
    <ts>2017-06-19T13:38:56.391787</ts>
    <user>U0LPMPL2U</user>
    <text>right</text>
  </message>
  <message>
    <ts>2017-06-19T13:39:15.398559</ts>
    <user>U5H8JJP24</user>
    <text>actually I do it the same way as in the feldman spa example</text>
  </message>
  <message>
    <ts>2017-06-19T13:39:18.399728</ts>
    <user>U0LPMPL2U</user>
    <text>it looks like the `"` got escaped once as `\"` and then re-escaped as `\\\"`</text>
  </message>
  <message>
    <ts>2017-06-19T13:40:56.434616</ts>
    <user>U3SJEDR96</user>
    <text>that looks like encoding to JSON twice... Possibly you're using `Json.Encode.encode` on the Elm side _and_ `JSON.stringify(..)` on the JS side? or .. something vaguely like that?</text>
  </message>
  <message>
    <ts>2017-06-19T13:41:50.453200</ts>
    <user>U5H8JJP24</user>
    <text>ouh i am reading directly from the locastorage as a string :sleepy:</text>
  </message>
  <message>
    <ts>2017-06-19T13:42:17.462758</ts>
    <user>U5H8JJP24</user>
    <text>yep JSON.parse on the js side fixed my issue... thx guys</text>
  </message>
  <message>
    <ts>2017-06-19T13:50:12.629962</ts>
    <user>U5SJJD85B</user>
    <text>So this might be a odd question, but do Elm users generally prefer to do function composition via `f &amp;gt;&amp;gt; g` or `g &amp;lt;&amp;lt; f`?</text>
  </message>
  <message>
    <ts>2017-06-19T13:51:36.661554</ts>
    <user>U3LUC6SNS</user>
    <text>I'be been using code like that below to update nested records.  Is there a better/more elegant way?
```
toggleMenu model =
    let
        appState =
            model.appState

        newAppState =
            { appState | menuDropped = (not appState.menuDropped) }
    in
        ( { model | appState = newAppState }, Cmd.none )
```</text>
  </message>
  <message>
    <ts>2017-06-19T13:52:49.688204</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U5SJJD85B&gt; I've seen both used. Maybe a slight preference for `&amp;lt;&amp;lt;` ?</text>
  </message>
  <message>
    <ts>2017-06-19T13:53:12.696332</ts>
    <user>U0LPMPL2U</user>
    <text>`&amp;lt;&amp;lt;` can often read better such as `not &amp;lt;&amp;lt; .isActive`</text>
  </message>
  <message>
    <ts>2017-06-19T13:55:19.742847</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U3LUC6SNS&gt; you could break out a function `toggleAppStateMenu`</text>
  </message>
  <message>
    <ts>2017-06-19T13:56:05.759519</ts>
    <user>U0LPMPL2U</user>
    <text>e.g.
```
toggleMenu model =
        ( { model | appState = toggleAppStateMenu model.appState }, Cmd.none )
```</text>
  </message>
  <message>
    <ts>2017-06-19T13:57:03.780920</ts>
    <user>U0LPMPL2U</user>
    <text>Alternatively you could flatten your model structure such that `menuDropped` was a key on the top-level `Model`</text>
  </message>
  <message>
    <ts>2017-06-19T13:57:54.799540</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U0LPMPL2U&gt; Thanks!  I think I will go with the first suggestion.  My model is is already quite large</text>
  </message>
  <message>
    <ts>2017-06-19T14:05:47.974103</ts>
    <user>U5SJJD85B</user>
    <text>&lt;@U0LPMPL2U&gt; thanks!</text>
  </message>
  <message>
    <ts>2017-06-19T14:28:43.456685</ts>
    <user>U5W4G2SQ5</user>
    <text>Would Elm / Electron be a good choice for xplat desktop app dev?</text>
  </message>
  <message>
    <ts>2017-06-19T14:33:19.556107</ts>
    <user>U3SJEDR96</user>
    <text>You'll probably need some JS+ports to handle the electron-specific API's, but it's certainly feasible</text>
  </message>
  <message>
    <ts>2017-06-19T14:34:43.586111</ts>
    <user>U3SJEDR96</user>
    <text>also, &lt;@U0F7JPK36&gt; has some experience with this. Probably not a good idea for your first elm project, though, but still.</text>
  </message>
  <message>
    <ts>2017-06-19T14:37:18.642288</ts>
    <user>U5W4G2SQ5</user>
    <text>&lt;@U3SJEDR96&gt; thanks for the info. agree not for a first project, but it's what I'd use it for if I like Elm</text>
  </message>
  <message>
    <ts>2017-06-19T14:38:04.658117</ts>
    <user>U3SJEDR96</user>
    <text>there are some resources, too - a cursory google for `elm electron` reveals some useful links, and quite a few outdated links</text>
  </message>
  <message>
    <ts>2017-06-19T15:43:00.979278</ts>
    <user>U5C8AUE9F</user>
    <text>Anyone here used elm-bootstrap?</text>
  </message>
  <message>
    <ts>2017-06-19T15:44:04.999574</ts>
    <user>U5C8AUE9F</user>
    <text>When my navbar collapses into a hamburger menu I cannot click to open it. And it does not generate any Sub Msg.</text>
  </message>
  <message>
    <ts>2017-06-19T15:57:07.257523</ts>
    <user>U5W3JQW2W</user>
    <text>Anyone have any luck using &lt;https://github.com/ohanhi/elm-native-ui&gt;? I have a choice between using ReactJS for this app I'm building, or Elm, which looks a lot more appealing from a language standpoint.</text>
  </message>
  <message>
    <ts>2017-06-19T16:04:26.411859</ts>
    <user>U0F7JPK36</user>
    <text>&lt;@U3SJEDR96&gt; I'd defer to other folks like &lt;@U3LGUAF54&gt; at this point</text>
  </message>
  <message>
    <ts>2017-06-19T16:05:20.430120</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;https://robots.thoughtbot.com/elm-native-ui-in-production&gt;</text>
  </message>
  <message>
    <ts>2017-06-19T16:27:46.875472</ts>
    <user>U3SJEDR96</user>
    <text>Fair enough :) also, enjoy your first day at nri!</text>
  </message>
  <message>
    <ts>2017-06-19T17:53:40.398572</ts>
    <user>U0F7JPK36</user>
    <text>thanks!! it's been way cool</text>
  </message>
  <message>
    <ts>2017-06-19T18:31:17.898758</ts>
    <user>U5W4G2SQ5</user>
    <text>i found this, looks pretty good, &lt;https://www.youtube.com/watch?v=FP4P7_c4meY&gt;</text>
  </message>
  <message>
    <ts>2017-06-19T18:46:10.070584</ts>
    <user>U2CL1FKDG</user>
    <text>I'm trying to rewrite a react/redux version of Game Of Life in elm. I have a few buttons on the page that allow you to change the update speed, for example from every 350ms to every 50ms. I started to make a subscription like so: `Time.every (model.speed * Time.millisecond) NextGen`, but I'm wondering if I should use the AnimationFrame package instead. Is `Time.every` fine for my use case? If not, how do I set a specific update frequency using the AnimationFrame package?</text>
  </message>
  <message>
    <ts>2017-06-19T18:47:49.088945</ts>
    <user>U59AF21LJ</user>
    <text>Hi! I'm experiencing some problem while trying to load a local JSON file. I get a NetworkError and the console says "ross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension, https." It might be because the path I'm providing is interpreted as some `file://`.</text>
  </message>
  <message>
    <ts>2017-06-19T18:48:05.091837</ts>
    <user>U0EUHKVGB</user>
    <text>Yep. You need to use a server to serve the files</text>
  </message>
  <message>
    <ts>2017-06-19T18:48:10.092686</ts>
    <user>U59AF21LJ</user>
    <text>Do you have an idea of what is wrong?</text>
  </message>
  <message>
    <ts>2017-06-19T18:48:17.093882</ts>
    <user>U23SA861Y</user>
    <text>The animation stuff is to avoid jitter, but for a game of life I would expect `Time.every` to be fine</text>
  </message>
  <message>
    <ts>2017-06-19T18:48:22.094896</ts>
    <user>U0EUHKVGB</user>
    <text>A good way is to use python, which might be installed for you.</text>
  </message>
  <message>
    <ts>2017-06-19T18:48:47.099192</ts>
    <user>U0EUHKVGB</user>
    <text>Run `python2 -m SimpleHttpServer` in the folder where your json file and html files are</text>
  </message>
  <message>
    <ts>2017-06-19T18:48:56.100848</ts>
    <user>U0EUHKVGB</user>
    <text>or, `python3 -m http.server`</text>
  </message>
  <message>
    <ts>2017-06-19T18:48:56.100876</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U0EUHKVGB&gt; Oh, you mean it would work that way.</text>
  </message>
  <message>
    <ts>2017-06-19T18:49:26.106310</ts>
    <user>U0EUHKVGB</user>
    <text>&lt;https://stackoverflow.com/a/21608670/2985975&gt;</text>
  </message>
  <message>
    <ts>2017-06-19T18:49:57.111851</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U0EUHKVGB&gt; Thanks a lot it works</text>
  </message>
  <message>
    <ts>2017-06-19T18:50:37.120055</ts>
    <user>U23SA861Y</user>
    <text>I'm not even sure what problem CORS is trying to prevent.</text>
  </message>
  <message>
    <ts>2017-06-19T18:51:14.126839</ts>
    <user>U2CL1FKDG</user>
    <text>Ok, thanks &lt;@U23SA861Y&gt;. Just curious, do you know how to tweak the animation speed using AnimationFrame? Or are you pretty much locked into the browser's refresh rate?</text>
  </message>
  <message>
    <ts>2017-06-19T18:52:48.144413</ts>
    <user>U23SA861Y</user>
    <text>It seems to be locked to the re-renderspeed of the browser</text>
  </message>
  <message>
    <ts>2017-06-19T19:00:49.233769</ts>
    <user>U3C4V6PMK</user>
    <text>&lt;@U2CL1FKDG&gt; You could keep track of the last time you updated your game cells, and in your animationframe func if the time delta is less than your preferred framerate, then skip the update</text>
  </message>
  <message>
    <ts>2017-06-19T19:03:31.263815</ts>
    <user>U2CL1FKDG</user>
    <text>Ah ok, thanks &lt;@U3C4V6PMK&gt;, good to know…</text>
  </message>
  <message>
    <ts>2017-06-19T22:03:32.816408</ts>
    <user>U5HM74BD0</user>
    <text>I read the Introduction to Elm and the section on ports, but I need help. I want to send a string to javascript when a button is clicked. How do I accomplish that on the Elm side?</text>
  </message>
  <message>
    <ts>2017-06-19T22:05:58.834662</ts>
    <user>U5W9GTVDJ</user>
    <text>:wave:</text>
  </message>
  <message>
    <ts>2017-06-19T22:09:50.862191</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5HM74BD0&gt; Is there some part of it that is problematic?</text>
  </message>
  <message>
    <ts>2017-06-19T22:10:18.865813</ts>
    <user>U5MKS6L80</user>
    <text>&lt;@U5HM74BD0&gt; in Elm:
```
port sendStringToJs : String -&amp;gt; Cmd msg
...
update model msg = case msg of
  IWantToSend s -&amp;gt; (model, sendStringToJs s)
...
```</text>
  </message>
  <message>
    <ts>2017-06-19T22:12:35.883296</ts>
    <user>U5HM74BD0</user>
    <text>Ah, I wasn't sure if I needed to add this in my update function, or some other way. Thanks, &lt;@U5MKS6L80&gt;.</text>
  </message>
  <message>
    <ts>2017-06-19T22:15:02.900330</ts>
    <user>U5MKS6L80</user>
    <text>yeah, my understanding is that basically you can emit `Cmd`s in two places: either in your `update` or in your `init` function. If it's in your `update` then that has to be a reaction to a message that your application can receive, and and if it's in `init` then it will run once at the beginning</text>
  </message>
  <message>
    <ts>2017-06-19T22:15:50.906263</ts>
    <user>U5MKS6L80</user>
    <text>in your case if would be a reaction to the message sent when the button was clicked</text>
  </message>
  <message>
    <ts>2017-06-19T22:42:27.092433</ts>
    <user>U5HM74BD0</user>
    <text>&lt;@U5MKS6L80&gt; That worked! Thanks so much.  Next, I need to work on reading the string back from JS into Elm. I guess I need to do that in my init function.</text>
  </message>
  <message>
    <ts>2017-06-19T22:45:28.113063</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5HM74BD0&gt; &lt;https://guide.elm-lang.org/interop/javascript.html&gt; gives more information about ports and interop with JS</text>
  </message>
  <message>
    <ts>2017-06-19T22:46:46.121943</ts>
    <user>U5MKS6L80</user>
    <text>yup, what jessta said. the part that applies to this question is the `suggestions` example on that page</text>
  </message>
  <message>
    <ts>2017-06-19T23:47:19.518330</ts>
    <user>U1XL8FMAA</user>
    <text>Any idea if there are more straightforward examples of pure component api design other than elm-sortable-table? Specifically, I am interested in how one folds in Cmds to the design, given the lack of an update function in the table api?</text>
  </message>
  <message>
    <ts>2017-06-19T23:48:16.523939</ts>
    <user>U1XL8FMAA</user>
    <text>I assume that you could store them in the component model and pull them out in the parent update…</text>
  </message>
  <message>
    <ts>2017-06-20T00:39:50.856114</ts>
    <user>U1XL8FMAA</user>
    <text>or not.. actually I don't really see how to handle Cmds…</text>
  </message>
  <message>
    <ts>2017-06-20T00:44:19.884367</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U1XL8FMAA&gt; there are no components</text>
  </message>
  <message>
    <ts>2017-06-20T00:44:54.887939</ts>
    <user>U153UK3FA</user>
    <text>any updating you want to do to the model and any `Cmd`s you want to emit are done in the top level `update`</text>
  </message>
  <message>
    <ts>2017-06-20T00:45:29.891798</ts>
    <user>U153UK3FA</user>
    <text>that `update` can call any functions it wants to produce those `Cmd` and do those model changes</text>
  </message>
  <message>
    <ts>2017-06-20T00:45:31.891962</ts>
    <user>U1XL8FMAA</user>
    <text>&lt;@U153UK3FA&gt; - you can obviously follow nested TEA and map child update to parent… sitll works</text>
  </message>
  <message>
    <ts>2017-06-20T00:46:01.895260</ts>
    <user>U1XL8FMAA</user>
    <text>by component i am not talking about a stateful component but a pure component.</text>
  </message>
  <message>
    <ts>2017-06-20T00:46:13.896453</ts>
    <user>U153UK3FA</user>
    <text>you're taking about a function</text>
  </message>
  <message>
    <ts>2017-06-20T00:46:46.899917</ts>
    <user>U1XL8FMAA</user>
    <text>the rest of the world calls them components… and they serve the same purpose</text>
  </message>
  <message>
    <ts>2017-06-20T00:46:51.900478</ts>
    <user>U5MKS6L80</user>
    <text>i'm thinking something like this:
```
Component.elm:

type ComponentMsgType = ...

update : ComponentModel -&amp;gt; ComponentMsgType -&amp;gt; (ComponentModel, Cmd ComponentMsgType)
update model msg = ...

Main.elm:

type Msg = ... | ComponentMsg ComponentMsgType

update model msg = case msg of
    ComponentMsg componentMsg -&amp;gt;
        let
            (newComponentModel, componentCmd) = Component.update model.componentModel componentMsg
        in
            ({model | componentModel = newComponentModel}, Cmd.map ComponentMsg componentCmd)
```</text>
  </message>
  <message>
    <ts>2017-06-20T00:47:34.904921</ts>
    <user>U3LGUAF54</user>
    <text>&lt;@U5W4G2SQ5&gt; &lt;@U3SJEDR96&gt; I'd say electron is a great fit for that, looks like the npm package already handles the hard part for cross platform there. Of course it's worth understanding that electron is a memory hog and may not be ideal for every use case. I made an open source electron/Elm app and it's been an awesome experience for me and my users! More than happy to share more if you have more if you have any questions.</text>
  </message>
  <message>
    <ts>2017-06-20T00:47:57.907280</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U1XL8FMAA&gt; you can call the function a ‘component' if you want, but it's confusing and leads to misunderstandings</text>
  </message>
  <message>
    <ts>2017-06-20T00:48:01.907698</ts>
    <user>U1XL8FMAA</user>
    <text>&lt;@U5MKS6L80&gt; interesting</text>
  </message>
  <message>
    <ts>2017-06-20T00:48:39.911804</ts>
    <user>U1XL8FMAA</user>
    <text>&lt;@U153UK3FA&gt; - I would argue that the opposite is actually true</text>
  </message>
  <message>
    <ts>2017-06-20T00:49:03.914148</ts>
    <user>U153UK3FA</user>
    <text>eg. the above common pattern is obvious when you think of it as a function</text>
  </message>
  <message>
    <ts>2017-06-20T00:49:41.917966</ts>
    <user>U1XL8FMAA</user>
    <text>&lt;@U153UK3FA&gt; try selling elm at work and getting into semantic nit picking when coworkers ask about how rich a set of library components there are…</text>
  </message>
  <message>
    <ts>2017-06-20T00:49:47.918586</ts>
    <user>U153UK3FA</user>
    <text>the question ‘how do I return `Cmd`s from a function?' is a weird question to ask</text>
  </message>
  <message>
    <ts>2017-06-20T00:50:27.922967</ts>
    <user>U153UK3FA</user>
    <text>‘how do I emit `Cmd`s from a child component?' makes it sound much more complicated</text>
  </message>
  <message>
    <ts>2017-06-20T00:50:31.923410</ts>
    <user>U1XL8FMAA</user>
    <text>that isn't the question. the question was how to adapt the pattern in elm-sortable-table to handle Cmds</text>
  </message>
  <message>
    <ts>2017-06-20T00:50:38.924185</ts>
    <user>U3LGUAF54</user>
    <text>&lt;@U5W4G2SQ5&gt; &lt;@U3SJEDR96&gt; I've been using a union type for my ipc messages, and setting up just a single port for all ipc messages. That's worked great for me actually. &lt;https://github.com/dillonkearns/mobster/blob/master/src/Ipc.elm&gt; &lt;https://github.com/dillonkearns/mobster/blob/master/setup.html#L161&gt;</text>
  </message>
  <message>
    <ts>2017-06-20T00:54:40.949778</ts>
    <user>U1XL8FMAA</user>
    <text>&lt;@U5MKS6L80&gt; your example looks like the .17 nested TEA pattern</text>
  </message>
  <message>
    <ts>2017-06-20T00:55:36.956067</ts>
    <user>U1XL8FMAA</user>
    <text>I thought that the advice was to move away from this pattern</text>
  </message>
  <message>
    <ts>2017-06-20T00:55:52.957912</ts>
    <user>U5MKS6L80</user>
    <text>oh, this is just something i came up with as a first guess</text>
  </message>
  <message>
    <ts>2017-06-20T00:55:57.958495</ts>
    <user>U5MKS6L80</user>
    <text>didn't know that this was an anti-pattern</text>
  </message>
  <message>
    <ts>2017-06-20T00:56:07.959606</ts>
    <user>U5MKS6L80</user>
    <text>do you have any links about it?</text>
  </message>
  <message>
    <ts>2017-06-20T00:57:20.967415</ts>
    <user>U1XL8FMAA</user>
    <text>@weiszman the pattern was completely scrubbed from "An Introduction To Elm" for .18. It was in the .17 version if i remember correctly</text>
  </message>
  <message>
    <ts>2017-06-20T00:57:26.968064</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U1XL8FMAA&gt; elm-sortable-table has a bunch of functions that modify it's `State` type and a `view` function to display it as Html. If you want it to produce `Cmd`s then write a function that takes a Msg you want to `Cmd` to produce and have it return the `Cmd`</text>
  </message>
  <message>
    <ts>2017-06-20T00:57:37.969302</ts>
    <user>U1XL8FMAA</user>
    <text>sorry &lt;@U5MKS6L80&gt; i mean</text>
  </message>
  <message>
    <ts>2017-06-20T00:58:20.973979</ts>
    <user>U5MKS6L80</user>
    <text>ah i see. i started with .18 so guess that's why i never encountered that</text>
  </message>
  <message>
    <ts>2017-06-20T00:59:32.981823</ts>
    <user>U153UK3FA</user>
    <text>```
getTheTime: (a -&amp;gt; msg) -&amp;gt; Cmd msg
getTheTime msg = Task.perform msg Time.now
```</text>
  </message>
  <message>
    <ts>2017-06-20T01:02:31.003372</ts>
    <user>U153UK3FA</user>
    <text>if your Cmd needs data from a `State` value, then pass that in too</text>
  </message>
  <message>
    <ts>2017-06-20T01:03:04.007026</ts>
    <user>U1XL8FMAA</user>
    <text>&lt;@U153UK3FA&gt; elm-sortable-table does away with the table.update and Table.Msg . You configure  a function to transform State -&amp;gt; Msg right? That gets called in the table view… the role of table.update seems to be baked in to the table.view</text>
  </message>
  <message>
    <ts>2017-06-20T01:05:21.022546</ts>
    <user>U153UK3FA</user>
    <text>`view : Config data msg -&amp;gt; State -&amp;gt; List data -&amp;gt; Html msg` view is a function that takes a `Config` and a `State` and some data and returns some Html to display</text>
  </message>
  <message>
    <ts>2017-06-20T01:06:39.031690</ts>
    <user>U153UK3FA</user>
    <text>elm-sortable-table exposes functions to operate on the `Config` and `State` values instead of hiding those functions behind `Table.Msg` values being passed to a single `Table.update` function</text>
  </message>
  <message>
    <ts>2017-06-20T01:14:16.081357</ts>
    <user>U1XL8FMAA</user>
    <text>&lt;@U153UK3FA&gt; yes. I see that. However, I don't really see how you extend the pattern to account for the desire to produce a Cmd from the table. IE Lets say i am creating random-sortable-table which i want to handle from within the table… I don't see where as the author of random-sortable-table i would orchestrate this….</text>
  </message>
  <message>
    <ts>2017-06-20T01:16:05.093286</ts>
    <user>U1XL8FMAA</user>
    <text>&lt;@U153UK3FA&gt; and i know that i am being sloppy with my terminology. because i understand that the table isnt actually producing the random value….</text>
  </message>
  <message>
    <ts>2017-06-20T01:16:47.097724</ts>
    <user>U153UK3FA</user>
    <text>in response to a user action?</text>
  </message>
  <message>
    <ts>2017-06-20T01:18:00.105936</ts>
    <user>U1XL8FMAA</user>
    <text>&lt;@U153UK3FA&gt; in response to an event defined in the table's view and without having to define another Msg on the part of the consumer (other than the single Msg handling table state )</text>
  </message>
  <message>
    <ts>2017-06-20T01:18:12.107238</ts>
    <user>U153UK3FA</user>
    <text>a user action produces a `Msg` which the Elm runtime passes on to your `update` function, from there you can call any function you want to.</text>
  </message>
  <message>
    <ts>2017-06-20T01:21:51.131348</ts>
    <user>U1XL8FMAA</user>
    <text>but I ( the author of random-sortable-table ) don't have an update function if i am following elm-sortable-table pattern. I have a view function. thats it.</text>
  </message>
  <message>
    <ts>2017-06-20T01:22:09.133391</ts>
    <user>U1XL8FMAA</user>
    <text>The consumer of my api has an update function….</text>
  </message>
  <message>
    <ts>2017-06-20T01:24:38.149865</ts>
    <user>U1XL8FMAA</user>
    <text>&lt;@U153UK3FA&gt; i guess a more general question is why is nested TEA considered an anti pattern, and what is the alternative given the desire to hide implementation details from a consumer of an api?</text>
  </message>
  <message>
    <ts>2017-06-20T01:25:49.157724</ts>
    <user>U153UK3FA</user>
    <text>it's considered an anti-pattern because it creates a lot of boilerplate which tends to lead to confusion</text>
  </message>
  <message>
    <ts>2017-06-20T01:26:23.161462</ts>
    <user>U1XL8FMAA</user>
    <text>I have read this but i have not seen a clear alternative which allows for the same flexibility</text>
  </message>
  <message>
    <ts>2017-06-20T01:30:37.190738</ts>
    <user>U1XL8FMAA</user>
    <text>&lt;@U153UK3FA&gt; I have seen a lot of admonitions against using it, but the examples which An Introduction To Elm inserted in .18 in place of Nested TEA don't apply to a package author…</text>
  </message>
  <message>
    <ts>2017-06-20T01:33:57.214609</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U1XL8FMAA&gt; if you wanted to allow a column to be sorted randomly, you'd create a function that takes a random seed value and returns a `Table.Sorter` for that column</text>
  </message>
  <message>
    <ts>2017-06-20T01:36:48.233949</ts>
    <user>U1XL8FMAA</user>
    <text>&lt;@U153UK3FA&gt; that was an off the cuff example. I am looking for a general strategy to adapt the pattern provided in elm-sortable-table to handle Cmds from the point of view of the api/package author.</text>
  </message>
  <message>
    <ts>2017-06-20T01:37:23.237688</ts>
    <user>U3SJEDR96</user>
    <text>I think the realization we've had was that there is no "one size fits all" solution - different requirements need different levels of abstraction, and defaulting to TEA as the abstraction boundary for everything does not simplify life for the consumer of packages. The abstraction boundary should be `function` which _sometimes_ means you need a view, update and state, and sometimes doesn't mean that.</text>
  </message>
  <message>
    <ts>2017-06-20T01:38:11.243112</ts>
    <user>U153UK3FA</user>
    <text>the general strategy is to write a function that returns the `Cmd` you want and put that function in your module.</text>
  </message>
  <message>
    <ts>2017-06-20T01:38:24.244658</ts>
    <user>U1XL8FMAA</user>
    <text>&lt;@U3SJEDR96&gt; that seems completely reasonable to me.</text>
  </message>
  <message>
    <ts>2017-06-20T01:42:40.274126</ts>
    <user>U1XL8FMAA</user>
    <text>&lt;@U153UK3FA&gt; i believe that i am not articulating the question sufficiently. I understand how to write a general function which returns a command. I don't however see in the specific case of the pattern in elm-sortable-table how to extend the pattern to handle commands. Perhaps it is just staring me in the face and i don't see it….</text>
  </message>
  <message>
    <ts>2017-06-20T01:43:58.283206</ts>
    <user>U1XL8FMAA</user>
    <text>&lt;@U3SJEDR96&gt; - I would have hoped that the literature teaching elm would have avoided scrubbing the pattern, as opposed to simply providing a number of different patterns… a la GOF</text>
  </message>
  <message>
    <ts>2017-06-20T01:44:23.286093</ts>
    <user>U153UK3FA</user>
    <text>that's it, you just add a function that the caller can call. You might want to have the caller pass in the `Config` and `State` to help construct the `Cmd`</text>
  </message>
  <message>
    <ts>2017-06-20T01:47:06.305377</ts>
    <user>U153UK3FA</user>
    <text>that's all a `Table.update` would be doing anyway</text>
  </message>
  <message>
    <ts>2017-06-20T02:55:59.891818</ts>
    <user>U0CLDU8UB</user>
    <text>The original "A list of counters example" in the Elm Architecture tutorial was where people got the idea of components from. I liked the idea too, and I still think it makes sense for certain things. But I completely agree with Ilias (and Evan's Elm Europe talk) here: there's no one-size-fits-all and especially as a package author you are responsible for creating the least complicated API for the user to get things done. 

As a personal example of learning these things the hard way, here's a PR that turned the state inside out for one of my packages, making it much more flexible for the users: &lt;https://github.com/ohanhi/keyboard-extra/pull/20&gt;</text>
  </message>
  <message>
    <ts>2017-06-20T03:25:14.220202</ts>
    <user>U41NK9BM4</user>
    <text>&lt;@U0CLDU8UB&gt; Ah, now I see it. I'm using an older version of your package and I was wondering why you were using a internal `State` for that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-20T03:25:58.229349</ts>
    <user>U41NK9BM4</user>
    <text>Now it turns out that app `Model` is responsible to hold the keyboard state</text>
  </message>
  <message>
    <ts>2017-06-20T06:24:51.852651</ts>
    <user>U5W4G2SQ5</user>
    <text>&lt;@U3LGUAF54&gt; Thanks for all the info, I'd be really interested to look at what you've build. I use F# for most of my work now, but not a huge fan of WPF/MVVM. So looking for something nicer for the front end dev, and I prefer the OS Javascript  widget ecosystem.</text>
  </message>
  <message>
    <ts>2017-06-20T06:37:36.015025</ts>
    <user>U5L2XPH54</user>
    <text>How can I have case condition something like this :

```
                    case error of
                        Http.BadStatus {status = {code = 422}, body = body} -&amp;gt;
                            body
                                |&amp;gt; decodeString (field "errors" errorsDecoder)
                                |&amp;gt; Result.withDefault []
```</text>
  </message>
  <message>
    <ts>2017-06-20T06:37:39.015604</ts>
    <user>U5L2XPH54</user>
    <text>:smile:</text>
  </message>
  <message>
    <ts>2017-06-20T06:38:26.025635</ts>
    <user>U5L2XPH54</user>
    <text>I want to pattern match with code of error and extract body at the same time</text>
  </message>
  <message>
    <ts>2017-06-20T06:43:03.082692</ts>
    <user>U4872964V</user>
    <text>&lt;@U5L2XPH54&gt; you can't, you need to make an inner `case` or `if` expression</text>
  </message>
  <message>
    <ts>2017-06-20T08:17:36.306679</ts>
    <user>U5WD40ZA9</user>
    <text>Hello, I'm trying to create a search input field with a dropdown of results which you can then chose from. Anyone know a fancy package for this? So far I've been using: &lt;http://package.elm-lang.org/packages/rundis/elm-bootstrap/3.0.0&gt; for other input variants but this package doesn't seem to have support for it.</text>
  </message>
  <message>
    <ts>2017-06-20T08:18:53.325142</ts>
    <user>U5WD40ZA9</user>
    <text>Found something that I will try: &lt;http://package.elm-lang.org/packages/thebritican/elm-autocomplete/3.3.0&gt; 
Coming back with result later :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-20T08:20:07.343104</ts>
    <user>U0CLDU8UB</user>
    <text>That's what I was about to suggest</text>
  </message>
  <message>
    <ts>2017-06-20T08:51:46.846984</ts>
    <user>U5WEK2T4J</user>
    <text>Hi, I'm new to Elm and I have some question about elm-test</text>
  </message>
  <message>
    <ts>2017-06-20T08:52:04.852203</ts>
    <user>U5WEK2T4J</user>
    <text>I try to have multiple expect in the same test, but didn't find how</text>
  </message>
  <message>
    <ts>2017-06-20T08:52:23.857863</ts>
    <user>U5WEK2T4J</user>
    <text>so here is what I've done for now but it's not really expressive</text>
  </message>
  <message>
    <ts>2017-06-20T08:52:36.861333</ts>
    <user>U5WEK2T4J</user>
    <text>```
suite : Test
suite =
    describe "2048-elm"
        [ test "moveLeftWithZero" &amp;lt;|
            \_ -&amp;gt;
                let
                    expectedCases =
                        [ ( [ 2, 0, 0, 2 ], [ 4, 0, 0, 0 ] )
                        , ( [ 2, 2, 0, 4 ], [ 4, 4, 0, 0 ] )
                        , ( [ 0, 0, 0, 4 ], [ 4, 0, 0, 0 ] )
                        , ( [ 0, 0, 2, 4 ], [ 2, 4, 0, 0 ] )
                        , ( [ 2, 4, 2, 4 ], [ 2, 4, 2, 4 ] )
                        , ( [ 2, 2, 2, 2 ], [ 4, 4, 0, 0 ] )
                        ]

                    toTest =
                        List.map
                            (\expected -&amp;gt;
                                ( (Tuple.first expected), (Main.moveLeftWithZero (Tuple.first expected)) )
                            )
                            expectedCases
                in
                    Expect.equal expectedCases toTest
        ]
```</text>
  </message>
  <message>
    <ts>2017-06-20T08:53:20.874222</ts>
    <user>U5WEK2T4J</user>
    <text>I tried with `Expect.all` but it does not seems to do what I want</text>
  </message>
  <message>
    <ts>2017-06-20T08:53:58.884812</ts>
    <user>U3SJEDR96</user>
    <text>seems like those should be multiple tests, actually?</text>
  </message>
  <message>
    <ts>2017-06-20T08:55:21.909278</ts>
    <user>U5WEK2T4J</user>
    <text>for me it's the same test but with different data</text>
  </message>
  <message>
    <ts>2017-06-20T08:55:36.913622</ts>
    <user>U5WEK2T4J</user>
    <text>so it's not worth having multiple tests</text>
  </message>
  <message>
    <ts>2017-06-20T08:56:58.938728</ts>
    <user>U5WEK2T4J</user>
    <text>anyway it's working like that but I wanted to do something more "datadriven"</text>
  </message>
  <message>
    <ts>2017-06-20T09:11:40.221193</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5WEK2T4J&gt; I don't think this is how the `elm-test` authors want to construct tests. if you want to run a lot of cases through tests, it's generally better to write `Fuzz` tests.

If you are set on doing this, however, I think you will need to roll your own helper function to handle it.</text>
  </message>
  <message>
    <ts>2017-06-20T09:13:01.248002</ts>
    <user>U0JL9RPC4</user>
    <text>&lt;@U48AEBJQ3&gt; : right, but fuzzing supposes to know how to compute the result of the function you want to test and independantely of your original implementation</text>
  </message>
  <message>
    <ts>2017-06-20T09:13:44.262260</ts>
    <user>U0JL9RPC4</user>
    <text>with fuzzing, you have no control of the data your test generates, so you cannot challenge your test function result against a predefined computation</text>
  </message>
  <message>
    <ts>2017-06-20T09:14:40.280606</ts>
    <user>U48AEBJQ3</user>
    <text>I'm not going to argue the merits of `elm-test`, that is probably better left for &lt;#C0CLGCMMF|testing&gt;.</text>
  </message>
  <message>
    <ts>2017-06-20T09:15:01.287613</ts>
    <user>U5WEK2T4J</user>
    <text>This another version thanks to &lt;@U0JL9RPC4&gt; 
```
testMove when expected =
    test ("moveLeftWithZero" ++ (toString when)) &amp;lt;|
        \_ -&amp;gt;
            Expect.equal expected &amp;lt;| Main.moveLeftWithZero when


suite : Test
suite =
    describe "2048-elm"
        [ testMove [ 2, 0, 0, 2 ] [ 4, 0, 0, 0 ]
        , testMove [ 2, 2, 0, 4 ] [ 4, 4, 0, 0 ]
        , testMove [ 0, 0, 0, 4 ] [ 4, 0, 0, 0 ]
        , testMove [ 0, 0, 2, 4 ] [ 2, 4, 0, 0 ]
        , testMove [ 2, 4, 2, 4 ] [ 2, 4, 2, 4 ]
        , testMove [ 2, 2, 2, 2 ] [ 4, 4, 0, 0 ]
        ]
```</text>
  </message>
  <message>
    <ts>2017-06-20T09:15:08.290065</ts>
    <user>U0JL9RPC4</user>
    <text>&lt;@U48AEBJQ3&gt; don't get me wrong, I *love* the fuzzing in `elm-test`</text>
  </message>
  <message>
    <ts>2017-06-20T09:15:39.300132</ts>
    <user>U5WEK2T4J</user>
    <text>It suits my need really well :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-20T09:15:44.301906</ts>
    <user>U3SJEDR96</user>
    <text>yeah, having them as separate tests like that makes sense to me - if only one case fails, one case fails</text>
  </message>
  <message>
    <ts>2017-06-20T09:17:01.327729</ts>
    <user>U5WEK2T4J</user>
    <text>you're right &lt;@U3SJEDR96&gt; but I wanted to avoid having boilerplate code and with an helper function it's really readable and easy to add another test case</text>
  </message>
  <message>
    <ts>2017-06-20T09:17:02.327861</ts>
    <user>U0JL9RPC4</user>
    <text>I've already seen another strategy that involves indeed fuzzing in this case</text>
  </message>
  <message>
    <ts>2017-06-20T09:17:25.335949</ts>
    <user>U0JL9RPC4</user>
    <text>it means you have to write a naive and non optimized implementation of the function you want to test</text>
  </message>
  <message>
    <ts>2017-06-20T09:17:28.337125</ts>
    <user>U5WEK2T4J</user>
    <text>anyway thank you folks helping me creating another 2048 clone in elm :smile:</text>
  </message>
  <message>
    <ts>2017-06-20T09:17:45.342726</ts>
    <user>U0JL9RPC4</user>
    <text>and run it against your "original" function for your fuzzed set</text>
  </message>
  <message>
    <ts>2017-06-20T09:20:36.400429</ts>
    <user>U0CLDU8UB</user>
    <text>And if you want to use the list approach, that can be done easily with a helper too:
```
testMove (when, expected) = ...

suite : Test
suite =
    describe "2048-elm" (List.map testMove expectedCases)
```</text>
  </message>
  <message>
    <ts>2017-06-20T09:21:33.419888</ts>
    <user>U3SJEDR96</user>
    <text>or even `(uncurry  testMove)` so you can keep your current implementation of it :wink:</text>
  </message>
  <message>
    <ts>2017-06-20T09:22:12.433060</ts>
    <user>U5WEK2T4J</user>
    <text>thank you &lt;@U0CLDU8UB&gt; but how will it fill `when` and `expected` const with the tuple value ?</text>
  </message>
  <message>
    <ts>2017-06-20T09:22:50.445661</ts>
    <user>U3SJEDR96</user>
    <text>in ohanhi's setup, `testMove` takes a tuple and deconstructs it. with `uncurry`, that's handled by elm</text>
  </message>
  <message>
    <ts>2017-06-20T09:23:08.451613</ts>
    <user>U3SJEDR96</user>
    <text>well, handled by `uncurry` :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-06-20T09:23:13.453322</ts>
    <user>U5WEK2T4J</user>
    <text>cool</text>
  </message>
  <message>
    <ts>2017-06-20T09:23:51.466483</ts>
    <user>U0JL9RPC4</user>
    <text>hihi, `uncurry` is also another door toward functional programming</text>
  </message>
  <message>
    <ts>2017-06-20T09:23:54.467544</ts>
    <user>U0CLDU8UB</user>
    <text>So that syntax I wrote will do the same as your `Tuple.first` and `Tuple.second`, but already in the function definition.</text>
  </message>
  <message>
    <ts>2017-06-20T09:25:17.496695</ts>
    <user>U5WEK2T4J</user>
    <text>I'll give it a try</text>
  </message>
  <message>
    <ts>2017-06-20T11:13:56.165533</ts>
    <user>U2LAL86AY</user>
    <text>`datesInBetween: Date -&amp;gt; Date -&amp;gt; List Date` - does anyone know where to find a function that gives me all the dates between this 2 dates? 
ex: `datesInBetween "20 June" "25 June" -&amp;gt; [ 20 June, 21 June, 22 June, 23 June, 24 June, 25 June ] `</text>
  </message>
  <message>
    <ts>2017-06-20T11:14:55.189878</ts>
    <user>U2LAL86AY</user>
    <text>there was a function doing this in one of the packages - i used it before - but can't find it now.</text>
  </message>
  <message>
    <ts>2017-06-20T11:15:18.199632</ts>
    <user>U0LPMPL2U</user>
    <text>basically `List.range` but for dates?</text>
  </message>
  <message>
    <ts>2017-06-20T11:15:28.203946</ts>
    <user>U2LAL86AY</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-06-20T11:15:44.210390</ts>
    <user>U41NK9BM4</user>
    <text>Have you looked at Date.Extra?</text>
  </message>
  <message>
    <ts>2017-06-20T11:16:04.218816</ts>
    <user>U3SJEDR96</user>
    <text>&lt;http://klaftertief.github.io/elm-search/?q=Date+-%3E+Date+-%3E+List+Date&gt; :disappointed:</text>
  </message>
  <message>
    <ts>2017-06-20T11:16:19.225282</ts>
    <user>U0LPMPL2U</user>
    <text>same when searching for `List Date`</text>
  </message>
  <message>
    <ts>2017-06-20T11:16:26.228505</ts>
    <user>U3SJEDR96</user>
    <text>there is, however, `dayList : Int -&amp;gt; Date -&amp;gt; List Date`</text>
  </message>
  <message>
    <ts>2017-06-20T11:16:56.240979</ts>
    <user>U41NK9BM4</user>
    <text>Also &lt;http://package.elm-lang.org/packages/justinmimbs/elm-date-extra/2.0.3/Date-Extra#range&gt;</text>
  </message>
  <message>
    <ts>2017-06-20T11:18:53.291251</ts>
    <user>U3SJEDR96</user>
    <text>(also, five packages have a function name `orange`. Only 3 `apple`s, though.)</text>
  </message>
  <message>
    <ts>2017-06-20T11:19:32.307933</ts>
    <user>U41NK9BM4</user>
    <text>Hahahaha.</text>
  </message>
  <message>
    <ts>2017-06-20T11:21:01.345517</ts>
    <user>U3SJEDR96</user>
    <text>Waiting for someone to tell me one is obviously a colour and the other isn't, which means I'd be comparing apples to oranges.</text>
  </message>
  <message>
    <ts>2017-06-20T12:41:24.277969</ts>
    <user>U5M297AG7</user>
    <text>I am trying to do something, and with the approach I'm taking it seems I am fighting the language/type system
Whenever I run in to this, I generally take a step back and reevaluate my approach; I am wondering if there is a better approach to what I am trying to do

I have a page which should allow a user to edit a resource I fetch from a server. I have the json serialization/deserialization of this data structure, let's call it `Customer` codified as a type alias, and in the UI logic I simply aliased my Model to that same data structure, `Customer`
Now I want to be able to add a `message` field to my UI model, in order to display the result of some interaction with the server. 
My first approach was to have the data structure, `Customer`, as a sub field in the model, like so:
{ customer: Customer, message: String}
This approach turned out to be painful syntactically, as updating sub-records seemed to require a lot of overhead in code. On further reading, I learned of extensible records, and tried to define my model in a way that is the union of the `Customer` type and a type that has a message field:
`type alias WithMessage a = { a | message : String}`; `type alias Model = WithMessage Customer`
My first question would be, is this a good use case of extensible records, or is there a simpler way to achieve the same?</text>
  </message>
  <message>
    <ts>2017-06-20T12:46:28.387216</ts>
    <user>U4872964V</user>
    <text>Well, aren't you updating the entire Customer at once, since you are getting it from the server? I'd have it as a separate data field just because of that</text>
  </message>
  <message>
    <ts>2017-06-20T12:46:58.398008</ts>
    <user>U236M9FH9</user>
    <text>&lt;@U5M297AG7&gt; Usually when I have lots of messages that update a nested record, I nest those messages so I can do something like:
```
type Msg = CustomerChangeMsg CustomerMsg | OtherMsg | ...
type CustomerMsg = ChangeName String | ...

update msg model = 
  case msg of 
    CustomerChangeMsg subMsg -&amp;gt;
      { model | customer = updateCustomer subMsg model.customer }

updateCustomer msg customer = 
  case msg of 
    ChangeName newName = 
      { customer | name = newName }
```</text>
  </message>
  <message>
    <ts>2017-06-20T12:47:07.401271</ts>
    <user>U4872964V</user>
    <text>But your usage of extensible records is not wrong as a general principle for grouping fields</text>
  </message>
  <message>
    <ts>2017-06-20T12:48:50.438216</ts>
    <user>U236M9FH9</user>
    <text>That way I don't need 
```
let customer = model.customer 
     updatedCustomer = { customer | name = newName }
in { model | customer = updatedCustomer }
```
in every case branch</text>
  </message>
  <message>
    <ts>2017-06-20T12:49:51.460324</ts>
    <user>U236M9FH9</user>
    <text>I usually just use extensible records to limit the fields my functions expect/operate on, instead of using them to define actual data</text>
  </message>
  <message>
    <ts>2017-06-20T12:50:50.482119</ts>
    <user>U5M297AG7</user>
    <text>Yes, I am updating `Customer` all at once. The extra field, message, that will exist in the UI's model was an initial concern, as I do not wish to communicate that as part of the `Customer` resource; the code serializing the `Customer` resource only serializes the fields that make up a customer, however
I am thinking that was your concern with this approach, &lt;@U4872964V&gt;?</text>
  </message>
  <message>
    <ts>2017-06-20T12:52:11.511995</ts>
    <user>U4872964V</user>
    <text>Well, I'm not really concerned :) getting the model right is important but refactoring is easy</text>
  </message>
  <message>
    <ts>2017-06-20T12:53:08.532440</ts>
    <user>U5M297AG7</user>
    <text>Ah &lt;@U236M9FH9&gt;, I had not considered that! I believe that would ameliorate the pain of updating nested records</text>
  </message>
  <message>
    <ts>2017-06-20T13:12:03.948535</ts>
    <user>U5WD40ZA9</user>
    <text>Seems to work, not the easiest thing I've ever set up though.</text>
  </message>
  <message>
    <ts>2017-06-20T13:34:43.445827</ts>
    <user>U5M297AG7</user>
    <text>Thank you &lt;@U236M9FH9&gt;, that approach worked out nicely</text>
  </message>
  <message>
    <ts>2017-06-20T13:34:54.449642</ts>
    <user>U236M9FH9</user>
    <text>Yup :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-20T15:39:52.173782</ts>
    <user>U37HUSJ4R</user>
    <text>Hi everyone</text>
  </message>
  <message>
    <ts>2017-06-20T15:39:58.175664</ts>
    <user>U37HUSJ4R</user>
    <text>If my model looks like:
```type alias Application =
    { id : Int
    , term : Int
    , amount : Int
    }


type alias Model =
    { application : Application
    }
```

and I am trying to update the `term` value, I have `onInput UpdateTerm` on an input
inside my update case statement how do I update this value?</text>
  </message>
  <message>
    <ts>2017-06-20T15:40:11.179800</ts>
    <user>U37HUSJ4R</user>
    <text>so far I have `UpdateTerm term -&amp;gt;`</text>
  </message>
  <message>
    <ts>2017-06-20T15:40:37.188598</ts>
    <user>U37HUSJ4R</user>
    <text>but unsure how I can update only the `term` value</text>
  </message>
  <message>
    <ts>2017-06-20T15:41:13.200664</ts>
    <user>U0EUHKVGB</user>
    <text>&lt;https://guide.elm-lang.org/architecture/user_input/text_fields.html&gt;</text>
  </message>
  <message>
    <ts>2017-06-20T15:41:29.206382</ts>
    <user>U37HUSJ4R</user>
    <text>Yes I've seen this</text>
  </message>
  <message>
    <ts>2017-06-20T15:41:39.209411</ts>
    <user>U37HUSJ4R</user>
    <text>my issue is more updating the field inside appliction</text>
  </message>
  <message>
    <ts>2017-06-20T15:42:01.216928</ts>
    <user>U3SJEDR96</user>
    <text>you'd do it in two steps, something like this:
```
let
  application = model.application
  updatedApplication = { application | term = updatedTerm }
in
  ({ model | application = updatedApplication }, Cmd.none)
```</text>
  </message>
  <message>
    <ts>2017-06-20T15:42:01.217103</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;http://faq.elm-community.org/#how-can-i-change-the-value-of-a-nested-field&gt; ?</text>
  </message>
  <message>
    <ts>2017-06-20T15:42:18.222886</ts>
    <user>U3SJEDR96</user>
    <text>or, yeah, that :smile:</text>
  </message>
  <message>
    <ts>2017-06-20T15:44:29.266793</ts>
    <user>U0LPMPL2U</user>
    <text>Alternatively, you break it into two functions:

```
setTermOnApplication : Int -&amp;gt; Application -&amp;gt; Application
setTermOnApplication term app =
  { app | term = term }

setTermOnModel : Int -&amp;gt; Model -&amp;gt; Model
setTermOnModel term model =
  { model | application = setTermOnApplication term model.application }
```</text>
  </message>
  <message>
    <ts>2017-06-20T15:45:31.287987</ts>
    <user>U37HUSJ4R</user>
    <text>cheers everyone :smile:</text>
  </message>
  <message>
    <ts>2017-06-20T16:06:09.721090</ts>
    <user>U1EEBCQM6</user>
    <text>Hi guys &amp;amp; gals</text>
  </message>
  <message>
    <ts>2017-06-20T16:06:30.728517</ts>
    <user>U1EEBCQM6</user>
    <text>lol</text>
  </message>
  <message>
    <ts>2017-06-20T16:06:43.733209</ts>
    <user>U1EEBCQM6</user>
    <text>So slackbot needs to get smarter</text>
  </message>
  <message>
    <ts>2017-06-20T16:06:49.735205</ts>
    <user>U1EEBCQM6</user>
    <text>hahaha</text>
  </message>
  <message>
    <ts>2017-06-20T16:08:34.769989</ts>
    <user>U1EEBCQM6</user>
    <text>question... Is it possible to decode a deeply nested array into a flat `List` and not a nested type?</text>
  </message>
  <message>
    <ts>2017-06-20T16:09:19.784943</ts>
    <user>U0LPMPL2U</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-06-20T16:09:28.787952</ts>
    <user>U23SA861Y</user>
    <text>need to be a bit more specific but probably yes</text>
  </message>
  <message>
    <ts>2017-06-20T16:09:37.790701</ts>
    <user>U0LPMPL2U</user>
    <text>the shape of the JSON does not need to be replicated in your Elm types</text>
  </message>
  <message>
    <ts>2017-06-20T16:09:46.793543</ts>
    <user>U1EEBCQM6</user>
    <text>```
json : String
json =
    """
    {
        "name": "Product",
        "attributes": {
            "format": {
                "id": "format",
                "name": "Format",
                "options": [
                    {
                        "id": "a4",
                        "name": A4"
                    },
                    {
                        "id": "a3",
                        "name": A3"
                    }
                ]
            },
            "printing": {
                "id": "printing",
                "name": "Printing",
                "options": [
                    {
                        "id": "4/4",
                        "name": 4/4"
                    },
                    {
                        "id": "4/0",
                        "name": 4/0"
                    }
                ]
            }
        }
    }
    """
```
A flat list of the options in this case</text>
  </message>
  <message>
    <ts>2017-06-20T16:10:27.807488</ts>
    <user>U1EEBCQM6</user>
    <text>I'd like to create a type:
```
type alias Option =
    { id : String
    , name : String
    , attribute : String
    }</text>
  </message>
  <message>
    <ts>2017-06-20T16:10:41.812472</ts>
    <user>U1EEBCQM6</user>
    <text>```
type alias Option =
    { id : String
    , name : String
    , attribute : String
    }
```</text>
  </message>
  <message>
    <ts>2017-06-20T16:11:00.818691</ts>
    <user>U23SA861Y</user>
    <text>I think you need to bounce through a dictionary for this one and then issue the map</text>
  </message>
  <message>
    <ts>2017-06-20T16:11:33.829223</ts>
    <user>U1EEBCQM6</user>
    <text>mmm.. I was afraid of that. So I'd have to create the nested `Dict` and from that create the `List`.</text>
  </message>
  <message>
    <ts>2017-06-20T16:11:57.837374</ts>
    <user>U0LPMPL2U</user>
    <text>what does that `attribute` string map to?</text>
  </message>
  <message>
    <ts>2017-06-20T16:12:17.843867</ts>
    <user>U23SA861Y</user>
    <text>presumably the key like `printing`</text>
  </message>
  <message>
    <ts>2017-06-20T16:12:58.857251</ts>
    <user>U0LPMPL2U</user>
    <text>ah, so there would be multiple options where the `attribute` is `printing`</text>
  </message>
  <message>
    <ts>2017-06-20T16:13:22.865264</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U1EEBCQM6&gt;  ^</text>
  </message>
  <message>
    <ts>2017-06-20T16:14:05.879260</ts>
    <user>U0LPMPL2U</user>
    <text>If I understand correctly, you want the formatting and printing options together in a flattened list?</text>
  </message>
  <message>
    <ts>2017-06-20T16:14:41.891049</ts>
    <user>U1EEBCQM6</user>
    <text>Yes.. correct</text>
  </message>
  <message>
    <ts>2017-06-20T16:14:54.894906</ts>
    <user>U0LPMPL2U</user>
    <text>OK, that should be possible without a `Dict`</text>
  </message>
  <message>
    <ts>2017-06-20T16:15:15.901940</ts>
    <user>U0LPMPL2U</user>
    <text>let me see if I can write up something</text>
  </message>
  <message>
    <ts>2017-06-20T16:16:25.925605</ts>
    <user>U1EEBCQM6</user>
    <text>Not that I would have multiple lists. Just one list of all the options. And the `attribute` would allow me to filter based on that.</text>
  </message>
  <message>
    <ts>2017-06-20T16:17:05.938837</ts>
    <user>U1EEBCQM6</user>
    <text>I thought that might be most efficient</text>
  </message>
  <message>
    <ts>2017-06-20T16:22:07.039561</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://ellie-app.com/3xfPcjxfy4ja1/0&gt; something like that?</text>
  </message>
  <message>
    <ts>2017-06-20T16:24:58.097113</ts>
    <user>U1EEBCQM6</user>
    <text>check that out! Let me try to understand it.</text>
  </message>
  <message>
    <ts>2017-06-20T16:28:07.162090</ts>
    <user>U0LPMPL2U</user>
    <text>I wrote up &lt;https://ellie-app.com/3xfTdwMjGCra1/0&gt;</text>
  </message>
  <message>
    <ts>2017-06-20T16:28:27.169184</ts>
    <user>U0LPMPL2U</user>
    <text>looking at &lt;@U3SJEDR96&gt;'s solution :eyes:</text>
  </message>
  <message>
    <ts>2017-06-20T16:31:46.238375</ts>
    <user>U0LPMPL2U</user>
    <text>ooh! `Json.Decode.keyValuePairs` super nice! TIL :thumbsup:</text>
  </message>
  <message>
    <ts>2017-06-20T16:52:39.662892</ts>
    <user>U23SA861Y</user>
    <text>are we playing code golf
```
itemdec : Dec.Decoder (List {attribute:String, id:String, name:String})
itemdec =
    Dec.map2 (,) (Dec.field "id" Dec.string) (Dec.field "name" Dec.string)
        |&amp;gt; Dec.list
        |&amp;gt; Dec.field "options"
        |&amp;gt; Dec.keyValuePairs
        |&amp;gt; Dec.map (List.concatMap (\(n,l) -&amp;gt; List.map (\x -&amp;gt; (n,x)) l))
        |&amp;gt; Dec.map (List.map (\(a,(i,n)) -&amp;gt; {attribute=a,id=i,name=n}))
        |&amp;gt; Dec.field "attributes" 
```</text>
  </message>
  <message>
    <ts>2017-06-20T17:03:51.893104</ts>
    <user>U2FP79HN3</user>
    <text>So uhm, I just expanded a case of statement into 33 possible matches and now it takes about 3 minutes to compile</text>
  </message>
  <message>
    <ts>2017-06-20T17:08:51.988218</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, the exhaustiveness checker goes a little crazy with large case of stmts. Should be much better in 0.19, tho</text>
  </message>
  <message>
    <ts>2017-06-20T17:08:55.989361</ts>
    <user>U2FP79HN3</user>
    <text>make it ten</text>
  </message>
  <message>
    <ts>2017-06-20T17:09:23.997988</ts>
    <user>U37PQL9PB</user>
    <text>I just discovered that elm treats this as a valid type signature: "foo : List Int Bool -&amp;gt; Int". I don't understand how that's valid. I can understand "foo: List Int -&amp;gt; Int", but I don't understand why "Bool" is allowed in this context when it's not a separate argument. Is this a bug or can someone educate me as to what this means?</text>
  </message>
  <message>
    <ts>2017-06-20T17:09:57.008321</ts>
    <user>U3SJEDR96</user>
    <text>It's a bug, and it's been logged :)</text>
  </message>
  <message>
    <ts>2017-06-20T17:10:45.023812</ts>
    <user>U3SJEDR96</user>
    <text>(same with `foo : List -&amp;gt; Int` btw)</text>
  </message>
  <message>
    <ts>2017-06-20T17:11:05.030510</ts>
    <user>U37PQL9PB</user>
    <text>Great thanks. I tried searching for it, but google failed me. It messed me up as I was trying to do "List (List a)" but typed "List List a" and got confusing error messages :wink:</text>
  </message>
  <message>
    <ts>2017-06-20T17:20:12.198035</ts>
    <user>U5ABF3BH7</user>
    <text>Hello! Does anyone know if there is a good package implementing 'search' in a select2</text>
  </message>
  <message>
    <ts>2017-06-20T17:20:14.198567</ts>
    <user>U5ABF3BH7</user>
    <text>?</text>
  </message>
  <message>
    <ts>2017-06-20T18:36:59.357229</ts>
    <user>U2FGMAQ5R</user>
    <text>&lt;@U5ABF3BH7&gt; , I was looking for something similar and started looking at implementing select2 in Elm , is there a project like this already ?</text>
  </message>
  <message>
    <ts>2017-06-20T18:38:42.377354</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U2FGMAQ5R&gt; I don't know. I need to implement something using select2 search. I am just starting.</text>
  </message>
  <message>
    <ts>2017-06-20T19:50:58.139020</ts>
    <user>U236M9FH9</user>
    <text>&lt;@U5ABF3BH7&gt;  &lt;@U2FGMAQ5R&gt; Check out &lt;https://github.com/thebritican/elm-autocomplete&gt;</text>
  </message>
  <message>
    <ts>2017-06-20T20:30:44.491253</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U236M9FH9&gt; Thanks!</text>
  </message>
  <message>
    <ts>2017-06-20T21:12:05.823649</ts>
    <user>U5HM74BD0</user>
    <text>I have a json string I need to decode. It's complex enough (in my mind, anyway) that I don't understand how to use Json.Decode with it to break it down into an Elm model. Its structure is something like this:

```{playerNames: ["Fred", "Barney"], games: [{date: "May 20", stats: [{ab:2, hits: 1}, {ab: 3, hits: 0}]}, {date: "May 27", stats: [{ab: 1, hits: 1}, {ab: 3, hits: 1}]} ]}```

I'm not sure how to begin to decode this. Can I use Json.Decode on its own or should I use the elm-decode-pipeline package, or something else?</text>
  </message>
  <message>
    <ts>2017-06-20T21:21:05.893975</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5HM74BD0&gt; you can use Json.Decode on it's own. When writing a Json decoder start by writing a decoders for the child nodes and compose those together to create decoders for the parent nodes</text>
  </message>
  <message>
    <ts>2017-06-20T21:23:32.913136</ts>
    <user>U153UK3FA</user>
    <text>eg. start by making a decoder for `{ab:2, hits: 1}`</text>
  </message>
  <message>
    <ts>2017-06-20T21:24:01.916580</ts>
    <user>U5HM74BD0</user>
    <text>&lt;@U153UK3FA&gt; So begin with my records?  Yes, okay.  Then how do I use the result of that with its parent?</text>
  </message>
  <message>
    <ts>2017-06-20T21:25:43.929902</ts>
    <user>U153UK3FA</user>
    <text>once you have a decoder for `{ab:2, hits: 1}` you can pass that decoder to &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Json-Decode#list&gt; and get a decoder that decoders lists of `{ab:2, hits: 1}`</text>
  </message>
  <message>
    <ts>2017-06-20T21:27:04.940774</ts>
    <user>U5HM74BD0</user>
    <text>Okay, sounds good. Let me give it a whirl.  Thank you.</text>
  </message>
  <message>
    <ts>2017-06-20T21:33:18.989309</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5HM74BD0&gt; note that what you pasted above isn't valid json since the field names need to be quoted</text>
  </message>
  <message>
    <ts>2017-06-20T21:34:05.995349</ts>
    <user>U5HM74BD0</user>
    <text>Yes, you're right. I was short-cutting it with my representation.  I do have valid json with quotes in the right places.</text>
  </message>
  <message>
    <ts>2017-06-20T21:35:02.002638</ts>
    <user>U153UK3FA</user>
    <text>alrighty, I just didn't want you to get frustrated trying to write a parser for invalid json</text>
  </message>
  <message>
    <ts>2017-06-20T21:35:49.008930</ts>
    <user>U5HM74BD0</user>
    <text>Thanks for that.  Here's the actual json I'm working with:
```{"playerNames":["Fred","Barney"],"games":[{"date":"May 20","stats":[{"ab":2,"hits":2},{"ab":2,"hits":1}]},{"date":"June 3","stats":[{"ab":2,"hits":2},{"ab":3,"hits":3}]},{"date":"June 4","stats":[{"ab":2,"hits":2},{"ab":2,"hits":2}]},{"date":"June 10","stats":[{"ab":2,"hits":2},{"ab":2,"hits":0}]},{"date":"June 17","stats":[{"ab":2,"hits":2},{"ab":3,"hits":2}]},{"date":"June 19","stats":[{"ab":0,"hits":0},{"ab":4,"hits":4}]},{"date":"June 20","stats":[{"ab":2,"hits":2},{"ab":0,"hits":0}]}]}```</text>
  </message>
  <message>
    <ts>2017-06-20T21:37:01.018209</ts>
    <user>U153UK3FA</user>
    <text>You can also paste that in to &lt;http://eeue56.github.io/json-to-elm/&gt; and you'll get a generated parser. But it's good to write one yourself when learning so you actually understand how it works.</text>
  </message>
  <message>
    <ts>2017-06-20T21:38:05.026397</ts>
    <user>U5HM74BD0</user>
    <text>No doubt.  If I'm pulling my hair out over writing my own after a couple days, maybe I'll resort to that. Thanks for the link.</text>
  </message>
  <message>
    <ts>2017-06-20T21:39:29.036938</ts>
    <user>U5HM74BD0</user>
    <text>I wrote the encoder piece fine on my own, so you'd think I'd get this decoder stuff better than I do!</text>
  </message>
  <message>
    <ts>2017-06-20T21:40:32.045106</ts>
    <user>U153UK3FA</user>
    <text>it's good for pasting in small bits of json, eg. paste in just `{"ab":2,"hits":2}`</text>
  </message>
  <message>
    <ts>2017-06-20T21:41:46.054531</ts>
    <user>U5HM74BD0</user>
    <text>Yeah, that makes sense.  I'm brand new to functional programming, and so I'm still shifting my mind a bit.</text>
  </message>
  <message>
    <ts>2017-06-20T23:10:50.713127</ts>
    <user>U5HM74BD0</user>
    <text>How can I convert a list of 2 strings into a tuple?</text>
  </message>
  <message>
    <ts>2017-06-20T23:23:41.800152</ts>
    <user>U236M9FH9</user>
    <text>&lt;@U5HM74BD0&gt; `List.map2`: &lt;http://package.elm-lang.org/packages/elm-lang/core/latest/List#map2&gt;</text>
  </message>
  <message>
    <ts>2017-06-20T23:24:33.805826</ts>
    <user>U236M9FH9</user>
    <text>Or `List.Extra.zip`: &lt;https://klaftertief.github.io/elm-search/?q=List%20a%20-%3E%20List%20b%20-%3E%20List%20(a%2C%20b)&gt;</text>
  </message>
  <message>
    <ts>2017-06-20T23:29:41.839873</ts>
    <user>U5HM74BD0</user>
    <text>&lt;@U236M9FH9&gt; Doesn't `List.map2` give another List back?  I want ["apples, "grapes"] to become ("apples", "grapes").  What am I missing?  Maybe I'm up too late at night. Sorry if this is obvious.</text>
  </message>
  <message>
    <ts>2017-06-20T23:32:01.856570</ts>
    <user>U5HM74BD0</user>
    <text>(apples and grapes are unknown strings at compile time in my case)</text>
  </message>
  <message>
    <ts>2017-06-20T23:32:45.861264</ts>
    <user>U236M9FH9</user>
    <text>Ah sorry, I read 2 lists, not list of 2</text>
  </message>
  <message>
    <ts>2017-06-20T23:34:03.869759</ts>
    <user>U236M9FH9</user>
    <text>Really you're list of 2 should be a tuple the whole time, otherwise you'll have to return a `Maybe (String, String)` instead, but you write a function that uses a `case ... of ...` to match `x1 :: x2 :: []` which is a list of 2 items. Return a `Just` for that and `Nothing` for all other cases(you can use `_ -&amp;gt; ` after the 2 item pattern to match everything else).</text>
  </message>
  <message>
    <ts>2017-06-20T23:36:29.885976</ts>
    <user>U5HM74BD0</user>
    <text>Hmmm. I've got a json string which comes in as a list of two strings, but my model represents those things as a tuple.  Okay, let me try what you're suggesting.</text>
  </message>
  <message>
    <ts>2017-06-20T23:36:45.887598</ts>
    <user>U236M9FH9</user>
    <text>If you're starting with a list because of JSON decoding, you should be able to skip the list using something like `Decode.map2 (,)` along with `Decode.index`.</text>
  </message>
  <message>
    <ts>2017-06-20T23:37:19.891363</ts>
    <user>U5HM74BD0</user>
    <text>Oh! That'll be much better, yes.</text>
  </message>
  <message>
    <ts>2017-06-20T23:38:46.900448</ts>
    <user>U5HM74BD0</user>
    <text>I feel like my model should have represented these things as a 2-item List to start with. Not sure I'm buying much by having these stored in a tuple.</text>
  </message>
  <message>
    <ts>2017-06-20T23:40:35.912103</ts>
    <user>U236M9FH9</user>
    <text>A tuple gives you a guarantee about the number of items. With a list you'll find you'll have to handle cases of empty lists, 1-item lists, &amp;amp; 3+ item lists as well as the 2-item list</text>
  </message>
  <message>
    <ts>2017-06-20T23:42:12.922280</ts>
    <user>U236M9FH9</user>
    <text>Like that function above would be:
```
listToTuple list = case list of
  x1 :: x2 :: [] -&amp;gt; Just (x1, x2)
  _ -&amp;gt; Nothing
```
If you'll be pulling the values out of the list often, you'll probably have to repeat the above a lot, or handle a lot of `Maybe`s</text>
  </message>
  <message>
    <ts>2017-06-20T23:43:27.930381</ts>
    <user>U5HM74BD0</user>
    <text>Thank you for the help. I'll give it a shot tomorrow.</text>
  </message>
  <message>
    <ts>2017-06-21T00:30:52.251741</ts>
    <user>U5WD7T0HF</user>
    <text>Good Night everyone hope everyone is doing okay.</text>
  </message>
  <message>
    <ts>2017-06-21T02:16:15.987886</ts>
    <user>U5T739RFW</user>
    <text>jonf: We should have a numpy like converntion. in scipy/numpy you always import a bunch of common modules using accepted aliases, so it makes examples lot terser. if I see np, I know you have done `import numpy as np`, and I need not ask what is `np`.</text>
  </message>
  <message>
    <ts>2017-06-21T02:16:23.988999</ts>
    <user>U5T739RFW</user>
    <text>&lt;https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt#overview&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T02:17:27.997979</ts>
    <user>U5T739RFW</user>
    <text>I always import Json.Decode as JD, Json.Decode as JE, RemoteData as RD and so forth. I feel it would be good if we had a community maintained page documenting a convention.</text>
  </message>
  <message>
    <ts>2017-06-21T03:35:12.812777</ts>
    <user>U5GH4NB98</user>
    <text>hey! for some reason my time travel debugger stopped popping up at app start at some point... i still `use elm-make --debug` is there a way to start it from console or something like that? or does anyone have a clue why my time travel debugger could have stopped starting?</text>
  </message>
  <message>
    <ts>2017-06-21T03:45:01.937818</ts>
    <user>U41NK9BM4</user>
    <text>Do you see the "tab" on the bottom right of the page?</text>
  </message>
  <message>
    <ts>2017-06-21T03:45:14.940955</ts>
    <user>U41NK9BM4</user>
    <text>Or does it fail to expand when you click the tab?</text>
  </message>
  <message>
    <ts>2017-06-21T04:14:17.345643</ts>
    <user>U5GH4NB98</user>
    <text>the tab is missing! it was there at some point (expanded and in tab form) but now even after recompiling/restarting computer it does not shop up anymore. application works still fine (sorry for late answer)</text>
  </message>
  <message>
    <ts>2017-06-21T04:24:49.498722</ts>
    <user>U3ZRK658Q</user>
    <text>Have you tried running `elm-reactor` from the command line?</text>
  </message>
  <message>
    <ts>2017-06-21T04:37:46.693526</ts>
    <user>U41NK9BM4</user>
    <text>The tab is a div abs. positioned in the page so it might happens that it plays badly with other elements.</text>
  </message>
  <message>
    <ts>2017-06-21T04:40:09.729606</ts>
    <user>U41NK9BM4</user>
    <text>Check if you have other page elements which overlaps with the tab.</text>
  </message>
  <message>
    <ts>2017-06-21T06:45:57.560529</ts>
    <user>U5GH4NB98</user>
    <text>&lt;@U41NK9BM4&gt; thats probably it! I will check </text>
  </message>
  <message>
    <ts>2017-06-21T06:53:55.659014</ts>
    <user>U41NK9BM4</user>
    <text>Let us know :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-21T07:21:31.997823</ts>
    <user>U5WD40ZA9</user>
    <text>Is there an event in elm for onFocus but for when you leave the element?</text>
  </message>
  <message>
    <ts>2017-06-21T07:24:43.037274</ts>
    <user>U2M4VPZ9D</user>
    <text>like onBlur?</text>
  </message>
  <message>
    <ts>2017-06-21T07:24:54.039460</ts>
    <user>U0CLDU8UB</user>
    <text>The event is called "blur", I'm not sure if there is a ready-made helper for that particular event but you can do it with `on "blur"` at least.</text>
  </message>
  <message>
    <ts>2017-06-21T07:25:15.043559</ts>
    <user>U2M4VPZ9D</user>
    <text>I think there is &lt;http://package.elm-lang.org/packages/evancz/elm-html/4.0.1/Html-Events#onBlur&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T07:25:21.045191</ts>
    <user>U5WD40ZA9</user>
    <text>&lt;@U2M4VPZ9D&gt; &lt;@U0CLDU8UB&gt; thx!</text>
  </message>
  <message>
    <ts>2017-06-21T07:25:27.046264</ts>
    <user>U5WD40ZA9</user>
    <text>Works like a charm</text>
  </message>
  <message>
    <ts>2017-06-21T07:31:15.117362</ts>
    <user>U1EEBCQM6</user>
    <text>&lt;@U3SJEDR96&gt; &lt;@U23SA861Y&gt; &lt;@U0LPMPL2U&gt; Thanks for yesterday. I had to run, so I didn't have time to reply or get into the feedbacks. Will check them out today.</text>
  </message>
  <message>
    <ts>2017-06-21T07:37:57.196976</ts>
    <user>U5X2VC483</user>
    <text>How do I get the size and position of placed DOM elements?</text>
  </message>
  <message>
    <ts>2017-06-21T07:40:56.233108</ts>
    <user>U5GJ5FEAU</user>
    <text>&lt;@U5X2VC483&gt; i have the feeling think we can't get that just in elm. i'm still learning :smile:</text>
  </message>
  <message>
    <ts>2017-06-21T07:42:35.253517</ts>
    <user>U0J8D9M2P</user>
    <text>&amp;gt; How do I get the size and position of placed DOM elements?
If you have your model with properties for position and size you can always take control of it</text>
  </message>
  <message>
    <ts>2017-06-21T07:42:59.258328</ts>
    <user>U5GJ5FEAU</user>
    <text>that's true!</text>
  </message>
  <message>
    <ts>2017-06-21T07:43:07.259760</ts>
    <user>U5GJ5FEAU</user>
    <text>but cannot get it of a rendered DOM element, right?</text>
  </message>
  <message>
    <ts>2017-06-21T07:44:11.272982</ts>
    <user>U0J8D9M2P</user>
    <text>Elm does not have direct access to DOM</text>
  </message>
  <message>
    <ts>2017-06-21T07:44:48.280463</ts>
    <user>U0J8D9M2P</user>
    <text>So if you can design to use your model for it, it's the way to go. If not then you can use JS with ports.</text>
  </message>
  <message>
    <ts>2017-06-21T07:44:50.280865</ts>
    <user>U5X2VC483</user>
    <text>I don't want to implement my own flow, I would like the browser to do it. As in, I don't want to decide myself the position and size of the elements, but get the size after the fact</text>
  </message>
  <message>
    <ts>2017-06-21T07:45:55.294722</ts>
    <user>U5X2VC483</user>
    <text>Okidokies, thanks for your help</text>
  </message>
  <message>
    <ts>2017-06-21T07:46:30.301784</ts>
    <user>U0J8D9M2P</user>
    <text>&lt;@U5X2VC483&gt; what's your case by the way?</text>
  </message>
  <message>
    <ts>2017-06-21T07:47:19.311815</ts>
    <user>U5X2VC483</user>
    <text>I would like to draw arrows between elements</text>
  </message>
  <message>
    <ts>2017-06-21T07:47:57.319398</ts>
    <user>U5X2VC483</user>
    <text>such as from and to centers of two DOM nodes</text>
  </message>
  <message>
    <ts>2017-06-21T07:51:28.363449</ts>
    <user>U0FP80EKB</user>
    <text>You can do this using port. Write a port like `findDimension : String -&amp;gt; Cmd msg` where you can pass a selector. Then have something like `elementDimension : ({ r | selector : String, dimensions : Dimensions } -&amp;gt; msg) -&amp;gt; Sub msg` that the javascript can provide the dimensions.</text>
  </message>
  <message>
    <ts>2017-06-21T07:52:24.375534</ts>
    <user>U0FP80EKB</user>
    <text>Alternatively, if you are doing this in reaction to a click on an element, for example, you can probably decode the dimensions from the event using `on`</text>
  </message>
  <message>
    <ts>2017-06-21T07:55:35.416095</ts>
    <user>U0J8D9M2P</user>
    <text>&lt;@U5X2VC483&gt; And can you achieve positioning with css?</text>
  </message>
  <message>
    <ts>2017-06-21T08:04:58.543129</ts>
    <user>U5X2VC483</user>
    <text>&lt;@U0J8D9M2P&gt; Yes</text>
  </message>
  <message>
    <ts>2017-06-21T08:05:52.555365</ts>
    <user>U5X2VC483</user>
    <text>&lt;@U0FP80EKB&gt; Thanks. That looks like a good start.</text>
  </message>
  <message>
    <ts>2017-06-21T08:30:48.917717</ts>
    <user>U2FP79HN3</user>
    <text>I made a thing! &lt;http://cloud.jorisooms.be/1B0m3R2f3M2I&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T08:33:56.966735</ts>
    <user>U4CMREF7Y</user>
    <text>&lt;@U2FP79HN3&gt; it's a pretty thing :slightly_smiling_face: but what is it?</text>
  </message>
  <message>
    <ts>2017-06-21T08:34:06.969394</ts>
    <user>U2FP79HN3</user>
    <text>dunno :disappointed:</text>
  </message>
  <message>
    <ts>2017-06-21T08:34:13.971085</ts>
    <user>U2FP79HN3</user>
    <text>just generating random svg paths and animating them</text>
  </message>
  <message>
    <ts>2017-06-21T08:35:18.988599</ts>
    <user>U4CMREF7Y</user>
    <text>I like it, could easily become hypnotic :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-21T08:55:42.319466</ts>
    <user>U0FP80EKB</user>
    <text>nice!</text>
  </message>
  <message>
    <ts>2017-06-21T09:41:54.254500</ts>
    <user>U5GH4NB98</user>
    <text>passiomatic: sorry for answering so late again: but yes! that was it! i used a footer, which is also `position: fixed` and it was just underneath it! i didn't think about checking the dom! thanks!</text>
  </message>
  <message>
    <ts>2017-06-21T09:45:55.342755</ts>
    <user>U41NK9BM4</user>
    <text>Great. Glad it worked</text>
  </message>
  <message>
    <ts>2017-06-21T10:12:31.976274</ts>
    <user>U59AF21LJ</user>
    <text>Hi! My project is based on reading information off a local JSON file. I can then update the data from the browser, what can I do to save it back to JSON (I'm not asking about JSON.Encode but rather about how to save to an external file)? Do I need to use `port`?</text>
  </message>
  <message>
    <ts>2017-06-21T10:17:03.084414</ts>
    <user>U1P6FFJ64</user>
    <text>&lt;@U59AF21LJ&gt; elm is compiled into JS and this is executed into the client browser. The browser does not have access to write into the server file system. You will need a backend for that.</text>
  </message>
  <message>
    <ts>2017-06-21T10:22:58.227414</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U1P6FFJ64&gt; Oh yes I had forgotten about that… I guess whatever memory I want to last would need this. I guess I should make a little program than runs in parallel, listening on a socket or something? Thanks.</text>
  </message>
  <message>
    <ts>2017-06-21T10:23:37.243159</ts>
    <user>U4872964V</user>
    <text>If you want to store information in the browser, you can use LocalStorage (via a port)</text>
  </message>
  <message>
    <ts>2017-06-21T10:24:30.264803</ts>
    <user>U4872964V</user>
    <text>depends on what you want to store really</text>
  </message>
  <message>
    <ts>2017-06-21T10:25:17.284382</ts>
    <user>U59AF21LJ</user>
    <text>Basically I have a tree that I manipulate and want to save even after I close my browser (I don't want it to be save in the browser memory).</text>
  </message>
  <message>
    <ts>2017-06-21T10:26:17.309258</ts>
    <user>U4872964V</user>
    <text>yes, so you could either use LocalStorage, which will store it on disk locally, but will be restricted to that particular computer/browser, or you need a server</text>
  </message>
  <message>
    <ts>2017-06-21T10:27:47.346826</ts>
    <user>U5X2VC483</user>
    <text>Can I get elm-reactor to refresh the site when saving the file? Even better, can I get it to do hot module reload? (I.e. maintain the state)</text>
  </message>
  <message>
    <ts>2017-06-21T10:28:12.357308</ts>
    <user>U3SJEDR96</user>
    <text>`elm-live` has at least one of those features</text>
  </message>
  <message>
    <ts>2017-06-21T10:29:38.394370</ts>
    <user>U59AF21LJ</user>
    <text>Right &lt;@U4872964V&gt;, thanks. I think I'll make a server on the side. And then use websocket / port?</text>
  </message>
  <message>
    <ts>2017-06-21T10:31:00.430653</ts>
    <user>U4872964V</user>
    <text>Well, if you have a simple REST service you'd just use the &lt;http://package.elm-lang.org/packages/elm-lang/http/latest&gt; package</text>
  </message>
  <message>
    <ts>2017-06-21T10:31:24.440748</ts>
    <user>U5X84PY9G</user>
    <text>Hi does anyone know how I can encode a set to a JSON list object?</text>
  </message>
  <message>
    <ts>2017-06-21T10:32:09.460040</ts>
    <user>U5X84PY9G</user>
    <text>I tried: Encode.list &amp;lt;| Set.map Encode.string formData.objectives</text>
  </message>
  <message>
    <ts>2017-06-21T10:32:17.463616</ts>
    <user>U4872964V</user>
    <text>&lt;@U5X84PY9G&gt;, just use `Set.toList` first</text>
  </message>
  <message>
    <ts>2017-06-21T10:32:18.463658</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U4872964V&gt; Oh right. I'm still not familiar with what you can and cannot do.</text>
  </message>
  <message>
    <ts>2017-06-21T10:32:28.468383</ts>
    <user>U59AF21LJ</user>
    <text>Thanks</text>
  </message>
  <message>
    <ts>2017-06-21T10:32:58.480398</ts>
    <user>U5X2VC483</user>
    <text>&lt;@U3SJEDR96&gt; thanks!</text>
  </message>
  <message>
    <ts>2017-06-21T10:35:06.534483</ts>
    <user>U5X84PY9G</user>
    <text>&lt;@U4872964V&gt; do you mean: Encode.list &amp;lt;| List.map Encode.string &amp;lt;| Set.toList formData.threat_objectives_at_stake</text>
  </message>
  <message>
    <ts>2017-06-21T10:36:17.564534</ts>
    <user>U4872964V</user>
    <text>looks right</text>
  </message>
  <message>
    <ts>2017-06-21T10:38:04.608414</ts>
    <user>U5X84PY9G</user>
    <text>Ok thanks a lot</text>
  </message>
  <message>
    <ts>2017-06-21T12:01:23.739511</ts>
    <user>U0JFEBK6F</user>
    <text>&lt;@U5X2VC483&gt; &lt;https://github.com/fluxxu/elm-hot-loader&gt; maintains state too :smile: </text>
  </message>
  <message>
    <ts>2017-06-21T12:07:11.880205</ts>
    <user>U23SA861Y</user>
    <text>perhaps, but unlike in python the compiler enforces it. You also don't get ancestor imports either. I suspect it's less of an issue.</text>
  </message>
  <message>
    <ts>2017-06-21T12:30:40.417166</ts>
    <user>U2M4VPZ9D</user>
    <text>&lt;@U5X2VC483&gt; I also used this &lt;https://www.npmjs.com/package/create-elm-app&gt; which packages up the elm-hot-loader mentioned by &lt;@U0JFEBK6F&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T12:52:13.888725</ts>
    <user>U42H40UBW</user>
    <text>Hi &lt;@U0CL0AS3V&gt;, I have a quick question about the SPA Conduit App that you shared a few weeks back. Is this the appropriate forum in which to ask it?</text>
  </message>
  <message>
    <ts>2017-06-21T12:55:11.953499</ts>
    <user>U42H40UBW</user>
    <text>In your comments for the Main.elm file, you say that the majority of the code in that file will go away in 0.19. I've found that as I've built my app (based on your work), that Main.elm is getting bigger.  I'm anxious that based on your comment that I'm moving in the wrong direction. so, when you say that Main.elm will largely go away what does that actually mean?</text>
  </message>
  <message>
    <ts>2017-06-21T12:55:31.960922</ts>
    <user>U42H40UBW</user>
    <text>(I guess I'll just ask the question here :slightly_smiling_face: )</text>
  </message>
  <message>
    <ts>2017-06-21T12:56:49.989810</ts>
    <user>U42H40UBW</user>
    <text>The comment in question was this: ```
-- WARNING: this whole file will become unnecessary and go away in Elm 0.19,
-- so avoid putting things in here unless there is no alternative!
```</text>
  </message>
  <message>
    <ts>2017-06-21T13:03:52.149895</ts>
    <user>U0CL0AS3V</user>
    <text>Evan is working on a design for code splitting that would mean each page has its own entry point</text>
  </message>
  <message>
    <ts>2017-06-21T13:04:10.156880</ts>
    <user>U5ABF3BH7</user>
    <text>Hello! Does anyone have an example of a search/autocomplete for an input field of a  select2. I am looking for something somewhat similar to &lt;https://github.com/evancz/elm-sortable-table/&gt;  , but in a select2 instead of a table.</text>
  </message>
  <message>
    <ts>2017-06-21T13:04:32.165117</ts>
    <user>U0CL0AS3V</user>
    <text>that may get pushed back to the release after 0.19 in order to let 0.19 ship sooner, so I may end up regretting saying 0.19 specifically :sweat_smile:</text>
  </message>
  <message>
    <ts>2017-06-21T13:04:38.167296</ts>
    <user>U0CL0AS3V</user>
    <text>point being, avoid putting logic in there</text>
  </message>
  <message>
    <ts>2017-06-21T13:04:57.174079</ts>
    <user>U0CL0AS3V</user>
    <text>because it'll inevitably end up getting moved somewhere else when that file goes away</text>
  </message>
  <message>
    <ts>2017-06-21T13:05:13.180021</ts>
    <user>U0CL0AS3V</user>
    <text>if all you're doing is things like expanding on the existing case-expressions in there, that's :thumbsup:</text>
  </message>
  <message>
    <ts>2017-06-21T13:07:08.221930</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U5ABF3BH7&gt; this may be close to what you're looking for: &lt;http://package.elm-lang.org/packages/sporto/elm-select/latest&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T13:08:01.240362</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U0LPMPL2U&gt; Thanks, I will take a look</text>
  </message>
  <message>
    <ts>2017-06-21T13:08:37.252786</ts>
    <user>U0LPMPL2U</user>
    <text>I haven't used it myself but the examples on the demo site look kind of like select2 &lt;https://sporto.github.io/elm-select/&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T13:14:08.369442</ts>
    <user>U42H40UBW</user>
    <text>Thanks &lt;@U0CL0AS3V&gt;. My file is getting bigger to handle more case-expressions, so that's reassuring. Also, any indication as to when 0.19 might land :grin:</text>
  </message>
  <message>
    <ts>2017-06-21T13:21:42.534517</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U0LPMPL2U&gt; This is not quite what I need. I need something where you can also see the choices you'd like to select from, not just an autocomplete field. You want the ability to see the content and also the ability to auto-complete. something like this &lt;https://screencast.com/t/qsn74lvauf&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T13:23:43.581378</ts>
    <user>U0LPMPL2U</user>
    <text>It looks like this is closer: &lt;http://package.elm-lang.org/packages/sporto/elm-dropdown/latest&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T13:25:14.615144</ts>
    <user>U0LPMPL2U</user>
    <text>(BTW, I'm getting these by searching for "dropdown" and "select" on &lt;http://package.elm-lang.org/&gt;. There are several libraries that there that might also fulfill your need)</text>
  </message>
  <message>
    <ts>2017-06-21T13:32:56.788319</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U0LPMPL2U&gt; Yes, that is what I am looking for. Thanks again.</text>
  </message>
  <message>
    <ts>2017-06-21T13:35:20.840942</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U0LPMPL2U&gt; after all, it is not what I am looking for, this one is just a select, the other one is just an auto-complete field, I am looking for something that does both. I will do as you suggested (searching more in &lt;http://package.elm-lang.org/&gt;.</text>
  </message>
  <message>
    <ts>2017-06-21T14:34:06.159096</ts>
    <user>U5ABF3BH7</user>
    <text>Haven't been successful at finding something that could be used both as select and auto-complete :disappointed:</text>
  </message>
  <message>
    <ts>2017-06-21T14:55:03.622577</ts>
    <user>U0CLDU8UB</user>
    <text>Do you mean you want the list to open with all the options without typing but that you can "filter" it by typing something?</text>
  </message>
  <message>
    <ts>2017-06-21T14:55:51.640588</ts>
    <user>U3SJEDR96</user>
    <text>yeah, I think a basic select2 type thing (&lt;https://select2.github.io/examples.html&gt;)</text>
  </message>
  <message>
    <ts>2017-06-21T14:58:26.698716</ts>
    <user>U3SJEDR96</user>
    <text>I think both `elm-searchable-menu` and `elm-autocomplete` support such behaviour</text>
  </message>
  <message>
    <ts>2017-06-21T15:03:51.820832</ts>
    <user>U0CLDU8UB</user>
    <text>Hmm, I suppose that is useful with some sort of data. We used this in our case (choosing the user's town of residence), but with a cursory look it doesn't look like you can make the dropdown open just by clicking the input. &lt;http://package.elm-lang.org/packages/thebritican/elm-autocomplete/latest&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T15:31:49.394393</ts>
    <user>U333XNTNY</user>
    <text>Hi! What's the best way to control the selected option of a `select`? I want to set it from the model :thinking_face:</text>
  </message>
  <message>
    <ts>2017-06-21T15:46:21.684403</ts>
    <user>U1CE9DL9H</user>
    <text>&lt;@U333XNTNY&gt; that's done with the `selected` attribute &lt;http://package.elm-lang.org/packages/elm-lang/html/2.0.0/Html-Attributes#selected&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T15:47:21.704635</ts>
    <user>U1CE9DL9H</user>
    <text>so typically you might do something like `List.map (\item -&amp;gt; option [ selected (item == model.activeItem)] [ {- some html -} ]) allItems` in your view</text>
  </message>
  <message>
    <ts>2017-06-21T15:53:27.828699</ts>
    <user>U333XNTNY</user>
    <text>I see, thanks</text>
  </message>
  <message>
    <ts>2017-06-21T16:06:10.095264</ts>
    <user>U29JSAR9S</user>
    <text>hi guys, I'm sure I'm missing something really obvious but I can't figure out how to invert the boolean condition in this filter statement: `List.filter (String.startsWith "0")`</text>
  </message>
  <message>
    <ts>2017-06-21T16:07:03.113394</ts>
    <user>U0LPMPL2U</user>
    <text>`List.filter not &amp;lt;&amp;lt; (String.startsWith "0")`</text>
  </message>
  <message>
    <ts>2017-06-21T16:07:31.122871</ts>
    <user>U29JSAR9S</user>
    <text>ah, I was using `&amp;lt;|` instead</text>
  </message>
  <message>
    <ts>2017-06-21T16:07:37.125020</ts>
    <user>U29JSAR9S</user>
    <text>doh :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-21T16:07:51.129579</ts>
    <user>U29JSAR9S</user>
    <text>cheers</text>
  </message>
  <message>
    <ts>2017-06-21T16:08:20.139213</ts>
    <user>U0LPMPL2U</user>
    <text>Quick rule of thumb, if the result needs to be a function, you probably want `&amp;lt;&amp;lt;`</text>
  </message>
  <message>
    <ts>2017-06-21T16:10:07.175962</ts>
    <user>U0LPMPL2U</user>
    <text>You can always combine manually using a lambda too: `List.filter (\n -&amp;gt; not (String.startsWith "0" n))`</text>
  </message>
  <message>
    <ts>2017-06-21T16:10:38.186743</ts>
    <user>U0LPMPL2U</user>
    <text>I'll often start with the lambda to get a feel for what I'm doing before refactoring to a `&amp;lt;&amp;lt;` implementation</text>
  </message>
  <message>
    <ts>2017-06-21T16:18:50.352019</ts>
    <user>U29JSAR9S</user>
    <text>makes sense, and good advice - cheers</text>
  </message>
  <message>
    <ts>2017-06-21T16:23:48.455342</ts>
    <user>U29JSAR9S</user>
    <text>since I've got someone who's obviously a few ElmFu belts ahead of me - is there a better way of writing something like this:

```
hexToDec : String -&amp;gt; Maybe Int
hexToDec hex =
    String.split "" hex
        |&amp;gt; List.map hexCharToDec
        |&amp;gt; \decimals -&amp;gt;
            if List.any isNothing decimals then
                Nothing
            else
                List.map (withDefault 0) decimals
                    |&amp;gt; List.reverse
                    |&amp;gt; List.indexedMap toActualValue
                    |&amp;gt; List.sum
                    |&amp;gt; Just
```

??</text>
  </message>
  <message>
    <ts>2017-06-21T16:29:06.564259</ts>
    <user>U48AEBJQ3</user>
    <text>@dans &lt;http://package.elm-lang.org/packages/rtfeldman/hex/1.0.0/Hex#fromString&gt; ?</text>
  </message>
  <message>
    <ts>2017-06-21T16:29:23.570163</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U0CLDU8UB&gt; Sorry for the delay, yes, I need something that opens a list with all options without typing and something that I can also filter it by typing.</text>
  </message>
  <message>
    <ts>2017-06-21T16:29:26.571084</ts>
    <user>U48AEBJQ3</user>
    <text>er, &lt;@U29JSAR9S&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T16:30:19.590186</ts>
    <user>U29JSAR9S</user>
    <text>&lt;@U48AEBJQ3&gt; I was doing it as a learning exercise, figured it was a solved problem but seemed like an interesting one to solve again</text>
  </message>
  <message>
    <ts>2017-06-21T16:30:59.604404</ts>
    <user>U48AEBJQ3</user>
    <text>Well, then: &lt;https://github.com/rtfeldman/hex/blob/1.0.0/src/Hex.elm#L14&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T16:32:17.631475</ts>
    <user>U0LPMPL2U</user>
    <text>In your implementation, I would probably try a combination of `List.foldl` and `Maybe.andThen` rather than the conditional + `List.map` + `List.sum`</text>
  </message>
  <message>
    <ts>2017-06-21T16:33:15.651473</ts>
    <user>U29JSAR9S</user>
    <text>cheers, I'll have a look into the `andThen` function</text>
  </message>
  <message>
    <ts>2017-06-21T16:37:43.741611</ts>
    <user>U0LPMPL2U</user>
    <text>Actually, summing Maybes should be done with `Maybe.map2 (+)`, not `Maybe.andThen`</text>
  </message>
  <message>
    <ts>2017-06-21T16:39:19.773357</ts>
    <user>U0LPMPL2U</user>
    <text>```
sumMaybes : List (Maybe Int) -&amp;gt; Maybe Int
sumMaybes digits =
  List.foldl (Maybe.map2 (+)) (Just 0) digits
```</text>
  </message>
  <message>
    <ts>2017-06-21T17:00:37.205034</ts>
    <user>U29JSAR9S</user>
    <text>&lt;@U0LPMPL2U&gt; yep, that works - I had to change my `toActualValue` function to handle Maybes but after that I was able to just use your `sumMaybes`</text>
  </message>
  <message>
    <ts>2017-06-21T17:08:09.352058</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U29JSAR9S&gt; The original `toActualValue` was `Int -&amp;gt; Int -&amp;gt; Int`? You should be able to go `Maybe.map &amp;lt;&amp;lt; toActualValue`</text>
  </message>
  <message>
    <ts>2017-06-21T17:10:57.404281</ts>
    <user>U29JSAR9S</user>
    <text>I should ask more questions in this channel, getting lots of good suggestions :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-21T17:11:26.413397</ts>
    <user>U29JSAR9S</user>
    <text>in this case though I tried that and I think the function is cleaner moving the Maybe.map inside the `toActualValue` function</text>
  </message>
  <message>
    <ts>2017-06-21T17:12:00.423732</ts>
    <user>U48AEBJQ3</user>
    <text>I would suggest against that. If you want to clean it up, make another helper function to give it a cleaner name.</text>
  </message>
  <message>
    <ts>2017-06-21T17:13:19.447684</ts>
    <user>U29JSAR9S</user>
    <text>the function name for `toActualValue` is a bit rubbish though, I know :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-21T17:14:24.467436</ts>
    <user>U48AEBJQ3</user>
    <text>Regardless of that, you are mixing concerns by having it deal with `Maybe`. It's good practice to write the function that doesn't need to know about how to take the `Maybe` apart and then inject that information using `map` or `andThen`</text>
  </message>
  <message>
    <ts>2017-06-21T17:16:55.513145</ts>
    <user>U48AEBJQ3</user>
    <text>Also, I think that you can go `Bitwise.shiftLeftBy &amp;lt;&amp;lt; (*) 4` to raise something to the appropriate power.</text>
  </message>
  <message>
    <ts>2017-06-21T17:20:31.577147</ts>
    <user>U29JSAR9S</user>
    <text>that makes sense</text>
  </message>
  <message>
    <ts>2017-06-21T17:20:42.580604</ts>
    <user>U23SA861Y</user>
    <text>instead of indexed map I'd probably use a fold there</text>
  </message>
  <message>
    <ts>2017-06-21T17:23:27.629085</ts>
    <user>U23SA861Y</user>
    <text>`foldr (\v (p,a) -&amp;gt; (p*16,a+p*v)) (1,0) digits`</text>
  </message>
  <message>
    <ts>2017-06-21T17:29:03.726015</ts>
    <user>U23SA861Y</user>
    <text>likewise a maybe list function can be constructed
```
maybeList: List (Maybe a) -&amp;gt; Maybe (List a) 
maybeList l =
  let 
   mapped = List.filterMap identity
  in 
   if List.length mapped = List.length l then
      Just mapped
   else
     Nothing
```</text>
  </message>
  <message>
    <ts>2017-06-21T17:33:05.796329</ts>
    <user>U29JSAR9S</user>
    <text>so you're suggesting something like:
```
hexToDec : String -&amp;gt; Maybe Int
hexToDec hex =
    String.split "" hex
        |&amp;gt; List.map hexCharToDec
        |&amp;gt; maybeList
        |&amp;gt; (Maybe.map &amp;lt;&amp;lt; Tuple.second &amp;lt;&amp;lt; foldr (\v (p,a) -&amp;gt; (p*16,a+p*v)) (1,0))

```
?</text>
  </message>
  <message>
    <ts>2017-06-21T17:34:14.815216</ts>
    <user>U23SA861Y</user>
    <text>it would do the thing, I'd probably split out the `Tuple.second &amp;lt;&amp;lt; foldr` into a named function because it's a bit dense and give it a nice name</text>
  </message>
  <message>
    <ts>2017-06-21T17:34:30.819836</ts>
    <user>U23SA861Y</user>
    <text>accumlate list</text>
  </message>
  <message>
    <ts>2017-06-21T17:34:54.826688</ts>
    <user>U23SA861Y</user>
    <text>or have it be accumulateWithStride and have the 16 come in as a parameter</text>
  </message>
  <message>
    <ts>2017-06-21T17:35:31.837216</ts>
    <user>U23SA861Y</user>
    <text>The only thing not specified would be what happens to the empty list</text>
  </message>
  <message>
    <ts>2017-06-21T17:36:42.856761</ts>
    <user>U48AEBJQ3</user>
    <text>I think I would like `sumDigits : Int -&amp;gt; List Int -&amp;gt; Int` better.</text>
  </message>
  <message>
    <ts>2017-06-21T17:36:58.861277</ts>
    <user>U48AEBJQ3</user>
    <text>But names are hard.</text>
  </message>
  <message>
    <ts>2017-06-21T17:38:19.883051</ts>
    <user>U29JSAR9S</user>
    <text>just trying to test it out as I'm not convinced it does actually solve it (I think it might miss the case when you don't multiply by a power at all for the first hex digit) - getting: 

```
the argument to function `length` is causing a mismatch.

120|            List.length mapped 
                            ^^^^^^
Function `length` is expecting the argument to be:

    List b

But it is:

    List (Maybe b) -&amp;gt; List b
```

for the maybeList function - and I'm too tired to figure out whats up myself :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-21T17:38:51.892418</ts>
    <user>U23SA861Y</user>
    <text>ahh the line should be `List.filterMap identity l`</text>
  </message>
  <message>
    <ts>2017-06-21T17:38:58.894101</ts>
    <user>U23SA861Y</user>
    <text>my bad</text>
  </message>
  <message>
    <ts>2017-06-21T17:40:25.917797</ts>
    <user>U23SA861Y</user>
    <text>well the first digit should be multplied by one, the second by 16 and so on</text>
  </message>
  <message>
    <ts>2017-06-21T17:40:49.924704</ts>
    <user>U29JSAR9S</user>
    <text>ah, of course</text>
  </message>
  <message>
    <ts>2017-06-21T17:41:35.937601</ts>
    <user>U23SA861Y</user>
    <text>the one thing it does to would be return 0 for an empty list as opposed to say Nothing</text>
  </message>
  <message>
    <ts>2017-06-21T17:42:12.947578</ts>
    <user>U48AEBJQ3</user>
    <text>How about
```
maybeList : List (Maybe a) -&amp;gt; Maybe (List a)
maybeList =
    List.foldr (Maybe.map2 (::)) (Just [])
```</text>
  </message>
  <message>
    <ts>2017-06-21T17:43:05.962137</ts>
    <user>U23SA861Y</user>
    <text>hmm, yes I think that would do what you want</text>
  </message>
  <message>
    <ts>2017-06-21T17:47:15.029282</ts>
    <user>U29JSAR9S</user>
    <text>cheers guys, been interesting working through this with you - my understanding of how to handle Maybe's has definitely come along this evening!</text>
  </message>
  <message>
    <ts>2017-06-21T17:47:42.036350</ts>
    <user>U23SA861Y</user>
    <text>no problem, and good luck</text>
  </message>
  <message>
    <ts>2017-06-21T17:48:06.042393</ts>
    <user>U23SA861Y</user>
    <text>in your further learnins for great profit</text>
  </message>
  <message>
    <ts>2017-06-21T17:53:14.122711</ts>
    <user>U29JSAR9S</user>
    <text>last one for you, for the road:
```
maybeTuple3 : ( Maybe a, Maybe b, Maybe c ) -&amp;gt; Maybe ( a, b, c )
maybeTuple3 tuple =
    case tuple of
        ( Just a, Just b, Just c ) -&amp;gt;
            Just ( a, b, c )

        _ -&amp;gt;
            Nothing
```

Trying to figure out how to do this with a Maybe.mapX</text>
  </message>
  <message>
    <ts>2017-06-21T17:54:18.139581</ts>
    <user>U23SA861Y</user>
    <text>I think you probably want curry3 or something like that</text>
  </message>
  <message>
    <ts>2017-06-21T17:55:20.155816</ts>
    <user>U23SA861Y</user>
    <text>mmm there is only curry and uncurry no uncurry 3</text>
  </message>
  <message>
    <ts>2017-06-21T17:56:39.175876</ts>
    <user>U23SA861Y</user>
    <text>but perhaps you could write it
```
uncurry3 : (a -&amp;gt; b -&amp;gt; c -&amp;gt; d) -&amp;gt; (a,b,c) -&amp;gt; d
uncurry3 f (a,b,c) = f a b c
```</text>
  </message>
  <message>
    <ts>2017-06-21T17:57:24.187378</ts>
    <user>U23SA861Y</user>
    <text>then it would go together something like `maybeTuple3 = uncurry3 (Maybe.map3 (,,))`</text>
  </message>
  <message>
    <ts>2017-06-21T17:57:57.195515</ts>
    <user>U23SA861Y</user>
    <text>I think, this is me coding without checking if it compiles</text>
  </message>
  <message>
    <ts>2017-06-21T17:58:18.201167</ts>
    <user>U29JSAR9S</user>
    <text>this works :
```
maybeTuple3 : ( Maybe a, Maybe b, Maybe c ) -&amp;gt; Maybe ( a, b, c )
maybeTuple3 ( a, b, c ) =
    Maybe.map3 (,,) a b c
```</text>
  </message>
  <message>
    <ts>2017-06-21T17:58:27.203360</ts>
    <user>U29JSAR9S</user>
    <text>I didn't realise you could do the (,,) thing</text>
  </message>
  <message>
    <ts>2017-06-21T17:58:40.206870</ts>
    <user>U23SA861Y</user>
    <text>well there you go</text>
  </message>
  <message>
    <ts>2017-06-21T17:58:47.208582</ts>
    <user>U29JSAR9S</user>
    <text>cheers :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-21T17:58:51.209601</ts>
    <user>U29JSAR9S</user>
    <text>again</text>
  </message>
  <message>
    <ts>2017-06-21T17:58:55.210699</ts>
    <user>U29JSAR9S</user>
    <text>:beers:</text>
  </message>
  <message>
    <ts>2017-06-21T17:59:24.218000</ts>
    <user>U23SA861Y</user>
    <text>:beers: :beers:</text>
  </message>
  <message>
    <ts>2017-06-21T18:08:10.347432</ts>
    <user>U5V0HVAKB</user>
    <text>hello all</text>
  </message>
  <message>
    <ts>2017-06-21T18:08:17.349030</ts>
    <user>U5V0HVAKB</user>
    <text>i am just starting to learn elm</text>
  </message>
  <message>
    <ts>2017-06-21T18:08:39.354068</ts>
    <user>U5V0HVAKB</user>
    <text>and i follow the official guide and try to add helpers to my form</text>
  </message>
  <message>
    <ts>2017-06-21T18:08:49.356191</ts>
    <user>U5V0HVAKB</user>
    <text>what can i do for checking a type of a var?</text>
  </message>
  <message>
    <ts>2017-06-21T18:09:03.359488</ts>
    <user>U5V0HVAKB</user>
    <text>&lt;https://guide.elm-lang.org/architecture/user_input/forms.html&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T18:09:13.361660</ts>
    <user>U5V0HVAKB</user>
    <text>Add an additional field for age and check that it is a number.</text>
  </message>
  <message>
    <ts>2017-06-21T18:09:22.363848</ts>
    <user>U5V0HVAKB</user>
    <text>i am trying to doing that</text>
  </message>
  <message>
    <ts>2017-06-21T18:09:33.366356</ts>
    <user>U5V0HVAKB</user>
    <text>but no idea and dont find doc about that</text>
  </message>
  <message>
    <ts>2017-06-21T18:09:56.371331</ts>
    <user>U23SA861Y</user>
    <text>well it's going to be handed back as a string, so attempting to convert it to an in will fail if its not a valid int</text>
  </message>
  <message>
    <ts>2017-06-21T18:10:23.377714</ts>
    <user>U23SA861Y</user>
    <text>Look in the strings package</text>
  </message>
  <message>
    <ts>2017-06-21T18:10:34.380358</ts>
    <user>U5V0HVAKB</user>
    <text>using toString ?</text>
  </message>
  <message>
    <ts>2017-06-21T18:11:12.389000</ts>
    <user>U1AN4JRFV</user>
    <text>`String.toInt` ?</text>
  </message>
  <message>
    <ts>2017-06-21T18:11:15.389444</ts>
    <user>U23SA861Y</user>
    <text>right and its going to give you a Result which is either a valid Int or an error</text>
  </message>
  <message>
    <ts>2017-06-21T18:11:36.393975</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/String#toInt&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T18:12:07.400744</ts>
    <user>U23SA861Y</user>
    <text>you need to handle both the case where it succeeds as well as when it fails.</text>
  </message>
  <message>
    <ts>2017-06-21T18:13:56.424824</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;https://guide.elm-lang.org/error_handling/result.html&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T18:22:12.531990</ts>
    <user>U5V0HVAKB</user>
    <text>wow not really clear</text>
  </message>
  <message>
    <ts>2017-06-21T18:22:19.533651</ts>
    <user>U5V0HVAKB</user>
    <text>how to get the Err value</text>
  </message>
  <message>
    <ts>2017-06-21T18:23:11.544155</ts>
    <user>U23SA861Y</user>
    <text>it's an algebraic data type or union type, the link &lt;@U1AN4JRFV&gt;  gave shows how you extract the types with a case statement</text>
  </message>
  <message>
    <ts>2017-06-21T18:23:19.545858</ts>
    <user>U23SA861Y</user>
    <text>well, one way to extract the info</text>
  </message>
  <message>
    <ts>2017-06-21T18:25:55.578788</ts>
    <user>U1AN4JRFV</user>
    <text>``` case String.toInt userInputAge of
    Err thisIsTheErrorValue -&amp;gt;
      span [class "error"] [text thisIsTheErrorValue]

    Ok age -&amp;gt;
       ... more html ```</text>
  </message>
  <message>
    <ts>2017-06-21T18:25:56.579178</ts>
    <user>U5XHTBFS6</user>
    <text>Hi, y'all!
I'm having some trouble with the Http package, it seems it is not sending the headers i'm passing to the `request` function. I'm very new to frontend development, so I don't know if it's something I did, or if it's something with Elm itself, or some CORS constraint...

Any help on how to send headers would be appreciated!

Here's a simple program that reproduces my problem:</text>
  </message>
  <message>
    <ts>2017-06-21T18:26:01.580326</ts>
    <user>U5V0HVAKB</user>
    <text>``` isConvertible : String -&amp;gt; Html msg
isConvertible t =
 let
    (color, message) =
      case String.toInt t of
        Err msg -&amp;gt;
          ("red", "not a number")

        Ok age -&amp;gt;
          ("green", "OK")
   in
     div [ style [("color", color)] ] [ text message ] ```</text>
  </message>
  <message>
    <ts>2017-06-21T18:26:16.583491</ts>
    <user>U5V0HVAKB</user>
    <text>its working but maybe its better to do a function ?</text>
  </message>
  <message>
    <ts>2017-06-21T18:26:23.584853</ts>
    <user>U5V0HVAKB</user>
    <text>that return true or false?</text>
  </message>
  <message>
    <ts>2017-06-21T18:27:09.593793</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U5V0HVAKB&gt; I would put either the result in your model or convert it to a maybe type and store that.</text>
  </message>
  <message>
    <ts>2017-06-21T18:27:13.594624</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U5V0HVAKB&gt; rather one that returns `(String,String)`</text>
  </message>
  <message>
    <ts>2017-06-21T18:28:13.606861</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U5XHTBFS6&gt; what kind of error is the browser console showing?</text>
  </message>
  <message>
    <ts>2017-06-21T18:31:01.640784</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U5V0HVAKB&gt; err, nvm you need to set the field with the string value. Yeah you could probably refactor that code into something that returns a list of validation errors and then renders the list or shows ok if now validation errors are present</text>
  </message>
  <message>
    <ts>2017-06-21T18:31:17.644197</ts>
    <user>U5XHTBFS6</user>
    <text>&lt;@U23SA861Y&gt; No errors. When I open the the network tab on the inspector, I can see that the request is sent, but my headers are missing from the "request headers section"</text>
  </message>
  <message>
    <ts>2017-06-21T18:32:34.660087</ts>
    <user>U5XHTBFS6</user>
    <text>And I did a simple server that prints the headers received, and it prints the samething as the browser</text>
  </message>
  <message>
    <ts>2017-06-21T18:32:53.663842</ts>
    <user>U5XHTBFS6</user>
    <text>just general accept, user-agent etc., but with my headers missing</text>
  </message>
  <message>
    <ts>2017-06-21T18:33:29.670749</ts>
    <user>U23SA861Y</user>
    <text>if your page is served from localhost then CORS is not the issue (it would return a browser error for that either way)</text>
  </message>
  <message>
    <ts>2017-06-21T18:34:34.683581</ts>
    <user>U5V0HVAKB</user>
    <text>``` isConvertible t = \
  case String.toInt t of \
   Err msg -&amp;gt; \
     False \
   Ok age -&amp;gt; \
     True ```</text>
  </message>
  <message>
    <ts>2017-06-21T18:34:51.686963</ts>
    <user>U1AN4JRFV</user>
    <text>oh, yes, for that problem, totally</text>
  </message>
  <message>
    <ts>2017-06-21T18:34:59.688721</ts>
    <user>U5V0HVAKB</user>
    <text>ok i get it</text>
  </message>
  <message>
    <ts>2017-06-21T18:35:47.698348</ts>
    <user>U5V0HVAKB</user>
    <text>i dont know all the syntaxes etc of this new lang again :disappointed:</text>
  </message>
  <message>
    <ts>2017-06-21T18:36:16.703999</ts>
    <user>U23SA861Y</user>
    <text>that's why you're here isn't it :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-21T18:36:17.704250</ts>
    <user>U5V0HVAKB</user>
    <text>is there a better way than just reading the &lt;https://guide.elm-lang.org&gt; ?</text>
  </message>
  <message>
    <ts>2017-06-21T18:36:25.705786</ts>
    <user>U5V0HVAKB</user>
    <text>ye ^^ it's look like awesome</text>
  </message>
  <message>
    <ts>2017-06-21T18:37:39.720371</ts>
    <user>U23SA861Y</user>
    <text>Doing, functional programming is not just a syntax shift. It requires a bit of shift in your thinking. It's going to be difficult but very worth it. Even if you don't work in another functional language, thinking in a functional style allows you to tackle problems in a new light. Which is always useful.</text>
  </message>
  <message>
    <ts>2017-06-21T18:38:27.729666</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U5XHTBFS6&gt; I can't say I've done much work with custom headers so I wouldn't know.</text>
  </message>
  <message>
    <ts>2017-06-21T18:38:37.731598</ts>
    <user>U23SA861Y</user>
    <text>some of the core guys might have a better idea</text>
  </message>
  <message>
    <ts>2017-06-21T18:38:48.733655</ts>
    <user>U23SA861Y</user>
    <text>sigh, thanks slackbot</text>
  </message>
  <message>
    <ts>2017-06-21T18:39:02.736096</ts>
    <user>U5XHTBFS6</user>
    <text>I agree. You can learn from functional languages and apply the concepts in other paradigms, such as composability of code, immutability of data, greek words that sound smart...</text>
  </message>
  <message>
    <ts>2017-06-21T18:39:17.739020</ts>
    <user>U5XHTBFS6</user>
    <text>=P</text>
  </message>
  <message>
    <ts>2017-06-21T18:39:31.741632</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U5V0HVAKB&gt;: your are not using the request</text>
  </message>
  <message>
    <ts>2017-06-21T18:39:34.742259</ts>
    <user>U23SA861Y</user>
    <text>dare is say...... *whispers* monads</text>
  </message>
  <message>
    <ts>2017-06-21T18:39:47.744557</ts>
    <user>U1AN4JRFV</user>
    <text>no, wrong one</text>
  </message>
  <message>
    <ts>2017-06-21T18:40:37.754299</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U5XHTBFS6&gt;, in the code above, you are creating a request, but then you never use it, right?</text>
  </message>
  <message>
    <ts>2017-06-21T18:40:52.757489</ts>
    <user>U5XHTBFS6</user>
    <text>In all seriousness though, I think the more paradigms one uses the better. Learn procedural, declarative, functional, OO, logical, reactive functional, parallel...</text>
  </message>
  <message>
    <ts>2017-06-21T18:41:28.764254</ts>
    <user>U0JFGGZS6</user>
    <text>This might help although it's still an early draft.  &lt;https://evancz.gitbooks.io/functional-programming-in-elm/&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T18:41:39.766332</ts>
    <user>U5XHTBFS6</user>
    <text>&lt;@U1AN4JRFV&gt;  I use the response of the request on a `&amp;lt;p&amp;gt;` on the view. Or so I think? Maybe I'm missing somthing.</text>
  </message>
  <message>
    <ts>2017-06-21T18:42:02.770878</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U1AN4JRFV&gt; he's sending out the command, but apparently the request does not contain the specified headers</text>
  </message>
  <message>
    <ts>2017-06-21T18:42:19.774014</ts>
    <user>U5XHTBFS6</user>
    <text>Anyway, the request *is* being made, it's just the headers that are missing.</text>
  </message>
  <message>
    <ts>2017-06-21T18:42:35.777215</ts>
    <user>U23SA861Y</user>
    <text>how are you loading the page 127.0.0.1 or localhost</text>
  </message>
  <message>
    <ts>2017-06-21T18:42:41.778225</ts>
    <user>U1AN4JRFV</user>
    <text>well, but not the one you specify</text>
  </message>
  <message>
    <ts>2017-06-21T18:42:59.781465</ts>
    <user>U1AN4JRFV</user>
    <text>you need to `Http.send  GetResponse request`</text>
  </message>
  <message>
    <ts>2017-06-21T18:43:10.783492</ts>
    <user>U5XHTBFS6</user>
    <text>ZOMG</text>
  </message>
  <message>
    <ts>2017-06-21T18:43:13.783911</ts>
    <user>U5XHTBFS6</user>
    <text>so obvious</text>
  </message>
  <message>
    <ts>2017-06-21T18:43:15.784365</ts>
    <user>U5XHTBFS6</user>
    <text>lol</text>
  </message>
  <message>
    <ts>2017-06-21T18:43:17.784788</ts>
    <user>U23SA861Y</user>
    <text>heh</text>
  </message>
  <message>
    <ts>2017-06-21T18:43:17.784866</ts>
    <user>U5XHTBFS6</user>
    <text>thanks a lot</text>
  </message>
  <message>
    <ts>2017-06-21T18:43:21.785603</ts>
    <user>U1AN4JRFV</user>
    <text>np</text>
  </message>
  <message>
    <ts>2017-06-21T18:43:22.785869</ts>
    <user>U23SA861Y</user>
    <text>I didn't see that good catch</text>
  </message>
  <message>
    <ts>2017-06-21T18:43:32.787662</ts>
    <user>U5XHTBFS6</user>
    <text>I'm strugling with that for a few hours now</text>
  </message>
  <message>
    <ts>2017-06-21T18:43:35.788173</ts>
    <user>U5XHTBFS6</user>
    <text>¬¬</text>
  </message>
  <message>
    <ts>2017-06-21T18:43:45.790134</ts>
    <user>U1AN4JRFV</user>
    <text>"it was just for testing"!</text>
  </message>
  <message>
    <ts>2017-06-21T18:44:08.794524</ts>
    <user>U1AN4JRFV</user>
    <text>yeah, i know that feeling. lets put that there for now.... and forgotten</text>
  </message>
  <message>
    <ts>2017-06-21T18:44:46.801632</ts>
    <user>U5XHTBFS6</user>
    <text>Yeah, I changed that and it worked. Thanks! =D</text>
  </message>
  <message>
    <ts>2017-06-21T18:44:51.802583</ts>
    <user>U1AN4JRFV</user>
    <text>cool beans</text>
  </message>
  <message>
    <ts>2017-06-21T18:46:52.825291</ts>
    <user>U5XHTBFS6</user>
    <text>a warning on unused vars would be a nice feature on elm-make. Where can I report this suggestion?</text>
  </message>
  <message>
    <ts>2017-06-21T18:49:44.857387</ts>
    <user>U1AN4JRFV</user>
    <text>elm-analyse might do that, not sure, but built in definitely would be cool too. maybe &lt;@U0EUHKVGB&gt; is still around to answer that precisely?</text>
  </message>
  <message>
    <ts>2017-06-21T18:50:56.871031</ts>
    <user>U0EUHKVGB</user>
    <text>Hello</text>
  </message>
  <message>
    <ts>2017-06-21T18:51:10.873537</ts>
    <user>U0EUHKVGB</user>
    <text>&lt;@U5XHTBFS6&gt; elm-analyse can do that for you</text>
  </message>
  <message>
    <ts>2017-06-21T18:51:30.877380</ts>
    <user>U0EUHKVGB</user>
    <text>&lt;https://www.npmjs.com/package/elm-analyse&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T18:53:36.901520</ts>
    <user>U5XHTBFS6</user>
    <text>This elm-analyse tool looks good, I'll check it out! Thanks &lt;@U1AN4JRFV&gt; &lt;@U0EUHKVGB&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T18:59:08.962725</ts>
    <user>U5V0HVAKB</user>
    <text>``` passwordValid : Model -&amp;gt; Bool
passwordValid model = 
  if String.length model.password &amp;lt; 8 then
   False
  else if String.length model.passwordAgain &amp;lt; 8 then
   False
  else if not (model.password == model.passwordAgain) then
   False
  else
   True


viewValidation : Model -&amp;gt; Html msg
viewValidation model =
      if not (passwordValid model) then
       div [ style [("color", "red")] ] [ text "password error" ]
      else
       button [ style [("color", "green")] ] [ text "Send" ] ```</text>
  </message>
  <message>
    <ts>2017-06-21T18:59:16.964217</ts>
    <user>U5V0HVAKB</user>
    <text>ok i get it</text>
  </message>
  <message>
    <ts>2017-06-21T18:59:21.965078</ts>
    <user>U5V0HVAKB</user>
    <text>aha looks azesome</text>
  </message>
  <message>
    <ts>2017-06-21T19:00:18.976872</ts>
    <user>U1AN4JRFV</user>
    <text>elm is not only a joy when you learn it, it's also a joy to see others learn it :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-21T19:01:07.987309</ts>
    <user>U5V0HVAKB</user>
    <text>aha ^^</text>
  </message>
  <message>
    <ts>2017-06-21T19:02:12.999297</ts>
    <user>U5V0HVAKB</user>
    <text>i didnt realise but its the same typing function as angular 2</text>
  </message>
  <message>
    <ts>2017-06-21T19:02:18.000560</ts>
    <user>U5V0HVAKB</user>
    <text>with typescript</text>
  </message>
  <message>
    <ts>2017-06-21T19:05:28.036131</ts>
    <user>U5ABF3BH7</user>
    <text>Hi again. Would anyone be willing to take a look at this program &lt;https://ellie-app.com/3xJW7xbNLJZa1/2&gt; and give me suggestions on how to make the select also auto-complete?  I have a select element and an input field below, the input field auto-completes, I would like the select to also do auto-complete. 
In other words, I need something that opens a list with all options without typing, but that  can also filter by typing. 
(The example is a simplified version of the example in &lt;https://github.com/SimplyNaOH/elm-searchable-menu/blob/master/examples/src/Example.elm&gt;) where I added the select element)</text>
  </message>
  <message>
    <ts>2017-06-21T19:29:10.281017</ts>
    <user>U5ABF3BH7</user>
    <text>What I am trying to do is something like select2 in Elm &lt;https://select2.github.io/examples.html&gt;</text>
  </message>
  <message>
    <ts>2017-06-21T19:34:22.333577</ts>
    <user>U5ABF3BH7</user>
    <text>My only option might be to talk to Javascript.</text>
  </message>
  <message>
    <ts>2017-06-21T19:42:59.414779</ts>
    <user>U5ABF3BH7</user>
    <text>We are transitioning from Rails to Elm. I am unsure how to reproduce what we got with  select2 through JQuery Does anyone have advice on how to go about it?</text>
  </message>
  <message>
    <ts>2017-06-21T19:45:23.437097</ts>
    <user>U0J1M0F32</user>
    <text>From Rails to Elm? The whole app or just the front end?</text>
  </message>
  <message>
    <ts>2017-06-21T19:45:44.440698</ts>
    <user>U5ABF3BH7</user>
    <text>just the front end</text>
  </message>
  <message>
    <ts>2017-06-21T19:46:33.448016</ts>
    <user>U0J1M0F32</user>
    <text>Gotcha. I think for what you want you're gonna need some custom code, probably a port at some point.</text>
  </message>
  <message>
    <ts>2017-06-21T19:47:59.460971</ts>
    <user>U0J1M0F32</user>
    <text>I'm looking over what you have, and, without diving into it entirely (so I could be wrong), it looks like you have a lot of what you want and it may be more of a styling issue at this point.</text>
  </message>
  <message>
    <ts>2017-06-21T19:49:08.471227</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U0J1M0F32&gt; I don't seem to be able to put the 2 together though</text>
  </message>
  <message>
    <ts>2017-06-21T19:50:37.485284</ts>
    <user>U5ABF3BH7</user>
    <text>I am pretty new with Elm, as you can probably tell. Do you know if  there a way to use a JQuery library through the ports?</text>
  </message>
  <message>
    <ts>2017-06-21T19:51:13.490760</ts>
    <user>U0J1M0F32</user>
    <text>You can use JQuery libraries through ports, but I'd advice against it if possible. It gets messy quick.</text>
  </message>
  <message>
    <ts>2017-06-21T19:54:52.523750</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U0J1M0F32&gt; ok. Thanks</text>
  </message>
  <message>
    <ts>2017-06-21T19:59:58.570847</ts>
    <user>U5PMCBK6V</user>
    <text>hello. I'm new to elm, and was wondering about the "time traveling" debugging. This feature is possible because in the elm runtime there is a single message bus through which all events are serialized?</text>
  </message>
  <message>
    <ts>2017-06-21T20:02:01.592067</ts>
    <user>U23SA861Y</user>
    <text>more because there is a single well defined state</text>
  </message>
  <message>
    <ts>2017-06-21T20:08:35.649438</ts>
    <user>U23SA861Y</user>
    <text>in general it's due to lack of side effects in code. meaning I can simply log cmds and state and replay it backwards and forwards</text>
  </message>
  <message>
    <ts>2017-06-21T20:11:31.674936</ts>
    <user>U5PMCBK6V</user>
    <text>hi &lt;@U23SA861Y&gt;. cmds are consumed by the elm runtime?</text>
  </message>
  <message>
    <ts>2017-06-21T20:12:11.680402</ts>
    <user>U23SA861Y</user>
    <text>indeed they are</text>
  </message>
  <message>
    <ts>2017-06-21T20:12:26.682472</ts>
    <user>U23SA861Y</user>
    <text>Which it in turn uses to generate a stream of messages for your update function</text>
  </message>
  <message>
    <ts>2017-06-21T20:13:07.687832</ts>
    <user>U5PMCBK6V</user>
    <text>ah thanks. Stream of messages terminology is relatable to me, coming from js world</text>
  </message>
  <message>
    <ts>2017-06-21T20:13:32.691315</ts>
    <user>U5PMCBK6V</user>
    <text>and the elm compiler checks that each possible message maps to an update function</text>
  </message>
  <message>
    <ts>2017-06-21T20:13:57.694662</ts>
    <user>U23SA861Y</user>
    <text>mm, there is only a single update function, but it checks that the update function handles all possible messages</text>
  </message>
  <message>
    <ts>2017-06-21T20:14:24.698558</ts>
    <user>U5PMCBK6V</user>
    <text>ah thanks</text>
  </message>
  <message>
    <ts>2017-06-21T21:05:00.095710</ts>
    <user>U5X2ZRFDF</user>
    <text>Is it considered bad style to create a type with a single constructor wrapping a record? The down side is that you have to pattern match the constructor to get at the record in order to use dot notation. The up side is the strong nominal typing guarantee.</text>
  </message>
  <message>
    <ts>2017-06-21T21:10:16.135898</ts>
    <user>U5X2ZRFDF</user>
    <text>E.g. `type Foo = Foo { x : Int, y : Int }`</text>
  </message>
  <message>
    <ts>2017-06-21T21:17:24.191128</ts>
    <user>U5X2ZRFDF</user>
    <text>I guess Evan also pointed out that wrapping the record can be used to hide the representation from library users. I probably have no need for that in my case. </text>
  </message>
  <message>
    <ts>2017-06-21T21:41:57.376159</ts>
    <user>U2UGVS24E</user>
    <text>&lt;@U5X2ZRFDF&gt; I would not consider it bad style at all. In our application we tried to do that as much as possible where it made sense, for the reason you described.  Elm has great pattern matching, so it's very easy to access said fields in a function definition, etc.

E.g

```
myFunc (Foo {x, y}) =
    x + y
```</text>
  </message>
  <message>
    <ts>2017-06-21T21:42:46.382157</ts>
    <user>U2UGVS24E</user>
    <text>If I recall correctly, you don't need the parentheses if you only have one argument</text>
  </message>
  <message>
    <ts>2017-06-21T21:46:09.407744</ts>
    <user>U2UGVS24E</user>
    <text>And if you need to reference the entire value again, you can use the `as` keyword:

```
myFunc (Foo {x, y} as fooValue) =
   ...
```</text>
  </message>
  <message>
    <ts>2017-06-21T22:01:55.531005</ts>
    <user>U5X2ZRFDF</user>
    <text>Good point, thanks. I have been accessing the record via:
```
myFunc (Foo foo) =
    foo.x + foo.y
```
...so that's another option. What's tricky is if you have a list of foos and you want to map an accessor over them. </text>
  </message>
  <message>
    <ts>2017-06-21T22:07:14.571977</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5X2ZRFDF&gt; The common pattern for that is to define a `map` function for your type that applies functions to the unwrapped record value</text>
  </message>
  <message>
    <ts>2017-06-21T22:09:38.589580</ts>
    <user>U5X2ZRFDF</user>
    <text>That makes total sense, considering it's a separate type, and Elm likes to keep its map functions clearly distinct.</text>
  </message>
  <message>
    <ts>2017-06-22T03:09:13.732903</ts>
    <user>U5X2VC483</user>
    <text>&lt;@U0JFEBK6F&gt; &lt;@U2M4VPZ9D&gt; thanks for the heads-up about fluxxu's elm-hot-loader and create-elm-app</text>
  </message>
  <message>
    <ts>2017-06-22T03:23:37.893880</ts>
    <user>U2M4VPZ9D</user>
    <text>No problem &lt;@U5X2VC483&gt; I was at a Meetup and some ClojureScript people were talking about how cool ClojureScript is at hot code reloading. Elm is not at that level, but with the hot loader, it is close enough.</text>
  </message>
  <message>
    <ts>2017-06-22T03:32:43.005337</ts>
    <user>U5WD40ZA9</user>
    <text>I'm trying to create a input autocomplete dropdown like this one: &lt;http://gregziegan.com/elm-autocomplete/&gt; 

I've managed to do so, but I would like to add the feature that when the dropdown suggestions is shown and the user presses outside of the dropdown, the dropdown closes. Any suggestions :slightly_smiling_face:?</text>
  </message>
  <message>
    <ts>2017-06-22T03:54:06.269109</ts>
    <user>U0CLDU8UB</user>
    <text>The classical JS solution is to make a click handler that closes it for the entire page behind the dropdown.</text>
  </message>
  <message>
    <ts>2017-06-22T04:03:05.392205</ts>
    <user>U4872964V</user>
    <text>&lt;@U0CLDU8UB&gt; but not for clicks in the input field, right? I wonder how to best do that in Elm</text>
  </message>
  <message>
    <ts>2017-06-22T04:14:27.546268</ts>
    <user>U0JFEBK6F</user>
    <text>oscarevert: The way I've done it: Keep track of the rect for your input/dropdown (i.e in your model), you could use something like &lt;http://package.elm-lang.org/packages/debois/elm-dom/1.2.3/DOM#boundingClientRect&gt;) and then set up a subscription to &lt;http://package.elm-lang.org/packages/elm-lang/mouse/1.0.1/Mouse#clicks&gt; to check for clicks outside your input/dropdown</text>
  </message>
  <message>
    <ts>2017-06-22T04:30:36.777712</ts>
    <user>U2D5SAEMN</user>
    <text>I'm building a filterable list of events and I'm wondering if I'm on the right track: &lt;https://ellie-app.com/3xVrLFYmdnra1/3&gt; Specifically:
1. As `EventType` is a union type, how can I filter the list of events on e.g. `Birthday` without taking it's extra `Int` parameter (age) into account?
2. When I pass `Birthday` as the `EventType` to the `SetTypeFilter` message, I need to pass in an extra value for the age as well. Would there be a better way to do this?</text>
  </message>
  <message>
    <ts>2017-06-22T04:34:50.840002</ts>
    <user>U0CLDU8UB</user>
    <text>Yeah, this seems odd and could lead to bugs: `(\_ -&amp;gt; SetTypeFilter (Birthday 0))`</text>
  </message>
  <message>
    <ts>2017-06-22T04:36:30.864284</ts>
    <user>U0CLDU8UB</user>
    <text>What do the numbers represent in the types?</text>
  </message>
  <message>
    <ts>2017-06-22T04:38:05.887130</ts>
    <user>U2D5SAEMN</user>
    <text>with Birthday it's the age he/she will reach, with Employment it's the work anniversary (e.g. working for 5 years at the company), with Marriage it's the wedding anniversary (e.g. being married for 10 years)</text>
  </message>
  <message>
    <ts>2017-06-22T04:38:24.892035</ts>
    <user>U0CLDU8UB</user>
    <text>oooh, okay</text>
  </message>
  <message>
    <ts>2017-06-22T04:38:38.895535</ts>
    <user>U2D5SAEMN</user>
    <text>I use these in the rendering, e.g. "2017-06-21 It's the birthday of Pete Promo, becoming 42 years old"</text>
  </message>
  <message>
    <ts>2017-06-22T04:39:51.913301</ts>
    <user>U2D5SAEMN</user>
    <text>Since the numbers belong to the event type, I figured using a union type.</text>
  </message>
  <message>
    <ts>2017-06-22T04:41:40.941207</ts>
    <user>U0CLDU8UB</user>
    <text>Hmm, this makes me feel like putting a function in the SetTypeFilter message, but that's never a good solution (and it also makes the debugger not work)...</text>
  </message>
  <message>
    <ts>2017-06-22T04:42:08.947978</ts>
    <user>U0CLDU8UB</user>
    <text>There's probably an easier modeling of this problem.</text>
  </message>
  <message>
    <ts>2017-06-22T04:44:10.978352</ts>
    <user>U2D5SAEMN</user>
    <text>I could place the numbers in a separate property on the Event, e.g. `payload: Maybe Int`? Then the EventType union type doesn't need the extra parameter.</text>
  </message>
  <message>
    <ts>2017-06-22T04:50:19.070105</ts>
    <user>U0CLDU8UB</user>
    <text>I have an idea that would work rather nicely, but involves understanding extensible records. Your idea works too, and it's not bad at all.</text>
  </message>
  <message>
    <ts>2017-06-22T04:50:53.079094</ts>
    <user>U0CLDU8UB</user>
    <text>I'll update the Ellie to the idea that I have just as a reference, in case you're interested</text>
  </message>
  <message>
    <ts>2017-06-22T04:52:05.097230</ts>
    <user>U2D5SAEMN</user>
    <text>really? wow, thanks! :raised_hands:</text>
  </message>
  <message>
    <ts>2017-06-22T04:55:18.146300</ts>
    <user>U4872964V</user>
    <text>A simple option is to have a separate union type for filters, like `BirthdayFilter` etc, and then have a filter function that does `case` on that type. More boilerplate, but type safe</text>
  </message>
  <message>
    <ts>2017-06-22T04:56:56.171180</ts>
    <user>U2D5SAEMN</user>
    <text>How would the filter function work then?</text>
  </message>
  <message>
    <ts>2017-06-22T04:57:33.180565</ts>
    <user>U0CLDU8UB</user>
    <text>Yeah, the idea that I had is actually much more cumbersome in code than I thought it would be, so let's scratch that. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-22T04:58:45.199143</ts>
    <user>U4872964V</user>
    <text>So, I'd do like this (but this is just a preference)
```
filterEvent filter event =
  case (filter, event) of
    (ActiveFilter, Active) -&amp;gt; True
    (ActiveFilter, _) -&amp;gt; False
    (BirthdayFilter, Birthday _) -&amp;gt; True
    (BirthdayFilter, _) -&amp;gt; False
    ...
```
I generally do it like this so I don't have to have a "catch all"</text>
  </message>
  <message>
    <ts>2017-06-22T04:59:52.216365</ts>
    <user>U4872964V</user>
    <text>or the arguments in the other order, maybe, for your usage of the filter</text>
  </message>
  <message>
    <ts>2017-06-22T05:01:47.248737</ts>
    <user>U2D5SAEMN</user>
    <text>`event` would be the `eventType` property of the event record, I guess?</text>
  </message>
  <message>
    <ts>2017-06-22T05:02:58.267561</ts>
    <user>U4872964V</user>
    <text>another option is to do it like this
```
filterEvent filterList event =
  case event of
    Active -&amp;gt; List.member ActiveFilter filterList
    Birthday _ -&amp;gt; List.member BirthdayFilter filterList
    ...
```
sorry if I've not understood your problem correctly</text>
  </message>
  <message>
    <ts>2017-06-22T05:03:36.277846</ts>
    <user>U2D5SAEMN</user>
    <text>ohanhi: Thanks anyway!</text>
  </message>
  <message>
    <ts>2017-06-22T05:04:56.298814</ts>
    <user>U2D5SAEMN</user>
    <text>nice, that would support multiple filters as well. Thanks a lot!</text>
  </message>
  <message>
    <ts>2017-06-22T05:05:53.313523</ts>
    <user>U4872964V</user>
    <text>Generally I find that making specific types pay off in simplicity and type safety, even if it leads to more code</text>
  </message>
  <message>
    <ts>2017-06-22T05:06:22.320909</ts>
    <user>U4872964V</user>
    <text>you're welcome!</text>
  </message>
  <message>
    <ts>2017-06-22T05:11:47.402142</ts>
    <user>U4872964V</user>
    <text>you could of course break it out to make a function `: Event -&amp;gt; EventFilter` and make that `filterEvent` function more general, it's just refactoring at that point</text>
  </message>
  <message>
    <ts>2017-06-22T05:15:07.451194</ts>
    <user>U2D5SAEMN</user>
    <text>Sorry, I don't understand what you mean by that? :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-22T05:19:23.512941</ts>
    <user>U4872964V</user>
    <text>so, you'd make something like
```
eventFilterFor : Event -&amp;gt; EventFilter
eventFilterFor event = case event of
  Active -&amp;gt; ActiveFilter
  Birthday _ -&amp;gt; BirthdayFilter
  ...
```
it depends on how complicated your filters should be, the previous solution allows for different kind of filtering based on the event. So it's refactoring/preference/etc</text>
  </message>
  <message>
    <ts>2017-06-22T05:20:26.528177</ts>
    <user>U2D5SAEMN</user>
    <text>ah, I see. That would be useful when filtering is done in multiple places, I think.</text>
  </message>
  <message>
    <ts>2017-06-22T07:53:35.503704</ts>
    <user>U5GMHEAHY</user>
    <text>Hi there! So I've been working on a project that, at some point, navigates to a page that communicates with the server using a websocket. This is to get live updates of the results from the server (it's performing a task). I'm experiencing a problem with this:

- When using Elm Navigation, if the route and its query parameters are the same, it does not trigger the update msg that I implemented (which sends a GET request to the server asking for previous results, which works fine). It does, however, trigger upon switching routes (editing the query parameter back and forth or simply navigating to a different page) so I assume that Navigation does not attempt to perform the specified actions if the conditions are the same, even if it's a refresh request.</text>
  </message>
  <message>
    <ts>2017-06-22T07:54:04.509480</ts>
    <user>U5GMHEAHY</user>
    <text>What I would like to happen is that the update msg triggers upon refresh. Any suggestions?</text>
  </message>
  <message>
    <ts>2017-06-22T08:13:13.764593</ts>
    <user>U57KYFW67</user>
    <text>I forget the hoogle-search for Elm. What was the URL again?</text>
  </message>
  <message>
    <ts>2017-06-22T08:15:16.792830</ts>
    <user>U4872964V</user>
    <text>It's linked at the front page of elm packages: &lt;http://klaftertief.github.io/elm-search/&gt;</text>
  </message>
  <message>
    <ts>2017-06-22T08:21:42.883035</ts>
    <user>U57KYFW67</user>
    <text>ty</text>
  </message>
  <message>
    <ts>2017-06-22T08:22:25.893113</ts>
    <user>U57KYFW67</user>
    <text>Is there a way to get the screen (or top-level element) height and width?</text>
  </message>
  <message>
    <ts>2017-06-22T08:26:54.957368</ts>
    <user>U2JA29EKF</user>
    <text>&lt;@U57KYFW67&gt; : &lt;http://package.elm-lang.org/packages/elm-lang/window/1.0.1/Window&gt;</text>
  </message>
  <message>
    <ts>2017-06-22T08:27:16.962539</ts>
    <user>U57KYFW67</user>
    <text>thanks</text>
  </message>
  <message>
    <ts>2017-06-22T09:18:12.835791</ts>
    <user>U5V0HVAKB</user>
    <text>wtf love this community but so much messages to watch ^^</text>
  </message>
  <message>
    <ts>2017-06-22T09:27:52.030752</ts>
    <user>U2UUNG9KK</user>
    <text>Are there any good books to read to start using Elm? I have the idea that coming from a class based programming background might have some side effects of going forward with Elm.</text>
  </message>
  <message>
    <ts>2017-06-22T09:29:07.056296</ts>
    <user>U1D7SLE4Q</user>
    <text>&lt;@U2UUNG9KK&gt; Elm In Action is currently the best book I can recommend</text>
  </message>
  <message>
    <ts>2017-06-22T09:29:35.065820</ts>
    <user>U2UUNG9KK</user>
    <text>Thank you &lt;@U1D7SLE4Q&gt; , I will have a look into it.</text>
  </message>
  <message>
    <ts>2017-06-22T09:31:48.114584</ts>
    <user>U2QQ92V09</user>
    <text>i just opened slack, and the splash screen said `model ! [] !== (model, Cmd.none)` what does it mean by that?</text>
  </message>
  <message>
    <ts>2017-06-22T09:32:12.122994</ts>
    <user>U2QQ92V09</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Platform-Cmd#&gt;!</text>
  </message>
  <message>
    <ts>2017-06-22T09:32:52.137185</ts>
    <user>U3SJEDR96</user>
    <text>it's `Cmd.batch []`, but `Cmd.none` is implemented as `Cmd.batch []`</text>
  </message>
  <message>
    <ts>2017-06-22T09:33:02.140626</ts>
    <user>U3SJEDR96</user>
    <text>so I'd say they _are_ the same thing</text>
  </message>
  <message>
    <ts>2017-06-22T09:33:30.150768</ts>
    <user>U2QQ92V09</user>
    <text>yeah…</text>
  </message>
  <message>
    <ts>2017-06-22T09:39:51.283779</ts>
    <user>U5XHTBFS6</user>
    <text>pun intended? =P
&lt;https://elmlang.slack.com/archives/C192T0Q1E/p1498138072030752&gt;</text>
  </message>
  <message>
    <ts>2017-06-22T09:40:52.305596</ts>
    <user>U5YN5051D</user>
    <text>Hello! I have the following problem: I want to implement file upload and I did it as described in &lt;https://www.paramander.com/blog/using-ports-to-deal-with-files-in-elm-0-17&gt; and &lt;https://github.com/phylor/elm-image-upload&gt; . The problem is that this method makes me create index.html and after that when I use elm-reactor it doesn't show me errors when they happen :disappointed:</text>
  </message>
  <message>
    <ts>2017-06-22T09:41:17.314420</ts>
    <user>U5YN5051D</user>
    <text>So basically I can't easily see what the compilation errors were. Is there any standard way to work around this?</text>
  </message>
  <message>
    <ts>2017-06-22T09:41:46.324875</ts>
    <user>U57KYFW67</user>
    <text>What are Tasks in Elm? It seems the docs are... under construction?</text>
  </message>
  <message>
    <ts>2017-06-22T09:43:24.360345</ts>
    <user>U2UUNG9KK</user>
    <text>etandel: Not sure what you mean?</text>
  </message>
  <message>
    <ts>2017-06-22T09:44:03.374605</ts>
    <user>U5XHTBFS6</user>
    <text>Good question, I'd like to know that as well!

I used them to group a bunch of Date and Time related operations, but I was more just following the types than actually knowing what I was doing.</text>
  </message>
  <message>
    <ts>2017-06-22T09:45:54.417217</ts>
    <user>U5XHTBFS6</user>
    <text>Class-based programming has a lot of side-effects, and functional programming is (among other things) the taming of side effects. So I was asking if the way you mentioned side effects was an intentional pun or just coincidence.</text>
  </message>
  <message>
    <ts>2017-06-22T09:46:58.440873</ts>
    <user>U3SJEDR96</user>
    <text>They allow you to construct a set of instructions for the runtime to execute. Like, `Time.now` _could_ have been a `Cmd msg`, but you rarely _just_ need the current time. It's more common to need the current time to add, for example, a timestamp to an outgoing HTTP request. Perhaps the response for that request isn't really of interest to you either, and you want to make yet another request based on that response, all without hitting your update function. Tasks let you do that</text>
  </message>
  <message>
    <ts>2017-06-22T09:47:15.446825</ts>
    <user>U5XHTBFS6</user>
    <text>(btw, that's a great thing with ML-like type systems such as Elm's: oftentimes the code just writes itself if you pay attention to the types)</text>
  </message>
  <message>
    <ts>2017-06-22T09:47:44.457970</ts>
    <user>U2UUNG9KK</user>
    <text>It was really a coincidence but I see your point :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-22T09:49:05.487585</ts>
    <user>U57KYFW67</user>
    <text>Ah. So instead of just sending a command and receiving a message, it allows you to chain together a small sequence of interactions between you and the runtime.</text>
  </message>
  <message>
    <ts>2017-06-22T09:49:39.499825</ts>
    <user>U3SJEDR96</user>
    <text>yep! not necessarily a small sequence, either, you can do plenty in a single task-chain :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-22T09:51:09.533371</ts>
    <user>U41NK9BM4</user>
    <text>For example, you can see a lot of Task usage while dealing with  HTTP requests.</text>
  </message>
  <message>
    <ts>2017-06-22T09:51:34.542566</ts>
    <user>U41NK9BM4</user>
    <text>When I got this, then do that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-22T09:53:16.581212</ts>
    <user>U57KYFW67</user>
    <text>oh. I just realized the docs define Task.Task as a type alias of Platform.Task</text>
  </message>
  <message>
    <ts>2017-06-22T09:53:50.594205</ts>
    <user>U57KYFW67</user>
    <text>(it just says type alias Task err ok = Task err ok, which is really confusing before you see it's a cross module reference)</text>
  </message>
  <message>
    <ts>2017-06-22T09:53:59.597868</ts>
    <user>U41NK9BM4</user>
    <text>It's an internal detail.</text>
  </message>
  <message>
    <ts>2017-06-22T09:54:03.599269</ts>
    <user>U57KYFW67</user>
    <text>yeah</text>
  </message>
  <message>
    <ts>2017-06-22T09:54:05.600042</ts>
    <user>U57KYFW67</user>
    <text>that makes more sense now</text>
  </message>
  <message>
    <ts>2017-06-22T09:54:39.612513</ts>
    <user>U41NK9BM4</user>
    <text>I myself looked that and being confused. Ignore for now :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-22T09:54:39.612840</ts>
    <user>U4872964V</user>
    <text>yeah, it's a problem with the package docs that it doesn't link between packages</text>
  </message>
  <message>
    <ts>2017-06-22T09:55:32.633419</ts>
    <user>U41NK9BM4</user>
    <text>Online book: &lt;http://elmprogramming.com&gt;</text>
  </message>
  <message>
    <ts>2017-06-22T09:55:59.644072</ts>
    <user>U57KYFW67</user>
    <text>or qualify names</text>
  </message>
  <message>
    <ts>2017-06-22T09:56:15.650286</ts>
    <user>U59AF21LJ</user>
    <text>Hi! I'm trying to POST some JSON to my own local server running in python with Flask (I have no idea if that's the best idea, especially since I'm not a python fan). The problem is that, even though the server does receive the POST message, the `request.json` is `None` (I print it when I receive it).

```
save : Cmd Msg
save =
  let
    url : String
    url = "update"

    value : Encode.Value
    value =
      Encode.object
        [ ("name", Encode.string "Tom")
        , ("age", &lt;http://Encode.int|Encode.int&gt; 42)
        ]

    body : Http.Body
    body =
      Http.jsonBody value
  in Http.send PostBack (&lt;http://Http.post|Http.post&gt; url body Decode.string)
```
I guess I'm doing something wrong over here. But the header should be fine since I'm using Http.jsonBody.</text>
  </message>
  <message>
    <ts>2017-06-22T09:56:19.651748</ts>
    <user>U41NK9BM4</user>
    <text>It goes well with the official tutorial.</text>
  </message>
  <message>
    <ts>2017-06-22T09:58:02.692300</ts>
    <user>U5XHTBFS6</user>
    <text>&lt;@U59AF21LJ&gt; Is Flask getting the content-type headers?</text>
  </message>
  <message>
    <ts>2017-06-22T09:58:58.714898</ts>
    <user>U5XHTBFS6</user>
    <text>Or you can check on the netwrok tab on your browser's developer tools to see if the requeest headers contain the content=type</text>
  </message>
  <message>
    <ts>2017-06-22T10:01:14.772804</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U5XHTBFS6&gt; Chromes seems to say the type is `xhr`.</text>
  </message>
  <message>
    <ts>2017-06-22T10:02:55.814490</ts>
    <user>U5XHTBFS6</user>
    <text>wat
does it say Content-type: xhr?</text>
  </message>
  <message>
    <ts>2017-06-22T10:03:04.818206</ts>
    <user>U5XHTBFS6</user>
    <text>or is this the request type?</text>
  </message>
  <message>
    <ts>2017-06-22T10:03:56.839118</ts>
    <user>U59AF21LJ</user>
    <text>No ok I'm sorry it was listed as xhr, but the request header doesn't have `content-type`.</text>
  </message>
  <message>
    <ts>2017-06-22T10:04:37.855460</ts>
    <user>U59AF21LJ</user>
    <text>I'm really not familiar with HTTP stuff so I might be overlooking something silly.</text>
  </message>
  <message>
    <ts>2017-06-22T10:04:50.860348</ts>
    <user>U41NK9BM4</user>
    <text>Are you using Http.Extra?</text>
  </message>
  <message>
    <ts>2017-06-22T10:05:01.864922</ts>
    <user>U26LR8F4H</user>
    <text>I'm not entirely sure what I'm looking for here.  Basically I extracted a module which performs an http request. &lt;https://gist.github.com/nerdyworm/eb9d4eee5b1e282c8cf2602378772995&gt; .  Now I have no idea how to actually use it from my App.elm.</text>
  </message>
  <message>
    <ts>2017-06-22T10:05:20.872753</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U41NK9BM4&gt; No I'm using elm-lang/http</text>
  </message>
  <message>
    <ts>2017-06-22T10:05:34.878565</ts>
    <user>U41NK9BM4</user>
    <text>Ah, I cannot find Http.jsonBody.</text>
  </message>
  <message>
    <ts>2017-06-22T10:05:57.887950</ts>
    <user>U59AF21LJ</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/http/1.0.0/Http#jsonBody&gt;</text>
  </message>
  <message>
    <ts>2017-06-22T10:06:06.891782</ts>
    <user>U5XHTBFS6</user>
    <text>&lt;@U59AF21LJ&gt; Flask parses the body based on the Content-type header. If it's not application/json, it will probablyu assume it's form-encoded and the .json property will be none</text>
  </message>
  <message>
    <ts>2017-06-22T10:06:41.905530</ts>
    <user>U5XHTBFS6</user>
    <text>I'm very new to Elm, so there might be a better way, but what I do is usee Http.request and pass the content type explicitly.</text>
  </message>
  <message>
    <ts>2017-06-22T10:06:46.907620</ts>
    <user>U41NK9BM4</user>
    <text>&lt;@U59AF21LJ&gt; Got it!</text>
  </message>
  <message>
    <ts>2017-06-22T10:07:05.914745</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U5XHTBFS6&gt; Yeah it seems to be the case, but I don't understand as the doc specifically says it adds the content-type header.</text>
  </message>
  <message>
    <ts>2017-06-22T10:08:14.941969</ts>
    <user>U5XHTBFS6</user>
    <text>```
                let
                    url =
                        "&lt;http://localhost:5000/&gt;"

                    request =
                        Http.request
                            { method = "POST"
                            , headers =
                                [ Http.header "Content-type" "application/json" ]
                            , url = url
                            , body = body
                            , expect = Http.expectString
                            , timeout = Nothing
                            , withCredentials = True
                            }
                in
                    ( model, Http.send GetSpotList request )
```</text>
  </message>
  <message>
    <ts>2017-06-22T10:08:23.945867</ts>
    <user>U5XHTBFS6</user>
    <text>This is how I'm doing it^</text>
  </message>
  <message>
    <ts>2017-06-22T10:08:37.951427</ts>
    <user>U5WD40ZA9</user>
    <text>Anyone know a great package for file uploading in elm?</text>
  </message>
  <message>
    <ts>2017-06-22T10:08:47.955713</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U26LR8F4H&gt; There are a couple of paths to take, but I think that in your case, I would get rid of `type Results` and change the function to `shorten : (Result Http.Error Bitly -&amp;gt; msg) -&amp;gt; String -&amp;gt; Cmd msg`</text>
  </message>
  <message>
    <ts>2017-06-22T10:10:32.998087</ts>
    <user>U41NK9BM4</user>
    <text>&lt;@U5XHTBFS6&gt; Why are you doing a GET?</text>
  </message>
  <message>
    <ts>2017-06-22T10:11:08.012506</ts>
    <user>U5XHTBFS6</user>
    <text>it should be a POST, that was a copy paste error :smiley:</text>
  </message>
  <message>
    <ts>2017-06-22T10:11:21.017475</ts>
    <user>U41NK9BM4</user>
    <text>OK. Makes more sense now</text>
  </message>
  <message>
    <ts>2017-06-22T10:11:39.024670</ts>
    <user>U5XHTBFS6</user>
    <text>There, fixed it. Thanks for spotting the error</text>
  </message>
  <message>
    <ts>2017-06-22T10:11:59.032697</ts>
    <user>U26LR8F4H</user>
    <text>&lt;@U48AEBJQ3&gt; thanks, worked like a charm :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-22T10:14:05.082371</ts>
    <user>U2UUNG9KK</user>
    <text>Thank you &lt;@U41NK9BM4&gt;</text>
  </message>
  <message>
    <ts>2017-06-22T10:16:31.140784</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U5XHTBFS6&gt; &lt;@U41NK9BM4&gt; I tried and I still get None</text>
  </message>
  <message>
    <ts>2017-06-22T10:17:58.176043</ts>
    <user>U59AF21LJ</user>
    <text>But it still doesn't say the Content-type is anything in the Network tab of Chrome.</text>
  </message>
  <message>
    <ts>2017-06-22T10:18:26.187640</ts>
    <user>U59AF21LJ</user>
    <text>Just says:
```
Accept:*/*
Accept-Encoding:gzip, deflate, br
Accept-Language:en,fr-FR;q=0.8,fr;q=0.6,en-US;q=0.4,en-GB;q=0.2
Connection:keep-alive
Content-Length:0
Host:localhost:5000
Origin:&lt;http://localhost:5000&gt;
Referer:&lt;http://localhost:5000/&gt;
User-Agent:Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36
```</text>
  </message>
  <message>
    <ts>2017-06-22T10:19:06.203953</ts>
    <user>U5XHTBFS6</user>
    <text>Hmmm</text>
  </message>
  <message>
    <ts>2017-06-22T10:19:08.204662</ts>
    <user>U41NK9BM4</user>
    <text>Mmm. Content-Length:0</text>
  </message>
  <message>
    <ts>2017-06-22T10:19:27.212792</ts>
    <user>U5XHTBFS6</user>
    <text>Can you post that part of the code?</text>
  </message>
  <message>
    <ts>2017-06-22T10:20:15.231729</ts>
    <user>U59AF21LJ</user>
    <text>So
```
save : Cmd Msg
save =
  let
    url : String
    url = "update"

    value : Encode.Value
    value =
      Encode.object
        [ ("name", Encode.string "Tom")
        , ("age", &lt;http://Encode.int|Encode.int&gt; 42)
        ]

    body : Http.Body
    body =
      Http.jsonBody value

    request =
      Http.request {
        method = "POST",
        headers = [
          Http.header "Content-type" "application/json"
        ],
        url = url,
        body = body,
        expect = Http.expectString,
        timeout = Nothing,
        withCredentials = True
      }
  in Http.send PostBack request
```

```
#!flask/bin/python
from flask import Flask, request, abort
import json

app = Flask(__name__, static_url_path='')
app._static_folder = '.'

@app.route('/')
def index():
    return app.send_static_file('index.html')

@app.route('/&amp;lt;path:filename&amp;gt;')
def serve_static(filename):
    return send_from_directory('.', filename)

@app.route('/update', methods=['POST'])
def update():
    print request.json
    if not request.json:
        abort(400)
    with open('data.json', 'w') as outfile:
        json.dump(request.json, outfile)
    return 201

if __name__ == '__main__':
    app.run(debug=True)
```</text>
  </message>
  <message>
    <ts>2017-06-22T10:22:53.296250</ts>
    <user>U5XHTBFS6</user>
    <text>I can't find anything odd with your code =s</text>
  </message>
  <message>
    <ts>2017-06-22T10:23:45.317742</ts>
    <user>U5XHTBFS6</user>
    <text>The Content-length : 0 on the header is very odd though, but I have no idea why that could be.</text>
  </message>
  <message>
    <ts>2017-06-22T10:23:49.319258</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U5XHTBFS6&gt; Well that's odd… Thanks for trying anyway.</text>
  </message>
  <message>
    <ts>2017-06-22T10:24:01.323937</ts>
    <user>U59AF21LJ</user>
    <text>Yeah it is.</text>
  </message>
  <message>
    <ts>2017-06-22T10:24:05.325537</ts>
    <user>U41NK9BM4</user>
    <text>Is it the case: `withCredentials = True`</text>
  </message>
  <message>
    <ts>2017-06-22T10:24:19.331298</ts>
    <user>U41NK9BM4</user>
    <text>I mean, how do you pass credentials?</text>
  </message>
  <message>
    <ts>2017-06-22T10:26:40.390770</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U41NK9BM4&gt; Tried with False it doesn't work.</text>
  </message>
  <message>
    <ts>2017-06-22T10:27:58.423004</ts>
    <user>U41NK9BM4</user>
    <text>If there's no creds, leave it False. Don't complicate things</text>
  </message>
  <message>
    <ts>2017-06-22T10:29:31.462000</ts>
    <user>U59AF21LJ</user>
    <text>I also tried `body = Http.stringBody "application/json" "Test string"` but Content-length is still 0 for some reason.</text>
  </message>
  <message>
    <ts>2017-06-22T10:30:21.483560</ts>
    <user>U5X2VC483</user>
    <text>&lt;@U59AF21LJ&gt; could the problem be that the `&amp;lt;path:filename&amp;gt;` route gets triggered for `update`, and it tries to serve a (presumably non-existing) file called `update`?</text>
  </message>
  <message>
    <ts>2017-06-22T10:31:36.515907</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U5X2VC483&gt; I don't think it is because I can see my python code is executed, plus since it's a POST it can't get caught by the other route that matches only GET by default.</text>
  </message>
  <message>
    <ts>2017-06-22T10:31:48.520863</ts>
    <user>U5X2VC483</user>
    <text>ah, right</text>
  </message>
  <message>
    <ts>2017-06-22T10:32:53.547711</ts>
    <user>U41NK9BM4</user>
    <text>So you are abs sure that you can POST a simple string to that `update` on Flask, right ? The problem triggers when you use JSon?</text>
  </message>
  <message>
    <ts>2017-06-22T10:33:18.558147</ts>
    <user>U5DJNFLUD</user>
    <text>What's the latest on dragging a file onto a window/elm app and processing the file? Is &lt;https://www.paramander.com/blog/using-ports-to-deal-with-files-in-elm-0-17&gt; still current?</text>
  </message>
  <message>
    <ts>2017-06-22T10:34:06.577905</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U41NK9BM4&gt; No I am not... :confused:</text>
  </message>
  <message>
    <ts>2017-06-22T10:34:38.590557</ts>
    <user>U5X2VC483</user>
    <text>can you get the route to run using `curl`?</text>
  </message>
  <message>
    <ts>2017-06-22T10:40:52.748478</ts>
    <user>U41NK9BM4</user>
    <text>Also, use `&lt;http://Http.post|Http.post&gt;` as much as possible.</text>
  </message>
  <message>
    <ts>2017-06-22T10:41:14.757160</ts>
    <user>U59AF21LJ</user>
    <text>I tried `curl -H "Content-type: application/json" -X POST &lt;http://localhost:5000/update&gt; -d '{"message":"Hello Data"}'` and I get an HTML page about how 'int' object is not callable. But this is different.</text>
  </message>
  <message>
    <ts>2017-06-22T10:41:36.766392</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U41NK9BM4&gt; I went back to using `&lt;http://Http.post|Http.post&gt;` yes.</text>
  </message>
  <message>
    <ts>2017-06-22T10:42:36.791102</ts>
    <user>U59AF21LJ</user>
    <text>Except from the error message, I actually worked using `curl`, it saved the message in `data.json`.</text>
  </message>
  <message>
    <ts>2017-06-22T10:46:02.878032</ts>
    <user>U41NK9BM4</user>
    <text>Usually when things like this happen usually there's some stupid, obvious, tiny thing that screws up everything</text>
  </message>
  <message>
    <ts>2017-06-22T10:46:35.891789</ts>
    <user>U41NK9BM4</user>
    <text>But you *need* to know it, no matter how insignificant it seems.</text>
  </message>
  <message>
    <ts>2017-06-22T10:46:39.893405</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U41NK9BM4&gt; I agree haha.</text>
  </message>
  <message>
    <ts>2017-06-22T10:47:18.909611</ts>
    <user>U41NK9BM4</user>
    <text>Unfortunately I did very little HTTP juggling in Elm to be able to help</text>
  </message>
  <message>
    <ts>2017-06-22T10:51:28.016804</ts>
    <user>U5ABF3BH7</user>
    <text>Hi! Has anyone already implemented something similar to select2 with search box in Elm?&lt;https://screencast.com/t/2vzdmDjbO&gt;</text>
  </message>
  <message>
    <ts>2017-06-22T11:01:30.280340</ts>
    <user>U59AF21LJ</user>
    <text>Thanks for trying to help anyway. I really don't know what to do haha. Maybe I'll come back to it another day.</text>
  </message>
  <message>
    <ts>2017-06-22T11:02:41.311964</ts>
    <user>U41NK9BM4</user>
    <text>It's also strange that  you have `'int' object is not callable`, eh!</text>
  </message>
  <message>
    <ts>2017-06-22T11:02:56.318043</ts>
    <user>U41NK9BM4</user>
    <text>So there might be issues on both sides.</text>
  </message>
  <message>
    <ts>2017-06-22T11:03:50.341390</ts>
    <user>U41NK9BM4</user>
    <text>Mmmm.</text>
  </message>
  <message>
    <ts>2017-06-22T11:03:52.341917</ts>
    <user>U41NK9BM4</user>
    <text>return 201</text>
  </message>
  <message>
    <ts>2017-06-22T11:04:00.345446</ts>
    <user>U41NK9BM4</user>
    <text>This smells wrong.</text>
  </message>
  <message>
    <ts>2017-06-22T11:04:14.351238</ts>
    <user>U59AF21LJ</user>
    <text>Oh you're right I should look into that as well.</text>
  </message>
  <message>
    <ts>2017-06-22T11:04:18.353198</ts>
    <user>U5XHTBFS6</user>
    <text>Indeed it is. Flask expects that if the return from a view is a single value, it should be a string with the content</text>
  </message>
  <message>
    <ts>2017-06-22T11:04:35.360729</ts>
    <user>U41NK9BM4</user>
    <text>So the plan is, fix Flask side using Curl, then switch to Elm</text>
  </message>
  <message>
    <ts>2017-06-22T11:05:46.391773</ts>
    <user>U41NK9BM4</user>
    <text>Python never lies.   :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-22T11:06:10.402251</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U41NK9BM4&gt; Done. I just switched to a string as &lt;@U5XHTBFS6&gt; suggested. (The `201` was shamefully pasted from a stackoverflow example)</text>
  </message>
  <message>
    <ts>2017-06-22T11:07:20.432209</ts>
    <user>U5XHTBFS6</user>
    <text>From flask's doc:

&lt;http://flask.pocoo.org/docs/0.12/quickstart/#about-responses&gt;
```
    If a response object of the correct type is returned it's directly returned from the view.
    If it's a string, a response object is created with that data and the default parameters.
    If a tuple is returned the items in the tuple can provide extra information. Such tuples have to be in the form (response, status, headers) or (response, headers) where at least one item has to be in the tuple. The status value will override the status code and headers can be a list or dictionary of additional header values.
    If none of that works, Flask will assume the return value is a valid WSGI application and convert that into a response object.
```</text>
  </message>
  <message>
    <ts>2017-06-22T11:08:09.452533</ts>
    <user>U59AF21LJ</user>
    <text>Yeah, so now `curl` works perfectly. So we can assume the server side is correct.</text>
  </message>
  <message>
    <ts>2017-06-22T11:08:25.459531</ts>
    <user>U41NK9BM4</user>
    <text>Great.</text>
  </message>
  <message>
    <ts>2017-06-22T11:09:16.481170</ts>
    <user>U59AF21LJ</user>
    <text>Thanks for this part/</text>
  </message>
  <message>
    <ts>2017-06-22T11:10:07.501396</ts>
    <user>U5XHTBFS6</user>
    <text>Can you attach the full code? Maybe the problem is not on the `save` value, but where it is used.</text>
  </message>
  <message>
    <ts>2017-06-22T11:13:00.573679</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U5XHTBFS6&gt; I guess I should trim it to a minimal example.</text>
  </message>
  <message>
    <ts>2017-06-22T11:14:25.608684</ts>
    <user>U5XTFSTFV</user>
    <text>Hi, Maybe somebody here can help me
Is elm debouncing msgs send to the update function?
I'm triggering an onScroll event on a div and it only gets passed to the update ftn once the scroll event  ends.</text>
  </message>
  <message>
    <ts>2017-06-22T11:16:49.669305</ts>
    <user>U5XHTBFS6</user>
    <text>&lt;@U59AF21LJ&gt; I see you reverted to using `&lt;http://Http.post|Http.post&gt;` with `Http.jsonBody`. Can you try again with the raw `request`?</text>
  </message>
  <message>
    <ts>2017-06-22T11:19:18.731683</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U5XHTBFS6&gt; Doesn't change anything if I have
```
saveTree : StoryTree -&amp;gt; Cmd Msg
saveTree tree =
  let
    url : String
    url = "update"

    value : Encode.Value
    value =
      Encode.object
        [ ("name", Encode.string "Tom")
        , ("age", &lt;http://Encode.int|Encode.int&gt; 42)
        ]

    body : Http.Body
    body =
      Http.jsonBody value

    request =
      Http.request {
        method = "POST",
        headers = [
          Http.header "Content-type" "application/json"
        ],
        url = url,
        body = body,
        expect = Http.expectString,
        timeout = Nothing,
        withCredentials = True
      }
  in Http.send PostBack request
```</text>
  </message>
  <message>
    <ts>2017-06-22T11:22:34.814547</ts>
    <user>U5XHTBFS6</user>
    <text>hmmm i'll try running locally here and see if I can spot something</text>
  </message>
  <message>
    <ts>2017-06-22T11:24:52.872376</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U5XHTBFS6&gt; I'm really afraid it's due to caching even though I'm using private browsing.</text>
  </message>
  <message>
    <ts>2017-06-22T11:26:27.912278</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U5XHTBFS6&gt; &lt;@U41NK9BM4&gt; I have to apologise. It was a caching problem…</text>
  </message>
  <message>
    <ts>2017-06-22T11:26:55.923904</ts>
    <user>U41NK9BM4</user>
    <text>As I said: "Usually when things like this happen usually there's some stupid, obvious, tiny thing that screws up everything"</text>
  </message>
  <message>
    <ts>2017-06-22T11:27:30.938481</ts>
    <user>U41NK9BM4</user>
    <text>:grimacing:</text>
  </message>
  <message>
    <ts>2017-06-22T11:27:33.939704</ts>
    <user>U59AF21LJ</user>
    <text>Yeah.^^</text>
  </message>
  <message>
    <ts>2017-06-22T11:28:02.951507</ts>
    <user>U5W50TZ6C</user>
    <text>Hi! I'm trying to model a file system in Elm. Here's what I have so far:
```
type alias File =
    { name : String
    , content : String
    }


type alias Folder =
    { name : String
    , children : Items
    }


type Items
    = Folder
    | File
    | Nothing
```
But this isn't valid; Elm sees *two* `Folder` and *two* `File`. What is the proper way to do this?</text>
  </message>
  <message>
    <ts>2017-06-22T11:28:57.974186</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U5W50TZ6C&gt; You probably have to give different names to Folder and File in the definition of Items.</text>
  </message>
  <message>
    <ts>2017-06-22T11:29:15.981272</ts>
    <user>U41NK9BM4</user>
    <text>Glad you made it to work, &lt;@U59AF21LJ&gt;</text>
  </message>
  <message>
    <ts>2017-06-22T11:29:35.990045</ts>
    <user>U59AF21LJ</user>
    <text>`type Items = ItemFolder Folder | ItemFile File | Nothing`</text>
  </message>
  <message>
    <ts>2017-06-22T11:29:53.997654</ts>
    <user>U5W50TZ6C</user>
    <text>Ahh, I see &lt;@U59AF21LJ&gt;</text>
  </message>
  <message>
    <ts>2017-06-22T11:29:55.998497</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U41NK9BM4&gt; Thanks.</text>
  </message>
  <message>
    <ts>2017-06-22T11:30:10.005086</ts>
    <user>U41NK9BM4</user>
    <text>Of course you have to put data somewhere :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-22T11:30:18.008378</ts>
    <user>U5XHTBFS6</user>
    <text>&lt;@U59AF21LJ&gt; ha! cache is always a problem.</text>
  </message>
  <message>
    <ts>2017-06-22T11:30:45.020615</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U5XHTBFS6&gt; Yeah, I thought I took enough precautions but I didn't.</text>
  </message>
  <message>
    <ts>2017-06-22T11:30:49.021852</ts>
    <user>U41NK9BM4</user>
    <text>I tend to like Safari's Develop -&amp;gt; Disable Caching a lot :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-22T11:32:56.075061</ts>
    <user>U5XHTBFS6</user>
    <text>"There are only two hard things in Computer Science: cache invalidation and naming things."</text>
  </message>
  <message>
    <ts>2017-06-22T11:34:04.102934</ts>
    <user>U59AF21LJ</user>
    <text>I already took precautions because it wasn't updating my CSS otherwise, but for some reason I needed to tick the box to disable it in the network inspector.</text>
  </message>
  <message>
    <ts>2017-06-22T11:36:20.157644</ts>
    <user>U41NK9BM4</user>
    <text>So basically it was using older version of your Elm code, I guess.</text>
  </message>
  <message>
    <ts>2017-06-22T11:36:44.167015</ts>
    <user>U41NK9BM4</user>
    <text>And your edits didn't make a difference</text>
  </message>
  <message>
    <ts>2017-06-22T11:38:59.221503</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5XHTBFS6&gt; and off-by-one errors.</text>
  </message>
  <message>
    <ts>2017-06-22T11:39:32.234786</ts>
    <user>U41NK9BM4</user>
    <text>Ah yes, that's the corollary</text>
  </message>
  <message>
    <ts>2017-06-22T11:39:49.241778</ts>
    <user>U5XHTBFS6</user>
    <text>hahah yes</text>
  </message>
  <message>
    <ts>2017-06-22T11:40:15.252684</ts>
    <user>U5XHTBFS6</user>
    <text>and racondice tions also</text>
  </message>
  <message>
    <ts>2017-06-22T11:42:25.305661</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U41NK9BM4&gt; Yes, I understood when I went for a minimal version to paste here and when it didn't change anything even though I had removed all but the button.</text>
  </message>
  <message>
    <ts>2017-06-22T11:42:45.313821</ts>
    <user>U41NK9BM4</user>
    <text>Indeed. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-22T11:45:17.375897</ts>
    <user>U59AF21LJ</user>
    <text>Thanks again to all of you.</text>
  </message>
  <message>
    <ts>2017-06-22T13:50:13.169108</ts>
    <user>U0J8D9M2P</user>
    <text>If I have `lang` property in the model e.g.
```
type Lang
    = En
    | De


type alias Model =
    { lang: Lang
    }
```

and I have translate functions e.g.
```
title lang =
    case lang of
        En -&amp;gt;
            "I'm a title"

        De -&amp;gt;
            "Ich bin ein Titel"


description lang =
    case lang of
        En -&amp;gt;
            "I'm the description"

        De -&amp;gt;
            "Ich bin die Beschreibung"
```
How I can partially apply language property of model to translate functions? So I can just call them without passing language around.</text>
  </message>
  <message>
    <ts>2017-06-22T13:54:11.257138</ts>
    <user>U5XHTBFS6</user>
    <text>I'm not sure I understood what you want, but if you do something like `let en_title = title En in ...` you can use the `en_title` var wherever a `String` is allowed</text>
  </message>
  <message>
    <ts>2017-06-22T13:54:39.267752</ts>
    <user>U5XHTBFS6</user>
    <text>(that is, inside that `let-in` context)</text>
  </message>
  <message>
    <ts>2017-06-22T13:55:20.282978</ts>
    <user>U14Q8S4EM</user>
    <text>I think hes asking how he can use `Lang`, but without a case statement at the lowest level of all his html.</text>
  </message>
  <message>
    <ts>2017-06-22T13:55:22.283698</ts>
    <user>U14Q8S4EM</user>
    <text>Right?</text>
  </message>
  <message>
    <ts>2017-06-22T13:58:06.346695</ts>
    <user>U0J8D9M2P</user>
    <text>The question is how I can use translation functions without passing language into them</text>
  </message>
  <message>
    <ts>2017-06-22T13:59:22.375755</ts>
    <user>U0J8D9M2P</user>
    <text>in `elm-css-helpers` I can do like this
```
{ id, class, classList } =
    Html.CssHelpers.withNamespace "dreamwriter"
```</text>
  </message>
  <message>
    <ts>2017-06-22T14:00:32.403951</ts>
    <user>U0J8D9M2P</user>
    <text>so whenever I use those functions they will be called with given prefix</text>
  </message>
  <message>
    <ts>2017-06-22T14:01:24.424708</ts>
    <user>U48AEBJQ3</user>
    <text>I'm not aware of a simple, out-of-the-box way of avoiding passing *something* around. It sounds like figuring out how to wrap things in `State` would work, but that's a rather advanced topic.</text>
  </message>
  <message>
    <ts>2017-06-22T14:16:59.767330</ts>
    <user>U5XHTBFS6</user>
    <text>Maybe something like that would help?


```
type alias Translation =
    { title: String
    , description: String
    , ...
    }


translate : Lang -&amp;gt; Translation
translate lang =
    { tile : title lang
    , description : description lang
    , ...
    }


create_div : Translation -&amp;gt; (Translation -&amp;gt; String) -&amp;gt; Html Msg
create_div translation text_getter =
    div [ ]
        [ p [] [ text_getter translation ]


view model =
    let
        translation = translate model.lang
    in 
        create_div translation .description
```</text>
  </message>
  <message>
    <ts>2017-06-22T14:19:05.812872</ts>
    <user>U5XHTBFS6</user>
    <text>This is an invertion of control: instead of the functions defining their data (by pattern matching on the lang etc.), you pass the content to them and let them handle only the structure</text>
  </message>
  <message>
    <ts>2017-06-22T14:23:57.918300</ts>
    <user>U5XHTBFS6</user>
    <text>That way you can have all translations in one object and pass to the functions only the content they need</text>
  </message>
  <message>
    <ts>2017-06-22T14:24:34.932404</ts>
    <user>U5XHTBFS6</user>
    <text>You can alternatively have a lower level of abstraction and instead of taking the translation plus a getter, you can take the content directly.</text>
  </message>
  <message>
    <ts>2017-06-22T14:25:07.944703</ts>
    <user>U5XHTBFS6</user>
    <text>Does it help, &lt;@U0J8D9M2P&gt; ?</text>
  </message>
  <message>
    <ts>2017-06-22T14:35:16.172395</ts>
    <user>U4872964V</user>
    <text>&lt;@U0J8D9M2P&gt; also look at &lt;https://youtu.be/RcHV6R-Jq00&gt; if you haven't already</text>
  </message>
  <message>
    <ts>2017-06-22T14:36:44.205576</ts>
    <user>U0J8D9M2P</user>
    <text>&lt;@U5XHTBFS6&gt; Yes but not completely. Means that for each view I need to define `translation = translate model.lang`.</text>
  </message>
  <message>
    <ts>2017-06-22T14:39:34.266746</ts>
    <user>U0J8D9M2P</user>
    <text>&lt;@U4872964V&gt; thanks.</text>
  </message>
  <message>
    <ts>2017-06-22T14:44:46.378292</ts>
    <user>U5SJJD85B</user>
    <text>How do I set the value of a select box in Elm? The following example leaves the select box set at "1"

```
import Html exposing (..)
import Html.Attributes exposing (..)
main =
  select [value "4"]
    (List.range 1 100
    |&amp;gt; List.map (\n -&amp;gt; option [value &amp;lt;| toString &amp;lt;| n] [text &amp;lt;| toString &amp;lt;| n]))
```</text>
  </message>
  <message>
    <ts>2017-06-22T14:49:31.482128</ts>
    <user>U0LPMPL2U</user>
    <text>If you were hard-coding HTML, how would you do it? :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-22T14:56:34.638755</ts>
    <user>U5SJJD85B</user>
    <text>:slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-22T14:56:41.641250</ts>
    <user>U5SJJD85B</user>
    <text>I tried onChange</text>
  </message>
  <message>
    <ts>2017-06-22T14:56:45.642980</ts>
    <user>U5SJJD85B</user>
    <text>(coming from React)</text>
  </message>
  <message>
    <ts>2017-06-22T14:56:58.647660</ts>
    <user>U5SJJD85B</user>
    <text>actually</text>
  </message>
  <message>
    <ts>2017-06-22T14:57:20.655860</ts>
    <user>U5SJJD85B</user>
    <text>thats the answer i guess</text>
  </message>
  <message>
    <ts>2017-06-22T14:57:28.658612</ts>
    <user>U5SJJD85B</user>
    <text>React provides the value attribute as a convenience</text>
  </message>
  <message>
    <ts>2017-06-22T14:57:41.663288</ts>
    <user>U5SJJD85B</user>
    <text>but i guess here id have to do it on the option</text>
  </message>
  <message>
    <ts>2017-06-22T14:58:46.687417</ts>
    <user>U0LPMPL2U</user>
    <text>If you were hard coding HTML, you'd writ something like:
```
&amp;lt;select&amp;gt;
  &amp;lt;option value="1"&amp;gt;1&amp;lt;/option&amp;gt;
  &amp;lt;option value="2", selected="selected"&amp;gt;2&amp;lt;/option&amp;gt;
&amp;lt;/select&amp;gt;
```</text>
  </message>
  <message>
    <ts>2017-06-22T14:58:58.691888</ts>
    <user>U5SJJD85B</user>
    <text>Thanks for the direction!</text>
  </message>
  <message>
    <ts>2017-06-22T14:59:13.697346</ts>
    <user>U0LPMPL2U</user>
    <text>adding `selected="selected"` to an HTML option makes it the pre-selected option in a `&amp;lt;select&amp;gt;`</text>
  </message>
  <message>
    <ts>2017-06-22T14:59:18.699633</ts>
    <user>U0LPMPL2U</user>
    <text>You'd do the same thing in Elm</text>
  </message>
  <message>
    <ts>2017-06-22T14:59:36.705898</ts>
    <user>U5SJJD85B</user>
    <text>```
import Html exposing (..)
import Html.Attributes exposing (..)
main =
  select [value "4"]
    (List.range 1 100
    |&amp;gt; List.map (\n -&amp;gt; option [value &amp;lt;| toString &amp;lt;| n, selected (n == 4)] [text &amp;lt;| toString &amp;lt;| n]))
```</text>
  </message>
  <message>
    <ts>2017-06-22T14:59:38.706998</ts>
    <user>U5SJJD85B</user>
    <text>thanks!</text>
  </message>
  <message>
    <ts>2017-06-22T15:17:58.086853</ts>
    <user>U0JL9RPC4</user>
    <text>Is it possible somehow to define a "set" of union types? 
For instance:
```Haskell
type Foo = Val1 | Val2 | Val3
type alias SetOfFoo = ??
```</text>
  </message>
  <message>
    <ts>2017-06-22T15:18:13.091740</ts>
    <user>U0JL9RPC4</user>
    <text>`Set` only accepts comparable values</text>
  </message>
  <message>
    <ts>2017-06-22T15:19:47.122785</ts>
    <user>U0LPMPL2U</user>
    <text>yes, unfortunately union types aren't comparable (for now) and can't be put into a set or used as keys in `Dict`s</text>
  </message>
  <message>
    <ts>2017-06-22T15:20:16.132172</ts>
    <user>U0JL9RPC4</user>
    <text>well, `Dict` are fine, thanks!</text>
  </message>
  <message>
    <ts>2017-06-22T15:46:59.657505</ts>
    <user>U5J0H2NS2</user>
    <text>same thing happens when you use elm-mdl and Layout...</text>
  </message>
  <message>
    <ts>2017-06-22T15:49:34.708441</ts>
    <user>U4872964V</user>
    <text>there is &lt;http://package.elm-lang.org/packages/truqu/elm-dictset/latest&gt; and &lt;http://package.elm-lang.org/packages/eeue56/elm-all-dict/latest&gt; (which you can turn into a set by storing `()` or something</text>
  </message>
  <message>
    <ts>2017-06-22T15:51:12.740907</ts>
    <user>U4872964V</user>
    <text>(Elms `Set` is basically a `Dict comparable ()` I think)</text>
  </message>
  <message>
    <ts>2017-06-22T15:57:14.862584</ts>
    <user>U0K7EBT3J</user>
    <text>does anybody know an easy way or a lib to strip away html markup from a string in elm?

`"click &amp;lt;a href='foo'&amp;gt;here&amp;lt;/a&amp;gt;" -&amp;gt; "click here"`</text>
  </message>
  <message>
    <ts>2017-06-22T15:57:42.872218</ts>
    <user>U23SA861Y</user>
    <text>strip away or escape?</text>
  </message>
  <message>
    <ts>2017-06-22T15:57:47.873815</ts>
    <user>U0K7EBT3J</user>
    <text>remove</text>
  </message>
  <message>
    <ts>2017-06-22T15:57:55.876956</ts>
    <user>U0K7EBT3J</user>
    <text>i don't want it</text>
  </message>
  <message>
    <ts>2017-06-22T15:59:09.902490</ts>
    <user>U0K7EBT3J</user>
    <text>i'll search a regex for it</text>
  </message>
  <message>
    <ts>2017-06-22T15:59:19.906441</ts>
    <user>U0LPMPL2U</user>
    <text>Looks like `String.Extra.stripTags`</text>
  </message>
  <message>
    <ts>2017-06-22T15:59:40.913484</ts>
    <user>U0K7EBT3J</user>
    <text>ohh awesome, ty!</text>
  </message>
  <message>
    <ts>2017-06-22T16:07:01.065710</ts>
    <user>U5XHTBFS6</user>
    <text>BTW, why don't we have user-defined typeclasses or at least user-defined instances of typeclasses? I this a design choice? Or it's in the roadmap but wasn't made yet?</text>
  </message>
  <message>
    <ts>2017-06-22T16:09:02.105372</ts>
    <user>U23SA861Y</user>
    <text>Elm is designed to be a simple language</text>
  </message>
  <message>
    <ts>2017-06-22T16:10:06.125970</ts>
    <user>U23SA861Y</user>
    <text>custom typeclasses add alot of complexity</text>
  </message>
  <message>
    <ts>2017-06-22T16:10:43.137963</ts>
    <user>U23SA861Y</user>
    <text>although I would say the problem with haskell is not typeclasses, but user-defined operator madness</text>
  </message>
  <message>
    <ts>2017-06-22T16:19:14.301423</ts>
    <user>U4872964V</user>
    <text>Also, error messages are harder to understand with type classes</text>
  </message>
  <message>
    <ts>2017-06-22T16:20:37.327937</ts>
    <user>U4872964V</user>
    <text>And the philosophy of Elm seems to be to not introduce anything unless there is a really compelling use case for it that can't be solved otherwis</text>
  </message>
  <message>
    <ts>2017-06-22T16:20:57.334504</ts>
    <user>U14Q8S4EM</user>
    <text>Ive studied enough Haskell to understand what a type class _is_, but when are they actually _useful_?</text>
  </message>
  <message>
    <ts>2017-06-22T16:21:01.335724</ts>
    <user>U14Q8S4EM</user>
    <text>I never figured that one out.</text>
  </message>
  <message>
    <ts>2017-06-22T16:21:22.342362</ts>
    <user>U5XHTBFS6</user>
    <text>Hmmm for me the problema  with haskell is akin to the problem with JS: a few bad decisions in that past that are dragged indefinitely into the future.</text>
  </message>
  <message>
    <ts>2017-06-22T16:21:22.342513</ts>
    <user>U0LPMPL2U</user>
    <text>you can have functions that take more abstract parameters</text>
  </message>
  <message>
    <ts>2017-06-22T16:21:45.349870</ts>
    <user>U0LPMPL2U</user>
    <text>for example, a single `map` implementation</text>
  </message>
  <message>
    <ts>2017-06-22T16:21:49.351266</ts>
    <user>U4872964V</user>
    <text>Elm has built-in typeclasses, like `comparable` and `number`.</text>
  </message>
  <message>
    <ts>2017-06-22T16:22:57.373275</ts>
    <user>U0LPMPL2U</user>
    <text>I feel like union types not being `comparable` is probably the biggest typeclass-related annoyance</text>
  </message>
  <message>
    <ts>2017-06-22T16:23:15.379532</ts>
    <user>U4872964V</user>
    <text>joelq: although it would not be a single implementation for map, still one implementation per type. the benefits of type classes is when you combine them together to build hierarchies of them</text>
  </message>
  <message>
    <ts>2017-06-22T16:23:23.382063</ts>
    <user>U5J0H2NS2</user>
    <text>yeah, comparable and number are compiler-magic...</text>
  </message>
  <message>
    <ts>2017-06-22T16:23:29.384176</ts>
    <user>U0LPMPL2U</user>
    <text>a lot of other stuff is nice in theory but I haven't really felt the need for it yet</text>
  </message>
  <message>
    <ts>2017-06-22T16:23:51.391148</ts>
    <user>U14Q8S4EM</user>
    <text>So in that sense, Elm already has type classes, but we still cant make our own right? Is there something we are missing out on?</text>
  </message>
  <message>
    <ts>2017-06-22T16:23:59.393652</ts>
    <user>U0LPMPL2U</user>
    <text>correct</text>
  </message>
  <message>
    <ts>2017-06-22T16:24:13.398431</ts>
    <user>U14Q8S4EM</user>
    <text>Why would you want to make your own type class?</text>
  </message>
  <message>
    <ts>2017-06-22T16:25:02.414717</ts>
    <user>U0LPMPL2U</user>
    <text>It's kind of like an "interface" in OO. Now you can make a function `foo` that accepts any data structure that implements `map` for example instead of hard coding to a single type</text>
  </message>
  <message>
    <ts>2017-06-22T16:25:03.415172</ts>
    <user>U5J0H2NS2</user>
    <text>to be able to better model your business data structure?</text>
  </message>
  <message>
    <ts>2017-06-22T16:25:32.424310</ts>
    <user>U5XHTBFS6</user>
    <text>(and I feel the haskell community has somewhat of a too-great appetite for abstraction)</text>
  </message>
  <message>
    <ts>2017-06-22T16:25:35.425381</ts>
    <user>U4872964V</user>
    <text>to use typeclass-related syntax (for instance +)
to use functions that are defined for a specific type class (like Set)</text>
  </message>
  <message>
    <ts>2017-06-22T16:26:28.443239</ts>
    <user>U14Q8S4EM</user>
    <text>Any practical examples?</text>
  </message>
  <message>
    <ts>2017-06-22T16:26:37.446347</ts>
    <user>U5XHTBFS6</user>
    <text>I don't feel much need int creating my own typeclasses, but I do sometimes feel we should be able at least to instantiate comparable for our own sum types</text>
  </message>
  <message>
    <ts>2017-06-22T16:26:44.448554</ts>
    <user>U14Q8S4EM</user>
    <text>Like "I can make this scrabble video game so much easier if I had such and such typeclass"</text>
  </message>
  <message>
    <ts>2017-06-22T16:26:47.449420</ts>
    <user>U5XHTBFS6</user>
    <text>to use in dicts and sets, for instance</text>
  </message>
  <message>
    <ts>2017-06-22T16:27:49.469778</ts>
    <user>U5XHTBFS6</user>
    <text>when I want to to use a set i have to "serialize" my type to numbers, use them as numbers and then serialize them back to my type</text>
  </message>
  <message>
    <ts>2017-06-22T16:28:17.478714</ts>
    <user>U5XHTBFS6</user>
    <text>which doesn't really work when some of the type constructors have parameters themselves</text>
  </message>
  <message>
    <ts>2017-06-22T16:28:25.481717</ts>
    <user>U4872964V</user>
    <text>maybe this is not the best channel for this though</text>
  </message>
  <message>
    <ts>2017-06-22T16:28:44.487715</ts>
    <user>U5J0H2NS2</user>
    <text>&lt;@U14Q8S4EM&gt; We just started to create a proof-of-concept of redesigning our business model in F#. We have just started learning FP in general, but already faced some limitations with F#-s type system.</text>
  </message>
  <message>
    <ts>2017-06-22T16:29:16.498403</ts>
    <user>U5XHTBFS6</user>
    <text>It's  annoying, but workaroundable.</text>
  </message>
  <message>
    <ts>2017-06-22T16:29:34.504215</ts>
    <user>U5XHTBFS6</user>
    <text>norpan: Agreed. will stop =D &amp;lt;/rant&amp;gt;</text>
  </message>
  <message>
    <ts>2017-06-22T16:30:10.516065</ts>
    <user>U4872964V</user>
    <text>but see &lt;https://github.com/elm-lang/elm-compiler/issues/1039&gt;</text>
  </message>
  <message>
    <ts>2017-06-22T16:45:36.818235</ts>
    <user>U5XHTBFS6</user>
    <text>hmmmm</text>
  </message>
  <message>
    <ts>2017-06-22T16:59:40.094361</ts>
    <user>U5HM74BD0</user>
    <text>What does it mean when I try to compile and get a type mismatch error:
```Function `programWithFlags` is expecting the argument to be:

    elm-make: Type applications without concrete names should not get here.```
?</text>
  </message>
  <message>
    <ts>2017-06-22T17:05:56.217561</ts>
    <user>U4872964V</user>
    <text>It means that there is a bug in the compiler somewhere. Does your code look anything like this? &lt;https://github.com/elm-lang/elm-compiler/issues/1390&gt;</text>
  </message>
  <message>
    <ts>2017-06-22T17:16:22.403003</ts>
    <user>U5ABF3BH7</user>
    <text>Hi! I am trying to decode a Json object:  it an array looking like this: 
```[
		 {
		category: "catering_company",
		list:  [
		 {
		id: 307,
		name: "Special Touch Catering"
		},
		 {
		id: 308,
		name: "Sunset Memorial Park "
		}
		]
		},
		 {
		category: "florist",
		list: [ ]
		},
		
		 {
		category: "insurance_provider",
		list:  [
		 {
		id: 60969,
		name: "Homesteaders"
		},
		 {
		id: 62411,
		name: "Homesteaders2"
		}
		
          ]     
    }  
 ]
```		
		
		
		
I created the following object
		
		
		type alias RolodexList =
		    { category : String
		    , list : List RolodexEntry}
		
		type alias RolodexEntry =
		      { id : Int
		      , name : String}
		    
		My issue is that I have trouble building the decoders. I know how to build one that is straight forward, but not nested.
		
		
getRolodexEntries : Cmd Types.Msg
getRolodexEntries =
  Json.Decode.list rolodex2Decoder
      |&amp;gt; Http.get "case/all_rolodex"
      |&amp;gt; Http.send Types.LoadRolodex

rolodex2Decoder : Decoder Types.Rolodex2
rolodex2Decoder =
   decode Types.Rolodex2
     |&amp;gt; Json.Decode.Pipeline.required "id" int
     |&amp;gt; Json.Decode.Pipeline.required "name" string
How can I build a decoder that gets nested values?</text>
  </message>
  <message>
    <ts>2017-06-22T17:17:00.414000</ts>
    <user>U23SA861Y</user>
    <text>ok, seems straight forward enough</text>
  </message>
  <message>
    <ts>2017-06-22T17:18:32.440600</ts>
    <user>U23SA861Y</user>
    <text>well I don't know about the pipeline but using the base decoder package</text>
  </message>
  <message>
    <ts>2017-06-22T17:19:34.458078</ts>
    <user>U23SA861Y</user>
    <text>`EntryDecoder = JD.map2 RolodexEntry (JD.field "id" &lt;http://JD.int|JD.int&gt;) (JD.field "name" JD.string) `</text>
  </message>
  <message>
    <ts>2017-06-22T17:21:09.485679</ts>
    <user>U23SA861Y</user>
    <text>`CategoryDecoder = JD.map2 RolodexList (JD.field "category" JD.string) (JD.field "list" (JD.list EntryDecoder))`</text>
  </message>
  <message>
    <ts>2017-06-22T17:21:34.492427</ts>
    <user>U23SA861Y</user>
    <text>`ListDecoder = JD.list CategoryDecoder`</text>
  </message>
  <message>
    <ts>2017-06-22T17:22:00.499918</ts>
    <user>U23SA861Y</user>
    <text>where JD is `import Json.Decode as JD`</text>
  </message>
  <message>
    <ts>2017-06-22T17:25:02.550590</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U23SA861Y&gt; Thanks a lot!</text>
  </message>
  <message>
    <ts>2017-06-22T17:32:07.669670</ts>
    <user>U5HM74BD0</user>
    <text>I asked a variant of this question a couple days ago. But it's a little more complicated than what I asked.  I have a `List` of records like this: `[{ab = 3, hits=2}, {ab=2, hits=1}]`.  I'd like to transform that list into a tuple of records: `({ab=3, hits=2}, {ab=2, hits=1})`. How can I write a function to do that? If the list is longer than 2 records, I can default it out to a dummy tuple: `({ab=0, hits=0}, {ab=0, hits=0})`.</text>
  </message>
  <message>
    <ts>2017-06-22T17:33:31.692407</ts>
    <user>U4872964V</user>
    <text>and if the list is shorter?</text>
  </message>
  <message>
    <ts>2017-06-22T17:34:07.701760</ts>
    <user>U4872964V</user>
    <text>Sound like you just should do a `case` on the list</text>
  </message>
  <message>
    <ts>2017-06-22T17:34:24.706605</ts>
    <user>U23SA861Y</user>
    <text>a tuples size needs to be known at compile time</text>
  </message>
  <message>
    <ts>2017-06-22T17:34:43.711398</ts>
    <user>U5HM74BD0</user>
    <text>When I put this function into the elm-repl, I'm not getting it to compile:
```&amp;gt; listToTuple l = \
     case l of \
         {a.ab, a.hits} :: {b.ab, b.hits} :: [] -&amp;gt; \
             ({a.ab, a.hits}, {b.ab, b.hits}) \
         _ -&amp;gt; ({ab=0, hits=0}, {ab = 0, hits=0})```</text>
  </message>
  <message>
    <ts>2017-06-22T17:34:59.715951</ts>
    <user>U23SA861Y</user>
    <text>you can't do it for a variable length list</text>
  </message>
  <message>
    <ts>2017-06-22T17:35:15.720356</ts>
    <user>U4872964V</user>
    <text>you can't pattern match like that</text>
  </message>
  <message>
    <ts>2017-06-22T17:35:29.724275</ts>
    <user>U23SA861Y</user>
    <text>if you know the exact size of the list at compile time you can write a function for it but tuples cannot be dynamically sized at run time</text>
  </message>
  <message>
    <ts>2017-06-22T17:35:31.724898</ts>
    <user>U4872964V</user>
    <text>but it looks like you don't care about the record contents anyway</text>
  </message>
  <message>
    <ts>2017-06-22T17:35:45.728665</ts>
    <user>U4872964V</user>
    <text>so just do `case l of a :: b :: [] -&amp;gt; (a, b)`</text>
  </message>
  <message>
    <ts>2017-06-22T17:37:57.763096</ts>
    <user>U5HM74BD0</user>
    <text>&lt;@U4872964V&gt; Your version does work for me in the repl. But when i annotate it in my program, I get that elm-make compilation error I mentioned a little while ago.  Let me see here...</text>
  </message>
  <message>
    <ts>2017-06-22T17:38:50.776636</ts>
    <user>U23SA861Y</user>
    <text>why are you trying to do this, it seems like there should be a better way?</text>
  </message>
  <message>
    <ts>2017-06-22T17:39:08.781408</ts>
    <user>U4872964V</user>
    <text>that is always a good question :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-22T17:39:48.792125</ts>
    <user>U5HM74BD0</user>
    <text>I am parsing a JSON object. That object comes in as a list, but my model represents them as a tuple.</text>
  </message>
  <message>
    <ts>2017-06-22T17:40:24.801793</ts>
    <user>U23SA861Y</user>
    <text>is the list a fixed known size or is it variable</text>
  </message>
  <message>
    <ts>2017-06-22T17:41:26.818225</ts>
    <user>U5HM74BD0</user>
    <text>Maybe I need to rethink the model?  I know, though, that there will be exactly two items needed for this piece as far as the application is concerned.  I'm representing my 2 sons batting averages in the app: "ab" is at-bats, and "hits" is number of hits for each game....</text>
  </message>
  <message>
    <ts>2017-06-22T17:42:21.832247</ts>
    <user>U23SA861Y</user>
    <text>are you going to have another kid?</text>
  </message>
  <message>
    <ts>2017-06-22T17:42:30.834680</ts>
    <user>U5HM74BD0</user>
    <text>:slightly_smiling_face:  Haha!!</text>
  </message>
  <message>
    <ts>2017-06-22T17:42:32.835314</ts>
    <user>U23SA861Y</user>
    <text>that sound like a many problem, I would leave it as a list</text>
  </message>
  <message>
    <ts>2017-06-22T17:42:42.837686</ts>
    <user>U5EL672TU</user>
    <text>zero, one, infinite kids</text>
  </message>
  <message>
    <ts>2017-06-22T17:43:39.851929</ts>
    <user>U5HM74BD0</user>
    <text>Alright, I will rework things.  I think you all are right, even though there's *no way* we're going to have any more kids!</text>
  </message>
  <message>
    <ts>2017-06-22T17:43:55.855992</ts>
    <user>U23SA861Y</user>
    <text>well, not intentionally anyway</text>
  </message>
  <message>
    <ts>2017-06-22T17:44:52.870499</ts>
    <user>U23SA861Y</user>
    <text>:stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-06-22T17:45:28.880148</ts>
    <user>U5HM74BD0</user>
    <text>I'm too old for that stuff! Too old to learn a new language like Elm, perhaps, much less too old for having another kid!!</text>
  </message>
  <message>
    <ts>2017-06-22T17:47:04.904299</ts>
    <user>U57KYFW67</user>
    <text>Most of the difficulty isn't in the learning of a functional language. It's in the unlearning of all the object-oriented crap :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-06-22T17:47:40.913389</ts>
    <user>U23SA861Y</user>
    <text>Its funny because if you were taught FP first, then imperative would seem absolutely nuts</text>
  </message>
  <message>
    <ts>2017-06-22T17:48:01.918341</ts>
    <user>U57KYFW67</user>
    <text>So often, "How do I do X" has to be answered with "無"</text>
  </message>
  <message>
    <ts>2017-06-22T17:48:11.920885</ts>
    <user>U57KYFW67</user>
    <text>(mu)</text>
  </message>
  <message>
    <ts>2017-06-22T17:48:21.923285</ts>
    <user>U5HM74BD0</user>
    <text>&lt;@U57KYFW67&gt; Friend, I've got to unlearn OO, along with procedural stuff like Basic I learned back in the 80s...  Got a lot to unlearn here, folks!</text>
  </message>
  <message>
    <ts>2017-06-22T17:48:28.924987</ts>
    <user>U57KYFW67</user>
    <text>hah</text>
  </message>
  <message>
    <ts>2017-06-22T17:49:29.940244</ts>
    <user>U57KYFW67</user>
    <text>It's a very Zen experience. You have to think less about "Doing" and more about "Being". What things are, rather than how things change.</text>
  </message>
  <message>
    <ts>2017-06-22T17:50:22.953559</ts>
    <user>U23SA861Y</user>
    <text>From a mathmatics background it makes alot of sense because nearly all of mathematics is statements</text>
  </message>
  <message>
    <ts>2017-06-22T17:50:23.953703</ts>
    <user>U4872964V</user>
    <text>declarative programming</text>
  </message>
  <message>
    <ts>2017-06-22T17:55:10.025782</ts>
    <user>U5HM74BD0</user>
    <text>So, when I come home in the evenings, I need to unlearn OO and such and learn some FP (using Elm), which is great. Except that OO is what I do during the day, so I go and relearn it again! Ha, it's a vicious cycle. One day I'll retire and stroll along the beach  with my grandkids and think, "yep, this is what all that madness was about. Basic-&amp;gt;OO-&amp;gt;FP-&amp;gt;OO-&amp;gt;FP...."  Just so that I could enjoy a nice week at the beach with the little ones....</text>
  </message>
  <message>
    <ts>2017-06-22T17:55:58.038014</ts>
    <user>U23SA861Y</user>
    <text>Unless you have an OO language that lets you be sneaky and start including some FP stuff in it</text>
  </message>
  <message>
    <ts>2017-06-22T17:56:19.043381</ts>
    <user>U57KYFW67</user>
    <text>It may seem like infinite recursion, but it actually converges on a fixedpoint: a very practical viewpoint where you recognize the advantages and disadvantages of each way of thinking.</text>
  </message>
  <message>
    <ts>2017-06-22T18:00:14.102176</ts>
    <user>U5HM74BD0</user>
    <text>&lt;@U57KYFW67&gt; I don't doubt you at all. But wow, were these the simple days:
```10 x=1
20 print "The number is " + x
30 x=x+1
40 goto 20```
And watch the counter scroll off the screen!  
To your point, though, FP does feel a lot like mathematics, algebra 2 and such. I'm finding myself coding much quicker in Elm, even if I screw up by representing the model wrong.</text>
  </message>
  <message>
    <ts>2017-06-22T18:01:59.128737</ts>
    <user>U57KYFW67</user>
    <text>I teach math. And one of the things that I find the FP community is a little misleading over is how "mathematical" FP is. I think math tends to signal to people that it's very numeric, but a better word may be "logical".... but of course, the word "logical" is totally wrong too!</text>
  </message>
  <message>
    <ts>2017-06-22T18:02:17.133288</ts>
    <user>U57KYFW67</user>
    <text>It is the logic of mathematics, but with none of the numbers.</text>
  </message>
  <message>
    <ts>2017-06-22T18:03:07.145452</ts>
    <user>U0K7EBT3J</user>
    <text>&lt;@U57KYFW67&gt; what about the name "discrete mathematics"?</text>
  </message>
  <message>
    <ts>2017-06-22T18:03:07.145526</ts>
    <user>U57KYFW67</user>
    <text>Which I think most people would find a little more palettable</text>
  </message>
  <message>
    <ts>2017-06-22T18:03:35.152223</ts>
    <user>U0K7EBT3J</user>
    <text>i like to think it is "discrete" cause it doesn't have numbers :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-06-22T18:03:38.153019</ts>
    <user>U57KYFW67</user>
    <text>I actually had my current employer ask me (out of curiosity) what Discrete Mathematics was during my interview.</text>
  </message>
  <message>
    <ts>2017-06-22T18:04:37.166888</ts>
    <user>U23SA861Y</user>
    <text>when I say it's more mathmatical I mean that you find things like this `f(x) = x+2, g(k,x) = x^k(x)` in math as opposed to `take a number, now increment it , now put it aside, now take another number`</text>
  </message>
  <message>
    <ts>2017-06-22T18:05:08.174355</ts>
    <user>U23SA861Y</user>
    <text>and you most definately don't side up with `f(x) = x + y` in math unless y is a constant</text>
  </message>
  <message>
    <ts>2017-06-22T18:05:23.178084</ts>
    <user>U0K7EBT3J</user>
    <text>more declarative then imperative then, borrowing some math symbols</text>
  </message>
  <message>
    <ts>2017-06-22T18:05:31.179930</ts>
    <user>U57KYFW67</user>
    <text>Every man's constant is another man's variable.</text>
  </message>
  <message>
    <ts>2017-06-22T18:05:57.185803</ts>
    <user>U23SA861Y</user>
    <text>for the purposes of that expression it is constant</text>
  </message>
  <message>
    <ts>2017-06-22T18:06:21.191569</ts>
    <user>U23SA861Y</user>
    <text>whereas in imperative languages y could be whatever and maybe change from time to time</text>
  </message>
  <message>
    <ts>2017-06-22T18:07:09.202048</ts>
    <user>U57KYFW67</user>
    <text>f(x) = x + π &amp;lt;---- π is a variable just like any other</text>
  </message>
  <message>
    <ts>2017-06-22T18:10:41.249084</ts>
    <user>U0K7EBT3J</user>
    <text>&lt;@U57KYFW67&gt; why is it not a constant?</text>
  </message>
  <message>
    <ts>2017-06-22T18:11:14.256496</ts>
    <user>U57KYFW67</user>
    <text>A constant is just a variable for which you can't see where it was defined.</text>
  </message>
  <message>
    <ts>2017-06-22T18:11:29.259897</ts>
    <user>U57KYFW67</user>
    <text>It's a matter of scoping.</text>
  </message>
  <message>
    <ts>2017-06-22T18:12:08.268266</ts>
    <user>U0K7EBT3J</user>
    <text>makes sense, philosophical!</text>
  </message>
  <message>
    <ts>2017-06-22T18:12:22.271276</ts>
    <user>U0K7EBT3J</user>
    <text>outside the matrix we live in maybe pi is different :wink:</text>
  </message>
  <message>
    <ts>2017-06-22T18:13:32.286403</ts>
    <user>U57KYFW67</user>
    <text>The variable π is sometimes used for other things in math. For instance, projection maps (like \(x, y) -&amp;gt; x) are very commonly called π.</text>
  </message>
  <message>
    <ts>2017-06-22T18:13:54.290937</ts>
    <user>U57KYFW67</user>
    <text>π is "p" for projection</text>
  </message>
  <message>
    <ts>2017-06-22T18:14:58.304038</ts>
    <user>U0K7EBT3J</user>
    <text>cool, didn't knew that! til</text>
  </message>
  <message>
    <ts>2017-06-22T18:21:26.384714</ts>
    <user>U23SA861Y</user>
    <text>except π == 3 is never true</text>
  </message>
  <message>
    <ts>2017-06-22T18:23:13.405958</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U57KYFW67&gt; the symbol pi is sometimes useful for other things, not the variable.</text>
  </message>
  <message>
    <ts>2017-06-22T18:24:03.416337</ts>
    <user>U57KYFW67</user>
    <text>Let π = 3. Then π = 3. I have shadowed the variable π. Not good practice, but you can't say I'm wrong, because I just gave a definition for what I mean by π.</text>
  </message>
  <message>
    <ts>2017-06-22T18:24:57.427468</ts>
    <user>U57KYFW67</user>
    <text>The only thing is that some variables have historical importance, and are used nearly universally in certain ways. But that's  convention, not logic.</text>
  </message>
  <message>
    <ts>2017-06-22T18:26:09.442157</ts>
    <user>U23SA861Y</user>
    <text>we coloquially refer to archimedes constant as pi because its frequent use as the symbol. But the constant itself doesn't change</text>
  </message>
  <message>
    <ts>2017-06-22T18:27:07.454106</ts>
    <user>U57KYFW67</user>
    <text>A good example is something like γ, the Euler-Mascheroni constant. Surely γ is used in lots of ways, but it is also an important naturally-occurring number -- not all that different from π.</text>
  </message>
  <message>
    <ts>2017-06-22T18:27:44.461372</ts>
    <user>U23SA861Y</user>
    <text>the concept of a fixed ratio between a diameter and a circumference that is the constant.</text>
  </message>
  <message>
    <ts>2017-06-22T18:35:25.553825</ts>
    <user>U57KYFW67</user>
    <text>jonf: Just taking this aside, since it's not programming-related. But if you look at situations like multiple integrals, you can have "constants" which "vary" Like ∫∫xydxdy (taken over, say, a rectangle) which is equal to ∫y (∫xdx) dy. We say the variable y is constant with respect to x. It's treated as constant because when you zoom in on the inner integral "∫xydx", you can see the quantifier for x (the "dx" in a sense brings the variable x into existence), but you can't see the quantifier for y until you zoom back out.</text>
  </message>
  <message>
    <ts>2017-06-22T18:43:59.650021</ts>
    <user>U23SA861Y</user>
    <text>y isn't a constant in that scenario it is a variable of the inner function f(y,x)=xy you are simply recoginizing that there exists an identity g(y) = ∫xydx = y * ∫xdx</text>
  </message>
  <message>
    <ts>2017-06-22T18:48:08.696388</ts>
    <user>U57KYFW67</user>
    <text>Right. But that requires a global perspective. Locally, (when you confine your analysis to just the inner scope) it acts in all ways exactly like a constant.</text>
  </message>
  <message>
    <ts>2017-06-22T18:49:40.712783</ts>
    <user>U57KYFW67</user>
    <text>The perspective I'm arguing here is useful if you're, say, writing a compiler, and you want to concern yourself with local data whenever possible.</text>
  </message>
  <message>
    <ts>2017-06-22T18:49:48.714313</ts>
    <user>U57KYFW67</user>
    <text>But ultimately, you can take different perspectives on it.</text>
  </message>
  <message>
    <ts>2017-06-22T19:02:36.854903</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U23SA861Y&gt; thanks for helping me earlier. I am not fetching the data though. The decoder isn't doing its job and  I get an empty list when I shouldn't . Would you might taking a look to see if you catch some error in my code?
Going to the url "cases/frontend/all_rolodex" fetches the data so the error isn't there. 
```
entryDecoder = Json.Decode.map2 Types.RolodexEntry (Json.Decode.field "id" &lt;http://Json.Decode.int|Json.Decode.int&gt;) (Json.Decode.field "name" Json.Decode.string)

categoryDecoder = Json.Decode.map2 Types.RolodexList (Json.Decode.field "category" Json.Decode.string) (Json.Decode.field "list" (Json.Decode.list entryDecoder))

getRolodexLists =
   Json.Decode.list categoryDecoder
              |&amp;gt; Http.get "cases/frontend/all_rolodex"
              |&amp;gt; Http.send Types.LoadRolodexLists
```
```
type alias RolodexList =
    { category : String
    , list : List RolodexEntry}

type alias RolodexEntry =
      { id : Int
      , name : String}
```
```

Types.LoadRolodexLists (Ok rolodexLists) -&amp;gt;
    ({ model | rolodexCategoriesAndEntries =  rolodexLists}, Cmd.none)

Types.LoadRolodexLists (Err _) -&amp;gt;
     (model, Cmd.none)
```</text>
  </message>
  <message>
    <ts>2017-06-22T19:03:25.863804</ts>
    <user>U5ABF3BH7</user>
    <text>I also get the data with ```Cmd.batch [ ..., ..., getRolodexLists]</text>
  </message>
  <message>
    <ts>2017-06-22T19:17:42.008455</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5ABF3BH7&gt; are you sure the http request isn't erroring?</text>
  </message>
  <message>
    <ts>2017-06-22T19:19:11.023091</ts>
    <user>U153UK3FA</user>
    <text>what does the json from the response look like?</text>
  </message>
  <message>
    <ts>2017-06-22T19:42:35.244507</ts>
    <user>U3HQVHERX</user>
    <text>Could someone provide me with an example of `uniqueBy : (a -&amp;gt; comparable) -&amp;gt; List a -&amp;gt; List a`?</text>
  </message>
  <message>
    <ts>2017-06-22T19:43:04.249173</ts>
    <user>U3HQVHERX</user>
    <text>Like `unique [1,1,2] == [1,2]`</text>
  </message>
  <message>
    <ts>2017-06-22T19:43:09.250016</ts>
    <user>U3HQVHERX</user>
    <text>`unique ?? [1,1,2] == [1,2]`</text>
  </message>
  <message>
    <ts>2017-06-22T19:43:23.252141</ts>
    <user>U3HQVHERX</user>
    <text>from List.Extra</text>
  </message>
  <message>
    <ts>2017-06-22T19:59:00.395500</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U3HQVHERX&gt; I don't know if this is right, but my guess would be something like unique (\p  -&amp;gt; p.age) personList</text>
  </message>
  <message>
    <ts>2017-06-22T19:59:46.402476</ts>
    <user>U57KYFW67</user>
    <text>or to be a bit more concrete, unique (\x -&amp;gt; abs x) [-1, 2, -3, 4, 1, -2]</text>
  </message>
  <message>
    <ts>2017-06-22T19:59:57.404196</ts>
    <user>U236M9FH9</user>
    <text>:point_up:</text>
  </message>
  <message>
    <ts>2017-06-22T20:13:28.525233</ts>
    <user>U3HQVHERX</user>
    <text>thanks!</text>
  </message>
  <message>
    <ts>2017-06-22T20:16:27.549480</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U153UK3FA&gt; when I go to the url. the response looks like this [
{
category: "catering_company",
list: [
{
id: 30797,
name: "Special Touch Catering"
},
{
id: 30797,
name: "Sunset Memorial Park "
}
]
},
{
category: "florist",
list: [ ]
},

{
category: "insurance_provider",
list: [
{
id: 60969,
name: "Homesteaders"
},---</text>
  </message>
  <message>
    <ts>2017-06-22T20:16:57.553360</ts>
    <user>U5ABF3BH7</user>
    <text>Could it be that it takes too long to load ( about 3 to 5 seconds)</text>
  </message>
  <message>
    <ts>2017-06-22T20:16:59.553664</ts>
    <user>U5ABF3BH7</user>
    <text>?</text>
  </message>
  <message>
    <ts>2017-06-22T20:18:55.569449</ts>
    <user>U5ABF3BH7</user>
    <text>I  am getting an empty like instead</text>
  </message>
  <message>
    <ts>2017-06-22T20:19:31.574283</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5ABF3BH7&gt; what do you see in the web Dev console when Elm makes that request?</text>
  </message>
  <message>
    <ts>2017-06-22T20:20:44.583826</ts>
    <user>U153UK3FA</user>
    <text>Does the request actually succeed?</text>
  </message>
  <message>
    <ts>2017-06-22T20:23:28.604767</ts>
    <user>U153UK3FA</user>
    <text>You should add some code to your Err case to display something if the request fails so it doesn't silently fail</text>
  </message>
  <message>
    <ts>2017-06-22T20:24:19.611258</ts>
    <user>U5ABF3BH7</user>
    <text>I get 404 in the console</text>
  </message>
  <message>
    <ts>2017-06-22T20:28:11.640804</ts>
    <user>U5ABF3BH7</user>
    <text>I don't know why it is failing.</text>
  </message>
  <message>
    <ts>2017-06-22T20:30:39.660012</ts>
    <user>U153UK3FA</user>
    <text>Lots of context the web server can use to give a different response</text>
  </message>
  <message>
    <ts>2017-06-22T20:31:38.667559</ts>
    <user>U153UK3FA</user>
    <text>Do you control the server?</text>
  </message>
  <message>
    <ts>2017-06-22T20:33:50.683871</ts>
    <user>U5ABF3BH7</user>
    <text>I stupidly forgot to add .json on the url!</text>
  </message>
  <message>
    <ts>2017-06-22T20:37:02.708428</ts>
    <user>U5ABF3BH7</user>
    <text>Sadly, it is still not worker. &lt;@U153UK3FA&gt;, I am not sure what you mean by if I control the server. I control the json url (through frontend controller)</text>
  </message>
  <message>
    <ts>2017-06-22T20:37:11.709742</ts>
    <user>U5ABF3BH7</user>
    <text>^ not working</text>
  </message>
  <message>
    <ts>2017-06-22T20:44:59.769308</ts>
    <user>U236M9FH9</user>
    <text>&lt;@U5ABF3BH7&gt; Open up the network tab of devtools &amp;amp; look at the differences of each request, might be some headers you need to add</text>
  </message>
  <message>
    <ts>2017-06-22T20:48:03.792920</ts>
    <user>U5ABF3BH7</user>
    <text>Could it be that a decoder calling another one messes the http.requestLooking at the error, it looks like the url is added twice. I get```No route matches [GET] "/cases/frontend/cases/frontend/all_rolodex.json"```. . I created a decoder for a list that is not nested, and it works fine.</text>
  </message>
  <message>
    <ts>2017-06-22T20:50:39.812790</ts>
    <user>U236M9FH9</user>
    <text>Try putting a leading slash before `cases` in the URL?</text>
  </message>
  <message>
    <ts>2017-06-22T20:51:44.821205</ts>
    <user>U236M9FH9</user>
    <text>Adding Decode.list shouldn't have anything to do with a double URL :confused: The decoder is used after the response is received...</text>
  </message>
  <message>
    <ts>2017-06-22T21:03:20.912810</ts>
    <user>U5ABF3BH7</user>
    <text>Oh, you are right :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-22T21:55:31.305760</ts>
    <user>U23SA861Y</user>
    <text>see it's not json decoding thats hard, it's browsers :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-06-22T21:57:06.317692</ts>
    <user>U153UK3FA</user>
    <text>values relative to context</text>
  </message>
  <message>
    <ts>2017-06-23T02:01:02.883850</ts>
    <user>U5Z6Q8Q9L</user>
    <text>Hi all :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-23T02:01:25.886887</ts>
    <user>U5Z6Q8Q9L</user>
    <text>I'm looking into frontend stuff and I was wondering if I could get an opinion -</text>
  </message>
  <message>
    <ts>2017-06-23T02:05:40.917529</ts>
    <user>U5Z6Q8Q9L</user>
    <text>I'm building a webapp with rails, and I'm looking towards frontend.  In the past I've used pure JS (which can be a pain).  I've been experimenting with React, and while it's cool, I feel like it's a bit overkill (not to mention if the end-user doesn't enable JS, the whole page breaks).  
I was looking into integrating elm with existing HTML (instead of replacing everything with elm), which seems to be possible with Elm embeds.   However I'm a little confused as to how they interact.  Can different elm embeds interact with each other?  For instance, if I were to have a persistent audio player similar to the one on soundcloud, could I make that audio player an embed, but have multiple controls for that component in other embeds?  Hopefully that makes sense...</text>
  </message>
  <message>
    <ts>2017-06-23T02:12:45.968489</ts>
    <user>U0PBSF05S</user>
    <text>&lt;@U5Z6Q8Q9L&gt; Each embedded Elm app would be separate and they would need to communicate using ports just like they would have to if they were communicating with any other JS application. You will need a thin layer of JS in the middle that will coordinate the messages between the various Elm apps that you have. It is quite doable.</text>
  </message>
  <message>
    <ts>2017-06-23T02:35:27.140474</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5Z6Q8Q9L&gt; of course you can do the same thing with React</text>
  </message>
  <message>
    <ts>2017-06-23T02:36:52.151994</ts>
    <user>U153UK3FA</user>
    <text>I wouldn't worry to much about people having JS disabled</text>
  </message>
  <message>
    <ts>2017-06-23T02:44:31.214173</ts>
    <user>U5Z6Q8Q9L</user>
    <text>&lt;@U0PBSF05S&gt; would that solution still allow me to take advantage of stuff like subscriptions and models (like in the clock example)?</text>
  </message>
  <message>
    <ts>2017-06-23T02:46:21.231530</ts>
    <user>U0PBSF05S</user>
    <text>&lt;@U5Z6Q8Q9L&gt; Yes, standard Elm and in fact incoming ports will come via subscriptions.</text>
  </message>
  <message>
    <ts>2017-06-23T02:49:26.257280</ts>
    <user>U5Z6Q8Q9L</user>
    <text>do you happen to have any resources on that subject?  I can't seem to find much of use but perhaps I'm looking in the wrong places/with the wrong keywords.</text>
  </message>
  <message>
    <ts>2017-06-23T02:52:47.286275</ts>
    <user>U0PBSF05S</user>
    <text>&lt;@U5Z6Q8Q9L&gt; Are you talking about ports? I would start here if you haven't read this already: &lt;https://guide.elm-lang.org/interop/javascript.html&gt;</text>
  </message>
  <message>
    <ts>2017-06-23T02:53:49.295131</ts>
    <user>U5Z6Q8Q9L</user>
    <text>Ah, thanks!</text>
  </message>
  <message>
    <ts>2017-06-23T03:12:59.475517</ts>
    <user>U0JL9RPC4</user>
    <text>that reminds me this Elm Europe talk about microservices</text>
  </message>
  <message>
    <ts>2017-06-23T05:11:48.929890</ts>
    <user>U2M8ER12B</user>
    <text>elm noob, so i have no idea... dropbox marketing page has this code:
```
window.addEventListener('click', function(event) {
    'use strict';
    for (var elm = event.target; elm; elm = elm.parentElement) {
        if (elm.id &amp;amp;&amp;amp;
            window._goch_.hasOwnProperty(elm.id) &amp;amp;&amp;amp;
            window._goch_[elm.id].call(elm, event) === false) {
            event.preventDefault();
        }
    }
}, true);
```</text>
  </message>
  <message>
    <ts>2017-06-23T05:12:02.933132</ts>
    <user>U2M8ER12B</user>
    <text>is that an elm signature?</text>
  </message>
  <message>
    <ts>2017-06-23T05:13:07.946911</ts>
    <user>U3SJEDR96</user>
    <text>no, that's just `elm` as short for `element`</text>
  </message>
  <message>
    <ts>2017-06-23T05:25:10.105070</ts>
    <user>U2M8ER12B</user>
    <text>ha, ooops</text>
  </message>
  <message>
    <ts>2017-06-23T05:26:24.122310</ts>
    <user>U3SJEDR96</user>
    <text>yeah, their website is mostly react</text>
  </message>
  <message>
    <ts>2017-06-23T07:36:20.640387</ts>
    <user>U5YJVL3B7</user>
    <text>hey elmos</text>
  </message>
  <message>
    <ts>2017-06-23T07:36:50.645311</ts>
    <user>U5YJVL3B7</user>
    <text>I'm trying to understand this:
```
type alias Html msg = Node msg
```
from the Html package</text>
  </message>
  <message>
    <ts>2017-06-23T07:36:57.646455</ts>
    <user>U5YJVL3B7</user>
    <text>where does `Node` comes from?</text>
  </message>
  <message>
    <ts>2017-06-23T07:38:30.661896</ts>
    <user>U3SJEDR96</user>
    <text>from the `VirtualDom` package</text>
  </message>
  <message>
    <ts>2017-06-23T07:39:00.666831</ts>
    <user>U3SJEDR96</user>
    <text>similarly, `type alias Svg msg = Node msg`. That is to say; they both use virtual-dom nodes under the hood :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-23T07:39:26.671265</ts>
    <user>U5YJVL3B7</user>
    <text>Oh I see</text>
  </message>
  <message>
    <ts>2017-06-23T07:39:38.673160</ts>
    <user>U5YJVL3B7</user>
    <text>but the documentation don't link Node with VirtualDom.Node</text>
  </message>
  <message>
    <ts>2017-06-23T07:40:02.676980</ts>
    <user>U3SJEDR96</user>
    <text>yeah, it's a little annoying that it doesn't do cross-package links</text>
  </message>
  <message>
    <ts>2017-06-23T07:40:09.678351</ts>
    <user>U3SJEDR96</user>
    <text>I think there's a bug for it</text>
  </message>
  <message>
    <ts>2017-06-23T07:41:38.693799</ts>
    <user>U5YJVL3B7</user>
    <text>thanks so much</text>
  </message>
  <message>
    <ts>2017-06-23T07:43:35.713665</ts>
    <user>U5YJVL3B7</user>
    <text>now, `type Node msg = Node`</text>
  </message>
  <message>
    <ts>2017-06-23T07:43:39.714326</ts>
    <user>U5YJVL3B7</user>
    <text>what is `msg` ?</text>
  </message>
  <message>
    <ts>2017-06-23T07:44:49.726004</ts>
    <user>U3SJEDR96</user>
    <text>That's because it uses Native. So basically, it's a combination of phantom types and native magic; through which you can save information in structures in an "non-type-safe" manner</text>
  </message>
  <message>
    <ts>2017-06-23T07:45:30.733231</ts>
    <user>U3SJEDR96</user>
    <text>`msg` in this case is a type variable for the message type that can be "emitted" from your dom-nodes through events</text>
  </message>
  <message>
    <ts>2017-06-23T07:46:44.745784</ts>
    <user>U3SJEDR96</user>
    <text>so you can do `onClick MyMsg` which is an `Attribute Msg` (because `MyMsg` is of type `Msg`). A dom node can have multiple attributes, and all of its children can have attributes, but they have to match types, so your final structure can only emit *one* type of events</text>
  </message>
  <message>
    <ts>2017-06-23T08:17:45.094237</ts>
    <user>U5YJVL3B7</user>
    <text>&lt;@U3SJEDR96&gt; thanks !!</text>
  </message>
  <message>
    <ts>2017-06-23T09:47:34.528017</ts>
    <user>U5QPUBDQR</user>
    <text>hi can someone advise on List mapping?</text>
  </message>
  <message>
    <ts>2017-06-23T09:47:43.531158</ts>
    <user>U5QPUBDQR</user>
    <text>this is my code:</text>
  </message>
  <message>
    <ts>2017-06-23T09:47:45.531695</ts>
    <user>U5QPUBDQR</user>
    <text>updateVideo entry =
            if entry.ident == caption.ident then
                { entry | video = caption.video, status = "video" }
            else
                entry
        List.map updateVideo model.captions</text>
  </message>
  <message>
    <ts>2017-06-23T09:48:05.538272</ts>
    <user>U5QPUBDQR</user>
    <text>and the error is</text>
  </message>
  <message>
    <ts>2017-06-23T09:48:15.541356</ts>
    <user>U5QPUBDQR</user>
    <text>I ran into something unexpected when parsing your code!

134|         List.map updateVideo model.captions
                  ^
I am looking for one of the following things:

    an upper case name</text>
  </message>
  <message>
    <ts>2017-06-23T09:48:16.541923</ts>
    <user>U59AF21LJ</user>
    <text>Hi, there is something that I quite yet don't understand with elm: how `&amp;lt;textarea&amp;gt;` or `&amp;lt;input&amp;gt;` are handled. In the examples, the `&amp;lt;input&amp;gt;` are left blank in the view, without using the model: `input [ onInput Change ] []` while I'd think something like `input [ value model.something, onInput Change ] []` would be more appropriate.</text>
  </message>
  <message>
    <ts>2017-06-23T09:48:54.554575</ts>
    <user>U5QPUBDQR</user>
    <text>Why does the compiler want an uppercase name?</text>
  </message>
  <message>
    <ts>2017-06-23T09:49:15.561627</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5QPUBDQR&gt; I think you're missing a `let ... in` around that first part</text>
  </message>
  <message>
    <ts>2017-06-23T09:49:53.574677</ts>
    <user>U5QPUBDQR</user>
    <text>&lt;@U3SJEDR96&gt; that code is already nested in a let … in</text>
  </message>
  <message>
    <ts>2017-06-23T09:50:01.577275</ts>
    <user>U5QPUBDQR</user>
    <text>can i nest again?</text>
  </message>
  <message>
    <ts>2017-06-23T09:50:10.580576</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U59AF21LJ&gt; the DOM (in your browser) keeps it own state. _Usually_ we'll make sure that the dom reflects our model by using `value model.something` in the view, but this in't always required (and actually, not always what you want)</text>
  </message>
  <message>
    <ts>2017-06-23T09:50:24.585583</ts>
    <user>U5QPUBDQR</user>
    <text>let 
        b = "hasRecorded"
        newCaptions = caption :: model.captions
        updateVideo entry =
            if entry.ident == caption.ident then
                { entry | video = caption.video, status = "video" }
            else
                entry
        List.map updateVideo model.captions
    in
        ({ model | captions = newCaptions, debug = b }, Cmd.none)</text>
  </message>
  <message>
    <ts>2017-06-23T09:51:40.611459</ts>
    <user>U3SJEDR96</user>
    <text>hm, but where do you expect the result of that `List.map` to go?</text>
  </message>
  <message>
    <ts>2017-06-23T09:52:16.623717</ts>
    <user>U5QPUBDQR</user>
    <text>&lt;@U3SJEDR96&gt; i have a list and i want to update one element of that list</text>
  </message>
  <message>
    <ts>2017-06-23T09:52:36.630391</ts>
    <user>U5QPUBDQR</user>
    <text>i need a specific element with a certain ident</text>
  </message>
  <message>
    <ts>2017-06-23T09:52:36.630545</ts>
    <user>U3SJEDR96</user>
    <text>```
let
        b = "hasRecorded"
        newCaptions = caption :: model.captions
        updateVideo entry =
            if entry.ident == caption.ident then
                { entry | video = caption.video, status = "video" }
            else
                entry
    in
        ({ model | captions = List.map updateVideo newCaptions, debug = b }, Cmd.none)
```</text>
  </message>
  <message>
    <ts>2017-06-23T09:52:43.632881</ts>
    <user>U3SJEDR96</user>
    <text>maybe that's what you mean? or closer to it?</text>
  </message>
  <message>
    <ts>2017-06-23T09:53:41.652306</ts>
    <user>U5QPUBDQR</user>
    <text>isn't that the same? ie List.map still calling updateVideo?</text>
  </message>
  <message>
    <ts>2017-06-23T09:53:56.657241</ts>
    <user>U5QPUBDQR</user>
    <text>i'll try…</text>
  </message>
  <message>
    <ts>2017-06-23T09:54:26.667384</ts>
    <user>U3SJEDR96</user>
    <text>yeah, but now that expression is used, rather than just sitting there.</text>
  </message>
  <message>
    <ts>2017-06-23T09:55:13.683042</ts>
    <user>U5QPUBDQR</user>
    <text>&lt;@U3SJEDR96&gt; yep!</text>
  </message>
  <message>
    <ts>2017-06-23T09:55:48.695239</ts>
    <user>U3SJEDR96</user>
    <text>in a `let..in`, you have a place to declare values for use in the `in..` part. However, just an expression by itself doesn't do much, and isn't allowed there. You still have immutability, so just saying, imperatively "change my values", won't work :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-23T09:57:02.721048</ts>
    <user>U5QPUBDQR</user>
    <text>thx! the silly variable was trying stuff out. This is the result:</text>
  </message>
  <message>
    <ts>2017-06-23T09:57:03.721545</ts>
    <user>U5QPUBDQR</user>
    <text>let
        b = "hasRecorded"
        updateVideo entry =
            if entry.ident == caption.ident then
                { entry | video = caption.video, status = "video" }
            else
                entry
    in
        ({ model | captions = List.map updateVideo model.captions, debug = b }, Cmd.none)</text>
  </message>
  <message>
    <ts>2017-06-23T09:57:49.737650</ts>
    <user>U3SJEDR96</user>
    <text>alright, great :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-23T09:59:03.763204</ts>
    <user>U3SJEDR96</user>
    <text>`Json.Encode.object [( "key", Json.Encode.string "value"), ("otherKey", &lt;http://Json.Encode.int|Json.Encode.int&gt; 3)] |&amp;gt; List.singleton |&amp;gt; Json.Encode.list`</text>
  </message>
  <message>
    <ts>2017-06-23T09:59:16.767606</ts>
    <user>U3SJEDR96</user>
    <text>if I managed to read your question before it disappeared</text>
  </message>
  <message>
    <ts>2017-06-23T09:59:23.770273</ts>
    <user>U5QPUBDQR</user>
    <text>&lt;@U3SJEDR96&gt; it works too. Is'n this a bit sily tho?</text>
  </message>
  <message>
    <ts>2017-06-23T09:59:24.770632</ts>
    <user>U5QPUBDQR</user>
    <text>({ model | captions = List.map updateVideo model.captions, debug = b },</text>
  </message>
  <message>
    <ts>2017-06-23T09:59:41.776676</ts>
    <user>U5QPUBDQR</user>
    <text>ie update the model, from the model?</text>
  </message>
  <message>
    <ts>2017-06-23T10:00:28.795662</ts>
    <user>U3SJEDR96</user>
    <text>I'm not sure what you mean by that. `update` returns a _new_ model, and _usually_ that's based on your previous state</text>
  </message>
  <message>
    <ts>2017-06-23T10:00:40.800233</ts>
    <user>U3SJEDR96</user>
    <text>so using your previous model to build a new one makes perfect sense</text>
  </message>
  <message>
    <ts>2017-06-23T10:01:33.819687</ts>
    <user>U5QPUBDQR</user>
    <text>&lt;@U3SJEDR96&gt; a yes: immutabilty takes some getting used to</text>
  </message>
  <message>
    <ts>2017-06-23T10:02:11.833123</ts>
    <user>U3SJEDR96</user>
    <text>yeah, it's important to realize that `{ foo | v = "val" }` creates a _new_ record )</text>
  </message>
  <message>
    <ts>2017-06-23T10:02:40.843950</ts>
    <user>U5QPUBDQR</user>
    <text>&lt;@U3SJEDR96&gt; thanks. I'm very happy with this slack channel, good help available :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-23T10:02:42.844504</ts>
    <user>U57KYFW67</user>
    <text>It's not possible to include two .js files created by Elm on one page, is it?</text>
  </message>
  <message>
    <ts>2017-06-23T10:03:20.858090</ts>
    <user>U50SABLHE</user>
    <text>How would I Json.Encode an array of objects to be used in a request body? Below is an example of what I need to send.

```
[
    {
        "request-id": 1,
        "action-name": "checkZipCode",
        "zip-code": "41501"
    }
]
```

I'm using the following code to Encode the object, but I'm not sure how to add the surrounding array brackets
```
encodeZipCode : Encode.Value
encodeZipCode =
    Encode.object
        [ ( "request-id", &lt;http://Encode.int|Encode.int&gt; 1 )
        , ( "action-name", Encode.string "checkZipCode" )
        , ( "zip-code", Encode.string "41501" )
        ]
```</text>
  </message>
  <message>
    <ts>2017-06-23T10:04:39.885222</ts>
    <user>U3SJEDR96</user>
    <text>```
encodeZipCode : Encode.Value
encodeZipCode =
    Json.Encode.list 
        [ Encode.object
            [ ( "request-id", &lt;http://Encode.int|Encode.int&gt; 1 )
            , ( "action-name", Encode.string "checkZipCode" )
            , ( "zip-code", Encode.string "41501" )
            ]
        ]
```</text>
  </message>
  <message>
    <ts>2017-06-23T10:05:12.896867</ts>
    <user>U3SJEDR96</user>
    <text>that should work. Alternatively, this should also work: 
```
encodeZipCode : Encode.Value
encodeZipCode =
    Encode.object
        [ ( "request-id", &lt;http://Encode.int|Encode.int&gt; 1 )
        , ( "action-name", Encode.string "checkZipCode" )
        , ( "zip-code", Encode.string "41501" )
        ]
        |&amp;gt; List.singleton
        |&amp;gt; Json.Encode.list
```</text>
  </message>
  <message>
    <ts>2017-06-23T10:05:33.904263</ts>
    <user>U3SJEDR96</user>
    <text>so basically, wrap it in a list, and encode that with `Json.Encode.list`</text>
  </message>
  <message>
    <ts>2017-06-23T10:08:07.958011</ts>
    <user>U50SABLHE</user>
    <text>&lt;@U3SJEDR96&gt; Thanks, that was exactly what I needed.</text>
  </message>
  <message>
    <ts>2017-06-23T11:09:47.329458</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U3SJEDR96&gt; Sorry for the late reply. I actually see that as a problem, because sometimes it doesn't refresh with the value the model provides and just keeps the one the user wrote instead.</text>
  </message>
  <message>
    <ts>2017-06-23T11:18:06.516730</ts>
    <user>U5WD40ZA9</user>
    <text>Anyone know any recent examples of someone creating a dropdown so that when you click outside of it, it closes? Would be really helpful, thanks in advance :slightly_smiling_face:!</text>
  </message>
  <message>
    <ts>2017-06-23T11:42:57.066692</ts>
    <user>U4PT7NG4V</user>
    <text>I've always just put an invisible overlay over the background behind popups and handled the click there and dismiss the popup. But maybe I'm old school and there's a better way</text>
  </message>
  <message>
    <ts>2017-06-23T11:43:00.067638</ts>
    <user>U0K92QFST</user>
    <text>&lt;@U5WD40ZA9&gt; there was *just* a discussion about exactly this in &lt;#C13L7S5GR|elm-dev&gt;!</text>
  </message>
  <message>
    <ts>2017-06-23T11:43:04.069155</ts>
    <user>U0K92QFST</user>
    <text>&lt;https://ellie-app.com/3tm2WSV9JTza1/0&gt;</text>
  </message>
  <message>
    <ts>2017-06-23T11:43:20.074913</ts>
    <user>U0K92QFST</user>
    <text>credit where due: &lt;https://elmlang.slack.com/archives/C13L7S5GR/p1498165749675291&gt;</text>
  </message>
  <message>
    <ts>2017-06-23T11:43:45.083912</ts>
    <user>U5WD40ZA9</user>
    <text>&lt;@U0K92QFST&gt; I'll take a look! Thank you very much :+1:</text>
  </message>
  <message>
    <ts>2017-06-23T11:45:47.129164</ts>
    <user>U4PT7NG4V</user>
    <text>That's really neat :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-23T11:59:57.439827</ts>
    <user>U2W8J47KQ</user>
    <text>I'm curious how that's listening for the "outside" clicks, it's not super obvious to me</text>
  </message>
  <message>
    <ts>2017-06-23T12:01:05.468306</ts>
    <user>U2W8J47KQ</user>
    <text>oh it's looking for focus change events, neat</text>
  </message>
  <message>
    <ts>2017-06-23T12:01:46.483582</ts>
    <user>U4PT7NG4V</user>
    <text>Kinda neat code wise, makes it difficult to inspect the popup in dev tools though</text>
  </message>
  <message>
    <ts>2017-06-23T12:02:46.505852</ts>
    <user>U2W8J47KQ</user>
    <text>I always have that problem with styling popups/dropdown/etc, chrome hover/focus toggle helps some</text>
  </message>
  <message>
    <ts>2017-06-23T12:37:45.211519</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U59AF21LJ&gt; that's a problem if the part of your model that should match the input field is modified in any way _other_ than through the input field. One reason to do it the way it's done in the guide, is to prevent the cursor from jumping if you type faster than your (`update` loop can process + a render can be queued through requestanimationframe, and your updated model is finally rendered), which takes about ~16ms at most. Especially noticeable if your cursor isn't at the end of the input :wink:</text>
  </message>
  <message>
    <ts>2017-06-23T13:49:57.624432</ts>
    <user>U3LUC6SNS</user>
    <text>Is there a way of putting user-defined modules in Ellie?</text>
  </message>
  <message>
    <ts>2017-06-23T13:51:16.650796</ts>
    <user>U23SA861Y</user>
    <text>publishing them first?</text>
  </message>
  <message>
    <ts>2017-06-23T13:53:48.700810</ts>
    <user>U3LUC6SNS</user>
    <text>I would say that mathematics is more about manipulating structures, of which the integers, the real numbers, etc., are particular examples.</text>
  </message>
  <message>
    <ts>2017-06-23T14:02:46.888330</ts>
    <user>U3LUC6SNS</user>
    <text>I suppose so, but the modules I have in mind are of little value outside of the example.  Seems like littering :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-23T14:05:10.936721</ts>
    <user>U23SA861Y</user>
    <text>well it looks like it can install things which the elm package manager can find</text>
  </message>
  <message>
    <ts>2017-06-23T14:06:52.971060</ts>
    <user>U23SA861Y</user>
    <text>well it's either big enough to be a package (which you maybe can publish) or its small enough to inline into a single page</text>
  </message>
  <message>
    <ts>2017-06-23T14:43:55.708144</ts>
    <user>U3LUC6SNS</user>
    <text>Where is `Msg` defined?</text>
  </message>
  <message>
    <ts>2017-06-23T14:44:46.724615</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U23SA861Y&gt; can I inline a module, that is, include its text in the "Main.elm" file?</text>
  </message>
  <message>
    <ts>2017-06-23T14:45:13.733323</ts>
    <user>U23SA861Y</user>
    <text>Msg is defined wherever you defined it...</text>
  </message>
  <message>
    <ts>2017-06-23T14:46:05.750266</ts>
    <user>U23SA861Y</user>
    <text>its just code, the import prefixes might need to be rewritten but there is nothing that stops you from moving that code around. (with the exception of circular imports)</text>
  </message>
  <message>
    <ts>2017-06-23T14:47:09.770344</ts>
    <user>U3LUC6SNS</user>
    <text>Got it! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-23T14:47:55.785313</ts>
    <user>U23SA861Y</user>
    <text>The only think that actually needs to be a seperate modules is ports I believe</text>
  </message>
  <message>
    <ts>2017-06-23T15:04:29.112419</ts>
    <user>U236M9FH9</user>
    <text>ports don't have to be in a separate module, but it's best as every port has the same namespace so a single module can help prevent name collisions.</text>
  </message>
  <message>
    <ts>2017-06-23T15:06:34.152348</ts>
    <user>U23SA861Y</user>
    <text>umm I thought you needed a special `port module` declaration</text>
  </message>
  <message>
    <ts>2017-06-23T15:07:12.163441</ts>
    <user>U236M9FH9</user>
    <text>You do, but you can have multiple modules with that declaration</text>
  </message>
  <message>
    <ts>2017-06-23T15:07:28.168505</ts>
    <user>U236M9FH9</user>
    <text>And other elm code can live in that module</text>
  </message>
  <message>
    <ts>2017-06-23T15:07:44.173261</ts>
    <user>U23SA861Y</user>
    <text>It can but I don't think that module can be toplevel</text>
  </message>
  <message>
    <ts>2017-06-23T15:07:55.176682</ts>
    <user>U23SA861Y</user>
    <text>I don't think your main module can be a port module</text>
  </message>
  <message>
    <ts>2017-06-23T15:08:48.192458</ts>
    <user>U23SA861Y</user>
    <text>huh, nvm that works in ellie</text>
  </message>
  <message>
    <ts>2017-06-23T15:08:53.193997</ts>
    <user>U23SA861Y</user>
    <text>stand corrected</text>
  </message>
  <message>
    <ts>2017-06-23T15:40:44.741641</ts>
    <user>U3LUC6SNS</user>
    <text>I posted the following in the `style-elements` channel, but it concerns a general Elm bug, so I am posting it here as well:

I made a small project that demonstrates the textarea bug.  See the README for details.  To run the project, do `git clone &lt;https://github.com/jxxcarlson/nanoedit&gt;`, bring up `elm-reactor`, and select `Main.elm`.  I'm very interested in finding a solution or workaround for this. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-23T15:43:22.784350</ts>
    <user>U5Y4ERBU0</user>
    <text>hello! I'm trying to use a guard with the code below, but the compiler tells me it can't find the "|=" or "=&amp;gt;" variables. Anyone know why?

```getValidationMessage : Model -&amp;gt; String
getValidationMessage { password, passwordAgain } 
  = password /= passwordAgain =&amp;gt; "Passwords don't match."
  |= "OK"```</text>
  </message>
  <message>
    <ts>2017-06-23T15:44:12.797697</ts>
    <user>U2FGMAQ5R</user>
    <text>Does anybody know how I can use a Set with a custom type? I'd like a collection that only contains unique entries but Set only works with primitives</text>
  </message>
  <message>
    <ts>2017-06-23T15:47:16.849239</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U5Y4ERBU0&gt; it sounds like you're trying to write Haskell. Elm doesn't have "guards". :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-23T15:47:43.856367</ts>
    <user>U0LPMPL2U</user>
    <text>You can write this as an if/else statement or a case statement</text>
  </message>
  <message>
    <ts>2017-06-23T15:47:58.860566</ts>
    <user>U5Y4ERBU0</user>
    <text>i tried to emulate this &lt;http://package.elm-lang.org/packages/Fresheyeball/elm-guards/1.0.1/Guards&gt;</text>
  </message>
  <message>
    <ts>2017-06-23T15:48:05.862543</ts>
    <user>U5Y4ERBU0</user>
    <text>do I need to import something?</text>
  </message>
  <message>
    <ts>2017-06-23T15:48:17.866080</ts>
    <user>U0LPMPL2U</user>
    <text>Are you trying to use that package?</text>
  </message>
  <message>
    <ts>2017-06-23T15:48:25.868072</ts>
    <user>U5Y4ERBU0</user>
    <text>&lt;http://package.elm-lang.org/packages/Fresheyeball/elm-guards/latest&gt;</text>
  </message>
  <message>
    <ts>2017-06-23T15:48:30.869626</ts>
    <user>U5Y4ERBU0</user>
    <text>i guess so</text>
  </message>
  <message>
    <ts>2017-06-23T15:49:18.882886</ts>
    <user>U0LPMPL2U</user>
    <text>if so, you will need to install the package: `elm package install Fresheyeball/elm-guards` on the command line</text>
  </message>
  <message>
    <ts>2017-06-23T15:49:29.885922</ts>
    <user>U5Y4ERBU0</user>
    <text>oh got it working, import Guards</text>
  </message>
  <message>
    <ts>2017-06-23T15:49:33.887201</ts>
    <user>U5Y4ERBU0</user>
    <text>ty</text>
  </message>
  <message>
    <ts>2017-06-23T15:50:37.905721</ts>
    <user>U23SA861Y</user>
    <text>to be fair, a whole import to remove what is like 2 keystrokes is probably not worth it</text>
  </message>
  <message>
    <ts>2017-06-23T15:58:46.045785</ts>
    <user>U3LUC6SNS</user>
    <text>The bug concerns the behavior of `textarea`.  If one types fast, the cursor jumps around, messing up your edits.  This is cured by using `defaultValue` instead of `value` to present text to the eye of the user.  However, this reveals another bug, which is that the textarea does not update when it receives input programmatically.  

I the example, I use the `style-elements` package and its `textArea`.  It displays the same behavior as mentioned above for a textarea field using `defaultValue`.</text>
  </message>
  <message>
    <ts>2017-06-23T16:06:30.179764</ts>
    <user>U0JFXEUCT</user>
    <text>&lt;@U3LUC6SNS&gt; In your example, I think you need to adjust usage of `keyed` to match the comment at the end of this chain: &lt;https://github.com/elm-lang/html/issues/105&gt;</text>
  </message>
  <message>
    <ts>2017-06-23T16:07:47.201153</ts>
    <user>U0JFXEUCT</user>
    <text>Given in the thread
```
Keyed.node "div"
        []
        [ ( toString counter
          , input
                [ type_ "text"
                , onInput HandleInput
                , defaultValue message
                ]
                []
          )
        ]
```

In your code:

```
 Keyed.node "textarea"
        [ HA.id "editPane3"
        , HA.defaultValue model.current_document.content
        , HE.onInput InputContent
        ]
        [] 
```

You need the text area to be within the keyed node.</text>
  </message>
  <message>
    <ts>2017-06-23T16:14:22.310316</ts>
    <user>U2M73CM5F</user>
    <text>hello everyone, I hope you're all great. I would like to ask a general question about Elm ; I'm about to start learning and I'd like to know if I am doing the right choice (even though, considering how everyone trying Elm is in love with it, it must be the right choice at some point anyway :wink: ). So I have 2 questions, my first one is about learning Elm, and the other one is about what you can do once you are able to use it : first, what previous knowledge do you need to learn Elm ? I have an intermediate level in JS, HTML and CSS, and I'm going back to work after a year off so I might be a bit rusty. And then, once you are able to use Elm, what more do you need to learn, to be independant to build a web app? (When I say independant, I mean, by your own, you can build your app, back and front, of course you don't know everything and maybe you'll struggle and ask help on the way but you have the basic knowledge to do it, and to get the knowledge you miss on your way. Versus : some parts are totally obscure to you.) Is it like, what you will learn on your Elm way will teach you what you need to know ? Or do you need to add some back-end and database deep knowledge ?  Well, sorry for the long message and thank you very much for your answers :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-23T16:18:02.371007</ts>
    <user>U4JT89FGB</user>
    <text>Unfortunately at this time you can't use Elm on the backend, so if your application requires centralized data storage or business logic of some sort, you'll still need to handle that separately.</text>
  </message>
  <message>
    <ts>2017-06-23T16:19:57.402128</ts>
    <user>U2M73CM5F</user>
    <text>zgohr, and I've read some things about Elm using Node or compiling to Node or something with Node… it doesn't help?</text>
  </message>
  <message>
    <ts>2017-06-23T16:20:42.414441</ts>
    <user>U4JT89FGB</user>
    <text>I haven't looked into it so I'm not sure how viable it would be</text>
  </message>
  <message>
    <ts>2017-06-23T16:21:08.421783</ts>
    <user>U2M73CM5F</user>
    <text>ok - and so, in other words, what can you exactly do with elm ?</text>
  </message>
  <message>
    <ts>2017-06-23T16:22:20.441515</ts>
    <user>U4JT89FGB</user>
    <text>Build the front-end of web applications</text>
  </message>
  <message>
    <ts>2017-06-23T16:23:16.457221</ts>
    <user>U2M73CM5F</user>
    <text>ok, thank you</text>
  </message>
  <message>
    <ts>2017-06-23T16:23:58.468787</ts>
    <user>U4JT89FGB</user>
    <text>Very generally, it replaces the use of javascript and html</text>
  </message>
  <message>
    <ts>2017-06-23T16:24:11.472282</ts>
    <user>U2M73CM5F</user>
    <text>and what about the previous knowledge that you need to start ?</text>
  </message>
  <message>
    <ts>2017-06-23T16:24:16.473740</ts>
    <user>U2M73CM5F</user>
    <text>ok, I see</text>
  </message>
  <message>
    <ts>2017-06-23T16:24:29.477359</ts>
    <user>U0D4VR7BP</user>
    <text>&lt;@U2M73CM5F&gt;
as for the first question, about previous knowledge... knowing **some** programming language helps, although it's probably not necessary :slightly_smiling_face: today I've heard my friends from one startup say that when they hire somebody to work on their Elm codebase, in two to three weeks he is fully "caught up".</text>
  </message>
  <message>
    <ts>2017-06-23T16:24:32.478134</ts>
    <user>U2M73CM5F</user>
    <text>should I consider it a sort of "functional react ?"</text>
  </message>
  <message>
    <ts>2017-06-23T16:25:08.488139</ts>
    <user>U0D4VR7BP</user>
    <text>&lt;@U2M73CM5F&gt; Elm architecture maps very closely to React+Redux</text>
  </message>
  <message>
    <ts>2017-06-23T16:25:17.490477</ts>
    <user>U0D4VR7BP</user>
    <text>React = Elm's view
Redux = Elm's update+model</text>
  </message>
  <message>
    <ts>2017-06-23T16:25:32.494532</ts>
    <user>U2M73CM5F</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-06-23T16:25:48.499032</ts>
    <user>U2M73CM5F</user>
    <text>this is still a bit abstract to me but I think I get the idea</text>
  </message>
  <message>
    <ts>2017-06-23T16:26:17.506786</ts>
    <user>U2M73CM5F</user>
    <text>but the guy who fully caught up Elm after few weeks was basically a web dev from other languages, right ?</text>
  </message>
  <message>
    <ts>2017-06-23T16:26:24.508955</ts>
    <user>U0D4VR7BP</user>
    <text>yeah</text>
  </message>
  <message>
    <ts>2017-06-23T16:26:29.510175</ts>
    <user>U0D4VR7BP</user>
    <text>JS guy</text>
  </message>
  <message>
    <ts>2017-06-23T16:26:35.511681</ts>
    <user>U2M73CM5F</user>
    <text>ok yes</text>
  </message>
  <message>
    <ts>2017-06-23T16:26:53.517053</ts>
    <user>U2M73CM5F</user>
    <text>cause right now I'm not at that step, I'm just learning still</text>
  </message>
  <message>
    <ts>2017-06-23T16:28:11.538190</ts>
    <user>U2M73CM5F</user>
    <text>as I said, like intermediate JS - html - css level, but not more except many readings that give me some hint of the thing, but nothing like a real experience or a deep knowledge</text>
  </message>
  <message>
    <ts>2017-06-23T16:29:59.567349</ts>
    <user>U2M73CM5F</user>
    <text>and I'd like to become independant, so I'm wondering what's the best way to follow (or if it's still too far from me) - i don't intend to be a superstar dev, right now just understanding the whole web app process and being able to do "something" with it</text>
  </message>
  <message>
    <ts>2017-06-23T16:30:12.571218</ts>
    <user>U4JT89FGB</user>
    <text>wish i could answer you better, it's pretty hard to generalize about anything. I think it comes down to what your goals are with it</text>
  </message>
  <message>
    <ts>2017-06-23T16:30:45.580506</ts>
    <user>U4JT89FGB</user>
    <text>A lot of us come from a javascript background and the preference for Elm comes from the distaste for javascript</text>
  </message>
  <message>
    <ts>2017-06-23T16:31:02.585307</ts>
    <user>U2M73CM5F</user>
    <text>thank you &lt;@U4JT89FGB&gt;, yes sure i understand that it's hard to answer like this, thank you</text>
  </message>
  <message>
    <ts>2017-06-23T16:31:47.597825</ts>
    <user>U2M73CM5F</user>
    <text>oh, ok, well personally I like javascript very much basically, maybe there are some real world problems coming from it, but I didn't have to experience them yet</text>
  </message>
  <message>
    <ts>2017-06-23T16:33:09.620563</ts>
    <user>U2M73CM5F</user>
    <text>ok and I have just an easy question, what resources do you recommend to learn elm? the one provided on elm's website ?</text>
  </message>
  <message>
    <ts>2017-06-23T16:33:28.625801</ts>
    <user>U2M73CM5F</user>
    <text>(or maybe it's not such an easy question, i don't know)</text>
  </message>
  <message>
    <ts>2017-06-23T16:36:16.670759</ts>
    <user>U0D4VR7BP</user>
    <text>&lt;@U2M73CM5F&gt; personally I'd try to do some programming exercises in it (on Exercism or Project Euler or something similar), but there are tutorials: &lt;https://www.elm-tutorial.org/en/&gt; or &lt;https://guide.elm-lang.org/&gt; ... and I'm sure there are others :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-23T16:36:22.672551</ts>
    <user>U4JT89FGB</user>
    <text>See the resources at the bottom of this blog post -&amp;gt; &lt;https://medium.com/@birowsky/web-is-ready-for-you-on-line-elm-d3aa14dbf95&gt;</text>
  </message>
  <message>
    <ts>2017-06-23T16:36:54.680963</ts>
    <user>U2M73CM5F</user>
    <text>&lt;@U0D4VR7BP&gt; &lt;@U4JT89FGB&gt; thank you very much</text>
  </message>
  <message>
    <ts>2017-06-23T16:37:42.693817</ts>
    <user>U3LUC6SNS</user>
    <text>Thanks very much!  I'm looking into this now.</text>
  </message>
  <message>
    <ts>2017-06-23T16:38:00.698546</ts>
    <user>U17MNKY3H</user>
    <text>&lt;@U2M73CM5F&gt; I think the job pool will be much smaller for Elm unfortunately.</text>
  </message>
  <message>
    <ts>2017-06-23T16:39:11.717634</ts>
    <user>U17MNKY3H</user>
    <text>(Not sure if that's an important factor for you.)</text>
  </message>
  <message>
    <ts>2017-06-23T16:40:27.737665</ts>
    <user>U2M73CM5F</user>
    <text>&lt;@U17MNKY3H&gt;, you're right. I don't really intend to work full time in a company, but I'd like to be able to work as a freelancer. Well I guess the problem is the sae</text>
  </message>
  <message>
    <ts>2017-06-23T16:40:29.738069</ts>
    <user>U2M73CM5F</user>
    <text>same</text>
  </message>
  <message>
    <ts>2017-06-23T16:42:07.764489</ts>
    <user>U17MNKY3H</user>
    <text>I'd say it's worse for freelance work.</text>
  </message>
  <message>
    <ts>2017-06-23T16:42:19.767623</ts>
    <user>U2M73CM5F</user>
    <text>haha good</text>
  </message>
  <message>
    <ts>2017-06-23T16:42:22.768242</ts>
    <user>U17MNKY3H</user>
    <text>With permanent positions you can seek out companies that use Elm.</text>
  </message>
  <message>
    <ts>2017-06-23T16:42:28.769785</ts>
    <user>U2M73CM5F</user>
    <text>yes you're right</text>
  </message>
  <message>
    <ts>2017-06-23T16:42:38.772499</ts>
    <user>U2M73CM5F</user>
    <text>definitely right</text>
  </message>
  <message>
    <ts>2017-06-23T16:43:02.778908</ts>
    <user>U17MNKY3H</user>
    <text>And those that do will often advertise it since it's a tech that's easy to fall in love (or at least a slight infatuation) with  :wink: - so it makes them attractive workplaces.</text>
  </message>
  <message>
    <ts>2017-06-23T16:44:34.803121</ts>
    <user>U2M73CM5F</user>
    <text>ok yes</text>
  </message>
  <message>
    <ts>2017-06-23T16:45:58.826315</ts>
    <user>U17MNKY3H</user>
    <text>Hope that's more helpfull than preachy. :sweat_smile: :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-23T16:47:56.857196</ts>
    <user>U2M73CM5F</user>
    <text>&lt;@U17MNKY3H&gt;, yes, sure! :wink:</text>
  </message>
  <message>
    <ts>2017-06-23T16:48:00.858133</ts>
    <user>U2M73CM5F</user>
    <text>thank you</text>
  </message>
  <message>
    <ts>2017-06-23T16:52:51.933614</ts>
    <user>U4JT89FGB</user>
    <text>I have an interesting bug - basically a page with a form and submit (login) that upon success redirects to another page with another form. On the new form, the first two inputs contain the values that were in the first form. Elm's model is correct, those old form values aren't there.. The virtual dom seems to re-use the first page's inputs.</text>
  </message>
  <message>
    <ts>2017-06-23T16:58:52.027481</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U4JT89FGB&gt; Try using `Html.Keyed` and see if the problem goes away.</text>
  </message>
  <message>
    <ts>2017-06-23T16:59:01.030054</ts>
    <user>U4JT89FGB</user>
    <text>Not interesting - i guess common in virtual dom scenarios. was curious how to handle with elm</text>
  </message>
  <message>
    <ts>2017-06-23T16:59:48.042115</ts>
    <user>U48AEBJQ3</user>
    <text>Yes, the virtual dom has to guess a bit to make things faster, it doesn't always get it how we want it, so we need to give some extra information.</text>
  </message>
  <message>
    <ts>2017-06-23T16:59:59.045007</ts>
    <user>U17MNKY3H</user>
    <text>&lt;@U4JT89FGB&gt; how's your view code for the second page/screen look like?</text>
  </message>
  <message>
    <ts>2017-06-23T17:01:16.067161</ts>
    <user>U4JT89FGB</user>
    <text>ah, using a keyed node works. thanks &lt;@U48AEBJQ3&gt;</text>
  </message>
  <message>
    <ts>2017-06-23T17:31:16.479214</ts>
    <user>U2M73CM5F</user>
    <text>thank you for the kind answers everyone and have a nice evening!</text>
  </message>
  <message>
    <ts>2017-06-23T19:50:02.748504</ts>
    <user>U5W6LPGTE</user>
    <text>I'm having trouble understanding "multiple types" (I'm sure that's not the correct term).  E.g. "Program Never Model Msg", or "Cmd Msg", or "Http.Request value", or "Result Error value".  Could someone point me to an explanation of these "compound types"?</text>
  </message>
  <message>
    <ts>2017-06-23T19:50:58.754576</ts>
    <user>U5VD8S0HZ</user>
    <text>How would I do math operations on values greater than 2,147,483,647? Is there something in the core library that can handle this?</text>
  </message>
  <message>
    <ts>2017-06-23T19:52:17.762846</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U5VD8S0HZ&gt; Where did you get that number, by the way?</text>
  </message>
  <message>
    <ts>2017-06-23T19:53:02.767401</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U5VD8S0HZ&gt; In general, any language that compiles to Javascript will have an obnoxious time dealing with large integers, since Javascript doesn't have a native integer type. (Maybe things have changed since I last looked, though, due to webasm? I'm not sure)</text>
  </message>
  <message>
    <ts>2017-06-23T19:55:36.782610</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U5W6LPGTE&gt; these types are called Union Types or Algebraic Data Types</text>
  </message>
  <message>
    <ts>2017-06-23T19:55:42.783290</ts>
    <user>U23SA861Y</user>
    <text>depending on the community you're in</text>
  </message>
  <message>
    <ts>2017-06-23T19:56:38.788716</ts>
    <user>U5VD8S0HZ</user>
    <text>&lt;@U57KYFW67&gt; in my elm-repl:
```
&amp;gt; 2147483647
2147483647 : number
&amp;gt; 2147483648
-2147483648 : number
```</text>
  </message>
  <message>
    <ts>2017-06-23T19:56:38.788749</ts>
    <user>U5W6LPGTE</user>
    <text>&lt;@U23SA861Y&gt; There's nothing that looks like that at: &lt;https://guide.elm-lang.org/types/union_types.html&gt;…</text>
  </message>
  <message>
    <ts>2017-06-23T19:57:08.791775</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U23SA861Y&gt; &lt;@U5W6LPGTE&gt; I don't think those are union/algebraic types, though. At least the aspect &lt;@U5W6LPGTE&gt; seems to be asking about</text>
  </message>
  <message>
    <ts>2017-06-23T19:57:13.792244</ts>
    <user>U57KYFW67</user>
    <text>Those are all parametrized types</text>
  </message>
  <message>
    <ts>2017-06-23T19:57:42.795215</ts>
    <user>U23SA861Y</user>
    <text>the parameterization in part of the algebra of algebraic data types</text>
  </message>
  <message>
    <ts>2017-06-23T19:57:54.796306</ts>
    <user>U57KYFW67</user>
    <text>`Cmd Msg` means a command which, when it returns a response, has the "shape" of a `Msg`</text>
  </message>
  <message>
    <ts>2017-06-23T19:57:59.796767</ts>
    <user>U5W6LPGTE</user>
    <text>&lt;@U57KYFW67&gt; For example, where can I find the "definition" of "Program Never Model Msg"?</text>
  </message>
  <message>
    <ts>2017-06-23T19:58:23.799265</ts>
    <user>U57KYFW67</user>
    <text>You can kind of ignore the parameters when working in your code. For instance, just think of `Cmd Msg` as just.... a command.</text>
  </message>
  <message>
    <ts>2017-06-23T19:58:54.802151</ts>
    <user>U23SA861Y</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/latest/Platform&gt;</text>
  </message>
  <message>
    <ts>2017-06-23T19:59:04.803153</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U5W6LPGTE&gt; &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Platform#Program&gt; &amp;lt;-- this has the declaration. The definition is not available, though, since it is a primitive in the langauge</text>
  </message>
  <message>
    <ts>2017-06-23T19:59:52.807740</ts>
    <user>U57KYFW67</user>
    <text>for `Program Never Model Msg`, it means you want to create a program (basically a "main()") which has model type `Model`, message type `Msg`, and has no flags (`Never`)</text>
  </message>
  <message>
    <ts>2017-06-23T20:00:25.812580</ts>
    <user>U57KYFW67</user>
    <text>but again, you can safely ignore the parameters when you read it aloud to yourself and just think this is a "Program"</text>
  </message>
  <message>
    <ts>2017-06-23T20:00:36.814113</ts>
    <user>U5W6LPGTE</user>
    <text>Is there an explanation of this "concept" anywhere?</text>
  </message>
  <message>
    <ts>2017-06-23T20:01:26.819895</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U3SJEDR96&gt; Oh I see. Thanks. The problem I have is that I have a list of things I want to edit and when I switch the one I'm editing it doesn't update the `textarea`. I guess I'll find a way around it.</text>
  </message>
  <message>
    <ts>2017-06-23T20:01:37.820993</ts>
    <user>U23SA861Y</user>
    <text>read further down the page on the document</text>
  </message>
  <message>
    <ts>2017-06-23T20:01:43.821675</ts>
    <user>U23SA861Y</user>
    <text>the description is there</text>
  </message>
  <message>
    <ts>2017-06-23T20:01:54.822774</ts>
    <user>U57KYFW67</user>
    <text>The Elm docs won't have any good explanation of the idea. It's a very basic idea from functional programming. Your best bet would probably be to google "parametric type" or "parametrized type" and look for tutorials on Haskell</text>
  </message>
  <message>
    <ts>2017-06-23T20:02:15.824750</ts>
    <user>U23SA861Y</user>
    <text>it's in there on the union_types page</text>
  </message>
  <message>
    <ts>2017-06-23T20:02:41.827517</ts>
    <user>U57KYFW67</user>
    <text>(good explanation as in a thorough explanation. The docs will just kind of touch on the idea)</text>
  </message>
  <message>
    <ts>2017-06-23T20:02:57.829042</ts>
    <user>U23SA861Y</user>
    <text>you need to read to the bottom though</text>
  </message>
  <message>
    <ts>2017-06-23T20:02:57.829053</ts>
    <user>U5W6LPGTE</user>
    <text>There's nothing about "parameterized types" at &lt;https://guide.elm-lang.org/types/union_types.html&gt;</text>
  </message>
  <message>
    <ts>2017-06-23T20:03:15.830849</ts>
    <user>U23SA861Y</user>
    <text>it's under the heading "Generic Data Structures"</text>
  </message>
  <message>
    <ts>2017-06-23T20:03:37.833159</ts>
    <user>U57KYFW67</user>
    <text>Yeah. "Generic" type is another term (although less precise, imo). It's what Java calls the concept.</text>
  </message>
  <message>
    <ts>2017-06-23T20:03:50.834302</ts>
    <user>U57KYFW67</user>
    <text>a more basic example would like `List Int`</text>
  </message>
  <message>
    <ts>2017-06-23T20:04:03.835617</ts>
    <user>U57KYFW67</user>
    <text>It's a list type... a list of what, though? A list of integers.</text>
  </message>
  <message>
    <ts>2017-06-23T20:04:36.838782</ts>
    <user>U5W6LPGTE</user>
    <text>I understand "List Int"… a container holding ints.  Some of the other ones are still baffling to me.</text>
  </message>
  <message>
    <ts>2017-06-23T20:04:40.839095</ts>
    <user>U57KYFW67</user>
    <text>`Program Never Model Msg` is a program type.... "a program of what, though?" (meaning what is the associated type for its flags, model, and messages?)</text>
  </message>
  <message>
    <ts>2017-06-23T20:05:11.842072</ts>
    <user>U57KYFW67</user>
    <text>the list `[]` has type `List Int` but it doesn't contain any integers :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-23T20:05:13.842271</ts>
    <user>U23SA861Y</user>
    <text>if you are a C++ guy maybe you would recognize that as `Program&amp;lt;Never,Model,Msg&amp;gt;`</text>
  </message>
  <message>
    <ts>2017-06-23T20:05:55.846658</ts>
    <user>U5W6LPGTE</user>
    <text>Is it hierarchical or combinatorial?  It sounds like it's maybe the latter… that the order doesn't matter?  In other words, would "Program Never Model Msg" be the same as "Program Model Msg Never"?</text>
  </message>
  <message>
    <ts>2017-06-23T20:06:05.847751</ts>
    <user>U57KYFW67</user>
    <text>They are positional parameters</text>
  </message>
  <message>
    <ts>2017-06-23T20:06:13.848480</ts>
    <user>U23SA861Y</user>
    <text>no, the position matters</text>
  </message>
  <message>
    <ts>2017-06-23T20:06:23.849362</ts>
    <user>U5W6LPGTE</user>
    <text>I'm more of Python, C and Go guy.</text>
  </message>
  <message>
    <ts>2017-06-23T20:06:23.849431</ts>
    <user>U57KYFW67</user>
    <text>Just like `foo(x, y)` is not the same as `foo(y, x)` in C</text>
  </message>
  <message>
    <ts>2017-06-23T20:06:30.850044</ts>
    <user>U57KYFW67</user>
    <text>(or Python)</text>
  </message>
  <message>
    <ts>2017-06-23T20:06:33.850376</ts>
    <user>U5W6LPGTE</user>
    <text>Hmmm… ok…</text>
  </message>
  <message>
    <ts>2017-06-23T20:06:46.851569</ts>
    <user>U23SA861Y</user>
    <text>hmm, one has no type, one has weak typing and one doesn't have generics</text>
  </message>
  <message>
    <ts>2017-06-23T20:06:49.851805</ts>
    <user>U23SA861Y</user>
    <text>crap</text>
  </message>
  <message>
    <ts>2017-06-23T20:06:56.852507</ts>
    <user>U57KYFW67</user>
    <text>The first position is the flags parameter. `Never` is a special type that signals there are no flags</text>
  </message>
  <message>
    <ts>2017-06-23T20:07:06.853448</ts>
    <user>U5W6LPGTE</user>
    <text>But that sounds like you're straying into "Program -&amp;gt; Never -&amp;gt; etc.".</text>
  </message>
  <message>
    <ts>2017-06-23T20:07:07.853486</ts>
    <user>U57KYFW67</user>
    <text>The second is the model, the third is the message, ofc.</text>
  </message>
  <message>
    <ts>2017-06-23T20:07:52.857263</ts>
    <user>U57KYFW67</user>
    <text>I would say, don't fret too much over them. You'll inevitably run into situations where you need them. And in time, it will just kind of click and make sense.</text>
  </message>
  <message>
    <ts>2017-06-23T20:07:59.857940</ts>
    <user>U5W6LPGTE</user>
    <text>I'll keep at it.  It's confusing to me…</text>
  </message>
  <message>
    <ts>2017-06-23T20:08:22.859836</ts>
    <user>U57KYFW67</user>
    <text>the documentation is a double-edged sword, and while sometimes the types are very helpful, sometimes an example is more helpful, and it just depends on the situation.</text>
  </message>
  <message>
    <ts>2017-06-23T20:08:23.859920</ts>
    <user>U5W6LPGTE</user>
    <text>I like the language a lot so far… but that one's throwing me I have to say.</text>
  </message>
  <message>
    <ts>2017-06-23T20:08:39.861271</ts>
    <user>U5W6LPGTE</user>
    <text>Thanks all.</text>
  </message>
  <message>
    <ts>2017-06-23T20:08:44.861709</ts>
    <user>U23SA861Y</user>
    <text>make sure you read through the entire page</text>
  </message>
  <message>
    <ts>2017-06-23T20:08:51.862274</ts>
    <user>U57KYFW67</user>
    <text>like &lt;@U23SA861Y&gt; said, your language background carefully avoids any language that uses this notion ^^</text>
  </message>
  <message>
    <ts>2017-06-23T20:09:12.864017</ts>
    <user>U57KYFW67</user>
    <text>But it appears in C++, Java, Haskell, and Rust, etc.</text>
  </message>
  <message>
    <ts>2017-06-23T20:09:33.865801</ts>
    <user>U5W6LPGTE</user>
    <text>I should know more Haskell.  No relation as far as I know.</text>
  </message>
  <message>
    <ts>2017-06-23T20:10:52.872906</ts>
    <user>U23SA861Y</user>
    <text>Honestly elm is strictly easier than haskell. It's a gentle entry into FP but there are going to be concepts that are foreign to you.</text>
  </message>
  <message>
    <ts>2017-06-23T20:11:02.873834</ts>
    <user>U57KYFW67</user>
    <text>nod</text>
  </message>
  <message>
    <ts>2017-06-23T20:11:41.877079</ts>
    <user>U5W6LPGTE</user>
    <text>FYI, looking up "parameterized types", found this: &lt;https://stackoverflow.com/questions/38558964/understanding-generic-union-types-in-elm&gt;.</text>
  </message>
  <message>
    <ts>2017-06-23T20:14:33.891792</ts>
    <user>U23SA861Y</user>
    <text>still read through the page to the bottom as it does go over it</text>
  </message>
  <message>
    <ts>2017-06-23T20:15:02.894364</ts>
    <user>U5W6LPGTE</user>
    <text>Yep.  Thanks &lt;@U23SA861Y&gt;!</text>
  </message>
  <message>
    <ts>2017-06-23T20:26:51.953540</ts>
    <user>U46JV6X3K</user>
    <text>Can anyone help me find an example of working with Task values? I'd like to use Window.width in an update calculation. The Task section of Elm guide is empty.</text>
  </message>
  <message>
    <ts>2017-06-23T20:30:04.968573</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U3SJEDR96&gt; Is there a specific way to force refresh (specifically when the `textarea` is repurposed and in no way should retain the same information)?</text>
  </message>
  <message>
    <ts>2017-06-23T20:32:08.978787</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U46JV6X3K&gt; so `Window.width` is a task which you use `Task.perform` on to get a `Cmd msg` which you return from update and later receive the message you requested containing the width</text>
  </message>
  <message>
    <ts>2017-06-23T20:33:11.983721</ts>
    <user>U23SA861Y</user>
    <text>you can also subscribe to `Window.resizes` and you will receive a message every time the windows width or height changes</text>
  </message>
  <message>
    <ts>2017-06-23T20:34:05.987769</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U59AF21LJ&gt; Html.keyed is the thing you want I believe</text>
  </message>
  <message>
    <ts>2017-06-23T20:46:49.044670</ts>
    <user>U46JV6X3K</user>
    <text>&lt;@U23SA861Y&gt; gotcha. In this case I'm trying to do (Window.width - Mouse.Position.x). In order to get the messages at the same time, do I need to batch them?</text>
  </message>
  <message>
    <ts>2017-06-23T20:51:56.066685</ts>
    <user>U23SA861Y</user>
    <text>You can chain with `andthen`</text>
  </message>
  <message>
    <ts>2017-06-23T20:59:43.099073</ts>
    <user>U23SA861Y</user>
    <text>In essence you construct a task which sends you that difference.</text>
  </message>
  <message>
    <ts>2017-06-24T00:58:23.852542</ts>
    <user>U4E8RTDPF</user>
    <text>```
&amp;gt; (12, 32)
(12,32) : ( number, number1 )
```</text>
  </message>
  <message>
    <ts>2017-06-24T00:58:47.853438</ts>
    <user>U4E8RTDPF</user>
    <text>why does type annotation says `number` and `number1` ?</text>
  </message>
  <message>
    <ts>2017-06-24T01:01:01.860340</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U4E8RTDPF&gt; Because 12 could be an `Int` or a `Float`, but since you haven't used any functions on it which force it one way or the other, so it's ambiguous.</text>
  </message>
  <message>
    <ts>2017-06-24T01:01:29.861455</ts>
    <user>U4E8RTDPF</user>
    <text>&lt;@U48AEBJQ3&gt; yes I know that, I'm just curious about number1</text>
  </message>
  <message>
    <ts>2017-06-24T01:01:32.861571</ts>
    <user>U48AEBJQ3</user>
    <text>32 is also a `number`, but it doesn't need to be the same as what 12 is.</text>
  </message>
  <message>
    <ts>2017-06-24T01:01:39.861795</ts>
    <user>U4E8RTDPF</user>
    <text>ah, I see</text>
  </message>
  <message>
    <ts>2017-06-24T01:01:55.862397</ts>
    <user>U4E8RTDPF</user>
    <text>makes sense</text>
  </message>
  <message>
    <ts>2017-06-24T04:21:23.356393</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U23SA861Y&gt; Oh I see, I completely overlooked this module. I guess I should indeed have a keyed form for each of my editables. I'm not risking any performance issue with a large number of id am I?</text>
  </message>
  <message>
    <ts>2017-06-24T04:25:09.365700</ts>
    <user>U59AF21LJ</user>
    <text>&lt;@U23SA861Y&gt; I'm actually not sure because I want only want at a time, should I still use a Keyed container with only one `form` as it child?</text>
  </message>
  <message>
    <ts>2017-06-24T04:25:15.365932</ts>
    <user>U59AF21LJ</user>
    <text>Thanks.</text>
  </message>
  <message>
    <ts>2017-06-24T04:43:09.412107</ts>
    <user>U59AF21LJ</user>
    <text>Anyway it works with only one element even though it looks a bit overkill thanks.</text>
  </message>
  <message>
    <ts>2017-06-24T05:53:41.596128</ts>
    <user>U3YDBDP4Z</user>
    <text>Does anyone know why using `Elm.Main.embed` works but `Elm.Main.fullscreen` gives me the following error,
"Oops! Something went wrong when starting your Elm program.
The `Main` module does not need flags.
Initialize it with no arguments and you should be all set!"</text>
  </message>
  <message>
    <ts>2017-06-24T05:54:02.596986</ts>
    <user>U3YDBDP4Z</user>
    <text>I'm not using program with flags</text>
  </message>
  <message>
    <ts>2017-06-24T06:04:03.624283</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U3YDBDP4Z&gt; hmm. could you show the entire line in question (from your index.js, I assume)?</text>
  </message>
  <message>
    <ts>2017-06-24T06:10:16.641228</ts>
    <user>U3YDBDP4Z</user>
    <text>```
var Elm = require('./Main.elm')
var mount = document.getElementById('root')
var app = Elm.Main.fullscreen(mount)
```</text>
  </message>
  <message>
    <ts>2017-06-24T06:19:59.668107</ts>
    <user>U1AN4JRFV</user>
    <text>that indeed looks correct (besides the missing `;`, but that's just me, I guess). And do you have any ports that send garbage?</text>
  </message>
  <message>
    <ts>2017-06-24T06:22:35.675258</ts>
    <user>U3YDBDP4Z</user>
    <text>Not using ports</text>
  </message>
  <message>
    <ts>2017-06-24T06:22:55.676058</ts>
    <user>U3YDBDP4Z</user>
    <text>Just setting up an application</text>
  </message>
  <message>
    <ts>2017-06-24T06:26:07.685076</ts>
    <user>U1AN4JRFV</user>
    <text>hard to remote debug. as a workaround, you could use a tool llike create-elm-app.</text>
  </message>
  <message>
    <ts>2017-06-24T06:29:32.693470</ts>
    <user>U3LUC6SNS</user>
    <text>I've been trying to work around the jumping cursor bug as it appears in my context and am having a devil of a time with it.  I've posted an Ellie, &lt;https://ellie-app.com/3yQr7JP82BPa1/7&gt;, which isolates and illustrates the problem.  I'd be most grateful if anyone could set me straight on this.

*Please note* that in the Ellie, the cursor does not jump.  That bad behavior of `textarea` is somehow corrected by the `style-elements` package.  However, a new bug is introduced: once a textarea is edited, it can no longer be updated programmatically.  In the Ellie, you see this when you try to switch documents.

*Added note.* The standard way of avoiding the Jumping Cursor bug is to use `defaultValue` instead of `value`. If you do this, then you see exactly the behavior that you see in the Ellie: after editing the text field, it becomes unresponsive to changes to its value that occur programmatically.</text>
  </message>
  <message>
    <ts>2017-06-24T06:37:46.714891</ts>
    <user>U3LUC6SNS</user>
    <text>In Ellie: TextArea Bug, I am using the style-elements package</text>
  </message>
  <message>
    <ts>2017-06-24T06:57:19.765783</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U3YDBDP4Z&gt;: try `fullscreen` without anything. since its fullscreen, it doesnt need a mount node</text>
  </message>
  <message>
    <ts>2017-06-24T06:58:24.768751</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U3LUC6SNS&gt; nothing jumps for me. how to reproduce?</text>
  </message>
  <message>
    <ts>2017-06-24T07:02:12.779838</ts>
    <user>U1AN4JRFV</user>
    <text>oh. thats not lorem impsum :slightly_smiling_face: still, no jumping.</text>
  </message>
  <message>
    <ts>2017-06-24T07:33:55.865654</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U1AN4JRFV&gt; I did not explain very well. The `style-element` version  of textarea squashes the jumping cursor bug. However, it introduces a new bug: if you edit the yellow text, then change to the other document, you will notice that the yellow text field does not update with the text of the other document.  

To kill the *new* bug, one is supposed to use `Html.Keyed`, as demonstrated in the `renderInput2` version.  However, something is wrong there, because the textfield becomes totally unresponsive.  Edit lines 95-96 to see the difference.

Sorry for the confusion.</text>
  </message>
  <message>
    <ts>2017-06-24T07:36:31.872054</ts>
    <user>U3LUC6SNS</user>
    <text>Please note that I corrected my explanation above</text>
  </message>
  <message>
    <ts>2017-06-24T07:39:14.878684</ts>
    <user>U3LUC6SNS</user>
    <text>It should be called *TextArea Bug* as in the Ellie</text>
  </message>
  <message>
    <ts>2017-06-24T09:11:43.148786</ts>
    <user>U5QPUBDQR</user>
    <text>Hi I'm having trouble with a POST request. Can somebody please have a look?</text>
  </message>
  <message>
    <ts>2017-06-24T09:11:47.149041</ts>
    <user>U5QPUBDQR</user>
    <text>My code is:</text>
  </message>
  <message>
    <ts>2017-06-24T09:11:49.149120</ts>
    <user>U5QPUBDQR</user>
    <text>persistVideo: Caption -&amp;gt; Http.Request String
persistVideo caption =
    let
        url = "localhost:9024"
        data = encodeCaption caption |&amp;gt; Http.jsonBody
    in
        &lt;http://Http.post|Http.post&gt; url data

encodeCaption: Caption -&amp;gt; Encode.Value
encodeCaption caption =
    Encode.object 
        [("ident", Encode.string caption.ident)
        ,("status", Encode.string caption.status)
        ,("phrase", Encode.string caption.phrase)
        ,("video", Encode.string caption.video)
        ]</text>
  </message>
  <message>
    <ts>2017-06-24T09:12:08.150334</ts>
    <user>U5QPUBDQR</user>
    <text>The error message is</text>
  </message>
  <message>
    <ts>2017-06-24T09:12:26.151194</ts>
    <user>U5QPUBDQR</user>
    <text>_The definition of `persistVideo` does not match its type annotation.

142| persistVideo: Caption -&amp;gt; Http.Request String
143| persistVideo caption =
144|&amp;gt;    let
145|&amp;gt;        url = "localhost:9024"
146|&amp;gt;        data =  Http.jsonBody &amp;lt;| encodeCaption caption
147|&amp;gt;    in
148|&amp;gt;        &lt;http://Http.post|Http.post&gt; url data

The type annotation for `persistVideo` says it always returns:

    Http.Request String

But the returned value (shown above) is a:

    Decoder String -&amp;gt; Http.Request String
_</text>
  </message>
  <message>
    <ts>2017-06-24T09:12:56.152754</ts>
    <user>U5QPUBDQR</user>
    <text>What's wrong here???</text>
  </message>
  <message>
    <ts>2017-06-24T09:14:18.156972</ts>
    <user>U5QPUBDQR</user>
    <text>Shouldn't data be just the Http body?</text>
  </message>
  <message>
    <ts>2017-06-24T09:15:07.159465</ts>
    <user>U48AEBJQ3</user>
    <text>`&lt;http://Http.post|Http.post&gt;` takes three arguments. You haven't handed it a decoder to handle the server response.</text>
  </message>
  <message>
    <ts>2017-06-24T09:16:54.164782</ts>
    <user>U5QPUBDQR</user>
    <text>&lt;@U48AEBJQ3&gt;, yes I wanted to just disregard for now, but we can't do that ??</text>
  </message>
  <message>
    <ts>2017-06-24T09:17:35.166822</ts>
    <user>U48AEBJQ3</user>
    <text>I think you could hand it a `Json.Decode.fail "ignoring response"`, but I haven't tried it before.</text>
  </message>
  <message>
    <ts>2017-06-24T09:17:57.167970</ts>
    <user>U5QPUBDQR</user>
    <text>I'll add one</text>
  </message>
  <message>
    <ts>2017-06-24T09:20:33.176030</ts>
    <user>U5QPUBDQR</user>
    <text>Yep, that worked :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-24T09:20:44.176697</ts>
    <user>U5QPUBDQR</user>
    <text>The error message threw me off there</text>
  </message>
  <message>
    <ts>2017-06-24T09:20:58.177433</ts>
    <user>U5QPUBDQR</user>
    <text>&lt;@U48AEBJQ3&gt; thx</text>
  </message>
  <message>
    <ts>2017-06-24T09:28:23.200421</ts>
    <user>U5QPUBDQR</user>
    <text>Can I ask another more general question?</text>
  </message>
  <message>
    <ts>2017-06-24T09:28:30.200741</ts>
    <user>U48AEBJQ3</user>
    <text>No, this is no place for questions.</text>
  </message>
  <message>
    <ts>2017-06-24T09:28:53.201965</ts>
    <user>U5QPUBDQR</user>
    <text>How do I do two (or more) things in 1 function?</text>
  </message>
  <message>
    <ts>2017-06-24T09:29:11.202812</ts>
    <user>U5QPUBDQR</user>
    <text>even in this place of no-questions</text>
  </message>
  <message>
    <ts>2017-06-24T09:29:16.203023</ts>
    <user>U5QPUBDQR</user>
    <text>;-0</text>
  </message>
  <message>
    <ts>2017-06-24T09:30:03.205292</ts>
    <user>U5QPUBDQR</user>
    <text>e.g. in a funtion: fire off a ajax call AND separately update a List ?</text>
  </message>
  <message>
    <ts>2017-06-24T09:30:30.207057</ts>
    <user>U5QPUBDQR</user>
    <text>it seems functions are always limited to 1 line of code</text>
  </message>
  <message>
    <ts>2017-06-24T09:32:24.213310</ts>
    <user>U48AEBJQ3</user>
    <text>A function can't produce side-effects, so it can't make server requests, get random numbers, produce the current time, etc. A function can only produce outputs based on some inputs. The only part of a function that matters is the expression at the end.</text>
  </message>
  <message>
    <ts>2017-06-24T09:33:39.217203</ts>
    <user>U48AEBJQ3</user>
    <text>If you want, you can use a `let` expression to break up making your function into multiple steps, but it doesn't really change much.</text>
  </message>
  <message>
    <ts>2017-06-24T09:33:55.218013</ts>
    <user>U5QPUBDQR</user>
    <text>hmmm i've seen that, yes.</text>
  </message>
  <message>
    <ts>2017-06-24T09:34:00.218247</ts>
    <user>U5QPUBDQR</user>
    <text>example:</text>
  </message>
  <message>
    <ts>2017-06-24T09:34:10.218730</ts>
    <user>U5QPUBDQR</user>
    <text>addVideo: Model -&amp;gt; Caption -&amp;gt; (Model, Cmd Msg)
addVideo model caption =
    let
        -- Ajax call to persist data
        persistVideo caption
        
        -- Update the entry's video and status
        updateVideo entry =
            if entry.ident == caption.ident then
                { entry | video = caption.video, status = "video" }
            else
                entry
    in
        ({ model | captions = List.map updateVideo model.captions, debug = "hasRecorded" }, Cmd.none)</text>
  </message>
  <message>
    <ts>2017-06-24T09:34:28.219681</ts>
    <user>U5QPUBDQR</user>
    <text>This doesnt work, ie wont compile</text>
  </message>
  <message>
    <ts>2017-06-24T09:34:52.220786</ts>
    <user>U5QPUBDQR</user>
    <text>so how do I get around this????</text>
  </message>
  <message>
    <ts>2017-06-24T09:36:50.226910</ts>
    <user>U48AEBJQ3</user>
    <text>Your `persistVideo caption` doesn't actually make the request, it produces a data structure that you can pass out to the runtime which will execute it. Presuming that `persistVideo caption` is a `Cmd Msg`, you should use its value in place of the `Cmd.none` below.</text>
  </message>
  <message>
    <ts>2017-06-24T09:37:11.227960</ts>
    <user>U48AEBJQ3</user>
    <text>Either by assigning it to a name and using it, or replacing it directly.</text>
  </message>
  <message>
    <ts>2017-06-24T09:39:20.234304</ts>
    <user>U5QPUBDQR</user>
    <text>hmmmm…. persistVideo is:</text>
  </message>
  <message>
    <ts>2017-06-24T09:39:20.234344</ts>
    <user>U5QPUBDQR</user>
    <text>persistVideo: Caption -&amp;gt; Http.Request String
persistVideo caption =
    let
        url = "localhost:9024"
        data = encodeCaption caption |&amp;gt; Http.jsonBody
    in
        &lt;http://Http.post|Http.post&gt; url data persistSuccess</text>
  </message>
  <message>
    <ts>2017-06-24T09:41:00.239909</ts>
    <user>U48AEBJQ3</user>
    <text>Then you need to use &lt;http://package.elm-lang.org/packages/elm-lang/http/1.0.0/Http#send&gt; to turn it into a `Cmd Msg` which means you need to have a `Msg` constructor that can take a `Result Http.Error String`</text>
  </message>
  <message>
    <ts>2017-06-24T09:42:14.243943</ts>
    <user>U5QPUBDQR</user>
    <text>ahhh, Elm makes you think….</text>
  </message>
  <message>
    <ts>2017-06-24T09:43:05.246721</ts>
    <user>U55CZT6T1</user>
    <text>What are the common approaches to profiling Elm apps?</text>
  </message>
  <message>
    <ts>2017-06-24T09:44:28.251225</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U55CZT6T1&gt; Hmmm, not sure on that. Might be a better question for &lt;#C0CJ3SBBM|general&gt;</text>
  </message>
  <message>
    <ts>2017-06-24T09:45:41.255404</ts>
    <user>U55CZT6T1</user>
    <text>&lt;@U48AEBJQ3&gt;: Thanks!</text>
  </message>
  <message>
    <ts>2017-06-24T10:48:52.472454</ts>
    <user>U5ZR18C1L</user>
    <text>Good morning everyone! Really excited to join the chat and connect with all of you. I'm so intrigued by elm and can't wait to migrate an app I have to start using it.</text>
  </message>
  <message>
    <ts>2017-06-24T10:57:12.502295</ts>
    <user>U0JFGGZS6</user>
    <text>:wave:</text>
  </message>
  <message>
    <ts>2017-06-24T11:04:11.529979</ts>
    <user>U5ZR18C1L</user>
    <text>With all that being said is anyone free to give me some advice on making the switch? I threw together a really simple prototype application for my job (not as a web developer) and it's gotten some traction and i really want to get it production ready, so my first instinct was to look towards elm to get my front end operating as smoothly as possible.</text>
  </message>
  <message>
    <ts>2017-06-24T11:05:51.537093</ts>
    <user>U5ZR18C1L</user>
    <text>I've watched many talks and familiarized myself with the introduction to elm, but I still feel like I don't know where to start.</text>
  </message>
  <message>
    <ts>2017-06-24T11:20:01.588855</ts>
    <user>U20K0C2G4</user>
    <text>&lt;@U5ZR18C1L&gt; Hi</text>
  </message>
  <message>
    <ts>2017-06-24T11:21:04.593105</ts>
    <user>U20K0C2G4</user>
    <text>Elm is super compelling for writing front-ends</text>
  </message>
  <message>
    <ts>2017-06-24T11:22:33.598435</ts>
    <user>U20K0C2G4</user>
    <text>but you probably won't be able to salvage much from what you already have</text>
  </message>
  <message>
    <ts>2017-06-24T11:23:41.602783</ts>
    <user>U20K0C2G4</user>
    <text>so it basically have to start from the beginning</text>
  </message>
  <message>
    <ts>2017-06-24T11:24:03.604155</ts>
    <user>U20K0C2G4</user>
    <text>maybe start here</text>
  </message>
  <message>
    <ts>2017-06-24T11:24:03.604193</ts>
    <user>U20K0C2G4</user>
    <text>&lt;http://elm-lang.org/examples/hello-html&gt;</text>
  </message>
  <message>
    <ts>2017-06-24T11:32:58.638510</ts>
    <user>U0JFGGZS6</user>
    <text>is it a prototype app, or an app you want to migrate?</text>
  </message>
  <message>
    <ts>2017-06-24T11:37:49.656563</ts>
    <user>U353R9MA8</user>
    <text>Hi folks. Given the following data `data =
  [ ["Col1", "Col2", "Col3", "Col4"]
  , ["1", "2", "SC", "Proj1"]
  , ["4", "5", "RS", "Proj2"]
  , ["7", "8", "SP", "Proj1"]
  , ["10", "11", "PE", "Proj2"]
  ]
` how can I get the following: 'proj1FilteredData =
  [ ["Col1", "Col2",]
  , ["1", "2"]
  , ["7", "8"]
  ]
`. I'm ok doing it in JS but want to do it in Elm obviously. Any suggestion?</text>
  </message>
  <message>
    <ts>2017-06-24T11:43:01.676872</ts>
    <user>U0JFGGZS6</user>
    <text>What's the JS function signature?</text>
  </message>
  <message>
    <ts>2017-06-24T11:44:41.683152</ts>
    <user>U0JFGGZS6</user>
    <text>Are you asking about arbitrary filtering of rows and columns? Columns by name or position or both?  Or something more narrow than that?</text>
  </message>
  <message>
    <ts>2017-06-24T12:06:06.767286</ts>
    <user>U353R9MA8</user>
    <text>Sorry &lt;@U0JFGGZS6&gt;, got distracted with the kid. I would do this with ramdajs: `var header = head(data);
var project1FilteredData = compose(
  map(take(2)),
  prepend(header),
  filter(arr =&amp;gt; find(cell =&amp;gt; cell == "Proj1") (arr))
)(data);`</text>
  </message>
  <message>
    <ts>2017-06-24T12:09:03.778574</ts>
    <user>U0JFGGZS6</user>
    <text>Oh, ok. You can build pipelines like that, but given the data is quite untyped, you're in for dealing with a bit of `Maybe.map` and `Maybe.andThen` - ing.</text>
  </message>
  <message>
    <ts>2017-06-24T12:10:41.785153</ts>
    <user>U353R9MA8</user>
    <text>Data always come as List (List String)). That's what Google Sheets api sends back</text>
  </message>
  <message>
    <ts>2017-06-24T12:12:10.791079</ts>
    <user>U353R9MA8</user>
    <text>I think my problem is to deal with all those Maybe cases</text>
  </message>
  <message>
    <ts>2017-06-24T12:16:52.810350</ts>
    <user>U0JFGGZS6</user>
    <text>Well, you can take it a step at a time. Your first `head` is going to be a Maybe. But you could start composing a function assuming you have the headers, and later wrap that in a `Maybe.map`.</text>
  </message>
  <message>
    <ts>2017-06-24T12:20:04.822455</ts>
    <user>U0JFGGZS6</user>
    <text>If you do a lot of these though, you might consider parsing the data first into `List Project` or whatever your types are, then filtering/transforming without the failure cases.</text>
  </message>
  <message>
    <ts>2017-06-24T12:24:04.837307</ts>
    <user>U0JFGGZS6</user>
    <text>If you are interested, I wrote a little library that lets you declaratively parse data from roughly this format into your own types.</text>
  </message>
  <message>
    <ts>2017-06-24T12:24:30.838856</ts>
    <user>U353R9MA8</user>
    <text>I'll have a go with your first suggestion</text>
  </message>
  <message>
    <ts>2017-06-24T12:24:45.839752</ts>
    <user>U0JFGGZS6</user>
    <text>It's sitting in a pull request here &lt;https://github.com/periodic/elm-csv/issues/1&gt;  but I will probably spin it off into its own package</text>
  </message>
  <message>
    <ts>2017-06-24T12:25:54.843861</ts>
    <user>U353R9MA8</user>
    <text>ok.. I'll have a look at your library. Cheers</text>
  </message>
  <message>
    <ts>2017-06-24T12:30:25.860521</ts>
    <user>U5Z4MCVHB</user>
    <text>Hey I have a real basic type question</text>
  </message>
  <message>
    <ts>2017-06-24T12:31:39.865647</ts>
    <user>U5Z4MCVHB</user>
    <text>in the type definition `view : Model -&amp;gt; Html Msg` in the first example at &lt;https://github.com/evancz/elm-architecture-tutorial/blob/master/examples/01-button.elm&gt;</text>
  </message>
  <message>
    <ts>2017-06-24T12:32:01.867170</ts>
    <user>U5Z4MCVHB</user>
    <text>What does it mean to have two types next to each other like that</text>
  </message>
  <message>
    <ts>2017-06-24T12:32:13.867956</ts>
    <user>U5Z4MCVHB</user>
    <text>`Html Msg` in this case</text>
  </message>
  <message>
    <ts>2017-06-24T12:33:32.873114</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5Z4MCVHB&gt; Sometimes a type can have type parameters. A good example is `List`. A `List` holds values of a particular type, but it doesn't care what that type is. `List Int` means it is a list of integers. `Html Msg` refers to the types of events it can produce which call the `update` function.</text>
  </message>
  <message>
    <ts>2017-06-24T12:33:53.874411</ts>
    <user>U5Z4MCVHB</user>
    <text>ah that makes sense</text>
  </message>
  <message>
    <ts>2017-06-24T12:34:25.876341</ts>
    <user>U5Z4MCVHB</user>
    <text>so, roughly, it is a generic type? Like Java's `List&amp;lt;Integer&amp;gt;`?</text>
  </message>
  <message>
    <ts>2017-06-24T12:35:08.878967</ts>
    <user>U48AEBJQ3</user>
    <text>That's a good place to start, although there are some differences which you shouldn't trouble yourself with.</text>
  </message>
  <message>
    <ts>2017-06-24T12:36:01.882412</ts>
    <user>U5Z4MCVHB</user>
    <text>yeah it's a good way for me to wrap my head around it, thanks</text>
  </message>
  <message>
    <ts>2017-06-24T12:36:25.883815</ts>
    <user>U5Z4MCVHB</user>
    <text>Additionally, is there a larger elm example project to look at?</text>
  </message>
  <message>
    <ts>2017-06-24T12:36:54.885457</ts>
    <user>U5Z4MCVHB</user>
    <text>I'm curious about best practices moving beyond having a simple model /  simple view example</text>
  </message>
  <message>
    <ts>2017-06-24T12:37:05.886071</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;https://github.com/rtfeldman/elm-spa-example&gt;</text>
  </message>
  <message>
    <ts>2017-06-24T12:37:41.888108</ts>
    <user>U5Z4MCVHB</user>
    <text>Thanks I appreciate it</text>
  </message>
  <message>
    <ts>2017-06-24T12:37:47.888533</ts>
    <user>U5Z4MCVHB</user>
    <text>plenty to look at here</text>
  </message>
  <message>
    <ts>2017-06-24T12:39:24.894903</ts>
    <user>U48AEBJQ3</user>
    <text>But just as a bit of advice, don't try to break things up too soon. Elm makes it much easier and safer to refactor later, once you know more about how your program is evolving.</text>
  </message>
  <message>
    <ts>2017-06-24T12:40:07.897696</ts>
    <user>U5Z4MCVHB</user>
    <text>thats sounds like good advice</text>
  </message>
  <message>
    <ts>2017-06-24T12:41:17.902669</ts>
    <user>U5Z4MCVHB</user>
    <text>Do you tend to write tests for you elm code? or do people in the community lean towards really trusting the type system?</text>
  </message>
  <message>
    <ts>2017-06-24T12:43:27.910684</ts>
    <user>U48AEBJQ3</user>
    <text>It's roughly like you find anywhere. There are people who love tests and those who don't. The type system reduces the number of tests you need to write and fuzz-testing (also called 'quickcheck' or property-based testing) makes it easier to write one test which tries a good distribution of values.</text>
  </message>
  <message>
    <ts>2017-06-24T12:43:45.911693</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-community/elm-test/latest&gt;</text>
  </message>
  <message>
    <ts>2017-06-24T13:53:06.165270</ts>
    <user>U3LUC6SNS</user>
    <text>Re the TextArea bug and the related Jumping Cursor bug in the context of &lt;@U0JFXEUCT&gt; `style-elements`, the new release (3.2) of that package fixes things.  See &lt;https://github.com/jxxcarlson/nanoedit&gt;  .  I will update the Ellie later today.  But the weather is too beautiful for that now.</text>
  </message>
  <message>
    <ts>2017-06-24T13:56:12.175657</ts>
    <user>U1G51S63S</user>
    <text>hi folks! it is possible to accept records from ports?</text>
  </message>
  <message>
    <ts>2017-06-24T13:56:33.176981</ts>
    <user>U1G51S63S</user>
    <text>or I should accept raw values (via tuple for example) and construct record on Elm side?</text>
  </message>
  <message>
    <ts>2017-06-24T14:00:00.188862</ts>
    <user>U1G51S63S</user>
    <text>ah, just forgot about `-&amp;gt; msg` part</text>
  </message>
  <message>
    <ts>2017-06-24T14:01:41.196416</ts>
    <user>U48AEBJQ3</user>
    <text>A fairly simple record corresponding to a JS object can be automatically decoded. If you want something more, you can also accept a `Json.Decode.Value` and then manually apply a decoder to it to make whatever you want.</text>
  </message>
  <message>
    <ts>2017-06-24T14:02:37.199834</ts>
    <user>U48AEBJQ3</user>
    <text>The latter also has the benefit of not crashing if you pass something which doesn't decode properly.</text>
  </message>
  <message>
    <ts>2017-06-24T14:02:54.200825</ts>
    <user>U1G51S63S</user>
    <text>yeah, I think this record is pretty simple for decoding (geojson "Feature").</text>
  </message>
  <message>
    <ts>2017-06-24T14:04:17.205470</ts>
    <user>U1G51S63S</user>
    <text>btw should I manually handle `type` keys when iterop? it's a `type_` in Elm side and now I am map list of objects at js side to rename this key (to `type` as it should be)</text>
  </message>
  <message>
    <ts>2017-06-24T14:05:18.208949</ts>
    <user>U1G51S63S</user>
    <text>so it looks like this now: API using `type` key -&amp;gt; mapping it to `type_` in elm side -&amp;gt; passing to ports -&amp;gt; JS mapping list to `type` key again :smile:</text>
  </message>
  <message>
    <ts>2017-06-24T14:05:57.211218</ts>
    <user>U1G51S63S</user>
    <text>not a problem at all, just curious</text>
  </message>
  <message>
    <ts>2017-06-24T14:07:16.215766</ts>
    <user>U48AEBJQ3</user>
    <text>Yeah, I don't know how the automatic decoder handles `type`. I wouldn't be surprised either way, but would have to see it to find out. Honestly, I prefer manual decoding/encoding so I would probably just make decoders and encoders on the Elm side and use `Json.Decode.Value`s.</text>
  </message>
  <message>
    <ts>2017-06-24T14:55:01.377184</ts>
    <user>U2DF486HL</user>
    <text>Hi, anybody can help me with this.... what's wrong here?
Compiler complains with

-- NAMING ERROR -------Main.elm
Cannot find variable `Username`

221|             User (Username user) ""

== In my Data/User.elm ==

type alias User =
    { username : Username
    , email : String
    }
type Username
    = Username String

== In Main.elm ==

import Data.User exposing (User, Username)

(inside a "let .... in ..." I have the following)
        ....
        user =
            User (Username "User1") "&lt;mailto:user1@testmail.com|user1@testmail.com&gt;"</text>
  </message>
  <message>
    <ts>2017-06-24T15:01:35.399833</ts>
    <user>U0JFGGZS6</user>
    <text>&lt;@U2DF486HL&gt;  your `type Username = Username String`  is an opaque type.  This means that you can import the type (in Main for instance), but not the constructor (the `Username` on the "right side" of your definition).  It's private to the `Data.User` module.</text>
  </message>
  <message>
    <ts>2017-06-24T15:04:33.409398</ts>
    <user>U0JFGGZS6</user>
    <text>If you want to be able to construct a `Username` in `Main`, either:

- `type alias Username = String`,  or
- `module Data.User exposing ( Username(..) )`, or
- define a custom constructor in `Data.User`, e.g.  `username : String -&amp;gt; Username` .  &amp;lt;- This is your best bet in terms of 'hiding the implementation'.</text>
  </message>
  <message>
    <ts>2017-06-24T15:13:20.438747</ts>
    <user>U2DF486HL</user>
    <text>&lt;@U0JFGGZS6&gt; Great, thank you. Very useful you reply</text>
  </message>
  <message>
    <ts>2017-06-24T16:53:19.743908</ts>
    <user>U0MR1H1T9</user>
    <text>Hey there folks! Quick question: is there a nicer way to achieve this result? &lt;https://gist.github.com/r00k/834a1b5f8b5f9e8c53551b024a2b7070&gt;</text>
  </message>
  <message>
    <ts>2017-06-24T16:54:04.745969</ts>
    <user>U0MR1H1T9</user>
    <text>Specifically, I want to verify that all functions in a list return true when called with a given argument.</text>
  </message>
  <message>
    <ts>2017-06-24T16:57:21.756078</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U0MR1H1T9&gt; And you want to keep the explicit list I take it, so that you can add to it later?</text>
  </message>
  <message>
    <ts>2017-06-24T16:59:27.762201</ts>
    <user>U57KYFW67</user>
    <text>Isn't that exactly what `List.all` does?</text>
  </message>
  <message>
    <ts>2017-06-24T17:10:23.795251</ts>
    <user>U0MR1H1T9</user>
    <text>Yep and yep :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-24T17:10:28.795531</ts>
    <user>U0MR1H1T9</user>
    <text>Just wanted to get a second set of eyes.-</text>
  </message>
  <message>
    <ts>2017-06-24T17:11:58.800196</ts>
    <user>U0JL9RPC4</user>
    <text>hey o/ `renderPart : (Int -&amp;gt; Bool -&amp;gt; NumberDisplay -&amp;gt; String) -&amp;gt; Int -&amp;gt; Int -&amp;gt; List Int -&amp;gt; Html Msg`</text>
  </message>
  <message>
    <ts>2017-06-24T17:12:33.801856</ts>
    <user>U0JL9RPC4</user>
    <text>I'd like to know if I can define somehow a type for my first function argument type (which is obviously a function)</text>
  </message>
  <message>
    <ts>2017-06-24T17:18:21.818904</ts>
    <user>U0JL9RPC4</user>
    <text>a sort of a function signature shortcut, which would allow me to write `renderPart : Renderer -&amp;gt; Int -&amp;gt; Int -&amp;gt; List Int -&amp;gt; Html Msg`</text>
  </message>
  <message>
    <ts>2017-06-24T17:21:35.827889</ts>
    <user>U0JL9RPC4</user>
    <text>wow that thing works! `type alias R = Int -&amp;gt; Bool -&amp;gt; NumberDisplay -&amp;gt; String`</text>
  </message>
  <message>
    <ts>2017-06-24T17:22:03.829226</ts>
    <user>U0JL9RPC4</user>
    <text>I had no idea</text>
  </message>
  <message>
    <ts>2017-06-24T17:25:26.838440</ts>
    <user>U0JL9RPC4</user>
    <text>hmm I find no doc about functions annotation alias types</text>
  </message>
  <message>
    <ts>2017-06-24T17:29:44.851106</ts>
    <user>U5HM74BD0</user>
    <text>Anyone know of a good dialog package for Elm? I'd rather not use html's native alert type of dialog widget for input if I can help it.</text>
  </message>
  <message>
    <ts>2017-06-24T17:39:35.878519</ts>
    <user>U2SR9DL7Q</user>
    <text>hello all... is it fair to assume this is a 'there are no stupid questions' type of room? i have a very very nooby question (but i couldnt find the answer in the FAQ)</text>
  </message>
  <message>
    <ts>2017-06-24T17:40:34.881267</ts>
    <user>U0JL9RPC4</user>
    <text>totally fair, don't be shy :smiley:</text>
  </message>
  <message>
    <ts>2017-06-24T17:41:28.883818</ts>
    <user>U2SR9DL7Q</user>
    <text>thanks. :slightly_smiling_face: i'm finally diving deep into elm (i come from a python background with a little C++). I love it... functional programming has that feels rightness about it.</text>
  </message>
  <message>
    <ts>2017-06-24T17:41:48.884615</ts>
    <user>U57KYFW67</user>
    <text>That's not technically a question, but the answer is yes :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-06-24T17:42:19.886207</ts>
    <user>U57KYFW67</user>
    <text>Functional programming is the Right Way to do lots of things. But it's very different from C++, so ask away.</text>
  </message>
  <message>
    <ts>2017-06-24T17:43:09.888292</ts>
    <user>U2SR9DL7Q</user>
    <text>i'm making a personal website, and using elm-mdl... but i'm new to serious web dev. i notice that the mdl visuals dont render when i'm working offline. i'm assuming that the library is grabbing the fancy stuff from somewhere, but is there any way i can keep whatever it's trying to access locally?</text>
  </message>
  <message>
    <ts>2017-06-24T17:44:41.892297</ts>
    <user>U0JL9RPC4</user>
    <text>ouch, that doesn't sound so newbish to me :smiley:</text>
  </message>
  <message>
    <ts>2017-06-24T17:45:02.893295</ts>
    <user>U2SR9DL7Q</user>
    <text>everything compiles, and my static html objects will display (text and such), but the actual styles are ignored unless i have an active internet connection. so elm-mdl doesnt keep those on hand. but how would i get it?</text>
  </message>
  <message>
    <ts>2017-06-24T17:46:29.897615</ts>
    <user>U0JL9RPC4</user>
    <text>I don't know the answer but maybe you can give a try on &lt;#C12KMAYJX|elm-mdl&gt;</text>
  </message>
  <message>
    <ts>2017-06-24T17:46:47.898404</ts>
    <user>U2SR9DL7Q</user>
    <text>perhaps it isn't... but i was advised to avoid writing my own css if i'm new to front  end development.</text>
  </message>
  <message>
    <ts>2017-06-24T17:47:45.901486</ts>
    <user>U0JL9RPC4</user>
    <text>that's maybe du to an external reference of a .css file in your `index.html` file?</text>
  </message>
  <message>
    <ts>2017-06-24T17:47:49.901685</ts>
    <user>U57KYFW67</user>
    <text>That's an odd piece of advise. I would say you want to know how the CSS works if you're new. Although maybe if you're working on an existing project, they'd rather have you use a higher level tool, since raw CSS gets to be kind of a mess</text>
  </message>
  <message>
    <ts>2017-06-24T17:49:43.906695</ts>
    <user>U2SR9DL7Q</user>
    <text>yeah... i've done some very basic css work. i know all the keywords and I can read a html/css file and understand whats happening... but constructive all the relevant css for a site is still daunting. i've used bootstrap with python projects, but mdl seemed the most robust thing out there for elm with great documentation, and i liked the aesthetic.</text>
  </message>
  <message>
    <ts>2017-06-24T17:50:16.908365</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U0JL9RPC4&gt; thanks. i'll ask in the mdl channel and check out what's going on in my index file.</text>
  </message>
  <message>
    <ts>2017-06-24T17:53:47.918649</ts>
    <user>U2SR9DL7Q</user>
    <text>i've pretty much drank the  elm koolaid at this point... i tried getting into javascript but the language feels... messy. i also toyed with haskell for a bit but never got to the point of being useful. elm possess that mixture of practicality and correctness. and a magical compiler.</text>
  </message>
  <message>
    <ts>2017-06-24T17:55:52.924737</ts>
    <user>U0JL9RPC4</user>
    <text>This page seems to indicate that you can manually load your own material CSS files (and by consequence, some locale css files if you need to) &lt;http://package.elm-lang.org/packages/debois/elm-mdl/latest/Material-Scheme&gt;</text>
  </message>
  <message>
    <ts>2017-06-24T17:58:39.932721</ts>
    <user>U0JL9RPC4</user>
    <text>`topWithScheme` always loads the styles files externally: &lt;https://github.com/debois/elm-mdl/blob/v8/src/Material/Scheme.elm#L42&gt;</text>
  </message>
  <message>
    <ts>2017-06-24T18:01:05.940582</ts>
    <user>U2SR9DL7Q</user>
    <text>ahhh... i was using topWithScheme</text>
  </message>
  <message>
    <ts>2017-06-24T18:09:05.963303</ts>
    <user>U3HQVHERX</user>
    <text>integrating elm into django, csrf_token is a flag, any gotchyas? currently passing it along with POST requests as `csrfmiddlewaretoken` but still getting `{"detail":"CSRF Failed: CSRF token missing or incorrect."}`</text>
  </message>
  <message>
    <ts>2017-06-24T18:09:44.964874</ts>
    <user>U3YDBDP4Z</user>
    <text>I'm trying to debug but I'm not getting anything to console
For instance, `let _ = Debug.log "OnLocationChange " location`</text>
  </message>
  <message>
    <ts>2017-06-24T18:10:22.966683</ts>
    <user>U3YDBDP4Z</user>
    <text>Is that the correct way?</text>
  </message>
  <message>
    <ts>2017-06-24T18:10:39.967703</ts>
    <user>U3HQVHERX</user>
    <text>that's correct</text>
  </message>
  <message>
    <ts>2017-06-24T18:11:12.969257</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U3YDBDP4Z&gt; could you post the surrounding code? are you sure `OnLocationChange` is happening?</text>
  </message>
  <message>
    <ts>2017-06-24T18:12:42.973539</ts>
    <user>U3YDBDP4Z</user>
    <text>I'm pretty sure since I can change the url and get a different view.
But it's not the view I want, so that's what I'm trying to debug</text>
  </message>
  <message>
    <ts>2017-06-24T18:13:13.974956</ts>
    <user>U3YDBDP4Z</user>
    <text>```
userRequired : Model -&amp;gt; Navigation.Location -&amp;gt; Models.Route
userRequired model location =
    case model.user of
        Nothing -&amp;gt;
            let
                _ =
                    Debug.log "Nothing: " toString model.user
            in
                Models.SignInRoute

        Just user -&amp;gt;
            let
                _ =
                    Debug.log "User " model.user
            in
                parseLocation location


update : Msg -&amp;gt; Model -&amp;gt; ( Model, Cmd a )
update msg model =
    case msg of
        ChangeLocation path -&amp;gt;
            ( model, Navigation.newUrl path )

        OnLocationChange location -&amp;gt;
            let
                _ =
                    Debug.log "OnLocationChange " location
            in
                ( { model | route = userRequired model location }, Cmd.none )
```</text>
  </message>
  <message>
    <ts>2017-06-24T18:14:55.979555</ts>
    <user>U3HQVHERX</user>
    <text>Can you show me the code that that sends the `OnLocationChange` message?</text>
  </message>
  <message>
    <ts>2017-06-24T18:16:24.983766</ts>
    <user>U3YDBDP4Z</user>
    <text>```

init : Location -&amp;gt; ( Model, Cmd Msg )
init location =
    let
        currentRoute =
            Routing.parseLocation location
    in
        ( Models.initialModel currentRoute, Cmd.none )


main : Program Never Model Msg
main =
    Navigation.program Msgs.OnLocationChange
        { init = init
        , view = view
        , update = update
        , subscriptions = subscriptions
        }

```
?</text>
  </message>
  <message>
    <ts>2017-06-24T18:17:50.987443</ts>
    <user>U3HQVHERX</user>
    <text>so, i've got something like this in my code (I'm using that same navigation package)</text>
  </message>
  <message>
    <ts>2017-06-24T18:17:53.987582</ts>
    <user>U3HQVHERX</user>
    <text>```
onLinkClick : msg -&amp;gt; Attribute msg
onLinkClick message =
    let
        options =
            { stopPropagation = False
            , preventDefault = True
            }
    in
        onWithOptions "click" options (Decode.succeed message)
```</text>
  </message>
  <message>
    <ts>2017-06-24T18:18:09.988509</ts>
    <user>U3YDBDP4Z</user>
    <text>Right.</text>
  </message>
  <message>
    <ts>2017-06-24T18:18:25.989197</ts>
    <user>U3HQVHERX</user>
    <text>```
linkAttrs : String -&amp;gt; List (Attribute Msg)
linkAttrs path =
    [ href &amp;lt;| path, R.onLinkClick &amp;lt;| UpdateLocation path ]
```</text>
  </message>
  <message>
    <ts>2017-06-24T18:18:32.989521</ts>
    <user>U3YDBDP4Z</user>
    <text>I'm not clicking any links. This is on page load</text>
  </message>
  <message>
    <ts>2017-06-24T18:19:08.991257</ts>
    <user>U3YDBDP4Z</user>
    <text>I get the "correct" views if I change the url, as if it doesn't even care about the `userRequired` function</text>
  </message>
  <message>
    <ts>2017-06-24T18:19:24.991874</ts>
    <user>U3YDBDP4Z</user>
    <text>But none of the debug logs are being logged :confused:</text>
  </message>
  <message>
    <ts>2017-06-24T18:19:33.992303</ts>
    <user>U3YDBDP4Z</user>
    <text>So I don't know what's going on!? :smile:</text>
  </message>
  <message>
    <ts>2017-06-24T18:20:38.995448</ts>
    <user>U3HQVHERX</user>
    <text>oh, none of them are being logged??</text>
  </message>
  <message>
    <ts>2017-06-24T18:20:44.995805</ts>
    <user>U3YDBDP4Z</user>
    <text>No</text>
  </message>
  <message>
    <ts>2017-06-24T18:22:02.999568</ts>
    <user>U3HQVHERX</user>
    <text>Try putting one in your init</text>
  </message>
  <message>
    <ts>2017-06-24T18:22:08.999829</ts>
    <user>U3HQVHERX</user>
    <text>just for a sanity check</text>
  </message>
  <message>
    <ts>2017-06-24T18:22:23.000481</ts>
    <user>U3HQVHERX</user>
    <text>```
init : Location -&amp;gt; ( Model, Cmd Msg )
init location =
    let
        currentRoute =
            Routing.parseLocation location
        _ = Debug.log "loc" location
    in
        ( Models.initialModel currentRoute, Cmd.none )
```</text>
  </message>
  <message>
    <ts>2017-06-24T18:22:50.001669</ts>
    <user>U3YDBDP4Z</user>
    <text>init logs</text>
  </message>
  <message>
    <ts>2017-06-24T18:23:11.002478</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U0JL9RPC4&gt; just a quick update. did some reading. should be possible to keep the css locally. i'll need bower, some build steps and some finnicking, but it *should* work. thanks again!</text>
  </message>
  <message>
    <ts>2017-06-24T18:23:35.003494</ts>
    <user>U3HQVHERX</user>
    <text>i gtg, but follow it down the rabbit hole, look in the `parseLocation` function.... then keep digging :wink:</text>
  </message>
  <message>
    <ts>2017-06-24T18:23:46.003945</ts>
    <user>U3YDBDP4Z</user>
    <text>Alright, take care!</text>
  </message>
  <message>
    <ts>2017-06-24T18:23:48.004043</ts>
    <user>U3HQVHERX</user>
    <text>good luck</text>
  </message>
  <message>
    <ts>2017-06-24T18:41:59.051402</ts>
    <user>U3YDBDP4Z</user>
    <text>Problem solved</text>
  </message>
  <message>
    <ts>2017-06-25T00:08:36.818589</ts>
    <user>U3LUC6SNS</user>
    <text>What do you recommend in the way of application icons.  Material? Something else?  I'd love to see an example of styling a button or something with an icon.</text>
  </message>
  <message>
    <ts>2017-06-25T00:10:59.824238</ts>
    <user>U3LUC6SNS</user>
    <text>Oops: TheSeamau5/elm-material-icons doesn't work with 0.18</text>
  </message>
  <message>
    <ts>2017-06-25T00:18:27.841872</ts>
    <user>U5GJ5FEAU</user>
    <text>i'm thinking how do we handle a textbox that holds a field of type float. Whenever a user inputs a dot, it doesn't pass as a valid float (in the update) and then the re-render causes the textbox to remove the dot.  Same goes for clearing/emptying out such a field .</text>
  </message>
  <message>
    <ts>2017-06-25T00:24:37.855279</ts>
    <user>U3LUC6SNS</user>
    <text>Are you setting `value` ?</text>
  </message>
  <message>
    <ts>2017-06-25T00:25:24.856923</ts>
    <user>U5GJ5FEAU</user>
    <text>&lt;@U3LUC6SNS&gt; yes</text>
  </message>
  <message>
    <ts>2017-06-25T00:29:06.864849</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U5GJ5FEAU&gt; Maybe you should have two different checks for whether the input is valid. One for when the user is still typing and another for when they attempt to submit the value.</text>
  </message>
  <message>
    <ts>2017-06-25T00:30:41.868781</ts>
    <user>U5GJ5FEAU</user>
    <text>yeah! i was thinking of that as well. Earlier method seemed like the easy way out :smile:</text>
  </message>
  <message>
    <ts>2017-06-25T00:31:09.869853</ts>
    <user>U5GJ5FEAU</user>
    <text>Another thought was to do the check onBlur but unfortunately we don't have the value on blur. Maybe i'll try to write a custom onBlur event handler</text>
  </message>
  <message>
    <ts>2017-06-25T00:36:37.880988</ts>
    <user>U5GJ5FEAU</user>
    <text>custom onBlur seems like a good way to do it. Just not sure if it punishes me sometime in the future :smile:</text>
  </message>
  <message>
    <ts>2017-06-25T02:58:36.160398</ts>
    <user>U5UP0B6QM</user>
    <text>is there a syntax for combining exposing all `module My.Module exposing (..)` with exposing union types `module My.Module exposing (MyType(..))`?</text>
  </message>
  <message>
    <ts>2017-06-25T03:00:46.165909</ts>
    <user>U4872964V</user>
    <text>&lt;@U5UP0B6QM&gt; combining how?</text>
  </message>
  <message>
    <ts>2017-06-25T03:05:23.176220</ts>
    <user>U5UP0B6QM</user>
    <text>just wanted to expose everything in my module, but it seems to be having trouble with me union types when i try to access them in other files</text>
  </message>
  <message>
    <ts>2017-06-25T03:07:26.180544</ts>
    <user>U5UP0B6QM</user>
    <text>woops i figured it out.. my mistake. thanks for the quick feedback though!</text>
  </message>
  <message>
    <ts>2017-06-25T03:15:50.198445</ts>
    <user>U3YDBDP4Z</user>
    <text>How do I create commands? I'm not finding any docs about it</text>
  </message>
  <message>
    <ts>2017-06-25T03:18:54.204703</ts>
    <user>U3YDBDP4Z</user>
    <text>And how do I use `if else` with Maybes?</text>
  </message>
  <message>
    <ts>2017-06-25T03:19:26.205703</ts>
    <user>U5UP0B6QM</user>
    <text>&lt;https://www.elm-tutorial.org/en/03-subs-cmds/02-commands.html&gt;</text>
  </message>
  <message>
    <ts>2017-06-25T03:20:17.207388</ts>
    <user>U3YDBDP4Z</user>
    <text>Yes but it's not really helpful, because it only shows how Random gives you a command, not how to issue one of your own</text>
  </message>
  <message>
    <ts>2017-06-25T03:20:25.207603</ts>
    <user>U5UP0B6QM</user>
    <text>from my understanding commands can only be called in the update</text>
  </message>
  <message>
    <ts>2017-06-25T03:21:15.209505</ts>
    <user>U3YDBDP4Z</user>
    <text>Yup</text>
  </message>
  <message>
    <ts>2017-06-25T03:25:35.217958</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U3YDBDP4Z&gt; a Cmd is a structure that the runtime can interpret and allows the runtime to execute something, after which it would call your update with the resulting msg. What is your use-case for creating commands?</text>
  </message>
  <message>
    <ts>2017-06-25T03:26:09.219233</ts>
    <user>U3SJEDR96</user>
    <text>as for `if..else` with `Maybe`; could you explain what you're trying to achieve? I'm sure we can help you figure out how to best handle it :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-25T03:26:47.220481</ts>
    <user>U3YDBDP4Z</user>
    <text>Basically, in pseudo-elm code</text>
  </message>
  <message>
    <ts>2017-06-25T03:26:50.220612</ts>
    <user>U3YDBDP4Z</user>
    <text>`cmd = if model.user then Cmd.none else ChangeLocation "sign-in"`</text>
  </message>
  <message>
    <ts>2017-06-25T03:27:13.221372</ts>
    <user>U3YDBDP4Z</user>
    <text>model.user is a `Maybe User`</text>
  </message>
  <message>
    <ts>2017-06-25T03:27:54.222631</ts>
    <user>U3SJEDR96</user>
    <text>Right, so, `ChangeLocation "foo"` is a branch of your `update`, right?</text>
  </message>
  <message>
    <ts>2017-06-25T03:27:59.222833</ts>
    <user>U3YDBDP4Z</user>
    <text>Yup</text>
  </message>
  <message>
    <ts>2017-06-25T03:28:59.225057</ts>
    <user>U3SJEDR96</user>
    <text>Does it change anything in your model, or does it just return your model and adds a cmd to actually go to a different page?</text>
  </message>
  <message>
    <ts>2017-06-25T03:30:04.227276</ts>
    <user>U3YDBDP4Z</user>
    <text>If the command is ChangeLocation, then model.route would also need to be updated</text>
  </message>
  <message>
    <ts>2017-06-25T03:30:11.227620</ts>
    <user>U3YDBDP4Z</user>
    <text>So the url and route match</text>
  </message>
  <message>
    <ts>2017-06-25T03:31:20.230326</ts>
    <user>U3SJEDR96</user>
    <text>Right. So what you'd basically do is take the content of that branch of your update, turn it into a function, and call that</text>
  </message>
  <message>
    <ts>2017-06-25T03:32:37.232935</ts>
    <user>U3SJEDR96</user>
    <text>I mean, you already _have_ the code you want to execute, now you just need to call it. But rather than you telling the runtime to execute your `update` with a certain message, you can just call it directly</text>
  </message>
  <message>
    <ts>2017-06-25T03:33:51.235588</ts>
    <user>U3YDBDP4Z</user>
    <text>Sure. But then this branch of `update` would just return `(model, Cmd.none)` if that's the case?</text>
  </message>
  <message>
    <ts>2017-06-25T03:34:01.235891</ts>
    <user>U3YDBDP4Z</user>
    <text>If I call `update` with another message directly?</text>
  </message>
  <message>
    <ts>2017-06-25T03:35:59.239993</ts>
    <user>U3SJEDR96</user>
    <text>I wouldn't call `update` directly, making `update` a recursive function can get confusing while there's no real need for that. Taking the code you actually need (the content of tht branch) and putting it into a function, then calling that function from both places is going to be much easier</text>
  </message>
  <message>
    <ts>2017-06-25T03:36:20.240726</ts>
    <user>U3YDBDP4Z</user>
    <text>Then you lost me. :slightly_smiling_face: Cause I thought we were talking about recursive update calls</text>
  </message>
  <message>
    <ts>2017-06-25T03:37:02.241912</ts>
    <user>U3SJEDR96</user>
    <text>I see how I could've given you that idea, but I was rather talking about calling the common code directly, rather than update itself. Could you perhaps post your update somewhere? I could give you some pointers :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-25T03:37:32.242964</ts>
    <user>U3YDBDP4Z</user>
    <text>```
update : Msg -&amp;gt; Model -&amp;gt; ( Model, Cmd a )
update msg model =
    case msg of
        ChangeLocation path -&amp;gt;
            ( model, Navigation.newUrl path )

        OnLocationChange location -&amp;gt;
            let
                newRoute =
                    location
                        |&amp;gt; parseLocation

                cmd = if model.user then Cmd.none else ChangeLocation "sign-in"
            in
                ( { model | route = newRoute }, cmd )
```</text>
  </message>
  <message>
    <ts>2017-06-25T03:39:21.246202</ts>
    <user>U3SJEDR96</user>
    <text>Right, so, the simplest thing to do here would be `cmd = if model.user == Nothing then Navigation.newUrl "sign-in" else Cmd.none`</text>
  </message>
  <message>
    <ts>2017-06-25T03:39:40.246709</ts>
    <user>U3YDBDP4Z</user>
    <text>Hmm true true</text>
  </message>
  <message>
    <ts>2017-06-25T03:41:15.250162</ts>
    <user>U3SJEDR96</user>
    <text>(you'll need `(Model, Cmd Msg)` in your type annotation, tho)</text>
  </message>
  <message>
    <ts>2017-06-25T03:44:59.257852</ts>
    <user>U3YDBDP4Z</user>
    <text>Thanks for the guidance!</text>
  </message>
  <message>
    <ts>2017-06-25T07:11:05.724191</ts>
    <user>U3YDBDP4Z</user>
    <text>Does Elm use `and` or `&amp;amp;&amp;amp;`?</text>
  </message>
  <message>
    <ts>2017-06-25T07:12:58.728948</ts>
    <user>U3YDBDP4Z</user>
    <text>Feels like it _should_ be `and` but the compiler doesn't recognize it</text>
  </message>
  <message>
    <ts>2017-06-25T07:13:19.729720</ts>
    <user>U3YDBDP4Z</user>
    <text>Perhaps I'm missing some parentheses</text>
  </message>
  <message>
    <ts>2017-06-25T07:15:55.735712</ts>
    <user>U3SJEDR96</user>
    <text>it's `&amp;amp;&amp;amp;`, &lt;@U3YDBDP4Z&gt; &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Basics#&amp;amp;&amp;amp;&gt;</text>
  </message>
  <message>
    <ts>2017-06-25T07:17:13.738826</ts>
    <user>U3YDBDP4Z</user>
    <text>"Cannot find variable !=" :confused:</text>
  </message>
  <message>
    <ts>2017-06-25T07:18:35.742200</ts>
    <user>U3SJEDR96</user>
    <text>`/=` in elm</text>
  </message>
  <message>
    <ts>2017-06-25T07:19:27.744075</ts>
    <user>U3SJEDR96</user>
    <text>though if you're still dealing with `Maybe`, it's often more readable to use `Maybe.map` and - possibly - `Maybe.withDefault` to fallback to a default value.</text>
  </message>
  <message>
    <ts>2017-06-25T08:09:12.869053</ts>
    <user>U3YDBDP4Z</user>
    <text>If I have these types,
```
type PrivateRoute
    = HomeRoute


type PublicRoute
    = AboutRoute
    | NotFoundRoute
    | SignInRoute


type Route
    = PrivateRoute
    | PublicRoute
```
can't `PrivateRoute` and `PublicRoute` be matched as `Route`? :confused:

Trying to put together something that allows me to use a single `case route of` to work with private or public routes</text>
  </message>
  <message>
    <ts>2017-06-25T08:09:59.870944</ts>
    <user>U3YDBDP4Z</user>
    <text>In case of a private route, I need to do something. In case of public route, I need to do something else</text>
  </message>
  <message>
    <ts>2017-06-25T08:13:28.880703</ts>
    <user>U3SJEDR96</user>
    <text>You can't "sum" types like that, but you can tag them - `type Route = Private PrivateRoute | Public PublicRoute`</text>
  </message>
  <message>
    <ts>2017-06-25T08:14:36.883706</ts>
    <user>U3SJEDR96</user>
    <text>you can use these in a single case, btw:
```
case route of
    Private HomeRoute -&amp;gt; ...
    Public AboutRoute -&amp;gt; ...
    Public NotFoundRoute -&amp;gt; ...
    Public _ -&amp;gt; ...
```</text>
  </message>
  <message>
    <ts>2017-06-25T08:23:40.906776</ts>
    <user>U3YDBDP4Z</user>
    <text>Thanks again</text>
  </message>
  <message>
    <ts>2017-06-25T12:59:17.758667</ts>
    <user>U1AN4JRFV</user>
    <text>jxxcarlson: Thank you for spelling that out for me. I did notice that it didn't update the correct document, but I thought that could not have anything to do with that, but was intended. And then I had to suddenly run. Did you get help?</text>
  </message>
  <message>
    <ts>2017-06-25T13:59:57.963732</ts>
    <user>U3YDBDP4Z</user>
    <text>If `Models` has this type,
```
type Route
    = RouteName PrivateRoute
```

Why does an import of `Models` and the use of `Models.Route` somewhere yield a "Models does not expose Route" error?</text>
  </message>
  <message>
    <ts>2017-06-25T14:03:07.976193</ts>
    <user>U0JL9RPC4</user>
    <text>You can expose an union type outside of your module but by default, it does not expose its constructors</text>
  </message>
  <message>
    <ts>2017-06-25T14:03:58.979303</ts>
    <user>U0JL9RPC4</user>
    <text>you have to make something like `export (Route(..))`</text>
  </message>
  <message>
    <ts>2017-06-25T14:05:06.983496</ts>
    <user>U3YDBDP4Z</user>
    <text>I had that but with the same problem</text>
  </message>
  <message>
    <ts>2017-06-25T14:26:36.057684</ts>
    <user>U5LHS71SM</user>
    <text>Hey, I have a question:
I need to display a svg generated by a .js file, I guess I should use ports but I couldn't actually think how to use ports with that? Thanks for the help in advance!</text>
  </message>
  <message>
    <ts>2017-06-25T14:34:19.083530</ts>
    <user>U14Q8S4EM</user>
    <text>I can think of two solutions &lt;@U5LHS71SM&gt;</text>
  </message>
  <message>
    <ts>2017-06-25T14:34:38.084427</ts>
    <user>U14Q8S4EM</user>
    <text>One would be the manually append it to an html element generated in Elm.</text>
  </message>
  <message>
    <ts>2017-06-25T14:35:27.087242</ts>
    <user>U14Q8S4EM</user>
    <text>So in elm make `div [ id "svg-container" ] [] ` and in in JS write `var svgContainer = document.getElementById("svg-container")` and append your svg to `svgContainer`</text>
  </message>
  <message>
    <ts>2017-06-25T14:36:02.089320</ts>
    <user>U14Q8S4EM</user>
    <text>The other would be to convert the svg to json, and then pass it through the port, and the decode it in Elm</text>
  </message>
  <message>
    <ts>2017-06-25T14:37:19.093364</ts>
    <user>U14Q8S4EM</user>
    <text>`&amp;lt;svg&amp;gt;&amp;lt;circle fill="blue"&amp;gt;&amp;lt;/circle&amp;gt;&amp;lt;/svg&amp;gt;` -&amp;gt; `{tag:"svg", children: [ {tag:"circle", fill:"blue", children: [] } ] }`</text>
  </message>
  <message>
    <ts>2017-06-25T14:38:44.098156</ts>
    <user>U14Q8S4EM</user>
    <text>The first would be far easier, but it might be unstable, and kind of hacky. Because the Elm virtual dom might whip it away if it has reason to update the svg's parent element.</text>
  </message>
  <message>
    <ts>2017-06-25T14:46:50.127945</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U5LHS71SM&gt; Could you generate the SVG in Elm instead using [elm-lang/svg](&lt;http://package.elm-lang.org/packages/elm-lang/svg/latest&gt;)?</text>
  </message>
  <message>
    <ts>2017-06-25T14:58:54.168694</ts>
    <user>U0JFGGZS6</user>
    <text>I take it the svg is dynamically generated?  Otherwise you could save it to a file and `use xlink:href=...`</text>
  </message>
  <message>
    <ts>2017-06-25T15:00:07.173002</ts>
    <user>U0EUHKVGB</user>
    <text>You can also use this script to convert it to elm-svg if it's a statically generated SVG file: &lt;https://gist.github.com/eeue56/d0ab060828bf3b64922ac9172ee430c3&gt;</text>
  </message>
  <message>
    <ts>2017-06-25T15:19:07.237416</ts>
    <user>U5LHS71SM</user>
    <text>Thank you all for the answers, I've solved the problem :smile:</text>
  </message>
  <message>
    <ts>2017-06-25T15:42:22.311664</ts>
    <user>U1L4GLFJ6</user>
    <text>hello all</text>
  </message>
  <message>
    <ts>2017-06-25T15:42:30.312147</ts>
    <user>U1L4GLFJ6</user>
    <text>```module `Html.Attributes` does not expose `Attribute`

import Html.Attributes exposing (style, Attribute)```</text>
  </message>
  <message>
    <ts>2017-06-25T15:43:01.313725</ts>
    <user>U1L4GLFJ6</user>
    <text>how does the `Attributes` library not expose `Attribute`</text>
  </message>
  <message>
    <ts>2017-06-25T15:46:52.326503</ts>
    <user>U0JL9RPC4</user>
    <text>&lt;@U1L4GLFJ6&gt; because `Attribute` is what we call an "opaque" type</text>
  </message>
  <message>
    <ts>2017-06-25T15:47:05.327264</ts>
    <user>U0JL9RPC4</user>
    <text>&lt;https://stackoverflow.com/questions/40794368/what-is-an-opaque-type-in-elm-and-why-is-it-valuable&gt;</text>
  </message>
  <message>
    <ts>2017-06-25T15:47:31.328613</ts>
    <user>U0JL9RPC4</user>
    <text>It means you shouldn't manipulate an `Attribute` _directly_ but through some exposed functions</text>
  </message>
  <message>
    <ts>2017-06-25T15:47:40.329050</ts>
    <user>U57KYFW67</user>
    <text>Opaque types are essentially what C++ and Java would call abstract types</text>
  </message>
  <message>
    <ts>2017-06-25T15:48:11.330628</ts>
    <user>U57KYFW67</user>
    <text>You never call constructors for them directly and you never pattern-match on them with `case` directly. You have to go through the public API to work with them.</text>
  </message>
  <message>
    <ts>2017-06-25T15:48:37.332239</ts>
    <user>U57KYFW67</user>
    <text>It's like "all rights reserved" for the implementation, since the library owner can make changes without fear of breaking any existing code</text>
  </message>
  <message>
    <ts>2017-06-25T15:49:33.335282</ts>
    <user>U1L4GLFJ6</user>
    <text>OK.  `Svg` exposes itself.  so does `Html` but `Attributes` doesn't not.  Fine</text>
  </message>
  <message>
    <ts>2017-06-25T15:50:53.339795</ts>
    <user>U57KYFW67</user>
    <text>I can't vouch for the design choice on `Html`, but it's a bit odd to see that it does.</text>
  </message>
  <message>
    <ts>2017-06-25T15:51:12.340842</ts>
    <user>U57KYFW67</user>
    <text>Although if you look, it shows it's just an alias for `Node`, which itself is an opaque type</text>
  </message>
  <message>
    <ts>2017-06-25T16:01:37.376486</ts>
    <user>U1L4GLFJ6</user>
    <text>OK new question</text>
  </message>
  <message>
    <ts>2017-06-25T16:01:44.376891</ts>
    <user>U1L4GLFJ6</user>
    <text>i want to decode a complicated JSON file</text>
  </message>
  <message>
    <ts>2017-06-25T16:02:16.378736</ts>
    <user>U1L4GLFJ6</user>
    <text>how am I suppsed to know the structure all at once?</text>
  </message>
  <message>
    <ts>2017-06-25T16:03:16.381957</ts>
    <user>U1L4GLFJ6</user>
    <text>```{municipios: [ `geometry`: [[[....]]] ] }```</text>
  </message>
  <message>
    <ts>2017-06-25T16:03:39.383164</ts>
    <user>U1L4GLFJ6</user>
    <text>I'd just like to dump the entire json file as as string</text>
  </message>
  <message>
    <ts>2017-06-25T16:15:19.422736</ts>
    <user>U57KYFW67</user>
    <text>sadly, I haven't worked through the JSON tutorial yet, or I could probably help &amp;gt;_&amp;gt;</text>
  </message>
  <message>
    <ts>2017-06-25T16:17:05.428897</ts>
    <user>U57KYFW67</user>
    <text>How is the `Array` type implemented?</text>
  </message>
  <message>
    <ts>2017-06-25T16:22:05.445884</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U1L4GLFJ6&gt; You just got the import slightly wrong. It should be `import Html exposing (Attribute)`</text>
  </message>
  <message>
    <ts>2017-06-25T16:22:31.447514</ts>
    <user>U4F64AKQV</user>
    <text>Attribute being an opaque type is somewhat peripheral to the matter</text>
  </message>
  <message>
    <ts>2017-06-25T16:25:05.455883</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U1L4GLFJ6&gt; You need to create a decoder. &lt;http://json2elm.com&gt; might be helpful.</text>
  </message>
  <message>
    <ts>2017-06-25T16:26:50.461852</ts>
    <user>U4F64AKQV</user>
    <text>I'm not sure what you mean by "knowing the structure all at once." Don't you need to know that anyway in order to extract the parts of the data that you care about in JS.</text>
  </message>
  <message>
    <ts>2017-06-25T17:31:34.675680</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U1AN4JRFV&gt; Thanks so much -- yes, it turns out that with &lt;@U0JFXEUCT&gt; 's 3.2 update to style-elements, the problem is solved for those using that package - code at &lt;https://github.com/jxxcarlson/nanoedit&gt; in case anyone else runs into this.  :slightly_smiling_face::+1:</text>
  </message>
  <message>
    <ts>2017-06-25T19:50:13.140699</ts>
    <user>U0EUHKVGB</user>
    <text>Folks, explaining what an opaque type in this context was not the right path to go down, and can lead to more confusion than aid. It's best to identify what the questioner is actually stuck on before answering in such situations</text>
  </message>
  <message>
    <ts>2017-06-25T19:50:42.142630</ts>
    <user>U0EUHKVGB</user>
    <text>Especially in this case since it was an import error :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-25T19:51:47.146449</ts>
    <user>U57KYFW67</user>
    <text>Yeah. I just kind of went into Wiki mode :X</text>
  </message>
  <message>
    <ts>2017-06-25T21:58:34.735289</ts>
    <user>U5XHTBFS6</user>
    <text>When I do `port addSpotMarker : Geolocation -&amp;gt; String -&amp;gt; Cmd msg`  elm-make complains that it has the wrong type, but `port addSpotMarker : Geolocation -&amp;gt; Cmd msg` type checks (note: Geolocation is a `type alias` for a record). Does it mean ports must always take a single argument?

If that's the case, what's the best way of passing multiple values through ports? I thought maybe doing `port addSpotMarker : (Geolocation -&amp;gt; String) -&amp;gt; Cmd msg` and having the JS-side subscriber take an array, but that seems error-prone. I could also make `addSpotMarker` take a single record that "embeds" both parameters, but that seems too verbose. Is there a better way?</text>
  </message>
  <message>
    <ts>2017-06-25T22:01:23.752529</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5XHTBFS6&gt; yep, only one argument</text>
  </message>
  <message>
    <ts>2017-06-25T22:01:33.753505</ts>
    <user>U153UK3FA</user>
    <text>you can send a tuple or a list</text>
  </message>
  <message>
    <ts>2017-06-25T22:02:00.755965</ts>
    <user>U153UK3FA</user>
    <text>`port addSpotMarker : (Geolocation, String) -&amp;gt; Cmd msg`</text>
  </message>
  <message>
    <ts>2017-06-25T22:02:35.759450</ts>
    <user>U153UK3FA</user>
    <text>the JS side will get it as an array</text>
  </message>
  <message>
    <ts>2017-06-25T22:03:41.765424</ts>
    <user>U5XHTBFS6</user>
    <text>hmmm that's what I thought, then. thanks!</text>
  </message>
  <message>
    <ts>2017-06-25T22:09:38.797334</ts>
    <user>U153UK3FA</user>
    <text>Because it's talking to JS it's error prone either way, if your JS callback to the subscription took less arguments than it was given those values would still be lost</text>
  </message>
  <message>
    <ts>2017-06-25T22:49:15.005757</ts>
    <user>U5FU80S06</user>
    <text>I want to have a global `Int` count which increments by one to give latest count. But everything is immutable, so I do not know what to do.</text>
  </message>
  <message>
    <ts>2017-06-25T22:55:50.039840</ts>
    <user>U4JT89FGB</user>
    <text>&lt;@U5FFVDC4W&gt; See something like this: &lt;https://ellie-app.com/D9Q8Xy9sdza1/2&gt;</text>
  </message>
  <message>
    <ts>2017-06-25T23:50:06.304129</ts>
    <user>U57KYFW67</user>
    <text>Do you need to specify anything more than the "main" .elm file to elm-make?</text>
  </message>
  <message>
    <ts>2017-06-25T23:57:21.340996</ts>
    <user>U57KYFW67</user>
    <text>Oh nice. It looks like it.</text>
  </message>
  <message>
    <ts>2017-06-26T01:07:15.698783</ts>
    <user>U3HQVHERX</user>
    <text>jdm06: `Json.Decode.field "municipios" Json.Decode.field "geometry" Json.Decode.list Json.Decode.list Json.Decode.list` .... :slightly_smiling_face: I would reccomend playing around in the repl for a good while and decoded small parts, then put them all together</text>
  </message>
  <message>
    <ts>2017-06-26T01:45:47.892346</ts>
    <user>U0J8D9M2P</user>
    <text>Hello. On this example &lt;http://elm-lang.org/examples/binary-tree&gt;, on 5th exercise is saying that `flatten: 21` - means that it's possible to write `flatten` function with `fold` so the length of function definition will be 21 character including function name and whitespaces.</text>
  </message>
  <message>
    <ts>2017-06-26T01:46:23.895629</ts>
    <user>U0J8D9M2P</user>
    <text>My solution is
```
flatten : Tree a -&amp;gt; List a
flatten = fold (::) []
```
Which is 22 character. How I can do it with 21? Or is it typo?</text>
  </message>
  <message>
    <ts>2017-06-26T03:02:11.421669</ts>
    <user>U5Q1H5XC2</user>
    <text>Hey, i would like to see how my elm code looks like after its compiled to JS. Whats the best way? When I compile with elm-make I cant find my own code.</text>
  </message>
  <message>
    <ts>2017-06-26T03:03:16.431972</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5Q1H5XC2&gt; look for `_user$project`. It will probably not be all in one place, but that's to be expected. Function names are preserved, so you can look for those, too. Be aware that the compiled JS is an implementation detail, though :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-26T03:04:41.444865</ts>
    <user>U5Q1H5XC2</user>
    <text>Sweet, thanks :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-26T03:04:42.444940</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U0J8D9M2P&gt; probably a typo, that looks correct</text>
  </message>
  <message>
    <ts>2017-06-26T03:35:42.743650</ts>
    <user>U37HUSJ4R</user>
    <text>Hi all, how can I pass multiple arugments to a `List.map` function? I currently am passing my type alias `Foo` but I also want to pass a float called `time`</text>
  </message>
  <message>
    <ts>2017-06-26T03:36:05.747609</ts>
    <user>U37HUSJ4R</user>
    <text>currently the type signature looks like `renderFoo : Foo -&amp;gt; Html Msg`</text>
  </message>
  <message>
    <ts>2017-06-26T03:36:20.750247</ts>
    <user>U3SJEDR96</user>
    <text>`List.map (myFun withArgs andMoreArgs) someList`</text>
  </message>
  <message>
    <ts>2017-06-26T03:36:50.755234</ts>
    <user>U3SJEDR96</user>
    <text>assuming you have a list of `Foo`, you just have to make sure that's the last argument, so you can partially apply the others, first</text>
  </message>
  <message>
    <ts>2017-06-26T03:38:15.769945</ts>
    <user>U37HUSJ4R</user>
    <text>perfect</text>
  </message>
  <message>
    <ts>2017-06-26T03:38:20.770769</ts>
    <user>U37HUSJ4R</user>
    <text>thanks &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T03:42:48.816622</ts>
    <user>U604S603Y</user>
    <text>I'm thinking about using elm at work for a small project which is basically a "forms over data" webapp. As I'm not expecting complicated stuff there I think it's a good project to try it. But I'm  trying to think about parts of it that could suck beforehand.
The project includes a scientific calculation (will be done on the server), but for that the user will have to enter around 30 different input values (it's a tool from and for scientists basically). The field types are a mixture of text, numbers and selects where different select options result in different inputs showing and not showing.
After reading the guide for elm on the official page I'm concerned having 30+ input fields will result in a lot of Message Types and a quite unwieldy update function etc?</text>
  </message>
  <message>
    <ts>2017-06-26T03:43:55.829233</ts>
    <user>U0JL9RPC4</user>
    <text>maybe you could take a look at something like `&lt;https://github.com/etaque/elm-form&gt;`</text>
  </message>
  <message>
    <ts>2017-06-26T03:44:24.834512</ts>
    <user>U0JL9RPC4</user>
    <text>it could avoid some boilerplate code for complex forms</text>
  </message>
  <message>
    <ts>2017-06-26T03:45:06.842337</ts>
    <user>U604S603Y</user>
    <text>wow, there really is a package for everything in elm already oO</text>
  </message>
  <message>
    <ts>2017-06-26T03:45:18.844743</ts>
    <user>U0JL9RPC4</user>
    <text>I already use it and I love it</text>
  </message>
  <message>
    <ts>2017-06-26T03:55:29.958924</ts>
    <user>U41NK9BM4</user>
    <text>&lt;@U604S603Y&gt; Sort of :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-26T03:57:06.977701</ts>
    <user>U41NK9BM4</user>
    <text>…and when there isn't there are ports.  But I tend to think to those as a last resort</text>
  </message>
  <message>
    <ts>2017-06-26T04:41:45.545053</ts>
    <user>U5LHS71SM</user>
    <text>At first I was going to use socketio library for elm but it does not support elm 0.18 :confused:</text>
  </message>
  <message>
    <ts>2017-06-26T04:55:44.730359</ts>
    <user>U0PBSF05S</user>
    <text>&lt;@U5LHS71SM&gt; For what it is worth, I am successfully using SocketIO with Elm by using a thin comm layer, written in JS, that talks to Elm via ports. NodeJS on the server. Working well.</text>
  </message>
  <message>
    <ts>2017-06-26T05:03:29.838920</ts>
    <user>U5LHS71SM</user>
    <text>I was doing that, but I'm trying to get rid of that layer. Not for a special reason but I think without that js layer it would be more elegant actually.</text>
  </message>
  <message>
    <ts>2017-06-26T05:07:42.896874</ts>
    <user>U0PBSF05S</user>
    <text>True, it would be, but Elm does not support SocketIO directly. I opted for the benefits of SocketIO over straight websockets, but it will depend how you see things in your project. I am not finding that extra layer much of an issue to manage though since I am keeping it thin.</text>
  </message>
  <message>
    <ts>2017-06-26T07:22:47.538524</ts>
    <user>U5P4FLYLE</user>
    <text>Hi, I try to manage complexity as my Elm project gets bigger and I split up central Msg. So I have:
`Msg.elm`
 ```
   import View.Table as Table
    type Msg                                                                                                                                                                                   
     = Mdl (Material.Msg Msg)  
     | TableMsg Table.Msg
```
Also in update function I have something like:
```        TableMsg a -&amp;gt;                                                                                                                                                                     
             lift .tableModel (\m x -&amp;gt; { m | tableModel = x }) TableMsg Table.update a model
```
In view function:
```
....
      div [class "content"] 
       [ table model record ]
....```

In `Table.elm`
```
table : Model -&amp;gt; Html.Html Msg                                                                                                                                              
table model  = 
    Table.table [                                                                                                                                                                         
          Elevation.e8                                                                                                                                                                     
         , css "width" "386px"                                                                                                                                                             
         , Elevation.transition 300                                                                                                                                                        
         ]                                                                                                                                                                                 
     [ Table.thead []                                                                                                                                                                      
           [ Table.thead []                                                                                                                                                                
                 [ &lt;http://Table.tr|Table.tr&gt; [] ( List.map addTableHead model.dims )                                                                                                                              
                 ]                                                                                                                                                                         
           , Table.tbody []                                                                                                                                                                
               ( List.map (\items -&amp;gt;  &lt;http://Table.tr|Table.tr&gt; []                                                                                                                                          
                           (List.map addBodyHead items) ) model.data                                                                                                                             
               )                                                                           
```
`Problem`: After this trick I get error:
```The 3rd branch has this type:     Html Msg 
But the 4th is:     Html View.Table.Msg```
Question: How to make Msg out of View.Table.Msg?                                                                                                 
           ]                                                                                                                                                                               
     ]</text>
  </message>
  <message>
    <ts>2017-06-26T07:25:40.568652</ts>
    <user>U3SJEDR96</user>
    <text>`|&amp;gt; Html.map TableMsg`</text>
  </message>
  <message>
    <ts>2017-06-26T07:26:00.572114</ts>
    <user>U3SJEDR96</user>
    <text>in your view, that is</text>
  </message>
  <message>
    <ts>2017-06-26T07:33:19.649259</ts>
    <user>U5P4FLYLE</user>
    <text>&lt;@U3SJEDR96&gt;  thanks!!!</text>
  </message>
  <message>
    <ts>2017-06-26T08:49:04.605713</ts>
    <user>U5P4FLYLE</user>
    <text>Hi, I want to check against specific string value in a function:
```   addTableHeadSortable xdim input =                                                                                                                                                   
      case input of                                                                                                                                                                         
          xdim -&amp;gt;                                                                                                                                                                           
            doSomething                                                                                                                                                          
          _ -&amp;gt;                                                                                                                                                                              
            doSomethingElse  ```
So if input equals xdim I want one branch to return, if not otherwise. It is obvious that input as a String can get also different values than `xdim`. But I got compilation error:
```The following pattern is redundant. Remove it. 
79|         _ -&amp;gt;             ^ 
Any value with this shape will be handled by a previous pattern.```
Am I missing something?</text>
  </message>
  <message>
    <ts>2017-06-26T08:51:16.639788</ts>
    <user>U3SJEDR96</user>
    <text>yeah, when you do `case foo of bar -&amp;gt; ` you're essentially asking "can I describe this variable with this pattern", not "with this value". You can use a literal in a pattern, but not a variable, then it will just go "sure, I can put your `foo` in a variable named `bar`", and inside that branch, `xdim` is now your `input` :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-26T09:02:23.827339</ts>
    <user>U5P4FLYLE</user>
    <text>ok, so how to enforce xdim to be interpreted like pattern? Just use: if else construct?</text>
  </message>
  <message>
    <ts>2017-06-26T09:05:58.889905</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5P4FLYLE&gt; exactly :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-26T09:10:14.963043</ts>
    <user>U5P4FLYLE</user>
    <text>ok, so my last question in this problem would be how to `return` what is in { } in something like that:
```      if (input == xdim) {                                                                                                                                                                  
            &lt;http://Table.th|Table.th&gt; [                                                                                                                                                                      
                 model.order                                                                                                                                                                
                |&amp;gt; Maybe.map Table.sorted                                                                                                                                                   
                |&amp;gt; Maybe.withDefault nop                                                                                                                                                    
                , Options.onClick Reorder                                                                                                                                                   
                ] [ text input ]                                                                                                                                                            
      } else {                                                                                                                                                                              
            &lt;http://Table.th|Table.th&gt; [] [ text input ]                                                                                                                                                      
      }    ```</text>
  </message>
  <message>
    <ts>2017-06-26T09:12:18.000377</ts>
    <user>U0JL9RPC4</user>
    <text>hmm just remove your braces? I don't really get the issue here</text>
  </message>
  <message>
    <ts>2017-06-26T09:13:33.022538</ts>
    <user>U5P4FLYLE</user>
    <text>sure in Elm we have `if *then* else`. thanx</text>
  </message>
  <message>
    <ts>2017-06-26T09:15:40.060058</ts>
    <user>U3SJEDR96</user>
    <text>yeah, `if condition then *expression* else *expression`</text>
  </message>
  <message>
    <ts>2017-06-26T09:15:55.064663</ts>
    <user>U3SJEDR96</user>
    <text>remove the braces, add a `then`, and you're all set</text>
  </message>
  <message>
    <ts>2017-06-26T09:16:40.078069</ts>
    <user>U37HUSJ4R</user>
    <text>can a port send multiple values back to JS land? 
`port fooBar : String -&amp;gt; String -&amp;gt; Cmd msg`</text>
  </message>
  <message>
    <ts>2017-06-26T09:17:38.095500</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U37HUSJ4R&gt; a single value, but you can use a tuple, record or list to get multiple things in a single value. `port fooBar : (String, String) -&amp;gt; Cmd msg` for example, which will translate to an array of 2 strings in JS</text>
  </message>
  <message>
    <ts>2017-06-26T09:18:08.104240</ts>
    <user>U3SJEDR96</user>
    <text>or `port fooBar : { foo : String, bar : String } -&amp;gt; Cmd msg` which will be an object with 2 keys, foo and bar, in JS</text>
  </message>
  <message>
    <ts>2017-06-26T09:19:05.121314</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://guide.elm-lang.org/interop/javascript.html#customs-and-border-protection&gt; for the complete list of "autoconverted" values</text>
  </message>
  <message>
    <ts>2017-06-26T09:19:13.123658</ts>
    <user>U37HUSJ4R</user>
    <text>brilliant, thanks</text>
  </message>
  <message>
    <ts>2017-06-26T09:19:28.128443</ts>
    <user>U37HUSJ4R</user>
    <text>that example is just what I was after</text>
  </message>
  <message>
    <ts>2017-06-26T09:45:50.648094</ts>
    <user>U0EUHKVGB</user>
    <text>You can also use a decoder and encoder to send more complicated objects in and out of Elm</text>
  </message>
  <message>
    <ts>2017-06-26T09:46:06.653369</ts>
    <user>U0EUHKVGB</user>
    <text>Requires a bit more legwork, but it is a good option to turn to if you already have them :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-26T09:49:28.724026</ts>
    <user>U5P4FLYLE</user>
    <text>I have :
```data=[[163229,"Mon","a"],[248083,"Wed","b"]]
dims=["dim1", "dim2", "dim3"]```
I want to make array of records:
```[{"dim1":163229,"dim2":"Mon","dim3":"a"},
{"dim1":248083,"dim2":"Wed","dim3":"b"}]```
I bet I have to do something like below (with fix):
```List.map (\el -&amp;gt; List.map2 (\val dim -&amp;gt; dim=val) el dims ) data```
How to enforce in outer lambda to instantiate record?</text>
  </message>
  <message>
    <ts>2017-06-26T09:54:09.826430</ts>
    <user>U0EUHKVGB</user>
    <text>In Elm, we don't really have instances of records.</text>
  </message>
  <message>
    <ts>2017-06-26T09:55:17.851705</ts>
    <user>U0EUHKVGB</user>
    <text>This is how you create a record:

```
makeDimRecord dim1 dim2 dim3 =
 { dim1 = dim1
 , dim2 = dim2
 , dim3 = dim3
 }
```</text>
  </message>
  <message>
    <ts>2017-06-26T09:55:29.856245</ts>
    <user>U0EUHKVGB</user>
    <text>Elm will automatically make this function for you when you make a type alias</text>
  </message>
  <message>
    <ts>2017-06-26T09:56:10.871400</ts>
    <user>U0EUHKVGB</user>
    <text>```
type alias Dims = 
  { dim1 : Int
  , dim2 : String
  , dim3 : String 
  }

-- Dims is the same as the makeDimRecord shown above
```</text>
  </message>
  <message>
    <ts>2017-06-26T09:56:32.879655</ts>
    <user>U0EUHKVGB</user>
    <text>Next, you probably don't want lists. You probably want a list of tuples.</text>
  </message>
  <message>
    <ts>2017-06-26T09:56:50.886549</ts>
    <user>U0EUHKVGB</user>
    <text>`data= [(163229,"Mon","a"),(248083,"Wed","b")]`</text>
  </message>
  <message>
    <ts>2017-06-26T09:57:20.897723</ts>
    <user>U0EUHKVGB</user>
    <text>If you don't know the name or the number of fields you'll have at compile time, you are better off using a `Dict`, which is otherwise known as a hash, a table, or a map</text>
  </message>
  <message>
    <ts>2017-06-26T09:57:50.909297</ts>
    <user>U0EUHKVGB</user>
    <text>```
Dict.fromList [ ("dim1", dim1), ("dim2", dim2), ("dim3", dim3) ]
```</text>
  </message>
  <message>
    <ts>2017-06-26T09:58:34.926231</ts>
    <user>U0EUHKVGB</user>
    <text>You can't have a record with a changing number of fields. You must know all the fields at compile time. With a dict, you can plop whatever you want in there.</text>
  </message>
  <message>
    <ts>2017-06-26T09:59:16.942287</ts>
    <user>U5P4FLYLE</user>
    <text>ok, thank you. how to go from [Dict.fromList[], ..., Dict.fromList[]] to [record, ..., record]</text>
  </message>
  <message>
    <ts>2017-06-26T10:00:03.960671</ts>
    <user>U0EUHKVGB</user>
    <text>Do you know all the fields at compile time?</text>
  </message>
  <message>
    <ts>2017-06-26T10:00:13.965617</ts>
    <user>U0EUHKVGB</user>
    <text>If you don't, then you can't.</text>
  </message>
  <message>
    <ts>2017-06-26T10:01:16.992320</ts>
    <user>U48AEBJQ3</user>
    <text>We might want to explore why you have a `Dict` to begin with.</text>
  </message>
  <message>
    <ts>2017-06-26T10:01:18.993188</ts>
    <user>U5P4FLYLE</user>
    <text>I do not know data and dims at compile time</text>
  </message>
  <message>
    <ts>2017-06-26T10:01:53.007352</ts>
    <user>U0EUHKVGB</user>
    <text>Where is this data coming from?</text>
  </message>
  <message>
    <ts>2017-06-26T10:02:03.011287</ts>
    <user>U5P4FLYLE</user>
    <text>From server</text>
  </message>
  <message>
    <ts>2017-06-26T10:02:18.017146</ts>
    <user>U0EUHKVGB</user>
    <text>Who's server?</text>
  </message>
  <message>
    <ts>2017-06-26T10:02:31.022714</ts>
    <user>U5P4FLYLE</user>
    <text>third party server</text>
  </message>
  <message>
    <ts>2017-06-26T10:03:23.042737</ts>
    <user>U0EUHKVGB</user>
    <text>Do they have an API or spec?</text>
  </message>
  <message>
    <ts>2017-06-26T10:03:54.054586</ts>
    <user>U0EUHKVGB</user>
    <text>If you are getting data from there, then they probably have some consistent data structure that they are sending you back.</text>
  </message>
  <message>
    <ts>2017-06-26T10:03:59.056550</ts>
    <user>U0EUHKVGB</user>
    <text>If not, then you have to use a Dict</text>
  </message>
  <message>
    <ts>2017-06-26T10:07:51.143346</ts>
    <user>U5P4FLYLE</user>
    <text>ok, I got it that Dict is more suitable. But how to get from
```[[Dict.fromList [("count","163229")],Dict.fromList [("bestDay","Mon")],Dict.fromList [("data.markets.instrument","deposit")]],[Dict.fromList [("count","248083")],Dict.fromList [("bestDay","Wed")],Dict.fromList [("data.markets.instrument","spot")]],[Dict.fromList [("count","105479")],Dict.fromList [("bestDay","Fri")],Dict.fromList [("data.markets.instrument","swap")]]]```
to array of three records - I do not know names, number of objects at compile time?</text>
  </message>
  <message>
    <ts>2017-06-26T10:08:07.148935</ts>
    <user>U0EUHKVGB</user>
    <text>Like I said, you _can't_</text>
  </message>
  <message>
    <ts>2017-06-26T10:08:25.155559</ts>
    <user>U0EUHKVGB</user>
    <text>That's not how records work. The fields are fixed at compile time.</text>
  </message>
  <message>
    <ts>2017-06-26T10:08:57.167245</ts>
    <user>U0EUHKVGB</user>
    <text>Otherwise, you can't provide any kind of type safety, because any dynamically added field to an object changes the type of that object.</text>
  </message>
  <message>
    <ts>2017-06-26T10:09:38.182647</ts>
    <user>U0EUHKVGB</user>
    <text>Hence why `Dict` is what you have to use - a Dict can store keys and values, without needing to care about the fields other than the key must be a certain type, and the value for each key must be a certain type</text>
  </message>
  <message>
    <ts>2017-06-26T11:01:06.402504</ts>
    <user>U52GHJJTU</user>
    <text>Is it possible to have the `elm-stuff` directory somewhere else than the root of the project?</text>
  </message>
  <message>
    <ts>2017-06-26T11:01:26.411291</ts>
    <user>U0EUHKVGB</user>
    <text>Nope, it's always where your elm-package.json is</text>
  </message>
  <message>
    <ts>2017-06-26T11:01:27.411752</ts>
    <user>U0EUHKVGB</user>
    <text>Why?</text>
  </message>
  <message>
    <ts>2017-06-26T11:01:30.413262</ts>
    <user>U52GHJJTU</user>
    <text>For example, if the project root happens to be read-only...</text>
  </message>
  <message>
    <ts>2017-06-26T11:02:12.430276</ts>
    <user>U0EUHKVGB</user>
    <text>What situation is that?</text>
  </message>
  <message>
    <ts>2017-06-26T11:02:15.431293</ts>
    <user>U0EUHKVGB</user>
    <text>When deploying?</text>
  </message>
  <message>
    <ts>2017-06-26T11:02:17.432275</ts>
    <user>U52GHJJTU</user>
    <text>I've moved `node_modules` elsewhere using the `NODE_PATH` env variable</text>
  </message>
  <message>
    <ts>2017-06-26T11:02:26.436303</ts>
    <user>U0EUHKVGB</user>
    <text>You should compile your Elm files _before_ deploying</text>
  </message>
  <message>
    <ts>2017-06-26T11:02:27.436476</ts>
    <user>U52GHJJTU</user>
    <text>docker-based development environment</text>
  </message>
  <message>
    <ts>2017-06-26T11:02:49.446175</ts>
    <user>U52GHJJTU</user>
    <text>Our webpack runs in an environment where all source files and their directories are read-only</text>
  </message>
  <message>
    <ts>2017-06-26T11:03:16.457011</ts>
    <user>U0EUHKVGB</user>
    <text>Simple fix: put `elm-package.json` into your writable directory</text>
  </message>
  <message>
    <ts>2017-06-26T11:03:21.458985</ts>
    <user>U0EUHKVGB</user>
    <text>then run webpack from there.</text>
  </message>
  <message>
    <ts>2017-06-26T11:03:40.466784</ts>
    <user>U0EUHKVGB</user>
    <text>`source-directories : "../../some_read_only_dir"`</text>
  </message>
  <message>
    <ts>2017-06-26T11:04:21.483292</ts>
    <user>U52GHJJTU</user>
    <text>Ah, that would do the trick. Running `elm-package` will be somewhat harder, but with this setup running `npm` is also hard :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-26T11:04:42.491327</ts>
    <user>U52GHJJTU</user>
    <text>Thanks :thumbsup:</text>
  </message>
  <message>
    <ts>2017-06-26T11:33:40.188327</ts>
    <user>U5FU80S06</user>
    <text>I want to create a module for serving unique IDs, but cannot figure out how. I know this is static: ```module ID exposing (ID(..), new)

type ID = ID Int

count = 0

new =
    let
        newCount = count + 1
    in
        ID newCount``` but this is definitely wrong: ```new =
    let
        count = count + 1
    in
        ID count```</text>
  </message>
  <message>
    <ts>2017-06-26T11:35:44.236979</ts>
    <user>U0EUHKVGB</user>
    <text>You cannot do that.</text>
  </message>
  <message>
    <ts>2017-06-26T11:35:51.239897</ts>
    <user>U0EUHKVGB</user>
    <text>You have to pass in the previous ID</text>
  </message>
  <message>
    <ts>2017-06-26T11:36:13.248506</ts>
    <user>U0EUHKVGB</user>
    <text>Alternatively, look at this package which provides a way of generating UUIDs: &lt;http://package.elm-lang.org/packages/danyx23/elm-uuid/latest&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T11:36:38.258170</ts>
    <user>U0EUHKVGB</user>
    <text>And here for a minimal example of usage: &lt;https://github.com/danyx23/elm-uuid/blob/2.1.0/examples/Minimal.elm&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T11:37:56.288332</ts>
    <user>U5H8JJP24</user>
    <text>Is there somewhere an example for decoding a simple Union Type into a String ?
```
type Theme =
    Black
    | White
```</text>
  </message>
  <message>
    <ts>2017-06-26T11:38:27.300723</ts>
    <user>U0EUHKVGB</user>
    <text>&lt;@U5H8JJP24&gt;, you can use `toString` for that</text>
  </message>
  <message>
    <ts>2017-06-26T11:38:45.307108</ts>
    <user>U0EUHKVGB</user>
    <text>Or implement a function which is `Theme -&amp;gt; String` if you don't want the default toString</text>
  </message>
  <message>
    <ts>2017-06-26T11:39:16.318937</ts>
    <user>U5H8JJP24</user>
    <text>&lt;@U0EUHKVGB&gt; Thx I will have a try</text>
  </message>
  <message>
    <ts>2017-06-26T11:45:34.465787</ts>
    <user>U5FU80S06</user>
    <text>&lt;@U0EUHKVGB&gt;  Doesn't passing in the previous ID break information hiding? It is interesting that something trivial in JS is not so in Elm.</text>
  </message>
  <message>
    <ts>2017-06-26T11:46:53.496321</ts>
    <user>U3SJEDR96</user>
    <text>UUID's tend to involve randomness, which means "do something else every single time". It makes sense for that to not be trivial in a language where all functions should return the same result every times they're called, though it definitely makes some things harder..</text>
  </message>
  <message>
    <ts>2017-06-26T11:48:21.530465</ts>
    <user>U0K92QFST</user>
    <text>&lt;@U5FU80S06&gt; it looks like you want the "ID" module to keep track of an internal state, which is impossible given Elm's design</text>
  </message>
  <message>
    <ts>2017-06-26T11:48:27.532885</ts>
    <user>U0EUHKVGB</user>
    <text>&lt;@U5FU80S06&gt; Lots of things are trivial in a language with unmanaged side-effects.</text>
  </message>
  <message>
    <ts>2017-06-26T11:48:42.538784</ts>
    <user>U0EUHKVGB</user>
    <text>Elm is a different language. Some things are trivial in Elm that aren't in JS</text>
  </message>
  <message>
    <ts>2017-06-26T11:48:50.541696</ts>
    <user>U0EUHKVGB</user>
    <text>For example, writing code that does not break :wink:</text>
  </message>
  <message>
    <ts>2017-06-26T11:49:12.549942</ts>
    <user>U0EUHKVGB</user>
    <text>Storing an ID is a side-effect.</text>
  </message>
  <message>
    <ts>2017-06-26T11:49:27.555929</ts>
    <user>U0EUHKVGB</user>
    <text>The way to solve that in Elm is to use a generator, like the package I linked.</text>
  </message>
  <message>
    <ts>2017-06-26T11:54:37.675487</ts>
    <user>U5FU80S06</user>
    <text>As an aside, the official doc which shows the similarities between JS and Elm, should also point out some major dissimilarities such as lack of side effects...</text>
  </message>
  <message>
    <ts>2017-06-26T11:55:02.684936</ts>
    <user>U0K92QFST</user>
    <text>:point_up: &lt;https://guide.elm-lang.org/core_language.html&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T11:55:31.696603</ts>
    <user>U0EUHKVGB</user>
    <text>Techincally, in Elm, we have side effects - they are just managed side effects which are represented via `Task`s, `Cmd`s, and `Sub`s</text>
  </message>
  <message>
    <ts>2017-06-26T11:55:45.701921</ts>
    <user>U0EUHKVGB</user>
    <text>Which is how that library works :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-26T12:14:41.130939</ts>
    <user>U0JFGGZS6</user>
    <text>&lt;@U353R9MA8&gt;  If you're interested, I released this as its own package -&amp;gt; &lt;http://package.elm-lang.org/packages/ericgj/elm-csv-decode/latest&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T12:34:24.551739</ts>
    <user>U353R9MA8</user>
    <text>Thanks &lt;@U0JFGGZS6&gt; .</text>
  </message>
  <message>
    <ts>2017-06-26T13:03:33.162404</ts>
    <user>U5AEH3L05</user>
    <text>What's the idiomatic way to map over 2 adjacent elements in a list? e.g., I want to get the differences between adjacent elements, so I need a function that maps: `[1,4,6,9] =&amp;gt; [3,2,3]`</text>
  </message>
  <message>
    <ts>2017-06-26T13:03:44.166132</ts>
    <user>U5AEH3L05</user>
    <text>But generically, for any fn that takes 2 values?</text>
  </message>
  <message>
    <ts>2017-06-26T13:04:02.172685</ts>
    <user>U5AEH3L05</user>
    <text>I wrote my own little function for it but I've run into it enough times that I'm wondering if there's already a functional way to do this that I'm missing</text>
  </message>
  <message>
    <ts>2017-06-26T13:07:17.240065</ts>
    <user>U0J1M0F32</user>
    <text>List-Extra has a lot of list helper functions that are sort of a community agreed upon idiomatic way of building out these functions. You may also find something to simplify the function you wrote. &lt;http://package.elm-lang.org/packages/elm-community/list-extra/6.1.0/List-Extra&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T13:08:37.266173</ts>
    <user>U5AEH3L05</user>
    <text>aha, looks like I wanted scanr!</text>
  </message>
  <message>
    <ts>2017-06-26T13:08:43.268476</ts>
    <user>U0J1M0F32</user>
    <text>:thumbsup:</text>
  </message>
  <message>
    <ts>2017-06-26T13:08:55.272501</ts>
    <user>U5AEH3L05</user>
    <text>Wait, nope. I'll keep reading. Thanks justin!</text>
  </message>
  <message>
    <ts>2017-06-26T13:11:17.319766</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5AEH3L05&gt; I think this is the right search, but I'm not seeing anything: &lt;https://klaftertief.github.io/elm-search/?q=(a+-%3E+a+-%3E+b)+-%3E+List+a+-%3E+List+b&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T13:11:35.325567</ts>
    <user>U5AEH3L05</user>
    <text>&lt;@U48AEBJQ3&gt; Yeah, I just tried that as well and didn't see anything</text>
  </message>
  <message>
    <ts>2017-06-26T13:11:55.332351</ts>
    <user>U0LPMPL2U</user>
    <text>You could use `foldl`. Any fancier function would probably be implemented in terms of `foldl`</text>
  </message>
  <message>
    <ts>2017-06-26T13:13:23.362816</ts>
    <user>U5AEH3L05</user>
    <text>Got it. Okay, sounds like the version i have is as idiomatic as it gets!</text>
  </message>
  <message>
    <ts>2017-06-26T13:13:47.371005</ts>
    <user>U5AEH3L05</user>
    <text>For reference, that looks like: 
```
pairwiseMap : (a -&amp;gt; a -&amp;gt; b) -&amp;gt; List a -&amp;gt; List b
pairwiseMap fn list =
    case list of
        a :: b :: xs -&amp;gt;
            (fn a b) :: (pairwiseMap fn (b :: xs))

        _ -&amp;gt;
            []
```</text>
  </message>
  <message>
    <ts>2017-06-26T13:19:22.483955</ts>
    <user>U0J1M0F32</user>
    <text>I like it.</text>
  </message>
  <message>
    <ts>2017-06-26T13:23:07.558927</ts>
    <user>U5AEH3L05</user>
    <text>I guess what I'm wondering is -- am I thinking about this wrong if I keep running into this?!</text>
  </message>
  <message>
    <ts>2017-06-26T13:23:08.559202</ts>
    <user>U5AEH3L05</user>
    <text>&lt;https://media.giphy.com/media/NPyHgTkMStCXC/giphy.gif&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T13:32:53.764770</ts>
    <user>U48AEBJQ3</user>
    <text>theotherben:
```
mapAdjacent : (a -&amp;gt; a -&amp;gt; b) -&amp;gt; List a -&amp;gt; List b
mapAdjacent f xs =
    xs
        |&amp;gt; List.foldr
            (\x ( next, acc ) -&amp;gt;
                case next of
                    Nothing -&amp;gt;
                        ( Just x, acc )

                    Just y -&amp;gt;
                        ( Just x, f y x :: acc )
            )
            ( Nothing, [] )
        |&amp;gt; Tuple.second
```</text>
  </message>
  <message>
    <ts>2017-06-26T13:33:26.776027</ts>
    <user>U48AEBJQ3</user>
    <text>Just as an alternative. I don't think it is really better.</text>
  </message>
  <message>
    <ts>2017-06-26T13:34:10.791329</ts>
    <user>U0J1M0F32</user>
    <text>Depends on what it is you're trying to do.</text>
  </message>
  <message>
    <ts>2017-06-26T13:34:35.800181</ts>
    <user>U0J1M0F32</user>
    <text>In my experience, from being here in &lt;#C192T0Q1E|beginners&gt; for a long time, a lot of people run into issues when they aren't leveraging the type system fully.</text>
  </message>
  <message>
    <ts>2017-06-26T13:34:57.807825</ts>
    <user>U0J1M0F32</user>
    <text>Or their datastructures could be remapped.</text>
  </message>
  <message>
    <ts>2017-06-26T13:42:03.956322</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5AEH3L05&gt; By 'this' do you mean wanting to use functions which aren't already part of some standard package? I don't think that should necessarily discourage you. Elm's ethos is to be cautious about deciding which features to add in an effort to encourage exploration and experimentation to see if we can find good solutions without extra complexity.</text>
  </message>
  <message>
    <ts>2017-06-26T13:42:33.966912</ts>
    <user>U23SA861Y</user>
    <text>a pairwise map is a perfectly reasonable method of traversing a list, however it is preferrable to implement it via the base fold method as opposed to recursion</text>
  </message>
  <message>
    <ts>2017-06-26T13:43:07.978821</ts>
    <user>U5AEH3L05</user>
    <text>Ahh, thanks for showing me how to do it with foldr! I was thinking about that.</text>
  </message>
  <message>
    <ts>2017-06-26T13:43:21.983782</ts>
    <user>U5AEH3L05</user>
    <text>&lt;@U23SA861Y&gt; why's that?</text>
  </message>
  <message>
    <ts>2017-06-26T13:43:53.995212</ts>
    <user>U5AEH3L05</user>
    <text>&lt;@U48AEBJQ3&gt; Good to know. I guess it felt like I saw every other kind of map but this :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-26T13:44:31.008850</ts>
    <user>U23SA861Y</user>
    <text>By specifying exactly what you want things can be optimized under the hood. While there are things like `tail call optimization` that exist in functional languages that help this it is really easy to get recursion wrong</text>
  </message>
  <message>
    <ts>2017-06-26T13:44:40.012035</ts>
    <user>U23SA861Y</user>
    <text>or to write in a way which will pop the stack</text>
  </message>
  <message>
    <ts>2017-06-26T13:45:13.024009</ts>
    <user>U3SJEDR96</user>
    <text>for example, your implementation isn't stack-safe, &lt;@U5AEH3L05&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T13:46:14.046038</ts>
    <user>U5AEH3L05</user>
    <text>Makes sense -- I'm still not as comfortable with folds as i'd like to be!</text>
  </message>
  <message>
    <ts>2017-06-26T13:46:43.056455</ts>
    <user>U23SA861Y</user>
    <text>fold is sort of the ultimate traversal primative</text>
  </message>
  <message>
    <ts>2017-06-26T13:47:08.065089</ts>
    <user>U23SA861Y</user>
    <text>you can use it to implement map for example. Getting a feel for fold helps alot.</text>
  </message>
  <message>
    <ts>2017-06-26T13:47:08.065339</ts>
    <user>U5AEH3L05</user>
    <text>it hadn't crossed my mind to use fold with a tuple before, but &lt;@U48AEBJQ3&gt; had a nice implementation with it</text>
  </message>
  <message>
    <ts>2017-06-26T13:49:41.119300</ts>
    <user>U4F64AKQV</user>
    <text>Might be a good addition to List.Extra. Consider submitting a PR.</text>
  </message>
  <message>
    <ts>2017-06-26T13:51:22.156369</ts>
    <user>U23SA861Y</user>
    <text>can get even better I think</text>
  </message>
  <message>
    <ts>2017-06-26T13:53:36.205968</ts>
    <user>U5AEH3L05</user>
    <text>I'll try and chip away at it for fun. should I prefer foldl vs foldr for any reason?</text>
  </message>
  <message>
    <ts>2017-06-26T13:54:05.216681</ts>
    <user>U23SA861Y</user>
    <text>it depends on what you want/need</text>
  </message>
  <message>
    <ts>2017-06-26T13:54:25.224558</ts>
    <user>U23SA861Y</user>
    <text>foldl starts processing right away which foldr needs to traverse to the bottom before it processes back up</text>
  </message>
  <message>
    <ts>2017-06-26T13:54:32.226982</ts>
    <user>U23SA861Y</user>
    <text>you might even be able to do it with map</text>
  </message>
  <message>
    <ts>2017-06-26T13:55:34.250520</ts>
    <user>U23SA861Y</user>
    <text>```
scanl: (a -&amp;gt; a -&amp;gt; b) -&amp;gt; List a -&amp;gt; List b
scanl fn l =
    List.tail l
        |&amp;gt; Maybe.withDefault []
        |&amp;gt; (\x -&amp;gt; List.map2 (,) x l)
        |&amp;gt; List.map (uncurry fn) 
```</text>
  </message>
  <message>
    <ts>2017-06-26T13:58:24.312725</ts>
    <user>U5AEH3L05</user>
    <text>I like that -- split it into two lists and then operate on those</text>
  </message>
  <message>
    <ts>2017-06-26T13:58:39.318651</ts>
    <user>U48AEBJQ3</user>
    <text>How about
```
    List.Extra.zip
        xs
        (List.tail xs |&amp;gt; Maybe.withDefault [])
        |&amp;gt; List.map (uncurry f)
```</text>
  </message>
  <message>
    <ts>2017-06-26T13:58:54.324168</ts>
    <user>U23SA861Y</user>
    <text>what you doing with List.extra in there</text>
  </message>
  <message>
    <ts>2017-06-26T13:58:58.325415</ts>
    <user>U23SA861Y</user>
    <text>you don't need that</text>
  </message>
  <message>
    <ts>2017-06-26T14:00:07.352288</ts>
    <user>U48AEBJQ3</user>
    <text>Because `List.Extra` already implements zip?</text>
  </message>
  <message>
    <ts>2017-06-26T14:00:47.368242</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U48AEBJQ3&gt; That last implementation is probably as nice as it will get.</text>
  </message>
  <message>
    <ts>2017-06-26T14:01:31.384833</ts>
    <user>U23SA861Y</user>
    <text>zip is just map2</text>
  </message>
  <message>
    <ts>2017-06-26T14:01:44.389202</ts>
    <user>U23SA861Y</user>
    <text>I wouldn't pull an import just for (,)</text>
  </message>
  <message>
    <ts>2017-06-26T14:02:15.400578</ts>
    <user>U4F64AKQV</user>
    <text>In all likelihood you'll be using other stuff from List.Extra anyway</text>
  </message>
  <message>
    <ts>2017-06-26T14:02:37.408809</ts>
    <user>U23SA861Y</user>
    <text>```
scanl: (a -&amp;gt; a -&amp;gt; b) -&amp;gt; List a -&amp;gt; List b
scanl fn l =
    List.tail l
        |&amp;gt; Maybe.withDefault []
        |&amp;gt; List.map2 (flip fn) l 
```</text>
  </message>
  <message>
    <ts>2017-06-26T14:04:41.454041</ts>
    <user>U5DDM498S</user>
    <text>what tools would you recommend to mock RESTful APIs?</text>
  </message>
  <message>
    <ts>2017-06-26T14:05:05.463071</ts>
    <user>U48AEBJQ3</user>
    <text>I would still at least go
```
    List.map2 f
        xs
        (List.tail xs |&amp;gt; Maybe.withDefault [])
```</text>
  </message>
  <message>
    <ts>2017-06-26T14:05:53.479899</ts>
    <user>U2UGVS24E</user>
    <text>&lt;@U5DDM498S&gt; do you mean a path that you can send data to?</text>
  </message>
  <message>
    <ts>2017-06-26T14:05:57.481476</ts>
    <user>U2UGVS24E</user>
    <text>and get a response from?</text>
  </message>
  <message>
    <ts>2017-06-26T14:06:23.489677</ts>
    <user>U5DDM498S</user>
    <text>yes, responses can be hardcoded</text>
  </message>
  <message>
    <ts>2017-06-26T14:06:34.494206</ts>
    <user>U23SA861Y</user>
    <text>then just a static webserver</text>
  </message>
  <message>
    <ts>2017-06-26T14:06:34.494479</ts>
    <user>U5DDM498S</user>
    <text>but handle different HTTP verbs and URLs</text>
  </message>
  <message>
    <ts>2017-06-26T14:06:44.497853</ts>
    <user>U5AEH3L05</user>
    <text>man y'all cut that function down real good. thanks for showing me how nice it can get!</text>
  </message>
  <message>
    <ts>2017-06-26T14:06:53.500748</ts>
    <user>U2UGVS24E</user>
    <text>You should be able to make a single file Flask (Python) app or Express (nodejs) app without much work</text>
  </message>
  <message>
    <ts>2017-06-26T14:08:01.525018</ts>
    <user>U2UGVS24E</user>
    <text>I just googled and found this example:</text>
  </message>
  <message>
    <ts>2017-06-26T14:08:53.543116</ts>
    <user>U2UGVS24E</user>
    <text>you can probably define more paths user `&lt;http://router.post|router.post&gt;`, `router.put`, etc in the middle section</text>
  </message>
  <message>
    <ts>2017-06-26T14:09:00.545918</ts>
    <user>U5DDM498S</user>
    <text>thanks, I see I can also serve a static JSON file</text>
  </message>
  <message>
    <ts>2017-06-26T14:09:01.546093</ts>
    <user>U2UGVS24E</user>
    <text>then just install node and run it with `node server.js`</text>
  </message>
  <message>
    <ts>2017-06-26T14:09:32.557410</ts>
    <user>U2UGVS24E</user>
    <text>yeah you could do that as well, but then you need to define different responses for each verb if that's what you want to test</text>
  </message>
  <message>
    <ts>2017-06-26T14:09:59.567008</ts>
    <user>U5DDM498S</user>
    <text>yes, I'd like to design an API and build the Elm front-end, but not worry about the API implementation details</text>
  </message>
  <message>
    <ts>2017-06-26T14:10:17.573771</ts>
    <user>U2UGVS24E</user>
    <text>indeed, that's how it should be done</text>
  </message>
  <message>
    <ts>2017-06-26T14:42:14.267146</ts>
    <user>U5Z0YQN3S</user>
    <text>Does anyone have a good pattern for propagating sub-view errors (like HTTP 404) to a parent view to have it display a nice not-found page? I was trying to follow this example(&lt;https://github.com/rtfeldman/elm-spa-example&gt;) but it is not clear how the `NotFound` page is set.</text>
  </message>
  <message>
    <ts>2017-06-26T14:46:19.352869</ts>
    <user>U0LPMPL2U</user>
    <text>It looks like it's being set here: &lt;https://github.com/rtfeldman/elm-spa-example/blob/master/src/Main.elm#L252&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T14:46:32.357420</ts>
    <user>U0LPMPL2U</user>
    <text>in response to a `Maybe Route` being `Nothing`</text>
  </message>
  <message>
    <ts>2017-06-26T14:47:49.384871</ts>
    <user>U5Z0YQN3S</user>
    <text>When does the `SetRoute` get set as the model then? &lt;https://github.com/rtfeldman/elm-spa-example/blob/master/src/Main.elm#L336&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T14:48:59.409399</ts>
    <user>U5Z0YQN3S</user>
    <text>I'm new to `elm`, but familiar with the functional concepts. The difficulty has been the patterns of `elm`. These are state machines, but the transitions between states are hard to hunt down. Wish they were more declarative.</text>
  </message>
  <message>
    <ts>2017-06-26T14:52:35.486990</ts>
    <user>U5FU80S06</user>
    <text>If I want to call `update` programatically, should I do so, or is there a recommended technique?</text>
  </message>
  <message>
    <ts>2017-06-26T14:53:32.507224</ts>
    <user>U23SA861Y</user>
    <text>umm, it is just a function. If it's the same function you are passing to program, then that seems a little odd.</text>
  </message>
  <message>
    <ts>2017-06-26T14:55:39.552774</ts>
    <user>U2XRG0UKA</user>
    <text>Call it programmatically. Nothing odd about doing that.</text>
  </message>
  <message>
    <ts>2017-06-26T14:57:09.584521</ts>
    <user>U0LPMPL2U</user>
    <text>If you are calling `update` programatically for code re-use, you probably want to extract a function instead</text>
  </message>
  <message>
    <ts>2017-06-26T14:58:21.610433</ts>
    <user>U0LPMPL2U</user>
    <text>```
udpate msg model =
  case msg of
    Msg1 -&amp;gt; doThing
    Msg2 -&amp;gt; doThing
```

_not_

```
update msg model =
  case msg of
    Msg1 -&amp;gt; { model | name = "foo" }
    Msg2 -&amp;gt; update Msg1 model
```</text>
  </message>
  <message>
    <ts>2017-06-26T14:58:58.623451</ts>
    <user>U4JT89FGB</user>
    <text>&lt;@U5Z0YQN3S&gt; `SetRoute` is the command passed here: &lt;https://github.com/rtfeldman/elm-spa-example/blob/master/src/Main.elm#L476&gt; if you take a look at the source of `Navigation.programWithFlags` it will give more ideas of what is going on</text>
  </message>
  <message>
    <ts>2017-06-26T15:53:34.695506</ts>
    <user>U5WD40ZA9</user>
    <text>I have the following regular expression:

 "^[\s\da-zA-ZåäöÅÄÖ&amp;amp;()+*é,.‘-]*"

But for some reason I get the following error :

(line 1, column 5): unexpected "s" expecting space, "&amp;amp;" or escape code

Anyone see something that I don't…?</text>
  </message>
  <message>
    <ts>2017-06-26T16:02:35.878336</ts>
    <user>U5FU80S06</user>
    <text>Can `update` be called programatically from inside `update` ?</text>
  </message>
  <message>
    <ts>2017-06-26T16:03:02.887288</ts>
    <user>U0EUHKVGB</user>
    <text>Yes, but it's generally not a great idea</text>
  </message>
  <message>
    <ts>2017-06-26T16:03:20.893458</ts>
    <user>U0EUHKVGB</user>
    <text>You are better off pulling out the "common" part into a helper function and call that instead :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-26T16:03:21.893662</ts>
    <user>U57KYFW67</user>
    <text>`update` is just a function like anything else. But note that it doesn't actually change your state.</text>
  </message>
  <message>
    <ts>2017-06-26T16:04:10.909888</ts>
    <user>U57KYFW67</user>
    <text>so the name is a bit misleading in that regard, since it doesn't perform any actual update, but rather generates the new value of your model for the Elm runtime to work with</text>
  </message>
  <message>
    <ts>2017-06-26T16:05:13.930328</ts>
    <user>U5FU80S06</user>
    <text>That's fine.</text>
  </message>
  <message>
    <ts>2017-06-26T16:05:44.940733</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;https://elmlang.slack.com/archives/C192T0Q1E/p1498503501610433&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T16:06:31.956094</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U5FFVDC4W&gt; here's an example of DRYing up an `update` without programatically calling `update` again</text>
  </message>
  <message>
    <ts>2017-06-26T16:13:51.098041</ts>
    <user>U5VTA57UN</user>
    <text>What's the idomatic way to access cookies in elm?  (Django sets a CSRF token cookie, I need to access it to include it in a POST)</text>
  </message>
  <message>
    <ts>2017-06-26T16:15:18.126189</ts>
    <user>U0LPMPL2U</user>
    <text>Cookies aren't normally used in API requests (in general, not Elm-specific)</text>
  </message>
  <message>
    <ts>2017-06-26T16:17:30.168947</ts>
    <user>U0LPMPL2U</user>
    <text>Also, see this: &lt;http://tech.noredink.com/post/147676730053/maybe-the-cookies-api-should-not-exist&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T16:20:47.233533</ts>
    <user>U0FP80EKB</user>
    <text>Does Django set it as a cookie, not as a piece of the form field? In Rails, it is generally put into the form as a hidden field.</text>
  </message>
  <message>
    <ts>2017-06-26T16:21:03.238866</ts>
    <user>U0FP80EKB</user>
    <text>In an API, though, the CSRF field (usually generated when building a new form) isn't used.</text>
  </message>
  <message>
    <ts>2017-06-26T16:21:32.248295</ts>
    <user>U0FP80EKB</user>
    <text>Cookies, though, travel along with the http request, which comes in handy when integrating with an existing system (at least for us), because it carries session information.</text>
  </message>
  <message>
    <ts>2017-06-26T16:21:49.253769</ts>
    <user>U0FP80EKB</user>
    <text>But, there's probably a question about whether you should have the CSRF token</text>
  </message>
  <message>
    <ts>2017-06-26T16:23:33.287450</ts>
    <user>U5VTA57UN</user>
    <text>Django sets it as both, and it is more typical to find it in the form field.  However, because my app is an SPA that handles login, and CSRF tokens are rotated on login, I need a mechanism to pick up the CSRF token without the usual embedding mechanism.</text>
  </message>
  <message>
    <ts>2017-06-26T16:24:39.308838</ts>
    <user>U0FP80EKB</user>
    <text>Personally, we disabled CSRF checking are relying on other mechanisms</text>
  </message>
  <message>
    <ts>2017-06-26T16:25:04.317407</ts>
    <user>U0FP80EKB</user>
    <text>Although we don't use Elm for the login screen</text>
  </message>
  <message>
    <ts>2017-06-26T16:25:09.319067</ts>
    <user>U0FP80EKB</user>
    <text>relying just on a standard form</text>
  </message>
  <message>
    <ts>2017-06-26T16:25:15.320976</ts>
    <user>U0FP80EKB</user>
    <text>So we do have the token then</text>
  </message>
  <message>
    <ts>2017-06-26T16:26:21.342790</ts>
    <user>U5VTA57UN</user>
    <text>That may be a better solution in my case as well.  Thanks.</text>
  </message>
  <message>
    <ts>2017-06-26T16:35:55.531970</ts>
    <user>U0LPMPL2U</user>
    <text>One option would be to pass the model</text>
  </message>
  <message>
    <ts>2017-06-26T16:36:09.536208</ts>
    <user>U0J1M0F32</user>
    <text>I would pass the whole model into `htmlNote`, or the one other object you need.</text>
  </message>
  <message>
    <ts>2017-06-26T16:36:25.541189</ts>
    <user>U0LPMPL2U</user>
    <text>So the signature would now be `htmlNote : Model -&amp;gt; Note -&amp;gt; Html Msg`</text>
  </message>
  <message>
    <ts>2017-06-26T16:36:48.548334</ts>
    <user>U0LPMPL2U</user>
    <text>In your `map`, you'd do something like `List.map (htmlNote model) model.notes`</text>
  </message>
  <message>
    <ts>2017-06-26T16:38:19.577339</ts>
    <user>U0LPMPL2U</user>
    <text>Passing a just the first argument to `htmlNote` here is a trick called "partial application". I'm glad to explain more if you haven't encountered that yet :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-26T16:40:50.625368</ts>
    <user>U5Z3Y472L</user>
    <text>Hi!</text>
  </message>
  <message>
    <ts>2017-06-26T16:43:32.677529</ts>
    <user>U5KEJPXHP</user>
    <text>&lt;@U0LPMPL2U&gt; I attempted something like this before and couldn't get it to work. I'm going to attempt again and see what happens. Thanks!</text>
  </message>
  <message>
    <ts>2017-06-26T16:46:38.736955</ts>
    <user>U3SQ42JJW</user>
    <text>Hi everyone. I have a question, maybe someone can help. 
I am writing a module that I would like to publish one day. 
I am struggling with the elm package documentation.
I have a type Catalogue which looks like this:</text>
  </message>
  <message>
    <ts>2017-06-26T16:46:55.742391</ts>
    <user>U3SQ42JJW</user>
    <text>```type Catalogue
    = Catalogue
        { previous : List Question
        , current : Question
        , remaining : List Question
        }
```</text>
  </message>
  <message>
    <ts>2017-06-26T16:48:19.770006</ts>
    <user>U3SQ42JJW</user>
    <text>I want to hide the implementation details in the documentation. I only want to mention type Catalogue, not the whole type</text>
  </message>
  <message>
    <ts>2017-06-26T16:49:29.791808</ts>
    <user>U3SQ42JJW</user>
    <text>Problem is, when I mention 
```
@docs Catalogue
```
I get the whole type. But that should be hidden in the Documentation…</text>
  </message>
  <message>
    <ts>2017-06-26T16:51:51.837438</ts>
    <user>U3SQ42JJW</user>
    <text>Don't know if its cleared what i want…. :confused:</text>
  </message>
  <message>
    <ts>2017-06-26T16:52:47.855253</ts>
    <user>U5Z3Y472L</user>
    <text>I was looking at Richard Feldman's SPA example. In some file he uses a =&amp;gt; operator. Unless I missed something, I haven't encountered this yet, although I followed a bunch of tutos and read Richard's Book. By example in &lt;https://github.com/rtfeldman/elm-spa-example/blob/master/src/Page/Login.elm&gt; there is:</text>
  </message>
  <message>
    <ts>2017-06-26T16:52:49.856012</ts>
    <user>U5Z3Y472L</user>
    <text>SetEmail email -&amp;gt;
            { model | email = email }
                =&amp;gt; Cmd.none
=&amp;gt; NoOp</text>
  </message>
  <message>
    <ts>2017-06-26T16:59:12.979625</ts>
    <user>U14Q8S4EM</user>
    <text>Yeah &lt;@U5Z3Y472L&gt; , did you have a question about that? Making your own operators is almost always a bad idea.</text>
  </message>
  <message>
    <ts>2017-06-26T16:59:33.986568</ts>
    <user>U14Q8S4EM</user>
    <text>I think Richards use is maybe one of the exceptions where its handy. Maybe not tho.</text>
  </message>
  <message>
    <ts>2017-06-26T17:00:10.999214</ts>
    <user>U14Q8S4EM</user>
    <text>Personally I do something just like Richards `=&amp;gt;` but I do `:=` instead. I dont really understand how an arrow conveys what `(,)` does.</text>
  </message>
  <message>
    <ts>2017-06-26T17:00:35.008123</ts>
    <user>U5Z3Y472L</user>
    <text>ok, I thought it was something I did not know yet about elm, but it's a user defined operator</text>
  </message>
  <message>
    <ts>2017-06-26T17:01:01.017028</ts>
    <user>U5Z3Y472L</user>
    <text>thanks &lt;@U14Q8S4EM&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T17:01:14.021262</ts>
    <user>U14Q8S4EM</user>
    <text>Sure thing!</text>
  </message>
  <message>
    <ts>2017-06-26T17:02:03.037157</ts>
    <user>U1L4GLFJ6</user>
    <text>hello guys I need help writing a decoder</text>
  </message>
  <message>
    <ts>2017-06-26T17:02:11.039525</ts>
    <user>U1L4GLFJ6</user>
    <text>is there any way to break that process up into small steps</text>
  </message>
  <message>
    <ts>2017-06-26T17:02:16.041343</ts>
    <user>U1L4GLFJ6</user>
    <text>JSON decoder</text>
  </message>
  <message>
    <ts>2017-06-26T17:02:22.043196</ts>
    <user>U0LPMPL2U</user>
    <text>yes!</text>
  </message>
  <message>
    <ts>2017-06-26T17:02:32.046316</ts>
    <user>U0LPMPL2U</user>
    <text>in fact, that's the easiest way to build a decoder</text>
  </message>
  <message>
    <ts>2017-06-26T17:02:44.050061</ts>
    <user>U0LPMPL2U</user>
    <text>start with the smallest parts of your decoder</text>
  </message>
  <message>
    <ts>2017-06-26T17:02:48.051288</ts>
    <user>U1L4GLFJ6</user>
    <text>my JSON file is thousands of lines long there's really no way to understand it completely the first time</text>
  </message>
  <message>
    <ts>2017-06-26T17:02:53.052781</ts>
    <user>U0LPMPL2U</user>
    <text>then combine them into more complex parts</text>
  </message>
  <message>
    <ts>2017-06-26T17:03:52.071260</ts>
    <user>U0LPMPL2U</user>
    <text>Also, there are automated tools like &lt;https://eeue56.github.io/json-to-elm/&gt; that might be helpful</text>
  </message>
  <message>
    <ts>2017-06-26T17:04:01.074069</ts>
    <user>U1L4GLFJ6</user>
    <text>In JSON they are written `List [Int, Int]` but in Elm they could be `List (Int, Int)`</text>
  </message>
  <message>
    <ts>2017-06-26T17:06:27.119077</ts>
    <user>U1L4GLFJ6</user>
    <text>your website returned me a very simmple answer</text>
  </message>
  <message>
    <ts>2017-06-26T17:07:15.133157</ts>
    <user>U1L4GLFJ6</user>
    <text>```import Json.Encode
import Json.Decode exposing (field)

type alias Something =
    { municipios : List ComplexType
    }

decodeSomething : Json.Decode.Decoder Something
decodeSomething =
    Json.Decode.map Something
        (field "municipios" Json.Decode.list decodeComplexType)

encodeSomething : Something -&amp;gt; Json.Encode.Value
encodeSomething record =
    Json.Encode.object
        [ ("municipios",  Json.Encode.list &amp;lt;| List.map encodeComplexType &amp;lt;| record.municipios)
        ]```</text>
  </message>
  <message>
    <ts>2017-06-26T17:07:47.142472</ts>
    <user>U1L4GLFJ6</user>
    <text>looks like we may have to keep iterating... ?</text>
  </message>
  <message>
    <ts>2017-06-26T17:08:14.150198</ts>
    <user>U0LPMPL2U</user>
    <text>yeah, looks like it didn't define `decodeComplexType`</text>
  </message>
  <message>
    <ts>2017-06-26T17:08:23.153219</ts>
    <user>U0LPMPL2U</user>
    <text>I could have sworn there was a tuple decoder</text>
  </message>
  <message>
    <ts>2017-06-26T17:10:59.198860</ts>
    <user>U0EUHKVGB</user>
    <text>There is</text>
  </message>
  <message>
    <ts>2017-06-26T17:11:06.200926</ts>
    <user>U0EUHKVGB</user>
    <text>Or, sort of</text>
  </message>
  <message>
    <ts>2017-06-26T17:11:58.215905</ts>
    <user>U0EUHKVGB</user>
    <text>You'll need to combine other decoders to decode a tuple</text>
  </message>
  <message>
    <ts>2017-06-26T17:12:03.217463</ts>
    <user>U23SA861Y</user>
    <text>tuples don't exist in json, so you would use map2 with a tuple constructor</text>
  </message>
  <message>
    <ts>2017-06-26T17:12:04.217833</ts>
    <user>U0EUHKVGB</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Json-Decode#index&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T17:13:26.241336</ts>
    <user>U1L4GLFJ6</user>
    <text>at least your app decodes my file-part way... is there any way to see that intermediate result and keep doing from there?</text>
  </message>
  <message>
    <ts>2017-06-26T17:13:38.244885</ts>
    <user>U1L4GLFJ6</user>
    <text>it sounds like I may have to from the smallest parts first</text>
  </message>
  <message>
    <ts>2017-06-26T17:13:45.246600</ts>
    <user>U1L4GLFJ6</user>
    <text>and play in the terminal</text>
  </message>
  <message>
    <ts>2017-06-26T17:14:07.252931</ts>
    <user>U0LPMPL2U</user>
    <text>So something like:
```
tupleDecoder : Decoder (Int, Int)
tupleDecoder =
  JD.map2 (,) (JD.index 0 &lt;http://JD.int|JD.int&gt;) (JD.index 1 &lt;http://JD.int|JD.int&gt;)
```</text>
  </message>
  <message>
    <ts>2017-06-26T17:14:45.263820</ts>
    <user>U0EUHKVGB</user>
    <text>Indeed</text>
  </message>
  <message>
    <ts>2017-06-26T17:15:05.269614</ts>
    <user>U0LPMPL2U</user>
    <text>Cool. TIL `Json.Decode.index` :thumbsup:</text>
  </message>
  <message>
    <ts>2017-06-26T17:28:52.502293</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U0LPMPL2U&gt; you've had that exact reaction before :smile: (although that was with `Json.Decode.keyValuePairs`)</text>
  </message>
  <message>
    <ts>2017-06-26T17:51:17.849019</ts>
    <user>U0LPMPL2U</user>
    <text>Hahah never stop learning :smile:</text>
  </message>
  <message>
    <ts>2017-06-26T18:07:45.086311</ts>
    <user>U5YK35TAM</user>
    <text>Hello, third day of learning Elm :slightly_smiling_face:

I'm doing the HTTP section of the Elm guide (&lt;https://guide.elm-lang.org/architecture/effects/http.html&gt;), and was wondering what's the best way of fetching the gif when the program starts? I've got something working, but feels a bit hacky...

&lt;https://ellie-app.com/3zXdzhY6nxza1/0&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T18:08:36.097151</ts>
    <user>U23SA861Y</user>
    <text>you should prepare a message that you pass into init</text>
  </message>
  <message>
    <ts>2017-06-26T18:13:17.158042</ts>
    <user>U5YK35TAM</user>
    <text>jonf: thanks, but I see that `init` takes a `Cmd Msg`</text>
  </message>
  <message>
    <ts>2017-06-26T18:13:21.158910</ts>
    <user>U5YK35TAM</user>
    <text>```
init : ( Model, Cmd Msg )
init =
    ( initialModel, Cmd.none)
```</text>
  </message>
  <message>
    <ts>2017-06-26T18:13:45.163736</ts>
    <user>U5YK35TAM</user>
    <text>How to create a Cmd that will end up in the Msg I want?</text>
  </message>
  <message>
    <ts>2017-06-26T18:17:49.215654</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5YK35TAM&gt; you don't need to call `update` you can just have `init` return `(initialModel, getRandomGif model)` directly</text>
  </message>
  <message>
    <ts>2017-06-26T18:21:18.259403</ts>
    <user>U5YK35TAM</user>
    <text>jessta: perfect! that works, thanks :slightly_smiling_face:
I guess what I was fixated on was trying to invoke the `MorePlease` Msg, so the call to `getRandomGif` is not duplicated (in case the behaviour is changed later)</text>
  </message>
  <message>
    <ts>2017-06-26T18:25:01.304047</ts>
    <user>U5AR0LDQA</user>
    <text>Im using &lt;http://package.elm-lang.org/packages/lukewestby/elm-http-builder/5.1.0/HttpBuilder&gt;

What is the best way to handle an empty body response? Im doing a `POST`</text>
  </message>
  <message>
    <ts>2017-06-26T18:25:51.314579</ts>
    <user>U5AR0LDQA</user>
    <text>Or any ideas in general? :smiley: Thanks friends</text>
  </message>
  <message>
    <ts>2017-06-26T18:28:14.342858</ts>
    <user>U153UK3FA</user>
    <text>You can avoid the duplication by putting it in a function and calling that function from both `init` and ` update`</text>
  </message>
  <message>
    <ts>2017-06-26T18:31:24.381797</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5AR0LDQA&gt; &lt;http://package.elm-lang.org/packages/elm-lang/http/1.0.0/Http#expectStringResponse&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T18:32:09.390653</ts>
    <user>U153UK3FA</user>
    <text>&lt;http://package.elm-lang.org/packages/lukewestby/elm-http-builder/5.1.0/HttpBuilder#withExpect&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T18:43:00.515685</ts>
    <user>U5AR0LDQA</user>
    <text>Perfect thank you &lt;@U153UK3FA&gt; :heart:</text>
  </message>
  <message>
    <ts>2017-06-26T18:43:13.518009</ts>
    <user>U5AR0LDQA</user>
    <text>Didn't see expectstringresponse</text>
  </message>
  <message>
    <ts>2017-06-26T19:41:47.126752</ts>
    <user>U0JBSEGHY</user>
    <text>Hey I am a little stuck. I'm looking at the Elm Phoenix Socket library and trying to look at the examples but I keep getting this error ```I cannot find module 'Phoenix.Socket'.

Module 'Chat' is trying to import it.

Potential problems could be:
  * Misspelled the module name
  * Need to add a source directory or new dependency to elm-package.json```</text>
  </message>
  <message>
    <ts>2017-06-26T19:42:18.132011</ts>
    <user>U0JBSEGHY</user>
    <text>This is the `elm-package.json` ```{
    "version": "2.2.0",
    "summary": "Pure Elm state manager for Phoenix channels",
    "repository": "&lt;https://github.com/fbonetti/elm-phoenix-socket.git&gt;",
    "license": "MIT",
    "source-directories": [
        "src"
    ],
    "exposed-modules": [
        "Phoenix.Socket",
        "Phoenix.Channel",
        "Phoenix.Push",
        "Phoenix.Presence"
    ],
    "dependencies": {
        "elm-lang/core": "5.0.0 &amp;lt;= v &amp;lt; 6.0.0",
        "elm-lang/websocket": "1.0.2 &amp;lt;= v &amp;lt; 2.0.0"
    },
    "elm-version": "0.18.0 &amp;lt;= v &amp;lt; 0.19.0"
}```</text>
  </message>
  <message>
    <ts>2017-06-26T19:42:33.134425</ts>
    <user>U0JBSEGHY</user>
    <text>I can't seem to see what is wrong here.</text>
  </message>
  <message>
    <ts>2017-06-26T20:27:14.535356</ts>
    <user>U0JFXEUCT</user>
    <text>have you added the module to your elm-package.json?</text>
  </message>
  <message>
    <ts>2017-06-26T20:33:07.583035</ts>
    <user>U0JBSEGHY</user>
    <text>It's a module that lives within the directory. It is in `exposed-modules` in the `elm-package.json`.</text>
  </message>
  <message>
    <ts>2017-06-26T20:36:20.608880</ts>
    <user>U0JFXEUCT</user>
    <text>That's a little confusing, so you have a package in a local dir?  is Chat.elm in the src directory with it?</text>
  </message>
  <message>
    <ts>2017-06-26T20:37:41.619361</ts>
    <user>U0JBSEGHY</user>
    <text>I've literally pulled down this library &lt;https://github.com/fbonetti/elm-phoenix-socket&gt;. Gone into the examples and got those errors</text>
  </message>
  <message>
    <ts>2017-06-26T20:39:07.630333</ts>
    <user>U0JBSEGHY</user>
    <text>I'm still really new so I've never seen the exposed-modules in elm-package.json. I'm completely stumped as to how I can correct the error</text>
  </message>
  <message>
    <ts>2017-06-26T20:40:10.638465</ts>
    <user>U0JFXEUCT</user>
    <text>ah, got it, so you need to be in the examples dir and call elm-make from there</text>
  </message>
  <message>
    <ts>2017-06-26T20:40:45.643287</ts>
    <user>U0JFXEUCT</user>
    <text>instead of calling `elm-make examples/Chat.elm`</text>
  </message>
  <message>
    <ts>2017-06-26T20:41:02.645592</ts>
    <user>U0JFXEUCT</user>
    <text>you cd into examples and call `elm-make Chat.elm`</text>
  </message>
  <message>
    <ts>2017-06-26T20:41:42.650808</ts>
    <user>U0JFXEUCT</user>
    <text>I realize thats a little weird, but in the examples dir there's a special `elm-package.json` which should make everything work</text>
  </message>
  <message>
    <ts>2017-06-26T20:43:41.665962</ts>
    <user>U0JBSEGHY</user>
    <text>Ok I just did `elm reactor` and entered the examples to try it out and got those errors.</text>
  </message>
  <message>
    <ts>2017-06-26T20:44:01.668419</ts>
    <user>U0JBSEGHY</user>
    <text>So I need to make them first</text>
  </message>
  <message>
    <ts>2017-06-26T20:44:34.672416</ts>
    <user>U0JFXEUCT</user>
    <text>oh, maybe its a thing with elm-reactor ,try starting the elm-reactor in the examples dir</text>
  </message>
  <message>
    <ts>2017-06-26T20:44:46.673948</ts>
    <user>U0JBSEGHY</user>
    <text>already on it</text>
  </message>
  <message>
    <ts>2017-06-26T20:44:50.674386</ts>
    <user>U0JBSEGHY</user>
    <text>that did it</text>
  </message>
  <message>
    <ts>2017-06-26T20:44:58.675255</ts>
    <user>U0JFXEUCT</user>
    <text>awesome</text>
  </message>
  <message>
    <ts>2017-06-26T20:45:02.675957</ts>
    <user>U0JBSEGHY</user>
    <text>cheers!</text>
  </message>
  <message>
    <ts>2017-06-26T20:45:45.682036</ts>
    <user>U0JBSEGHY</user>
    <text>that's a little unexpected behaviour since my experience has just been boot up elm reactor and float around the directories so far</text>
  </message>
  <message>
    <ts>2017-06-26T20:45:59.683834</ts>
    <user>U0JFXEUCT</user>
    <text>yeah, its a little weird</text>
  </message>
  <message>
    <ts>2017-06-26T20:46:06.684816</ts>
    <user>U0JFXEUCT</user>
    <text>its because there are multiple elm-package.json</text>
  </message>
  <message>
    <ts>2017-06-26T20:46:21.686709</ts>
    <user>U0JBSEGHY</user>
    <text>noted</text>
  </message>
  <message>
    <ts>2017-06-26T20:46:25.687181</ts>
    <user>U0JBSEGHY</user>
    <text>thanks a lot</text>
  </message>
  <message>
    <ts>2017-06-26T20:46:40.688994</ts>
    <user>U0JBSEGHY</user>
    <text>:pray:</text>
  </message>
  <message>
    <ts>2017-06-26T21:04:58.838697</ts>
    <user>U5V0HVAKB</user>
    <text>hello all ! someone here ? :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-26T21:05:47.845384</ts>
    <user>U5V0HVAKB</user>
    <text>i am actually want to understand this syntax</text>
  </message>
  <message>
    <ts>2017-06-26T21:05:50.845857</ts>
    <user>U5V0HVAKB</user>
    <text>``` decodeGifUrl: Decode.Decoder String
decodeGifUrl = 
  &lt;http://Decode.at|Decode.at&gt; ["data", "image_url"] Decode.string ```</text>
  </message>
  <message>
    <ts>2017-06-26T21:06:10.848433</ts>
    <user>U5V0HVAKB</user>
    <text>i type my function as a Decode.Decoder String</text>
  </message>
  <message>
    <ts>2017-06-26T21:06:30.851037</ts>
    <user>U5V0HVAKB</user>
    <text>what it mean ?</text>
  </message>
  <message>
    <ts>2017-06-26T21:06:43.852727</ts>
    <user>U5V0HVAKB</user>
    <text>Decode.Decoder is a type alias ?</text>
  </message>
  <message>
    <ts>2017-06-26T21:07:10.855977</ts>
    <user>U5V0HVAKB</user>
    <text>if someone can explain to me how to reproduce it with a simple example</text>
  </message>
  <message>
    <ts>2017-06-26T21:07:41.859904</ts>
    <user>U153UK3FA</user>
    <text>Decode.Decoder is a type from the Json.Decode module</text>
  </message>
  <message>
    <ts>2017-06-26T21:07:50.861040</ts>
    <user>U5V0HVAKB</user>
    <text>ye i see it</text>
  </message>
  <message>
    <ts>2017-06-26T21:08:00.862311</ts>
    <user>U5V0HVAKB</user>
    <text>but even if i read the source code i dont understand the syntax here</text>
  </message>
  <message>
    <ts>2017-06-26T21:09:12.871206</ts>
    <user>U153UK3FA</user>
    <text>`Decode.Decoder String` is a type of json decoder that will produce a `String` when run using &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Json-Decode#decodeString&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T21:11:09.886901</ts>
    <user>U5V0HVAKB</user>
    <text>could explain me how to reproduce it in code like just like this 

``` 
decodeGifUrl: Decod String
decodeGifUrl = 
"hello" 
```</text>
  </message>
  <message>
    <ts>2017-06-26T21:12:25.896897</ts>
    <user>U153UK3FA</user>
    <text>`&lt;http://Decode.at|Decode.at&gt; ["data", "image_url"] Decode.string ` mean ‘create a decoder that when run with some JSON will look for the field `data` and inside that the field `image_url` and get the `String` value</text>
  </message>
  <message>
    <ts>2017-06-26T21:13:03.901679</ts>
    <user>U5V0HVAKB</user>
    <text>i really get what about the return value</text>
  </message>
  <message>
    <ts>2017-06-26T21:13:20.903919</ts>
    <user>U5V0HVAKB</user>
    <text>thats about the syntax in type</text>
  </message>
  <message>
    <ts>2017-06-26T21:13:31.905347</ts>
    <user>U5V0HVAKB</user>
    <text>```decodeGifUrl: Decod String```</text>
  </message>
  <message>
    <ts>2017-06-26T21:13:54.907979</ts>
    <user>U5V0HVAKB</user>
    <text>can you show me if I would like to do this how i have to init it</text>
  </message>
  <message>
    <ts>2017-06-26T21:14:33.912783</ts>
    <user>U5V0HVAKB</user>
    <text>``` type alias Decod = String ``` ?</text>
  </message>
  <message>
    <ts>2017-06-26T21:15:41.921775</ts>
    <user>U153UK3FA</user>
    <text>&lt;https://guide.elm-lang.org/interop/json.html&gt; provides a good introduction to how to write Json decoders</text>
  </message>
  <message>
    <ts>2017-06-26T21:16:37.928586</ts>
    <user>U153UK3FA</user>
    <text>The return value of `decodeGifUrl` isn't a String value that you can use, it's a description of how to obtain that String given some JSON</text>
  </message>
  <message>
    <ts>2017-06-26T21:18:49.944793</ts>
    <user>U153UK3FA</user>
    <text>In the example this function comes from (&lt;https://guide.elm-lang.org/architecture/effects/http.html&gt;) the Decoder returned from `decodeGifUrl` is passed to the HTTP request to be used to decode JSON in the Http response and obtain the url of the gif</text>
  </message>
  <message>
    <ts>2017-06-26T21:19:32.949949</ts>
    <user>U153UK3FA</user>
    <text>eg. the response is this JSON &lt;https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&amp;amp;tag=pizza&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T21:21:30.965178</ts>
    <user>U5V0HVAKB</user>
    <text>i mean i really understand what the decoder do</text>
  </message>
  <message>
    <ts>2017-06-26T21:21:39.966358</ts>
    <user>U5V0HVAKB</user>
    <text>and what return value should be</text>
  </message>
  <message>
    <ts>2017-06-26T21:21:49.967493</ts>
    <user>U5V0HVAKB</user>
    <text>but i am pretty new with elm</text>
  </message>
  <message>
    <ts>2017-06-26T21:22:53.975484</ts>
    <user>U5V0HVAKB</user>
    <text>and i just want to recreate this 
``` 
showME: Test String
showMe= 
"hello" ```

its all about the syntax what "Test" is here</text>
  </message>
  <message>
    <ts>2017-06-26T21:23:09.977419</ts>
    <user>U5V0HVAKB</user>
    <text>what it mean</text>
  </message>
  <message>
    <ts>2017-06-26T21:30:01.029433</ts>
    <user>U153UK3FA</user>
    <text>ah, you're asking about type parameters</text>
  </message>
  <message>
    <ts>2017-06-26T21:30:07.030335</ts>
    <user>U5V0HVAKB</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-06-26T21:30:11.030900</ts>
    <user>U5V0HVAKB</user>
    <text>:slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-26T21:30:16.031590</ts>
    <user>U153UK3FA</user>
    <text>eg. `List Int` is a list of ints</text>
  </message>
  <message>
    <ts>2017-06-26T21:32:18.047908</ts>
    <user>U153UK3FA</user>
    <text>a good example is &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Maybe#Maybe&gt;</text>
  </message>
  <message>
    <ts>2017-06-26T21:32:36.050172</ts>
    <user>U153UK3FA</user>
    <text>```
type Maybe a
    = Just a
    | Nothing
```</text>
  </message>
  <message>
    <ts>2017-06-26T21:33:01.053335</ts>
    <user>U153UK3FA</user>
    <text>the `a` in that type definition is a parameter, it can be any type</text>
  </message>
  <message>
    <ts>2017-06-26T21:33:24.056227</ts>
    <user>U153UK3FA</user>
    <text>You can have a `Maybe Int` or a `Maybe String` etc.</text>
  </message>
  <message>
    <ts>2017-06-26T21:35:25.071325</ts>
    <user>U2FJ2D6M7</user>
    <text>Hello! I'm trying to output some HTML but having trouble breaking up my view. Essentially I would like an input/sentence like "This is a sentence" to be rendered like "&amp;lt;span&amp;gt;This&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;is&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;a&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;sentence&amp;lt;/span&amp;gt;" but having trouble extracting out a method and keeping the types correct. I think is probably a simple thing I'm missing, but if anyone has a spare cycle, would not mind some :eye:s.

```
renderWord word =
    span [ myStyle ] [ text word ]

renderWords sentence =
    let
        words = String.split " " sentence
    in
        List.concat (List.map renderWord words)


view model =
    div []
        [ input [ placeholder "Text to proof", onInput NewContent, myStyle ] []
        , (renderWords model.content)
        ]
```

As more experienced devs might be able to tell, I'm getting an type mismatch:

```
The argument to function `concat` is causing a mismatch. - Function `concat` is expecting the argument to be:

    List (List a)

But it is:

    List (Html msg)
```</text>
  </message>
  <message>
    <ts>2017-06-26T21:36:07.076867</ts>
    <user>U2FJ2D6M7</user>
    <text>I see why it's wrong, but I'm not sure what my option is.</text>
  </message>
  <message>
    <ts>2017-06-26T21:39:50.104161</ts>
    <user>U5V0HVAKB</user>
    <text>List.concat (List.map renderWord words)</text>
  </message>
  <message>
    <ts>2017-06-26T21:39:53.104586</ts>
    <user>U5V0HVAKB</user>
    <text>u are returning a list</text>
  </message>
  <message>
    <ts>2017-06-26T21:40:08.106452</ts>
    <user>U5V0HVAKB</user>
    <text>oh no!</text>
  </message>
  <message>
    <ts>2017-06-26T21:40:13.107055</ts>
    <user>U5V0HVAKB</user>
    <text>List.concat (List.map renderWord words)</text>
  </message>
  <message>
    <ts>2017-06-26T21:40:18.107748</ts>
    <user>U5V0HVAKB</user>
    <text>your renderWord</text>
  </message>
  <message>
    <ts>2017-06-26T21:40:26.108747</ts>
    <user>U5V0HVAKB</user>
    <text>return Html msg type</text>
  </message>
  <message>
    <ts>2017-06-26T21:40:40.110696</ts>
    <user>U2FJ2D6M7</user>
    <text>&lt;@U5V0HVAKB&gt; yes, I take it back, I didn't understand why it was wrong! ‘Fixed' by

```
renderWords sentance =
    let
        words = String.split " " sentance
    in
        div [] (List.map renderWord words)
```</text>
  </message>
  <message>
    <ts>2017-06-26T21:41:11.115011</ts>
    <user>U5V0HVAKB</user>
    <text>the function List.concat</text>
  </message>
  <message>
    <ts>2017-06-26T21:41:22.116411</ts>
    <user>U5V0HVAKB</user>
    <text>expected to have list type arguement of a list type not a list type of html msg</text>
  </message>
  <message>
    <ts>2017-06-26T21:42:55.128164</ts>
    <user>U5V0HVAKB</user>
    <text>i think its about parenthese here</text>
  </message>
  <message>
    <ts>2017-06-26T21:43:05.129300</ts>
    <user>U5V0HVAKB</user>
    <text>List.concat (List.map (renderWord words))</text>
  </message>
  <message>
    <ts>2017-06-26T21:43:11.130114</ts>
    <user>U5V0HVAKB</user>
    <text>try like thius</text>
  </message>
  <message>
    <ts>2017-06-26T21:44:23.139348</ts>
    <user>U5V0HVAKB</user>
    <text>or 
``` 
renderWord words
  |&amp;gt; list.map
  |&amp;gt; list.concat
```</text>
  </message>
  <message>
    <ts>2017-06-26T21:45:22.146440</ts>
    <user>U5V0HVAKB</user>
    <text>&lt;@U2FJ2D6M7&gt; ?</text>
  </message>
  <message>
    <ts>2017-06-26T21:45:53.150489</ts>
    <user>U2FJ2D6M7</user>
    <text>trying</text>
  </message>
  <message>
    <ts>2017-06-26T21:47:42.163863</ts>
    <user>U5V0HVAKB</user>
    <text>if it's working it's all about the left to right  (or maybe the right to left better ^^) reading</text>
  </message>
  <message>
    <ts>2017-06-26T21:51:09.189760</ts>
    <user>U2FJ2D6M7</user>
    <text>I'm getting a different type error now, but if I return a Html msg to the view function then I'm all good</text>
  </message>
  <message>
    <ts>2017-06-26T21:51:27.191885</ts>
    <user>U2FJ2D6M7</user>
    <text>I'm going to keep moving forward, I don't fully grok this at all yet, but hopefully soon</text>
  </message>
  <message>
    <ts>2017-06-26T21:51:31.192348</ts>
    <user>U5V0HVAKB</user>
    <text>yes at the end u have to return a html msg</text>
  </message>
  <message>
    <ts>2017-06-26T21:51:35.192804</ts>
    <user>U2FJ2D6M7</user>
    <text>Appreciate the help &lt;@U5V0HVAKB&gt;!</text>
  </message>
  <message>
    <ts>2017-06-26T21:51:57.195372</ts>
    <user>U5V0HVAKB</user>
    <text>i started few days ago ^^</text>
  </message>
  <message>
    <ts>2017-06-26T21:52:02.195945</ts>
    <user>U5V0HVAKB</user>
    <text>np ask ! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-26T21:57:04.232900</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U2FJ2D6M7&gt; the original problem was that `renderWords` returns a List of Html. This creates a problem in your `view` though, because we can't nest multiple levels of children when creating Html.</text>
  </message>
  <message>
    <ts>2017-06-26T21:57:42.237767</ts>
    <user>U4F64AKQV</user>
    <text>If you call the function as you did, it will attempt to put the list of rendered words as a child of the top level `div`. You do not want that though.</text>
  </message>
  <message>
    <ts>2017-06-26T21:58:31.243727</ts>
    <user>U4F64AKQV</user>
    <text>You want to add everything _inside_ the returned list to the child list of the top-level div</text>
  </message>
  <message>
    <ts>2017-06-26T21:59:27.250491</ts>
    <user>U4F64AKQV</user>
    <text>Ah, actually there's another problem before that one.</text>
  </message>
  <message>
    <ts>2017-06-26T22:03:39.284618</ts>
    <user>U4F64AKQV</user>
    <text>You really want something like this…
```
renderWords sentence =
    let
        words =
            String.split " " sentence
    in
        List.map renderWord words


view model =
    div []
        (input [ placeholder "Text to proof", onInput NewContent, myStyle ] [])
        :: renderWords model.content
```</text>
  </message>
  <message>
    <ts>2017-06-26T22:06:55.309223</ts>
    <user>U5V0HVAKB</user>
    <text>how thats pretty genius to destructuring with ::</text>
  </message>
  <message>
    <ts>2017-06-26T22:06:59.309711</ts>
    <user>U5V0HVAKB</user>
    <text>:slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-26T22:07:01.309892</ts>
    <user>U5V0HVAKB</user>
    <text>gj</text>
  </message>
  <message>
    <ts>2017-06-26T22:07:40.314465</ts>
    <user>U5V0HVAKB</user>
    <text>i will explain a bit more tell me if i am wrong &lt;@U4F64AKQV&gt;.</text>
  </message>
  <message>
    <ts>2017-06-26T22:07:59.316658</ts>
    <user>U5V0HVAKB</user>
    <text>div [] [] the last one is a list</text>
  </message>
  <message>
    <ts>2017-06-26T22:08:37.321248</ts>
    <user>U5V0HVAKB</user>
    <text>by writing 
```
 (input [ placeholder "Text to proof", onInput NewContent, myStyle ] [])
        :: renderWords model.content
```
its the same if you write so 1 :: [2, 3, 4]</text>
  </message>
  <message>
    <ts>2017-06-26T22:08:50.322858</ts>
    <user>U5V0HVAKB</user>
    <text>so that's why it should work</text>
  </message>
  <message>
    <ts>2017-06-26T22:09:18.326110</ts>
    <user>U4F64AKQV</user>
    <text>It also becomes easier to see when you write type annotations.</text>
  </message>
  <message>
    <ts>2017-06-26T22:10:12.332237</ts>
    <user>U5V0HVAKB</user>
    <text>but its should not be 
``` 
div [] [
(input [ placeholder "Text to proof", onInput NewContent, myStyle ] [])
        :: renderWords model.content
]
```</text>
  </message>
  <message>
    <ts>2017-06-26T22:10:14.332545</ts>
    <user>U4F64AKQV</user>
    <text>Alternatively, you could have passed the entire output of `renderWords` to `div []`</text>
  </message>
  <message>
    <ts>2017-06-26T22:10:18.333059</ts>
    <user>U4JT89FGB</user>
    <text>Has anyone had luck getting `Go to definition` reliably working with Elm in VS Code?</text>
  </message>
  <message>
    <ts>2017-06-26T22:10:38.335619</ts>
    <user>U5V0HVAKB</user>
    <text>u didnt miss the second [] from the high level div ?</text>
  </message>
  <message>
    <ts>2017-06-26T22:11:18.340716</ts>
    <user>U5V0HVAKB</user>
    <text>oh no i am wrong because the an array of list</text>
  </message>
  <message>
    <ts>2017-06-26T22:11:22.341249</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U5V0HVAKB&gt; What is the type of `div`? What is the type of `(input... ) :: renderWords model.content`?</text>
  </message>
  <message>
    <ts>2017-06-26T22:11:45.343857</ts>
    <user>U5V0HVAKB</user>
    <text>ye i am wrong</text>
  </message>
  <message>
    <ts>2017-06-26T22:12:26.348923</ts>
    <user>U5V0HVAKB</user>
    <text>div : List (Attribute msg) -&amp;gt; List (Html msg) -&amp;gt; Html msg</text>
  </message>
  <message>
    <ts>2017-06-26T22:13:14.354501</ts>
    <user>U5V0HVAKB</user>
    <text>that's look really sexy ^^ i like this</text>
  </message>
  <message>
    <ts>2017-06-26T22:14:28.364172</ts>
    <user>U5V0HVAKB</user>
    <text>&lt;@U4JT89FGB&gt; i dont think u have a function path finding in vs code like in phpstorm</text>
  </message>
  <message>
    <ts>2017-06-26T22:15:05.368506</ts>
    <user>U5V0HVAKB</user>
    <text>&lt;@U4JT89FGB&gt; that's what u looking for?</text>
  </message>
  <message>
    <ts>2017-06-26T22:15:34.372077</ts>
    <user>U4F64AKQV</user>
    <text>Personally, I would write the snippet like this
```
renderWords : String -&amp;gt; Html msg
renderWords sentence =
    String.split " " sentence
        |&amp;gt; List.map renderWord
        |&amp;gt; div []

view : Model -&amp;gt; Html Msg
view model =
    div []
        [ input [ placeholder "Text to proof", onInput NewContent, myStyle ] []
        , renderWords model.content
        ]
```
But that's neither here nor there. Really depends on if you want an intermediate `div`.</text>
  </message>
  <message>
    <ts>2017-06-26T22:16:04.375791</ts>
    <user>U4JT89FGB</user>
    <text>well, it works some times, just not always. in fact, symbol lookup (cmd-t) is much more reliable (it's always worked fine for me) than the go to definition.. which seems to randomly fail to find definitions.. at least i can't put my finger on why it works in some cases and not others</text>
  </message>
  <message>
    <ts>2017-06-26T22:16:41.380013</ts>
    <user>U5V0HVAKB</user>
    <text>maybe u dont respect the syntax or the architecture</text>
  </message>
  <message>
    <ts>2017-06-26T22:16:42.380164</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U4JT89FGB&gt; You might have better luck asking a question like that one in &lt;#C0CJ3SBBM|general&gt;.</text>
  </message>
  <message>
    <ts>2017-06-26T22:17:10.383375</ts>
    <user>U5V0HVAKB</user>
    <text>the go to definition always follow a default logic finding</text>
  </message>
  <message>
    <ts>2017-06-26T22:17:14.383774</ts>
    <user>U5V0HVAKB</user>
    <text>if you dont folloz it</text>
  </message>
  <message>
    <ts>2017-06-26T22:17:32.385868</ts>
    <user>U5V0HVAKB</user>
    <text>you will not have it sometimes</text>
  </message>
  <message>
    <ts>2017-06-26T22:17:46.387502</ts>
    <user>U2FJ2D6M7</user>
    <text>&lt;@U4F64AKQV&gt; thank you for the perspective, i'm not sure I follow it all just yet, but maybe soon :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-26T22:19:38.400498</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U2FJ2D6M7&gt; Np! Your code was basically right anyway. I was just showing some other ways one might think about it. One tip for those kinds of bugs is to look at the type definitions. They're actually quite helpful.</text>
  </message>
  <message>
    <ts>2017-06-26T23:22:16.817174</ts>
    <user>U23SA861Y</user>
    <text>difficult without code but if you have you probably have a task converted to a message somehere that gets a gif on button click, examine that code</text>
  </message>
  <message>
    <ts>2017-06-27T00:16:41.158508</ts>
    <user>U60AQDN5C</user>
    <text>Hi everyone, I've been trying to add elm into a react app, but haven't been able to test elm embedded into react components, I'm trying to compile the whole thing through webpack but still I'm at a loss (I'm new to Elm which is why I'm struggling and my apps are react so I want to ease react into it), could anyone help? more context here:

&lt;https://www.reddit.com/r/elm/comments/6jijtd/test_elmreactcomponents/&gt;</text>
  </message>
  <message>
    <ts>2017-06-27T08:17:48.448548</ts>
    <user>U60U00ML6</user>
    <text>hihi please help :S I get this: Some new packages are needed. Here is the upgrade plan.

  Install:
    elm-lang/core 5.1.1
    elm-lang/dom 1.1.1
    elm-lang/html 2.0.0
    elm-lang/virtual-dom 2.0.4

Do you approve of this plan? [Y/n] 


Starting downloads...

  ΓùÅ elm-lang/dom 1.1.1
  ΓùÅ elm-lang/core 5.1.1
  ΓùÅ elm-lang/html 2.0.0
elm-make: elm-lang-virtual-dom-73c00fd: MoveFileEx "elm-lang-virtual-dom-73c00fd" "elm-lang\\virtual-dom\\2.0.4": permission denied (Access is denied.)</text>
  </message>
  <message>
    <ts>2017-06-27T08:18:11.454117</ts>
    <user>U60U00ML6</user>
    <text>This I get when running elm-make on the Todo.elm DEMO</text>
  </message>
  <message>
    <ts>2017-06-27T08:22:01.509129</ts>
    <user>U3SJEDR96</user>
    <text>Looks like the elm executable doesn't have write access for `elm-stuff` or something like that? Not sure, I don't really know much about windows</text>
  </message>
  <message>
    <ts>2017-06-27T08:24:43.548617</ts>
    <user>U5RKHSP38</user>
    <text>Hello! I was wondering if anyone could look at this function and give me an opinion on wether there's a better way to write it:

```
playersFromPresences : PresenceState Player -&amp;gt; List Types.Player
playersFromPresences newPresenceState =
    -- I don't know if there's another way other than this crazy function.
    --
    -- presences : {
    --  "ASDASDADSASDA" : {
    --    metas : [ payload: {
    --          , isUser = False
    --          , name = "Anonymous"
    --          , ...
    --          }
    --    , phx_ref = "1BFfJ0KgU90="
    --    ]
    --   }
    -- }
    newPresenceState
        |&amp;gt; Dict.values
        |&amp;gt; List.map .metas
        |&amp;gt; List.map List.head
        |&amp;gt; List.filterMap identity
        |&amp;gt; List.map .payload
```
Some context:
I'm using `fbonetti/elm-phoenix-socket` to talk to my Elixir/Phoenix server, and the library comes with some helpers to handle Presence events. It allows you to pass a decoder, and then returns an updated structure like the one seen in the comment. `.meta` can have multiple values for a single id, but I only want to grab the latest one from each and return them as a list.</text>
  </message>
  <message>
    <ts>2017-06-27T08:25:49.565049</ts>
    <user>U3SJEDR96</user>
    <text>well you could write it shorter, but not sure if that's "better"</text>
  </message>
  <message>
    <ts>2017-06-27T08:26:25.573664</ts>
    <user>U3SJEDR96</user>
    <text>`newPresenceState |&amp;gt; Dict.values |&amp;gt; List.map (.metas &amp;gt;&amp;gt; List.head &amp;gt;&amp;gt; Maybe.map .payload) |&amp;gt; List.filterMap identity`</text>
  </message>
  <message>
    <ts>2017-06-27T08:27:26.589086</ts>
    <user>U60U00ML6</user>
    <text>&lt;@U3SJEDR96&gt; Yea.... I don't get it... I installed it as administrator the second time.</text>
  </message>
  <message>
    <ts>2017-06-27T08:27:36.591549</ts>
    <user>U60U00ML6</user>
    <text>Or should I install elm in C:\elm ?</text>
  </message>
  <message>
    <ts>2017-06-27T08:27:48.594741</ts>
    <user>U60U00ML6</user>
    <text>it's in program files now</text>
  </message>
  <message>
    <ts>2017-06-27T08:28:54.610841</ts>
    <user>U5RKHSP38</user>
    <text>ah I see, thank you &lt;@U3SJEDR96&gt;! I still rarely consider combining functions like that, so I'm definitely learning something from that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-27T08:30:37.637193</ts>
    <user>U60U00ML6</user>
    <text>Well, i'm gonna give up for now . Bye elm :disappointed: Seemed cool though</text>
  </message>
  <message>
    <ts>2017-06-27T08:34:47.701439</ts>
    <user>U41NK9BM4</user>
    <text>FWIW other ppl have experienced that issue: &lt;https://github.com/elm-lang/elm-package/issues/139&gt;</text>
  </message>
  <message>
    <ts>2017-06-27T08:36:15.724634</ts>
    <user>U41NK9BM4</user>
    <text>Some reasons include: "Windows Defender", "Windows 10 with McAfee antivirus", "moving my project to a directory outside of my ‘dropbox' folder", etc.</text>
  </message>
  <message>
    <ts>2017-06-27T08:37:12.739276</ts>
    <user>U41NK9BM4</user>
    <text>As usual with Windows sometimes there are some esoteric steps to take in order to fix that</text>
  </message>
  <message>
    <ts>2017-06-27T08:39:46.778381</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U60U00ML6&gt; I think you _could_ try going the npm route, should be supported on windows, too</text>
  </message>
  <message>
    <ts>2017-06-27T08:40:13.785420</ts>
    <user>U3SJEDR96</user>
    <text>if you've managed to get npm setup properly and added to your path, `npm i -g elm` might just work</text>
  </message>
  <message>
    <ts>2017-06-27T08:57:12.069914</ts>
    <user>U2JA29EKF</user>
    <text>pretty sure the npm route worked on my windows box</text>
  </message>
  <message>
    <ts>2017-06-27T09:19:19.496146</ts>
    <user>U5KL5SJLQ</user>
    <text>Hey. Is the HTTP Package the standard way in elm to do an AJAX request?</text>
  </message>
  <message>
    <ts>2017-06-27T09:19:24.497864</ts>
    <user>U5KL5SJLQ</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/http/latest&gt; (This one)</text>
  </message>
  <message>
    <ts>2017-06-27T09:19:30.499997</ts>
    <user>U0EUHKVGB</user>
    <text>Yep, it's the only way</text>
  </message>
  <message>
    <ts>2017-06-27T09:19:48.505526</ts>
    <user>U5KL5SJLQ</user>
    <text>Does it work asynch and synch?</text>
  </message>
  <message>
    <ts>2017-06-27T09:20:18.516004</ts>
    <user>U0EUHKVGB</user>
    <text>Async.</text>
  </message>
  <message>
    <ts>2017-06-27T09:20:38.522769</ts>
    <user>U5KL5SJLQ</user>
    <text>THX.</text>
  </message>
  <message>
    <ts>2017-06-27T11:10:48.200641</ts>
    <user>U5GSY0G9J</user>
    <text>So I'm running into a problem with my view being called several times per second. What would be the reason for this?</text>
  </message>
  <message>
    <ts>2017-06-27T11:13:09.260204</ts>
    <user>U3SJEDR96</user>
    <text>do you have any subscriptions, &lt;@U5GSY0G9J&gt;?</text>
  </message>
  <message>
    <ts>2017-06-27T11:14:58.306571</ts>
    <user>U5GSY0G9J</user>
    <text>&lt;@U3SJEDR96&gt; yes</text>
  </message>
  <message>
    <ts>2017-06-27T11:15:58.332035</ts>
    <user>U3SJEDR96</user>
    <text>so whenever a subscription sends a message, your update is triggered, and whenever your update returns a model, you view is rendered with that model (through requestanimationframe). Is the rendering causing issues?</text>
  </message>
  <message>
    <ts>2017-06-27T11:18:21.391988</ts>
    <user>U17B2R554</user>
    <text>&lt;@U5GSY0G9J&gt; In addition to a subscription causing this, I've also had this happen if I naively try to tie some update functionality into the cmd portion of another update case</text>
  </message>
  <message>
    <ts>2017-06-27T11:18:31.396178</ts>
    <user>U17B2R554</user>
    <text>So if you're doing that anywhere, might want to check that logic</text>
  </message>
  <message>
    <ts>2017-06-27T11:18:45.401863</ts>
    <user>U17B2R554</user>
    <text>Are you using the .18 debugger?</text>
  </message>
  <message>
    <ts>2017-06-27T11:19:03.409524</ts>
    <user>U3SJEDR96</user>
    <text>ouch, yeah, making `update` recurse isn't the best idea :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-27T11:19:28.420570</ts>
    <user>U17B2R554</user>
    <text>haha, right.  Sometimes it can be fun to do, but it can also cause wayyy too many messages</text>
  </message>
  <message>
    <ts>2017-06-27T11:19:51.430334</ts>
    <user>U17B2R554</user>
    <text>I would be confused and then look at the debugger's cmd number increasing at an alarming rarte</text>
  </message>
  <message>
    <ts>2017-06-27T11:20:41.451772</ts>
    <user>U5GSY0G9J</user>
    <text>thanks &lt;@U3SJEDR96&gt; &lt;@U17B2R554&gt; ill look into those issues</text>
  </message>
  <message>
    <ts>2017-06-27T11:20:44.452972</ts>
    <user>U3SJEDR96</user>
    <text>There aren't really any valid use-cases for doing it, though, better to split off the logic into separate functions and calling those when you need them :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-27T11:21:00.459672</ts>
    <user>U17B2R554</user>
    <text>That is true</text>
  </message>
  <message>
    <ts>2017-06-27T11:21:47.480158</ts>
    <user>U3SJEDR96</user>
    <text>(unless you're replaying history that you got from a remote source in order to restore a user session, but that's an edge-case)</text>
  </message>
  <message>
    <ts>2017-06-27T12:04:17.559912</ts>
    <user>U3LUC6SNS</user>
    <text>In `Main` I have the code
```
TogglePublic -&amp;gt;
            togglePublic model
```
where `togglePublic : Model -&amp;gt; ( Model, Cmd Msg )` with `Cmd.none` in the cmd slot of the preceding tuple.  After `togglePublic model` runs, I would like to run 
```
updateCurrentDocument : Model -&amp;gt; Document -&amp;gt; ( Model, Cmd Msg )
```
How do I do that?</text>
  </message>
  <message>
    <ts>2017-06-27T12:07:17.632462</ts>
    <user>U0FP80EKB</user>
    <text>You could do something like
```
let
     (updatedModel, _ ) = togglePublic model
in
    updateCurrentDocument updatedModel document
```</text>
  </message>
  <message>
    <ts>2017-06-27T12:08:12.654262</ts>
    <user>U0FP80EKB</user>
    <text>Personally, I stick with the guidance of having the data structure being updated as the last parameter, so I'd change `updateCurrentDocument` to
```updatedCurrentDocument : Document -&amp;gt; Model -&amp;gt; (Model, Cmd Msg)```</text>
  </message>
  <message>
    <ts>2017-06-27T12:08:41.665985</ts>
    <user>U0FP80EKB</user>
    <text>If you want to pipeline, you could then do
```
togglePublic model
|&amp;gt; Tuple.first
|&amp;gt; updateCurrentDocument newDocument
```</text>
  </message>
  <message>
    <ts>2017-06-27T12:09:12.678375</ts>
    <user>U0FP80EKB</user>
    <text>Although I tend to go for the first version with the `let` clause to be explicit that it is ignoring the returned command</text>
  </message>
  <message>
    <ts>2017-06-27T12:10:30.709581</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U0FP80EKB&gt; Thanks so much! -- and also for the guidance on the position of `model`</text>
  </message>
  <message>
    <ts>2017-06-27T12:10:36.711680</ts>
    <user>U0FP80EKB</user>
    <text>One thing is that you are also duplicating the knowledge that `togglePublic` returns `Cmd.none`, so I probably would do this
```
let
    (updatedModel, togglePublicCmd) = togglePublic model
    (updatedWithDocument, documentUpdateCmd) = updatedModel newDocument updatedModel
in
    (updatedWithDocument, Cmd.batch [ togglePublicCmd, documentUpdateCmd ] )
```</text>
  </message>
  <message>
    <ts>2017-06-27T12:10:48.717037</ts>
    <user>U0FP80EKB</user>
    <text>(fixing the names a bit)</text>
  </message>
  <message>
    <ts>2017-06-27T12:11:24.730659</ts>
    <user>U3LUC6SNS</user>
    <text>What is the reason for having the data structure being updated as the last param?</text>
  </message>
  <message>
    <ts>2017-06-27T12:11:24.731115</ts>
    <user>U0FP80EKB</user>
    <text>Duplicating the knowledge about the `Cmd.none` can be a pain later down the line. I'm pretty aggressive at eliminating duplication.</text>
  </message>
  <message>
    <ts>2017-06-27T12:11:42.738016</ts>
    <user>U0FP80EKB</user>
    <text>It makes it better for pipelining, since `|&amp;gt;` passes as the last parameter</text>
  </message>
  <message>
    <ts>2017-06-27T12:11:52.741834</ts>
    <user>U3LUC6SNS</user>
    <text>Got it!  thanks!</text>
  </message>
  <message>
    <ts>2017-06-27T12:11:55.742964</ts>
    <user>U0FP80EKB</user>
    <text>So, in general, the data structure being changed can be strung through</text>
  </message>
  <message>
    <ts>2017-06-27T13:54:56.071142</ts>
    <user>U3HQVHERX</user>
    <text>is `type alias Thing = {...}` creating an "opaque type"?</text>
  </message>
  <message>
    <ts>2017-06-27T13:55:47.091329</ts>
    <user>U0RPQMZ9S</user>
    <text>^ no, but you're on the way to one</text>
  </message>
  <message>
    <ts>2017-06-27T13:57:02.120646</ts>
    <user>U0LPMPL2U</user>
    <text>an opaque type is like:
```
module Dollar exposing (Dollar)

type Dollar = Dollar Int
```</text>
  </message>
  <message>
    <ts>2017-06-27T13:57:28.130989</ts>
    <user>U0LPMPL2U</user>
    <text>Elswhere in your code, you can import the `Dollar` _type_, but you don't have access to the `Dollar` _constructor_</text>
  </message>
  <message>
    <ts>2017-06-27T13:57:43.137054</ts>
    <user>U0LPMPL2U</user>
    <text>that means you can't pattern match or otherwise reach into the internals</text>
  </message>
  <message>
    <ts>2017-06-27T13:58:12.148093</ts>
    <user>U3HQVHERX</user>
    <text>so `type Dollar = Dollar Int` not equivalent to `type alias Dollar = Int`?</text>
  </message>
  <message>
    <ts>2017-06-27T13:58:28.154699</ts>
    <user>U0LPMPL2U</user>
    <text>correct</text>
  </message>
  <message>
    <ts>2017-06-27T13:58:39.159326</ts>
    <user>U0LPMPL2U</user>
    <text>with the `type alias`, `Dollar` and `Int` are equivalent</text>
  </message>
  <message>
    <ts>2017-06-27T13:58:41.159812</ts>
    <user>U3HQVHERX</user>
    <text>`Int` is the constructor for Dollar</text>
  </message>
  <message>
    <ts>2017-06-27T13:58:55.165324</ts>
    <user>U3HQVHERX</user>
    <text>in `type Dollar = Dollar Int`</text>
  </message>
  <message>
    <ts>2017-06-27T13:59:43.184127</ts>
    <user>U0LPMPL2U</user>
    <text>`5` is both a `Dollar` _and_ an `Int` because they are aliases for each other (with the type alias)</text>
  </message>
  <message>
    <ts>2017-06-27T13:59:58.189758</ts>
    <user>U3HQVHERX</user>
    <text>How would I use the `Dollar` type in the `Dollar` module? And why are opaque types useful?</text>
  </message>
  <message>
    <ts>2017-06-27T14:00:04.192386</ts>
    <user>U3HQVHERX</user>
    <text>er - how are they usefule</text>
  </message>
  <message>
    <ts>2017-06-27T14:00:14.196925</ts>
    <user>U0LPMPL2U</user>
    <text>you can change the implementation without breaking code</text>
  </message>
  <message>
    <ts>2017-06-27T14:00:30.204153</ts>
    <user>U0LPMPL2U</user>
    <text>for example, say you changed `type Dollar = Dollar { dollar : Int }`</text>
  </message>
  <message>
    <ts>2017-06-27T14:01:00.216364</ts>
    <user>U3HQVHERX</user>
    <text>Wouldn't that change how it's used?</text>
  </message>
  <message>
    <ts>2017-06-27T14:01:08.219306</ts>
    <user>U0LPMPL2U</user>
    <text>Since you couldn't ever reach inside of the `Dollar` type in your code, this won't break for you because you aren't depending on the internal implementation</text>
  </message>
  <message>
    <ts>2017-06-27T14:01:20.224367</ts>
    <user>U3HQVHERX</user>
    <text>i think i need to see an example of it being used in a different module</text>
  </message>
  <message>
    <ts>2017-06-27T14:01:36.230746</ts>
    <user>U0LPMPL2U</user>
    <text>Sure</text>
  </message>
  <message>
    <ts>2017-06-27T14:01:42.233303</ts>
    <user>U3HQVHERX</user>
    <text>`import Dollar exposing (..)` then what</text>
  </message>
  <message>
    <ts>2017-06-27T14:03:02.264402</ts>
    <user>U0LPMPL2U</user>
    <text>so you have something like:
```
module User exposing (..)

import Dollar exposing (..)

type alias User = { balance : Dollar }

payday : User -&amp;gt; Dollar -&amp;gt; User
payday user paycheck =
  { user | balance = Dollar.sum user.balance paycheck }
```</text>
  </message>
  <message>
    <ts>2017-06-27T14:03:19.270859</ts>
    <user>U0LPMPL2U</user>
    <text>This code doesn't care _what_ the implementation of a `Dollar` is</text>
  </message>
  <message>
    <ts>2017-06-27T14:03:45.281055</ts>
    <user>U0LPMPL2U</user>
    <text>as long as the `Dollar.sum` function works as expected</text>
  </message>
  <message>
    <ts>2017-06-27T14:04:21.295345</ts>
    <user>U0LPMPL2U</user>
    <text>As a library maintainer, this is really powerful because I can make changes to the structure of `Dollar` without breaking everyone else's code</text>
  </message>
  <message>
    <ts>2017-06-27T14:04:33.300031</ts>
    <user>U0LPMPL2U</user>
    <text>for example, if I add the concept of cents</text>
  </message>
  <message>
    <ts>2017-06-27T14:05:01.310676</ts>
    <user>U0LPMPL2U</user>
    <text>now the `Dollar` type looks like `type Dollar = Dollar { dollars : Int, cents : Int }`</text>
  </message>
  <message>
    <ts>2017-06-27T14:05:29.321908</ts>
    <user>U0LPMPL2U</user>
    <text>I can release a new version and not break your code because you only depend on the `Dollar.sum` function, not on a particular structure for `Dollar`</text>
  </message>
  <message>
    <ts>2017-06-27T14:05:37.324711</ts>
    <user>U0LPMPL2U</user>
    <text>make sense?</text>
  </message>
  <message>
    <ts>2017-06-27T14:06:07.335926</ts>
    <user>U3HQVHERX</user>
    <text>`Dollar.sum` takes 2 `Dollar`s and returns a dollar, but the whole time i don't really care what the `Dollar`s are,</text>
  </message>
  <message>
    <ts>2017-06-27T14:06:36.347118</ts>
    <user>U3HQVHERX</user>
    <text>coooool</text>
  </message>
  <message>
    <ts>2017-06-27T14:06:39.348311</ts>
    <user>U0LPMPL2U</user>
    <text>yup :thumbsup:</text>
  </message>
  <message>
    <ts>2017-06-27T14:07:10.359778</ts>
    <user>U3HQVHERX</user>
    <text>Should i be doing this in my own domain specific modules?</text>
  </message>
  <message>
    <ts>2017-06-27T14:07:31.367925</ts>
    <user>U0LPMPL2U</user>
    <text>It depends?</text>
  </message>
  <message>
    <ts>2017-06-27T14:07:38.370566</ts>
    <user>U0LPMPL2U</user>
    <text>That's not really helpful :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-06-27T14:07:59.378556</ts>
    <user>U0LPMPL2U</user>
    <text>For "utility" structures that are used all over the place probably yes</text>
  </message>
  <message>
    <ts>2017-06-27T14:08:46.396090</ts>
    <user>U0LPMPL2U</user>
    <text>For example, if you're doing a lot of things that involve coordinates, it would probably be worth having an opaque `Point` or `Coordinate` type</text>
  </message>
  <message>
    <ts>2017-06-27T14:09:27.411985</ts>
    <user>U0LPMPL2U</user>
    <text>That way, if you end up making a change to it later such as adding a third dimension, you don't have to make changes all over the code ( continuation of conversation with &lt;@U3HQVHERX&gt; )</text>
  </message>
  <message>
    <ts>2017-06-27T14:12:21.477039</ts>
    <user>U0LPMPL2U</user>
    <text>You probably want two things:
1) A way to keep track in your model of which note(s) are being animiated
2) A conditional in the view that only adds the class to the HTML based on that data in your model</text>
  </message>
  <message>
    <ts>2017-06-27T14:12:32.481277</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U5KEJPXHP&gt; ^^</text>
  </message>
  <message>
    <ts>2017-06-27T14:15:50.556506</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U3HQVHERX&gt; there's a section in the design guidelines that discusses opaque types: &lt;http://package.elm-lang.org/help/design-guidelines#keep-tags-and-record-constructors-secret&gt;</text>
  </message>
  <message>
    <ts>2017-06-27T14:19:33.640308</ts>
    <user>U5L8E6N2V</user>
    <text>Hi all, I am trying to make an Elm wrapper for the Chosen js library.  I am having trouble capturing onChange events (events aren't firing), perhaps someone would be willing to take a look at what I've done:  &lt;https://ellie-app.com/3BkyBmJwkRha1/0&gt;</text>
  </message>
  <message>
    <ts>2017-06-27T14:25:52.785912</ts>
    <user>U0LPMPL2U</user>
    <text>Does chosen suppress change events on the hidden dropdown?</text>
  </message>
  <message>
    <ts>2017-06-27T14:27:34.825364</ts>
    <user>U5L8E6N2V</user>
    <text>I'll check, that's a good lead</text>
  </message>
  <message>
    <ts>2017-06-27T14:27:47.830345</ts>
    <user>U4JT89FGB</user>
    <text>Just guessing, but you might need to get chosen's events via port</text>
  </message>
  <message>
    <ts>2017-06-27T14:31:19.913683</ts>
    <user>U5L8E6N2V</user>
    <text>Makes sense as Chosen hides the original select and creates a new dropdown out of divs.  Thanks to both of you!</text>
  </message>
  <message>
    <ts>2017-06-27T15:07:30.738977</ts>
    <user>U5Y1YQD6Y</user>
    <text>Hey y'all, total beginner here.  Struggling with the repl.  Why does this `fruit = { type = "apple" }` throw a syntax error (`The = operator is reserved for defining variables`)?</text>
  </message>
  <message>
    <ts>2017-06-27T15:08:39.763846</ts>
    <user>U23SA861Y</user>
    <text>type is a reserved keyword</text>
  </message>
  <message>
    <ts>2017-06-27T15:09:06.773245</ts>
    <user>U23SA861Y</user>
    <text>use `kind` or `type_`</text>
  </message>
  <message>
    <ts>2017-06-27T15:09:23.779376</ts>
    <user>U5Y1YQD6Y</user>
    <text>ha.  thank you</text>
  </message>
  <message>
    <ts>2017-06-27T15:12:31.844726</ts>
    <user>U23SA861Y</user>
    <text>np :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-27T15:15:37.908985</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U5Y1YQD6Y&gt; you may want to use a different key name that's more descriptive or domain specific than `kind` or `type_`. In this case, perhaps something like `name` ?</text>
  </message>
  <message>
    <ts>2017-06-27T15:15:53.914875</ts>
    <user>U0LPMPL2U</user>
    <text>Also, welcome to the community! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-27T15:16:33.928810</ts>
    <user>U5Y1YQD6Y</user>
    <text>no worries &lt;@U0LPMPL2U&gt;, I'm just messing about in repl.  thanks for the welcome!</text>
  </message>
  <message>
    <ts>2017-06-27T15:37:18.355149</ts>
    <user>U601ELFEG</user>
    <text>I'm working on my first elm app - and it will have on the order of 2k + DIVs generated from the model - think of like a kanban or thing with a lot of small things the user can re-organize.</text>
  </message>
  <message>
    <ts>2017-06-27T15:37:42.363303</ts>
    <user>U601ELFEG</user>
    <text>I want to have lots of feedback - like hovering over one of those things will hilight related things</text>
  </message>
  <message>
    <ts>2017-06-27T15:38:00.369155</ts>
    <user>U601ELFEG</user>
    <text>should I be worried about re-generating this 2k+ node DOM with every mouse move event?</text>
  </message>
  <message>
    <ts>2017-06-27T15:38:08.371900</ts>
    <user>U601ELFEG</user>
    <text>do I need to use the HTML node with id thing?</text>
  </message>
  <message>
    <ts>2017-06-27T15:39:52.407685</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U601ELFEG&gt; It's not that difficult to add performance improvements like that after you have things working the way you want. You don't save much if any effort doing it from the start. Write it first and then worry about performance.</text>
  </message>
  <message>
    <ts>2017-06-27T15:41:38.443398</ts>
    <user>U601ELFEG</user>
    <text>indeed - I plan on writing the "straight forward way" first - but was just wondering if people felt 2k HTML nodes wandering into "yer gonna have to optimize that" territory</text>
  </message>
  <message>
    <ts>2017-06-27T15:43:27.479831</ts>
    <user>U601ELFEG</user>
    <text>on the plus - as I picked up elm last night - and have a skeleton already running (okay okay - so I've written a ton of Haskell before - and a tone of javascript / html /css --- so  picking up elm was pretty easy) --- and I'm really liking it (if missing some Haskell common functions...)</text>
  </message>
  <message>
    <ts>2017-06-27T15:43:52.488512</ts>
    <user>U23SA861Y</user>
    <text>depends on if all 2k of those divs are changing</text>
  </message>
  <message>
    <ts>2017-06-27T15:44:14.495987</ts>
    <user>U23SA861Y</user>
    <text>simultaneously</text>
  </message>
  <message>
    <ts>2017-06-27T15:47:04.555333</ts>
    <user>U48AEBJQ3</user>
    <text>Nothing inherently overwhelming about a couple of thousand HTML nodes on the Elm side of things, but it always depends on implementation details.</text>
  </message>
  <message>
    <ts>2017-06-27T15:49:50.612548</ts>
    <user>U0JFGGZS6</user>
    <text>I wouldn't think it a big deal, from what you describe it's just changing attributes not forcing nodes to be removed and added</text>
  </message>
  <message>
    <ts>2017-06-27T15:50:41.630461</ts>
    <user>U601ELFEG</user>
    <text>my guess is that the classes on about a dozen of them will change as the user moves the hover - and if during a drag, a several dozen will be changing position as the user drags</text>
  </message>
  <message>
    <ts>2017-06-27T15:51:55.656018</ts>
    <user>U601ELFEG</user>
    <text>yup - just attribute changes (really, just classes and x/y positioning) - so  the differ will get this efficiently? if so, awesome!</text>
  </message>
  <message>
    <ts>2017-06-27T15:53:34.690414</ts>
    <user>U23SA861Y</user>
    <text>You may need to key things, or salt lazy here or there but it doesn't sound like there is any show stoppers.</text>
  </message>
  <message>
    <ts>2017-06-27T15:54:35.711989</ts>
    <user>U601ELFEG</user>
    <text>excellent</text>
  </message>
  <message>
    <ts>2017-06-27T15:54:59.720381</ts>
    <user>U601ELFEG</user>
    <text>synth patch manager here I come!</text>
  </message>
  <message>
    <ts>2017-06-27T15:55:08.723821</ts>
    <user>U601ELFEG</user>
    <text>(or rather, here elm comes!)</text>
  </message>
  <message>
    <ts>2017-06-27T16:23:10.318381</ts>
    <user>U5Y1YQD6Y</user>
    <text>Does anyone have experience with using the time-traveling debugger with a third-party build tool (e.g., brunch, webpack, browserify)</text>
  </message>
  <message>
    <ts>2017-06-27T16:23:10.318691</ts>
    <user>U5Y1YQD6Y</user>
    <text>?</text>
  </message>
  <message>
    <ts>2017-06-27T16:38:07.635471</ts>
    <user>U0EUHKVGB</user>
    <text>&lt;@U5Y1YQD6Y&gt;, for webpack, just add `debug=true` to the end of the compiler options</text>
  </message>
  <message>
    <ts>2017-06-27T17:11:57.328638</ts>
    <user>U2XRG0UKA</user>
    <text>```
{
    test: /\.elm$/,
    exclude: [/elm-stuff/, /node_modules/],
    use: {
        loader: 'elm-webpack-loader',
        options: {debug: true, warn: true, verbose: true}
    }
}
```</text>
  </message>
  <message>
    <ts>2017-06-27T17:12:34.340364</ts>
    <user>U2XRG0UKA</user>
    <text>Is one of the loaders in my webpack.config.js file</text>
  </message>
  <message>
    <ts>2017-06-27T23:51:47.305003</ts>
    <user>U3KSN5MAL</user>
    <text>having trouble googling this. How do i unstringify some json?</text>
  </message>
  <message>
    <ts>2017-06-27T23:52:58.313037</ts>
    <user>U3LUC6SNS</user>
    <text>Hi all, I am going to need a debouncer in my app.  Currently, each character of user input sets off a whole train of actions, including sending text through a port where it it is processed as asciidoc, and also to an elixir backend to save the data. OK for small docs, but not large ones.  I've seen several debounce packages -- any recommendations?</text>
  </message>
  <message>
    <ts>2017-06-27T23:55:49.331553</ts>
    <user>U3LUC6SNS</user>
    <text>Something like `JSON.parse`</text>
  </message>
  <message>
    <ts>2017-06-27T23:56:01.332682</ts>
    <user>U3KSN5MAL</user>
    <text>ok i'll have a look thanks!</text>
  </message>
  <message>
    <ts>2017-06-27T23:57:29.342121</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3KSN5MAL&gt;  Here is a referennce: &lt;https://www.w3schools.com/js/js_json_parse.asp&gt;</text>
  </message>
  <message>
    <ts>2017-06-27T23:57:40.343228</ts>
    <user>U3KSN5MAL</user>
    <text>thanks!</text>
  </message>
  <message>
    <ts>2017-06-27T23:58:48.350270</ts>
    <user>U5YDC1YUW</user>
    <text>what's the general style for variable naming in Elm, `someLongVariable` or `some_long_variable`?</text>
  </message>
  <message>
    <ts>2017-06-27T23:59:03.351848</ts>
    <user>U3KSN5MAL</user>
    <text>Most code i've seen just uses the first</text>
  </message>
  <message>
    <ts>2017-06-27T23:59:26.354473</ts>
    <user>U5YDC1YUW</user>
    <text>so functions and variables both have the same naming convention then?</text>
  </message>
  <message>
    <ts>2017-06-28T00:00:41.364165</ts>
    <user>U3KSN5MAL</user>
    <text>yep</text>
  </message>
  <message>
    <ts>2017-06-28T00:01:52.372385</ts>
    <user>U3KSN5MAL</user>
    <text>I don't personally find it to be confusing</text>
  </message>
  <message>
    <ts>2017-06-28T00:01:53.372463</ts>
    <user>U3LUC6SNS</user>
    <text>Re debouncing, I've looked briefly at (1) &lt;http://package.elm-lang.org/packages/athanclark/elm-debouncer/3.0.2/Debounce&gt; and (2) &lt;https://github.com/jinjor/elm-debounce&gt; .  The latter has examples, but may not be as mature.</text>
  </message>
  <message>
    <ts>2017-06-28T00:43:55.639609</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U5YDC1YUW&gt; the former for variables. For types and modules just uppercase the first letter.</text>
  </message>
  <message>
    <ts>2017-06-28T00:45:22.648958</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U3KSN5MAL&gt; Not sure if you are talking about in Elm or in JS. In Elm you would use `Json.Decode`.</text>
  </message>
  <message>
    <ts>2017-06-28T00:46:20.655072</ts>
    <user>U3KSN5MAL</user>
    <text>was hoping to do it on the js side then send it through?</text>
  </message>
  <message>
    <ts>2017-06-28T00:46:22.655258</ts>
    <user>U3KSN5MAL</user>
    <text>not sure</text>
  </message>
  <message>
    <ts>2017-06-28T00:46:36.656742</ts>
    <user>U4F64AKQV</user>
    <text>No, don't do it that way. It won't work well.</text>
  </message>
  <message>
    <ts>2017-06-28T00:46:37.656842</ts>
    <user>U3KSN5MAL</user>
    <text>as that's what i'm doing with saving</text>
  </message>
  <message>
    <ts>2017-06-28T00:46:40.657140</ts>
    <user>U3KSN5MAL</user>
    <text>hmm ok</text>
  </message>
  <message>
    <ts>2017-06-28T00:46:58.658941</ts>
    <user>U4F64AKQV</user>
    <text>Unless the JSON is already on the JS side.</text>
  </message>
  <message>
    <ts>2017-06-28T00:47:02.659332</ts>
    <user>U3KSN5MAL</user>
    <text>it is</text>
  </message>
  <message>
    <ts>2017-06-28T00:47:05.659709</ts>
    <user>U3KSN5MAL</user>
    <text>it's saving stuff</text>
  </message>
  <message>
    <ts>2017-06-28T00:47:08.660088</ts>
    <user>U4F64AKQV</user>
    <text>Ah, that's a different story.</text>
  </message>
  <message>
    <ts>2017-06-28T00:47:18.661144</ts>
    <user>U3KSN5MAL</user>
    <text>ye</text>
  </message>
  <message>
    <ts>2017-06-28T00:47:42.663772</ts>
    <user>U3KSN5MAL</user>
    <text>i have the json string loaded and need to send it through the port</text>
  </message>
  <message>
    <ts>2017-06-28T00:48:08.666726</ts>
    <user>U4F64AKQV</user>
    <text>Yeah, that sounds fine to me.</text>
  </message>
  <message>
    <ts>2017-06-28T01:07:39.798292</ts>
    <user>U601ELFEG</user>
    <text>if you need to do this sort of thing often, you can define updateXxxx functions: `updateItems f model = { model | items = f model.items }`</text>
  </message>
  <message>
    <ts>2017-06-28T01:09:07.807966</ts>
    <user>U601ELFEG</user>
    <text>then   `updateItems (List.Map (updateStatus (always OnHold)))`</text>
  </message>
  <message>
    <ts>2017-06-28T01:09:45.811995</ts>
    <user>U601ELFEG</user>
    <text>(mind you, I'm transliterating from Haskell techniques....)</text>
  </message>
  <message>
    <ts>2017-06-28T01:48:31.070838</ts>
    <user>U3KSN5MAL</user>
    <text>Hmm i'm trying to parse the json file i saved out using stringify but trying to parse it just throws `Uncaught SyntaxError: Unexpected token o`</text>
  </message>
  <message>
    <ts>2017-06-28T01:52:33.098882</ts>
    <user>U3KSN5MAL</user>
    <text>the saved out file looks like this &lt;https://pastebin.com/2buv1hU9&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T01:56:24.126087</ts>
    <user>U3KSN5MAL</user>
    <text>nvm got it</text>
  </message>
  <message>
    <ts>2017-06-28T02:56:45.633423</ts>
    <user>U2NGTHTTR</user>
    <text>Hi 
I have quite tricky problem, I need to load Elm application in to page where already run another Elm application.
But I need to separate them. I need to not use same global variable `Elm`</text>
  </message>
  <message>
    <ts>2017-06-28T02:57:40.642267</ts>
    <user>U2NGTHTTR</user>
    <text>Is there some possibility how to force elm-make to re-name this global variable?</text>
  </message>
  <message>
    <ts>2017-06-28T03:18:48.871265</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U2NGTHTTR&gt; what's the reason you can't have both under the `Elm` variable?</text>
  </message>
  <message>
    <ts>2017-06-28T03:21:48.906038</ts>
    <user>U2NGTHTTR</user>
    <text>basically we don't have full control over first Elm app. Second is loaded later and should not have any possible impact on first one.</text>
  </message>
  <message>
    <ts>2017-06-28T03:26:26.959694</ts>
    <user>U3SJEDR96</user>
    <text>can you explain a little more what you are trying to achieve? Saying you want elm-make to rename `Elm` sounds a little like you're having a problem with an attempted solution, but doesn't reveal your actual problem.</text>
  </message>
  <message>
    <ts>2017-06-28T03:28:50.987802</ts>
    <user>U3SJEDR96</user>
    <text>now, as for what I _think_ might be going on, you need multiple elm apps on a single page. One options is to compile both apps into a single bundle `elm-make App1.elm App2.elm --output bundle.js`. If you go that route, you can still decide to instantiate both apps at different times, and you can use them multiple times on a single page. If you cannot possible do that; you do have the option of compiling them to separate bundles, and I _think_ it should be safe to load both in the same page. I think `Elm` will detect there is already such a variable on the page, and will merge them. As long as the modules that have a `main` don't have the same module-name, that shouldn't give any issues.</text>
  </message>
  <message>
    <ts>2017-06-28T03:35:15.066379</ts>
    <user>U2G22DQE7</user>
    <text>I have a page with 2 elm apps both loaded as different .js files  it works fine</text>
  </message>
  <message>
    <ts>2017-06-28T03:35:16.066540</ts>
    <user>U2NGTHTTR</user>
    <text>We have Elm application _(A)_ which we want to _add_ into existing page (which typically already contains another Elm app _(B)_ but sometimes not).
We need to avoid _runtime merging_ because we want to avoid _same module_ conflict at any costs.</text>
  </message>
  <message>
    <ts>2017-06-28T03:38:24.104306</ts>
    <user>U3SJEDR96</user>
    <text>As long as the module names you specify in the `elm-make` command aren't the same, there is no risk in runtime merging. Still, to save your users the overhead of potentially downloading the runtime etc twice on a single page, I'd opt for compile-time merging.</text>
  </message>
  <message>
    <ts>2017-06-28T03:40:51.133822</ts>
    <user>U2NGTHTTR</user>
    <text>Problem is that Elm application _A_ isn't under our control.</text>
  </message>
  <message>
    <ts>2017-06-28T03:42:06.148582</ts>
    <user>U2NGTHTTR</user>
    <text>Generally we cannot predict module name(s) used by application _A_. 
That's way we want to make application _B_ totally separated.</text>
  </message>
  <message>
    <ts>2017-06-28T03:42:56.158667</ts>
    <user>U3SJEDR96</user>
    <text>No, but there is only one module name that matters, and that's the one you use for `app = Elm.ThisModuleNameMatters.embed(...)`</text>
  </message>
  <message>
    <ts>2017-06-28T03:44:26.176962</ts>
    <user>U3SJEDR96</user>
    <text>for everything else, no merging happens at runtime; they keep their own instances of all libraries and runtime</text>
  </message>
  <message>
    <ts>2017-06-28T03:46:44.206142</ts>
    <user>U2NGTHTTR</user>
    <text>but if I am loading application _B_ script 
`&amp;lt;script src="application-B.js"&amp;gt;&amp;lt;/script&amp;gt;`

and page already contains application _A_ which uses same module name as _B_ then merging fails</text>
  </message>
  <message>
    <ts>2017-06-28T03:49:36.241549</ts>
    <user>U3SJEDR96</user>
    <text>yeah, if and only if that module is the one you passed to `elm-make`. Basically, name your module something specific and not just `App` or `Main`, but make it `DatePickerWidget` or whatever.</text>
  </message>
  <message>
    <ts>2017-06-28T03:55:55.324589</ts>
    <user>U2NGTHTTR</user>
    <text>Yes. But there is one another thing I did't say yet.
There is possibility that page already contains different version of same  application _B_ ...</text>
  </message>
  <message>
    <ts>2017-06-28T03:57:05.339987</ts>
    <user>U3SJEDR96</user>
    <text>define "another version"?</text>
  </message>
  <message>
    <ts>2017-06-28T03:57:31.345809</ts>
    <user>U2NGTHTTR</user>
    <text>just same app but earlier version</text>
  </message>
  <message>
    <ts>2017-06-28T04:01:07.395520</ts>
    <user>U3SJEDR96</user>
    <text>then renaming Elm is still going to get you in trouble when you decide you need a third version :wink: I think I'd opt for 1. figuring out why you need different versions of the same app on a single page and 2. making the version part of the main module's name `module MyWidget_2_1_1` which feels horrible, but probably your best bet for handling this type of issue.. :&amp;lt;</text>
  </message>
  <message>
    <ts>2017-06-28T04:05:38.457431</ts>
    <user>U52GHJJTU</user>
    <text>Is it possible to move the common parts of two elm apps to a separate js file during compilation?</text>
  </message>
  <message>
    <ts>2017-06-28T04:06:10.464664</ts>
    <user>U52GHJJTU</user>
    <text>&lt;@U3SJEDR96&gt; I guess that's what you're proposing </text>
  </message>
  <message>
    <ts>2017-06-28T04:07:02.475854</ts>
    <user>U3SJEDR96</user>
    <text>not possible, but _maaaaybe_ in 0.19, or at least a first step towards it. But yeah, no, not quite what I'm proposing.</text>
  </message>
  <message>
    <ts>2017-06-28T04:07:20.479724</ts>
    <user>U3SJEDR96</user>
    <text>I'm just proposing to work around the naming conflict in a predictable, future-proof way</text>
  </message>
  <message>
    <ts>2017-06-28T04:08:09.490379</ts>
    <user>U52GHJJTU</user>
    <text>Ok, that's what I thought </text>
  </message>
  <message>
    <ts>2017-06-28T04:09:33.508773</ts>
    <user>U2NGTHTTR</user>
    <text>Summary:
There is page about we _generally_ do not know nothing.
Page can contains _generally_ anything incl. legacy versions of our Elm applications.

Now we want to _inject_ into this page another Elm application and avoid merging through common global `Elm` variable because we don't have any control above content of page.</text>
  </message>
  <message>
    <ts>2017-06-28T04:11:36.536883</ts>
    <user>U3SJEDR96</user>
    <text>Well, how do you _know_ any other variable isn't already used?</text>
  </message>
  <message>
    <ts>2017-06-28T04:12:53.554602</ts>
    <user>U3SJEDR96</user>
    <text>- use predictable, versioned name for your app
- check if `Elm.MyModule_0_1_1` exists. If it does, it's your app, no question about it
- if it doesn't, fetch your elm app and let it merge</text>
  </message>
  <message>
    <ts>2017-06-28T04:18:02.624980</ts>
    <user>U2NGTHTTR</user>
    <text>&amp;gt; how do you _know_ any other variable isn't already used?
I don't know of course I still can choose name which is already used but for this glob. variable I can use something like `Elm_5325173517` - this name is used in one line. Just to call `.embed()`. It's easy to change and without any impact on rest of application.

Thank you for your help and ideas</text>
  </message>
  <message>
    <ts>2017-06-28T05:21:09.559379</ts>
    <user>U2D5SAEMN</user>
    <text>I have two date ranges (start date, end date) that depend on each other, with a number of constraints:
1. range2 can only exist if range1 exists
2. range2 start date is optional
3. range2 end date is optional
4. range2 start date &amp;gt;= range1 start date
5. range2 start date &amp;lt;= range1 end date
6. range2 end date &amp;gt;= range1 start date
7. range2 end date &amp;lt;= range 1 end date
8. range2 end date &amp;gt; range2 start date

So basically range1 is the boundary for range2. I'm figuring out what the best data structure would be:
- union type: `NotSet | BoundedDateRange (Date, Date) (Maybe Date, Maybe Date)`
- record: `{ range1: (Date, Date), range2: (Maybe Date, Maybe Date)}`

Any ideas/remarks?</text>
  </message>
  <message>
    <ts>2017-06-28T05:46:02.928023</ts>
    <user>U3LUC6SNS</user>
    <text>Hi all!  I am running into performance problems and am thinking of using one of Elm's debouncers.  Does anyone have experience on these or advice to offer?

At the moment, each character of user input results in an update to the current document and also the document list.  In addition, there is processing in JS-land of the content via ports.

Nothing goes "wrong" but both the source and rendered text windows get very "laggy".  Also, I see lots of messages

```
149:1 GET &lt;http://localhost:3000/149&gt; 404 (Not found)
150:1 GET &lt;http://localhost:3000/150&gt; 404 (Not found)</text>
  </message>
  <message>
    <ts>2017-06-28T05:46:05.928668</ts>
    <user>U3LUC6SNS</user>
    <text>```</text>
  </message>
  <message>
    <ts>2017-06-28T05:46:32.935153</ts>
    <user>U3LUC6SNS</user>
    <text>in the console.  I am using webpack and think they must come from it.</text>
  </message>
  <message>
    <ts>2017-06-28T05:46:43.937564</ts>
    <user>U3LUC6SNS</user>
    <text>However, I don't understand what they mean.</text>
  </message>
  <message>
    <ts>2017-06-28T05:49:40.979262</ts>
    <user>U3LUC6SNS</user>
    <text>in the JS console</text>
  </message>
  <message>
    <ts>2017-06-28T05:57:44.097476</ts>
    <user>U3SJEDR96</user>
    <text>hm, is the code available somewhere? &lt;@U3LUC6SNS&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T06:00:28.138131</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, here it is: &lt;https://github.com/jxxcarlson/koko_elm_client&gt;  Should I point you to a specific place?  Keyboard input is processed in `Main` at &lt;https://github.com/jxxcarlson/koko_elm_client/blob/master/src/Main.elm#L233&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T06:00:52.144261</ts>
    <user>U3SJEDR96</user>
    <text>cool, I'll have a look shortly</text>
  </message>
  <message>
    <ts>2017-06-28T06:20:35.410703</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U3LUC6SNS&gt; I'm not seeing where the random GET's come from... As for the puts, you may indeed want to batch these (either with a debouncer of a little more manually by keeping a dirty flag and checking that every second or so), _or_, if you're not really all that interested in whether the PUT succeeds or not, you could make these run in an isolated process which should help with "snappiness"</text>
  </message>
  <message>
    <ts>2017-06-28T06:21:43.425140</ts>
    <user>U3SJEDR96</user>
    <text>(by using `Http.toTask`, `Process.spawn` and `Task.perform`)</text>
  </message>
  <message>
    <ts>2017-06-28T06:24:14.457485</ts>
    <user>U3SJEDR96</user>
    <text>then finally, the rendering - I'm not entirely sure if that currently blocks the main thread (i.e. does an outbound port run its callback synchronously?), but I think I can check that quite quickly</text>
  </message>
  <message>
    <ts>2017-06-28T06:31:45.553082</ts>
    <user>U3SJEDR96</user>
    <text>ah, it _does_ block (&lt;https://ellie-app.com/3BDkYm6Mbm8a1/0&gt;)</text>
  </message>
  <message>
    <ts>2017-06-28T06:33:10.570797</ts>
    <user>U3SJEDR96</user>
    <text>you can sidestep this, though, using `setTimeout` in the JS-side subscription - &lt;https://ellie-app.com/3BDkYm6Mbm8a1/1&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T06:33:35.575954</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;,  I will experiment with your suggestions of doing things manually at first.  I ran the Ellie -- saw "hi".</text>
  </message>
  <message>
    <ts>2017-06-28T06:33:51.579180</ts>
    <user>U3SJEDR96</user>
    <text>yeah, the magic is in the dev-console</text>
  </message>
  <message>
    <ts>2017-06-28T06:34:33.587501</ts>
    <user>U3SJEDR96</user>
    <text>for `/0` you should see "hold on", then 5 seconds later "done waiting", and only _then_ the second port will be triggered (which will print "hi")</text>
  </message>
  <message>
    <ts>2017-06-28T06:34:55.591822</ts>
    <user>U3LUC6SNS</user>
    <text>Ah -- OK!  Thanks so much.  I will work on this.  Am familiar with the `setTimeout` function in this context.</text>
  </message>
  <message>
    <ts>2017-06-28T06:35:17.596792</ts>
    <user>U3SJEDR96</user>
    <text>for `/1`, the waiting loop is forced to be ran asynchronously, so you should actually see "hi" before you'll see the waiting stuff"</text>
  </message>
  <message>
    <ts>2017-06-28T08:03:13.659654</ts>
    <user>U3KSN5MAL</user>
    <text>i feel a bit dumb because i'm having trouble working this out. 

I have a list of Lists of a type, but i want to get everything from the list of lists and just have it in a list. 

any ideas?</text>
  </message>
  <message>
    <ts>2017-06-28T08:04:24.675535</ts>
    <user>U3KSN5MAL</user>
    <text>(++) is expecting the right side to be a:
    List Light

But the right side is:
    List (List Light)</text>
  </message>
  <message>
    <ts>2017-06-28T08:04:57.683182</ts>
    <user>U3KSN5MAL</user>
    <text>The weird form of it being a list of lists, is due to a data stucture i need, but yeah not sure how to do this</text>
  </message>
  <message>
    <ts>2017-06-28T08:14:19.810942</ts>
    <user>U3KSN5MAL</user>
    <text>oh list extra looks like it may help me</text>
  </message>
  <message>
    <ts>2017-06-28T08:16:47.845809</ts>
    <user>U0CLDU8UB</user>
    <text>`List.concatMap` also sometimes helps in those situations</text>
  </message>
  <message>
    <ts>2017-06-28T08:17:48.859857</ts>
    <user>U3KSN5MAL</user>
    <text>oh ok thanks i'll look at that</text>
  </message>
  <message>
    <ts>2017-06-28T08:22:05.921289</ts>
    <user>U604S603Y</user>
    <text>Is there an Elm-only way to change the page title?</text>
  </message>
  <message>
    <ts>2017-06-28T08:23:34.941971</ts>
    <user>U0CLDU8UB</user>
    <text>There used to be, but I think it hasn't been reintroduced: &lt;https://groups.google.com/forum/#!topic/elm-discuss/khUMddCweEw&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T08:24:18.952643</ts>
    <user>U3KSN5MAL</user>
    <text>oh cool concat map is perfect</text>
  </message>
  <message>
    <ts>2017-06-28T08:24:32.956061</ts>
    <user>U3KSN5MAL</user>
    <text>i really need an indexedconcatmap but that's easy enough to do as a second step</text>
  </message>
  <message>
    <ts>2017-06-28T08:24:33.956288</ts>
    <user>U3KSN5MAL</user>
    <text>thanks!</text>
  </message>
  <message>
    <ts>2017-06-28T08:27:57.005283</ts>
    <user>U604S603Y</user>
    <text>thanks &lt;@U0CLDU8UB&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T08:40:09.191751</ts>
    <user>U3KSN5MAL</user>
    <text>Ok that headache is fixed. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T10:19:09.258155</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, I've installed a text buffer with a dirty flag.  These are updated with each keystroke.  Every tick (now 1 second), the app does a document update, pushing data to both the backend and through the port.  On the other side of the port, the jsCode sets a 100 millisecond timeout whenever it receives data. Then, after the wait, the data is rendered. This combination of parameters and strategies seems to work well for now with the documents that I am using for tests.  

Does this approach seem reasonable?  I've tuned the parameters by trial and error. Is there a more scientific method?</text>
  </message>
  <message>
    <ts>2017-06-28T10:19:29.266864</ts>
    <user>U3LUC6SNS</user>
    <text>AND.  Thankyou so much!  This really helped!!</text>
  </message>
  <message>
    <ts>2017-06-28T10:20:06.282162</ts>
    <user>U3LUC6SNS</user>
    <text>I will probably write code to slow down the rate of updates to the backend.</text>
  </message>
  <message>
    <ts>2017-06-28T10:21:45.322981</ts>
    <user>U3584SW4R</user>
    <text>Hey folks! I am a newbie to web dev. I've done a lot of Android stuff but nothing in the web
I was looking at this world recently and found elm to be very attractive. 

I wanted to build a small web app in elm, and was looking for some scaffolding tool which you guys might be using to get up and running. Can someone guide me to some resources specifically related to scaffolding libs for elm?</text>
  </message>
  <message>
    <ts>2017-06-28T10:23:15.359829</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U3584SW4R&gt; what sort of scaffolding libs?</text>
  </message>
  <message>
    <ts>2017-06-28T10:23:47.373157</ts>
    <user>U3584SW4R</user>
    <text>I was reading a blog (not related to elm) which mentioned things like Yeoman and Slush.</text>
  </message>
  <message>
    <ts>2017-06-28T10:24:11.383428</ts>
    <user>U3584SW4R</user>
    <text>What I am looking for is a tool which can build up a basic project structure to get started with elm.</text>
  </message>
  <message>
    <ts>2017-06-28T10:24:50.400847</ts>
    <user>U0FP80EKB</user>
    <text>Oh. I wouldn't worry about this to start with.</text>
  </message>
  <message>
    <ts>2017-06-28T10:24:57.403577</ts>
    <user>U0FP80EKB</user>
    <text>You can start with just elm-reactor to play around</text>
  </message>
  <message>
    <ts>2017-06-28T10:25:01.405400</ts>
    <user>U0FP80EKB</user>
    <text>Have you worked through the guide?</text>
  </message>
  <message>
    <ts>2017-06-28T10:25:06.407329</ts>
    <user>U0FP80EKB</user>
    <text>&lt;https://guide.elm-lang.org/&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T10:25:39.421705</ts>
    <user>U3584SW4R</user>
    <text>Yeah I did and built some simple elm classes and ran them. What I want is to see how slightly bigger projects are structured</text>
  </message>
  <message>
    <ts>2017-06-28T10:25:43.423515</ts>
    <user>U0FP80EKB</user>
    <text>things can get really complex quickly when you start with those tools.</text>
  </message>
  <message>
    <ts>2017-06-28T10:25:51.426710</ts>
    <user>U3584SW4R</user>
    <text>Ok</text>
  </message>
  <message>
    <ts>2017-06-28T10:26:05.432507</ts>
    <user>U0FP80EKB</user>
    <text>There isn't really a standard way. But, a lot of people like this (let me find the link) as a start</text>
  </message>
  <message>
    <ts>2017-06-28T10:26:23.439831</ts>
    <user>U0FP80EKB</user>
    <text>&lt;https://github.com/rtfeldman/elm-spa-example&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T10:26:31.443187</ts>
    <user>U0FP80EKB</user>
    <text>Here's the write-up &lt;https://dev.to/rtfeldman/tour-of-an-open-source-elm-spa&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T10:27:24.464796</ts>
    <user>U3584SW4R</user>
    <text>Super! Thanks for the quick help! I'll keep bugging you all for the next few days :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T10:27:32.468404</ts>
    <user>U3LUC6SNS</user>
    <text>I've been using rtfeldman's SPA structure and am very happy with it.  Now at 3000 lines of Elm code.</text>
  </message>
  <message>
    <ts>2017-06-28T10:27:36.470187</ts>
    <user>U0FP80EKB</user>
    <text>For sure. This slack is a great place to get questions answered.</text>
  </message>
  <message>
    <ts>2017-06-28T10:28:44.498961</ts>
    <user>U601ELFEG</user>
    <text>3000 lines of Elm? That'd be like 10k lines if done in JS! :stuck_out_tongue_winking_eye:</text>
  </message>
  <message>
    <ts>2017-06-28T10:29:38.522263</ts>
    <user>U3LUC6SNS</user>
    <text>Yes, and I am not afraid of messing with code.  I've done several major restructurings and not only lived to tell the tale but enjoyed the process.  Yay!</text>
  </message>
  <message>
    <ts>2017-06-28T10:30:36.547476</ts>
    <user>U4SM7ECAG</user>
    <text>That's the best part of Elm... "what if this model was represented by another type? let's do it" and a couple of compilation error later you're done :smile:</text>
  </message>
  <message>
    <ts>2017-06-28T10:30:36.547678</ts>
    <user>U4JT89FGB</user>
    <text>it ends up being a bit scary - I spend probably _too_ much time restructuring/refactoring</text>
  </message>
  <message>
    <ts>2017-06-28T10:31:20.566871</ts>
    <user>U0EUHKVGB</user>
    <text>My talk at elm-europe covered this</text>
  </message>
  <message>
    <ts>2017-06-28T10:31:21.567218</ts>
    <user>U4SM7ECAG</user>
    <text>lol, quite true! It's so simple that it's easy to get sidetracked on restructuring for a better representation</text>
  </message>
  <message>
    <ts>2017-06-28T10:31:45.576933</ts>
    <user>U0EUHKVGB</user>
    <text>&lt;https://www.youtube.com/watch?v=OgH3pPXXSkY&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T10:32:34.597827</ts>
    <user>U0EUHKVGB</user>
    <text>Basically, figure out what you need until you have something that works. Then, once it works, you can make it even better fearlessly. But you've reached the point where it works :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T10:33:29.621165</ts>
    <user>U4SM7ECAG</user>
    <text>I'll bookmark that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T10:34:54.657632</ts>
    <user>U0EUHKVGB</user>
    <text>My OsloElmDay talk is actually a continuation of that talk, too: &lt;https://www.youtube.com/watch?v=FUHlnxQJTMM&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T10:35:00.659603</ts>
    <user>U601ELFEG</user>
    <text>&lt;@U4JT89FGB&gt; - nonesense! In other environments we all spend _not enough_ time restructuring and refactoring.... because it is long and tedious and dangerous!!</text>
  </message>
  <message>
    <ts>2017-06-28T10:35:17.667118</ts>
    <user>U0FP80EKB</user>
    <text>"Make it work, make it right, make it fast"</text>
  </message>
  <message>
    <ts>2017-06-28T10:35:21.668608</ts>
    <user>U4JT89FGB</user>
    <text>ha, there's the glass half full talking!</text>
  </message>
  <message>
    <ts>2017-06-28T10:39:06.763787</ts>
    <user>U4SM7ECAG</user>
    <text>&lt;@U601ELFEG&gt; that's true, yet I think I could go even faster in Elm if I wasn't hunting after the perfect models/update/function implementation in general</text>
  </message>
  <message>
    <ts>2017-06-28T10:40:39.803321</ts>
    <user>U4JT89FGB</user>
    <text>&lt;@U4SM7ECAG&gt; I agree. Unfortunately what "fast" means is a contentious factor of this debate :smile:</text>
  </message>
  <message>
    <ts>2017-06-28T10:45:56.940344</ts>
    <user>U4SM7ECAG</user>
    <text>lol yeah, we won't solve this debate today for sure :slightly_smiling_face:
it's just that sometimes, I felt like I was spending time refactoring my models and eventually ended up changing them entirely 'cause I pulled out a feature else where or changed my specs for some reason. 
it would have been faster to get to a working point as Noah mentioned then deal with the refactoring and optimization. 
but it's like climbing a peak, we can reach the top some several routes :smile:</text>
  </message>
  <message>
    <ts>2017-06-28T11:00:38.324964</ts>
    <user>U5FU80S06</user>
    <text>How are lines of Elm count counted? Does it include blank lines, and statements spread across multiple lines -- which could all be put on one line?</text>
  </message>
  <message>
    <ts>2017-06-28T11:04:59.442048</ts>
    <user>U601ELFEG</user>
    <text>heh - don't bother! lines of code is a terrible measure of anything!</text>
  </message>
  <message>
    <ts>2017-06-28T11:05:23.452791</ts>
    <user>U3SJEDR96</user>
    <text>I think if you're just doing an informal "we have x many lines of elm in production!", it's just including everything - `cat **/*.elm | wc -l`. But for anything other than "look at my linecount", it's a completely pointless metric</text>
  </message>
  <message>
    <ts>2017-06-28T11:05:57.467902</ts>
    <user>U3SJEDR96</user>
    <text>Most likely there are tools out there that can strip empty lines and comments, but eh, why bother</text>
  </message>
  <message>
    <ts>2017-06-28T11:06:19.477298</ts>
    <user>U4JT89FGB</user>
    <text>here's what I use: `git ls-files | grep \.elm$ | xargs wc -l`</text>
  </message>
  <message>
    <ts>2017-06-28T11:06:39.486132</ts>
    <user>U0FP80EKB</user>
    <text>Mine: `alias elmloc='find . -name '\''*.elm'\'' | grep -v elm-stuff | xargs cloc'`</text>
  </message>
  <message>
    <ts>2017-06-28T11:39:41.335924</ts>
    <user>U4SM7ECAG</user>
    <text>Not sure if that fits here but is there any function similar to `Debug.log` but that would use the `console.log` from JS without transforming the data i'm inspecting into a string? 
It would be nice when we're merely printing some data to be able to use the advance object parsing of Chrome's console for instance</text>
  </message>
  <message>
    <ts>2017-06-28T11:47:33.536371</ts>
    <user>U4PT7NG4V</user>
    <text>I either saw a package that does it, or it was a dream I had... I'm not sure right now..</text>
  </message>
  <message>
    <ts>2017-06-28T11:47:35.537134</ts>
    <user>U3SJEDR96</user>
    <text>That would have to expose implementation details (such as "how are elm datatypes represented at runtime") which isn't ideal</text>
  </message>
  <message>
    <ts>2017-06-28T11:49:45.591715</ts>
    <user>U4SM7ECAG</user>
    <text>ok, is there a plan to make a chrome extension to the developer toolbox that would allow us to browse the models arriving to our update functions? (I'm being really picky there :D)</text>
  </message>
  <message>
    <ts>2017-06-28T11:53:41.691310</ts>
    <user>U3SJEDR96</user>
    <text>There is an ongoing project to investigate how we could improve the debugger. Oh, right, if you didn't know about it yet: there _is_ a builtin debugger that lets you inspect the model as it exits your update function already :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T11:55:48.745253</ts>
    <user>U4SM7ECAG</user>
    <text>by passing the debug flag to elm-make? 
I'm working on a project that use 0.16 and webpack, I'll check if I can get it to work with that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T11:56:13.755593</ts>
    <user>U4SM7ECAG</user>
    <text>thanks for the reminder, Elm is often easy enough to work with to stay away from that tool :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T11:56:24.760497</ts>
    <user>U3SJEDR96</user>
    <text>oh, not sure if that exists in 0.16 :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-06-28T11:58:29.813051</ts>
    <user>U4SM7ECAG</user>
    <text>ok well I'll keep fighting with `Debug.log` then :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T12:04:49.975445</ts>
    <user>U5Y1YQD6Y</user>
    <text>what's wrong with this? I am struggling hard with `Debug.log`</text>
  </message>
  <message>
    <ts>2017-06-28T12:05:15.985891</ts>
    <user>U5Y1YQD6Y</user>
    <text>this gives me an "I am looking for . . . an upper case name" error</text>
  </message>
  <message>
    <ts>2017-06-28T12:05:41.996848</ts>
    <user>U3SJEDR96</user>
    <text>You probably want to add braces of a `&amp;lt;|` like this:
```
historyLink content =
    Debug.log "a in historylink" &amp;lt;| a
        [ onClick &amp;lt;| ActivateTab History Nothing ]
        [ content ]
```</text>
  </message>
  <message>
    <ts>2017-06-28T12:08:19.059799</ts>
    <user>U2XRG0UKA</user>
    <text>The problem is an kind of like an order of operations thing. Debug.log is a function that takes two arguments, and `a` is a function that takes two arguments. Without any parentheses or the `&amp;lt;|`, Elm can't distinguish between the two function calls.</text>
  </message>
  <message>
    <ts>2017-06-28T12:08:39.067442</ts>
    <user>U5Y1YQD6Y</user>
    <text>thanks, &lt;@U3SJEDR96&gt; and &lt;@U2XRG0UKA&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T12:34:41.667194</ts>
    <user>U5XHTBFS6</user>
    <text>If elm-package does not allow modules with ports, what's the best way to get / publish bindings to JS libraries?</text>
  </message>
  <message>
    <ts>2017-06-28T12:46:56.929036</ts>
    <user>U4872964V</user>
    <text>what kind of bindings are we talking about?</text>
  </message>
  <message>
    <ts>2017-06-28T13:04:39.323860</ts>
    <user>U5VTA57UN</user>
    <text>An architecture question: I have an API module with functions that wrap Http POST and GET requests to my server.  The API module has an internal config state type, API.State, that it needs to create these request Cmds.  My app has several child modules, each of which needs to use the API to talk to the server.  How should I expose the API.State to the children so that they can make API calls?  It seems really clunky to keep a copy of API.State in each child's Model, and then propagate changes to API.State first up from API to the Main module, then down to each of the children.  Is there a better pattern?  In JS I'd just have an API object with internal state that was mutable, and have all the children have a reference to that object.  What's the right way in Elm?</text>
  </message>
  <message>
    <ts>2017-06-28T13:06:25.362318</ts>
    <user>U5VTA57UN</user>
    <text>i.e. &lt;http://API.post|API.post&gt; : (State -&amp;gt; String -&amp;gt; Body -&amp;gt; Decoder a -&amp;gt; (Result Error a -&amp;gt; msg) -&amp;gt; Cmd msg</text>
  </message>
  <message>
    <ts>2017-06-28T13:07:18.381466</ts>
    <user>U23SA861Y</user>
    <text>if you were going to do that, I would have the API module just return request and leave it up to other code how to handle it</text>
  </message>
  <message>
    <ts>2017-06-28T13:07:39.388738</ts>
    <user>U23SA861Y</user>
    <text>if you do that it become impossible to chain, or return two different messages</text>
  </message>
  <message>
    <ts>2017-06-28T13:08:27.406163</ts>
    <user>U5VTA57UN</user>
    <text>jonf: Ok, so "&lt;http://API.post|API.post&gt; : State -&amp;gt; String -&amp;gt; Body -&amp;gt; Decoder a -&amp;gt; Request a" but I still have the problem of how the child modules get up-to-date copies of State.</text>
  </message>
  <message>
    <ts>2017-06-28T13:08:55.416177</ts>
    <user>U23SA861Y</user>
    <text>like wise you can use dependecy injection and have your other code take a function of the form `String -&amp;gt; Body -&amp;gt; Decoder -&amp;gt; Request`  and then you can pass it in that function of `&lt;http://API.post|API.post&gt; state`</text>
  </message>
  <message>
    <ts>2017-06-28T13:09:15.423196</ts>
    <user>U0J1M0F32</user>
    <text>Do the child modules need to be the ones sending the API request? Could they instead kick off a message that causes the parent module to do that?</text>
  </message>
  <message>
    <ts>2017-06-28T13:09:17.424355</ts>
    <user>U23SA861Y</user>
    <text>that way your child libraries take as  a parameter just your run of the mill HTTP function</text>
  </message>
  <message>
    <ts>2017-06-28T13:09:29.428306</ts>
    <user>U5VTA57UN</user>
    <text>justin: that's it!  thanks.</text>
  </message>
  <message>
    <ts>2017-06-28T13:09:29.428314</ts>
    <user>U23SA861Y</user>
    <text>also true</text>
  </message>
  <message>
    <ts>2017-06-28T13:18:17.618532</ts>
    <user>U60ED1KFT</user>
    <text>I have a question on HTTP requests</text>
  </message>
  <message>
    <ts>2017-06-28T13:18:52.631165</ts>
    <user>U60ED1KFT</user>
    <text>I'm getting network error from Confluence API get call (Confluence is part of JIRA)</text>
  </message>
  <message>
    <ts>2017-06-28T13:19:13.638516</ts>
    <user>U23SA861Y</user>
    <text>what type of error</text>
  </message>
  <message>
    <ts>2017-06-28T13:19:21.641260</ts>
    <user>U60ED1KFT</user>
    <text>I has basic Authentication and these are my paramenters:</text>
  </message>
  <message>
    <ts>2017-06-28T13:19:27.643406</ts>
    <user>U60ED1KFT</user>
    <text>"Network Error"</text>
  </message>
  <message>
    <ts>2017-06-28T13:19:45.649982</ts>
    <user>U60ED1KFT</user>
    <text>no further info (makes trouble shooting hard)</text>
  </message>
  <message>
    <ts>2017-06-28T13:19:57.654192</ts>
    <user>U0FP80EKB</user>
    <text>Any information in the dev console?</text>
  </message>
  <message>
    <ts>2017-06-28T13:20:01.655497</ts>
    <user>U0FP80EKB</user>
    <text>in your browser</text>
  </message>
  <message>
    <ts>2017-06-28T13:20:03.656419</ts>
    <user>U23SA861Y</user>
    <text>yeah, F12</text>
  </message>
  <message>
    <ts>2017-06-28T13:20:11.659173</ts>
    <user>U0FP80EKB</user>
    <text>often the network tab will show what is coming back from the service</text>
  </message>
  <message>
    <ts>2017-06-28T13:20:16.660831</ts>
    <user>U60ED1KFT</user>
    <text>none</text>
  </message>
  <message>
    <ts>2017-06-28T13:20:22.663256</ts>
    <user>U60ED1KFT</user>
    <text>just "network error"</text>
  </message>
  <message>
    <ts>2017-06-28T13:20:26.664635</ts>
    <user>U0FP80EKB</user>
    <text>Can you curl to the endpoint?</text>
  </message>
  <message>
    <ts>2017-06-28T13:20:46.671821</ts>
    <user>U0FP80EKB</user>
    <text>Are you getting a response from Confluence, or is the error happening before that.</text>
  </message>
  <message>
    <ts>2017-06-28T13:20:55.674992</ts>
    <user>U0FP80EKB</user>
    <text>I'd try curling and see what you get</text>
  </message>
  <message>
    <ts>2017-06-28T13:21:12.681381</ts>
    <user>U60ED1KFT</user>
    <text>Ok let me see</text>
  </message>
  <message>
    <ts>2017-06-28T13:21:28.687305</ts>
    <user>U60ED1KFT</user>
    <text>I checked the JS console and saw an error there</text>
  </message>
  <message>
    <ts>2017-06-28T13:21:29.687475</ts>
    <user>U23SA861Y</user>
    <text>I think a CORs issue  with come back as a Elm network error, but the browser will tell you it's a CORs issue in the console</text>
  </message>
  <message>
    <ts>2017-06-28T13:21:39.691138</ts>
    <user>U60ED1KFT</user>
    <text>I think you're right</text>
  </message>
  <message>
    <ts>2017-06-28T13:21:48.694373</ts>
    <user>U60ED1KFT</user>
    <text>gettting this:</text>
  </message>
  <message>
    <ts>2017-06-28T13:21:50.695412</ts>
    <user>U0FP80EKB</user>
    <text>yeah, CORS errors are always fun :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T13:22:02.699422</ts>
    <user>U60ED1KFT</user>
    <text>XMLHttpRequest cannot load &lt;https://sbaone.atlassian.net/wiki/rest/api/space/CKB&gt;. Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin '&lt;http://localhost:8000&gt;' is therefore not allowed access. The response had HTTP status code 403.</text>
  </message>
  <message>
    <ts>2017-06-28T13:22:07.701131</ts>
    <user>U60ED1KFT</user>
    <text>so yeah a CORS</text>
  </message>
  <message>
    <ts>2017-06-28T13:22:10.702006</ts>
    <user>U0FP80EKB</user>
    <text>yup</text>
  </message>
  <message>
    <ts>2017-06-28T13:22:20.705766</ts>
    <user>U60ED1KFT</user>
    <text>thanks!</text>
  </message>
  <message>
    <ts>2017-06-28T13:22:23.707074</ts>
    <user>U60ED1KFT</user>
    <text>let me figure that out</text>
  </message>
  <message>
    <ts>2017-06-28T13:22:36.711683</ts>
    <user>U0FP80EKB</user>
    <text>good luck!</text>
  </message>
  <message>
    <ts>2017-06-28T13:38:24.061849</ts>
    <user>U5XHTBFS6</user>
    <text>norpan: In my case leaflet.js, but I imagine it's pretty common for people to need to use some JS library in Elm.</text>
  </message>
  <message>
    <ts>2017-06-28T13:41:27.128878</ts>
    <user>U60ED1KFT</user>
    <text>&lt;@U0FP80EKB&gt; any resources on handling CORS from elm you could point me to?</text>
  </message>
  <message>
    <ts>2017-06-28T13:41:36.131910</ts>
    <user>U23SA861Y</user>
    <text>you can't handle it from elm</text>
  </message>
  <message>
    <ts>2017-06-28T13:41:59.140115</ts>
    <user>U23SA861Y</user>
    <text>You either need the server to provide the appropriate headers or set up a proxy</text>
  </message>
  <message>
    <ts>2017-06-28T13:42:01.140848</ts>
    <user>U60ED1KFT</user>
    <text>ahh good to know thanks,</text>
  </message>
  <message>
    <ts>2017-06-28T13:42:14.145343</ts>
    <user>U23SA861Y</user>
    <text>TBH, you can't handle it in JS either</text>
  </message>
  <message>
    <ts>2017-06-28T13:42:26.149641</ts>
    <user>U60ED1KFT</user>
    <text>ok got it</text>
  </message>
  <message>
    <ts>2017-06-28T13:42:47.156997</ts>
    <user>U0FP80EKB</user>
    <text>yeah, it is a server thing</text>
  </message>
  <message>
    <ts>2017-06-28T13:43:04.163273</ts>
    <user>U0FP80EKB</user>
    <text>The browser will be sending out the preflight OPTIONS request</text>
  </message>
  <message>
    <ts>2017-06-28T13:43:12.166302</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5XHTBFS6&gt; basically Elm interpretations are preferred (rather than straight conversions of the JS api), if that's not possible, though, bindings could be acceptable, but not publishable. What you could do is write up everything needed to do the logic, conversions, all that; and tell users they need to add an outgoing port, and incoming port, and how to hook it up on the JS and Elm side. Port logic tends to be really app-specific rather than library specific, tho</text>
  </message>
  <message>
    <ts>2017-06-28T13:43:14.166796</ts>
    <user>U0FP80EKB</user>
    <text>then the server responds to that</text>
  </message>
  <message>
    <ts>2017-06-28T13:45:30.216890</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5XHTBFS6&gt; for example, elm-date-extra started as an effort to get moment.js like functionality in Elm. It's grown to be quite a different beast, by now, though</text>
  </message>
  <message>
    <ts>2017-06-28T13:50:38.330976</ts>
    <user>U5XHTBFS6</user>
    <text>&lt;@U3SJEDR96&gt; yeah, in my case I only need a handful of functions, so I did make the ports app-specific. I was just thinking that it could be useful to have a leaflet&amp;lt;-&amp;gt;elm  binding with an elm-friendly api that anyone could use. But I can see how an example port module + small tutorial could be just as good.</text>
  </message>
  <message>
    <ts>2017-06-28T13:51:45.356226</ts>
    <user>U4872964V</user>
    <text>Indeed, and then you use ports. If you have significant code on the elm side you can publish that as a package with information on how to set the ports up.</text>
  </message>
  <message>
    <ts>2017-06-28T14:03:12.621422</ts>
    <user>U5XHTBFS6</user>
    <text>Maybe it would be insteresting if packages on elm-package could be tagged and we could do `elm-package install foo/bar --allow-ports` at our own risk.</text>
  </message>
  <message>
    <ts>2017-06-28T14:03:20.624827</ts>
    <user>U5XHTBFS6</user>
    <text>or something like that</text>
  </message>
  <message>
    <ts>2017-06-28T14:04:35.654147</ts>
    <user>U23SA861Y</user>
    <text>The problem with ports is that you need to register all your call backs when you init the app which doesn't play nice with a module like structure</text>
  </message>
  <message>
    <ts>2017-06-28T14:08:22.739934</ts>
    <user>U5XHTBFS6</user>
    <text>Indeed, but one would need to register the ports as well if they were doing everything from scratch instead of using the module. The module could have some sort of init.js that the user would import on their html file (which they would need to do anyway) and do something like `init_module(elm_app)`.</text>
  </message>
  <message>
    <ts>2017-06-28T14:08:41.746586</ts>
    <user>U3SJEDR96</user>
    <text>That, and it's become quite normal to deal with a single pair of inbound/outbound ports, taking care of encoding/decoding manually</text>
  </message>
  <message>
    <ts>2017-06-28T14:10:00.775636</ts>
    <user>U0FP80EKB</user>
    <text>Really? That seems like you are replacing the elm port routing with your own</text>
  </message>
  <message>
    <ts>2017-06-28T14:10:10.779405</ts>
    <user>U0FP80EKB</user>
    <text>I like having specifically named touch points</text>
  </message>
  <message>
    <ts>2017-06-28T14:10:23.784187</ts>
    <user>U0FP80EKB</user>
    <text>Same reason I have specific http endpoints (although I suppose graphql is a different take on that)</text>
  </message>
  <message>
    <ts>2017-06-28T14:10:59.797402</ts>
    <user>U5XHTBFS6</user>
    <text>TBH though I'm very new to frontend and I'm not sure how people handle modules at all on the wider js world.</text>
  </message>
  <message>
    <ts>2017-06-28T14:11:42.813105</ts>
    <user>U0FP80EKB</user>
    <text>I skipped most all the js stuff with the newer stuff in it. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T14:11:49.815601</ts>
    <user>U0FP80EKB</user>
    <text>Luckily jumped from js+jquery to elm :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T14:15:41.902299</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U0FP80EKB&gt; well it minimizes the API surface between elm and the outside world. The idea is generally to have one `port emit : Json.Value -&amp;gt; Cmd msg` and reversely, `port inbound : (Json.Value -&amp;gt; msg) -&amp;gt; Sub msg`. You can still create functions that use those to do specific things, but then on the JS side you only have one subscribe to do, and you can switch on, say `msg.type` - much like elm's update or a react reducer</text>
  </message>
  <message>
    <ts>2017-06-28T14:16:52.928857</ts>
    <user>U0FP80EKB</user>
    <text>Yeah, I could see that. I could understand people liking that. For me, the less code I have on the javascript side, the happier I am. :slightly_smiling_face: Definitely a personal preference.</text>
  </message>
  <message>
    <ts>2017-06-28T14:18:09.957418</ts>
    <user>U0FP80EKB</user>
    <text>To be honest, I try to minimize the amount of js interop. When we do, it generally is because we are interacting with a specific js library, such as an editor, and most of that is inbound listening to the events.</text>
  </message>
  <message>
    <ts>2017-06-28T14:18:10.957711</ts>
    <user>U23SA861Y</user>
    <text>I personally like the use of custom tags</text>
  </message>
  <message>
    <ts>2017-06-28T14:18:25.963333</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, sure, I can see that, too</text>
  </message>
  <message>
    <ts>2017-06-28T14:18:34.966764</ts>
    <user>U0FP80EKB</user>
    <text>I suppose if there was a lot of interop, then it could minimize that.</text>
  </message>
  <message>
    <ts>2017-06-28T14:18:37.967767</ts>
    <user>U23SA861Y</user>
    <text>there was a neat talk by &lt;@U0CL0AS3V&gt; about using them for google maps which seemed to glue all this together nicely</text>
  </message>
  <message>
    <ts>2017-06-28T14:22:26.054402</ts>
    <user>U23SA861Y</user>
    <text>&lt;https://www.youtube.com/watch?v=ar3TakwE8o0&amp;amp;t=1s&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T14:24:04.091609</ts>
    <user>U5DJNFLUD</user>
    <text>Anyone who's curious, I used &lt;https://www.paramander.com/blog/using-ports-to-deal-with-files-in-elm-0-17&gt; as a starting point and was able to implement CSV file/uploading/parsing based on it!</text>
  </message>
  <message>
    <ts>2017-06-28T14:30:02.231746</ts>
    <user>U0JFGGZS6</user>
    <text>nice!</text>
  </message>
  <message>
    <ts>2017-06-28T14:55:44.821135</ts>
    <user>U5QJW0DDE</user>
    <text>hi folks. never written a line of elm in my life but watching some tutorials and presentations on youtube to get a high-level overview</text>
  </message>
  <message>
    <ts>2017-06-28T14:56:23.835554</ts>
    <user>U611WQPL4</user>
    <text>Hello.  Learning here.  Still struggling with some stuff but I'm trying to get there.</text>
  </message>
  <message>
    <ts>2017-06-28T14:56:35.839970</ts>
    <user>U5QJW0DDE</user>
    <text>i'm trying to debate between elm and clojurescript (which I have used a lot) for a high-performance and complex SPA. I wrote a very large enterprise SPA in cljs last year for a company, but am thinking of making a switch on a new project</text>
  </message>
  <message>
    <ts>2017-06-28T14:57:05.851053</ts>
    <user>U0LPMPL2U</user>
    <text>:wave: Welcome both :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T14:57:08.852249</ts>
    <user>U5QJW0DDE</user>
    <text>i read somewhere (can't remember where) that Elm's creators have said that SPAs are not best suited for Elm, but I cannot recall where that was or why</text>
  </message>
  <message>
    <ts>2017-06-28T14:59:24.903377</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U611WQPL4&gt; re your tweet, in elm it's basically due to three things: 1) nesting generally isn't how you abstract in a functional language generally 2) immutability means you create new records rather than updating records and 3) we don't really have concise "record update" syntax to mirror the getter syntax we do have (i.e. `.foo`)</text>
  </message>
  <message>
    <ts>2017-06-28T14:59:53.914174</ts>
    <user>U611WQPL4</user>
    <text>Haha.  …. and my tweet got found. :stuck_out_tongue:    But 2) makes total sense.</text>
  </message>
  <message>
    <ts>2017-06-28T15:01:32.953727</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U5QJW0DDE&gt; You can definitely write SPAs in Elm. I'd suggest writing a toy app in Elm to get a feel for what it can do well and what is more difficult. If you're making a big tech decision, it's probably better to have some first-hand experience rather than just going off someone's say-so online :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T15:02:03.965357</ts>
    <user>U5QJW0DDE</user>
    <text>of course, but all the same it's nice to know why others have succeeded or failed on doing something you have not yet done</text>
  </message>
  <message>
    <ts>2017-06-28T15:02:07.966790</ts>
    <user>U3SJEDR96</user>
    <text>you can probably get some inspiration from &lt;https://github.com/rtfeldman/elm-spa-example&gt; though that's not exactly a beginner project :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T15:02:49.982598</ts>
    <user>U0LPMPL2U</user>
    <text>for sure :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T15:04:30.019782</ts>
    <user>U611WQPL4</user>
    <text>I have a beginning question that's vexing me.  When you see things like `List Int` or `Node Int List` or `Html Msg` what's going on?</text>
  </message>
  <message>
    <ts>2017-06-28T15:05:06.032992</ts>
    <user>U3SJEDR96</user>
    <text>`List Int` means you're dealing with a list where all the members are integers</text>
  </message>
  <message>
    <ts>2017-06-28T15:05:53.049581</ts>
    <user>U3SJEDR96</user>
    <text>`Html Msg` means you're dealing with virtual-dom nodes that respond to events by emitting messages of type `Msg` (which is a type you provide yourself)</text>
  </message>
  <message>
    <ts>2017-06-28T15:06:04.053741</ts>
    <user>U3SJEDR96</user>
    <text>`Node Int List` isn't really valid semantically</text>
  </message>
  <message>
    <ts>2017-06-28T15:06:17.058398</ts>
    <user>U3HQVHERX</user>
    <text>Is there anything to consider when using Elm with ADA compliance?</text>
  </message>
  <message>
    <ts>2017-06-28T15:06:51.069857</ts>
    <user>U3SJEDR96</user>
    <text>there an a11y package that could be interesting</text>
  </message>
  <message>
    <ts>2017-06-28T15:07:13.077580</ts>
    <user>U3SJEDR96</user>
    <text>but honestly I don't know much about accessibility in general, and even less about ADA :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-06-28T15:07:54.091780</ts>
    <user>U5QJW0DDE</user>
    <text>how has JS interop evolved in Elm, is it still fairly complex to use a JS numerics library, for example, in your Elm project?</text>
  </message>
  <message>
    <ts>2017-06-28T15:09:19.120471</ts>
    <user>U0J1M0F32</user>
    <text>I'm not sure I know how to answer that question.</text>
  </message>
  <message>
    <ts>2017-06-28T15:09:21.121098</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U611WQPL4&gt; every expression in Elm has a type; and some of those types can take "type parameters" to say something about their contents, generally relevant when dealing with some sort of container type, though not exclusively. For example, a `Maybe a` can be either `Just a` or `Nothing`. `a` is just a type variable there, which could also be any valid type. For example, you could be dealing with a `Maybe String` which could be `Just "a string"` or `Nothing`</text>
  </message>
  <message>
    <ts>2017-06-28T15:09:43.128603</ts>
    <user>U611WQPL4</user>
    <text>^^ &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/List#tail&gt; is helping with that.  :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T15:11:37.168098</ts>
    <user>U0CLDU8UB</user>
    <text>&lt;@U5QJW0DDE&gt; Compared to ClojureScript, it is more work to use any existing JS code. The good side of the tradeoff is that in Elm, the integrations can never crash your applications.</text>
  </message>
  <message>
    <ts>2017-06-28T15:13:00.196486</ts>
    <user>U0CLDU8UB</user>
    <text>Basically you set up a border control between Elm and JS, and the border control will keep any unexpected things out of the runtime.</text>
  </message>
  <message>
    <ts>2017-06-28T15:13:48.213140</ts>
    <user>U5QJW0DDE</user>
    <text>i think i read that this "border" has gotten smoother over the last year or two, if i recall</text>
  </message>
  <message>
    <ts>2017-06-28T15:14:24.225707</ts>
    <user>U3SJEDR96</user>
    <text>It helps to think of JS stuff as a "remote api", you can send stuff at it, and it can send stuff to you. You can't, for example, synchronously call something and get your value back, though.</text>
  </message>
  <message>
    <ts>2017-06-28T15:14:54.235885</ts>
    <user>U0CLDU8UB</user>
    <text>Hmm.. Well they're not Signals anymore, if that's what you mean. That's the main thing that has changed with ports within the past two years.</text>
  </message>
  <message>
    <ts>2017-06-28T15:15:10.241563</ts>
    <user>U5QJW0DDE</user>
    <text>do i understand that all interaction with JS is async?</text>
  </message>
  <message>
    <ts>2017-06-28T15:15:16.243530</ts>
    <user>U5QJW0DDE</user>
    <text>if that's what you meant</text>
  </message>
  <message>
    <ts>2017-06-28T15:15:23.246141</ts>
    <user>U0CLDU8UB</user>
    <text>it is</text>
  </message>
  <message>
    <ts>2017-06-28T15:15:28.247663</ts>
    <user>U5QJW0DDE</user>
    <text>interesting indeed</text>
  </message>
  <message>
    <ts>2017-06-28T15:16:17.265095</ts>
    <user>U3SJEDR96</user>
    <text>yep, that's what it boils down to. On the other hand, this leads to people re-implementing stuff in Elm, rathr than provide simple bindings, which then leads to much more "natural" API's :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T15:16:56.277968</ts>
    <user>U5QJW0DDE</user>
    <text>i suppose it is not so easy to use an existing UI framework like Material Design or Bootstrap in Elm</text>
  </message>
  <message>
    <ts>2017-06-28T15:17:25.287523</ts>
    <user>U3SJEDR96</user>
    <text>Both exist in Elm :smile:</text>
  </message>
  <message>
    <ts>2017-06-28T15:17:25.287633</ts>
    <user>U3S3S7J06</user>
    <text>&lt;@U5QJW0DDE&gt; there is actually `elm-bootstrap` and `elm-mdl`</text>
  </message>
  <message>
    <ts>2017-06-28T15:17:58.298883</ts>
    <user>U5QJW0DDE</user>
    <text>now that's very interesting</text>
  </message>
  <message>
    <ts>2017-06-28T15:17:59.299120</ts>
    <user>U0CLDU8UB</user>
    <text>But for sure, their implementations are not trivial.</text>
  </message>
  <message>
    <ts>2017-06-28T15:18:48.315650</ts>
    <user>U3S3S7J06</user>
    <text>there were some limitations last time i used `elm-mdl`, like non-material dropdowns, but someone created a pull request for it. it might be part of the library now.</text>
  </message>
  <message>
    <ts>2017-06-28T15:19:56.338074</ts>
    <user>U3SJEDR96</user>
    <text>Personally, I don't really like using `elm-mdl`, it tends to permeate rather quickly through your entire app and state</text>
  </message>
  <message>
    <ts>2017-06-28T15:20:21.346119</ts>
    <user>U3S3S7J06</user>
    <text>&lt;@U3SJEDR96&gt; yes. yes it does.</text>
  </message>
  <message>
    <ts>2017-06-28T15:21:57.378444</ts>
    <user>U3SJEDR96</user>
    <text>But it's an impressive piece of work nevertheless, and it does what it says on the box. Strictly my personal opinion :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T15:23:26.407942</ts>
    <user>U3S3S7J06</user>
    <text>when it comes to those large frontend frameworks, they really guide your view even outside of elm. they are just big, in general.</text>
  </message>
  <message>
    <ts>2017-06-28T15:24:32.429903</ts>
    <user>U0CLDU8UB</user>
    <text>Using the CSS parts of Bootstrap/Bulma/etc. is very simple, of course. Sadly you tend to need dropdown menus, accordions or what have you as well.</text>
  </message>
  <message>
    <ts>2017-06-28T15:27:09.484089</ts>
    <user>U5QJW0DDE</user>
    <text>are elm's data structures persistent in the way like they are in Clojure?</text>
  </message>
  <message>
    <ts>2017-06-28T15:28:02.502467</ts>
    <user>U3SJEDR96</user>
    <text>Yes</text>
  </message>
  <message>
    <ts>2017-06-28T15:30:10.545967</ts>
    <user>U5QJW0DDE</user>
    <text>i'm watching this presentation about building and running an Elm app *inside* a React app, and I'm thinking, whaaa /?</text>
  </message>
  <message>
    <ts>2017-06-28T15:30:21.550182</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;https://watchyt.com/videos/elm-in-production-surprises-and-pain-points?v=LZj_1qVURL0&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T15:34:38.638754</ts>
    <user>U3SJEDR96</user>
    <text>I think it's not the most common scenario, but the fact that it's possible makes it a nice candidate for gradual adoption :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T15:38:13.711800</ts>
    <user>U5QJW0DDE</user>
    <text>definitely some nice UI examples in that video</text>
  </message>
  <message>
    <ts>2017-06-28T15:41:10.771553</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, Kevin gives _really_ nice presentations :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T15:55:09.059358</ts>
    <user>U0CQ254F5</user>
    <text>&lt;@U5QJW0DDE&gt; as for embedding elm within a react app, i agree with &lt;@U3SJEDR96&gt;, its relatively straightforward and a good way for teams to test it out</text>
  </message>
  <message>
    <ts>2017-06-28T15:55:49.073652</ts>
    <user>U5P4FLYLE</user>
    <text>Hi,  I would like to go elegantly from `values`:
```type Poly                                                                                                                                                                                  
     = Float Float                                                                                                                                                                          
     | String String                                                                                                                                                                        
     | Date Date.Date
xval=List Poly
yval=List List Poly
values=(xval,yval) 
```
to  extractedValues which has type `(List Date, List List Float)`
How do you pattern match something like that?</text>
  </message>
  <message>
    <ts>2017-06-28T15:58:07.123120</ts>
    <user>U3SJEDR96</user>
    <text>easiest would be `List.unzip values |&amp;gt; List.foldr (\val (dates, strings, floats) -&amp;gt; case val of *pattern match and prepend it to the correct entry*) ([], [], [])`</text>
  </message>
  <message>
    <ts>2017-06-28T15:58:52.138596</ts>
    <user>U3SJEDR96</user>
    <text>or you can do it in one go, too, if you write a function `Poly -&amp;gt; (List Date, List String, List Float) -&amp;gt; (List Date, List String, List Float)`</text>
  </message>
  <message>
    <ts>2017-06-28T15:59:30.151965</ts>
    <user>U3SJEDR96</user>
    <text>Or wait, I totally misunderstood :smile:</text>
  </message>
  <message>
    <ts>2017-06-28T15:59:40.155308</ts>
    <user>U3SJEDR96</user>
    <text>sec</text>
  </message>
  <message>
    <ts>2017-06-28T16:03:45.244216</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://ellie-app.com/3BNZD5X5DKKa1/0&gt; &lt;@U5P4FLYLE&gt; something like that I suppose</text>
  </message>
  <message>
    <ts>2017-06-28T16:05:09.273416</ts>
    <user>U5P4FLYLE</user>
    <text>thanks, &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T16:06:32.302191</ts>
    <user>U60DVU1PS</user>
    <text>Is there any article/documentation covering the reasoning for using "-&amp;gt;" in anonymous functions?  Apologies if this is an obvious matter.</text>
  </message>
  <message>
    <ts>2017-06-28T16:09:27.360974</ts>
    <user>U2W8J47KQ</user>
    <text>I would guess it's because Haskell does the same</text>
  </message>
  <message>
    <ts>2017-06-28T16:22:36.624649</ts>
    <user>U5Y2S6SJF</user>
    <text>is it possible to pass in a "none" function to main's update argument? similar to subscriptions?

```
 , subscriptions = (\_ -&amp;gt; Sub.none)
```</text>
  </message>
  <message>
    <ts>2017-06-28T16:23:12.636898</ts>
    <user>U0LPMPL2U</user>
    <text>`always Sub.none` ?</text>
  </message>
  <message>
    <ts>2017-06-28T16:23:52.650864</ts>
    <user>U0LPMPL2U</user>
    <text>oh wait, for `update` :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-06-28T16:24:06.655638</ts>
    <user>U5Y2S6SJF</user>
    <text>yeah i figured that was coupled to subscriptions so didn't try</text>
  </message>
  <message>
    <ts>2017-06-28T16:24:38.666584</ts>
    <user>U0LPMPL2U</user>
    <text>You want something like this?
```
, update = (\msg model -&amp;gt; (model, Cmd.none))
```</text>
  </message>
  <message>
    <ts>2017-06-28T16:26:17.700329</ts>
    <user>U5Y2S6SJF</user>
    <text>That should work. Get's a lot closer to my goal than writing out a basic update and pattern matching on a NoOp msg</text>
  </message>
  <message>
    <ts>2017-06-28T16:28:07.737546</ts>
    <user>U0LPMPL2U</user>
    <text>I suppose you could also do:
```
, update = always init
```

assuming you have an `init` function that returns an initial model and `Cmd.none`</text>
  </message>
  <message>
    <ts>2017-06-28T16:29:06.758324</ts>
    <user>U0CLDU8UB</user>
    <text>Nope, that would expect just a single argument.

```
, update = \_ _ -&amp;gt; init
```
would work though.</text>
  </message>
  <message>
    <ts>2017-06-28T16:31:08.801484</ts>
    <user>U0LPMPL2U</user>
    <text>good catch :thumbsup:</text>
  </message>
  <message>
    <ts>2017-06-28T16:34:48.877584</ts>
    <user>U5Y2S6SJF</user>
    <text>thanks.. i guess i should of been able to figure that out if i read the types in the documentation :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T16:39:42.977910</ts>
    <user>U0LPMPL2U</user>
    <text>It can be easier to start by writing a constant `update` function before translating to an anonymous function. e.g.
```
update : Msg -&amp;gt; Model -&amp;gt; (Model, Cmd Msg)
update _ model =
  (model, Cmd.none)

-- OR

update : Msg -&amp;gt; Model -&amp;gt; (Model, Cmd Msg)
update _ _ -&amp;gt;
  init
```</text>
  </message>
  <message>
    <ts>2017-06-28T17:16:45.717162</ts>
    <user>U5Y1YQD6Y</user>
    <text>y'all, does Elm have a concept of `unless`?</text>
  </message>
  <message>
    <ts>2017-06-28T17:23:16.834249</ts>
    <user>U3SJEDR96</user>
    <text>Nope.</text>
  </message>
  <message>
    <ts>2017-06-28T17:28:49.931619</ts>
    <user>U0JFGGZS6</user>
    <text>`if (not x) then ..  else ..` ?</text>
  </message>
  <message>
    <ts>2017-06-28T17:33:10.008141</ts>
    <user>U0LPMPL2U</user>
    <text>Elm forces you to handle all cases. Because of this, you always need an `else` clause</text>
  </message>
  <message>
    <ts>2017-06-28T17:33:47.019320</ts>
    <user>U0LPMPL2U</user>
    <text>`unless` `then` `else` would be the same as `if` `then` `else` but just flipping the clauses</text>
  </message>
  <message>
    <ts>2017-06-28T17:35:07.041791</ts>
    <user>U0LPMPL2U</user>
    <text>`unless` / `else` is harder to reason about because it's expressed negatively</text>
  </message>
  <message>
    <ts>2017-06-28T17:38:08.093291</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U5Y1YQD6Y&gt; I'm guessing you may be coming from Ruby which has `unless`? It's convenient in Ruby when you aren't handling the `else` case e.g.
```
return "foo" unless condition?

# OR

unless condition?
  do_thing
end
```

When you add `else` it becomes less useful. `unless` / `else` is generally frowned upon and better expressed positively as `if` / `else`</text>
  </message>
  <message>
    <ts>2017-06-28T17:39:19.113735</ts>
    <user>U5Y1YQD6Y</user>
    <text>Right you are, &lt;@U0LPMPL2U&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T17:39:28.116161</ts>
    <user>U5Y1YQD6Y</user>
    <text>(I'm coming from Ruby)</text>
  </message>
  <message>
    <ts>2017-06-28T17:39:43.120253</ts>
    <user>U0LPMPL2U</user>
    <text>Same for me :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T17:40:42.137126</ts>
    <user>U0FP80EKB</user>
    <text>me three!</text>
  </message>
  <message>
    <ts>2017-06-28T18:00:35.456842</ts>
    <user>U23SA861Y</user>
    <text>I kinda wish if didn't follow the if else then paradigm like it was implemented more like a regular function `if : Bool -&amp;gt; a -&amp;gt; a -&amp;gt; a`</text>
  </message>
  <message>
    <ts>2017-06-28T19:53:05.759234</ts>
    <user>U5P4FLYLE</user>
    <text>Hi, how would you extract values like below:
```input = [[1,2,3] , [4,5,6] , [7,8,9],...]
output=[[1,4,7,..], [2,5,8,...], [3,6,9,...]]```
and in such a way that it is prepared to support extracting input array that can have arrays of different lengths?
```input = [ [1,2], [3,4], [5,6],...]
output = [ [1,3,5,...], [2,4,6,...]]```</text>
  </message>
  <message>
    <ts>2017-06-28T19:57:32.801079</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5P4FLYLE&gt; Does this meet what you are hoping for? &lt;http://package.elm-lang.org/packages/elm-community/list-extra/6.1.0/List-Extra#transpose&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T20:01:16.839192</ts>
    <user>U5P4FLYLE</user>
    <text>yes, this is what I am looking for - thanks</text>
  </message>
  <message>
    <ts>2017-06-28T20:56:29.299290</ts>
    <user>U5J08KX0D</user>
    <text>Hi. I'm looking for a simple example of responding to an onMouseOver message over a named SVG element. I'm confused as to what message I will get in updates and whether or not I need to listen to the DOM. 
Say I have an element 
`circle [ name "head", cx canvas_center, cy "100", r "65", fill "#FFCD94" ] []
`</text>
  </message>
  <message>
    <ts>2017-06-28T20:56:57.303018</ts>
    <user>U5J08KX0D</user>
    <text>how would I get a mouse over message for that element? 

As ever, grateful for the help!!</text>
  </message>
  <message>
    <ts>2017-06-28T21:01:40.342561</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5J08KX0D&gt; it works just like the Html package, &lt;http://package.elm-lang.org/packages/elm-lang/svg/2.0.0/Svg-Events#onMouseOver&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T21:12:00.428115</ts>
    <user>U5J08KX0D</user>
    <text>OK, thanks &lt;@U153UK3FA&gt; - exactly the advice I needed and got me underway!</text>
  </message>
  <message>
    <ts>2017-06-28T21:23:04.516454</ts>
    <user>U5J08KX0D</user>
    <text>I now get a "Click" msg onClick... how can I get the name of the object clicked on. onClick only expects one argument, and I'd like to say [onclick Click "head",...]</text>
  </message>
  <message>
    <ts>2017-06-28T21:29:05.563329</ts>
    <user>U5J08KX0D</user>
    <text>got it: [ onClick (Click "some string"), ...] and
Message = Click String</text>
  </message>
  <message>
    <ts>2017-06-28T21:29:06.563422</ts>
    <user>U236M9FH9</user>
    <text>`onClick (Click "head")` or `onClick &amp;lt;| Click "head"`</text>
  </message>
  <message>
    <ts>2017-06-28T21:29:09.563747</ts>
    <user>U5J08KX0D</user>
    <text>is that correct?</text>
  </message>
  <message>
    <ts>2017-06-28T21:29:27.566084</ts>
    <user>U5J08KX0D</user>
    <text>Great &lt;@U236M9FH9&gt; - thanks!</text>
  </message>
  <message>
    <ts>2017-06-28T21:30:13.572449</ts>
    <user>U236M9FH9</user>
    <text>But if you have a fixed amount of strings you're going to use, you could make it it's own type: `type BodyPart = Head | LeftArm | Torso | ... `, `type Message = Clicked BodyPart`, `onClick &amp;lt;| Click Head`</text>
  </message>
  <message>
    <ts>2017-06-28T21:30:32.575856</ts>
    <user>U236M9FH9</user>
    <text>And then the compiler will tell you if you accidentally misspell one :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-28T21:46:03.696150</ts>
    <user>U5VTA57UN</user>
    <text>Architecture question.  I have an API module with internal state that's needed to generate a Http.Request.  Other child modules don't have access to that state, so they can't call the API module directly.  Instead, I use an OutMsg from children back to Main.  That OutMsg causes Main to tell API to send a specific request.  I'm having trouble finding a clean way to get responses back to the children that initiated requests.  They way I'm doing it involves a lot of tagging functions and making all my child models and msgs variable types (where the type variable is the main Msg type).  Any examples of clean solutions to this type of problem?</text>
  </message>
  <message>
    <ts>2017-06-28T21:58:09.789466</ts>
    <user>U236M9FH9</user>
    <text>&lt;@U5VTA57UN&gt; I have a model w/ an array of items nested under another array of items. I use indexedMaps to generate the HTML. When one of the nested items creates a Http.Request, I identify which one by adding the indexes to the msg: `type Msg = SaveSectionExercise Int Int (Result Http.Error SectionExercise)`, that lets me update the proper nested child.</text>
  </message>
  <message>
    <ts>2017-06-28T22:02:13.823225</ts>
    <user>U5VTA57UN</user>
    <text>&lt;@U236M9FH9&gt; I see.  I suppose I could do the routing using identifier strings (in place of the 2 Ints you use) and have main pass the response to the child that wants the response.  But that means that for every call to the API in every child I'll need a unique routing string, and I don't get any compile time checks to make sure I didn't typo a routing string.</text>
  </message>
  <message>
    <ts>2017-06-28T22:03:26.832947</ts>
    <user>U236M9FH9</user>
    <text>The initiating children don't have some unique identifier in their model?</text>
  </message>
  <message>
    <ts>2017-06-28T23:02:11.263825</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5VTA57UN&gt; Talk of children and routing of messages sounds like you might benefit from letting go of how you are accustomed to architecting things. Instead of children, it is often useful to think in terms of data structures and functions. Evan's talk at Elm Europe might be worth watching for some guidance in this area: &lt;https://www.youtube.com/watch?v=2ihTgEYiKpI&gt;</text>
  </message>
  <message>
    <ts>2017-06-28T23:12:33.332904</ts>
    <user>U5J08KX0D</user>
    <text>&lt;@U236M9FH9&gt; 
Read my mind - Just worked that out - and it's fantastic!
Also 
Eyes = LeftEye | RightEye
BodyPart = Head | Eyes | ...

I could get used to this help from the compiler :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-29T02:52:10.870633</ts>
    <user>U0SES5Y3T</user>
    <text>so, when I do floating type division 0 / 0 I get NaN, but integer division 0 // 0 gives zero, is there another way to safely handle this case?</text>
  </message>
  <message>
    <ts>2017-06-29T02:54:42.895788</ts>
    <user>U0SES5Y3T</user>
    <text>you can test this out in &lt;http://elm-lang.org/try|elm-lang.org/try&gt; if you want:
```
import Html exposing (text)

main = text (toString (0 / 0))
```</text>
  </message>
  <message>
    <ts>2017-06-29T03:13:40.100569</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U0SES5Y3T&gt; the "issue" is that `NaN` is a Float thing, so `0 // 0` can't really return that. The other option is returning a Result, but that's pretty annoying, too. What would you define as safe?</text>
  </message>
  <message>
    <ts>2017-06-29T03:14:34.110277</ts>
    <user>U3SJEDR96</user>
    <text>(also, &lt;https://github.com/elm-lang/core/issues/721&gt; tracks that type of thing, there's a few interesting tidbits in there :)</text>
  </message>
  <message>
    <ts>2017-06-29T04:09:40.799846</ts>
    <user>U5QJW0DDE</user>
    <text>i have a js project that i'd like to port to Elm as a test and am wondering if some of what it does would be difficult to do in Elm. In short, I take an SVG and render it to PNG in JS by using an HTML canvas as the conversion renderer. it looks like this in JS: &lt;https://paste.ofcode.org/XACLTwrZwaTgDvizZUY77T&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T04:10:18.808699</ts>
    <user>U5QJW0DDE</user>
    <text>i know Elm has good SVG support, but I haven't read much about dealing with canvas or the techniques described here, would it be fairly complicated?</text>
  </message>
  <message>
    <ts>2017-06-29T04:35:17.168965</ts>
    <user>U0CLDU8UB</user>
    <text>You probably can't do that in Elm</text>
  </message>
  <message>
    <ts>2017-06-29T04:45:08.315277</ts>
    <user>U5QJW0DDE</user>
    <text>good to know</text>
  </message>
  <message>
    <ts>2017-06-29T04:53:28.441449</ts>
    <user>U3KSN5MAL</user>
    <text>Has anyone written a recursive rename function? My brain is being silly and i can't work out a clean way to do it atm, 

need to check a list if a name duplicate exists, and then add a number, then recheck the new name ect</text>
  </message>
  <message>
    <ts>2017-06-29T05:00:05.545429</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://ellie-app.com/3C3LPJ6tmT9a1/0&gt; something like that?</text>
  </message>
  <message>
    <ts>2017-06-29T05:05:40.634432</ts>
    <user>U3KSN5MAL</user>
    <text>Perfect!</text>
  </message>
  <message>
    <ts>2017-06-29T05:05:43.635230</ts>
    <user>U3KSN5MAL</user>
    <text>Thank you!</text>
  </message>
  <message>
    <ts>2017-06-29T05:06:42.650733</ts>
    <user>U3SJEDR96</user>
    <text>(tail recursive, so should be stack-safe, too)</text>
  </message>
  <message>
    <ts>2017-06-29T05:07:09.657727</ts>
    <user>U3KSN5MAL</user>
    <text>that's a super clean way to do it!</text>
  </message>
  <message>
    <ts>2017-06-29T06:08:41.570511</ts>
    <user>U604S603Y</user>
    <text>I have a question concerning "how do I even do that in functional programming/Elm":
I have a list of items, each item has an edit button. I click the button, a popup is opened where I can edit the item's properties. I click "save" in the popup. Now I want to change this item's properties in the list of items - which won't work because the item is immutable and the list is immutable, too?</text>
  </message>
  <message>
    <ts>2017-06-29T06:11:56.615184</ts>
    <user>U604S603Y</user>
    <text>My first and up to now only idea would be: 
Give every item a unique id, so I can identify it. Make a new list from the old list, but filter out the one item (by Id) which I changed. Make a new item from the old item with the changed properties. Append new item to list. Sort list again, so it "looks the same" afterwards.
But does seem a lot of stuff to do for one property change?</text>
  </message>
  <message>
    <ts>2017-06-29T06:19:30.715925</ts>
    <user>U2D5SAEMN</user>
    <text>I guess you could map over the list and only update the item with the matching id?</text>
  </message>
  <message>
    <ts>2017-06-29T06:20:31.729627</ts>
    <user>U3SJEDR96</user>
    <text>yeah, you can do something like `List.map (\item -&amp;gt; if item.id == idToUpdate then updateItem item else item) items` where you have a function `updateItem` that updates that item to the expected value</text>
  </message>
  <message>
    <ts>2017-06-29T06:22:37.757294</ts>
    <user>U2D5SAEMN</user>
    <text>Yes, and assuming your items are records, you can "update" a record by returning a new, updated record: `updateItem item = { item | name = "My updated name" }`</text>
  </message>
  <message>
    <ts>2017-06-29T06:27:25.819287</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://ellie-app.com/3C55Cp9mV5na1/0&gt; for a simple example</text>
  </message>
  <message>
    <ts>2017-06-29T06:27:32.820680</ts>
    <user>U4SM7ECAG</user>
    <text>Is there a neat way to make function with some default parameters? 
At the moment I'm creating a highly customizable function with a ton of params and create some shortcuts functions for the most common usecases (coming back with a snippet)</text>
  </message>
  <message>
    <ts>2017-06-29T06:27:48.824004</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U4SM7ECAG&gt; pass in a record</text>
  </message>
  <message>
    <ts>2017-06-29T06:28:03.827011</ts>
    <user>U3KSN5MAL</user>
    <text>yeh default record, overwrite what you need</text>
  </message>
  <message>
    <ts>2017-06-29T06:30:41.861060</ts>
    <user>U3KSN5MAL</user>
    <text>Ok so i'm about to ship an update of my photoshop plugin, but the saved model has less items than the new model, how do i bring in the old data, without throwing an error with the new data?</text>
  </message>
  <message>
    <ts>2017-06-29T06:31:18.869102</ts>
    <user>U4SM7ECAG</user>
    <text>&lt;@U3SJEDR96&gt; so something like for the `on` and `onWithOption` for the Html events ?</text>
  </message>
  <message>
    <ts>2017-06-29T06:31:41.873820</ts>
    <user>U3SJEDR96</user>
    <text>write a json decoder that can handle versioned json &lt;@U3KSN5MAL&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T06:32:04.878786</ts>
    <user>U3KSN5MAL</user>
    <text>There isn't any way to dynamically do it?</text>
  </message>
  <message>
    <ts>2017-06-29T06:32:19.882171</ts>
    <user>U3KSN5MAL</user>
    <text>i think i remember there may have been a way to do it,</text>
  </message>
  <message>
    <ts>2017-06-29T06:32:29.884230</ts>
    <user>U3SJEDR96</user>
    <text>I'm not sure what you mean by dynamically?</text>
  </message>
  <message>
    <ts>2017-06-29T06:32:29.884339</ts>
    <user>U4SM7ECAG</user>
    <text>so my main function will have this signature `function: RequiredStuff1 -&amp;gt; RequiredStuff2 -&amp;gt; OptionsRecord -&amp;gt; ResultOfSomeSort`</text>
  </message>
  <message>
    <ts>2017-06-29T06:32:51.888864</ts>
    <user>U3SJEDR96</user>
    <text>I mean, you cna do a `oneOf`, but having the version specifically mentioned in your json makes that easier to maintain</text>
  </message>
  <message>
    <ts>2017-06-29T06:33:12.893070</ts>
    <user>U3KSN5MAL</user>
    <text>hmm</text>
  </message>
  <message>
    <ts>2017-06-29T06:33:17.894452</ts>
    <user>U3KSN5MAL</user>
    <text>ah i getcha</text>
  </message>
  <message>
    <ts>2017-06-29T06:33:27.896518</ts>
    <user>U3KSN5MAL</user>
    <text>would this be easier to do on the elm or js side?</text>
  </message>
  <message>
    <ts>2017-06-29T06:33:36.898288</ts>
    <user>U3KSN5MAL</user>
    <text>i guess elm?</text>
  </message>
  <message>
    <ts>2017-06-29T06:33:44.900117</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U4SM7ECAG&gt; That would be the most flexible api, I think. Basically, this is also how `Http.get` and `&lt;http://Http.post|Http.post&gt;` work, in terms of `Http.request`</text>
  </message>
  <message>
    <ts>2017-06-29T06:34:35.910511</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U3KSN5MAL&gt; definitely Elm. Pass a `Json.Value` through flags on startup, and decode that. If it's an allowed version, you should be able to decode it. If decoding fails, show an error that their old settings are gone, and give them new settings as a default</text>
  </message>
  <message>
    <ts>2017-06-29T06:34:59.915361</ts>
    <user>U4SM7ECAG</user>
    <text>&lt;@U3SJEDR96&gt; Thanks, I don't think I'll do it for this particular functions but for the other cases where I've had to do that I'll refactor to work with that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-29T06:35:14.918679</ts>
    <user>U3KSN5MAL</user>
    <text>ok, thanks.</text>
  </message>
  <message>
    <ts>2017-06-29T06:35:40.924532</ts>
    <user>U3KSN5MAL</user>
    <text>with the versioning, what if my old version is already shipped and i don't have a version number in the model?</text>
  </message>
  <message>
    <ts>2017-06-29T06:38:03.954141</ts>
    <user>U3SJEDR96</user>
    <text>`oneOf [ unversionedDecoder, versionedDecoder ]` would work. You could make the `unversionedDecoder` fail if it sees a `version` field, too</text>
  </message>
  <message>
    <ts>2017-06-29T06:38:14.956346</ts>
    <user>U604S603Y</user>
    <text>thanks &lt;@U2D5SAEMN&gt; &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T06:38:21.957977</ts>
    <user>U3KSN5MAL</user>
    <text>ah that's a good idea</text>
  </message>
  <message>
    <ts>2017-06-29T06:55:37.166713</ts>
    <user>U3KSN5MAL</user>
    <text>&lt;@U3SJEDR96&gt; &lt;https://github.com/NoRedInk/elm-decode-pipeline&gt;

Would this library help me out you think?</text>
  </message>
  <message>
    <ts>2017-06-29T07:05:31.292864</ts>
    <user>U3SJEDR96</user>
    <text>It's nice to make decoders with, sure</text>
  </message>
  <message>
    <ts>2017-06-29T07:27:57.561429</ts>
    <user>U3KSN5MAL</user>
    <text>Is there any examples of a versioned decoder you can think of?</text>
  </message>
  <message>
    <ts>2017-06-29T07:28:21.566456</ts>
    <user>U3KSN5MAL</user>
    <text>Would help a lot to be able to look at the source</text>
  </message>
  <message>
    <ts>2017-06-29T07:33:50.634871</ts>
    <user>U3SJEDR96</user>
    <text>the basic pattern is something like `field "version" int |&amp;gt; andThen (\version -&amp;gt; case version of 1 -&amp;gt; version1Decoder ... _ -&amp;gt; fail "I can't decode that version")`</text>
  </message>
  <message>
    <ts>2017-06-29T07:33:56.636025</ts>
    <user>U3SJEDR96</user>
    <text>let me see if I can find an example</text>
  </message>
  <message>
    <ts>2017-06-29T07:35:10.650857</ts>
    <user>U3SJEDR96</user>
    <text>here's one that handles things like `{ "version": 1, "report": {...} }` - &lt;https://github.com/BrianHicks/elm-benchmark/blob/master/src/Benchmark/Reporting.elm#L264&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T07:35:43.657702</ts>
    <user>U3KSN5MAL</user>
    <text>Awesome!</text>
  </message>
  <message>
    <ts>2017-06-29T07:38:14.688171</ts>
    <user>U3KSN5MAL</user>
    <text>greatly appreciate the help</text>
  </message>
  <message>
    <ts>2017-06-29T07:44:05.758115</ts>
    <user>U3KSN5MAL</user>
    <text>ooooh ok, i see how this works now.</text>
  </message>
  <message>
    <ts>2017-06-29T07:51:11.846353</ts>
    <user>U2D5SAEMN</user>
    <text>I have 2 `Result`'s (return values of `Date.fromString`). Is it possible to check if both are `Ok` or if one is `Err`?</text>
  </message>
  <message>
    <ts>2017-06-29T07:54:14.884574</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U2D5SAEMN&gt; if you need to do an operation on both of them, you can use `Result.map2`. For example if you have a `type alias DateRange = { from: Date, to: Date }` you could `Result.map2 DateRange (Date.fromString date1) (Date.fromString date2)` which would give you a `Result String DateRange`</text>
  </message>
  <message>
    <ts>2017-06-29T07:55:21.898862</ts>
    <user>U2D5SAEMN</user>
    <text>oh nice, thanks!</text>
  </message>
  <message>
    <ts>2017-06-29T08:01:18.977783</ts>
    <user>U2D5SAEMN</user>
    <text>hmm, trying this out with a tuple: &lt;https://ellie-app.com/3C6w33M2t72a1/0&gt; but it says it can't find `DateRange`</text>
  </message>
  <message>
    <ts>2017-06-29T08:03:35.009429</ts>
    <user>U3SJEDR96</user>
    <text>You only get this "magic" constructor function when you have a type alias for a record</text>
  </message>
  <message>
    <ts>2017-06-29T08:03:49.012566</ts>
    <user>U3SJEDR96</user>
    <text>if you need a tuple, `Result.map2 (,) a b` should work</text>
  </message>
  <message>
    <ts>2017-06-29T08:04:27.021469</ts>
    <user>U2D5SAEMN</user>
    <text>constructor functions are only for records? Good to know that, I somehow missed that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-29T08:05:03.029889</ts>
    <user>U2D5SAEMN</user>
    <text>(the error message leaves me in the dark though)</text>
  </message>
  <message>
    <ts>2017-06-29T08:06:39.051692</ts>
    <user>U3SJEDR96</user>
    <text>well `DateRange` in that case is _just_ an alias for `( Date, Date )`  - it's not a function or anything. That error could definitely be improved tho</text>
  </message>
  <message>
    <ts>2017-06-29T08:11:10.115266</ts>
    <user>U2D5SAEMN</user>
    <text>if these 2 dates were user input and I'd want to show which of these 2 dates resulted in an error, how would that work? Is there some kind of reference to the originating Result that errored? Since the error message is only a string</text>
  </message>
  <message>
    <ts>2017-06-29T08:14:08.157717</ts>
    <user>U3SJEDR96</user>
    <text>No, it isn't quite that special. So basically, how I tend to use this, is I keep both results in my model so I can show the correct feedback to the user, and rather than saving the range in my model, I "create" that when I need it. Does that make sense?</text>
  </message>
  <message>
    <ts>2017-06-29T08:16:30.192616</ts>
    <user>U2D5SAEMN</user>
    <text>It does. Currently I'm keeping the user input (string) in my model, because I need to do a number of validations, like: is it a valid date, is it within a specified daterange etc. I'll think about refactoring that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-29T08:46:15.651476</ts>
    <user>U3KSN5MAL</user>
    <text>i'm playing around with json to elm. It seems like a tuple will break it?</text>
  </message>
  <message>
    <ts>2017-06-29T08:46:43.659779</ts>
    <user>U3KSN5MAL</user>
    <text>it's spitting out `activeColor : ( Float, Float, Float )`</text>
  </message>
  <message>
    <ts>2017-06-29T08:47:21.670346</ts>
    <user>U0EUHKVGB</user>
    <text>Tuples aren't handled correctly probably</text>
  </message>
  <message>
    <ts>2017-06-29T08:47:45.676624</ts>
    <user>U0EUHKVGB</user>
    <text>PRs are welcome, but I'm going to dedicate some time soon to chase up issues like this</text>
  </message>
  <message>
    <ts>2017-06-29T08:47:49.677695</ts>
    <user>U3KSN5MAL</user>
    <text>You are the person that wrote it?</text>
  </message>
  <message>
    <ts>2017-06-29T08:48:16.685239</ts>
    <user>U0EUHKVGB</user>
    <text>Yep</text>
  </message>
  <message>
    <ts>2017-06-29T08:48:19.685985</ts>
    <user>U3KSN5MAL</user>
    <text>Neat</text>
  </message>
  <message>
    <ts>2017-06-29T08:48:37.690921</ts>
    <user>U3KSN5MAL</user>
    <text>I'm sure all these bugs are pretty well documented atm?</text>
  </message>
  <message>
    <ts>2017-06-29T08:49:17.701836</ts>
    <user>U3KSN5MAL</user>
    <text>or should i make an issue?</text>
  </message>
  <message>
    <ts>2017-06-29T08:49:55.712308</ts>
    <user>U0EUHKVGB</user>
    <text>new issue: &lt;https://github.com/eeue56/json-to-elm/issues&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T08:52:43.761629</ts>
    <user>U3KSN5MAL</user>
    <text>god why is the code formatting on github in the issues so horrific</text>
  </message>
  <message>
    <ts>2017-06-29T08:52:49.763249</ts>
    <user>U3KSN5MAL</user>
    <text>but posted</text>
  </message>
  <message>
    <ts>2017-06-29T08:52:54.764839</ts>
    <user>U3KSN5MAL</user>
    <text>under the name muzz</text>
  </message>
  <message>
    <ts>2017-06-29T08:53:35.776566</ts>
    <user>U0EUHKVGB</user>
    <text>You need to do three backticks, a new line, then the code, then a new line, then three backticks</text>
  </message>
  <message>
    <ts>2017-06-29T08:53:41.778252</ts>
    <user>U3KSN5MAL</user>
    <text>ouch</text>
  </message>
  <message>
    <ts>2017-06-29T08:53:45.779117</ts>
    <user>U3KSN5MAL</user>
    <text>thanks</text>
  </message>
  <message>
    <ts>2017-06-29T08:54:14.787814</ts>
    <user>U0EUHKVGB</user>
    <text>I've edited it for you. You can click the "edit" button to see what I changed</text>
  </message>
  <message>
    <ts>2017-06-29T08:54:16.788148</ts>
    <user>U3KSN5MAL</user>
    <text>ok that's better</text>
  </message>
  <message>
    <ts>2017-06-29T08:54:36.794232</ts>
    <user>U3KSN5MAL</user>
    <text>whoops i overwrote it i think with the same thing</text>
  </message>
  <message>
    <ts>2017-06-29T08:54:50.798173</ts>
    <user>U0EUHKVGB</user>
    <text>perfect :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-29T08:55:09.804015</ts>
    <user>U3KSN5MAL</user>
    <text>I'll make issues if i find anything else</text>
  </message>
  <message>
    <ts>2017-06-29T09:14:56.180337</ts>
    <user>U3KSN5MAL</user>
    <text>Made one for nested records too. because the rest of your issues people wrote in there seem super unclear...</text>
  </message>
  <message>
    <ts>2017-06-29T09:15:24.189838</ts>
    <user>U3KSN5MAL</user>
    <text>Oh just saw the comment</text>
  </message>
  <message>
    <ts>2017-06-29T09:16:20.208442</ts>
    <user>U3KSN5MAL</user>
    <text>&lt;@U0EUHKVGB&gt; what do you mean by anonymous record? 

my actual record has extra data in it, i just made a minimum test case.</text>
  </message>
  <message>
    <ts>2017-06-29T09:16:52.218749</ts>
    <user>U0EUHKVGB</user>
    <text>```
type alias Model = { model : { anon: String } }
```</text>
  </message>
  <message>
    <ts>2017-06-29T09:17:04.222609</ts>
    <user>U0EUHKVGB</user>
    <text>`{ anon: String }` is anonymous, i.e it has no name</text>
  </message>
  <message>
    <ts>2017-06-29T09:17:47.237515</ts>
    <user>U0EUHKVGB</user>
    <text>It's still a useful bug report</text>
  </message>
  <message>
    <ts>2017-06-29T09:17:58.241284</ts>
    <user>U0EUHKVGB</user>
    <text>But generally you want to avoid anon types like that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-29T09:19:02.262495</ts>
    <user>U3KSN5MAL</user>
    <text>Why would i want to avoid that? i don't understand</text>
  </message>
  <message>
    <ts>2017-06-29T09:19:50.278916</ts>
    <user>U0EUHKVGB</user>
    <text>Because it makes it harder to explain what that piece of your program is.</text>
  </message>
  <message>
    <ts>2017-06-29T09:19:50.279031</ts>
    <user>U3KSN5MAL</user>
    <text>`model.sliderOptions.rgbo`</text>
  </message>
  <message>
    <ts>2017-06-29T09:20:01.282643</ts>
    <user>U0EUHKVGB</user>
    <text>Imagine you want to make a function that only works on that piece of the data</text>
  </message>
  <message>
    <ts>2017-06-29T09:20:01.282847</ts>
    <user>U3KSN5MAL</user>
    <text>what about this is hard to access?</text>
  </message>
  <message>
    <ts>2017-06-29T09:20:16.287741</ts>
    <user>U0EUHKVGB</user>
    <text>It's not hard to access - it's hard to understand.</text>
  </message>
  <message>
    <ts>2017-06-29T09:20:34.293973</ts>
    <user>U3KSN5MAL</user>
    <text>oh do you mean the name is bad?</text>
  </message>
  <message>
    <ts>2017-06-29T09:20:35.294584</ts>
    <user>U0EUHKVGB</user>
    <text>Imagine you want to have a function that takes `rgbo` and returns a new `rgbo`</text>
  </message>
  <message>
    <ts>2017-06-29T09:20:45.297747</ts>
    <user>U0EUHKVGB</user>
    <text>Well, the name might be bad, but that's not my point</text>
  </message>
  <message>
    <ts>2017-06-29T09:20:54.300893</ts>
    <user>U3KSN5MAL</user>
    <text>hmm, these are just flags</text>
  </message>
  <message>
    <ts>2017-06-29T09:21:02.303549</ts>
    <user>U3KSN5MAL</user>
    <text>not data that will be transformed</text>
  </message>
  <message>
    <ts>2017-06-29T09:21:07.305579</ts>
    <user>U0EUHKVGB</user>
    <text>```
type alias ConvertedModel =
    { sliderOptions :
        { rgbo : Bool
        , rgbl : Bool
        , hsvo : Bool
        , hsvl : Bool
        }
    }
```</text>
  </message>
  <message>
    <ts>2017-06-29T09:21:22.310729</ts>
    <user>U0EUHKVGB</user>
    <text>If you want to do _anything_ with `sliderOptions`, then you have to write the full type out again.</text>
  </message>
  <message>
    <ts>2017-06-29T09:21:28.312723</ts>
    <user>U0EUHKVGB</user>
    <text>Error messages are worse as a result.</text>
  </message>
  <message>
    <ts>2017-06-29T09:21:32.314191</ts>
    <user>U0EUHKVGB</user>
    <text>So, for example:</text>
  </message>
  <message>
    <ts>2017-06-29T09:22:23.331036</ts>
    <user>U0EUHKVGB</user>
    <text>```
changeSlideOption : Bool -&amp;gt; { rgbo : Bool, rgbl : Bool, hsvo : Bool , hsvl : Bool } -&amp;gt; { rgbo : Bool, rgbl : Bool, hsvo : Bool , hsvl : Bool } 
```</text>
  </message>
  <message>
    <ts>2017-06-29T09:22:26.332144</ts>
    <user>U0EUHKVGB</user>
    <text>this is unreadable.</text>
  </message>
  <message>
    <ts>2017-06-29T09:23:01.343736</ts>
    <user>U0EUHKVGB</user>
    <text>```
type alias SliderOptions = 
  { rgbo : Bool
        , rgbl : Bool
        , hsvo : Bool
        , hsvl : Bool
        }

changeSlideOption : Bool -&amp;gt; SliderOptions -&amp;gt; SliderOptions
```
this is easy to understand.</text>
  </message>
  <message>
    <ts>2017-06-29T09:23:14.348238</ts>
    <user>U3KSN5MAL</user>
    <text>Ok, i getcha. For my specific usecase with these, it worked out to be fine</text>
  </message>
  <message>
    <ts>2017-06-29T09:23:36.355850</ts>
    <user>U3KSN5MAL</user>
    <text>I only did it like this because they are only flags that are only ever directly accessed in update</text>
  </message>
  <message>
    <ts>2017-06-29T09:23:41.357255</ts>
    <user>U0EUHKVGB</user>
    <text>Decoding in Elm for records is generally reliant on having a named type aliases. If you want to write a decoder easily for `SliderOptions`, you would need to create a type alias so that it generates the `SliderOptions` constructor.</text>
  </message>
  <message>
    <ts>2017-06-29T09:23:46.359156</ts>
    <user>U3KSN5MAL</user>
    <text>and i never had to write any functions on them</text>
  </message>
  <message>
    <ts>2017-06-29T09:23:56.362378</ts>
    <user>U3KSN5MAL</user>
    <text>but it's easy enough to change</text>
  </message>
  <message>
    <ts>2017-06-29T09:24:09.366462</ts>
    <user>U0EUHKVGB</user>
    <text>```
type alias ConvertedModel =
    { sliderOptions : SliderOptions
    }
```
is easier to read</text>
  </message>
  <message>
    <ts>2017-06-29T09:24:31.373604</ts>
    <user>U0EUHKVGB</user>
    <text>And that means that the type error you get if you try to access the wrong field will be better</text>
  </message>
  <message>
    <ts>2017-06-29T09:24:31.373730</ts>
    <user>U3KSN5MAL</user>
    <text>My code base is already at about 4.5K lines long so i think i was looking for ways to avoid verbosity</text>
  </message>
  <message>
    <ts>2017-06-29T09:24:40.376634</ts>
    <user>U3KSN5MAL</user>
    <text>Anyways man i get it :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-29T09:25:08.385779</ts>
    <user>U0EUHKVGB</user>
    <text>i.e `SliderOptions has no field "dfghjk"` rather than `{ rgbo : Bool, rgbl : Bool, hsvo : Bool , hsvl : Bool } has no field "dfghjk"`</text>
  </message>
  <message>
    <ts>2017-06-29T09:25:32.394330</ts>
    <user>U0EUHKVGB</user>
    <text>Basically, by avoiding making a type alias you're losing out on some the aid that Elm can provide for you :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-29T09:25:51.400794</ts>
    <user>U3KSN5MAL</user>
    <text>Thanks</text>
  </message>
  <message>
    <ts>2017-06-29T09:32:05.533613</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3KSN5MAL&gt;  re decoders, also this: &lt;http://eeue56.github.io/json-to-elm/&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T09:32:23.539924</ts>
    <user>U0EUHKVGB</user>
    <text>&lt;@U3LUC6SNS&gt; That's where the conversation arose from :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-29T09:33:44.568413</ts>
    <user>U3LUC6SNS</user>
    <text>I have a search function in the app I'm working.  __After__ a search, I need to do a few things: (1) select the first document in the list of search hits, (2) possible change the app page to display those results. That is, I have to sequence actions.  How do I do this?</text>
  </message>
  <message>
    <ts>2017-06-29T09:33:44.568502</ts>
    <user>U3KSN5MAL</user>
    <text>yeah we are talking about bugs in it lol</text>
  </message>
  <message>
    <ts>2017-06-29T09:56:14.080917</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U3LUC6SNS&gt; selecting the first document sounds like something that is part of your model? changing the app page too, though, but there you might also want to update the url.. As for sequencing actions - if they can be modelled as tasks, you can use `Task.andThen` to sequence them</text>
  </message>
  <message>
    <ts>2017-06-29T09:59:01.148377</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U3LUC6SNS&gt; I picture it something like.
```
type alias Model =
    { searchResults : List Document
    , displayDocument : Maybe Document
    }

update msg model =
    case msg of
        PerformSearch query -&amp;gt;
            let
                results =
                    searchFn query model.documents

                maybeDoc =
                    List.head results |&amp;gt; Maybe.andThen (\doc -&amp;gt; if wantToDisplay doc then Just doc else Nothing)
            in
                ( { model | searchResults = results, displayDocument = maybeDoc } )
```</text>
  </message>
  <message>
    <ts>2017-06-29T10:02:36.240933</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U48AEBJQ3&gt; Thanks very much!  I will try that approach.  Nice pseudocode!!</text>
  </message>
  <message>
    <ts>2017-06-29T10:03:12.255632</ts>
    <user>U0JFGGZS6</user>
    <text>The question is does displaying the results mean changing the URL?</text>
  </message>
  <message>
    <ts>2017-06-29T10:04:22.284763</ts>
    <user>U3LUC6SNS</user>
    <text>I don't have to change a URL since I am not using navigation.  The part that was missing in my thinking about this was Maybe.andThen ... I will give that a try</text>
  </message>
  <message>
    <ts>2017-06-29T10:05:04.301468</ts>
    <user>U0JFGGZS6</user>
    <text>right</text>
  </message>
  <message>
    <ts>2017-06-29T10:16:22.575842</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U3LUC6SNS&gt; I did it with the `andThen` because I think it teaches a more general pattern, but in production code I would probably extract out that functionality into a function. Luckily, it has already been done via
```
    List.head results |&amp;gt; Maybe.Extra.filter wantToDisplay
```</text>
  </message>
  <message>
    <ts>2017-06-29T10:23:39.758694</ts>
    <user>U3KSN5MAL</user>
    <text>trying to modify this tuple decoder to work with 3 values not 2, my attempt just failed.

```arrayAsTuple2 : Decoder a -&amp;gt; Decoder b -&amp;gt; Decoder (a, b)
arrayAsTuple2 a b =
    index 0 a
        |&amp;gt; andThen (\aVal -&amp;gt; index 1 b
        |&amp;gt; andThen (\bVal -&amp;gt; Json.succeed (aVal, bVal)))```</text>
  </message>
  <message>
    <ts>2017-06-29T10:24:09.771304</ts>
    <user>U3KSN5MAL</user>
    <text>my attempt 

```
arrayAsTuple3 : Decoder a -&amp;gt; Decoder b -&amp;gt; Decoder c -&amp;gt; Decoder ( a, b, c )
arrayAsTuple3 a b c =
    Json.index 0 a
        |&amp;gt; andThen
            (\aVal -&amp;gt;
                Json.index 1 b
                    |&amp;gt; andThen
                        (\bVal -&amp;gt;
                            Json.index 2 c
                                |&amp;gt; andThen (\cVal -&amp;gt; Json.succeed ( aVal, bVal, cVal ))
                        )
            )```</text>
  </message>
  <message>
    <ts>2017-06-29T10:24:27.779160</ts>
    <user>U3SJEDR96</user>
    <text>`map2 (,) (index 0 a) (index 1 b)`</text>
  </message>
  <message>
    <ts>2017-06-29T10:25:40.809478</ts>
    <user>U3SJEDR96</user>
    <text>or `map3 (,,) decoder1 decoder2 decoder3` for a tuple with 3 members. or `decode (,) |&amp;gt; ....` if you want to use the pipeline stuff</text>
  </message>
  <message>
    <ts>2017-06-29T10:26:50.838462</ts>
    <user>U3KSN5MAL</user>
    <text>so the code the example i posted can be greatly simplified?</text>
  </message>
  <message>
    <ts>2017-06-29T10:28:43.886219</ts>
    <user>U3KSN5MAL</user>
    <text>aaaaah, ok i hadn't looked at map properly</text>
  </message>
  <message>
    <ts>2017-06-29T10:29:06.896160</ts>
    <user>U3KSN5MAL</user>
    <text>i was still thinking of list map</text>
  </message>
  <message>
    <ts>2017-06-29T10:30:00.919459</ts>
    <user>U0LPMPL2U</user>
    <text>you only need `andThen` when chaining decoders that depend on the contents of the previous decoders. If you're just combining multiple decoders together into a structure (e.g. a tuple), you can use one of the maps (`map`, `map2`, etc)</text>
  </message>
  <message>
    <ts>2017-06-29T10:30:27.931484</ts>
    <user>U3KSN5MAL</user>
    <text>gotcha, that was just only example i could find googling it</text>
  </message>
  <message>
    <ts>2017-06-29T10:30:30.933001</ts>
    <user>U3KSN5MAL</user>
    <text>thanks!</text>
  </message>
  <message>
    <ts>2017-06-29T10:31:42.964399</ts>
    <user>U0LPMPL2U</user>
    <text>If you want to get a better feel for `map` / `map2`, I wrote an article that looks at uses with `Maybe`, `List`, `Json.Decoder`, and `Random.Generator` &lt;https://robots.thoughtbot.com/elms-universal-pattern&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T10:32:58.997364</ts>
    <user>U3KSN5MAL</user>
    <text>thanks i'll give a read</text>
  </message>
  <message>
    <ts>2017-06-29T10:33:26.009572</ts>
    <user>U3KSN5MAL</user>
    <text>I now see why i've put off decoders for so long -_-. i find this stuff harder than 3d shader programming.</text>
  </message>
  <message>
    <ts>2017-06-29T10:34:31.037024</ts>
    <user>U3SJEDR96</user>
    <text>Not sure if it's helpful, but I wrote this "set of exercises" thing that aims to guide people through learning decoders gradually - &lt;https://blog.ilias.xyz/demystifying-decoders-d294ed35bc6e&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T10:35:45.067701</ts>
    <user>U3KSN5MAL</user>
    <text>that might actually be super helpful</text>
  </message>
  <message>
    <ts>2017-06-29T10:36:05.075907</ts>
    <user>U3KSN5MAL</user>
    <text>because i'm trying to jump in and decode some pretty large data structures</text>
  </message>
  <message>
    <ts>2017-06-29T10:36:52.095784</ts>
    <user>U3KSN5MAL</user>
    <text>I was just parsing the json in js automagically before sending it over</text>
  </message>
  <message>
    <ts>2017-06-29T10:37:02.099658</ts>
    <user>U3KSN5MAL</user>
    <text>and that worked fine when i didn't need to validate it</text>
  </message>
  <message>
    <ts>2017-06-29T10:39:02.149752</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U3KSN5MAL&gt; As for `map`, it might help to think of it differently. People tend to think of `List.map` in a procedural way. It takes a function and a list and then applies the function to every element of the list. However, you can think of it a bit differently. List.map upgrades a function of `a -&amp;gt; b` with certain rules to be a function of `List a -&amp;gt; List b`. We can re-write its type definition as `List.map : (a -&amp;gt; b) -&amp;gt; (List a -&amp;gt; List b)`.</text>
  </message>
  <message>
    <ts>2017-06-29T10:40:24.183943</ts>
    <user>U60SXAF96</user>
    <text>I've got what strikes me as a pretty basic question -- it's a place where the `do` notation would crop up in Haskell, but I'm unclear how to do it with Elm.

I'd like to do the following steps:
1) Check the local cache for a file (via ports); if it does, provide some metadata about it,
2) If the local cache doesn't exist, provide the metadata about the "baked in" version,
3) Perform an HTTP call based on the metadata from steps 1&amp;amp;2 
4) While the HTTP is resolving, use the file specified in the metadata from steps 1&amp;amp;2
5) When the HTTP resolves, use a file based on the HTTP result

But this is getting to be quite a confusing set of messages....</text>
  </message>
  <message>
    <ts>2017-06-29T10:40:54.197008</ts>
    <user>U3KSN5MAL</user>
    <text>&lt;@U48AEBJQ3&gt;  interesting, thanks</text>
  </message>
  <message>
    <ts>2017-06-29T10:43:06.253332</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U3KSN5MAL&gt; also, if you're still fuzzy one what a decoder _is_, this is a nice article &lt;http://ohanhi.com/secret-spy-messages.html&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T10:47:09.356550</ts>
    <user>U3KSN5MAL</user>
    <text>wow soo much to read</text>
  </message>
  <message>
    <ts>2017-06-29T10:48:44.398349</ts>
    <user>U3SJEDR96</user>
    <text>There also an actual (small) book, which is a great read, by &lt;@U0JUBLV8F&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T10:48:53.402531</ts>
    <user>U3SJEDR96</user>
    <text>So yeah, there's _a lot_ of material :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-29T10:51:12.462908</ts>
    <user>U0LPMPL2U</user>
    <text>JSON decoders are probably the thing that trip up beginners the most in Elm so a lot of people have written about them :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-29T10:51:58.482403</ts>
    <user>U3KSN5MAL</user>
    <text>yeah....</text>
  </message>
  <message>
    <ts>2017-06-29T10:53:56.533478</ts>
    <user>U3KSN5MAL</user>
    <text>i appreciate the help</text>
  </message>
  <message>
    <ts>2017-06-29T10:54:16.541778</ts>
    <user>U2SR9DL7Q</user>
    <text>decoders make sense _now_ but yeah, not the most intuitive things. Luckily, most everything else in elm is pretty intuitive, so it's not so bad :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-29T10:55:13.566982</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U60SXAF96&gt;

```
update msg model =
    case msg of
        FetchFile id -&amp;gt;
            (model, fetchFromLocalStorage ReturnLocalFile id)

        SetLocalFile maybeFile -&amp;gt;
            let
                file = maybeFile |&amp;gt; Maybe.withDefault defaultFile
            in
                ( setFile file model, fetchRemoteFile SetRemoteFile file )

        SetRemoteFile remoteResult -&amp;gt;
            case remoteResult of
                Ok file -&amp;gt;
                    ( setFile file model, Cmd.none )

                Err error -&amp;gt;
                    ( setError error model, Cmd.none )
```</text>
  </message>
  <message>
    <ts>2017-06-29T10:55:40.579530</ts>
    <user>U48AEBJQ3</user>
    <text>I think that does what you want?</text>
  </message>
  <message>
    <ts>2017-06-29T10:58:05.644019</ts>
    <user>U60SXAF96</user>
    <text>That's what I'm currently doing, but I was hoping for a more concise solution -- because I'm having to go through ports for this information, there's also subscriptions to handle the updates, etc.</text>
  </message>
  <message>
    <ts>2017-06-29T10:58:47.662936</ts>
    <user>U60SXAF96</user>
    <text>And it feels like I'm getting a lot of disparate code to accomplish what I want to do, which is weird.</text>
  </message>
  <message>
    <ts>2017-06-29T11:02:22.761976</ts>
    <user>U48AEBJQ3</user>
    <text>One has to break it up into multiple steps to accomplish what you want. You can't query a port and wait for the reply via a `Task` and you can't update the model and recalculate the view via a `Task`. Since you can't make `Task`s of these, they are not composable into a single structure.</text>
  </message>
  <message>
    <ts>2017-06-29T11:09:15.942889</ts>
    <user>U539R3SFR</user>
    <text>is there any issues to be aware of when both setting the value of an HTML input and reacting to its onInput, basically I want to be able to read the value from the input but also set it sometimes, when running in the reactor some keys are missed sometimes but I think I read somewhere that it is only an issue in debug mode.</text>
  </message>
  <message>
    <ts>2017-06-29T11:30:35.501228</ts>
    <user>U3LUC6SNS</user>
    <text>I want to have my Elm frontend tell the user whether the backend is online or not.  I could have it send a request `/hello`every N seconds -- if there is a reply, status is `Online`, otherwise `Offline`.  Is this the approach I should take?</text>
  </message>
  <message>
    <ts>2017-06-29T11:30:51.508473</ts>
    <user>U3LUC6SNS</user>
    <text>Backend is Elixir/Phoenix</text>
  </message>
  <message>
    <ts>2017-06-29T11:31:38.529854</ts>
    <user>U0J1M0F32</user>
    <text>If you're using Elixir/Phoenix, could you then use a Websocket or Phoenix presence to handle that?</text>
  </message>
  <message>
    <ts>2017-06-29T11:33:20.574385</ts>
    <user>U2XRG0UKA</user>
    <text>Definitely websockets. Check out &lt;http://package.elm-lang.org/packages/fbonetti/elm-phoenix-socket/latest&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T11:35:46.636112</ts>
    <user>U2XRG0UKA</user>
    <text>The `/hello` approach should work fine. Websockets will give you realtime notice of a disconnection.</text>
  </message>
  <message>
    <ts>2017-06-29T11:36:49.662127</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U539R3SFR&gt; There are situations where the cursor can suddenly jump to the end if the user types too quickly. This is worse in debug mode due to the extra overhead. I don't really know what solution has been found for that (perhaps someone else does?).</text>
  </message>
  <message>
    <ts>2017-06-29T11:38:22.700050</ts>
    <user>U3SJEDR96</user>
    <text>there is some discussion and possible solutions in &lt;https://github.com/elm-lang/html/issues/105&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T11:41:00.764867</ts>
    <user>U539R3SFR</user>
    <text>thanks &lt;@U3SJEDR96&gt; and &lt;@U48AEBJQ3&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T11:52:18.049387</ts>
    <user>U3KSN5MAL</user>
    <text>&lt;@U3SJEDR96&gt; i'm getting stuck on the first exersize tbh. I don't know what you mean by " try to adjust the
   following decoder so it can decode a JSON value that looks like `5`."</text>
  </message>
  <message>
    <ts>2017-06-29T11:52:50.062871</ts>
    <user>U3SJEDR96</user>
    <text>:smile: That's great feedback, actually!</text>
  </message>
  <message>
    <ts>2017-06-29T11:53:14.073351</ts>
    <user>U3KSN5MAL</user>
    <text>because looking at primitives, i need to specify an explicit field</text>
  </message>
  <message>
    <ts>2017-06-29T11:53:24.078000</ts>
    <user>U3KSN5MAL</user>
    <text>but in the tests the field names are different?</text>
  </message>
  <message>
    <ts>2017-06-29T11:54:58.117796</ts>
    <user>U3SJEDR96</user>
    <text>In the tests, there is no field-name for the first one. The value is literally _just_ `5`</text>
  </message>
  <message>
    <ts>2017-06-29T11:55:41.136323</ts>
    <user>U3KSN5MAL</user>
    <text>Yeah, i worked that out</text>
  </message>
  <message>
    <ts>2017-06-29T11:55:53.141057</ts>
    <user>U3KSN5MAL</user>
    <text>i just can't see in the documentation how to do that</text>
  </message>
  <message>
    <ts>2017-06-29T11:56:01.144600</ts>
    <user>U3KSN5MAL</user>
    <text>as the examples are with a field name</text>
  </message>
  <message>
    <ts>2017-06-29T11:56:18.151808</ts>
    <user>U3KSN5MAL</user>
    <text>oh</text>
  </message>
  <message>
    <ts>2017-06-29T11:56:23.153821</ts>
    <user>U3KSN5MAL</user>
    <text>i'm looking at the wrong part</text>
  </message>
  <message>
    <ts>2017-06-29T11:56:44.162593</ts>
    <user>U3KSN5MAL</user>
    <text>lol</text>
  </message>
  <message>
    <ts>2017-06-29T11:56:45.162977</ts>
    <user>U3KSN5MAL</user>
    <text>got it</text>
  </message>
  <message>
    <ts>2017-06-29T11:57:11.173951</ts>
    <user>U3KSN5MAL</user>
    <text>i was looking at the object primitives section not primitives</text>
  </message>
  <message>
    <ts>2017-06-29T11:57:44.188139</ts>
    <user>U3SJEDR96</user>
    <text>AAhhhh, gotcha :smile:</text>
  </message>
  <message>
    <ts>2017-06-29T12:01:22.285303</ts>
    <user>U3KSN5MAL</user>
    <text>Oh well you don't learn unless you are willing to ask dumb questions</text>
  </message>
  <message>
    <ts>2017-06-29T12:03:50.346352</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, absolutely, but I hadn't actually realized that one could mistakenly end up looking at the object primitives section, which is particularly unhelpful for that first exercise</text>
  </message>
  <message>
    <ts>2017-06-29T12:04:24.360102</ts>
    <user>U3KSN5MAL</user>
    <text>hehe</text>
  </message>
  <message>
    <ts>2017-06-29T12:04:42.368147</ts>
    <user>U0JFGGZS6</user>
    <text>&lt;@U60SXAF96&gt; one thing that might help is you can sync localStorage with your model, so you don't need to query it through a port.  I learned this trick from the `elm-spa-example` [here](&lt;https://github.com/rtfeldman/elm-spa-example/blob/master/index.html#L26-L30&gt;)</text>
  </message>
  <message>
    <ts>2017-06-29T12:05:55.397914</ts>
    <user>U0JFGGZS6</user>
    <text>then you could start from your step 2 above</text>
  </message>
  <message>
    <ts>2017-06-29T12:10:51.511615</ts>
    <user>U60SXAF96</user>
    <text>Yeah, that drastically simplifies things.</text>
  </message>
  <message>
    <ts>2017-06-29T12:10:58.514561</ts>
    <user>U60SXAF96</user>
    <text>Thanks.</text>
  </message>
  <message>
    <ts>2017-06-29T12:11:00.515145</ts>
    <user>U60SXAF96</user>
    <text>I appreciate it.</text>
  </message>
  <message>
    <ts>2017-06-29T12:11:13.520048</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U48AEBJQ3&gt;, I also ran into the jumping cursor bug.  I'm using workaround that is adapted from various online resources including this slack channel: &lt;https://github.com/jxxcarlson/nanoedit&gt;  

I think I had an Ellie on this.  Is there a way to search Ellies?</text>
  </message>
  <message>
    <ts>2017-06-29T12:13:58.583563</ts>
    <user>U3LUC6SNS</user>
    <text>If you search the style-elements channel for "jumping", you will find some discussion of this.  The use of `counter` or a better substitute like a document ID is essential to make the virtual DOM comply with your wishes.</text>
  </message>
  <message>
    <ts>2017-06-29T12:15:48.626175</ts>
    <user>U3KSN5MAL</user>
    <text>&lt;@U3SJEDR96&gt; wait, how can i do toUpper on the strings if the decoder is being called by the test?</text>
  </message>
  <message>
    <ts>2017-06-29T12:17:40.668471</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U3KSN5MAL&gt; I would suggest writing `stringsToUpper : List String -&amp;gt; List String` then look for a way to use that function in your decoder.</text>
  </message>
  <message>
    <ts>2017-06-29T12:18:04.677120</ts>
    <user>U611WQPL4</user>
    <text>&amp;gt; In the tests, there is no field-name for the first one. The value is literally _just_ `5`
`Literally.Literally 5`</text>
  </message>
  <message>
    <ts>2017-06-29T12:18:30.686545</ts>
    <user>U3KSN5MAL</user>
    <text>ok thanks</text>
  </message>
  <message>
    <ts>2017-06-29T12:19:13.702597</ts>
    <user>U0JFGGZS6</user>
    <text>more on jumping cursor -&amp;gt; &lt;https://github.com/elm-lang/html/issues/105&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T12:19:59.719472</ts>
    <user>U0JFGGZS6</user>
    <text>and &lt;https://github.com/elm-lang/html/issues/55&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T12:27:14.885395</ts>
    <user>U3KSN5MAL</user>
    <text>```stringsToUpper : List String -&amp;gt; List String
stringsToUpper list =
    let
        up t =
            toUpper t
    in
        List.map up list


decoder : Decoder (List String)
decoder =
    Json.Decode.map stringsToUpper (list decodeString)```</text>
  </message>
  <message>
    <ts>2017-06-29T12:27:22.888653</ts>
    <user>U3KSN5MAL</user>
    <text>ok can't work out what i'm doing wrong :confused:</text>
  </message>
  <message>
    <ts>2017-06-29T12:28:40.917768</ts>
    <user>U5VTA57UN</user>
    <text>&lt;@U3KSN5MAL&gt; `up = (\t -&amp;gt; toUpper t)` ?</text>
  </message>
  <message>
    <ts>2017-06-29T12:28:53.922778</ts>
    <user>U3KSN5MAL</user>
    <text>i know that</text>
  </message>
  <message>
    <ts>2017-06-29T12:29:06.927900</ts>
    <user>U3KSN5MAL</user>
    <text>i just write verbose and compress later as it's easier for me</text>
  </message>
  <message>
    <ts>2017-06-29T12:29:38.940172</ts>
    <user>U0LPMPL2U</user>
    <text>`up` and `toUpper` are the same right?</text>
  </message>
  <message>
    <ts>2017-06-29T12:29:40.941306</ts>
    <user>U48AEBJQ3</user>
    <text>`decodeString` isn't a `Decoder`, you want just `string`</text>
  </message>
  <message>
    <ts>2017-06-29T12:30:05.951125</ts>
    <user>U3KSN5MAL</user>
    <text>doh</text>
  </message>
  <message>
    <ts>2017-06-29T12:30:07.952096</ts>
    <user>U3KSN5MAL</user>
    <text>that was it</text>
  </message>
  <message>
    <ts>2017-06-29T12:30:08.952414</ts>
    <user>U3KSN5MAL</user>
    <text>thanks</text>
  </message>
  <message>
    <ts>2017-06-29T12:31:13.978336</ts>
    <user>U3KSN5MAL</user>
    <text>and yes you are correct joel just silly mistakes</text>
  </message>
  <message>
    <ts>2017-06-29T12:31:16.979436</ts>
    <user>U3KSN5MAL</user>
    <text>thanks</text>
  </message>
  <message>
    <ts>2017-06-29T12:32:19.004226</ts>
    <user>U3KSN5MAL</user>
    <text>God i'd hate to think about how messy my code base would be for anyone else to look at -_-</text>
  </message>
  <message>
    <ts>2017-06-29T12:36:02.088176</ts>
    <user>U3KSN5MAL</user>
    <text>Might have to go through and do a big semantic compression pass once i get this update out</text>
  </message>
  <message>
    <ts>2017-06-29T12:38:07.133869</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U3KSN5MAL&gt; One nice thing about Elm is that it feels so much safer to do major refactors, so one *can* write a bunch of messy, ugly code, then go back and clean it up and have few problems.</text>
  </message>
  <message>
    <ts>2017-06-29T12:38:30.142613</ts>
    <user>U3KSN5MAL</user>
    <text>Oh yeah of course</text>
  </message>
  <message>
    <ts>2017-06-29T12:38:39.145828</ts>
    <user>U3KSN5MAL</user>
    <text>i've already refactored a lot of things before</text>
  </message>
  <message>
    <ts>2017-06-29T12:39:00.153762</ts>
    <user>U3KSN5MAL</user>
    <text>Like i did a total overhaul of the colour system which everything relies on halfway through</text>
  </message>
  <message>
    <ts>2017-06-29T12:39:31.164397</ts>
    <user>U3KSN5MAL</user>
    <text>The biggest thing that will take work to refactor is the monolithic update loop</text>
  </message>
  <message>
    <ts>2017-06-29T12:39:59.174736</ts>
    <user>U48AEBJQ3</user>
    <text>That is something which gets easier with experience.</text>
  </message>
  <message>
    <ts>2017-06-29T12:40:01.175231</ts>
    <user>U3KSN5MAL</user>
    <text>I've gone to do that and given up 3 times so far -_-</text>
  </message>
  <message>
    <ts>2017-06-29T12:40:19.181546</ts>
    <user>U3KSN5MAL</user>
    <text>and i just keep adding features making the eventuallity worse</text>
  </message>
  <message>
    <ts>2017-06-29T12:41:06.198802</ts>
    <user>U60SXAF96</user>
    <text>Is there a good, pure URL validation library for Elm?</text>
  </message>
  <message>
    <ts>2017-06-29T12:41:17.203041</ts>
    <user>U3HQVHERX</user>
    <text>what do you mean by url validation?</text>
  </message>
  <message>
    <ts>2017-06-29T12:41:35.209212</ts>
    <user>U60SXAF96</user>
    <text>Just something so that I can refer to a `URL` type and have confidence that it's sane, as oppose to an arbitrary `String`.</text>
  </message>
  <message>
    <ts>2017-06-29T12:42:05.220043</ts>
    <user>U3HQVHERX</user>
    <text>take a look at the url-parser and navigation libraries</text>
  </message>
  <message>
    <ts>2017-06-29T12:42:42.232932</ts>
    <user>U60SXAF96</user>
    <text>Equivalent to the `URL` class in Java, or `URI.js`.</text>
  </message>
  <message>
    <ts>2017-06-29T12:42:43.233263</ts>
    <user>U3HQVHERX</user>
    <text>it gives you a record from `window.location`</text>
  </message>
  <message>
    <ts>2017-06-29T12:49:27.380222</ts>
    <user>U60SXAF96</user>
    <text>Not quite what I was looking for, but very useful for my next problem. :smile:</text>
  </message>
  <message>
    <ts>2017-06-29T13:27:39.227264</ts>
    <user>U5XC2FJ1Y</user>
    <text>does elm have support for pattern matching with conditionals?</text>
  </message>
  <message>
    <ts>2017-06-29T13:30:24.288429</ts>
    <user>U300LJUAK</user>
    <text>&lt;@U5XC2FJ1Y&gt; No. At least not for now.</text>
  </message>
  <message>
    <ts>2017-06-29T13:30:30.291211</ts>
    <user>U23SA861Y</user>
    <text>so, if I install via NPM i get platform version 15, anyone know whats up with that?</text>
  </message>
  <message>
    <ts>2017-06-29T13:30:49.298275</ts>
    <user>U300LJUAK</user>
    <text>Gotta admit that's a feature I would love too.</text>
  </message>
  <message>
    <ts>2017-06-29T13:31:04.303795</ts>
    <user>U5XC2FJ1Y</user>
    <text>what's the best alternative, just moving the conditional inside the matched pattern?</text>
  </message>
  <message>
    <ts>2017-06-29T13:32:33.337863</ts>
    <user>U300LJUAK</user>
    <text>Yup. Although it can lead to duplicated code in your `else` case, that's basically the only way to go right now.</text>
  </message>
  <message>
    <ts>2017-06-29T14:15:06.303367</ts>
    <user>U2FP79HN3</user>
    <text>How do recursive types work? Say I have a cell which can be linked to other cells.. 

```
type alias Cell =
    { row : Int
    , column : Int
    , links : List Cell
    }
```

doesn't work, so I tried 

```
type alias Cell =
    { row : Int
    , column : Int
    , links : Links
    }


type Links
    = List Cell
```

which didn't really work with: 

```
link : Cell -&amp;gt; Cell -&amp;gt; Cell
link cell neighbour =
    { cell | links = cell.links :: neighbour }
```

and then I tried 

```
type Links
    = Links (List Cell)
```

But now I'm in type un/wrapping hell</text>
  </message>
  <message>
    <ts>2017-06-29T14:17:34.359106</ts>
    <user>U0JFXEUCT</user>
    <text>I believe you want something like `type Cell = Cell {}`</text>
  </message>
  <message>
    <ts>2017-06-29T14:17:40.361618</ts>
    <user>U0JFXEUCT</user>
    <text>instead of a type alias</text>
  </message>
  <message>
    <ts>2017-06-29T14:20:31.424988</ts>
    <user>U0JFXEUCT</user>
    <text>There is still some unwrapping, but remember you can unwrap in the function arguments</text>
  </message>
  <message>
    <ts>2017-06-29T14:20:52.433326</ts>
    <user>U0JFXEUCT</user>
    <text>something like `link (Cell cell) = --do stuff`</text>
  </message>
  <message>
    <ts>2017-06-29T14:21:04.437484</ts>
    <user>U0CLDU8UB</user>
    <text>The compiler suggests something like that to you when you make a recursive type alias! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-29T14:21:21.444066</ts>
    <user>U2FP79HN3</user>
    <text>Yeah, I've read &lt;https://github.com/elm-lang/elm-compiler/blob/0.18.0/hints/recursive-alias.md&gt; but still confused</text>
  </message>
  <message>
    <ts>2017-06-29T14:23:07.483871</ts>
    <user>U0CLDU8UB</user>
    <text>Okay, so reiterating what Matt said, you can do this:
```
type Cell =
    Cell 
    { row : Int
    , column : Int
    , links : List Cell
    }
```</text>
  </message>
  <message>
    <ts>2017-06-29T14:24:24.512537</ts>
    <user>U0CLDU8UB</user>
    <text>and then something like
```
link : Cell -&amp;gt; Cell -&amp;gt; Cell
link (Cell cell) neighbour =
   Cell { cell | links = cell.links :: neighbour }
```</text>
  </message>
  <message>
    <ts>2017-06-29T14:24:34.516016</ts>
    <user>U0LPMPL2U</user>
    <text>If you find yourself unwrapping, doing something with the data, and re-wrapping a lot, I find it helpful to define a `map` function</text>
  </message>
  <message>
    <ts>2017-06-29T14:25:00.525936</ts>
    <user>U2FP79HN3</user>
    <text>I have tried something like that &lt;@U0CLDU8UB&gt;, but then I get &lt;http://cloud.jorisooms.be/2I1v291t0y2y&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T14:25:15.531349</ts>
    <user>U2FP79HN3</user>
    <text>which confuses me even more tbh, because I don't know why it's a List (List Cell)</text>
  </message>
  <message>
    <ts>2017-06-29T14:25:22.534242</ts>
    <user>U2FP79HN3</user>
    <text>or should be*</text>
  </message>
  <message>
    <ts>2017-06-29T14:25:36.539597</ts>
    <user>U2FP79HN3</user>
    <text>this is the neighbour it's complaining about</text>
  </message>
  <message>
    <ts>2017-06-29T14:25:38.540295</ts>
    <user>U0CLDU8UB</user>
    <text>Can you put your code on &lt;http://ellie-app.com|ellie-app.com&gt; ?</text>
  </message>
  <message>
    <ts>2017-06-29T14:25:40.541230</ts>
    <user>U2FP79HN3</user>
    <text>sure</text>
  </message>
  <message>
    <ts>2017-06-29T14:25:49.544504</ts>
    <user>U0CLDU8UB</user>
    <text>Great</text>
  </message>
  <message>
    <ts>2017-06-29T14:26:00.548576</ts>
    <user>U2FP79HN3</user>
    <text>&lt;https://ellie-app.com/3CdkPHcHsLYa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T14:26:43.564848</ts>
    <user>U0JFXEUCT</user>
    <text>ah, flip the args.. `neighbor :: cell.links`</text>
  </message>
  <message>
    <ts>2017-06-29T14:26:46.566098</ts>
    <user>U2FP79HN3</user>
    <text>lol</text>
  </message>
  <message>
    <ts>2017-06-29T14:26:56.569739</ts>
    <user>U2FP79HN3</user>
    <text>-_-</text>
  </message>
  <message>
    <ts>2017-06-29T14:27:00.571041</ts>
    <user>U2FP79HN3</user>
    <text>thanks</text>
  </message>
  <message>
    <ts>2017-06-29T14:28:00.593662</ts>
    <user>U0CLDU8UB</user>
    <text>Good catch, I missed that too!</text>
  </message>
  <message>
    <ts>2017-06-29T14:28:29.604950</ts>
    <user>U2FP79HN3</user>
    <text>Guess I can get started now, thanks a lot :wink:</text>
  </message>
  <message>
    <ts>2017-06-29T14:28:41.609290</ts>
    <user>U5VTA57UN</user>
    <text>is there a nice way to make this work:
 ```
        [y1s, y2s] = List.map toString &amp;lt;|
                     case textLoc of
                         Above -&amp;gt; [-3, 10]
                         Below -&amp;gt; [0, 13]
```</text>
  </message>
  <message>
    <ts>2017-06-29T14:29:50.635341</ts>
    <user>U5VTA57UN</user>
    <text>If I use `(y1s, y2s)` then I can't map toString over all the values, and have to type toString more than once.</text>
  </message>
  <message>
    <ts>2017-06-29T14:31:00.662942</ts>
    <user>U48AEBJQ3</user>
    <text>You should use tuples. You might want to define `(a -&amp;gt; b) -&amp;gt; (a, a) -&amp;gt; (b, b)` if you want it to be cleaner.</text>
  </message>
  <message>
    <ts>2017-06-29T14:32:06.687370</ts>
    <user>U5VTA57UN</user>
    <text>So make a tupleMap2 utility function?</text>
  </message>
  <message>
    <ts>2017-06-29T14:32:14.690122</ts>
    <user>U48AEBJQ3</user>
    <text>Yep.</text>
  </message>
  <message>
    <ts>2017-06-29T14:32:33.697421</ts>
    <user>U48AEBJQ3</user>
    <text>It is also defined in a bunch of packages already, but not something you are likely already using.</text>
  </message>
  <message>
    <ts>2017-06-29T14:32:50.703758</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;https://klaftertief.github.io/elm-search/?q=(a+-%3E+b)+-%3E+(a%2C+a)+-%3E+(b%2C+b)&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T14:38:24.827802</ts>
    <user>U5VTA57UN</user>
    <text>Thanks.  Toolkit is a useful pointer.</text>
  </message>
  <message>
    <ts>2017-06-29T15:21:05.739415</ts>
    <user>U611WQPL4</user>
    <text>Can I ask a &lt;#C192T0Q1E|beginners&gt; question?  There's something I don't follow.  In type definitions, what's the difference between `(String -&amp;gt; Int) -&amp;gt; Int` and `String -&amp;gt; Int -&amp;gt; Int`.  What is `(String -&amp;gt; Int)` denoting here?  I understand that `String -&amp;gt; Int -&amp;gt; Int` is a function that takes a `String` and `Int` parameter and returns an `Int` expressed in a curried format.    But what is `(String -&amp;gt; Int)` expressing?</text>
  </message>
  <message>
    <ts>2017-06-29T15:22:35.770330</ts>
    <user>U0LPMPL2U</user>
    <text>`(String -&amp;gt; Int)` is saying that one of the arguments is a function `String -&amp;gt; Int`</text>
  </message>
  <message>
    <ts>2017-06-29T15:24:49.815380</ts>
    <user>U0LPMPL2U</user>
    <text>Yes, Elm allows you to pass functions as arguments to other functions :smile:</text>
  </message>
  <message>
    <ts>2017-06-29T15:25:28.828416</ts>
    <user>U611WQPL4</user>
    <text>Ah, that's what I thought it was.   Awesome.  Thanks for the tip.   It's ~turtles~ functions all the way down.</text>
  </message>
  <message>
    <ts>2017-06-29T15:27:44.873967</ts>
    <user>U0LPMPL2U</user>
    <text>it's common to see more generic versions like: `map : (a -&amp;gt; b) -&amp;gt; List a -&amp;gt; List b`</text>
  </message>
  <message>
    <ts>2017-06-29T15:28:27.888083</ts>
    <user>U0LPMPL2U</user>
    <text>the first argument to `List.map` is a function whose input is whatever type of your input list is and it's output is whatever   you want the type of your output list to be</text>
  </message>
  <message>
    <ts>2017-06-29T15:28:50.895750</ts>
    <user>U0CLDU8UB</user>
    <text>By the way, maybe you had realized this already but `String -&amp;gt; Int -&amp;gt; Int` could also be written as `String -&amp;gt; (Int -&amp;gt; Int)`, which is sort of a "more literal" representation of the currying.</text>
  </message>
  <message>
    <ts>2017-06-29T15:30:29.928850</ts>
    <user>U17PWHU4D</user>
    <text>Hi all, can someone point me towards documentation on how to type unknown keys?  example as in normalized data, where the keys are unknown strings.  but the data contained is known?</text>
  </message>
  <message>
    <ts>2017-06-29T15:30:34.930413</ts>
    <user>U601ELFEG</user>
    <text>My page has a bunch of "static-ish" content: help panels, a carefully laid out control button area.... I need to interact with these static areas from elm (decide which help panels should be shown based on the context of the model, act on those control buttons)....    .... but I really don't want to author that static ish content in elm code</text>
  </message>
  <message>
    <ts>2017-06-29T15:30:40.932657</ts>
    <user>U601ELFEG</user>
    <text>what's the best way to go about that?</text>
  </message>
  <message>
    <ts>2017-06-29T15:31:40.952898</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U17PWHU4D&gt; are you asking about `Dict`?</text>
  </message>
  <message>
    <ts>2017-06-29T15:32:04.961109</ts>
    <user>U0LPMPL2U</user>
    <text>string keys pointing to values of a known data type?</text>
  </message>
  <message>
    <ts>2017-06-29T15:32:12.963627</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U17PWHU4D&gt; you could do that with a Dict, where the keys are those strings and the values... If they're all the same type, that would work just like that, if not you'd have to make a union type to represent the different possibilities</text>
  </message>
  <message>
    <ts>2017-06-29T15:32:56.978193</ts>
    <user>U17PWHU4D</user>
    <text>thanks &lt;@U0LPMPL2U&gt; and &lt;@U3SJEDR96&gt; , going to look into `Dict`.  and yes.  example: 

```
{
  "1234": {
    id: 1
  },
  "1235": {
    id: 2
  }
}
```</text>
  </message>
  <message>
    <ts>2017-06-29T15:33:05.981530</ts>
    <user>U17PWHU4D</user>
    <text>assuming that's the way to do it.  thanks again!</text>
  </message>
  <message>
    <ts>2017-06-29T15:33:30.989826</ts>
    <user>U0LPMPL2U</user>
    <text>Is this JSON you're trying to convert to an Elm structure?</text>
  </message>
  <message>
    <ts>2017-06-29T15:33:39.992860</ts>
    <user>U0CLDU8UB</user>
    <text>&lt;@U601ELFEG&gt; What do you mean by "don't want to author [..] in elm"? Do you mean that you don't want to write that in Elm or that you want to keep it in your codebase as plain HTML?</text>
  </message>
  <message>
    <ts>2017-06-29T15:34:21.006929</ts>
    <user>U601ELFEG</user>
    <text>meaning I want to keep things like the content of the help panels authored in HTML - probably in a file apart from the elm code -</text>
  </message>
  <message>
    <ts>2017-06-29T15:34:27.008793</ts>
    <user>U17PWHU4D</user>
    <text>in the example there &lt;@U0LPMPL2U&gt;, but i also have the same issue for types.  so i think Dict should get me on the right path.</text>
  </message>
  <message>
    <ts>2017-06-29T15:34:40.013219</ts>
    <user>U601ELFEG</user>
    <text>ditto the control panel (it has some meticulously laid out and styled buttons)</text>
  </message>
  <message>
    <ts>2017-06-29T15:34:51.016759</ts>
    <user>U0LPMPL2U</user>
    <text>The structure of your types doesn't have to mirror the structure of your JSON</text>
  </message>
  <message>
    <ts>2017-06-29T15:35:17.025408</ts>
    <user>U0LPMPL2U</user>
    <text>for example, you could have:

```
type alias Thing = 
  { number : String
  , id : Int
  }
```</text>
  </message>
  <message>
    <ts>2017-06-29T15:35:29.029923</ts>
    <user>U0LPMPL2U</user>
    <text>and convert the JSON into this type</text>
  </message>
  <message>
    <ts>2017-06-29T15:36:51.056630</ts>
    <user>U0CLDU8UB</user>
    <text>I don't think too many people have done something like that. The only thing I can think of is using Custom Elements (Web Components).</text>
  </message>
  <message>
    <ts>2017-06-29T15:37:58.078216</ts>
    <user>U601ELFEG</user>
    <text>hrm... that sounds "heavy" - perhaps I'll just keep these things in the "outer" HTML file that I use to load the elm app into a &amp;lt;div&amp;gt; --- though these things will be outside elm's &amp;lt;div&amp;gt; -- and use ports and some javascript to plumb to/from the elm code</text>
  </message>
  <message>
    <ts>2017-06-29T15:38:52.096034</ts>
    <user>U601ELFEG</user>
    <text>does that sound crazy? Like imagine I have 40 or so help panels in the left hand margin, and I want to hide/show them based on the current state of the model - I'd just plumb like some ID strings into a port have JS do the hide/show</text>
  </message>
  <message>
    <ts>2017-06-29T15:39:49.114537</ts>
    <user>U0CLDU8UB</user>
    <text>Honestly, in our production app we used that exact idea for a few dialogs.</text>
  </message>
  <message>
    <ts>2017-06-29T15:40:59.137956</ts>
    <user>U0CLDU8UB</user>
    <text>Then again 40 panels does sound like a lot of added DOM.</text>
  </message>
  <message>
    <ts>2017-06-29T15:41:55.156618</ts>
    <user>U601ELFEG</user>
    <text>right - which is why I don't want to be re-building this essentially static DOM sub-tree inside elm - also authoring the styled text will be much easier if I just do it in HTML</text>
  </message>
  <message>
    <ts>2017-06-29T15:42:21.165427</ts>
    <user>U0CLDU8UB</user>
    <text>Just as a side note, did you know this exists: &lt;https://mbylstra.github.io/html-to-elm/&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T15:43:17.183736</ts>
    <user>U601ELFEG</user>
    <text>yes - I did - but I'd rather not have the extra build step - and it still means I'd be pushing this giant DOM tree from elm all the time</text>
  </message>
  <message>
    <ts>2017-06-29T15:44:19.203899</ts>
    <user>U0CLDU8UB</user>
    <text>Or a silly idea: you could put a string of HTML through a port and in the Elm app use the `innerHTML` trick to drop it in its place :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-29T15:45:27.226732</ts>
    <user>U601ELFEG</user>
    <text>okay - seems like a little JS and ports will be the easiest path</text>
  </message>
  <message>
    <ts>2017-06-29T15:46:21.245123</ts>
    <user>U601ELFEG</user>
    <text>I don't mind, I'm not a purist - and elm has made the "meat" of my app *so much nicer* and come up so quickly, that this isn't really a detraction from elm</text>
  </message>
  <message>
    <ts>2017-06-29T15:46:49.254191</ts>
    <user>U23SA861Y</user>
    <text>just remember, languages separate technologies, not concerns. You shouldn't use a seperate language simply because you feel there needs to a be a division in the code base.</text>
  </message>
  <message>
    <ts>2017-06-29T15:50:01.318476</ts>
    <user>U601ELFEG</user>
    <text>yeah - this is separate technologies: extensive help (or rather, think lessons) need extensive text styling and presentation - and so HTML is the right language.... ... I guess I just need to build a set of Cmd things that does _hide/show this node "out there" on the rest of the page_</text>
  </message>
  <message>
    <ts>2017-06-29T15:53:01.380350</ts>
    <user>U23SA861Y</user>
    <text>I don't know if these are moving about, but if the "lessons" appear in the same place you can almost just use an iframe and be done</text>
  </message>
  <message>
    <ts>2017-06-29T15:54:56.419582</ts>
    <user>U3SJEDR96</user>
    <text>One option to consider is using elm-markdown..</text>
  </message>
  <message>
    <ts>2017-06-29T15:56:06.443481</ts>
    <user>U0CLDU8UB</user>
    <text>Oh wow, thinking outside of the box :smile:</text>
  </message>
  <message>
    <ts>2017-06-29T15:57:55.481695</ts>
    <user>U3SJEDR96</user>
    <text>I mean, it can handle html, too, so doing the meat of it in markdown and some more advanced ad-hoc markup in html could work out nicely for those lessons</text>
  </message>
  <message>
    <ts>2017-06-29T16:01:48.565652</ts>
    <user>U17PWHU4D</user>
    <text>&lt;@U0LPMPL2U&gt; - if its ok to follow up on the `Dict` for types.  I'm struggling a bit.  how would I type `placement` here if `a` is the unknown and could be unlimited amount of them.

```
type alias Node =
    { id : Int
    , name : String
    , placement :
        { a : NodeLocation
        }
    }
```</text>
  </message>
  <message>
    <ts>2017-06-29T16:03:20.598467</ts>
    <user>U0LPMPL2U</user>
    <text>Could your break it into two keys?</text>
  </message>
  <message>
    <ts>2017-06-29T16:04:02.612876</ts>
    <user>U0LPMPL2U</user>
    <text>```
type alias Node =
    { id : Int
    , name : String
    , placement :
        { id : String,
        , location : NodeLocation
        }
    }
```</text>
  </message>
  <message>
    <ts>2017-06-29T16:05:26.641040</ts>
    <user>U17PWHU4D</user>
    <text>ah, i see what you're saying.  so then i'm just making it a list and denormalizing?  is that correct?</text>
  </message>
  <message>
    <ts>2017-06-29T16:06:02.653151</ts>
    <user>U17PWHU4D</user>
    <text>i mean, i've always had responses this way because it was optimized to grab by key rather than array/list.</text>
  </message>
  <message>
    <ts>2017-06-29T16:06:33.663699</ts>
    <user>U17PWHU4D</user>
    <text>if you imagine there's 1000 placements, and they all have an ID.  our structures have always been to have the data normalized.</text>
  </message>
  <message>
    <ts>2017-06-29T16:06:58.671913</ts>
    <user>U17PWHU4D</user>
    <text>in FlowType, I can use `[key: String]: NodeLocation`.  wondering if there's a similar usecase for elm.</text>
  </message>
  <message>
    <ts>2017-06-29T16:08:44.705501</ts>
    <user>U0LPMPL2U</user>
    <text>So Elm records need to know the name of the keys at _compile_ time</text>
  </message>
  <message>
    <ts>2017-06-29T16:08:55.709234</ts>
    <user>U0LPMPL2U</user>
    <text>A Dict might be the best use case for you here</text>
  </message>
  <message>
    <ts>2017-06-29T16:09:21.717487</ts>
    <user>U0LPMPL2U</user>
    <text>So you'd have:
```
type alias Node =
    { id : Int
    , name : String
    , placement : Dict String NodeLocation
    }
```</text>
  </message>
  <message>
    <ts>2017-06-29T16:10:06.731717</ts>
    <user>U0LPMPL2U</user>
    <text>this says the Dict has string keys and that the values are node locations</text>
  </message>
  <message>
    <ts>2017-06-29T16:10:19.736036</ts>
    <user>U17PWHU4D</user>
    <text>yep.  this looks like it makes sense to me!</text>
  </message>
  <message>
    <ts>2017-06-29T16:10:37.741870</ts>
    <user>U17PWHU4D</user>
    <text>going to try this out and see if i get there.  thanks again.</text>
  </message>
  <message>
    <ts>2017-06-29T16:12:29.778590</ts>
    <user>U0LPMPL2U</user>
    <text>Note that reading from a `Dict` returns a `Maybe` because there's no guarantee that the key would be present (other languages usually return `null` in this case)</text>
  </message>
  <message>
    <ts>2017-06-29T16:16:43.862828</ts>
    <user>U17PWHU4D</user>
    <text>makes sense.  I'll keep an eye out for that.</text>
  </message>
  <message>
    <ts>2017-06-29T21:39:28.869705</ts>
    <user>U5YDC1YUW</user>
    <text>is there such a thing as getting an element in a List via an index in Elm? can't seem to see it in the docs</text>
  </message>
  <message>
    <ts>2017-06-29T21:39:41.871107</ts>
    <user>U5YDC1YUW</user>
    <text>like if I want the second element, etc.</text>
  </message>
  <message>
    <ts>2017-06-29T21:40:35.878236</ts>
    <user>U23SA861Y</user>
    <text>list is probably not the best for random access</text>
  </message>
  <message>
    <ts>2017-06-29T21:40:51.880432</ts>
    <user>U23SA861Y</user>
    <text>but take is what you want</text>
  </message>
  <message>
    <ts>2017-06-29T21:41:05.882360</ts>
    <user>U23SA861Y</user>
    <text>err sry</text>
  </message>
  <message>
    <ts>2017-06-29T21:43:53.903432</ts>
    <user>U5YDC1YUW</user>
    <text>hmm, may have to look at remodelling my logic perhaps</text>
  </message>
  <message>
    <ts>2017-06-29T21:44:22.907263</ts>
    <user>U23SA861Y</user>
    <text>You can get that behaviour by dropping N-1 elements and then using head</text>
  </message>
  <message>
    <ts>2017-06-29T21:44:41.909694</ts>
    <user>U23SA861Y</user>
    <text>but if you List is a linked list so it isn't random access</text>
  </message>
  <message>
    <ts>2017-06-29T21:45:09.913248</ts>
    <user>U23SA861Y</user>
    <text>a `Dict` would allow for random access as well as `Array`</text>
  </message>
  <message>
    <ts>2017-06-29T21:45:25.915543</ts>
    <user>U23SA861Y</user>
    <text>although there was some talk of `Array` being broken in some way</text>
  </message>
  <message>
    <ts>2017-06-29T21:46:19.922446</ts>
    <user>U5YDC1YUW</user>
    <text>hmmm, I'll have a look into them and see if it'll work for what I need</text>
  </message>
  <message>
    <ts>2017-06-29T21:46:33.924135</ts>
    <user>U23SA861Y</user>
    <text>what is the application this is for</text>
  </message>
  <message>
    <ts>2017-06-29T21:46:41.925077</ts>
    <user>U23SA861Y</user>
    <text>there might be a better way to do what you want</text>
  </message>
  <message>
    <ts>2017-06-29T21:49:26.945767</ts>
    <user>U5YDC1YUW</user>
    <text>basically I just have a list of "Items", a user starts at item 1, does a bunch of stuff via the UI that modifies item 1, then clicks next. Item 2 appears, same thing happens, item 3... etc. At the very last item there'll be a "complete/finish" event at which stage I'll go through all the items and calculate things based off their state</text>
  </message>
  <message>
    <ts>2017-06-29T21:50:00.949859</ts>
    <user>U5YDC1YUW</user>
    <text>in typing that all out though, I realise I can probably just calculate that state at each point and then just pop the item off the list and forget about it</text>
  </message>
  <message>
    <ts>2017-06-29T21:50:13.951505</ts>
    <user>U5YDC1YUW</user>
    <text>instead of going back at the end and doing it</text>
  </message>
  <message>
    <ts>2017-06-29T21:51:42.963612</ts>
    <user>U23SA861Y</user>
    <text>a Dict keyed with and Int would work just fine there</text>
  </message>
  <message>
    <ts>2017-06-29T21:52:02.966091</ts>
    <user>U23SA861Y</user>
    <text>there was also a talk about this I remember seeing</text>
  </message>
  <message>
    <ts>2017-06-29T21:52:38.970840</ts>
    <user>U23SA861Y</user>
    <text>having a datastructure that is like {previous : List Page, Current : Path, next : List Page} also works</text>
  </message>
  <message>
    <ts>2017-06-29T21:53:46.979377</ts>
    <user>U5YDC1YUW</user>
    <text>yeah I think in my case I may actually be alright just doing the state calc at the point of hitting next, then just popping it off the list, as the user can never go "back" to a previous step</text>
  </message>
  <message>
    <ts>2017-06-29T21:54:15.983056</ts>
    <user>U23SA861Y</user>
    <text>&lt;https://www.youtube.com/watch?v=IcgmSRJHu_8&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T21:54:20.983744</ts>
    <user>U23SA861Y</user>
    <text>watch this one</text>
  </message>
  <message>
    <ts>2017-06-29T21:54:22.984012</ts>
    <user>U5YDC1YUW</user>
    <text>I think I was just incorrectly imaging doing all that calculation at the end of it all having to iterate over the list again</text>
  </message>
  <message>
    <ts>2017-06-29T21:54:46.986844</ts>
    <user>U5YDC1YUW</user>
    <text>sweet, I'll cue it up to watch</text>
  </message>
  <message>
    <ts>2017-06-29T21:54:51.987519</ts>
    <user>U23SA861Y</user>
    <text>well the previous is there so you can do the calculation</text>
  </message>
  <message>
    <ts>2017-06-29T21:55:01.988781</ts>
    <user>U23SA861Y</user>
    <text>you don't actually need to give users a back button</text>
  </message>
  <message>
    <ts>2017-06-29T21:56:57.004026</ts>
    <user>U5YDC1YUW</user>
    <text>yeah true, I'll have a watch of the video and see if I makes sense doing it that way</text>
  </message>
  <message>
    <ts>2017-06-29T21:57:16.006502</ts>
    <user>U5YDC1YUW</user>
    <text>I'm sort of just experimenting here a little bit</text>
  </message>
  <message>
    <ts>2017-06-29T21:57:46.010161</ts>
    <user>U23SA861Y</user>
    <text>Elm's type system is pretty powerful, making your compiler do your bug checking for you is an amazing experience</text>
  </message>
  <message>
    <ts>2017-06-29T21:58:20.014557</ts>
    <user>U5YDC1YUW</user>
    <text>I definitely can't foresee ever wanting to go back to vanilla js</text>
  </message>
  <message>
    <ts>2017-06-29T21:59:01.019797</ts>
    <user>U5YDC1YUW</user>
    <text>even the small few components I've now built in Elm have been mind-blowing</text>
  </message>
  <message>
    <ts>2017-06-29T22:00:06.028743</ts>
    <user>U23SA861Y</user>
    <text>So long as it doesn't get bogged down by some of haskell's baggage, it has a bright future</text>
  </message>
  <message>
    <ts>2017-06-29T22:01:11.038405</ts>
    <user>U5YDC1YUW</user>
    <text>I've got no experience with Haskell, so not really sure what that entails</text>
  </message>
  <message>
    <ts>2017-06-29T22:01:33.041303</ts>
    <user>U23SA861Y</user>
    <text>Haskell is very academic with the code written in graduate student style</text>
  </message>
  <message>
    <ts>2017-06-29T22:02:25.048101</ts>
    <user>U23SA861Y</user>
    <text>It has a lot of people adding new and interesting features but less of a community actually using it to get stuff done</text>
  </message>
  <message>
    <ts>2017-06-29T22:04:23.063167</ts>
    <user>U5YDC1YUW</user>
    <text>seems fitting for an academic language haha.</text>
  </message>
  <message>
    <ts>2017-06-29T22:04:57.067242</ts>
    <user>U23SA861Y</user>
    <text>fair enough, but it's kind of soured FP for a long time because all those feature can make the language quite obtuse</text>
  </message>
  <message>
    <ts>2017-06-29T22:05:22.070488</ts>
    <user>U23SA861Y</user>
    <text>particularly when you let everyone make their own operators and encourage it in your stdlib</text>
  </message>
  <message>
    <ts>2017-06-29T22:06:32.079057</ts>
    <user>U5YDC1YUW</user>
    <text>yup, which I guess like you said, as long as Elm doesn't fall down that same rabbit hole I'm sure it will continue to do quite well</text>
  </message>
  <message>
    <ts>2017-06-29T22:06:32.079066</ts>
    <user>U5YDC1YUW</user>
    <text>and gain more traction</text>
  </message>
  <message>
    <ts>2017-06-29T22:07:30.085852</ts>
    <user>U5YDC1YUW</user>
    <text>one thing I do very much like about it is how you can enforce one style of writing it too, no more arguments with your fellow devs as to styleguides</text>
  </message>
  <message>
    <ts>2017-06-29T22:09:39.101179</ts>
    <user>U23SA861Y</user>
    <text>well you certainly can from a formatting perspective, you can still get some stylistic variations though</text>
  </message>
  <message>
    <ts>2017-06-29T22:10:33.108011</ts>
    <user>U5YDC1YUW</user>
    <text>yeah I guess in terms of variable/function naming etc. but it's definitely a major step up from the shitfest that is javascript</text>
  </message>
  <message>
    <ts>2017-06-29T22:29:49.242728</ts>
    <user>U3KSN5MAL</user>
    <text>Hmm, i'm not sure what exersize 7 wants me to do here ?

&lt;https://github.com/zwilias/elm-demystify-decoders/blob/master/src/Exercise07.elm&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T22:30:12.245535</ts>
    <user>U3KSN5MAL</user>
    <text>Seems it's not asking for a decoder at all, just a string?</text>
  </message>
  <message>
    <ts>2017-06-29T22:31:04.252475</ts>
    <user>U48AEBJQ3</user>
    <text>It wants you to make a `Decoder` which doesn't do anything but produce the indicated string.</text>
  </message>
  <message>
    <ts>2017-06-29T22:31:08.252934</ts>
    <user>U23SA861Y</user>
    <text>well it wants a decoder which always succeeds in returning a string</text>
  </message>
  <message>
    <ts>2017-06-29T22:31:26.255541</ts>
    <user>U23SA861Y</user>
    <text>cough wink nudge</text>
  </message>
  <message>
    <ts>2017-06-29T22:31:32.256232</ts>
    <user>U3KSN5MAL</user>
    <text>so it's not going to decode anything?</text>
  </message>
  <message>
    <ts>2017-06-29T22:31:42.257438</ts>
    <user>U48AEBJQ3</user>
    <text>It ignores the JSON.</text>
  </message>
  <message>
    <ts>2017-06-29T22:31:47.258125</ts>
    <user>U23SA861Y</user>
    <text>no, but it needs the same shape as a decoder</text>
  </message>
  <message>
    <ts>2017-06-29T22:31:47.258145</ts>
    <user>U3KSN5MAL</user>
    <text>lol ok</text>
  </message>
  <message>
    <ts>2017-06-29T22:32:17.261807</ts>
    <user>U48AEBJQ3</user>
    <text>The next exercise will have you use it for something more useful.</text>
  </message>
  <message>
    <ts>2017-06-29T22:34:40.277595</ts>
    <user>U3KSN5MAL</user>
    <text>I'm still not convinced of the format of this sort of exersize when there is no place to really go but to ask people if you get stuck.</text>
  </message>
  <message>
    <ts>2017-06-29T22:34:52.278890</ts>
    <user>U3KSN5MAL</user>
    <text>I tried exercism for a while and kept running into the same thing</text>
  </message>
  <message>
    <ts>2017-06-29T22:37:32.297149</ts>
    <user>U3KSN5MAL</user>
    <text>am i supposed to be using the decodeString on it?</text>
  </message>
  <message>
    <ts>2017-06-29T22:43:19.337004</ts>
    <user>U3KSN5MAL</user>
    <text>nvm got it</text>
  </message>
  <message>
    <ts>2017-06-29T22:43:23.337743</ts>
    <user>U3KSN5MAL</user>
    <text>supposed to use succeed</text>
  </message>
  <message>
    <ts>2017-06-29T23:02:24.468289</ts>
    <user>U3HQVHERX</user>
    <text>redroyal: how often do you use the `elm-repl`? i found myself slowly understanding things after doing small things and guessing at the output.</text>
  </message>
  <message>
    <ts>2017-06-29T23:03:11.473753</ts>
    <user>U3KSN5MAL</user>
    <text>It's not a case of that, it's more lack of not knowing the tools they want me to use</text>
  </message>
  <message>
    <ts>2017-06-29T23:03:57.478856</ts>
    <user>U3KSN5MAL</user>
    <text>the hell, my code is compiling with elm-make but it's failing when compiling with elm-test</text>
  </message>
  <message>
    <ts>2017-06-29T23:04:45.483874</ts>
    <user>U3KSN5MAL</user>
    <text>```type Color
    = Green
    | Blue
    | Red


decoder : String -&amp;gt; Decoder (Result String Color)
decoder colorString =
    succeed &amp;lt;| fromStringColor colorString


fromStringColor : String -&amp;gt; Result String Color
fromStringColor string =
    case string of
        "blue" -&amp;gt;
            Result.Ok Blue

        "green" -&amp;gt;
            Result.Ok Green

        "red" -&amp;gt;
            Result.Ok Red

        _ -&amp;gt;
            Result.Err ("I don't know a color named " ++ (toString string))
```</text>
  </message>
  <message>
    <ts>2017-06-29T23:04:50.484344</ts>
    <user>U3KSN5MAL</user>
    <text>the code in qustion</text>
  </message>
  <message>
    <ts>2017-06-29T23:05:50.491033</ts>
    <user>U48AEBJQ3</user>
    <text>What is elm-test saying?</text>
  </message>
  <message>
    <ts>2017-06-29T23:06:04.492516</ts>
    <user>U3KSN5MAL</user>
    <text>`Compilation failed while attempting to build C:\Users\muzzo\Documents\elm-demystify-decoders\tests\Exercise08\Tests.elm`</text>
  </message>
  <message>
    <ts>2017-06-29T23:06:14.493628</ts>
    <user>U48AEBJQ3</user>
    <text>Oh, you changed the type of `decoder`</text>
  </message>
  <message>
    <ts>2017-06-29T23:06:41.496575</ts>
    <user>U48AEBJQ3</user>
    <text>It should be `String -&amp;gt; Decoder Color`. I think the talk about `Result` caused some confusion.</text>
  </message>
  <message>
    <ts>2017-06-29T23:06:48.497306</ts>
    <user>U3KSN5MAL</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-06-29T23:06:49.497412</ts>
    <user>U3KSN5MAL</user>
    <text>it did</text>
  </message>
  <message>
    <ts>2017-06-29T23:07:38.502669</ts>
    <user>U48AEBJQ3</user>
    <text>You shouldn't need a helper function here and you should use `succeed` and `fail`.</text>
  </message>
  <message>
    <ts>2017-06-29T23:07:48.503844</ts>
    <user>U48AEBJQ3</user>
    <text>Don't use a `Result` for anything.</text>
  </message>
  <message>
    <ts>2017-06-29T23:08:09.506228</ts>
    <user>U3KSN5MAL</user>
    <text>oh ok</text>
  </message>
  <message>
    <ts>2017-06-29T23:08:58.511491</ts>
    <user>U3KSN5MAL</user>
    <text>aaah</text>
  </message>
  <message>
    <ts>2017-06-29T23:09:00.511640</ts>
    <user>U3KSN5MAL</user>
    <text>ok got it</text>
  </message>
  <message>
    <ts>2017-06-29T23:09:08.512670</ts>
    <user>U48AEBJQ3</user>
    <text>woot!</text>
  </message>
  <message>
    <ts>2017-06-29T23:40:35.711901</ts>
    <user>U5GAFT2AW</user>
    <text>how do I initialize `Date` with a default value? if I have something like this below:
```
-- MODEL
type alias Model =
  { date : Date
  , time : String
  , entryId : String
  }

init : (Model, Cmd Msg)
init =
  (Model &amp;lt;what goes here?&amp;gt; "" "", Cmd.none)
```</text>
  </message>
  <message>
    <ts>2017-06-29T23:41:18.716542</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5GAFT2AW&gt; what do you consider a default date?</text>
  </message>
  <message>
    <ts>2017-06-29T23:41:31.717923</ts>
    <user>U153UK3FA</user>
    <text>perhaps you want a `Maybe Date`</text>
  </message>
  <message>
    <ts>2017-06-29T23:43:32.730622</ts>
    <user>U153UK3FA</user>
    <text>```
-- MODEL
type alias Model =
  { date : Maybe Date
  , time : String
  , entryId : String
  }

init : (Model, Cmd Msg)
init =
  (Model Nothing "" "", Cmd.none)
```</text>
  </message>
  <message>
    <ts>2017-06-29T23:44:53.738926</ts>
    <user>U153UK3FA</user>
    <text>is `""` a valid usable value for an `entryId`?</text>
  </message>
  <message>
    <ts>2017-06-29T23:45:26.742604</ts>
    <user>U153UK3FA</user>
    <text>you might want to wrap the whole thing in a `Maybe`</text>
  </message>
  <message>
    <ts>2017-06-29T23:45:33.743328</ts>
    <user>U5GAFT2AW</user>
    <text>Ohhh, I definitely don't understand `Maybe`</text>
  </message>
  <message>
    <ts>2017-06-29T23:46:20.748297</ts>
    <user>U3HQVHERX</user>
    <text>`Maybe` is `Nothing` or `Just something` and you can pattern match it to get your value</text>
  </message>
  <message>
    <ts>2017-06-29T23:46:50.751330</ts>
    <user>U3HQVHERX</user>
    <text>maybe date's default value would be `Nothing`</text>
  </message>
  <message>
    <ts>2017-06-29T23:47:21.754522</ts>
    <user>U3HQVHERX</user>
    <text>and if it gets updated, it would be `Just date`</text>
  </message>
  <message>
    <ts>2017-06-29T23:48:02.758672</ts>
    <user>U3HQVHERX</user>
    <text>then if you see `date` you can do `case date of Nothing -&amp;gt; ... Just d -&amp;gt; ...`</text>
  </message>
  <message>
    <ts>2017-06-29T23:48:17.760151</ts>
    <user>U5GAFT2AW</user>
    <text>ahhh, because it is indeterminate at run time?</text>
  </message>
  <message>
    <ts>2017-06-29T23:48:46.763013</ts>
    <user>U3HQVHERX</user>
    <text>um, because we don't like `null`s</text>
  </message>
  <message>
    <ts>2017-06-29T23:49:19.766477</ts>
    <user>U3HQVHERX</user>
    <text>&lt;https://guide.elm-lang.org/error_handling/maybe.html&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T23:49:35.768086</ts>
    <user>U3HQVHERX</user>
    <text>&amp;gt; A Maybe can help you with optional arguments, error handling, and records with optional fields.</text>
  </message>
  <message>
    <ts>2017-06-29T23:49:38.768438</ts>
    <user>U3HQVHERX</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/latest/Maybe&gt;</text>
  </message>
  <message>
    <ts>2017-06-29T23:49:50.769773</ts>
    <user>U153UK3FA</user>
    <text>It's a lot like `null` in other languages but the compiler forces you to check it</text>
  </message>
  <message>
    <ts>2017-06-29T23:51:57.783560</ts>
    <user>U5GAFT2AW</user>
    <text>got it, thank you &lt;@U153UK3FA&gt; and &lt;@U3HQVHERX&gt; , definitely going to read up on `Maybe`</text>
  </message>
  <message>
    <ts>2017-06-29T23:52:38.788346</ts>
    <user>U3HQVHERX</user>
    <text>it's not too scary</text>
  </message>
  <message>
    <ts>2017-06-29T23:52:43.788762</ts>
    <user>U3HQVHERX</user>
    <text>just takes some getting used to</text>
  </message>
  <message>
    <ts>2017-06-30T00:01:45.847907</ts>
    <user>U5YDC1YUW</user>
    <text>is there a "join" type method in Elm? Say taking a list `["a", "b", "c"]` and joining with `"-"` giving you the string "a-b-c"?</text>
  </message>
  <message>
    <ts>2017-06-30T00:03:17.859058</ts>
    <user>U5YDC1YUW</user>
    <text>or would you have to just build that yourself using `intersperse` and `foldl`?</text>
  </message>
  <message>
    <ts>2017-06-30T00:04:11.865082</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5YDC1YUW&gt; &lt;https://klaftertief.github.io/elm-search/?q=String+-%3E+List+String+-%3E+String&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T00:05:19.873499</ts>
    <user>U5YDC1YUW</user>
    <text>magic!</text>
  </message>
  <message>
    <ts>2017-06-30T00:13:39.926720</ts>
    <user>U3KSN5MAL</user>
    <text>thanks for helping with the exercizes, got to 11, but that covers what i need atm so i'm all good for now</text>
  </message>
  <message>
    <ts>2017-06-30T01:32:56.431881</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, that's my main worry with this format. I tried to only introduce a single concept with every exercise, so at least you don't need to pick up multiple things at the same time. I'm definitely going to try and use your feedback to make it better tho</text>
  </message>
  <message>
    <ts>2017-06-30T01:33:49.437359</ts>
    <user>U61JQ4F4J</user>
    <text>Hi! can I match against several options in a `case foo of`? I mean being able to have a pattern such as `Foo || Bla -&amp;gt;`...</text>
  </message>
  <message>
    <ts>2017-06-30T01:35:32.448273</ts>
    <user>U3SJEDR96</user>
    <text>Oh, and once you feel like you have a decent solution to things, there's a solutions branch which can compare to :grin: </text>
  </message>
  <message>
    <ts>2017-06-30T01:35:33.448302</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U61JQ4F4J&gt; No, the pattern matching is fairly simple. You *can* just shunt the code into a function and call it from both branches.</text>
  </message>
  <message>
    <ts>2017-06-30T01:36:20.453430</ts>
    <user>U61JQ4F4J</user>
    <text>yeah that's the other option I was thinking... thanks &lt;@U48AEBJQ3&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T01:38:12.465381</ts>
    <user>U3SJEDR96</user>
    <text>I'm a little torn, tho. Do you feel it would've been helpful if I'd first asked, for example, to make a decoder which would always fails with a certain message? (Which would mean "adapt the `fail` that's already there, but might help in identifying how you'd need the opposite of that for a decoder which uses a hardcoded value)</text>
  </message>
  <message>
    <ts>2017-06-30T01:40:26.480686</ts>
    <user>U3SJEDR96</user>
    <text>Similarly, for grokking `map`, it might be useful to point introduce `List.map` or `Maybe.map` first - but do you feel like that would have helped, if it weren't for someone walking you through those in here?</text>
  </message>
  <message>
    <ts>2017-06-30T01:40:56.484303</ts>
    <user>U3SJEDR96</user>
    <text>Hm, right. Good point.</text>
  </message>
  <message>
    <ts>2017-06-30T01:42:55.497020</ts>
    <user>U3KSN5MAL</user>
    <text>```arrayAsTuple3 : Decoder a -&amp;gt; Decoder b -&amp;gt; Decoder c -&amp;gt; Decoder ( a, b, c )
arrayAsTuple3 a b c =
    Json.Decode.map3 (,,) a b c


decodeConvertedModel : Json.Decode.Decoder ConvertedModel
decodeConvertedModel =
    Json.Decode.Pipeline.decode ConvertedModel
        |&amp;gt; Json.Decode.Pipeline.required "pickerMode" (&lt;http://Json.Decode.int|Json.Decode.int&gt;)
        |&amp;gt; Json.Decode.Pipeline.required "activeColor" (Json.Decode.array arrayAsTuple3)```</text>
  </message>
  <message>
    <ts>2017-06-30T01:43:03.497901</ts>
    <user>U3KSN5MAL</user>
    <text>What am i doing wrong here :confused:?</text>
  </message>
  <message>
    <ts>2017-06-30T01:43:41.502214</ts>
    <user>U3KSN5MAL</user>
    <text>can't work out how to feed the information correctly into arrayAsTuple</text>
  </message>
  <message>
    <ts>2017-06-30T01:45:28.514356</ts>
    <user>U3SJEDR96</user>
    <text>You can just use `arrayAsTuple3 (index 0 int) (...) (..)` there.</text>
  </message>
  <message>
    <ts>2017-06-30T01:45:45.516239</ts>
    <user>U3KSN5MAL</user>
    <text>ah</text>
  </message>
  <message>
    <ts>2017-06-30T01:47:39.529248</ts>
    <user>U3KSN5MAL</user>
    <text>perfect</text>
  </message>
  <message>
    <ts>2017-06-30T01:47:49.530277</ts>
    <user>U3SJEDR96</user>
    <text>Of you can change the tupledecoder so that it will do the indexing by itself (by "wrapping" the decoders with the relevant `index x`), so you could just call `arrastup3 int int string` or whatever :)</text>
  </message>
  <message>
    <ts>2017-06-30T01:48:03.531810</ts>
    <user>U3KSN5MAL</user>
    <text>ah ok</text>
  </message>
  <message>
    <ts>2017-06-30T01:48:07.532236</ts>
    <user>U3KSN5MAL</user>
    <text>thank you!</text>
  </message>
  <message>
    <ts>2017-06-30T01:48:15.533232</ts>
    <user>U3SJEDR96</user>
    <text>(on mobile so being a little terse, sorry ;))</text>
  </message>
  <message>
    <ts>2017-06-30T01:50:06.545386</ts>
    <user>U3KSN5MAL</user>
    <text>dude, hero, no sweat</text>
  </message>
  <message>
    <ts>2017-06-30T02:13:18.715239</ts>
    <user>U3KSN5MAL</user>
    <text>ok hopefully last bit of trouble shooting then i should be good. 

```		var storedState = localStorage.getItem('LumaPanel');
	var startingState = storedState ? JSON.parse(storedState) : null;


	var node = document.getElementById('main');
	var app = Elm.Main.fullscreen(startingState);```</text>
  </message>
  <message>
    <ts>2017-06-30T02:14:08.721425</ts>
    <user>U3KSN5MAL</user>
    <text>so this is how i pass in the pre parsed json currently, but now i need to pass it in as a Json.value right? Do i pass it in as a maybe or do i try and check if it's a maybe inside the decoder?</text>
  </message>
  <message>
    <ts>2017-06-30T02:21:43.780640</ts>
    <user>U61JQ4F4J</user>
    <text>Another question, is &lt;https://github.com/TheSeamau5/elm-router&gt; still the way to go for routing?</text>
  </message>
  <message>
    <ts>2017-06-30T02:22:11.784523</ts>
    <user>U61JQ4F4J</user>
    <text>I don't think so since it has more than 2 years without updates :confused:</text>
  </message>
  <message>
    <ts>2017-06-30T02:28:51.837279</ts>
    <user>U61JQ4F4J</user>
    <text>seems like it should be this one right? &lt;http://package.elm-lang.org/packages/elm-lang/navigation/2.1.0&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T02:42:25.951686</ts>
    <user>U5GJ5FEAU</user>
    <text>&lt;@U61JQ4F4J&gt; yes! `elm-lang/navigation` should be the way to go</text>
  </message>
  <message>
    <ts>2017-06-30T03:05:56.175584</ts>
    <user>U3KSN5MAL</user>
    <text>Ok, got that working, but now having a lil trouble parsing this data. 

```
parsing failed: "Expecting an object with a field named `pickerHeight` but instead got: \"{
\\\"pickerMode\\\":3,
\\\"activeColor\\\":[1,1,1],
\\\"sliderOptions\\\":{
				\\\"rgbo\\\":true,
				\\\"rgbl\\\":false,
				\\\"hsvo\\\":false,
				\\\"hsvl\\\":true},
\\\"colorMode\\\":1,
\\\"lights\\\":[{
	\\\"color\\\":[1,1,1],
	\\\"isOn\\\":true,
	\\\"bitMask\\\":0,
	\\\"editMode\\\":false,
	\\\"editText\\\":false,
	\\\"name\\\":\\\"default\\\",
	\\\"id\\\":0}],
\\\"uid\\\":0,
\\\"lid\\\":1,
\\\"lightPacks\\\":[],
\\\"pickerHeight\\\":0.3702000000000001}\""```</text>
  </message>
  <message>
    <ts>2017-06-30T03:06:31.181269</ts>
    <user>U3KSN5MAL</user>
    <text>The field it's saying is missing is present, so i'm sure the error is something else</text>
  </message>
  <message>
    <ts>2017-06-30T03:06:47.183957</ts>
    <user>U3KSN5MAL</user>
    <text>any ideas for what i can look at to find the problem?</text>
  </message>
  <message>
    <ts>2017-06-30T03:10:52.224272</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U3KSN5MAL&gt; what's with all the slashes?</text>
  </message>
  <message>
    <ts>2017-06-30T03:11:06.226701</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U3KSN5MAL&gt; the code you have on the JS side was fine, only the elm side had to change :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T03:11:13.227793</ts>
    <user>U3SJEDR96</user>
    <text>I'm guessing you removed the `JSON.parse`?</text>
  </message>
  <message>
    <ts>2017-06-30T03:12:21.239199</ts>
    <user>U3SJEDR96</user>
    <text>I'd go for: `JSON.parse` on the JS side, and passing the resulting object in through flags. On the Elm side, that means you'd take `Json.Encode.Value` as your flags type, and use `Json.Decode.decodeValue` on it to get a `Result String something`</text>
  </message>
  <message>
    <ts>2017-06-30T03:12:21.239319</ts>
    <user>U3KSN5MAL</user>
    <text>yeah i got that part working</text>
  </message>
  <message>
    <ts>2017-06-30T03:12:44.243006</ts>
    <user>U3KSN5MAL</user>
    <text>sorry should have posted</text>
  </message>
  <message>
    <ts>2017-06-30T03:12:59.245514</ts>
    <user>U3SJEDR96</user>
    <text>yeah, the slashes seem to indicate you're trying to run `decodeValue` on a JS string, basically</text>
  </message>
  <message>
    <ts>2017-06-30T03:13:06.246697</ts>
    <user>U3KSN5MAL</user>
    <text>ah</text>
  </message>
  <message>
    <ts>2017-06-30T03:13:38.252193</ts>
    <user>U3KSN5MAL</user>
    <text>so pass it in as a json string instead?</text>
  </message>
  <message>
    <ts>2017-06-30T03:14:18.258893</ts>
    <user>U3SJEDR96</user>
    <text>well, I'd try to pass in an actual object</text>
  </message>
  <message>
    <ts>2017-06-30T03:14:35.261899</ts>
    <user>U3SJEDR96</user>
    <text>what does the JS side of things look like, and what does the flags part look like in Elm?</text>
  </message>
  <message>
    <ts>2017-06-30T03:15:11.268027</ts>
    <user>U3KSN5MAL</user>
    <text>```var storedState = localStorage.getItem('LumaPanel');
var app = Elm.Main.fullscreen(storedState);```</text>
  </message>
  <message>
    <ts>2017-06-30T03:15:50.274954</ts>
    <user>U3SJEDR96</user>
    <text>right, try making that back into `JSON.parse(localStorage.getItem('LumaPanel')) || {}`</text>
  </message>
  <message>
    <ts>2017-06-30T03:15:50.274957</ts>
    <user>U3KSN5MAL</user>
    <text>```main : Program Json.Value Model Msg
main =
    Html.programWithFlags
        { init = init
        , view = view
        , subscriptions = subscriptions
        , update = updateWithStorage
        }
```</text>
  </message>
  <message>
    <ts>2017-06-30T03:16:03.277350</ts>
    <user>U3KSN5MAL</user>
    <text>ah</text>
  </message>
  <message>
    <ts>2017-06-30T03:16:37.283246</ts>
    <user>U3KSN5MAL</user>
    <text>perfect</text>
  </message>
  <message>
    <ts>2017-06-30T03:16:39.283658</ts>
    <user>U3KSN5MAL</user>
    <text>working now!</text>
  </message>
  <message>
    <ts>2017-06-30T03:16:47.285055</ts>
    <user>U3SJEDR96</user>
    <text>I mean, you can do it in Elm too, using `decodeString` rather than `decodeValue`, but there's little added value atm</text>
  </message>
  <message>
    <ts>2017-06-30T03:17:21.290833</ts>
    <user>U3KSN5MAL</user>
    <text>Yep</text>
  </message>
  <message>
    <ts>2017-06-30T03:17:45.294879</ts>
    <user>U3KSN5MAL</user>
    <text>I didn't realise that just changing the types you passed in changed how it interpreted the json</text>
  </message>
  <message>
    <ts>2017-06-30T03:17:56.296853</ts>
    <user>U3KSN5MAL</user>
    <text>so i thought i had to just pass in the string</text>
  </message>
  <message>
    <ts>2017-06-30T03:19:45.315765</ts>
    <user>U3KSN5MAL</user>
    <text>btw what the new release of my plugin looks like. Totally revamped ui</text>
  </message>
  <message>
    <ts>2017-06-30T03:19:48.316338</ts>
    <user>U3SJEDR96</user>
    <text>yeah, makes sense. But basically, `decodeValue` works on a JS value, `decodeString` works on a string. Any JS value is a valid `Json.Encode.Value`, so passing in a string as a `Json.Encode.Value` means you'd have to `decodeString string flags |&amp;gt; Result.andThen (decodeValue yourDecoder)`</text>
  </message>
  <message>
    <ts>2017-06-30T03:20:08.320168</ts>
    <user>U3KSN5MAL</user>
    <text>ah gotcha</text>
  </message>
  <message>
    <ts>2017-06-30T03:21:21.333666</ts>
    <user>U3SJEDR96</user>
    <text>Now, to figure out how to best handle your feedback on `elm-demystify-decoders` :sweat_smile:</text>
  </message>
  <message>
    <ts>2017-06-30T03:21:58.340194</ts>
    <user>U3KSN5MAL</user>
    <text>lol well you now have the entire problems i had from go to wo</text>
  </message>
  <message>
    <ts>2017-06-30T03:22:33.346614</ts>
    <user>U3SJEDR96</user>
    <text>yeah, which is invaluable, really</text>
  </message>
  <message>
    <ts>2017-06-30T03:23:04.352303</ts>
    <user>U3KSN5MAL</user>
    <text>again thanks for all the help</text>
  </message>
  <message>
    <ts>2017-06-30T04:20:28.069586</ts>
    <user>U623QK78C</user>
    <text>Hello, I'm new to elm and currently experimenting a bit. I'm trying to create a port module to a javascript library, but the method has an optional configuration parameter. What is the best way to deal with this? Wrapping the configuration in a Maybe seems to result in a really clunky interface, while making two functions seems to require different names for each. Is there an elm  convention for this?</text>
  </message>
  <message>
    <ts>2017-06-30T04:36:24.289241</ts>
    <user>U1CE9DL9H</user>
    <text>if it's optional, then maybe is the way to go</text>
  </message>
  <message>
    <ts>2017-06-30T04:37:10.299657</ts>
    <user>U1CE9DL9H</user>
    <text>an when it's optional, I guess there is a default, so then in elm you can use `Maybe.withDefault defaultParam paramFromPort`</text>
  </message>
  <message>
    <ts>2017-06-30T04:37:29.303966</ts>
    <user>U1CE9DL9H</user>
    <text>&lt;@U623QK78C&gt; which will give you a normal value without the maybe</text>
  </message>
  <message>
    <ts>2017-06-30T04:58:59.609358</ts>
    <user>U5GJ5FEAU</user>
    <text>is there a way for multiple case matches to take the same branch in a `case of` ?</text>
  </message>
  <message>
    <ts>2017-06-30T05:00:04.625927</ts>
    <user>U3SJEDR96</user>
    <text>nope; though it's worth considering if they really are separate cases, then. Separating the contents of the branch and making that into a function often helps, too.</text>
  </message>
  <message>
    <ts>2017-06-30T05:33:57.119732</ts>
    <user>U28L0BHN1</user>
    <text>How do we reconcile the will to expose as little as possible and the will to test functions, is it a good practice to expose everything from the main module to be able to do test, is there another way?</text>
  </message>
  <message>
    <ts>2017-06-30T05:35:47.145466</ts>
    <user>U3KSN5MAL</user>
    <text>when testing functions i'll usually have them in the same file, then i'll abstract them out and share them as i need them</text>
  </message>
  <message>
    <ts>2017-06-30T05:45:11.277471</ts>
    <user>U3SJEDR96</user>
    <text>Another pattern that's occasionally used is having an `Internal` module that is not part of the exposed modules, but that contains the actual internal logic and exposes the necessary functions. The exposed modules then use those internal functions to expose a nice api</text>
  </message>
  <message>
    <ts>2017-06-30T05:45:57.288601</ts>
    <user>U44CPUA82</user>
    <text>as an example: &lt;https://github.com/rundis/elm-bootstrap/blob/master/src/Bootstrap/Internal/Button.elm&gt; and &lt;https://github.com/rundis/elm-bootstrap/blob/master/src/Bootstrap/Button.elm&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T05:55:35.423170</ts>
    <user>U28L0BHN1</user>
    <text>thanks</text>
  </message>
  <message>
    <ts>2017-06-30T06:42:08.001522</ts>
    <user>U2D5SAEMN</user>
    <text>Over the past few days I made my first Elm app: &lt;https://ellie-app.com/3C82gcxFFjsa1/1&gt; I welcome any feedback. In particular I'm looking for feedback regarding the chosen data model and how to make things more concise (if possible). If anyone wants to take a look, that'd be awesome!</text>
  </message>
  <message>
    <ts>2017-06-30T07:32:09.564839</ts>
    <user>U5A726ZAR</user>
    <text>Reading this article: &lt;https://css-tricks.com/introduction-elm-architecture-build-first-application/&gt;
Can somebody elaborate on the return type `Html Msg`? I understand `Html` because you return an HTML element, but why `Msg`?</text>
  </message>
  <message>
    <ts>2017-06-30T07:34:31.591062</ts>
    <user>U2D5SAEMN</user>
    <text>That means that you can/will send `Msg` values from the HTML: they emit messages.</text>
  </message>
  <message>
    <ts>2017-06-30T07:37:05.619568</ts>
    <user>U2D5SAEMN</user>
    <text>These `Msg` will then be fed to the `update` function</text>
  </message>
  <message>
    <ts>2017-06-30T07:37:55.628496</ts>
    <user>U2D5SAEMN</user>
    <text>The guide explains it as well: &lt;https://guide.elm-lang.org/architecture/&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T07:38:29.635002</ts>
    <user>U2D5SAEMN</user>
    <text>especially the section on buttons: &lt;https://guide.elm-lang.org/architecture/user_input/buttons.html&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T08:18:59.127269</ts>
    <user>U0CLDU8UB</user>
    <text>&lt;@U2D5SAEMN&gt; Looks nice! If you wanted, you could make do without the initialCmd by using programWithFlags instead.</text>
  </message>
  <message>
    <ts>2017-06-30T08:19:52.138397</ts>
    <user>U2D5SAEMN</user>
    <text>Thanks! Do you mean calculating today in JS instead of in Elm?</text>
  </message>
  <message>
    <ts>2017-06-30T08:20:39.149058</ts>
    <user>U0CLDU8UB</user>
    <text>Yeah. You can pass the date in as a Unix timestamp in the flags, for example.</text>
  </message>
  <message>
    <ts>2017-06-30T08:23:33.187016</ts>
    <user>U2D5SAEMN</user>
    <text>Ah I see. But what would the benefit of that approach be? Only dropping the `initialCmd`?</text>
  </message>
  <message>
    <ts>2017-06-30T08:25:51.218008</ts>
    <user>U0CLDU8UB</user>
    <text>Yeah I'm not saying that it's a better way to do it, just pointing it out. So if some time later you happen to get in a situation where the data _has to_ be resolved from the start, flags is a way to do that.</text>
  </message>
  <message>
    <ts>2017-06-30T08:28:04.246941</ts>
    <user>U2D5SAEMN</user>
    <text>Got it, thanks!</text>
  </message>
  <message>
    <ts>2017-06-30T08:35:33.350069</ts>
    <user>U2D5SAEMN</user>
    <text>Do you have any further feedback? For example regarding the data model or making things more concise?</text>
  </message>
  <message>
    <ts>2017-06-30T09:18:00.040398</ts>
    <user>U0CLDU8UB</user>
    <text>Nothing major, to be honest. The filters are sort of screaming they want to be stored in a Set, but since union types are not `comparable` you would need to use an extra package so maybe it's not worth the hassle.</text>
  </message>
  <message>
    <ts>2017-06-30T09:20:11.081028</ts>
    <user>U2D5SAEMN</user>
    <text>Thanks &lt;@U0CLDU8UB&gt;! I'm glad to hear I'm on the right track :slightly_smiling_face: Why would you use a Set for the filters?</text>
  </message>
  <message>
    <ts>2017-06-30T09:22:07.117559</ts>
    <user>U0CLDU8UB</user>
    <text>Set is the data structure to reach for when:
- you should only have 0 or 1 of a given value, never two or more
- the order is not important</text>
  </message>
  <message>
    <ts>2017-06-30T09:23:32.144212</ts>
    <user>U0CLDU8UB</user>
    <text>Assuming you could store the value you wanted in the set, this is how I would do the branch in update:
```
        SetTypeFilter filter isActive -&amp;gt;
            let
                newFilters =
                    if isActive then
                        Set.insert filter model.typeFilters
                    else
                        Set.remove filter model.typeFilters
            in
                ( { model | typeFilters = newFilters }, Cmd.none )
```</text>
  </message>
  <message>
    <ts>2017-06-30T09:24:09.155466</ts>
    <user>U2D5SAEMN</user>
    <text>ah you'd store the active filters in a set?</text>
  </message>
  <message>
    <ts>2017-06-30T09:26:01.191052</ts>
    <user>U0CLDU8UB</user>
    <text>Yep. And the checkbox tells which way it's been turned, so I'd use that information:
```
type Msg
    = SetTypeFilter EventTypeFilter Bool
    -- ...

-- checkbox
input [ type_ "checkbox", checked isChecked, onCheck (SetTypeFilter BirthdayFilter) ] []
```</text>
  </message>
  <message>
    <ts>2017-06-30T09:28:45.241934</ts>
    <user>U2D5SAEMN</user>
    <text>Nice. But this would require some extra package because union types can't be stored in a Set, right?</text>
  </message>
  <message>
    <ts>2017-06-30T09:29:12.250310</ts>
    <user>U0CLDU8UB</user>
    <text>Yes, that's right.</text>
  </message>
  <message>
    <ts>2017-06-30T09:30:17.271090</ts>
    <user>U0CLDU8UB</user>
    <text>Though the "magic" of it is that you can use `toString MyType` to get `"MyType"`, which is comparable.</text>
  </message>
  <message>
    <ts>2017-06-30T09:31:53.303195</ts>
    <user>U0CLDU8UB</user>
    <text>So if you're interested in learning some data structure stuff, you could try making your own `EverySet`, which uses the core `Set` underneath, but does the string conversion in between.</text>
  </message>
  <message>
    <ts>2017-06-30T09:36:20.391619</ts>
    <user>U2D5SAEMN</user>
    <text>Sounds interesting, I'll give it a try!</text>
  </message>
  <message>
    <ts>2017-06-30T09:37:25.412953</ts>
    <user>U2D5SAEMN</user>
    <text>Got to go now, thanks for your valuable insights, highly appreciated!</text>
  </message>
  <message>
    <ts>2017-06-30T10:15:12.217627</ts>
    <user>U5QJW0DDE</user>
    <text>so, i know Elm cannot directly access the DOM. But, can you give an Elm "element" an id that the DOM can independently find with some raw JS also on the page?</text>
  </message>
  <message>
    <ts>2017-06-30T10:15:50.232176</ts>
    <user>U0LPMPL2U</user>
    <text>You can set any attributes you want on DOM elements in Elm</text>
  </message>
  <message>
    <ts>2017-06-30T10:16:17.242536</ts>
    <user>U0LPMPL2U</user>
    <text>for example `div [ id "my-id", class "my-class" ] []`</text>
  </message>
  <message>
    <ts>2017-06-30T10:16:40.251095</ts>
    <user>U0LPMPL2U</user>
    <text>Check out the `Html.Attributes` library</text>
  </message>
  <message>
    <ts>2017-06-30T10:16:47.253670</ts>
    <user>U5QJW0DDE</user>
    <text>i'm revisiting this idea i posted yesterday, it was suggested that this is not really possible in Elm, but it occurs to  me that it doesn't need to be; I just need the Elm-generated SVG to be accessible from JS for further processing: &lt;https://paste.ofcode.org/XACLTwrZwaTgDvizZUY77T&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T10:18:07.283080</ts>
    <user>U0LPMPL2U</user>
    <text>If you want to be clever, you can even assign ids dynamically and then pass them out to JS via ports</text>
  </message>
  <message>
    <ts>2017-06-30T10:18:41.295819</ts>
    <user>U0LPMPL2U</user>
    <text>For what you're doing though, it sounds like a static id should be fine</text>
  </message>
  <message>
    <ts>2017-06-30T10:18:51.299306</ts>
    <user>U5QJW0DDE</user>
    <text>the struggle I"m having with getting convinced to go with Elm on a new company project is the limitation of JS interop, trying to think of ways to do things.</text>
  </message>
  <message>
    <ts>2017-06-30T10:20:27.334488</ts>
    <user>U0LPMPL2U</user>
    <text>JS interop in Elm is more like asynchronously calling a different service than it is synchronously invoking JS functions</text>
  </message>
  <message>
    <ts>2017-06-30T10:20:51.343517</ts>
    <user>U5QJW0DDE</user>
    <text>or, just allowing an external service to dig into your Elm DOM without Elm knowing about it</text>
  </message>
  <message>
    <ts>2017-06-30T10:21:41.361748</ts>
    <user>U0LPMPL2U</user>
    <text>It's tricker to allow external JS to mutate Elm-owned DOM because Elm could re-render that at any time</text>
  </message>
  <message>
    <ts>2017-06-30T10:21:53.366412</ts>
    <user>U5QJW0DDE</user>
    <text>not to mutate, just to read</text>
  </message>
  <message>
    <ts>2017-06-30T10:22:05.370698</ts>
    <user>U0LPMPL2U</user>
    <text>reading is totally OK</text>
  </message>
  <message>
    <ts>2017-06-30T10:22:29.379564</ts>
    <user>U5QJW0DDE</user>
    <text>there are a great many UI frameworks for HTML5 now, and another limitation is not really getting to use them, from what I understand.</text>
  </message>
  <message>
    <ts>2017-06-30T10:22:37.382418</ts>
    <user>U5QJW0DDE</user>
    <text>like Semantic or Material</text>
  </message>
  <message>
    <ts>2017-06-30T10:23:01.391504</ts>
    <user>U0LPMPL2U</user>
    <text>There are Elm libraries for both Material and Bootstrap (and possibly others?)</text>
  </message>
  <message>
    <ts>2017-06-30T10:23:24.399810</ts>
    <user>U5QJW0DDE</user>
    <text>i assume it is no problem to use css libraries like Font Awesome though, freely and manually?</text>
  </message>
  <message>
    <ts>2017-06-30T10:24:20.420929</ts>
    <user>U0LPMPL2U</user>
    <text>Correct. You can manually add a stylesheet to your HTML page it will play nicely with any classes/ids/etc that you set on your DOM in Elm</text>
  </message>
  <message>
    <ts>2017-06-30T10:25:06.438531</ts>
    <user>U0LPMPL2U</user>
    <text>there are also libraries that try to integrate CSS more closely into Elm such as elm-css</text>
  </message>
  <message>
    <ts>2017-06-30T10:25:56.457109</ts>
    <user>U5QJW0DDE</user>
    <text>i really want to dive deep with Elm after a few years using Clojurescript (which i like too), but giving up some of that JS freedom is something I need to think about</text>
  </message>
  <message>
    <ts>2017-06-30T10:26:20.465882</ts>
    <user>U5QJW0DDE</user>
    <text>Clojurescript is great in  many many ways, all immutable, functional, but it suffers the runtime errors that regular JS does</text>
  </message>
  <message>
    <ts>2017-06-30T10:28:45.520471</ts>
    <user>U601ELFEG</user>
    <text>Er, I'm a little confused: Since elm doesn't have type classes, how does it have functions like `&amp;lt;`?</text>
  </message>
  <message>
    <ts>2017-06-30T10:29:56.547443</ts>
    <user>U601ELFEG</user>
    <text>Seems like all those type class like functions are calls out to Native JS?</text>
  </message>
  <message>
    <ts>2017-06-30T10:30:36.564062</ts>
    <user>U0LPMPL2U</user>
    <text>Elm _does_ have type classes, just not user-defined ones :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T10:31:04.575443</ts>
    <user>U0LPMPL2U</user>
    <text>If you look at the signature for `&amp;lt;`, you'll see: `(&amp;lt;) : comparable -&amp;gt; comparable -&amp;gt; Bool`</text>
  </message>
  <message>
    <ts>2017-06-30T10:31:17.580567</ts>
    <user>U0LPMPL2U</user>
    <text>`comparable` is a typeclass</text>
  </message>
  <message>
    <ts>2017-06-30T10:31:37.588481</ts>
    <user>U0LPMPL2U</user>
    <text>but you can't extend it and you can't create your own</text>
  </message>
  <message>
    <ts>2017-06-30T10:32:00.597830</ts>
    <user>U0LPMPL2U</user>
    <text>see &lt;http://faq.elm-community.org/#does-elm-have-ad-hoc-polymorphism-or-typeclasses&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T10:35:16.672893</ts>
    <user>U5QJW0DDE</user>
    <text>how dependable/consistent is the cross-browser behavior of Elm? any gotchas to look out for?</text>
  </message>
  <message>
    <ts>2017-06-30T10:35:47.684689</ts>
    <user>U601ELFEG</user>
    <text>I suppose I wouldn't call that "has type classes", I'd call it "has magic woo only the language developers can use"  :stuck_out_tongue_winking_eye:</text>
  </message>
  <message>
    <ts>2017-06-30T10:37:33.723683</ts>
    <user>U601ELFEG</user>
    <text>Saddly, I really want type classes.... well, that and `Array.map2` (my more immediate need)</text>
  </message>
  <message>
    <ts>2017-06-30T10:38:00.733174</ts>
    <user>U60SXAF96</user>
    <text>&lt;@U5QJW0DDE&gt;: I am piping the output of Elm through Babel (with the `env` preset). Haven't had gotten any tickets from browser compatibility issues.</text>
  </message>
  <message>
    <ts>2017-06-30T10:38:37.747120</ts>
    <user>U0CLDU8UB</user>
    <text>&lt;@U5QJW0DDE&gt; It's very dependable. The key features that may need are requestAnimationFrame and Object.assign</text>
  </message>
  <message>
    <ts>2017-06-30T10:39:11.760002</ts>
    <user>U0CLDU8UB</user>
    <text>The JS produced is mainly ES3</text>
  </message>
  <message>
    <ts>2017-06-30T10:39:15.761436</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U60SXAF96&gt; whta do you meant you are piping through babel -- the Elm transpiled JS gets further transformation from Babel?</text>
  </message>
  <message>
    <ts>2017-06-30T10:39:26.765696</ts>
    <user>U60SXAF96</user>
    <text>&lt;@U5QJW0DDE&gt;: Why can't you use these UI frameworks?</text>
  </message>
  <message>
    <ts>2017-06-30T10:40:01.778653</ts>
    <user>U5QJW0DDE</user>
    <text>i didn't realize there were Elm ports of them</text>
  </message>
  <message>
    <ts>2017-06-30T10:40:54.799373</ts>
    <user>U0CLDU8UB</user>
    <text>I haven't even thought of running compiled Elm through Babel :)</text>
  </message>
  <message>
    <ts>2017-06-30T10:41:04.803471</ts>
    <user>U60SXAF96</user>
    <text>Yes. But for us, that's mostly because we've got non-Elm JS that needs to be transpiled down, and the Elm-produced JS gets swept up into that.</text>
  </message>
  <message>
    <ts>2017-06-30T10:41:28.812718</ts>
    <user>U5QJW0DDE</user>
    <text>i'd like to use the Google Closure compiler but my understanding is that Elm's JS is not Closure-compatible</text>
  </message>
  <message>
    <ts>2017-06-30T10:42:48.843214</ts>
    <user>U60SXAF96</user>
    <text>&lt;@U5QJW0DDE&gt;: We just talked about this in &lt;#C0CJ3SBBM|general&gt;. You can use Closure out-of-the-box -- you just can't turn it up to the `ADVANCED` optimization setting, because it mangles property names in code (but not in Strings). If there was a way to turn off property name mangling, you would be fine.</text>
  </message>
  <message>
    <ts>2017-06-30T10:43:12.852339</ts>
    <user>U5QJW0DDE</user>
    <text>advanced compilation is the only reason i'd want it :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T10:43:36.861221</ts>
    <user>U60SXAF96</user>
    <text>That's a different statement than "it's not Closure-compatible".</text>
  </message>
  <message>
    <ts>2017-06-30T10:43:42.863809</ts>
    <user>U5QJW0DDE</user>
    <text>for example, all clojurescript projects go through advanced google closure eventually and its simple and leads to really optipmized code</text>
  </message>
  <message>
    <ts>2017-06-30T10:43:49.866386</ts>
    <user>U60SXAF96</user>
    <text>It's important to be precise in these kinds of claims, or you get people freaking out on heresay.</text>
  </message>
  <message>
    <ts>2017-06-30T10:44:15.876699</ts>
    <user>U60SXAF96</user>
    <text>You can run Elm through Closure no problem. It is simple to do so -- I'm doing so in my project, in fact.</text>
  </message>
  <message>
    <ts>2017-06-30T10:44:20.878500</ts>
    <user>U5QJW0DDE</user>
    <text>well, there is a paricular meaning to "closure compatible" with regards to the style of JS google allows for many of its optimizations</text>
  </message>
  <message>
    <ts>2017-06-30T10:46:16.923016</ts>
    <user>U60SXAF96</user>
    <text>Got a link?  I didn't know the term.</text>
  </message>
  <message>
    <ts>2017-06-30T10:47:07.942605</ts>
    <user>U5QJW0DDE</user>
    <text>yes, the normal Closure restrictions is what I'm referring to, like here: &lt;https://developers.google.com/closure/compiler/docs/limitations&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T10:47:37.954160</ts>
    <user>U5QJW0DDE</user>
    <text>advanced is nice for dead code elimination, last I had read this was not in Elm but perhaps that has changed?</text>
  </message>
  <message>
    <ts>2017-06-30T10:48:31.974440</ts>
    <user>U60SXAF96</user>
    <text>We just talked about that in &lt;#C0CJ3SBBM|general&gt;, too -- basic DCE is coming in the next release, but there's more advanced DCE (akin to what PureScript does) in the pipeline.</text>
  </message>
  <message>
    <ts>2017-06-30T10:48:40.977905</ts>
    <user>U5QJW0DDE</user>
    <text>well that's good to hear</text>
  </message>
  <message>
    <ts>2017-06-30T10:49:01.986021</ts>
    <user>U60SXAF96</user>
    <text>That link has 3 distinct levels of restrictions. Which one is necessary to be "Closure compatible"?</text>
  </message>
  <message>
    <ts>2017-06-30T10:49:47.003050</ts>
    <user>U5QJW0DDE</user>
    <text>all of them</text>
  </message>
  <message>
    <ts>2017-06-30T10:49:55.006093</ts>
    <user>U5QJW0DDE</user>
    <text>for advanced optimizations</text>
  </message>
  <message>
    <ts>2017-06-30T10:58:00.195029</ts>
    <user>U601ELFEG</user>
    <text>what do I use when I know that something can't produce a `Nothing`. Like, I'm willing to be my program on it?</text>
  </message>
  <message>
    <ts>2017-06-30T10:58:35.209210</ts>
    <user>U601ELFEG</user>
    <text>In Haskell I'd use `error`, but elm doesn't seem to have a function like `String -&amp;gt; a` that always fails like `never` does.</text>
  </message>
  <message>
    <ts>2017-06-30T10:59:12.223889</ts>
    <user>U0J1M0F32</user>
    <text>What are you trying to do exactly? :thinking_face:</text>
  </message>
  <message>
    <ts>2017-06-30T10:59:30.231231</ts>
    <user>U601ELFEG</user>
    <text>well, ultimate goal is implement `Array.map2`....</text>
  </message>
  <message>
    <ts>2017-06-30T10:59:47.238049</ts>
    <user>U180KMGRE</user>
    <text>Debug.crash?</text>
  </message>
  <message>
    <ts>2017-06-30T10:59:50.239518</ts>
    <user>U601ELFEG</user>
    <text>but in the small, say I have an index, `i` that I know is less than `Array.length someArray`</text>
  </message>
  <message>
    <ts>2017-06-30T10:59:55.241334</ts>
    <user>U601ELFEG</user>
    <text>Ah!</text>
  </message>
  <message>
    <ts>2017-06-30T11:00:30.257363</ts>
    <user>U601ELFEG</user>
    <text>not the best named function, but the right signature!</text>
  </message>
  <message>
    <ts>2017-06-30T11:02:33.308685</ts>
    <user>U41NK9BM4</user>
    <text>Well, it does exactly that.  Also the name implies that you should find a better way to deal with it sooner or later :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T11:20:32.732559</ts>
    <user>U5WS7CJLV</user>
    <text>question about Json.Encode (with context).  In javascript it is so easy to go JSON.stringify({ isThisEasy: true }) - but in Elm, one cannot simply Json.Encode.encode { isThisEasy = true }</text>
  </message>
  <message>
    <ts>2017-06-30T11:20:35.733738</ts>
    <user>U5WS7CJLV</user>
    <text>why is that?</text>
  </message>
  <message>
    <ts>2017-06-30T11:23:39.804157</ts>
    <user>U3SJEDR96</user>
    <text>&lt;http://package.elm-lang.org/packages/Gizra/elm-keyboard-event/1.0.0/Keyboard-Event&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T11:23:53.809530</ts>
    <user>U5WS7CJLV</user>
    <text>&lt;@U5GSY0G9J&gt; - I am new to this myself, but I think if you sent some kind of "Key13Pressed" Msg then you could kind of handle it that way</text>
  </message>
  <message>
    <ts>2017-06-30T11:24:11.816206</ts>
    <user>U5WS7CJLV</user>
    <text>but maybe you need a solution more general than that</text>
  </message>
  <message>
    <ts>2017-06-30T11:24:37.826381</ts>
    <user>U3SJEDR96</user>
    <text>(you can't actually simulate the "click", but you can handle what _would_ happen on a click)</text>
  </message>
  <message>
    <ts>2017-06-30T11:24:38.826769</ts>
    <user>U0CLDU8UB</user>
    <text>You can likely set the same Msg for both clicks and enter-presses</text>
  </message>
  <message>
    <ts>2017-06-30T11:24:38.826841</ts>
    <user>U0K92QFST</user>
    <text>&lt;@U5WS7CJLV&gt; I think the most direct answer to your question is that the `Encode` package prefers type safety and reliability to convenience</text>
  </message>
  <message>
    <ts>2017-06-30T11:25:55.856678</ts>
    <user>U5WS7CJLV</user>
    <text>I see.  For me, I just want my JSON stringified ASAP so I can make a web request.  Seems like there's a lot of resistance for something so simple (in javascript).</text>
  </message>
  <message>
    <ts>2017-06-30T11:26:44.875415</ts>
    <user>U0K92QFST</user>
    <text>Theoretically you should be able to reliably encode an Elm record, but the type signature wouldn't really make sense. It would be:
```
encode : a -&amp;gt; Value
```</text>
  </message>
  <message>
    <ts>2017-06-30T11:26:53.878959</ts>
    <user>U0CLDU8UB</user>
    <text>This should help you get going: &lt;http://eeue56.github.io/json-to-elm/&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T11:26:58.880791</ts>
    <user>U0K92QFST</user>
    <text>which suggests that you can encode ANYTHING, which isn't true (union types, etc)</text>
  </message>
  <message>
    <ts>2017-06-30T11:27:29.892648</ts>
    <user>U0K92QFST</user>
    <text>you would need something similar to `comparable`, i.e. `encodable` which signifies the types that can be encoded to valid JSON representations</text>
  </message>
  <message>
    <ts>2017-06-30T11:27:37.895702</ts>
    <user>U5WS7CJLV</user>
    <text>my brain just wants to stringify records because the syntax and concept seem real close to a javascript object</text>
  </message>
  <message>
    <ts>2017-06-30T11:27:49.900200</ts>
    <user>U5WS7CJLV</user>
    <text>I know it is not, but it is hard to be rational sometimes</text>
  </message>
  <message>
    <ts>2017-06-30T11:27:52.901440</ts>
    <user>U0K92QFST</user>
    <text>Right, but what if there's a union type in your record?</text>
  </message>
  <message>
    <ts>2017-06-30T11:28:10.908078</ts>
    <user>U0K92QFST</user>
    <text>what does the `encode` function do?</text>
  </message>
  <message>
    <ts>2017-06-30T11:28:36.918000</ts>
    <user>U3SJEDR96</user>
    <text>You'd also need runtime type introspection so look at "what are the fields of this record?", which means compiler support, etc etc. While realistically, Elm's encoders/decoders allow you to decouple your internal representation from the API format, and this is a very powerful feature</text>
  </message>
  <message>
    <ts>2017-06-30T11:29:11.931085</ts>
    <user>U0K92QFST</user>
    <text>Right. Long story short, it would be a lot more complicated. I could see something like that being implemented down the line, but for now you need to deconstruct your record.</text>
  </message>
  <message>
    <ts>2017-06-30T11:29:45.944075</ts>
    <user>U0K92QFST</user>
    <text>the nice part is that once you implement your `toValue` function it will always work, guaranteed :smile:</text>
  </message>
  <message>
    <ts>2017-06-30T11:30:25.960040</ts>
    <user>U0K92QFST</user>
    <text>and if you ever need to change the shape of your record, the compiler will guide you through the refactor</text>
  </message>
  <message>
    <ts>2017-06-30T11:30:28.961280</ts>
    <user>U5WS7CJLV</user>
    <text>good answers.  The thing that I will probably remember is that "stringifying a record is not as simple as it seems"</text>
  </message>
  <message>
    <ts>2017-06-30T11:31:02.974939</ts>
    <user>U0K92QFST</user>
    <text>yeah! one of the things Elm is great for is showing you how much complexity you've been overlooking all these years. IO, handling errors, etc.</text>
  </message>
  <message>
    <ts>2017-06-30T11:31:09.977300</ts>
    <user>U5WS7CJLV</user>
    <text>I'm only just getting started here, so my records are all of a shape that they would be easy to stringify</text>
  </message>
  <message>
    <ts>2017-06-30T11:32:59.019511</ts>
    <user>U0CLDU8UB</user>
    <text>I've also found many times we wouldn't actually need to transfer that much data over the wire, but since it's more convenient to just put the entire JS object in, we do that. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T11:33:11.024029</ts>
    <user>U5WS7CJLV</user>
    <text>:slightly_smiling_face: yep, that's true</text>
  </message>
  <message>
    <ts>2017-06-30T11:33:53.039800</ts>
    <user>U5WS7CJLV</user>
    <text>and that's what I'm doing in this case since I'm still mostly experimenting</text>
  </message>
  <message>
    <ts>2017-06-30T11:33:57.041306</ts>
    <user>U0CLDU8UB</user>
    <text>When you need the encoder, you have a step where you go "Oh, I only need the id and a boolean here"</text>
  </message>
  <message>
    <ts>2017-06-30T11:35:57.085602</ts>
    <user>U0CLDU8UB</user>
    <text>Yeah, that's fair. It'll be nice in real projects though, I promise!</text>
  </message>
  <message>
    <ts>2017-06-30T11:39:20.161441</ts>
    <user>U5WS7CJLV</user>
    <text>&lt;@U0CLDU8UB&gt; - that link is helpful - thanks!</text>
  </message>
  <message>
    <ts>2017-06-30T11:59:47.614623</ts>
    <user>U635238TG</user>
    <text>if i'm new to programming and web dev in general would it be too hard to learn elm as my first language? it just speaks to me, haha, and the whole js landscape chaos...doesn't. plus i feel learning from a strong typed language will make me a better developer in the long run.</text>
  </message>
  <message>
    <ts>2017-06-30T12:00:38.636575</ts>
    <user>U3SJEDR96</user>
    <text>It would be very interesting, but there _may_ also be some frustration along the way - a lot of tutorials will (blindly) assume some prior knowledge</text>
  </message>
  <message>
    <ts>2017-06-30T12:01:28.656535</ts>
    <user>U635238TG</user>
    <text>that was my fear too. i was thinking maybe there were intro to functional programmers for complete beginners that i could use alongside elm specific tutorials</text>
  </message>
  <message>
    <ts>2017-06-30T12:01:39.660949</ts>
    <user>U635238TG</user>
    <text>*programming</text>
  </message>
  <message>
    <ts>2017-06-30T12:02:05.670523</ts>
    <user>U0K92QFST</user>
    <text>I think definitely, definitely start with Elm</text>
  </message>
  <message>
    <ts>2017-06-30T12:02:06.670982</ts>
    <user>U0CLDU8UB</user>
    <text>I think Elm is one of the most _designed to be approachable_ languages out there, but it is true that most tutorials assume some programming knowledge</text>
  </message>
  <message>
    <ts>2017-06-30T12:02:11.672710</ts>
    <user>U0K92QFST</user>
    <text>it will teach you good habits from the start</text>
  </message>
  <message>
    <ts>2017-06-30T12:02:22.676950</ts>
    <user>U0K92QFST</user>
    <text>whereas most of us had to unlearn bad habits :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T12:02:26.678688</ts>
    <user>U635238TG</user>
    <text>exactly what is drawing me in!</text>
  </message>
  <message>
    <ts>2017-06-30T12:05:37.746794</ts>
    <user>U635238TG</user>
    <text>i think i'm just going to go for it. i did the same with learning vim, it just felt like the right approach for me, and it's been tough but so fun. js didn't keep me up until 2am last night researching it, elm did. i think i'm going to trust my gut. could bode badly for you folks though. haha</text>
  </message>
  <message>
    <ts>2017-06-30T12:06:01.755753</ts>
    <user>U0K92QFST</user>
    <text>keep the questions coming!</text>
  </message>
  <message>
    <ts>2017-06-30T12:06:03.756290</ts>
    <user>U0J1M0F32</user>
    <text>If you get stuck, let us know :smile:</text>
  </message>
  <message>
    <ts>2017-06-30T12:08:15.801275</ts>
    <user>U0CLDU8UB</user>
    <text>Somehow your attitude sounds a lot like mine when I started! I wrote this article back then, (it's very outdated now but) the foreword has a certain similar tone: &lt;http://ohanhi.com/learning-fp.html&gt;  (a more recent version of the same intro is here: &lt;http://ohanhi.com/base-for-game-elm-017.html&gt;)</text>
  </message>
  <message>
    <ts>2017-06-30T12:11:36.870000</ts>
    <user>U2SR9DL7Q</user>
    <text>learning FP... your brain gets that "oh. I like this. Let's do more of this."</text>
  </message>
  <message>
    <ts>2017-06-30T12:12:15.883454</ts>
    <user>U3SJEDR96</user>
    <text>Heh, I definitely recognize those feelings, &lt;@U0CLDU8UB&gt;. Nothing has ever "clicked" for me the way Elm has :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T12:13:14.903236</ts>
    <user>U2SR9DL7Q</user>
    <text>i always wonder what the state of contemporary programming would be like if most people _started_ FP, then did imperative afterwards? Would we find  it similarly fascinating upon discovery?</text>
  </message>
  <message>
    <ts>2017-06-30T12:13:41.912443</ts>
    <user>U635238TG</user>
    <text>that is what I'm hoping for. I was probably doing too much research on js fatigue and the state of things and how it was all a necessary evil and I was just like, "is it?" That rabbit hole led me to Elm and I was just thinking, why not start with a better approach right off the bat even if the learning curve is steep.</text>
  </message>
  <message>
    <ts>2017-06-30T12:17:10.984965</ts>
    <user>U2SR9DL7Q</user>
    <text>I'm currently in the process of skipping js entirely (besides learning the basic syntax ad usage) and just learning web dev straight through elm. I'd like to write about it eventually, and hopefully get some feedback from js developers. As &lt;@U0K92QFST&gt; said, unlearning bad habits was a big concern for me. javascript looks so... rickety. it seems like a language best used after a thorough grounding in good design principle.</text>
  </message>
  <message>
    <ts>2017-06-30T12:18:07.003606</ts>
    <user>U0K92QFST</user>
    <text>&lt;@U2SR9DL7Q&gt; I would be super interested to read about it!</text>
  </message>
  <message>
    <ts>2017-06-30T12:18:33.012047</ts>
    <user>U0CLDU8UB</user>
    <text>Me too! Do you have a blog?</text>
  </message>
  <message>
    <ts>2017-06-30T12:20:12.045009</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U0K92QFST&gt; i wont know for awhile if it was the smart decision, but elm was the tipping point in me deciding to do web development in the first place. I said, "if I already know that good web design incorporates FP principles, and I know that js devs are enjoying transitioning to elm, then I should just skip the middle step?"</text>
  </message>
  <message>
    <ts>2017-06-30T12:21:04.063458</ts>
    <user>U2SR9DL7Q</user>
    <text>no blog yet, currently building the site (with elm!)</text>
  </message>
  <message>
    <ts>2017-06-30T12:21:20.068918</ts>
    <user>U0CLDU8UB</user>
    <text>Nice!</text>
  </message>
  <message>
    <ts>2017-06-30T12:22:22.089520</ts>
    <user>U0CLDU8UB</user>
    <text>Sorry for the off-topic, but this tweet just fits very well into the discussion here:
&lt;https://twitter.com/aprilwensel/status/880822230229303298&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T12:22:56.100743</ts>
    <user>U0CLDU8UB</user>
    <text>I am so glad the Elm community in general lets people enjoy their journeys!</text>
  </message>
  <message>
    <ts>2017-06-30T12:25:05.143660</ts>
    <user>U2SR9DL7Q</user>
    <text>js from the outside looks insurmountable. frameworks and tools and platforms and layer upon layer or opinions and styles. i came from python where 'there is one obvious way to do it' is a big thing, along with not needing to venture beyong Just Using Python until you're ready (mainly because people love writing good libraries in the language. elm said,  'use me and you can get a site up and running'. no jquery, no react, no angular, no blog posts telling me how to use jquery, no blog post telling me no one uses jquery anymore...</text>
  </message>
  <message>
    <ts>2017-06-30T12:26:14.166600</ts>
    <user>U2SR9DL7Q</user>
    <text>mind you, a lot of this is because elm is new, and uncluttered. it will be interesting to see how it matures, but i am so far extremely impressed with evan, and richard and all the other folks who have brought the language to where it is right now.</text>
  </message>
  <message>
    <ts>2017-06-30T12:27:21.188373</ts>
    <user>U2SR9DL7Q</user>
    <text>useful. approachable. rational. i can probably only use one of those adjectives for Haskell :neutral_face: _end rant_</text>
  </message>
  <message>
    <ts>2017-06-30T12:30:02.242278</ts>
    <user>U635238TG</user>
    <text>how would you folks bring this same approach/philosophy to the back end? what should I start researching for when I eventually want to learn about that side of things?</text>
  </message>
  <message>
    <ts>2017-06-30T12:34:17.328440</ts>
    <user>U2SR9DL7Q</user>
    <text>um... most of my back end work i've done with python's flask framework. very minimalistic, very clean. personally, i like to avoid too many moving parts when i'm learning a new thing. a red flag for me is when i see a tagline that goes. "Just take [x] and run it on [y] with [z] for your [q] in the background, and the rest is a breeze!" I'm sure whatever they're talking about is helpful, but I want to learn one thing well, not four things badly.</text>
  </message>
  <message>
    <ts>2017-06-30T12:37:51.398653</ts>
    <user>U635238TG</user>
    <text>i'm also seeing elixir mentioned a lot with elm. any insight there?</text>
  </message>
  <message>
    <ts>2017-06-30T12:38:07.403912</ts>
    <user>U2SR9DL7Q</user>
    <text>i'm currently looking for a FP language with a simple back-end framework like flask. Haskell has Yesod, which i looked into before, but at the time i didnt know enough about Haskell, or back end development to get it going. I hear good things about elixir, and pheonix</text>
  </message>
  <message>
    <ts>2017-06-30T12:40:31.450423</ts>
    <user>U635238TG</user>
    <text>i'll keep those in the back burner for now. thanks everybody, i'm excited for this new journey and community. I just happen to be going into a 10 day silent meditation retreat in a couple days though so I have to find a way to temper my desire to jump head first into elm until my return. thanks again for the discussion and encouragement!</text>
  </message>
  <message>
    <ts>2017-06-30T12:41:32.470433</ts>
    <user>U2SR9DL7Q</user>
    <text>my goal is something with just the right amount of 'magic'. Elm's handling of model, update, view is an example. I know _what_ elm is doing (manipulating the virtual dom and managing state), even though i'm not sure exactly *how* elm does it. If i can find a similar server side experience, I'm all for it.</text>
  </message>
  <message>
    <ts>2017-06-30T12:42:08.482346</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U635238TG&gt; good luck and enjoy!</text>
  </message>
  <message>
    <ts>2017-06-30T12:56:49.774791</ts>
    <user>U1L4GLFJ6</user>
    <text>what is the Elm idiom for finding the 1st or nth item of a list</text>
  </message>
  <message>
    <ts>2017-06-30T12:56:57.777341</ts>
    <user>U1L4GLFJ6</user>
    <text>it's suprisingly hard in `List`</text>
  </message>
  <message>
    <ts>2017-06-30T12:57:35.790632</ts>
    <user>U23SA861Y</user>
    <text>as a list is a linked list, there is potentially a better way to do random access</text>
  </message>
  <message>
    <ts>2017-06-30T12:57:55.797500</ts>
    <user>U0FP80EKB</user>
    <text>first item is with `List.head` or by destructuring in a case</text>
  </message>
  <message>
    <ts>2017-06-30T12:58:28.808633</ts>
    <user>U1L4GLFJ6</user>
    <text>how about the 17th item?</text>
  </message>
  <message>
    <ts>2017-06-30T12:58:42.813266</ts>
    <user>U1L4GLFJ6</user>
    <text>&lt;@U23SA861Y&gt; yes</text>
  </message>
  <message>
    <ts>2017-06-30T12:58:56.817796</ts>
    <user>U0FP80EKB</user>
    <text>`List.drop 16 &amp;gt;&amp;gt; List.head`</text>
  </message>
  <message>
    <ts>2017-06-30T12:59:28.828382</ts>
    <user>U0FP80EKB</user>
    <text>`nthItem index = List.drop (index -1) &amp;gt;&amp;gt; List.head`</text>
  </message>
  <message>
    <ts>2017-06-30T12:59:56.837755</ts>
    <user>U0FP80EKB</user>
    <text>`nthItem : Int -&amp;gt; List a -&amp;gt; Maybe a`</text>
  </message>
  <message>
    <ts>2017-06-30T13:00:29.850629</ts>
    <user>U0FP80EKB</user>
    <text>`List.Extra` has a lot of these in them &lt;http://package.elm-lang.org/packages/elm-community/list-extra/latest/List-Extra&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T13:01:13.866313</ts>
    <user>U1L4GLFJ6</user>
    <text>and the something to handle the `Maybe` types... I'm very nervous about `List.Extra` I'd rather build them myself</text>
  </message>
  <message>
    <ts>2017-06-30T13:01:32.873129</ts>
    <user>U0FP80EKB</user>
    <text>I wouldn't be nervous. However, for simple things like this, building your own is great.</text>
  </message>
  <message>
    <ts>2017-06-30T13:01:50.879292</ts>
    <user>U0FP80EKB</user>
    <text>you handle the maybe with either a case or perhaps `Maybe.withDefault`</text>
  </message>
  <message>
    <ts>2017-06-30T13:02:24.891002</ts>
    <user>U0FP80EKB</user>
    <text>```nthItemWithDefault : Int -&amp;gt; a -&amp;gt; List a -&amp;gt; a
nthItemWithDefault index default = nthItem index &amp;gt;&amp;gt; Maybe.withDefault default```</text>
  </message>
  <message>
    <ts>2017-06-30T13:03:28.913020</ts>
    <user>U23SA861Y</user>
    <text>I would still suggest that if you need random (nth element) access, then list is the wrong datastructure to use.</text>
  </message>
  <message>
    <ts>2017-06-30T13:04:16.929330</ts>
    <user>U23SA861Y</user>
    <text>there is a reason those methods are not in the stdlib and it's intentionally annoying to use</text>
  </message>
  <message>
    <ts>2017-06-30T13:05:54.962783</ts>
    <user>U0FP80EKB</user>
    <text>Personally, I prefer to use lists for all my base data structures until I need something else. It is nice to have a good standard structure that all my code uses. Until I'm really frequently doing random access, I stick with lists. However, if the whole point is random access, then, yeah, probably the wrong data structure.
I find the cognitive overhead of trying to remember which "listy" data structure I'm using isn't worth it. YMWV :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T13:06:12.968297</ts>
    <user>U0FP80EKB</user>
    <text>In our system, we don't have any other listy data structure except `List`</text>
  </message>
  <message>
    <ts>2017-06-30T13:06:44.978753</ts>
    <user>U0FP80EKB</user>
    <text>We had a case where we thought we needed random access, but it turned out we really needed a zipper, so we built one on top of `List` :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T13:07:01.984521</ts>
    <user>U23SA861Y</user>
    <text>precisely my point</text>
  </message>
  <message>
    <ts>2017-06-30T13:08:11.007237</ts>
    <user>U0FP80EKB</user>
    <text>This, I think, is the blanket statement I'm not 100% onboard with, at least for my stuff. I think it could be a bit more nuanced as "if the primary reason for this structure is random access"
But, of course, context rules</text>
  </message>
  <message>
    <ts>2017-06-30T13:09:03.024269</ts>
    <user>U0FP80EKB</user>
    <text>I'd probably say "if you need a random access data structure, you might look at whether you really do" :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T13:09:29.033204</ts>
    <user>U0FP80EKB</user>
    <text>especially for beginners, I'd say "stick with the list!"</text>
  </message>
  <message>
    <ts>2017-06-30T13:11:15.068268</ts>
    <user>U0FP80EKB</user>
    <text>IMNSHBCCO</text>
  </message>
  <message>
    <ts>2017-06-30T13:11:28.072556</ts>
    <user>U23SA861Y</user>
    <text>It could be that you need a dict instead</text>
  </message>
  <message>
    <ts>2017-06-30T13:14:54.139995</ts>
    <user>U0FP80EKB</user>
    <text>also</text>
  </message>
  <message>
    <ts>2017-06-30T13:15:13.146318</ts>
    <user>U0FP80EKB</user>
    <text>Then the complexity around `Dict` needing comparable comes in. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T13:15:33.152993</ts>
    <user>U0FP80EKB</user>
    <text>I'm pro-OnlyList ! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T13:16:28.171320</ts>
    <user>U23SA861Y</user>
    <text>fair enough, I'm just saying its worth thinking about whether that's actually the data structure you want. If only so you sit down and force yourself to think about the structure of your data</text>
  </message>
  <message>
    <ts>2017-06-30T13:17:51.198125</ts>
    <user>U0FP80EKB</user>
    <text>True, true. :slightly_smiling_face: I look at &lt;#C192T0Q1E|beginners&gt; and think "just use list!" :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T13:18:57.219515</ts>
    <user>U23SA861Y</user>
    <text>I think of &lt;#C192T0Q1E|beginners&gt; as beginners to elm but not necessarily programming, but I could be wrong.</text>
  </message>
  <message>
    <ts>2017-06-30T13:19:35.231651</ts>
    <user>U0FP80EKB</user>
    <text>I think it covers all. but, a lot of people come in here from javascript, so there are implications from that on expectations around lists/arrays/dictionaries/etc</text>
  </message>
  <message>
    <ts>2017-06-30T13:19:51.236656</ts>
    <user>U0FP80EKB</user>
    <text>Breaking those can be good.</text>
  </message>
  <message>
    <ts>2017-06-30T13:19:57.238430</ts>
    <user>U0FP80EKB</user>
    <text>when moving into a language like Elm</text>
  </message>
  <message>
    <ts>2017-06-30T13:20:15.244262</ts>
    <user>U0FP80EKB</user>
    <text>Which is why i tend towards "if you think you need random access, you probably don't"</text>
  </message>
  <message>
    <ts>2017-06-30T13:21:01.259765</ts>
    <user>U23SA861Y</user>
    <text>sure, I can agree with that</text>
  </message>
  <message>
    <ts>2017-06-30T13:21:27.268291</ts>
    <user>U0FP80EKB</user>
    <text>But, in the end, :heart_eyes_cat: for every piece of friendly, welcoming advice that people give here</text>
  </message>
  <message>
    <ts>2017-06-30T13:21:42.273217</ts>
    <user>U0FP80EKB</user>
    <text>That's the most important thing</text>
  </message>
  <message>
    <ts>2017-06-30T13:22:17.284908</ts>
    <user>U0FP80EKB</user>
    <text>Because, in the end, whether you use array or list, WELCOME TO ELM! is a pretty consistent message I see here. I :heart: that!</text>
  </message>
  <message>
    <ts>2017-06-30T13:23:52.316402</ts>
    <user>U23SA861Y</user>
    <text>:stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-06-30T13:37:35.597561</ts>
    <user>U5AR0LDQA</user>
    <text>Is it possible to call a function onClick?

`button [onClick (&amp;lt;funtion&amp;gt; &amp;lt;model&amp;gt;)] [text "blah]`</text>
  </message>
  <message>
    <ts>2017-06-30T13:38:43.619829</ts>
    <user>U23SA861Y</user>
    <text>function no, it dispatches a message with which you can do something with</text>
  </message>
  <message>
    <ts>2017-06-30T13:39:18.630707</ts>
    <user>U5AR0LDQA</user>
    <text>Alright. Just was curious if there was another way. Thanks &lt;@U23SA861Y&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T13:45:15.747457</ts>
    <user>U23SA861Y</user>
    <text>you can however run a function against the model and have the message get dispatched back with the result</text>
  </message>
  <message>
    <ts>2017-06-30T13:49:15.829132</ts>
    <user>U31A7HG1E</user>
    <text>Can anyone point me to an example of how to use Json.Decode.Pipeline to decode a field  defined as a union type?</text>
  </message>
  <message>
    <ts>2017-06-30T13:49:41.837408</ts>
    <user>U23SA861Y</user>
    <text>oneOf is the function you want I believe</text>
  </message>
  <message>
    <ts>2017-06-30T13:51:00.864367</ts>
    <user>U31A7HG1E</user>
    <text>Ah, ok. I just found an example using that.  Thanks!</text>
  </message>
  <message>
    <ts>2017-06-30T13:52:09.887838</ts>
    <user>U3SJEDR96</user>
    <text>`oneOf` seems weird for that, I'd go for
```
type Union = One | Other
unionDecoder : Decoder Union
unionDecode =
  Json.Decode.string |&amp;gt; Json.Decode.andThen (\s -&amp;gt;
    case s of
      "one" -&amp;gt; succeed One
      "other" -&amp;gt; succeed Other
      _ -&amp;gt; fail &amp;lt;| "I don't know how to decode " ++ s
  )
```</text>
  </message>
  <message>
    <ts>2017-06-30T13:52:48.901451</ts>
    <user>U3FJSB596</user>
    <text>&lt;@U23SA861Y&gt; &lt;@U0FP80EKB&gt; I'm surprised noone mentioned `Array`.
&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Array&gt;
Is it because this is &lt;#C192T0Q1E|beginners&gt;?</text>
  </message>
  <message>
    <ts>2017-06-30T13:54:14.930826</ts>
    <user>U23SA861Y</user>
    <text>&lt;https://github.com/elm-lang/core/issues/649&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T13:54:16.931645</ts>
    <user>U23SA861Y</user>
    <text>it has issues</text>
  </message>
  <message>
    <ts>2017-06-30T13:54:35.938216</ts>
    <user>U3SJEDR96</user>
    <text>Array.Hamt fixes that (and has been merged), tho</text>
  </message>
  <message>
    <ts>2017-06-30T13:55:10.950209</ts>
    <user>U23SA861Y</user>
    <text>merged and released?</text>
  </message>
  <message>
    <ts>2017-06-30T13:55:28.956862</ts>
    <user>U3SJEDR96</user>
    <text>nope, that'll be the next release of `elm-lang/core`</text>
  </message>
  <message>
    <ts>2017-06-30T13:56:01.968794</ts>
    <user>U3SJEDR96</user>
    <text>but you _can_ already use `import Array.Hamt as Array` using `Skinney/elm-array-exploration`</text>
  </message>
  <message>
    <ts>2017-06-30T13:58:45.026632</ts>
    <user>U0FP80EKB</user>
    <text>I was more talking data structure vs specific implementation :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T13:59:30.042331</ts>
    <user>U2SR9DL7Q</user>
    <text>question: when elm 0.19 is released, if I upgrade my projects to the new release, will the maintainers of the packages i use have to do the same for me to keep using them?</text>
  </message>
  <message>
    <ts>2017-06-30T14:00:00.053098</ts>
    <user>U0K92QFST</user>
    <text>&lt;@U2SR9DL7Q&gt; yep</text>
  </message>
  <message>
    <ts>2017-06-30T14:00:27.063919</ts>
    <user>U0K92QFST</user>
    <text>in my experience so far the community as a whole's been pretty good about upgrading repos</text>
  </message>
  <message>
    <ts>2017-06-30T14:00:32.065877</ts>
    <user>U0K92QFST</user>
    <text>since major version releases are exciting</text>
  </message>
  <message>
    <ts>2017-06-30T14:00:40.068724</ts>
    <user>U3SJEDR96</user>
    <text>They'll have to do so, indeed, though in the past there have always been tools to make upgrading projects/libraries a little easier :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T14:00:49.072340</ts>
    <user>U2SR9DL7Q</user>
    <text>it sounds like something i will be annoyed about in the short term, but then REALLY happy about later on.</text>
  </message>
  <message>
    <ts>2017-06-30T14:01:12.080250</ts>
    <user>U2SR9DL7Q</user>
    <text>like taking my vitamins, or not sending passive-aggressive emails...</text>
  </message>
  <message>
    <ts>2017-06-30T14:01:26.085285</ts>
    <user>U0K92QFST</user>
    <text>In the past also, abandoned libraries that a lot of people relied on were forked and/or reimagined by more active maintainers</text>
  </message>
  <message>
    <ts>2017-06-30T14:01:42.090754</ts>
    <user>U0K92QFST</user>
    <text>that's part of the role of the `elm-community` org</text>
  </message>
  <message>
    <ts>2017-06-30T14:02:29.107051</ts>
    <user>U2SR9DL7Q</user>
    <text>sounds good. thanks folks.</text>
  </message>
  <message>
    <ts>2017-06-30T14:03:19.125013</ts>
    <user>U3FJSB596</user>
    <text>ilias: Thanks for the tip, didn't know of this implementation.</text>
  </message>
  <message>
    <ts>2017-06-30T14:03:55.137520</ts>
    <user>U3SJEDR96</user>
    <text>Oh, you should totally watch Robin's talk from elm-europe! (the person who wrote `Array.Hamt` :slightly_smiling_face: )</text>
  </message>
  <message>
    <ts>2017-06-30T14:05:11.164596</ts>
    <user>U3FJSB596</user>
    <text>I did. That's where I got the notion that a better implementation of Array was coming. He made allusions to it at the beginning of the video.</text>
  </message>
  <message>
    <ts>2017-06-30T14:05:55.179533</ts>
    <user>U3SJEDR96</user>
    <text>:smile: Yeah, I think he _tried_ to mention that you can use that _right now_ at the end of the presentation</text>
  </message>
  <message>
    <ts>2017-06-30T14:06:15.186552</ts>
    <user>U3FJSB596</user>
    <text>Nice</text>
  </message>
  <message>
    <ts>2017-06-30T14:13:36.330759</ts>
    <user>U5QJW0DDE</user>
    <text>Is it possible to pass any kind of data from JavaScript into elm thru ports? For example, raw image data that would then get assigned to an elm node?</text>
  </message>
  <message>
    <ts>2017-06-30T14:14:20.344608</ts>
    <user>U3SJEDR96</user>
    <text>Hmm, depends a little on _how_ raw you're talking, and what you mean with an `elm node` :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T14:14:45.352757</ts>
    <user>U5QJW0DDE</user>
    <text>I just mean a DOM node that Elm controls</text>
  </message>
  <message>
    <ts>2017-06-30T14:15:05.359463</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://ellie-app.com/3qpgdbQFFfqa1/0&gt; but this interesting nevertheless :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T14:15:18.363837</ts>
    <user>U5QJW0DDE</user>
    <text>By image, I mean data you can use to construct an image in JavaScript</text>
  </message>
  <message>
    <ts>2017-06-30T14:15:39.370988</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://ellie-app.com/3qpgdbQFFfqa1/1&gt; *</text>
  </message>
  <message>
    <ts>2017-06-30T14:17:03.399498</ts>
    <user>U0K92QFST</user>
    <text>&lt;@U5QJW0DDE&gt; if it's just a string, so why not!</text>
  </message>
  <message>
    <ts>2017-06-30T14:18:33.429295</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U3SJEDR96&gt; did you literally just whip up that example this moment?</text>
  </message>
  <message>
    <ts>2017-06-30T14:18:48.434072</ts>
    <user>U3SJEDR96</user>
    <text>nah, had that laying around</text>
  </message>
  <message>
    <ts>2017-06-30T14:19:03.439172</ts>
    <user>U5QJW0DDE</user>
    <text>I was like %#}]#^*^#{</text>
  </message>
  <message>
    <ts>2017-06-30T14:27:14.600294</ts>
    <user>U5QJW0DDE</user>
    <text>What is the most recommended technique to serialize elm data on the server? I've seen a couple of scarce articles about encoding JSON, would that be the way to do it? (nearly all articles are about going the other direction, decoding)</text>
  </message>
  <message>
    <ts>2017-06-30T14:27:39.608004</ts>
    <user>U0FP80EKB</user>
    <text>Definitely easiest if you serialize to JSON</text>
  </message>
  <message>
    <ts>2017-06-30T14:27:51.611871</ts>
    <user>U5QJW0DDE</user>
    <text>Jason.encode?</text>
  </message>
  <message>
    <ts>2017-06-30T14:27:52.611988</ts>
    <user>U0FP80EKB</user>
    <text>Elm is very adept at deserializing JSON</text>
  </message>
  <message>
    <ts>2017-06-30T14:28:08.617070</ts>
    <user>U0FP80EKB</user>
    <text>Depends on what server-side system you are using</text>
  </message>
  <message>
    <ts>2017-06-30T14:28:42.628610</ts>
    <user>U3SJEDR96</user>
    <text>Most articles are about decoding because it tends to be a larger "hurdle" so to speak :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T14:28:44.629306</ts>
    <user>U0FP80EKB</user>
    <text>What server are you using? We use, for example, Rails, so I have a combination of custom and ActiveModel::Serializer</text>
  </message>
  <message>
    <ts>2017-06-30T14:28:49.630734</ts>
    <user>U3SJEDR96</user>
    <text>Which is to say - encoding isn't very hard</text>
  </message>
  <message>
    <ts>2017-06-30T14:29:16.639642</ts>
    <user>U0FP80EKB</user>
    <text>Also, Elm is entirely on client-side, so serializing on the server is independent of Elm</text>
  </message>
  <message>
    <ts>2017-06-30T14:29:34.645625</ts>
    <user>U5QJW0DDE</user>
    <text>And it's easy enough to represent elms data types, like sum types, as JSon and have them encoded and decoded easily both ways?</text>
  </message>
  <message>
    <ts>2017-06-30T14:30:02.654762</ts>
    <user>U0FP80EKB</user>
    <text>No, you have to decode something else to the sum types. Have a string, perhaps, then decode to a sum type</text>
  </message>
  <message>
    <ts>2017-06-30T14:31:19.681814</ts>
    <user>U0FP80EKB</user>
    <text>We generally use a string in the JSON representation. We then have a small function that knows how to convert each string to a type.</text>
  </message>
  <message>
    <ts>2017-06-30T14:31:32.686284</ts>
    <user>U3SJEDR96</user>
    <text>as for learning how decoders work; I have this experiment ongoing and would love any and all feedback on it, _especially_ from people new to decoders - &lt;https://github.com/zwilias/demystify-decoders&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T14:31:40.689050</ts>
    <user>U3SJEDR96</user>
    <text>so feel very much invited to give that a try :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T14:32:16.701655</ts>
    <user>U5QJW0DDE</user>
    <text>Thanks, I will check that out</text>
  </message>
  <message>
    <ts>2017-06-30T14:32:29.706122</ts>
    <user>U5QJW0DDE</user>
    <text>In any case, it doesn't sound like it will be a problem from what you guys are saying</text>
  </message>
  <message>
    <ts>2017-06-30T14:33:05.718147</ts>
    <user>U5QJW0DDE</user>
    <text>Thanks slack bot, but those two gentlemen clearly have photos that indicate they are in fact men</text>
  </message>
  <message>
    <ts>2017-06-30T15:07:16.379703</ts>
    <user>U48AEBJQ3</user>
    <text>kfairwink: I think that &lt;@U0FP80EKB&gt; identifies as feline.</text>
  </message>
  <message>
    <ts>2017-06-30T15:07:58.392696</ts>
    <user>U48AEBJQ3</user>
    <text>:joy_cat:</text>
  </message>
  <message>
    <ts>2017-06-30T15:15:38.530038</ts>
    <user>U635MRFPY</user>
    <text>hi, is there some example I could look into that pushes some parts of the state into url params? what I want is e.g. to have a box I can open and close by clicking a button or link but that should be somehow reflected in the url (e.g. via `?detailed=true`)</text>
  </message>
  <message>
    <ts>2017-06-30T15:17:37.564925</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U635MRFPY&gt; Take a look at this &lt;http://package.elm-lang.org/packages/elm-lang/navigation/latest&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T15:19:19.593377</ts>
    <user>U635MRFPY</user>
    <text>&lt;@U48AEBJQ3&gt; ah, thanks, I was using that for the routing already. I suppose I would need that special option attribute which skips the event propagation?</text>
  </message>
  <message>
    <ts>2017-06-30T15:28:15.748714</ts>
    <user>U0FP80EKB</user>
    <text>This is true!</text>
  </message>
  <message>
    <ts>2017-06-30T15:55:52.221190</ts>
    <user>U5VTA57UN</user>
    <text>I have some code for 0.18 that causes the compiler to suck as much memory as it can get and never terminate, I think while it's trying to do type inference (adding an annotation makes the problem go away).  Are these types of things worth generating test cases for and reporting, or is it not mature enough for that to be a useful exercise?</text>
  </message>
  <message>
    <ts>2017-06-30T15:58:26.265311</ts>
    <user>U5XC2FJ1Y</user>
    <text>do you have deeply nested let-bindings?</text>
  </message>
  <message>
    <ts>2017-06-30T15:59:08.277197</ts>
    <user>U5XC2FJ1Y</user>
    <text>(i have no opinion on generating test cases, i just know that nested let-bindings screw up HM type inference)</text>
  </message>
  <message>
    <ts>2017-06-30T16:00:39.304272</ts>
    <user>U5VTA57UN</user>
    <text>It's a function I'm defining in a let, but it's not nested.   The function didn't have a valid signature as I'd entered it.  I'd have preferred an error message to a reboot though.</text>
  </message>
  <message>
    <ts>2017-06-30T16:03:12.348368</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5VTA57UN&gt; yea, please do attempt to make an SSCCE and log it &lt;https://github.com/elm-lang/elm-compiler/issues&gt; :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T18:22:02.240378</ts>
    <user>U5QJW0DDE</user>
    <text>i'm inspecting the compiled html file from elm-make. is this the typical/only way Elm compiles to JS, but including the whole language in the HTML file along with your custom logic?</text>
  </message>
  <message>
    <ts>2017-06-30T18:22:21.243418</ts>
    <user>U5QJW0DDE</user>
    <text>s/but/by</text>
  </message>
  <message>
    <ts>2017-06-30T18:24:05.260015</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U5QJW0DDE&gt; you can compile to a js file, and simply reference that file from your html</text>
  </message>
  <message>
    <ts>2017-06-30T18:25:25.272737</ts>
    <user>U2SR9DL7Q</user>
    <text>i believe the command is elm-make --output=elm.js. you can of course, call the js file anything you like.</text>
  </message>
  <message>
    <ts>2017-06-30T18:25:48.276503</ts>
    <user>U5QJW0DDE</user>
    <text>but as far as JS compilation options ,in general, what I'm seeing is approximately correct, and thus for most projects a big part of the JS will always be the same... the Elm language itself</text>
  </message>
  <message>
    <ts>2017-06-30T18:29:26.309965</ts>
    <user>U2SR9DL7Q</user>
    <text>When you say 'including the whole language in the html file', I'm not sure what you mean. The compiler takes the elm you write, and maps that to the equivalent js code.</text>
  </message>
  <message>
    <ts>2017-06-30T18:31:06.326029</ts>
    <user>U2SR9DL7Q</user>
    <text>The js you see is js that does the same as what you wrote in elm, not js simulating elm running your elm code. At least, that's how I've always understood it.</text>
  </message>
  <message>
    <ts>2017-06-30T18:32:17.337333</ts>
    <user>U2SR9DL7Q</user>
    <text>But you are right in the fact that since all elm projects basically follow the elm architecture, a certain part of the js that handles the interaction between those elements and interfacing with the DOM will be the same every time.</text>
  </message>
  <message>
    <ts>2017-06-30T18:32:52.342879</ts>
    <user>U5QJW0DDE</user>
    <text>no, the elm language itself compiles to js, right? and that js is in your js file, along with your own logic. or am i wrong?</text>
  </message>
  <message>
    <ts>2017-06-30T18:33:21.347336</ts>
    <user>U5QJW0DDE</user>
    <text>that is, the entire elm language's js version is in the file along with your own code</text>
  </message>
  <message>
    <ts>2017-06-30T18:34:19.355866</ts>
    <user>U5QJW0DDE</user>
    <text>for example I can take a very tiny Elm file and it compiles to nearly 8000 lines of JS</text>
  </message>
  <message>
    <ts>2017-06-30T18:34:35.358179</ts>
    <user>U5QJW0DDE</user>
    <text>and that nearly 8000 lines will be in every Elm project, right?</text>
  </message>
  <message>
    <ts>2017-06-30T18:34:59.361789</ts>
    <user>U2SR9DL7Q</user>
    <text>I didn't think it worked that way. But you may be right. If so, then for small projects it would be mainly that.</text>
  </message>
  <message>
    <ts>2017-06-30T18:35:13.364093</ts>
    <user>U5QJW0DDE</user>
    <text>have you ever looked at the JS your projects create?</text>
  </message>
  <message>
    <ts>2017-06-30T18:36:25.374935</ts>
    <user>U2SR9DL7Q</user>
    <text>Briefly. I never concerned myself with it too much, because well... It's got that hard to read nature of generated code, and elm is so performant, I never thought to consider the size of the document.</text>
  </message>
  <message>
    <ts>2017-06-30T18:36:45.377937</ts>
    <user>U5QJW0DDE</user>
    <text>except it is not hard to read at all. it has regular, readable definitions for all functions, like foldl and foldr</text>
  </message>
  <message>
    <ts>2017-06-30T18:38:17.391154</ts>
    <user>U5QJW0DDE</user>
    <text>function xor(a, b)
{
	return a !== b;
}</text>
  </message>
  <message>
    <ts>2017-06-30T18:38:46.395526</ts>
    <user>U5QJW0DDE</user>
    <text>have no idea how to format code on here</text>
  </message>
  <message>
    <ts>2017-06-30T18:38:48.395812</ts>
    <user>U2SR9DL7Q</user>
    <text>Perhaps. Maybe I should say I never attempted to read it beyond skimming through after my first elm-make attempt.</text>
  </message>
  <message>
    <ts>2017-06-30T18:40:56.414940</ts>
    <user>U2SR9DL7Q</user>
    <text>`test`</text>
  </message>
  <message>
    <ts>2017-06-30T18:41:33.420691</ts>
    <user>U2SR9DL7Q</user>
    <text>enclose the code in the " ` " symbol and it will format it appropriately</text>
  </message>
  <message>
    <ts>2017-06-30T18:43:07.434233</ts>
    <user>U5QJW0DDE</user>
    <text>try it with multiple lines</text>
  </message>
  <message>
    <ts>2017-06-30T18:43:44.439679</ts>
    <user>U2SR9DL7Q</user>
    <text>` multiple
lines
`</text>
  </message>
  <message>
    <ts>2017-06-30T18:44:10.443473</ts>
    <user>U2SR9DL7Q</user>
    <text>``` 
once 
more 
```</text>
  </message>
  <message>
    <ts>2017-06-30T18:44:50.449285</ts>
    <user>U2SR9DL7Q</user>
    <text>use triple for multi-lines " ``` "</text>
  </message>
  <message>
    <ts>2017-06-30T18:45:28.454821</ts>
    <user>U2SR9DL7Q</user>
    <text>it's kind of like python, where triple quotes let you use multi-line strings</text>
  </message>
  <message>
    <ts>2017-06-30T18:51:04.501394</ts>
    <user>U0J1M0F32</user>
    <text>Yes &lt;@U5QJW0DDE&gt; the entire Elm core language is compiled with your Elm logic at this point. That puts a certain "floor" to the size of current elm applications. However, cutting down that size is being worked on in coming elm versions, with DCE, tree shaking, and generally improving support for after compilation compression and minification.</text>
  </message>
  <message>
    <ts>2017-06-30T18:53:05.518146</ts>
    <user>U5QJW0DDE</user>
    <text>i heard a bit about that earlier</text>
  </message>
  <message>
    <ts>2017-06-30T18:53:20.520066</ts>
    <user>U5QJW0DDE</user>
    <text>can't wait to see how that develops</text>
  </message>
  <message>
    <ts>2017-06-30T18:56:24.544394</ts>
    <user>U0FP80EKB</user>
    <text>Also, we have a 2.5KLOC elm app that sits around 52k. This isn't with too much stuff other than uglify and gzip. As we add code, this shouldn't grow much.</text>
  </message>
  <message>
    <ts>2017-06-30T18:56:31.545375</ts>
    <user>U0FP80EKB</user>
    <text>just for reference</text>
  </message>
  <message>
    <ts>2017-06-30T18:57:33.553610</ts>
    <user>U0FP80EKB</user>
    <text>This contains all our embed code that gets embedded on customer sites (example &lt;https://www.wuft.org/findoutflorida/&gt; you can see the What do you wonder? and Help us out). We just put all our embeds into the same app, so we only have to load the elm app once</text>
  </message>
  <message>
    <ts>2017-06-30T18:57:55.556588</ts>
    <user>U0FP80EKB</user>
    <text>It will be great when it gets a bit of the DCE, etc, but otherwise it isn't too big, relatively speaking.</text>
  </message>
  <message>
    <ts>2017-06-30T18:59:28.569011</ts>
    <user>U0FP80EKB</user>
    <text>(also, according to hitting refresh a bunch, it loads on average around 100ms to my machine)</text>
  </message>
  <message>
    <ts>2017-06-30T19:03:19.603294</ts>
    <user>U635238TG</user>
    <text>going through the intro to elm book using the repl. it says when moving down a line (using \) include a whitespace on the new line. the example looks like it uses two spaces though. is that what I should be doing, two spaces in my code? is this way to beginner'y for this slack channel?</text>
  </message>
  <message>
    <ts>2017-06-30T19:05:35.621862</ts>
    <user>U0SES5Y3T</user>
    <text>using two spaces is fine</text>
  </message>
  <message>
    <ts>2017-06-30T19:05:40.622508</ts>
    <user>U0SES5Y3T</user>
    <text>&lt;@U635238TG&gt;</text>
  </message>
  <message>
    <ts>2017-06-30T19:06:13.626843</ts>
    <user>U0SES5Y3T</user>
    <text>I think the convention in the community is when you start using Elm in your code editor to use elm-format, which will automagically format the code for you</text>
  </message>
  <message>
    <ts>2017-06-30T19:06:19.627627</ts>
    <user>U0SES5Y3T</user>
    <text>on save</text>
  </message>
  <message>
    <ts>2017-06-30T19:06:51.631595</ts>
    <user>U635238TG</user>
    <text>nice. i'm also going to be using vim and i see there is a elm plugin that i will figure out how to install. that probably helps me too</text>
  </message>
  <message>
    <ts>2017-06-30T19:07:28.636300</ts>
    <user>U0SES5Y3T</user>
    <text>i am not familiar with vim but I am sure there is</text>
  </message>
  <message>
    <ts>2017-06-30T19:07:31.636700</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U635238TG&gt; no question is too 'beginnery' btw. the slack is here for everyone to have a space to ask about what seems confusing.</text>
  </message>
  <message>
    <ts>2017-06-30T19:09:05.648248</ts>
    <user>U635238TG</user>
    <text>and pertaining to the discussion above about what the js looks like after transpiling...does that mean in the far future if I'm building out a project for someone and they want it in js, can I still write it in elm, transpile to js and give them that code and no one is the wiser?</text>
  </message>
  <message>
    <ts>2017-06-30T19:09:42.652575</ts>
    <user>U0SES5Y3T</user>
    <text>&lt;@U635238TG&gt; sure, as long as they don't have to change it :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-06-30T19:12:00.670337</ts>
    <user>U5QJW0DDE</user>
    <text>presumably Elm would offer an option to compile with and without DCE so you can have it in its current form if you want</text>
  </message>
  <message>
    <ts>2017-06-30T19:12:13.671946</ts>
    <user>U0J1M0F32</user>
    <text>I wouldn't put money on it.</text>
  </message>
  <message>
    <ts>2017-06-30T19:12:24.673451</ts>
    <user>U5QJW0DDE</user>
    <text>but if you hand a client the current transpiled JS, they will not get much use out of that even in its current form.</text>
  </message>
  <message>
    <ts>2017-06-30T19:13:13.679429</ts>
    <user>U0J1M0F32</user>
    <text>chasote: If you're building someone a "JS" app and you build it in Elm , thats fine, but if they literally want JS code to edit, then the compiled Elm code is useless to them, even though its in JS.</text>
  </message>
  <message>
    <ts>2017-06-30T19:13:43.683012</ts>
    <user>U5QJW0DDE</user>
    <text>we were talking about this earlier today but it doesn't really make sense for the Elm devs to reinvent the wheel on this. it would be much better to leverage existing DCE like Google Closure rather than waste precious development time on something that is already done so well by other tools</text>
  </message>
  <message>
    <ts>2017-06-30T19:14:26.687917</ts>
    <user>U5QJW0DDE</user>
    <text>it would probably involve much less effort to make Elm Closure compatible for its DCE than to actually implement DCE directly in the Elm compiler</text>
  </message>
  <message>
    <ts>2017-06-30T19:17:00.706251</ts>
    <user>U635238TG</user>
    <text>ok thanks. i'm going all in with elm right now but realize it probably doesn't help my employment chances if I decide to go professional in 6-12 months or later.</text>
  </message>
  <message>
    <ts>2017-06-30T19:17:39.710842</ts>
    <user>U635238TG</user>
    <text>although I'm a former English teacher...sounds like a perfect match for future NoRedInk employment...just saying.</text>
  </message>
  <message>
    <ts>2017-06-30T19:31:57.809172</ts>
    <user>U0J1M0F32</user>
    <text>idk, theres a lot of assumptions in there.</text>
  </message>
  <message>
    <ts>2017-06-30T19:32:09.810657</ts>
    <user>U0J1M0F32</user>
    <text>:thumbsup:</text>
  </message>
  <message>
    <ts>2017-06-30T20:01:34.991228</ts>
    <user>U2SR9DL7Q</user>
    <text>hey all. i'm building an app that will require me to draw 'tiles' on the screen. essentially lots of rectangles stacked in a myriad of ways. is this a job for the SVG library?</text>
  </message>
  <message>
    <ts>2017-06-30T20:17:20.079706</ts>
    <user>U4BJ8UDCP</user>
    <text>As far as I understand, SVG is great for simple geometry that might need to be manipulated dynamically - what are you trying to do with your tiles? can you think of some properties of your tiles that won't ever change?</text>
  </message>
  <message>
    <ts>2017-06-30T20:24:10.114409</ts>
    <user>U2SR9DL7Q</user>
    <text>i'm making a domino game (i make a version that runs in the terminal in python)</text>
  </message>
  <message>
    <ts>2017-06-30T20:24:29.115945</ts>
    <user>U2SR9DL7Q</user>
    <text>so the tiles are always the same size, but are sometimes horizontal or vertical</text>
  </message>
  <message>
    <ts>2017-06-30T20:25:15.119433</ts>
    <user>U2SR9DL7Q</user>
    <text>the terminal version simply represented each domino as a tuple like `(2|3)`</text>
  </message>
  <message>
    <ts>2017-06-30T20:25:46.121910</ts>
    <user>U2SR9DL7Q</user>
    <text>and the board state was a deque which grew as players put down tiles</text>
  </message>
  <message>
    <ts>2017-06-30T20:27:19.129050</ts>
    <user>U2SR9DL7Q</user>
    <text>the python version works pretty well, but I want to make a proper UI and let people play it. the code will be on github as well so hopefully it can serve as an example for anyone interested.</text>
  </message>
  <message>
    <ts>2017-06-30T21:27:39.385952</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5QJW0DDE&gt; You can currently use Google Closure compiler with the output of the Elm compiler and you do get DCE. But you can do far more DCE with Elm code than with Javascript.</text>
  </message>
  <message>
    <ts>2017-06-30T21:32:51.405035</ts>
    <user>U635238TG</user>
    <text>what does DCE mean?</text>
  </message>
  <message>
    <ts>2017-06-30T21:33:22.406890</ts>
    <user>U2SR9DL7Q</user>
    <text>Dead Code Elimination</text>
  </message>
  <message>
    <ts>2017-06-30T22:03:54.518498</ts>
    <user>U14Q8S4EM</user>
    <text>&lt;@U2SR9DL7Q&gt; I bet you could do it with just html. That would be my go-to, and I doubt it would be any more difficult than SVG. There is also `evancz/elm-graphics`</text>
  </message>
  <message>
    <ts>2017-06-30T22:08:58.536944</ts>
    <user>U2SR9DL7Q</user>
    <text>i'll check that out &lt;@U14Q8S4EM&gt; so long as html can make rectangles with dots in them ( which sounds very possible when I say it out loud )</text>
  </message>
  <message>
    <ts>2017-06-30T22:54:44.686595</ts>
    <user>U5VD8S0HZ</user>
    <text>I am running into an issue with Msg types with components. I have a parent component that defines a Msg type. I want to call a view function on a child component and pass a `Html Msg` as a parameter. The child view function will return `Html ChildComponent.Msg`, which I can pass to `Html.map` to get a `ParentComponent.Msg` type. But... the compiler is complaining that the child view function is expecting a `Html ChildComponent.Msg` parameter but getting a `Html ParentComponent.Msg` instead (which is, of course, true). 

Is there a way to get the message types working together in this way?</text>
  </message>
  <message>
    <ts>2017-06-30T23:08:09.730241</ts>
    <user>U0JFGGZS6</user>
    <text>do the `Html.map` in the parent instead of the child ?</text>
  </message>
  <message>
    <ts>2017-06-30T23:10:25.737332</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5VD8S0HZ&gt; when doing that pattern the ChildComponent module shouldn't need to know about the ParentComponent modules Msg type, the translation between the ChildComponent.Msg and it's meaning in the ParentComponent module's update function should be done there.</text>
  </message>
  <message>
    <ts>2017-06-30T23:12:15.743607</ts>
    <user>U153UK3FA</user>
    <text>Ie. Define a ChildComponent.Msg constructor for the action you want to happen and translate it to it's ParentComponent.Msg equivalent in your update function </text>
  </message>
  <message>
    <ts>2017-06-30T23:13:11.746747</ts>
    <user>U153UK3FA</user>
    <text>It's the price you pay for the encapsulation you want</text>
  </message>
  <message>
    <ts>2017-06-30T23:14:21.750122</ts>
    <user>U153UK3FA</user>
    <text>If you don't actually need that encapulation then you can save yourself a lot of pain by just having a single Msg type that you use everywhere</text>
  </message>
  <message>
    <ts>2017-06-30T23:16:08.755921</ts>
    <user>U153UK3FA</user>
    <text>If you're new to Elm then definitely try having just a single Msg type and don't follow the 'components' pattern</text>
  </message>
  <message>
    <ts>2017-06-30T23:17:30.759947</ts>
    <user>U153UK3FA</user>
    <text>New devs tend to over use the pattern and get themselves in to a mess</text>
  </message>
  <message>
    <ts>2017-06-30T23:50:12.859931</ts>
    <user>U5VD8S0HZ</user>
    <text>&lt;@U153UK3FA&gt; the specific case I am working on is creating a general-use modal dialog component that I can pass content to. The way I am thinking about this, messages such as CloseDialog would be declared as part of the Dialog component and translated to the ParentComponent.Msg equivalent as you mentioned.

The problem is that messages that belong to the content (such as SelectCheckbox-type messages) belong to the parent component and remain unknown to the dialog component. Because of this, I haven't figured out a way to pass the content to the dialog component since the dialog component won't know about the content's Msg type.</text>
  </message>
  <message>
    <ts>2017-06-30T23:51:41.864476</ts>
    <user>U153UK3FA</user>
    <text>Ah, you need to wrap the content Msgs in a Dialog Msg and have the caller unwrap them</text>
  </message>
  <message>
    <ts>2017-06-30T23:52:47.867499</ts>
    <user>U5VD8S0HZ</user>
    <text>I am trying to parse what you just said. I'm not sure I completely get that.</text>
  </message>
  <message>
    <ts>2017-06-30T23:56:27.878246</ts>
    <user>U5VD8S0HZ</user>
    <text>So, for example, right now in my content view, which exists in the parent component, I may have something like:
```
li [ onClick SelectCheckbox checkbox.id ] []
```
where `SelectCheckbox : String` is a parent component Msg type</text>
  </message>
  <message>
    <ts>2017-06-30T23:59:26.886961</ts>
    <user>U5VD8S0HZ</user>
    <text>Are you saying that I do something like:
```
li [ onClick (DialogMsg SelectCheckbox checkbox.id) ] []
```
where DialogMsg is message type that is declared in the child component?
(sorry, my syntax is probably off here... not using an editor)</text>
  </message>
  <message>
    <ts>2017-07-01T00:00:56.893090</ts>
    <user>U5VD8S0HZ</user>
    <text>or can you point me to an example of what you mean?</text>
  </message>
  <message>
    <ts>2017-07-01T03:24:58.604544</ts>
    <user>U3YDBDP4Z</user>
    <text>Are there any good sources on good unit testing setups or strategies?</text>
  </message>
  <message>
    <ts>2017-07-01T03:34:04.636267</ts>
    <user>U5QJW0DDE</user>
    <text>This is not correct. DCE is part of the advanced optimizations in Closure which Elm does not support. But you can use the simple optimizations of Closure, which don't do DCE. </text>
  </message>
  <message>
    <ts>2017-07-01T03:34:36.637970</ts>
    <user>U5QJW0DDE</user>
    <text>Check out the Dev mailing list from yesterday if you want to see some of the issues regarding supporting the advanced optimization mode. </text>
  </message>
  <message>
    <ts>2017-07-01T04:50:24.908634</ts>
    <user>U0J8D9M2P</user>
    <text>I'm implementing functions which uses latitude/longitude. The value range for latitude is from 0 to +/- 90. Is there a way to limit value e.g. with union type so that when I have incorrect value compiler will tell that it's not allowed?</text>
  </message>
  <message>
    <ts>2017-07-01T04:54:53.924350</ts>
    <user>U4872964V</user>
    <text>No, there are no bounded number types in Elm. However, you can make your own module and wrap the number in a type and just expose the operations you need, and check the value inside the operations.

It depends on what kind of usage of those coordinates you have</text>
  </message>
  <message>
    <ts>2017-07-01T05:09:37.979809</ts>
    <user>U0J8D9M2P</user>
    <text>I have
```
getPosition : Date -&amp;gt; Float -&amp;gt; Float -&amp;gt; { azimuth : Float, altitude : Float }
getPosition date latitude longitude = ...
```</text>
  </message>
  <message>
    <ts>2017-07-01T05:12:08.989457</ts>
    <user>U0J8D9M2P</user>
    <text>So the best will be to check latitude/longitude values in function implementation and return Result, either with Ok or with Error.</text>
  </message>
  <message>
    <ts>2017-07-01T05:12:17.990037</ts>
    <user>U0J8D9M2P</user>
    <text>Is that correct?</text>
  </message>
  <message>
    <ts>2017-07-01T05:12:40.991241</ts>
    <user>U4872964V</user>
    <text>Yes, if `getPosition` can fail, I would return a `Maybe` or `Result`</text>
  </message>
  <message>
    <ts>2017-07-01T05:13:02.992519</ts>
    <user>U4872964V</user>
    <text>so that the caller has to handle those cases</text>
  </message>
  <message>
    <ts>2017-07-01T05:17:50.010504</ts>
    <user>U2D7NUGS1</user>
    <text>How can I handle Error result of `Json.Decode`? I have a snippet like this: ```
, on "opened-changed"
    (Json.Decode.string
        |&amp;gt; &lt;http://Json.Decode.at|Json.Decode.at&gt; [ "detail", "value" ]
        |&amp;gt; Json.Decode.map StringHappened
    )
```
where `StringHappened` is a constructor for my `Msg`. It just so happens that the `detail.value` is a `bool`. Currently in my app nothing happens. I want another variant of `Msg` to be used, say `ErrorHappened`. How can I do it?</text>
  </message>
  <message>
    <ts>2017-07-01T05:27:05.044769</ts>
    <user>U1CE9DL9H</user>
    <text>so detail.value can possibly have two types?</text>
  </message>
  <message>
    <ts>2017-07-01T05:29:59.054677</ts>
    <user>U41NK9BM4</user>
    <text>Or maybe he wants to handle the bad value more gracefully?</text>
  </message>
  <message>
    <ts>2017-07-01T05:30:51.058677</ts>
    <user>U2D7NUGS1</user>
    <text>&lt;@U41NK9BM4&gt; yes.</text>
  </message>
  <message>
    <ts>2017-07-01T05:31:29.060875</ts>
    <user>U41NK9BM4</user>
    <text>But does it crash if arrives a bool type as `detail.value` ?</text>
  </message>
  <message>
    <ts>2017-07-01T05:31:30.060941</ts>
    <user>U2D7NUGS1</user>
    <text>I'm working on a library and the events are coming from a 3rd party JS code.</text>
  </message>
  <message>
    <ts>2017-07-01T05:31:51.062092</ts>
    <user>U2D7NUGS1</user>
    <text>No, it does not crash. It just does nothing.</text>
  </message>
  <message>
    <ts>2017-07-01T05:32:01.062732</ts>
    <user>U2D7NUGS1</user>
    <text>I guess it's how `Json.Decode.map` works.</text>
  </message>
  <message>
    <ts>2017-07-01T05:32:22.064013</ts>
    <user>U2D7NUGS1</user>
    <text>It just ignores the `Error` case.</text>
  </message>
  <message>
    <ts>2017-07-01T05:32:54.065922</ts>
    <user>U41NK9BM4</user>
    <text>Of course as mentioned by &lt;@U1CE9DL9H&gt; you are gonna have the same field with two types.</text>
  </message>
  <message>
    <ts>2017-07-01T05:33:24.067613</ts>
    <user>U41NK9BM4</user>
    <text>Which is not desiderable I guess</text>
  </message>
  <message>
    <ts>2017-07-01T05:33:52.069063</ts>
    <user>U2D7NUGS1</user>
    <text>Well, it can by any type really. I'm mostly interested in string (in this case), but I want to handle exceptions nicely.</text>
  </message>
  <message>
    <ts>2017-07-01T05:34:30.071221</ts>
    <user>U2D7NUGS1</user>
    <text>I mean it should be a string, but it's coming from JS, so in practice it may be anything (`null`, etc).</text>
  </message>
  <message>
    <ts>2017-07-01T05:35:00.072863</ts>
    <user>U41NK9BM4</user>
    <text>Yep. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-01T05:35:31.074910</ts>
    <user>U2D7NUGS1</user>
    <text>In that case I want to give consumers of my library nicer experience by logging the problem using `Debug.log`.</text>
  </message>
  <message>
    <ts>2017-07-01T05:35:58.076619</ts>
    <user>U2D7NUGS1</user>
    <text>So if it's a String - map it to Msg, otherwise - log.</text>
  </message>
  <message>
    <ts>2017-07-01T05:36:08.077227</ts>
    <user>U1CE9DL9H</user>
    <text>then, create a decoder for both cases, and use `Decode.oneOf` to combine them</text>
  </message>
  <message>
    <ts>2017-07-01T05:36:32.078537</ts>
    <user>U2D7NUGS1</user>
    <text>What's the other case? Can you give short example?</text>
  </message>
  <message>
    <ts>2017-07-01T05:37:31.081936</ts>
    <user>U1CE9DL9H</user>
    <text>I'm not sure from your description. The case you want to catch is "detail.value is of type bool"?</text>
  </message>
  <message>
    <ts>2017-07-01T05:38:47.086240</ts>
    <user>U2D7NUGS1</user>
    <text>No, `bool` is just an example. I want to _catch_ any failure in decoding. E.g. if the whole `event` is `null`, or it doesn't have `detail` property, etc.</text>
  </message>
  <message>
    <ts>2017-07-01T05:39:00.086920</ts>
    <user>U2D7NUGS1</user>
    <text>It needs to be general purpose.</text>
  </message>
  <message>
    <ts>2017-07-01T05:39:19.088027</ts>
    <user>U2D7NUGS1</user>
    <text>Anything except the expected structure.</text>
  </message>
  <message>
    <ts>2017-07-01T05:40:12.090900</ts>
    <user>U1CE9DL9H</user>
    <text>right, so 
```
oneOf 
    [ Json.Decode.string
        |&amp;gt; &lt;http://Json.Decode.at|Json.Decode.at&gt; [ "detail", "value" ]
        |&amp;gt; Json.Decode.map StringHappened
    , Json.Decode.succeed ( handle error case ) 
    ]
```</text>
  </message>
  <message>
    <ts>2017-07-01T05:40:44.092874</ts>
    <user>U2D7NUGS1</user>
    <text>Oh, that makes sense! Let me try it.</text>
  </message>
  <message>
    <ts>2017-07-01T05:46:09.112543</ts>
    <user>U2D7NUGS1</user>
    <text>Sorry, can't get it to work. Probably my limited understanding plays a huge role here.</text>
  </message>
  <message>
    <ts>2017-07-01T05:47:08.115982</ts>
    <user>U2D7NUGS1</user>
    <text>This is what I'm trying, but it's not compiling: ```
, on "opened-changed"
    (Json.Decode.oneOf
        [ Json.Decode.string
            |&amp;gt; &lt;http://Json.Decode.at|Json.Decode.at&gt; [ "detail", "value" ]
            |&amp;gt; Json.Decode.map StringHappened
        , Json.Decode.succeed ( Debug.log "Wrong event", "" )
        ]
    )
```</text>
  </message>
  <message>
    <ts>2017-07-01T05:47:28.117195</ts>
    <user>U2D7NUGS1</user>
    <text>I understand why it's wrong, but don't know how to fix it.</text>
  </message>
  <message>
    <ts>2017-07-01T05:47:54.118697</ts>
    <user>U2D7NUGS1</user>
    <text>Basically I would like the error case to log and do not trigger a message.</text>
  </message>
  <message>
    <ts>2017-07-01T05:48:04.119351</ts>
    <user>U1CE9DL9H</user>
    <text>that's not possible</text>
  </message>
  <message>
    <ts>2017-07-01T05:48:15.120062</ts>
    <user>U1CE9DL9H</user>
    <text>because both cases need to produce the same type</text>
  </message>
  <message>
    <ts>2017-07-01T05:48:23.120527</ts>
    <user>U1CE9DL9H</user>
    <text>but, you can use `Decode.fail`</text>
  </message>
  <message>
    <ts>2017-07-01T05:48:39.121469</ts>
    <user>U2D7NUGS1</user>
    <text>Ok?</text>
  </message>
  <message>
    <ts>2017-07-01T05:49:08.123136</ts>
    <user>U5FC7BE0G</user>
    <text>What't the recommended way to write a cookie or write to localstorage with Elm? I need to somehow persist the access token after the user logged in. Do I have to create a port for this or is there a better/simpler way?</text>
  </message>
  <message>
    <ts>2017-07-01T05:49:13.123408</ts>
    <user>U1CE9DL9H</user>
    <text>`, Json.Decode.fail (Debug.log "Wrong event" "")` should work I think</text>
  </message>
  <message>
    <ts>2017-07-01T05:49:37.124766</ts>
    <user>U1CE9DL9H</user>
    <text>&lt;@U5FC7BE0G&gt; ports are the way to go</text>
  </message>
  <message>
    <ts>2017-07-01T05:49:53.125639</ts>
    <user>U5FC7BE0G</user>
    <text>k, thanks!</text>
  </message>
  <message>
    <ts>2017-07-01T05:50:18.127268</ts>
    <user>U2D7NUGS1</user>
    <text>&lt;@U1CE9DL9H&gt; yes it does. Thank you.</text>
  </message>
  <message>
    <ts>2017-07-01T05:50:40.128827</ts>
    <user>U2D7NUGS1</user>
    <text>Any way to access the reason for failure?</text>
  </message>
  <message>
    <ts>2017-07-01T05:50:54.129845</ts>
    <user>U2D7NUGS1</user>
    <text>It would be nice to print it as well.</text>
  </message>
  <message>
    <ts>2017-07-01T07:04:52.391332</ts>
    <user>U0CLDU8UB</user>
    <text>The reason for failure is the string you give to Decode.fail</text>
  </message>
  <message>
    <ts>2017-07-01T07:06:10.395945</ts>
    <user>U0CLDU8UB</user>
    <text>When you as a developer are telling the Decoder that this case should fail, you should know why. :)</text>
  </message>
  <message>
    <ts>2017-07-01T08:48:33.783140</ts>
    <user>U3KSN5MAL</user>
    <text>Silly question but how do you define an incoming port with no arguments?</text>
  </message>
  <message>
    <ts>2017-07-01T08:48:51.784245</ts>
    <user>U3KSN5MAL</user>
    <text>`port flyoutResetLights : (Bool -&amp;gt; msg) -&amp;gt; Sub msg`</text>
  </message>
  <message>
    <ts>2017-07-01T08:49:08.785417</ts>
    <user>U3KSN5MAL</user>
    <text>one would assume you would just do this 
`port flyoutResetLights :  Sub msg`</text>
  </message>
  <message>
    <ts>2017-07-01T08:49:13.785755</ts>
    <user>U3KSN5MAL</user>
    <text>but of course that doesn't work</text>
  </message>
  <message>
    <ts>2017-07-01T08:51:06.794282</ts>
    <user>U3KSN5MAL</user>
    <text>I found this for commands not subs, but doesn't seem to work for subs? 
`port name : () -&amp;gt; Cmd msg`</text>
  </message>
  <message>
    <ts>2017-07-01T08:54:34.808485</ts>
    <user>U62PAUTV3</user>
    <text>Hi, I am kind of new. Can anyone help me with this question I have?
I am trying out a custom defined infix operator but it does not seem to be working :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-01T08:54:42.809029</ts>
    <user>U4872964V</user>
    <text>&lt;@U3KSN5MAL&gt;, you'd do `(() -&amp;gt; msg) -&amp;gt; Sub msg` i suppose</text>
  </message>
  <message>
    <ts>2017-07-01T08:55:33.812811</ts>
    <user>U5WS7CJLV</user>
    <text>syntax help please.  I have a function.</text>
  </message>
  <message>
    <ts>2017-07-01T08:55:38.813104</ts>
    <user>U5WS7CJLV</user>
    <text>asJsonValue model =</text>
  </message>
  <message>
    <ts>2017-07-01T08:55:42.813518</ts>
    <user>U5WS7CJLV</user>
    <text>Json.Encode.object</text>
  </message>
  <message>
    <ts>2017-07-01T08:55:48.813954</ts>
    <user>U5WS7CJLV</user>
    <text>[ ("theJunk" (Json.Encode.string "junk")) ]</text>
  </message>
  <message>
    <ts>2017-07-01T08:55:58.814650</ts>
    <user>U5WS7CJLV</user>
    <text>compiler tells me there is no Json.Encode.string</text>
  </message>
  <message>
    <ts>2017-07-01T08:55:58.814654</ts>
    <user>U4872964V</user>
    <text>&lt;@U62PAUTV3&gt; you can only use certain symbol characters as operators</text>
  </message>
  <message>
    <ts>2017-07-01T08:56:27.816886</ts>
    <user>U3KSN5MAL</user>
    <text>&lt;@U4872964V&gt;  bizarre but seems to work!</text>
  </message>
  <message>
    <ts>2017-07-01T08:56:28.817019</ts>
    <user>U3KSN5MAL</user>
    <text>thanks</text>
  </message>
  <message>
    <ts>2017-07-01T08:56:34.817429</ts>
    <user>U62PAUTV3</user>
    <text>I see, thank you. Didn't seem to find a lot of documentation on that one.</text>
  </message>
  <message>
    <ts>2017-07-01T08:56:51.818593</ts>
    <user>U3KSN5MAL</user>
    <text>wait no</text>
  </message>
  <message>
    <ts>2017-07-01T08:56:56.819002</ts>
    <user>U3KSN5MAL</user>
    <text>``` Function `flyoutResetLights` is expecting the argument to be:

    () -&amp;gt; Msg

But it is:

    Msg```</text>
  </message>
  <message>
    <ts>2017-07-01T08:57:01.819358</ts>
    <user>U3KSN5MAL</user>
    <text>:neutral_face:</text>
  </message>
  <message>
    <ts>2017-07-01T08:57:09.819839</ts>
    <user>U4872964V</user>
    <text>&lt;@U5WS7CJLV&gt; do you have `import Json.Encode` in your file?</text>
  </message>
  <message>
    <ts>2017-07-01T08:57:15.820323</ts>
    <user>U5WS7CJLV</user>
    <text>yessir</text>
  </message>
  <message>
    <ts>2017-07-01T08:57:25.820958</ts>
    <user>U5WS7CJLV</user>
    <text>I can encode a string no problem</text>
  </message>
  <message>
    <ts>2017-07-01T08:57:32.821464</ts>
    <user>U5WS7CJLV</user>
    <text>if I try to wrap in an object things fall apart</text>
  </message>
  <message>
    <ts>2017-07-01T08:57:45.822329</ts>
    <user>U4872964V</user>
    <text>&lt;@U3KSN5MAL&gt; yes, you need to pass a function, you can do `(\_ -&amp;gt; YourMessage)` or `always YourMessage`</text>
  </message>
  <message>
    <ts>2017-07-01T08:58:15.824356</ts>
    <user>U3KSN5MAL</user>
    <text>so i have to pass an argument no matter what?</text>
  </message>
  <message>
    <ts>2017-07-01T08:58:15.824371</ts>
    <user>U4872964V</user>
    <text>&lt;@U5WS7CJLV&gt; what is the exact error?</text>
  </message>
  <message>
    <ts>2017-07-01T08:58:17.824535</ts>
    <user>U3KSN5MAL</user>
    <text>how annoying</text>
  </message>
  <message>
    <ts>2017-07-01T08:58:25.825097</ts>
    <user>U62PAUTV3</user>
    <text>&lt;@U4872964V&gt; any documentation on what symbols you can use for infix operations?</text>
  </message>
  <message>
    <ts>2017-07-01T08:59:46.830449</ts>
    <user>U4872964V</user>
    <text>&lt;@U62PAUTV3&gt; i think the sentiment is that you should not define your own operators, so it's well hidden :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-01T09:00:18.833820</ts>
    <user>U4872964V</user>
    <text>&lt;@U3KSN5MAL&gt; yes, that's the way functions work</text>
  </message>
  <message>
    <ts>2017-07-01T09:01:53.841479</ts>
    <user>U4872964V</user>
    <text>&lt;@U5WS7CJLV&gt; oh, you are missing a `,`</text>
  </message>
  <message>
    <ts>2017-07-01T09:02:00.841937</ts>
    <user>U0CLDU8UB</user>
    <text>&lt;@U3KSN5MAL&gt; Otherwise you're defining _a constant_, not a function.</text>
  </message>
  <message>
    <ts>2017-07-01T09:02:23.843589</ts>
    <user>U5WS7CJLV</user>
    <text>huzzah!  Darn those commas!</text>
  </message>
  <message>
    <ts>2017-07-01T09:02:29.843996</ts>
    <user>U5WS7CJLV</user>
    <text>thanks!</text>
  </message>
  <message>
    <ts>2017-07-01T09:02:35.844423</ts>
    <user>U4872964V</user>
    <text>if you hade read the whole message it actually suggested that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-01T09:03:17.847702</ts>
    <user>U5WS7CJLV</user>
    <text>yeah, only sometimes I can't think right :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-01T09:04:11.851470</ts>
    <user>U3KSN5MAL</user>
    <text>Hmm, in this case i use this sort of thing to take flags from photoshop to turn on and off things, i have no need for an argument for that</text>
  </message>
  <message>
    <ts>2017-07-01T09:04:21.852119</ts>
    <user>U3KSN5MAL</user>
    <text>So i've just been passing in a dummy value and not using it</text>
  </message>
  <message>
    <ts>2017-07-01T09:04:43.853599</ts>
    <user>U3KSN5MAL</user>
    <text>seems silly to have to do that</text>
  </message>
  <message>
    <ts>2017-07-01T09:05:24.856705</ts>
    <user>U4872964V</user>
    <text>This is because you can't call a function in Elm without a value</text>
  </message>
  <message>
    <ts>2017-07-01T09:05:46.858311</ts>
    <user>U4872964V</user>
    <text>However silly it seems, that's the way it works</text>
  </message>
  <message>
    <ts>2017-07-01T09:06:45.862289</ts>
    <user>U5WS7CJLV</user>
    <text>I think it was the red carets that threw me off</text>
  </message>
  <message>
    <ts>2017-07-01T09:06:49.862515</ts>
    <user>U3KSN5MAL</user>
    <text>i see thanks</text>
  </message>
  <message>
    <ts>2017-07-01T09:06:57.863051</ts>
    <user>U5WS7CJLV</user>
    <text>my brain shortcuts to saying "the problem is in the red carets"</text>
  </message>
  <message>
    <ts>2017-07-01T09:07:42.866108</ts>
    <user>U4872964V</user>
    <text>yes, sometimes it's hard for the compiler to figure out exactly what you meant</text>
  </message>
  <message>
    <ts>2017-07-01T09:08:42.870183</ts>
    <user>U4872964V</user>
    <text>However, Elm beats all other compilers I've used in the error message department</text>
  </message>
  <message>
    <ts>2017-07-01T09:33:30.975830</ts>
    <user>U5FC7BE0G</user>
    <text>is there a shortcut/something less verbose for doing this:

```
case model.something of
                Just x -&amp;gt;
                    someCmd

                Nothing -&amp;gt;
                    Cmd.none
```</text>
  </message>
  <message>
    <ts>2017-07-01T09:37:56.993990</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5FC7BE0G&gt; There is `model.something |&amp;gt; Maybe.map (\_ -&amp;gt; someCmd) |&amp;gt; Maybe.withDefault Cmd.none`. If you really want to shrink things down in a particular place, though, make a function.</text>
  </message>
  <message>
    <ts>2017-07-01T09:39:54.002001</ts>
    <user>U5FC7BE0G</user>
    <text>thanks &lt;@U48AEBJQ3&gt; ! I thought maybe there's already something built in for this, but i'll create my own shortcut then</text>
  </message>
  <message>
    <ts>2017-07-01T09:40:18.003736</ts>
    <user>U3YDBDP4Z</user>
    <text>Wanting to unit test my `update` function, but I don't know where the `ChangeLocation` and `OnLocationChange` messages come from?</text>
  </message>
  <message>
    <ts>2017-07-01T09:40:45.005856</ts>
    <user>U3YDBDP4Z</user>
    <text>Need to import them in my tests</text>
  </message>
  <message>
    <ts>2017-07-01T09:42:36.013896</ts>
    <user>U48AEBJQ3</user>
    <text>I'm not familiar with those constructors, are they from a package you are using, or something you defined yourself?</text>
  </message>
  <message>
    <ts>2017-07-01T09:44:08.020611</ts>
    <user>U3YDBDP4Z</user>
    <text>I'm not sure where they come from.</text>
  </message>
  <message>
    <ts>2017-07-01T09:44:22.021694</ts>
    <user>U3YDBDP4Z</user>
    <text>I would have assumed the Navigation package but it doesn't mention them</text>
  </message>
  <message>
    <ts>2017-07-01T09:45:21.026250</ts>
    <user>U3YDBDP4Z</user>
    <text>And the only other package I have is url-parser, which doesn't have them either</text>
  </message>
  <message>
    <ts>2017-07-01T09:46:08.029730</ts>
    <user>U3YDBDP4Z</user>
    <text>Which is confusing, since I use them in Update.elm but they are not imported from anything</text>
  </message>
  <message>
    <ts>2017-07-01T09:48:41.040932</ts>
    <user>U48AEBJQ3</user>
    <text>If you are using them somewhere, they are either defined there or they are imported. This is a reason to not import `exposing (..)`, since it makes it more difficult to know where things come from. The navigation package doesn't define any constructors by those names.</text>
  </message>
  <message>
    <ts>2017-07-01T09:51:42.054639</ts>
    <user>U3YDBDP4Z</user>
    <text>Haha, you are absolutely correct</text>
  </message>
  <message>
    <ts>2017-07-01T09:51:51.055327</ts>
    <user>U3YDBDP4Z</user>
    <text>I was having a brain fart</text>
  </message>
  <message>
    <ts>2017-07-01T10:17:15.176420</ts>
    <user>U4872964V</user>
    <text>&lt;@U5FC7BE0G&gt; `if model.something == Nothing then Cmd.none else someCmd` perhaps. If you're not interested in the actual contents of the `Just`</text>
  </message>
  <message>
    <ts>2017-07-01T10:20:15.190650</ts>
    <user>U5FC7BE0G</user>
    <text>&lt;@U4872964V&gt; my example was actually a bit wrong. What I actually needed was this:

```
case model.something of
                Just x -&amp;gt;
                    doSomething model.something

                Nothing -&amp;gt;
                    Cmd.none
```

I ended up creating this helper:

```
maybeRunCmd : (a -&amp;gt; Cmd msg) -&amp;gt; Maybe a -&amp;gt; Cmd msg
maybeRunCmd f maybe =
    maybe
        |&amp;gt; Maybe.map f
        |&amp;gt; Maybe.withDefault Cmd.none
```
... which works like a charm :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-01T10:21:08.195226</ts>
    <user>U4872964V</user>
    <text>great</text>
  </message>
  <message>
    <ts>2017-07-01T10:38:39.277795</ts>
    <user>U0J8D9M2P</user>
    <text>```
But the returned value (shown above) is a:

    { altitude : number, azimuth : number1 }
```

Why does it says `number1`?</text>
  </message>
  <message>
    <ts>2017-07-01T10:40:58.289529</ts>
    <user>U41NK9BM4</user>
    <text>IIRC it is a way to say: could be a different type than the other `number`</text>
  </message>
  <message>
    <ts>2017-07-01T10:42:43.298357</ts>
    <user>U41NK9BM4</user>
    <text>(Int vs. float  - for example)</text>
  </message>
  <message>
    <ts>2017-07-01T11:01:29.391976</ts>
    <user>U635238TG</user>
    <text>i'm doing the intro guide and it had me clone over the code examples. however, i want to write these programs myself while I go along. Can I just open up an example.elm file in my text editor, write the code with the tutorial and then...what. Run elm-make to make an html file? and then I can just throw that in the browser to see if it worked?</text>
  </message>
  <message>
    <ts>2017-07-01T11:03:24.401924</ts>
    <user>U0J8D9M2P</user>
    <text>you can do it with elm-reactor as well</text>
  </message>
  <message>
    <ts>2017-07-01T11:03:38.403016</ts>
    <user>U0J8D9M2P</user>
    <text>which will compile elm files and serve them for you</text>
  </message>
  <message>
    <ts>2017-07-01T11:08:46.429239</ts>
    <user>U635238TG</user>
    <text>i see. i guess the examples in the tutorial also happen to be in the directory i installed so I can just open up those exact files with my text editor</text>
  </message>
  <message>
    <ts>2017-07-01T11:13:55.456993</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U635238TG&gt; i typically use elm reactor for every meaningful change to quickly test functionality in localhost. elm-make I save for when I'm pushing to remote repo. But I know a lot of folks use automated build tools that run elm-make on every save sometimes.</text>
  </message>
  <message>
    <ts>2017-07-01T11:16:09.469017</ts>
    <user>U0J8D9M2P</user>
    <text>You can use `elm-reactor` when you working only with Elm files. If you working with custom setup, e.g. you integrate Elm into html page, then e.g. `webpack` can help with automated compilation.</text>
  </message>
  <message>
    <ts>2017-07-01T11:17:06.473574</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U0J8D9M2P&gt; elm-reactor wont work with js interop right?</text>
  </message>
  <message>
    <ts>2017-07-01T11:19:30.485687</ts>
    <user>U60ERSLUQ</user>
    <text>I cannot install elm on redhat:</text>
  </message>
  <message>
    <ts>2017-07-01T11:19:55.487817</ts>
    <user>U60ERSLUQ</user>
    <text>root@m4sxvmvsm6h4 APP ~$ uname -a
Linux m4sxvmvsm6h4 2.6.32-642.4.2.el6.x86_64 #1 SMP Mon Aug 15 02:06:41 EDT 2016 x86_64 x86_64 x86_64 GNU/Linux
root@m4sxvmvsm6h4 APP ~$ node --version
v8.1.3
root@m4sxvmvsm6h4 APP ~$ npm --version
5.0.4
root@m4sxvmvsm6h4 APP ~$ npm install -g elm
npm WARN deprecated node-uuid@1.4.8: Use uuid module instead
/usr/bin/elm -&amp;gt; /usr/lib/node_modules/elm/binwrappers/elm
/usr/bin/elm-make -&amp;gt; /usr/lib/node_modules/elm/binwrappers/elm-make
/usr/bin/elm-reactor -&amp;gt; /usr/lib/node_modules/elm/binwrappers/elm-reactor
/usr/bin/elm-repl -&amp;gt; /usr/lib/node_modules/elm/binwrappers/elm-repl
/usr/bin/elm-package -&amp;gt; /usr/lib/node_modules/elm/binwrappers/elm-package

&amp;gt; elm@0.18.0 install /usr/lib/node_modules/elm
&amp;gt; node install.js

Error extracting linux-x64.tar.gz - Error: EACCES: permission denied, mkdir '/usr/lib/node_modules/elm/Elm-Platform'
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! elm@0.18.0 install: `node install.js`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the elm@0.18.0 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.</text>
  </message>
  <message>
    <ts>2017-07-01T11:20:36.491450</ts>
    <user>U60ERSLUQ</user>
    <text>Any idea ? If I create the /usr../elm directory manually it will be deleted during installation.</text>
  </message>
  <message>
    <ts>2017-07-01T11:21:11.494466</ts>
    <user>U0J8D9M2P</user>
    <text>&lt;@U2SR9DL7Q&gt; It can serve files but it will not automatically compile elm files into specific output file for you (which you can specify with elm-make command). So with `webpack` can handle this work.</text>
  </message>
  <message>
    <ts>2017-07-01T11:22:04.498934</ts>
    <user>U0J8D9M2P</user>
    <text>&lt;@U60ERSLUQ&gt; it says `permission denied` are you sure you have correct rights to write into that directory?</text>
  </message>
  <message>
    <ts>2017-07-01T11:23:54.507716</ts>
    <user>U60ERSLUQ</user>
    <text>I have run it as root. Permissions of /..../node_modules are 755, owner root:root.</text>
  </message>
  <message>
    <ts>2017-07-01T11:24:43.511827</ts>
    <user>U60ERSLUQ</user>
    <text>I could run 'node install bower'</text>
  </message>
  <message>
    <ts>2017-07-01T11:27:49.527304</ts>
    <user>U0J8D9M2P</user>
    <text>It's not recommended but have you tried to run that with `sudo` ?</text>
  </message>
  <message>
    <ts>2017-07-01T11:31:11.544513</ts>
    <user>U60ERSLUQ</user>
    <text>&lt;@U0J8D9M2P&gt; : Same behaviour with sudo</text>
  </message>
  <message>
    <ts>2017-07-01T11:36:10.569276</ts>
    <user>U0J8D9M2P</user>
    <text>&lt;https://www.npmjs.com/package/elm&gt; It has Troubleshooting section</text>
  </message>
  <message>
    <ts>2017-07-01T11:50:28.639629</ts>
    <user>U0CLDU8UB</user>
    <text>How about not running as root?</text>
  </message>
  <message>
    <ts>2017-07-01T11:51:36.645351</ts>
    <user>U60ERSLUQ</user>
    <text>&lt;@U0J8D9M2P&gt;: I check the troubleshooting section: npm has the latest version, npm cache is ok.</text>
  </message>
  <message>
    <ts>2017-07-01T11:51:48.646261</ts>
    <user>U0CLDU8UB</user>
    <text>Anyway, here's a troubleshooting page for npm permission issues: &lt;https://docs.npmjs.com/getting-started/fixing-npm-permissions&gt;</text>
  </message>
  <message>
    <ts>2017-07-01T12:16:14.776433</ts>
    <user>U60ERSLUQ</user>
    <text>&lt;@U0CLDU8UB&gt; &lt;@U0J8D9M2P&gt; setting npm config prefix (It was /usr) to a local non-root directory as described in &lt;https://docs.npmjs.com/getting-started/fixing-npm-permissions&gt; finally worked. Many thanks for your help.</text>
  </message>
  <message>
    <ts>2017-07-01T12:31:55.856408</ts>
    <user>U604S603Y</user>
    <text>is there a way to decode a "naked" JSON array into an Elm List? I have a type alias "Foo" with a field "x", and I'm trying to decode an array like this:
[{ x: 5}, {x: 3}]
I got it working for one "Foo" {x:5}, but not for many.</text>
  </message>
  <message>
    <ts>2017-07-01T12:32:39.859933</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U604S603Y&gt;: Json.Decode.list does that</text>
  </message>
  <message>
    <ts>2017-07-01T12:33:19.863242</ts>
    <user>U1AN4JRFV</user>
    <text>`Json.Decode.list decodeItem`</text>
  </message>
  <message>
    <ts>2017-07-01T12:34:11.867568</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Json-Decode#list&gt;</text>
  </message>
  <message>
    <ts>2017-07-01T12:34:53.871095</ts>
    <user>U604S603Y</user>
    <text>ah okay, I tried to call succeed (Json.Decode.list decodeItem)</text>
  </message>
  <message>
    <ts>2017-07-01T12:34:59.871504</ts>
    <user>U604S603Y</user>
    <text>thank you &lt;@U1AN4JRFV&gt;</text>
  </message>
  <message>
    <ts>2017-07-01T12:40:06.897195</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U2SR9DL7Q&gt; &lt;@U0J8D9M2P&gt; &lt;https://blog.ilias.xyz/elm-reactor-and-custom-html-9e7143553807&gt; fyi :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-01T12:46:41.930724</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U3SJEDR96&gt; knowledge is power :+1:</text>
  </message>
  <message>
    <ts>2017-07-01T13:33:58.171606</ts>
    <user>U601ELFEG</user>
    <text>Is equality for records value equality or entity identity?</text>
  </message>
  <message>
    <ts>2017-07-01T13:34:49.175912</ts>
    <user>U601ELFEG</user>
    <text>`{ item: "wheel", size: 3.5 } == { item: "wheel", size: 3.5 }`</text>
  </message>
  <message>
    <ts>2017-07-01T13:37:50.191411</ts>
    <user>U601ELFEG</user>
    <text>tested it (with the correct syntax) - value equality!</text>
  </message>
  <message>
    <ts>2017-07-01T15:02:41.617139</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U601ELFEG&gt; everything is or should be, with a few exceptions where it's not really defined</text>
  </message>
  <message>
    <ts>2017-07-01T16:21:23.975193</ts>
    <user>U62KVQVD1</user>
    <text>Can somebody share link to some example how to properly do SPA routing with elm-bootstrap, please?</text>
  </message>
  <message>
    <ts>2017-07-01T18:44:49.547508</ts>
    <user>U17PWHU4D</user>
    <text>hi all, quick question, I'm sure its been asked before, but struggling to find the right answer.  

what's the best pattern for requiring ternary values in a view?

ie.

```
    rect
            [ x "0"
            , y "0"
            , fillOpacity (model.isActive ? "1" : "0.5")   &amp;lt;--- here
            ]
            []
```</text>
  </message>
  <message>
    <ts>2017-07-01T18:45:25.549910</ts>
    <user>U17PWHU4D</user>
    <text>if i try to create the value inside the let, the compiler says i'm trying to assign a value to `if`.</text>
  </message>
  <message>
    <ts>2017-07-01T18:45:33.550360</ts>
    <user>U17PWHU4D</user>
    <text>same with case.</text>
  </message>
  <message>
    <ts>2017-07-01T20:13:06.854183</ts>
    <user>U601ELFEG</user>
    <text>I seem to have made the Elm go into an infinite loop by introducing a helper function</text>
  </message>
  <message>
    <ts>2017-07-01T20:13:24.855198</ts>
    <user>U601ELFEG</user>
    <text>anyone will to lend a second pair of eyes?</text>
  </message>
  <message>
    <ts>2017-07-01T20:13:40.855999</ts>
    <user>U601ELFEG</user>
    <text>(It's about 30 lines of example - post here? or a github gist?)</text>
  </message>
  <message>
    <ts>2017-07-01T20:14:06.857244</ts>
    <user>U5AR0LDQA</user>
    <text>&lt;@U17PWHU4D&gt; `fillOpacity if model.isActive then "1" else "0.5"`</text>
  </message>
  <message>
    <ts>2017-07-01T20:15:49.862719</ts>
    <user>U601ELFEG</user>
    <text>(I know, it says Haskell, but there is no Elm format for Slack snippets...)</text>
  </message>
  <message>
    <ts>2017-07-01T20:17:43.868249</ts>
    <user>U601ELFEG</user>
    <text>So if my Html sends back a Msg of  NoHover --- it works... If it sends back NoHoverCrashes --- it hangs</text>
  </message>
  <message>
    <ts>2017-07-01T20:17:52.868728</ts>
    <user>U601ELFEG</user>
    <text>and yet they look the same to me</text>
  </message>
  <message>
    <ts>2017-07-01T20:18:46.871686</ts>
    <user>U0EUHKVGB</user>
    <text>You are doing nameshadowing.</text>
  </message>
  <message>
    <ts>2017-07-01T20:18:55.872167</ts>
    <user>U601ELFEG</user>
    <text>er?</text>
  </message>
  <message>
    <ts>2017-07-01T20:18:56.872227</ts>
    <user>U0EUHKVGB</user>
    <text>Don't call that update inside update update.</text>
  </message>
  <message>
    <ts>2017-07-01T20:19:10.873036</ts>
    <user>U0EUHKVGB</user>
    <text>```
update : Msg -&amp;gt; Model -&amp;gt; Model
update msg model =
  let
    update fp fs =
      { model | patterns = fp model.patterns, samples = fs model.samples }
  in
```</text>
  </message>
  <message>
    <ts>2017-07-01T20:19:12.873133</ts>
    <user>U601ELFEG</user>
    <text>OH -</text>
  </message>
  <message>
    <ts>2017-07-01T20:19:16.873367</ts>
    <user>U601ELFEG</user>
    <text>Why does it compile then?</text>
  </message>
  <message>
    <ts>2017-07-01T20:19:29.874061</ts>
    <user>U5AR0LDQA</user>
    <text>Change the name</text>
  </message>
  <message>
    <ts>2017-07-01T20:19:31.874160</ts>
    <user>U601ELFEG</user>
    <text>is this a known bug in Elm?</text>
  </message>
  <message>
    <ts>2017-07-01T20:19:40.874568</ts>
    <user>U0EUHKVGB</user>
    <text>Because it correctly figures out what update you are using, but generates the wrong code.</text>
  </message>
  <message>
    <ts>2017-07-01T20:19:41.874630</ts>
    <user>U0EUHKVGB</user>
    <text>Ye.s</text>
  </message>
  <message>
    <ts>2017-07-01T20:19:55.875317</ts>
    <user>U0EUHKVGB</user>
    <text>But please don't do that anyway: it makes your code very hard to read</text>
  </message>
  <message>
    <ts>2017-07-01T20:20:02.875682</ts>
    <user>U5AR0LDQA</user>
    <text>:point_up:</text>
  </message>
  <message>
    <ts>2017-07-01T20:20:11.876203</ts>
    <user>U601ELFEG</user>
    <text>No, sure, I wouldn't do that by default - and didn't notice</text>
  </message>
  <message>
    <ts>2017-07-01T20:21:07.879372</ts>
    <user>U601ELFEG</user>
    <text>and will change it - just I was factoring out that operation (it is used in several other Msg values that I didn't list - ) and didn't realize the name conflict - I was stuck thinking it was somehow my polymorphic use of `clearHoveredSlot`</text>
  </message>
  <message>
    <ts>2017-07-01T20:22:28.883547</ts>
    <user>U601ELFEG</user>
    <text>yay - no more hangs - thanks all!</text>
  </message>
  <message>
    <ts>2017-07-01T21:07:04.027847</ts>
    <user>U17PWHU4D</user>
    <text>hossman333: thanks &lt;@U5AR0LDQA&gt; , is there a way to set this inside a let instead?  I realize this is still the js mindset, but:

```
let 
  if model.isActive &amp;amp;&amp;amp; somethingElse then
    activeVal = "1"
  else 
  activeVal = "0.5"
```

struggling to see how you would dynamically set a value inside let.</text>
  </message>
  <message>
    <ts>2017-07-01T21:12:49.046506</ts>
    <user>U5AR0LDQA</user>
    <text>Yeah so you would do something like this.

```
let
   isActive = if model.isActive &amp;amp;&amp;amp; somethingElse then
    "1"
   else 
    "0.5"
in
```</text>
  </message>
  <message>
    <ts>2017-07-01T21:13:03.047281</ts>
    <user>U5AR0LDQA</user>
    <text>`isActive` becomes the variable</text>
  </message>
  <message>
    <ts>2017-07-01T21:13:13.047774</ts>
    <user>U5AR0LDQA</user>
    <text>So then you can use it in `in` &lt;@U17PWHU4D&gt;</text>
  </message>
  <message>
    <ts>2017-07-01T21:21:31.074076</ts>
    <user>U17PWHU4D</user>
    <text>ooh!  nice.  thanks &lt;@U5AR0LDQA&gt; trying that out now!</text>
  </message>
  <message>
    <ts>2017-07-01T21:43:33.139799</ts>
    <user>U5AR0LDQA</user>
    <text>You're welcome! :smiley: &lt;@U17PWHU4D&gt; </text>
  </message>
  <message>
    <ts>2017-07-01T23:12:17.413236</ts>
    <user>U62P4HLCA</user>
    <text>I'm banging my head trying to decode a nested json {"error":[],"result":{"DASH":{"aclass":"currency","altname":"DASH","decimals":10,"display_decimals":5}</text>
  </message>
  <message>
    <ts>2017-07-01T23:57:00.550422</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U62P4HLCA&gt; You probably want to use something like `&lt;http://Json.Decode.at|Json.Decode.at&gt;` (&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Json-Decode#at&gt;)</text>
  </message>
  <message>
    <ts>2017-07-01T23:57:44.552777</ts>
    <user>U4F64AKQV</user>
    <text>&lt;https://noredink.github.io/json-to-elm/&gt; might also be helpful</text>
  </message>
  <message>
    <ts>2017-07-01T23:57:52.553230</ts>
    <user>U62P4HLCA</user>
    <text>ah thanks... I'll take a look</text>
  </message>
  <message>
    <ts>2017-07-02T00:13:37.604053</ts>
    <user>U62P4HLCA</user>
    <text>perfect thanks</text>
  </message>
  <message>
    <ts>2017-07-02T00:40:21.688738</ts>
    <user>U5GJ5FEAU</user>
    <text>after number of encounters, i think i have figured out json encoding and decoding now :smile:</text>
  </message>
  <message>
    <ts>2017-07-02T00:41:59.693797</ts>
    <user>U5D4VHEN7</user>
    <text>I can't for the life of me get `Debug.log` to work. It doesn't do absolutely anything. I'm calling it like so (to just make sure it is being called):
```
main =
    let _ =
        Debug.log "Hello"
    in
    program
        { init = init
        , update = update
        , subscriptions = always Sub.none
        , view = view
        }
```
I am using Webpack with `elm-hot-loader` and `elm-webpack-loader` and the options:
```
{
  verbose: true,
  debug: true,
  warn: true,
}
```
Is there some voodoo I need to do to get this to work? Everything else in my application runs absolutely fine.</text>
  </message>
  <message>
    <ts>2017-07-02T00:42:40.695819</ts>
    <user>U5D4VHEN7</user>
    <text>also:
```
    "elm-hot-loader": "^0.5.4",
    "elm-webpack-loader": "^4.3.0",
```</text>
  </message>
  <message>
    <ts>2017-07-02T00:50:25.718449</ts>
    <user>U5D4VHEN7</user>
    <text>Oh goodness, not a Webpack issue at all. Solution was the first response here: 
&lt;https://www.reddit.com/r/elm/comments/4pzrwd/using_debuglog/&gt;</text>
  </message>
  <message>
    <ts>2017-07-02T00:51:48.722765</ts>
    <user>U5D4VHEN7</user>
    <text>Instead of:
```
Debug.log "Whatever, this is just like console.log right?"
```
Do:
```
Debug.log "Some Label:" "Of course not! This is Elm!"
```
Basically, needs two arguments, label and value</text>
  </message>
  <message>
    <ts>2017-07-02T00:53:16.727254</ts>
    <user>U5D4VHEN7</user>
    <text>Confused as to why that doesn't throw a compiler error...</text>
  </message>
  <message>
    <ts>2017-07-02T00:55:26.733358</ts>
    <user>U48AEBJQ3</user>
    <text>Elm has partial application and first-class functions. `Debug.log "Foo"` produces a function of type (a -&amp;gt; a) which you assign to `_` so it gets promptly ignored.</text>
  </message>
  <message>
    <ts>2017-07-02T00:55:52.734792</ts>
    <user>U5D4VHEN7</user>
    <text>Ah, that definitely makes sense. Thanks for the insight &lt;@U48AEBJQ3&gt; :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T00:57:05.738422</ts>
    <user>U48AEBJQ3</user>
    <text>It could be something that produces a warning, though. You might add an issue on &lt;https://github.com/elm-lang/error-message-catalog&gt;</text>
  </message>
  <message>
    <ts>2017-07-02T00:58:38.742661</ts>
    <user>U5D4VHEN7</user>
    <text>Sweet :slightly_smiling_face: Will do. Given that I spent about an hour smashing my head against that, seems like it could be valuable warnings for beginners</text>
  </message>
  <message>
    <ts>2017-07-02T03:17:15.146625</ts>
    <user>U3LT1UTPF</user>
    <text>&lt;@U5XHTBFS6&gt; I'm writing an app with leaflet as the main character. I tried using ports, but after watching richard feldman's talk, I opted for writing a custom element. Not sure if that's convinient for all cases, though.</text>
  </message>
  <message>
    <ts>2017-07-02T03:19:29.153099</ts>
    <user>U3LT1UTPF</user>
    <text>&lt;https://m.youtube.com/watch?v=ar3TakwE8o0&gt;</text>
  </message>
  <message>
    <ts>2017-07-02T03:20:34.156552</ts>
    <user>U3LT1UTPF</user>
    <text>I pass the layers I want as a property</text>
  </message>
  <message>
    <ts>2017-07-02T03:21:51.160892</ts>
    <user>U3LT1UTPF</user>
    <text>I plan to extract an example from my code some time in the following weeks.</text>
  </message>
  <message>
    <ts>2017-07-02T03:21:57.161210</ts>
    <user>U3LT1UTPF</user>
    <text>And publish it</text>
  </message>
  <message>
    <ts>2017-07-02T04:27:57.372597</ts>
    <user>U0J8D9M2P</user>
    <text>What is the purpose of `radians` function. It returns the given value.</text>
  </message>
  <message>
    <ts>2017-07-02T04:44:43.424440</ts>
    <user>U3SJEDR96</user>
    <text>Using the `turns`/`radians`/`degrees` functions consistently means that "standard Elm angles" could theoretically be changed without further impact. In practice, there isn't that much values except being explicit about things. `radians 12` says more than `12`</text>
  </message>
  <message>
    <ts>2017-07-02T05:12:49.516757</ts>
    <user>U0J8D9M2P</user>
    <text>Is there any packages for Julian Day Numbers?</text>
  </message>
  <message>
    <ts>2017-07-02T05:13:42.519573</ts>
    <user>U0J8D9M2P</user>
    <text>&lt;http://package.elm-lang.org/packages/justinmimbs/elm-date-extra/1.0.1&gt; this package had it, but now API for Julian days is removed.</text>
  </message>
  <message>
    <ts>2017-07-02T05:13:46.519761</ts>
    <user>U3SJEDR96</user>
    <text>I think elm-date-extra has that</text>
  </message>
  <message>
    <ts>2017-07-02T05:14:35.522187</ts>
    <user>U3SJEDR96</user>
    <text>```
toJulianDate : Date -&amp;gt; Float
toJulianDate date =
  toTime date / toFloat msPerDay + 2440587.5
```</text>
  </message>
  <message>
    <ts>2017-07-02T05:15:42.525620</ts>
    <user>U3SJEDR96</user>
    <text>(`msPerDay` is part of `Date.Facts` in that package)</text>
  </message>
  <message>
    <ts>2017-07-02T05:21:15.543145</ts>
    <user>U3DQT3ZGC</user>
    <text>Hi! How come ```Html.div [] [ text "foo \n bar" ]``` doesn't put bar on a new line but does remove the `\n`</text>
  </message>
  <message>
    <ts>2017-07-02T05:21:37.544239</ts>
    <user>U3DQT3ZGC</user>
    <text>I'd like it to but bar on a new line</text>
  </message>
  <message>
    <ts>2017-07-02T05:22:10.546022</ts>
    <user>U3SJEDR96</user>
    <text>That's how it works in regular HTML too. you'll want `Html.div [] [ text "foo", &lt;http://Html.br|Html.br&gt; [] [], text "bar" ]`</text>
  </message>
  <message>
    <ts>2017-07-02T05:23:16.549738</ts>
    <user>U3DQT3ZGC</user>
    <text>Ok right. In my case I get a string of css from elm-css that I'd like to render on the page, but with the linebreaks</text>
  </message>
  <message>
    <ts>2017-07-02T05:23:45.551147</ts>
    <user>U3SJEDR96</user>
    <text>Oh. You might want to use `Html.pre [] [ text yourStuff ]` then, which will render it into a "pre"formatted block</text>
  </message>
  <message>
    <ts>2017-07-02T05:24:04.552195</ts>
    <user>U3DQT3ZGC</user>
    <text>Ah! Nice :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T05:24:19.553127</ts>
    <user>U3DQT3ZGC</user>
    <text>Thanks!</text>
  </message>
  <message>
    <ts>2017-07-02T06:20:09.731031</ts>
    <user>U5Z3Y472L</user>
    <text>Hello</text>
  </message>
  <message>
    <ts>2017-07-02T06:20:52.733414</ts>
    <user>U5Z3Y472L</user>
    <text>I'm trying to implement a login form. My view code looks like this :</text>
  </message>
  <message>
    <ts>2017-07-02T06:20:59.733832</ts>
    <user>U5Z3Y472L</user>
    <text>view : Model -&amp;gt; Html Msg
view model =
     form [ class "w70 center", onSubmit Login ]
          [ label [ for "email", class "row mts" ] [ text "Adresse email"]
          , input [ name "email", type_ "email", class "row", onInput ChangeEmail ][]
          , label [ for "password", class "row mts" ] [ text "Mot de passe"]
          , input [ name "password", class "mbs w70", type_ model.passwordFieldType, onInput ChangePassword, value "" ]
                  [ div
                      [ class "passwordShow" ]
                      [ input
                          [ checked model.isPasswordVisible, type_ "checkbox", onClick TogglePasswordVisibility ]
                          [ text "Afficher"]
                      , a [ onClick Login, class "row btn primary-btn" ]
                          [ div [ class "grid-3-1" ]
                                [ div [ class "txtcenter" ] [ text "Me connecter"]
                                , viewSpinner model.isWaitingConnect
                                ]
                          ]
                      , div [ class "w50 center" ]
                          [ a [ href "#", onClick SendResetLink ] [ text "J'ai oublié mon mot de passe"]
                          , viewSpinner model.isWaitingReset
                          ]
                      ]
                  ]
          ]

viewSpinner : Bool -&amp;gt; Html Msg
viewSpinner isWaiting =
    if isWaiting then
        div []
            [ i [ class "fa fa-spinner fa-pulse fa-lg" ] []
            ]
    else
        div [][]</text>
  </message>
  <message>
    <ts>2017-07-02T06:21:24.735218</ts>
    <user>U5Z3Y472L</user>
    <text>The compiler doesn't like it:</text>
  </message>
  <message>
    <ts>2017-07-02T06:21:25.735275</ts>
    <user>U5Z3Y472L</user>
    <text>The 1st and 2nd entries in this list are different types of values.

56|                           [ a [ href "#", onClick SendResetLink ] [ text "J'ai oublié mon mot de passe"]
57|&amp;gt;                          , viewSpinner model.isWaitingReset
58|                           ]

The 1st entry has this type:

    Html (String -&amp;gt; Msg)

But the 2nd is:

    Html (Msg)</text>
  </message>
  <message>
    <ts>2017-07-02T06:21:49.736643</ts>
    <user>U5Z3Y472L</user>
    <text>I don't understand how to fix this</text>
  </message>
  <message>
    <ts>2017-07-02T06:23:13.741841</ts>
    <user>U3SJEDR96</user>
    <text>What's the type of `SendResetLink`?</text>
  </message>
  <message>
    <ts>2017-07-02T06:24:23.745855</ts>
    <user>U5Z3Y472L</user>
    <text>type Msg
    = Login
    | ChangeEmail String
    | ChangePassword String
    | SendResetLink
    | TogglePasswordVisibility Bool</text>
  </message>
  <message>
    <ts>2017-07-02T06:30:01.763630</ts>
    <user>U3SJEDR96</user>
    <text>Hm, it seems to think you have `SendResetLink String`</text>
  </message>
  <message>
    <ts>2017-07-02T06:31:28.768879</ts>
    <user>U5Z3Y472L</user>
    <text>Yep. The question is: why?</text>
  </message>
  <message>
    <ts>2017-07-02T06:32:37.772753</ts>
    <user>U5Z3Y472L</user>
    <text>When I remove the href attribute from the link, the error message becomes:</text>
  </message>
  <message>
    <ts>2017-07-02T06:32:43.773066</ts>
    <user>U5Z3Y472L</user>
    <text>```
Html (Bool -&amp;gt; Msg)

But the 2nd is:

    Html (Msg)
```</text>
  </message>
  <message>
    <ts>2017-07-02T06:36:40.785757</ts>
    <user>U3SJEDR96</user>
    <text>Oh, wait, it's a different place entirely - `onClick TogglePasswordVisibility` where `TogglePasswordVisibility : Bool -&amp;gt; Msg`</text>
  </message>
  <message>
    <ts>2017-07-02T06:37:56.789790</ts>
    <user>U3SJEDR96</user>
    <text>you may want `onClick &amp;lt;| TogglePasswordVisiblity &amp;lt;| not model.isPasswordVisible`</text>
  </message>
  <message>
    <ts>2017-07-02T06:38:21.791195</ts>
    <user>U3SJEDR96</user>
    <text>or you can just get rid of the boolean parameter and flip it in your model</text>
  </message>
  <message>
    <ts>2017-07-02T06:38:51.792718</ts>
    <user>U3SJEDR96</user>
    <text>(I'd also try to derive `isPasswordVisible` from your `passwordFieldType` rather than keeping it as two separate pieces of state)</text>
  </message>
  <message>
    <ts>2017-07-02T06:39:37.795178</ts>
    <user>U5Z3Y472L</user>
    <text>Great! Thanks for your help &lt;@U3SJEDR96&gt;!</text>
  </message>
  <message>
    <ts>2017-07-02T06:39:37.795201</ts>
    <user>U3SJEDR96</user>
    <text>or the other way around. Point being you have two ways to describe the same data currently; and if they get out of sync, you'll have some pretty odd behaviour</text>
  </message>
  <message>
    <ts>2017-07-02T06:39:53.796019</ts>
    <user>U5Z3Y472L</user>
    <text>you're right</text>
  </message>
  <message>
    <ts>2017-07-02T06:40:09.797018</ts>
    <user>U3SJEDR96</user>
    <text>Glad we figured it out, tho - good luck!</text>
  </message>
  <message>
    <ts>2017-07-02T07:06:10.885485</ts>
    <user>U5GJ5FEAU</user>
    <text>after watching &lt;@U13H7FNDQ&gt; elm-europe talk, my app has reduced by ~25 files. Realized each page of a spa doesn't need to have its own update + view + rest file .. just in case someone else is also doing the same thing, you'll save yourself writing a lot of imports for sure :smile:</text>
  </message>
  <message>
    <ts>2017-07-02T07:35:35.985950</ts>
    <user>U5J08KX0D</user>
    <text>Hi folks. What's the best way to play sounds? The Howler js library is fantastic (does cross browser really well) - if there's no agreed-upon Elm solution, ought I learn about ports?  - 
thanks again!</text>
  </message>
  <message>
    <ts>2017-07-02T07:44:56.017295</ts>
    <user>U3SJEDR96</user>
    <text>Ports are probably best, yeah</text>
  </message>
  <message>
    <ts>2017-07-02T07:51:14.038270</ts>
    <user>U62KVQVD1</user>
    <text>Any idea why can I be getting following error: "Cannot find variable `=&amp;gt;`" ?</text>
  </message>
  <message>
    <ts>2017-07-02T07:51:46.039946</ts>
    <user>U62KVQVD1</user>
    <text>Is this something what was deprecated? Operator =&amp;gt; ?</text>
  </message>
  <message>
    <ts>2017-07-02T07:53:50.047007</ts>
    <user>U62KVQVD1</user>
    <text>&lt;https://gist.github.com/korczis/ed88388c2188fd39550d1b0a49a36448&gt;</text>
  </message>
  <message>
    <ts>2017-07-02T07:55:33.052936</ts>
    <user>U5A726ZAR</user>
    <text>&lt;@U5GJ5FEAU&gt; which video is that? I cant find it in the Elm Europe 2017 playlist</text>
  </message>
  <message>
    <ts>2017-07-02T08:00:24.071039</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U62KVQVD1&gt; it's not defined in `core`. It's defined in a util module in `elm-spa-example`though. Basically', it's this:
```
(=&amp;gt;) : a -&amp;gt; b -&amp;gt; (a, b)
(=&amp;gt;) = (,)
infixl 0 =&amp;gt;
```</text>
  </message>
  <message>
    <ts>2017-07-02T08:00:52.073059</ts>
    <user>U62KVQVD1</user>
    <text>&lt;@U3SJEDR96&gt; I see, thanks</text>
  </message>
  <message>
    <ts>2017-07-02T08:03:28.083390</ts>
    <user>U62KVQVD1</user>
    <text>Writing SPA in elm is quite hard :disappointed: Any ideas when elm 0.19 will get released?</text>
  </message>
  <message>
    <ts>2017-07-02T08:12:34.116000</ts>
    <user>U41NK9BM4</user>
    <text>BTW, `=&amp;gt;` operator will be available in 0.19 by default</text>
  </message>
  <message>
    <ts>2017-07-02T08:13:55.120346</ts>
    <user>U3SQ42JJW</user>
    <text>Hi everyone. I am just sitting here and think if my code is as pure functional as it should be.
For Example I have a function 
```
getUsers : Model -&amp;gt; List User
getUsers model = 
    model.users
```
Later in the code I use the following function:
```
getAllUserNames: Model -&amp;gt; List String
getAllUserNames model = 
    List.map (...) (getUsers model)
```</text>
  </message>
  <message>
    <ts>2017-07-02T08:14:17.121593</ts>
    <user>U3SQ42JJW</user>
    <text>This is not pure and should be avoided, I would say… or?</text>
  </message>
  <message>
    <ts>2017-07-02T08:14:56.123623</ts>
    <user>U41NK9BM4</user>
    <text>Why do you think isn't pure ?</text>
  </message>
  <message>
    <ts>2017-07-02T08:15:11.124558</ts>
    <user>U3SQ42JJW</user>
    <text>right way would be 
```
getAllUsers : List User -&amp;gt; List String 
```</text>
  </message>
  <message>
    <ts>2017-07-02T08:15:22.125235</ts>
    <user>U62KVQVD1</user>
    <text>&lt;@U41NK9BM4&gt; I am afraid if I will be able to migrate my code to 0.19</text>
  </message>
  <message>
    <ts>2017-07-02T08:15:28.125619</ts>
    <user>U3SJEDR96</user>
    <text>getUsers doesn't work, though</text>
  </message>
  <message>
    <ts>2017-07-02T08:15:33.125952</ts>
    <user>U3SQ42JJW</user>
    <text>beacause I reference a function that is not in scope…</text>
  </message>
  <message>
    <ts>2017-07-02T08:16:01.127747</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U62KVQVD1&gt; Usually there are tools to help with that, which should make it a breeze</text>
  </message>
  <message>
    <ts>2017-07-02T08:17:12.131988</ts>
    <user>U62KVQVD1</user>
    <text>&lt;@U3SJEDR96&gt; Ok, so there is hope …</text>
  </message>
  <message>
    <ts>2017-07-02T08:17:13.132083</ts>
    <user>U41NK9BM4</user>
    <text>korczis: Languages changes in 0.19 will be really minor. The changes in the library might affect your SPA though.</text>
  </message>
  <message>
    <ts>2017-07-02T08:18:06.135138</ts>
    <user>U62KVQVD1</user>
    <text>I am bit scared from this comment in SPA example

`
-- WARNING: this whole file will become unnecessary and go away in Elm 0.19,
-- so avoid putting things in here unless there is no alternative!
`</text>
  </message>
  <message>
    <ts>2017-07-02T08:18:49.137682</ts>
    <user>U3SQ42JJW</user>
    <text>&lt;@U41NK9BM4&gt; it just doesn fell pure. I use a function in a function that i did not pass via an argument… I can just magically access this function</text>
  </message>
  <message>
    <ts>2017-07-02T08:18:51.137805</ts>
    <user>U41NK9BM4</user>
    <text>AFAIK routing will be simplified.</text>
  </message>
  <message>
    <ts>2017-07-02T08:18:59.138251</ts>
    <user>U3SQ42JJW</user>
    <text>*feel</text>
  </message>
  <message>
    <ts>2017-07-02T08:19:18.139425</ts>
    <user>U3SJEDR96</user>
    <text>But you can't. `getUsers` can only work if you have a constant `model` function</text>
  </message>
  <message>
    <ts>2017-07-02T08:19:27.139936</ts>
    <user>U41NK9BM4</user>
    <text>But really, there's no need to upgrade to 0.19 the day after it will be released. Or there is?</text>
  </message>
  <message>
    <ts>2017-07-02T08:19:43.140732</ts>
    <user>U3SJEDR96</user>
    <text>oh, wait, you changed things :smile:</text>
  </message>
  <message>
    <ts>2017-07-02T08:20:00.141694</ts>
    <user>U3SQ42JJW</user>
    <text>yes, sorry. It was jus aquick example. I updated this</text>
  </message>
  <message>
    <ts>2017-07-02T08:20:08.142285</ts>
    <user>U3SQ42JJW</user>
    <text>(too quick ;-))</text>
  </message>
  <message>
    <ts>2017-07-02T08:20:19.143023</ts>
    <user>U62KVQVD1</user>
    <text>Of course there is not</text>
  </message>
  <message>
    <ts>2017-07-02T08:20:34.144025</ts>
    <user>U41NK9BM4</user>
    <text>If model changes, you get a different results. If model doesn't change you get the same results. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T08:20:44.144658</ts>
    <user>U41NK9BM4</user>
    <text>So it's pure :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T08:21:42.148071</ts>
    <user>U3SJEDR96</user>
    <text>Calling a pure function is pure. If you only _ever_ need to get the usernames of all users in your model, use the funciton you wrote. If you suddenly need the names of an arbitrary list of users, write `usernames : List User -&amp;gt; List String`</text>
  </message>
  <message>
    <ts>2017-07-02T08:21:55.148752</ts>
    <user>U5J08KX0D</user>
    <text>Thanks &lt;@U3SJEDR96&gt; </text>
  </message>
  <message>
    <ts>2017-07-02T08:22:39.151143</ts>
    <user>U3SJEDR96</user>
    <text>Write the functions and abstractions you _need_ - refactoring is so easy in Elm anyway. Abstracting before you need it could quickly become counter-productive, and make it more difficult to change things when they no longer fit your previous model</text>
  </message>
  <message>
    <ts>2017-07-02T08:22:53.151887</ts>
    <user>U3SQ42JJW</user>
    <text>I would think it is only real pure if I declare it like this:
```
getAllUserNames: (Model -&amp;gt; List User) -&amp;gt; List String
getAllUserNames getUsers = 
    List.map (...) (getUsers model)
```
I then call it like this:
```
getAllUserNames getUsers
```</text>
  </message>
  <message>
    <ts>2017-07-02T08:24:51.158358</ts>
    <user>U3SQ42JJW</user>
    <text>&lt;@U3SJEDR96&gt; Well, probably. Yes. If it works it works… Maybe I overcomplicate things or take this purity thing too serious :confused:</text>
  </message>
  <message>
    <ts>2017-07-02T08:24:53.158503</ts>
    <user>U41NK9BM4</user>
    <text>I would say it is more flexible, since you can swap `getUsers` implementations</text>
  </message>
  <message>
    <ts>2017-07-02T08:24:55.158614</ts>
    <user>U3SJEDR96</user>
    <text>This seems contrived. If you feel like `Model -&amp;gt; List String` doesn't really make sense, go with `List User -&amp;gt; List String` and pass in the users. You could then go on and say "I should pass in a `User -&amp;gt; String` function", and then...</text>
  </message>
  <message>
    <ts>2017-07-02T08:25:34.161146</ts>
    <user>U2D7NUGS1</user>
    <text>Hello! I have a type with single constructor like this: ```
type Locality
    = Locality String
``` Now I want to pass it to the function that will output `Html.text` with the `String` value. I know I can extract the `String` using pattern matching like this: ```
listItem : Locality -&amp;gt; Html Msg
listItem locality =
    case locality of
        Locality name -&amp;gt;
            item [ style [ ( "cursor", "pointer" ) ] ] [ text name ]
``` but it seems pretty silly given there only one constructor. Is there another way? Or is my approach wrong?</text>
  </message>
  <message>
    <ts>2017-07-02T08:26:16.163699</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U3SQ42JJW&gt; you can only write pure functions in Elm, if it compiles then it's a pure function</text>
  </message>
  <message>
    <ts>2017-07-02T08:26:36.164656</ts>
    <user>U41NK9BM4</user>
    <text>Well… `type alias Locality = String` &lt;@U2D7NUGS1&gt;  It is not the same thing, though</text>
  </message>
  <message>
    <ts>2017-07-02T08:26:59.165860</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U2D7NUGS1&gt; `listItem (Locality foo) = ...`</text>
  </message>
  <message>
    <ts>2017-07-02T08:27:29.167713</ts>
    <user>U41NK9BM4</user>
    <text>Dang, pattern matching to the rescue :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T08:27:30.167815</ts>
    <user>U3SQ42JJW</user>
    <text>&lt;@U153UK3FA&gt; Thanks… Maybe I have to study this whole purity thing a bit more. Feel like I still did not get it.  :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T08:28:30.171420</ts>
    <user>U2D7NUGS1</user>
    <text>Awesome. Thank you.</text>
  </message>
  <message>
    <ts>2017-07-02T08:28:41.171928</ts>
    <user>U41NK9BM4</user>
    <text>&lt;@U3SQ42JJW&gt; "A pure function is a function where the return value is only determined by its input values, without observable side effects"</text>
  </message>
  <message>
    <ts>2017-07-02T08:28:55.172702</ts>
    <user>U41NK9BM4</user>
    <text>It's all there, really</text>
  </message>
  <message>
    <ts>2017-07-02T08:31:16.181940</ts>
    <user>U41NK9BM4</user>
    <text>Even we you do an HTTP request inside a function you are writing a pure function. Go figure! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T08:32:00.184617</ts>
    <user>U285A8S8H</user>
    <text>are you sure?</text>
  </message>
  <message>
    <ts>2017-07-02T08:33:12.189072</ts>
    <user>U41NK9BM4</user>
    <text>Of course. Because you return a *description* of what to do and pass that the Elm runtime.</text>
  </message>
  <message>
    <ts>2017-07-02T08:34:06.192129</ts>
    <user>U41NK9BM4</user>
    <text>A description cannot fail or return something different each time.</text>
  </message>
  <message>
    <ts>2017-07-02T08:35:04.195571</ts>
    <user>U41NK9BM4</user>
    <text>A decription is "Hey Elm runtime, grab that URL and return to me the payload". Elm does the job and call your `update` function.</text>
  </message>
  <message>
    <ts>2017-07-02T08:36:44.201557</ts>
    <user>U285A8S8H</user>
    <text>sure, that makes sense</text>
  </message>
  <message>
    <ts>2017-07-02T08:37:09.203157</ts>
    <user>U285A8S8H</user>
    <text>I thought you meant that literally making http requests still gives you a pure function</text>
  </message>
  <message>
    <ts>2017-07-02T08:38:23.207709</ts>
    <user>U41NK9BM4</user>
    <text>Ah sorry. Indeed "you do an HTTP request" is not precise :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T08:39:08.210311</ts>
    <user>U3SJEDR96</user>
    <text>(hence why you can only trigger side-effects by returning them from `init` or `update`; both which "happen" to be called by the runtime)</text>
  </message>
  <message>
    <ts>2017-07-02T09:11:23.332650</ts>
    <user>U62KVQVD1</user>
    <text>How should I implement ```init : Session -&amp;gt; Task PageLoadError Model``` to return empty Model?</text>
  </message>
  <message>
    <ts>2017-07-02T09:11:29.333034</ts>
    <user>U62KVQVD1</user>
    <text>&lt;https://gist.github.com/korczis/9b3c8449c1f8cc5d008f6bec560df67d#file-home-elm-L19&gt;</text>
  </message>
  <message>
    <ts>2017-07-02T09:12:33.337267</ts>
    <user>U62KVQVD1</user>
    <text>I am trying to rip off parts of the spa-example and integrate it with my phoenix/elm SPA.</text>
  </message>
  <message>
    <ts>2017-07-02T09:22:03.374573</ts>
    <user>U0J8D9M2P</user>
    <text>I'm making public package. I have a function from a module which returns an extensible record and the type alias for that record is defined in the same module. Do I need to expose that type record in order to use it outside of the module?</text>
  </message>
  <message>
    <ts>2017-07-02T09:25:24.387615</ts>
    <user>U3584SW4R</user>
    <text>This is not be related to elm directly, but can someone help me in deciding between webpack and brunch? Which one would you prefer for a new project today?</text>
  </message>
  <message>
    <ts>2017-07-02T09:27:20.395395</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U62KVQVD1&gt; That seems like a not very good idea at first glance, but you can do it by going `Task.map (always {})`. However, the standard thing to use in this sort of case is `()` a.k.a. unit.</text>
  </message>
  <message>
    <ts>2017-07-02T09:29:45.404864</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U0J8D9M2P&gt; It's a good idea to expose at least the top level of all types that your exposed types use in their type signatures. You can expose type aliases too.</text>
  </message>
  <message>
    <ts>2017-07-02T09:31:06.410842</ts>
    <user>U62KVQVD1</user>
    <text>&lt;@U48AEBJQ3&gt; What is not good idea? To rip off the parts of spa-example?</text>
  </message>
  <message>
    <ts>2017-07-02T09:31:32.412512</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U3584SW4R&gt; Brunch is a more accessible design, but webpack has a lot more mind-share behind it. Depends on one's experience, tolerance for learning a system, and need for more interesting things.</text>
  </message>
  <message>
    <ts>2017-07-02T09:33:21.419878</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U62KVQVD1&gt; No, making a special type for unit and throwing away any data the `Task` is producing on success seems a bit strange.</text>
  </message>
  <message>
    <ts>2017-07-02T09:33:55.422028</ts>
    <user>U62KVQVD1</user>
    <text>I just want to make it working and later add more fields and connect it with REST API</text>
  </message>
  <message>
    <ts>2017-07-02T09:36:10.431730</ts>
    <user>U2D7NUGS1</user>
    <text>I'm about to push my first package to the registry :scream: :scream_cat: and want to preview docs with &lt;http://package.elm-lang.org/help/docs-preview&gt;. But executing `elm-make --docs=documentation.json` produces `[]` in the file and a message: `Success! Compiled 0 modules.`. Here is the code: &lt;https://github.com/lzrski/elm-polymer/tree/pre-publish&gt;</text>
  </message>
  <message>
    <ts>2017-07-02T09:36:30.433144</ts>
    <user>U2D7NUGS1</user>
    <text>What am I doing wrong?</text>
  </message>
  <message>
    <ts>2017-07-02T09:36:44.434010</ts>
    <user>U48AEBJQ3</user>
    <text>Right, but `Request.Article.tags` returns a specific type. It's generally preferable to dump that back into an `update` function and work with the result there.</text>
  </message>
  <message>
    <ts>2017-07-02T09:38:10.439609</ts>
    <user>U0J8D9M2P</user>
    <text>&lt;@U2D7NUGS1&gt; you need to add exposed modules to list of exposed modules in elm-package.json</text>
  </message>
  <message>
    <ts>2017-07-02T09:38:31.441077</ts>
    <user>U2D7NUGS1</user>
    <text>Aha! Makes sense. Thanks &lt;@U0J8D9M2P&gt; !</text>
  </message>
  <message>
    <ts>2017-07-02T12:36:29.230162</ts>
    <user>U2D7NUGS1</user>
    <text>Haha! I love you people. You just helped me before I've asked question. I wanted to paste a big chunk of code to ask why it's not working, and as I was selecting it, I've spotted the bug :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T12:36:45.231448</ts>
    <user>U2D7NUGS1</user>
    <text>It's only possible because of your super friendly attitude.</text>
  </message>
  <message>
    <ts>2017-07-02T12:41:25.252157</ts>
    <user>U62UFEG4D</user>
    <text>Hello Elm people !</text>
  </message>
  <message>
    <ts>2017-07-02T12:41:30.252479</ts>
    <user>U2D7NUGS1</user>
    <text>But I've also learned something interesting. If one just define a value, like that: ```
fetchData =
    let
        url =
            Debug.log "Getting analysis" "&lt;https://www.example.com/some-data.json&gt;"
    in
        Http.get url Decode.value
            |&amp;gt; Http.send DataFetched
``` then the `let` clause will be eagerly executed, even if I don't reference it anywhere. In this case the `Debug.log` did it's effect despite the fact that `fetchData` was not called. I was expecting it to be lazy.</text>
  </message>
  <message>
    <ts>2017-07-02T12:41:36.252930</ts>
    <user>U2D7NUGS1</user>
    <text>Hello, &lt;@U62UFEG4D&gt; !</text>
  </message>
  <message>
    <ts>2017-07-02T12:41:51.254029</ts>
    <user>U62UFEG4D</user>
    <text>hey &lt;@U2D7NUGS1&gt;</text>
  </message>
  <message>
    <ts>2017-07-02T12:42:27.256942</ts>
    <user>U2D7NUGS1</user>
    <text>To finish my though: That got me confused.</text>
  </message>
  <message>
    <ts>2017-07-02T12:48:04.282221</ts>
    <user>U62UFEG4D</user>
    <text>I am doing the elm tutorial, I am struggling at the section Random : &lt;https://guide.elm-lang.org/architecture/effects/random.html&gt; . I am trying to to have 2 die rolling at the same time. My  first idea was to have to have message with 2 payloads e.g.
```type Msg
    = Roll
     | NewFace Int Int ```
but then I could not figure out how to have my random generator returns 2 value.

My second attempt was to change the view to have the button click generates 2 events like this :        `     , button [ (onClick Roll1), (onClick Roll2)] [ text "Roll" ]` , but this update only one die.

Can you provide hint on how to solve this using my knowledge of the previous part of the tutorial.
Thanks in advance</text>
  </message>
  <message>
    <ts>2017-07-02T12:49:50.289995</ts>
    <user>U62UFEG4D</user>
    <text>I have shared in this snippet my second attempt...</text>
  </message>
  <message>
    <ts>2017-07-02T12:52:42.304026</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U62UFEG4D&gt; `Random.map2`</text>
  </message>
  <message>
    <ts>2017-07-02T12:54:34.312949</ts>
    <user>U48AEBJQ3</user>
    <text>`Random.map2 (,) (&lt;http://Random.int|Random.int&gt; 1 6) (&lt;http://Random.int|Random.int&gt; 1 6) |&amp;gt; Random.generate (uncurry NewFace)`</text>
  </message>
  <message>
    <ts>2017-07-02T13:05:13.364760</ts>
    <user>U62UFEG4D</user>
    <text>&lt;@U48AEBJQ3&gt; it works now, thanks a lot!</text>
  </message>
  <message>
    <ts>2017-07-02T13:55:18.589802</ts>
    <user>U604S603Y</user>
    <text>is there a way with elm-package to "restore" packages that are already mentioned as dependencies in my elm-package.json?</text>
  </message>
  <message>
    <ts>2017-07-02T13:55:33.590968</ts>
    <user>U604S603Y</user>
    <text>to download all dependencies after cloning a repository for the first time</text>
  </message>
  <message>
    <ts>2017-07-02T13:56:50.596908</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U604S603Y&gt; just `elm-package install --yes` should handle that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T14:02:51.625289</ts>
    <user>U604S603Y</user>
    <text>perfect! thanks &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-02T14:20:15.705404</ts>
    <user>U5XHTBFS6</user>
    <text>I need very little interaction with leaflet for now, so ports are working ok. But I'll definitely watch the video. Thanks &lt;@U3LT1UTPF&gt; .</text>
  </message>
  <message>
    <ts>2017-07-02T15:04:07.904156</ts>
    <user>U2D7NUGS1</user>
    <text>I'm trying to wrap my head around JSON decoding. How do I implement a function from `Json.Decode.Value` to `String`. Sample JSON would look like that: ```
{ value: "The string I want" }
```</text>
  </message>
  <message>
    <ts>2017-07-02T15:07:03.917605</ts>
    <user>U2D7NUGS1</user>
    <text>It can be either with `Json.Decode` or `Json.Decode.Pipeline`. Here is my starting point using Pipeline: ```
decodeData : Decode.Value -&amp;gt; String
decodeData json =
    Pipeline.requiredAt [ "value" ] Decode.string
``` It obviously doesn't work.</text>
  </message>
  <message>
    <ts>2017-07-02T15:11:17.936576</ts>
    <user>U3SJEDR96</user>
    <text>Right; so you can think of a `Decoder a` as a function `Value -&amp;gt; Result String a`. The only ways of calling that function is by using `decodeString` or `decodeValue`  on a string representing some json, or an actual json value. The result it returns a result is because decoding can fail, if the json is malformed or doesn't match the structure you describe in Elm</text>
  </message>
  <message>
    <ts>2017-07-02T15:11:54.939232</ts>
    <user>U2D7NUGS1</user>
    <text>Makes sense.</text>
  </message>
  <message>
    <ts>2017-07-02T15:12:51.943714</ts>
    <user>U3SJEDR96</user>
    <text>so how you generally handle this, is by writing a decoder that matches the structure you expect. In this case, `myDecoder = Decode.field "value"  Decode.string`. You'd then use that like `decodeString myDecoder """ { "value": "The string I want" } """`</text>
  </message>
  <message>
    <ts>2017-07-02T15:12:59.944265</ts>
    <user>U3SJEDR96</user>
    <text>the above should actually work in the repl, too :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T15:14:58.953240</ts>
    <user>U2D7NUGS1</user>
    <text>Ok, thanks. I think the missing part on my side was `decodeValue`. I'll try and probably get back when I hit another wall :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T15:17:24.964398</ts>
    <user>U2D7NUGS1</user>
    <text>Yup, I got it. For reference, here is my initial implementation: ```
decodeData : Decode.Value -&amp;gt; String
decodeData json =
    case Decode.decodeValue (&lt;http://Decode.at|Decode.at&gt; [ "statuz" ] Decode.string) json of
        Ok value -&amp;gt;
            value

        Err message -&amp;gt;
            message
```</text>
  </message>
  <message>
    <ts>2017-07-02T15:17:45.965897</ts>
    <user>U2D7NUGS1</user>
    <text>Error case handling is not perfect, but it's a good starting point.</text>
  </message>
  <message>
    <ts>2017-07-02T15:17:46.965991</ts>
    <user>U3SJEDR96</user>
    <text>So for what it's worth, I'm trying to gain more insight into how people learn writing JSON decoders, and I've set up a project where I aim to introduce the required concepts one by one. If you're interested, I've _love_ if you could fork &lt;https://github.com/zwilias/elm-demystify-decoders&gt; and commit your solutions :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T15:20:59.980339</ts>
    <user>U2D7NUGS1</user>
    <text>Oh, that is super awesome!</text>
  </message>
  <message>
    <ts>2017-07-02T15:21:57.984641</ts>
    <user>U2D7NUGS1</user>
    <text>The thing is that on Thursday I'm giving a presentation about Elm for local meetup group and now I'm frantically preparing. So can't promise anything. I'll put a reminder for that in my calendar and get back to, probably later next week.</text>
  </message>
  <message>
    <ts>2017-07-02T15:22:40.987970</ts>
    <user>U3SJEDR96</user>
    <text>No rush, really, but I'd massively appreciate it :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T15:23:40.992510</ts>
    <user>U2D7NUGS1</user>
    <text>I really think it's a great initiative. I'm one of those who learn by experimenting, so I'll gladly help you.</text>
  </message>
  <message>
    <ts>2017-07-02T15:24:13.994857</ts>
    <user>U2D7NUGS1</user>
    <text>Just coming two weeks will be very intensive for me.</text>
  </message>
  <message>
    <ts>2017-07-02T15:24:24.995661</ts>
    <user>U2D7NUGS1</user>
    <text>I really appreciate your help.</text>
  </message>
  <message>
    <ts>2017-07-02T15:24:44.997132</ts>
    <user>U2D7NUGS1</user>
    <text>Are you Dutch?</text>
  </message>
  <message>
    <ts>2017-07-02T15:25:29.000543</ts>
    <user>U3SJEDR96</user>
    <text>Belgian, but I do speak Dutch</text>
  </message>
  <message>
    <ts>2017-07-02T15:26:22.004336</ts>
    <user>U2D7NUGS1</user>
    <text>Well, I'm in Netherlands, but I don't speak yet.</text>
  </message>
  <message>
    <ts>2017-07-02T15:28:23.013062</ts>
    <user>U3SJEDR96</user>
    <text>Where is your meetup at?</text>
  </message>
  <message>
    <ts>2017-07-02T15:29:36.018196</ts>
    <user>U2D7NUGS1</user>
    <text>It's in den Bosch: &lt;https://www.meetup.com/Frontend-Developers-Javascript-Noord-Brabant/events/240756426/&gt;</text>
  </message>
  <message>
    <ts>2017-07-02T15:31:12.025955</ts>
    <user>U2D7NUGS1</user>
    <text>That's even better: ```
decodeData : Decode.Value -&amp;gt; String
decodeData json =
    case Decode.decodeValue (&lt;http://Decode.at|Decode.at&gt; [ "statuz" ] Decode.string) json of
        Ok value -&amp;gt;
            value

        Err message -&amp;gt;
            Debug.crash message
```</text>
  </message>
  <message>
    <ts>2017-07-02T15:31:26.027017</ts>
    <user>U2D7NUGS1</user>
    <text>:boom: :smile:</text>
  </message>
  <message>
    <ts>2017-07-02T15:33:12.034666</ts>
    <user>U3SJEDR96</user>
    <text>Ah, too bad I can't make it there, I'd have loved to see that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T15:37:49.055536</ts>
    <user>U2D7NUGS1</user>
    <text>I hope it will be recorded.</text>
  </message>
  <message>
    <ts>2017-07-02T15:38:19.057962</ts>
    <user>U2D7NUGS1</user>
    <text>You may take a look at &lt;https://github.com/lzrski/elm-polymer/tree/pre-publish&gt;</text>
  </message>
  <message>
    <ts>2017-07-02T15:38:53.060467</ts>
    <user>U2D7NUGS1</user>
    <text>It's work in progress. Unpublished and very poorly documented.</text>
  </message>
  <message>
    <ts>2017-07-02T15:39:22.062655</ts>
    <user>U2D7NUGS1</user>
    <text>What I'm trying to do now is reimplement the scaffolding script in Elm. It's getting too hairy for shell scripting.</text>
  </message>
  <message>
    <ts>2017-07-02T15:39:45.064276</ts>
    <user>U2D7NUGS1</user>
    <text>Basically I'm trying to generate Elm code with Elm program :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T16:38:15.324891</ts>
    <user>U2G4P6QJ2</user>
    <text>Is there some convenient syntax for "updating" these kind of types? -&amp;gt;
```
type MyType = MyType Int String
```
I know for records I can do this:
```
{ record | someField = someValue }
```
But for the first kind I keep desctructuring the type and "rebuilding" it from scratch every time..</text>
  </message>
  <message>
    <ts>2017-07-02T16:39:05.328488</ts>
    <user>U3LT1UTPF</user>
    <text>If it's recorded, please share (I also speak Dutch)</text>
  </message>
  <message>
    <ts>2017-07-02T16:39:32.330306</ts>
    <user>U3LT1UTPF</user>
    <text>&lt;@U2D7NUGS1&gt; ^^</text>
  </message>
  <message>
    <ts>2017-07-02T16:40:01.332605</ts>
    <user>U2G4P6QJ2</user>
    <text>Right now I do this:
```
changeNr : MyType -&amp;gt; Int-&amp;gt; MyType
changeNr (MyType _ str) newNr = MyType newNr str
```</text>
  </message>
  <message>
    <ts>2017-07-02T16:40:30.334965</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U2G4P6QJ2&gt; You are already doing the right thing.</text>
  </message>
  <message>
    <ts>2017-07-02T16:41:24.339048</ts>
    <user>U48AEBJQ3</user>
    <text>Although, `MyType` should be the last parameter. It makes pipelining easier.</text>
  </message>
  <message>
    <ts>2017-07-02T16:41:51.341011</ts>
    <user>U48AEBJQ3</user>
    <text>And you might do `mapNr : (String -&amp;gt; String) -&amp;gt; MyType -&amp;gt; MyType`</text>
  </message>
  <message>
    <ts>2017-07-02T16:43:02.346299</ts>
    <user>U2G4P6QJ2</user>
    <text>Thanks a lot &lt;@U48AEBJQ3&gt;. I will keep that in mind, it makes perfect sense.</text>
  </message>
  <message>
    <ts>2017-07-02T16:43:14.347170</ts>
    <user>U62Q5C999</user>
    <text>Hi, just started with learning elm. Coming from react redux. I wonder is there something like redux store in elm? Some global state container and message bus to change it?</text>
  </message>
  <message>
    <ts>2017-07-02T16:45:02.354686</ts>
    <user>U2G4P6QJ2</user>
    <text>Yes there is. Check out the docs on "The Elm Architecture". &lt;https://guide.elm-lang.org/architecture/&gt;.</text>
  </message>
  <message>
    <ts>2017-07-02T16:46:12.359743</ts>
    <user>U2G4P6QJ2</user>
    <text>On that page, `Model` can be seen as the state that your redux store contains, and `Update` is pretty much your reducer.</text>
  </message>
  <message>
    <ts>2017-07-02T16:46:49.362351</ts>
    <user>U2G4P6QJ2</user>
    <text>Or "rootReducer" if you use that concept.</text>
  </message>
  <message>
    <ts>2017-07-02T16:48:44.370500</ts>
    <user>U3SJEDR96</user>
    <text>So two things: try not to think of the elm architecture in terms of "how would I do this in react". It's going to give you a lot more trouble, pretty quickly. And, interestingly, redux based its model off of elm's architecture :)</text>
  </message>
  <message>
    <ts>2017-07-02T16:50:11.376409</ts>
    <user>U62Q5C999</user>
    <text>&lt;@U3SJEDR96&gt; that's how I got here :) but have hard time going through documentation, maybe it's just  because I have wrong mindset </text>
  </message>
  <message>
    <ts>2017-07-02T16:50:38.378575</ts>
    <user>U62Q5C999</user>
    <text>I think I've already got how to structure update and model </text>
  </message>
  <message>
    <ts>2017-07-02T16:51:07.380669</ts>
    <user>U62Q5C999</user>
    <text>But it's hard to imagine how some nested components can listen to updates</text>
  </message>
  <message>
    <ts>2017-07-02T16:51:26.381961</ts>
    <user>U62Q5C999</user>
    <text>Without passing model all the way down from parent </text>
  </message>
  <message>
    <ts>2017-07-02T16:51:35.382635</ts>
    <user>U3SJEDR96</user>
    <text>There are parallels and somewhat subtle but important differences that are sometimes made by choice, sometimes inherent to the two languages. Trying to learn elm while doing some sort of "internal translation" is definitely going to give you some headaches, tho. Letting go of "components" etc is step one.</text>
  </message>
  <message>
    <ts>2017-07-02T16:52:23.385829</ts>
    <user>U3SJEDR96</user>
    <text>I hope someone else can give you some more guidance here, I have to go for now :)</text>
  </message>
  <message>
    <ts>2017-07-02T16:52:56.388028</ts>
    <user>U63LX5HFY</user>
    <text>Hey guys i'm new here. could you help me with a Json decoding  problem with my code. I'm mapping over a list of emojis .the code works but i think it's maybe an error in logic. here is the repo : &lt;https://github.com/nynd/Emoji-Search&gt;</text>
  </message>
  <message>
    <ts>2017-07-02T16:54:38.394918</ts>
    <user>U451CRP62</user>
    <text>Hi everyone, I'm still a beginner here. Can anyone tell me how to convert a String into a Float?  I used String.toFloat, but I end up with a "Result String Float", and have no idea how to extract my float number from it!</text>
  </message>
  <message>
    <ts>2017-07-02T16:55:20.397873</ts>
    <user>U62V8HFJR</user>
    <text>`String.toFloat` returns a `Result String Float` because it's possible the initial string doesn't decode well</text>
  </message>
  <message>
    <ts>2017-07-02T16:55:28.398450</ts>
    <user>U62V8HFJR</user>
    <text>e.g. `"hello"` doesn't really turn into a float</text>
  </message>
  <message>
    <ts>2017-07-02T16:56:40.403718</ts>
    <user>U62V8HFJR</user>
    <text>so you have to handle two cases: `Ok value`, in which case `value` will be the float you want</text>
  </message>
  <message>
    <ts>2017-07-02T16:57:12.405953</ts>
    <user>U62V8HFJR</user>
    <text>and `Err error`, in which case `error` will be a `String` describing the error you received while trying to parse out the float</text>
  </message>
  <message>
    <ts>2017-07-02T16:59:03.413706</ts>
    <user>U1L4GLFJ6</user>
    <text>any way I can get the current time in Elm</text>
  </message>
  <message>
    <ts>2017-07-02T16:59:06.413940</ts>
    <user>U1L4GLFJ6</user>
    <text>?</text>
  </message>
  <message>
    <ts>2017-07-02T16:59:13.414361</ts>
    <user>U451CRP62</user>
    <text>How do I do this, because the value returned from String.toFloat doesn't have a field named Ok, nor a field named value?</text>
  </message>
  <message>
    <ts>2017-07-02T17:00:10.419041</ts>
    <user>U62V8HFJR</user>
    <text>`Result` is a type with two constructors: `Ok value` and `Err error`</text>
  </message>
  <message>
    <ts>2017-07-02T17:00:21.419966</ts>
    <user>U62V8HFJR</user>
    <text>your code will likely look something like this:</text>
  </message>
  <message>
    <ts>2017-07-02T17:01:07.423776</ts>
    <user>U62V8HFJR</user>
    <text>```
case Result.toFloat str of
    Ok x -&amp;gt; x
    Err error -&amp;gt; &amp;lt;whatever value is appropriate for an error&amp;gt;
```</text>
  </message>
  <message>
    <ts>2017-07-02T17:02:55.431685</ts>
    <user>U62V8HFJR</user>
    <text>&lt;@U1L4GLFJ6&gt; &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Time#now&gt;</text>
  </message>
  <message>
    <ts>2017-07-02T17:03:56.436073</ts>
    <user>U62V8HFJR</user>
    <text>But keep in mind that `now` gives you a `Task`, meaning getting the time is asynchronous.</text>
  </message>
  <message>
    <ts>2017-07-02T17:05:10.441646</ts>
    <user>U1L4GLFJ6</user>
    <text>&lt;@U62V8HFJR&gt; how does that Task turn into a string?</text>
  </message>
  <message>
    <ts>2017-07-02T17:05:41.444019</ts>
    <user>U1L4GLFJ6</user>
    <text>is there `succeed` ?</text>
  </message>
  <message>
    <ts>2017-07-02T17:07:26.451553</ts>
    <user>U451CRP62</user>
    <text>I'm sorry, but I don't get it. I try this on the repl but I get a type mismatch error:</text>
  </message>
  <message>
    <ts>2017-07-02T17:09:00.457937</ts>
    <user>U62V8HFJR</user>
    <text>&lt;@U451CRP62&gt; That's because `x` and `error` have different types</text>
  </message>
  <message>
    <ts>2017-07-02T17:09:29.459924</ts>
    <user>U62V8HFJR</user>
    <text>Elm is strongly typed, so you can't have variables that switch between `Float` or `String` willy-nilly like in Javascript or Python</text>
  </message>
  <message>
    <ts>2017-07-02T17:09:59.462008</ts>
    <user>U62V8HFJR</user>
    <text>so the result of `Ok x -&amp;gt; &amp;lt;VALUE&amp;gt;` and `Err error -&amp;gt; &amp;lt;OTHER VALUE&amp;gt;` will need to match</text>
  </message>
  <message>
    <ts>2017-07-02T17:10:53.466270</ts>
    <user>U62V8HFJR</user>
    <text>A simple option would be to use `Maybe`:
```
b = case String.toFloat a of
    Ok x -&amp;gt; Just x
    Err error -&amp;gt; Nothing
```</text>
  </message>
  <message>
    <ts>2017-07-02T17:15:08.483693</ts>
    <user>U451CRP62</user>
    <text>but if b is a new variable (previously unassigned), I would expect to end up with either correctly parsed float, or a String. How come it forces it to be a float? What is the "error" value useful for, then?</text>
  </message>
  <message>
    <ts>2017-07-02T17:15:30.485225</ts>
    <user>U62V8HFJR</user>
    <text>in the repl that _kind of_ makes sense</text>
  </message>
  <message>
    <ts>2017-07-02T17:15:56.487194</ts>
    <user>U62V8HFJR</user>
    <text>but at compile time, you have no idea whether `b` should be a `Float` or a `String`</text>
  </message>
  <message>
    <ts>2017-07-02T17:16:03.487702</ts>
    <user>U62V8HFJR</user>
    <text>and the compiler has to pick which type to give `b`</text>
  </message>
  <message>
    <ts>2017-07-02T17:16:39.490114</ts>
    <user>U62V8HFJR</user>
    <text>so the error is basically saying "Hey, I'm the compiler and you confused me with your expression. I can't let `b` be both a Float and a String -- so which is it?"</text>
  </message>
  <message>
    <ts>2017-07-02T17:16:54.491156</ts>
    <user>U62V8HFJR</user>
    <text>you're right that it would collapse to a single value at execution time, but the compiler doesn't know that</text>
  </message>
  <message>
    <ts>2017-07-02T17:17:26.493429</ts>
    <user>U62V8HFJR</user>
    <text>&lt;@U1L4GLFJ6&gt;: most likely you want to tie `Time.now` into the result of something in your `update` function by using `Task.perform`</text>
  </message>
  <message>
    <ts>2017-07-02T17:17:34.494007</ts>
    <user>U62V8HFJR</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Task#perform&gt;</text>
  </message>
  <message>
    <ts>2017-07-02T17:27:36.535330</ts>
    <user>U451CRP62</user>
    <text>Ok, I wrote a helper function which goes like this:</text>
  </message>
  <message>
    <ts>2017-07-02T17:28:31.539387</ts>
    <user>U451CRP62</user>
    <text>and I am using it to update a record called model, like this:</text>
  </message>
  <message>
    <ts>2017-07-02T17:30:06.545723</ts>
    <user>U451CRP62</user>
    <text>but it doesn't like {model | horas}.  Why would it be?</text>
  </message>
  <message>
    <ts>2017-07-02T17:30:46.549137</ts>
    <user>U451CRP62</user>
    <text>Says he is expecting a ' or an =</text>
  </message>
  <message>
    <ts>2017-07-02T17:31:13.551174</ts>
    <user>U62V8HFJR</user>
    <text>I believe you want to replace `{model | horas}` and `{model | rate}` with `model.horas` and `model.rate`</text>
  </message>
  <message>
    <ts>2017-07-02T17:36:21.572453</ts>
    <user>U451CRP62</user>
    <text>There's the full snippet. It doesn't compile because he says the branches of the case have different types. :disappointed:</text>
  </message>
  <message>
    <ts>2017-07-02T17:38:08.579871</ts>
    <user>U451CRP62</user>
    <text>note that model.horas and model.rate are Strings</text>
  </message>
  <message>
    <ts>2017-07-02T17:39:13.584393</ts>
    <user>U451CRP62</user>
    <text>Why does he think the cases return different things?</text>
  </message>
  <message>
    <ts>2017-07-02T17:40:23.589005</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U451CRP62&gt; what does the compiler say are the return types?</text>
  </message>
  <message>
    <ts>2017-07-02T17:41:49.595304</ts>
    <user>U451CRP62</user>
    <text>Wait, I found the problem. My Rate message was defined as "Rate Float".</text>
  </message>
  <message>
    <ts>2017-07-02T17:44:54.606762</ts>
    <user>U451CRP62</user>
    <text>Perfect, I made my first working Elm app. Thanks for all your help, guys!</text>
  </message>
  <message>
    <ts>2017-07-02T17:53:45.642543</ts>
    <user>U6303RTK7</user>
    <text>I'm trying to make a small elm application, and I plan on having several small components rendering different views over a similar structure</text>
  </message>
  <message>
    <ts>2017-07-02T17:55:00.647228</ts>
    <user>U6303RTK7</user>
    <text>and I had imagined that I could compose views, but the other modules have their own `Msg` type defined, which causes a type mismatch in the view</text>
  </message>
  <message>
    <ts>2017-07-02T17:55:19.648660</ts>
    <user>U6303RTK7</user>
    <text>so I'm unsure how to go about not having one massive view function</text>
  </message>
  <message>
    <ts>2017-07-02T17:58:46.663412</ts>
    <user>U62V8HFJR</user>
    <text>&lt;@U6303RTK7&gt;: breaking down your view into smaller functions _is_ possible! But it takes a bit of fiddling</text>
  </message>
  <message>
    <ts>2017-07-02T17:59:41.666868</ts>
    <user>U62V8HFJR</user>
    <text>Suppose I have an app with two pages: one for displaying Players and one for displaying Monsters</text>
  </message>
  <message>
    <ts>2017-07-02T18:00:07.668941</ts>
    <user>U62V8HFJR</user>
    <text>I could break those off into sub-modules, with their own `Model`, `Msg`, and `view`, like you described</text>
  </message>
  <message>
    <ts>2017-07-02T18:00:19.670010</ts>
    <user>U62V8HFJR</user>
    <text>and they could, theoretically, work as independent apps all by themselves</text>
  </message>
  <message>
    <ts>2017-07-02T18:00:36.671639</ts>
    <user>U6303RTK7</user>
    <text>sounds similar to what I have :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T18:00:54.673063</ts>
    <user>U62V8HFJR</user>
    <text>but I want to group them together, so conceptually I'll make a new `Model`, `Msg`, and `view` which will end up being composed of the smaller pieces</text>
  </message>
  <message>
    <ts>2017-07-02T18:01:24.675324</ts>
    <user>U62V8HFJR</user>
    <text>say:
```
SuperMsg = Players.Msg
         | Monsters.Msg
```</text>
  </message>
  <message>
    <ts>2017-07-02T18:01:41.676520</ts>
    <user>U6303RTK7</user>
    <text>interesting</text>
  </message>
  <message>
    <ts>2017-07-02T18:02:14.678886</ts>
    <user>U6303RTK7</user>
    <text>So what about the case where I have more of a parent child relationship?</text>
  </message>
  <message>
    <ts>2017-07-02T18:02:25.679603</ts>
    <user>U6303RTK7</user>
    <text>Basically the main is aggregating events from websockets</text>
  </message>
  <message>
    <ts>2017-07-02T18:02:25.679698</ts>
    <user>U62V8HFJR</user>
    <text>and `superView : SuperModel -&amp;gt; Html SuperMsg`</text>
  </message>
  <message>
    <ts>2017-07-02T18:02:44.680783</ts>
    <user>U6303RTK7</user>
    <text>and then a bunch of different little views exist on the page displaying different information from that new aggregated state</text>
  </message>
  <message>
    <ts>2017-07-02T18:02:53.681348</ts>
    <user>U6303RTK7</user>
    <text>ohh</text>
  </message>
  <message>
    <ts>2017-07-02T18:03:06.682224</ts>
    <user>U6303RTK7</user>
    <text>so just the view could be composed of that larger message type?</text>
  </message>
  <message>
    <ts>2017-07-02T18:03:13.682722</ts>
    <user>U62V8HFJR</user>
    <text>yep!</text>
  </message>
  <message>
    <ts>2017-07-02T18:03:41.684665</ts>
    <user>U6303RTK7</user>
    <text>I don't want the Main module to have to prepare to receive all the kinds of messages that it normally would just pass down into the smaller views</text>
  </message>
  <message>
    <ts>2017-07-02T18:04:06.686327</ts>
    <user>U6303RTK7</user>
    <text>so the `update` could still keep its signature?</text>
  </message>
  <message>
    <ts>2017-07-02T18:04:17.687153</ts>
    <user>U62V8HFJR</user>
    <text>`update` is one I'm still having difficulties with, I'll confess. :confused:</text>
  </message>
  <message>
    <ts>2017-07-02T18:04:35.688474</ts>
    <user>U62V8HFJR</user>
    <text>this is how I've got my `view` setup:</text>
  </message>
  <message>
    <ts>2017-07-02T18:04:44.689092</ts>
    <user>U62V8HFJR</user>
    <text>```
  6 mainView: Model -&amp;gt; Html Msg
  7 mainView model =
  8     case model of
  9     ¦   Star starModel -&amp;gt;
 10     ¦   ¦   map StarMsg (Star.View.view starModel)
 11     ¦   Points pointsModel -&amp;gt;
 12     ¦   ¦   div [] [ text "Incomplete!" ]
```</text>
  </message>
  <message>
    <ts>2017-07-02T18:04:50.689495</ts>
    <user>U62V8HFJR</user>
    <text>(pardon the vim garbage)</text>
  </message>
  <message>
    <ts>2017-07-02T18:05:20.691656</ts>
    <user>U62V8HFJR</user>
    <text>basically I'm just pattern-matching on which type of model I'm dealing with to let the children do all their work</text>
  </message>
  <message>
    <ts>2017-07-02T18:05:54.694127</ts>
    <user>U6303RTK7</user>
    <text>why does the `Html` type need to take a type parameter?</text>
  </message>
  <message>
    <ts>2017-07-02T18:06:01.694695</ts>
    <user>U6303RTK7</user>
    <text>like why `Html Msg` and not just `Html`?</text>
  </message>
  <message>
    <ts>2017-07-02T18:06:35.696986</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U6303RTK7&gt; start by having a single Msg type and import it in to all your modules, you'll have a much easier time.</text>
  </message>
  <message>
    <ts>2017-07-02T18:07:41.701385</ts>
    <user>U153UK3FA</user>
    <text>Html produces events, the type parameter says what type those events will be</text>
  </message>
  <message>
    <ts>2017-07-02T18:07:57.702393</ts>
    <user>U6303RTK7</user>
    <text>ah, because of things like onClick and onInput</text>
  </message>
  <message>
    <ts>2017-07-02T18:08:17.703846</ts>
    <user>U6303RTK7</user>
    <text>okay, I had originally imported the Msg type, but I ended up with a circular dependency because I was using types defined in Main</text>
  </message>
  <message>
    <ts>2017-07-02T18:08:25.704410</ts>
    <user>U6303RTK7</user>
    <text>but I think I've since solved that by defining types elsewhere</text>
  </message>
  <message>
    <ts>2017-07-02T18:08:34.704909</ts>
    <user>U6303RTK7</user>
    <text>so I could probably do it that way</text>
  </message>
  <message>
    <ts>2017-07-02T18:09:04.706615</ts>
    <user>U62V8HFJR</user>
    <text>blog post you mind find useful: &lt;http://blog.jenkster.com/2016/04/how-i-structure-elm-apps.html&gt;</text>
  </message>
  <message>
    <ts>2017-07-02T18:09:06.706797</ts>
    <user>U6303RTK7</user>
    <text>oh, but then I can't call into a view function defined in the other module from main</text>
  </message>
  <message>
    <ts>2017-07-02T18:09:22.707715</ts>
    <user>U6303RTK7</user>
    <text>because that would still be a circular dependency</text>
  </message>
  <message>
    <ts>2017-07-02T18:09:33.708348</ts>
    <user>U6303RTK7</user>
    <text>if Main depends on the child to define the view, and the view depends on main to define the message type</text>
  </message>
  <message>
    <ts>2017-07-02T18:09:47.709134</ts>
    <user>U62V8HFJR</user>
    <text>you can pull `Msg` and `Model` out into other files than `Main`</text>
  </message>
  <message>
    <ts>2017-07-02T18:09:55.709609</ts>
    <user>U6303RTK7</user>
    <text>oh, duh.</text>
  </message>
  <message>
    <ts>2017-07-02T18:09:58.709767</ts>
    <user>U6303RTK7</user>
    <text>yeah, thanks :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T18:10:02.710029</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U6303RTK7&gt; put the Msg type in it's own module</text>
  </message>
  <message>
    <ts>2017-07-02T18:10:41.712941</ts>
    <user>U62V8HFJR</user>
    <text>&amp;gt; start by having a single Msg type and import it in to all your modules, you'll have a much easier time.
^ &lt;@U153UK3FA&gt;: so are you recommending to _not_ have sub-Msg types for sub-modules?</text>
  </message>
  <message>
    <ts>2017-07-02T18:11:37.716546</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U62V8HFJR&gt; not until your app in large enough to need it</text>
  </message>
  <message>
    <ts>2017-07-02T18:11:54.717710</ts>
    <user>U62V8HFJR</user>
    <text>I mean, that's totally fair</text>
  </message>
  <message>
    <ts>2017-07-02T18:12:08.718676</ts>
    <user>U62V8HFJR</user>
    <text>but I'm honestly at a bit of a loss for how to accomplish it at all</text>
  </message>
  <message>
    <ts>2017-07-02T18:12:20.719515</ts>
    <user>U153UK3FA</user>
    <text>Especially not until you have a few pages</text>
  </message>
  <message>
    <ts>2017-07-02T18:12:50.721373</ts>
    <user>U62V8HFJR</user>
    <text>I'm kind of interested in toying around with it on a smaller app so I can wrap my head around the idea</text>
  </message>
  <message>
    <ts>2017-07-02T18:13:06.722341</ts>
    <user>U62V8HFJR</user>
    <text>so that when I _am_ in the situation that breaking it apart would be appropriate, I could understand how to do that</text>
  </message>
  <message>
    <ts>2017-07-02T18:13:53.725254</ts>
    <user>U62V8HFJR</user>
    <text>(but maybe straying from beginner topics, here, haha)</text>
  </message>
  <message>
    <ts>2017-07-02T18:13:58.725643</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U62V8HFJR&gt; not a lot to it, just a lot of boilerplate.</text>
  </message>
  <message>
    <ts>2017-07-02T18:17:36.740363</ts>
    <user>U153UK3FA</user>
    <text>But it's definitely something to look at once you're more familiar with Elm, as it requires being comfortable with a bunch of aspects of Elm</text>
  </message>
  <message>
    <ts>2017-07-02T18:19:02.745970</ts>
    <user>U153UK3FA</user>
    <text>The many ways of breaking up your app become obvious once you understand enough of the basics</text>
  </message>
  <message>
    <ts>2017-07-02T18:21:36.756009</ts>
    <user>U2D7NUGS1</user>
    <text>&lt;@U3SJEDR96&gt; Thanks again for your tremendous help. Here's my yield of today: &lt;https://github.com/lzrski/elm-polymer-scaffolder&gt;</text>
  </message>
  <message>
    <ts>2017-07-02T18:22:45.760945</ts>
    <user>U2D7NUGS1</user>
    <text>As mentioned before the goal is to reimplement `scripts/scaffold` from `elm-polymer` in Elm. Sorry for lack of README or any other docs. I'm in a hurry.</text>
  </message>
  <message>
    <ts>2017-07-02T18:23:51.764997</ts>
    <user>U2D7NUGS1</user>
    <text>Good night to you and all other mighty folks of Elm :waning_crescent_moon:</text>
  </message>
  <message>
    <ts>2017-07-02T18:37:24.819429</ts>
    <user>U5D4VHEN7</user>
    <text>I am trying to write a JSON decoder for a record that has  a field `status` who's type is `Status` where the possible values are `Past, Present, Future, None`. The JSON response with the status data will be structures like `{ "status" : "past", ...other_fields }`. I am confused as to how I go about decoding `"past"` to `Past`. So far I have
```
dayBreakdownDecoder : Decoder DayBreakdown
dayBreakdownDecoder =
  decode DayBreakdown
  |&amp;gt; required "grade" dayGradeDecoder
  |&amp;gt; required "status" dayStatusDecoder


dayStatusDecoder : Decoder DayStatus
dayStatusDecoder =
  Decode.string `andThen` decodeDayStatus


decodeDayStatus : String -&amp;gt; DayStatus
decodeDayStatus dayStatus =
  case dayStatus of
    "past" -&amp;gt; Past
    "present" -&amp;gt; Present
    "future" -&amp;gt; Future
    other -&amp;gt; None
```

which is obviously wrong. Anyone able to point me in the right direction?</text>
  </message>
  <message>
    <ts>2017-07-02T18:38:53.825325</ts>
    <user>U0CLDU8UB</user>
    <text>That's not obviously wrong in my opinion</text>
  </message>
  <message>
    <ts>2017-07-02T18:39:40.828474</ts>
    <user>U0CLDU8UB</user>
    <text>The only problem is the "error" case, where `status` is none of those strings.</text>
  </message>
  <message>
    <ts>2017-07-02T18:40:06.830285</ts>
    <user>U0CLDU8UB</user>
    <text>You'll have to decide if you want that to be a success or a failure</text>
  </message>
  <message>
    <ts>2017-07-02T18:40:23.831469</ts>
    <user>U5D4VHEN7</user>
    <text>Thanks for the reply &lt;@U0CLDU8UB&gt;. I apologize, because I have actually just left that part out. I'll edit it</text>
  </message>
  <message>
    <ts>2017-07-02T18:41:38.836995</ts>
    <user>U0CLDU8UB</user>
    <text>Okay. That to me seems like it should work. What is your error message?</text>
  </message>
  <message>
    <ts>2017-07-02T18:41:38.837002</ts>
    <user>U5D4VHEN7</user>
    <text>And from this I get:
```
I ran into something unexpected when parsing your code!

206|   Decode.string `andThen` decodeDayGrade
                     ^
I am looking for one of the following things:

    end of input
    whitespace

Detected errors in 1 module.
```</text>
  </message>
  <message>
    <ts>2017-07-02T18:41:55.838090</ts>
    <user>U0CLDU8UB</user>
    <text>Oh right, the backtick syntax of course</text>
  </message>
  <message>
    <ts>2017-07-02T18:42:07.838929</ts>
    <user>U0CLDU8UB</user>
    <text>That was removed in 0.18</text>
  </message>
  <message>
    <ts>2017-07-02T18:42:30.840434</ts>
    <user>U5D4VHEN7</user>
    <text>ahhhhhh, got it. Let me try it without. Is there an alternative, or must I just place the args in order?</text>
  </message>
  <message>
    <ts>2017-07-02T18:42:41.841167</ts>
    <user>U0CLDU8UB</user>
    <text>So now it's
```
dayStatusDecoder : Decoder DayStatus
dayStatusDecoder =
  Decode.string
    |&amp;gt; andThen decodeDayStatus
```</text>
  </message>
  <message>
    <ts>2017-07-02T18:43:19.843837</ts>
    <user>U5D4VHEN7</user>
    <text>!!! Works! Thanks so much &lt;@U0CLDU8UB&gt;  :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T18:43:33.844782</ts>
    <user>U0CLDU8UB</user>
    <text>Awesome! Glad I could help!</text>
  </message>
  <message>
    <ts>2017-07-02T18:59:06.910469</ts>
    <user>U5D4VHEN7</user>
    <text>Actually, was still doing something wrong, but fixed it. :slightly_smiling_face: Here is the final solution (with poor naming prior to refactoring):
```
dayBreakdownDecoder : Decoder DayBreakdown
dayBreakdownDecoder =
  decode DayBreakdown
  |&amp;gt; required "grade" dayGradeDecoder
  |&amp;gt; required "status" dayStatusDecoder


dayStatusDecoder : Decoder DayStatus
dayStatusDecoder =
  Decode.string
  |&amp;gt; Decode.andThen doDecodeDayStatus


doDecodeDayStatus : String -&amp;gt; Decoder DayStatus
doDecodeDayStatus dayStatus = Decode.succeed (decodeDayStatus dayStatus)


decodeDayStatus : String -&amp;gt; DayStatus
decodeDayStatus dayStatus =
  case dayStatus of
    "past" -&amp;gt; Past
    "present" -&amp;gt; Present
    "future" -&amp;gt; Future
    _ -&amp;gt; NoStatus

```</text>
  </message>
  <message>
    <ts>2017-07-02T19:17:07.995865</ts>
    <user>U6303RTK7</user>
    <text>strange issue</text>
  </message>
  <message>
    <ts>2017-07-02T19:17:46.998703</ts>
    <user>U6303RTK7</user>
    <text>I'm seeing this error: ```
duration : Span -&amp;gt; Int
duration span = span.duration
```
```
`span` does not have a field named `duration`
```</text>
  </message>
  <message>
    <ts>2017-07-02T19:18:15.000954</ts>
    <user>U6303RTK7</user>
    <text>```
type Span
  = Span { id : Int, duration : Int }

```</text>
  </message>
  <message>
    <ts>2017-07-02T19:19:18.005625</ts>
    <user>U5D4VHEN7</user>
    <text>I could be wrong, but I think you need to use a type alias instead?
```
type alias Span =
  { id: Int, duration : Int }
```</text>
  </message>
  <message>
    <ts>2017-07-02T19:19:21.005942</ts>
    <user>U5D4VHEN7</user>
    <text>I very well could be wrong</text>
  </message>
  <message>
    <ts>2017-07-02T19:20:02.008713</ts>
    <user>U6303RTK7</user>
    <text>that seems to have resolved the issue, thanks :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T19:20:07.009218</ts>
    <user>U5D4VHEN7</user>
    <text>:slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-02T21:12:31.646200</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U6303RTK7&gt; in your above code you defined  a new type called `Span` with a constructor also called `Span` that takes a record as a parameter.</text>
  </message>
  <message>
    <ts>2017-07-02T21:13:36.653624</ts>
    <user>U153UK3FA</user>
    <text>You would construct a value of that type by writing `Span {id = 5, duration= 5}`</text>
  </message>
  <message>
    <ts>2017-07-02T21:20:23.701289</ts>
    <user>U635238TG</user>
    <text>i'm doing the 1st exercise in the tutorial, adding a reset button. why did I have to say `Reset -&amp;gt; 0` instead of `Reset -&amp;gt; model = 0`</text>
  </message>
  <message>
    <ts>2017-07-02T21:21:40.710818</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U635238TG&gt; the return value of the `update` function becomes the new value of the model</text>
  </message>
  <message>
    <ts>2017-07-02T21:22:44.718531</ts>
    <user>U153UK3FA</user>
    <text>it's actually impossible to use the `=` operator to change the value of the `model`, In Elm all variables are single assignment</text>
  </message>
  <message>
    <ts>2017-07-02T21:22:53.719596</ts>
    <user>U5D4VHEN7</user>
    <text>The `update` function's sole purpose is to return a new model. Key word is return. You don't actually do any assignment to the model in the `update` function, or really anywhere else, the Elm architecture handles that. All you have to do is make sure the final return value of `update` is a valid value for the new model.</text>
  </message>
  <message>
    <ts>2017-07-02T21:23:01.720383</ts>
    <user>U5D4VHEN7</user>
    <text>What &lt;@U153UK3FA&gt; said</text>
  </message>
  <message>
    <ts>2017-07-02T21:28:13.758927</ts>
    <user>U635238TG</user>
    <text>ok, and so you still need to put `model + 1` for increment because you are changing it instead of redefining it? am I thinking about that correctly?</text>
  </message>
  <message>
    <ts>2017-07-02T21:28:56.764345</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U635238TG&gt; yep with `model + 1` you're taking the value of the model and produce a new value that is incremented by 1</text>
  </message>
  <message>
    <ts>2017-07-02T21:28:58.764635</ts>
    <user>U5D4VHEN7</user>
    <text>When you use `model` in that case, you are purely using the value of `model`, basically saying "I want to return whatever the current value of model, + 1"</text>
  </message>
  <message>
    <ts>2017-07-02T21:29:06.765623</ts>
    <user>U153UK3FA</user>
    <text>just like `1+1`</text>
  </message>
  <message>
    <ts>2017-07-02T21:29:09.766028</ts>
    <user>U5D4VHEN7</user>
    <text>^</text>
  </message>
  <message>
    <ts>2017-07-02T21:29:50.771107</ts>
    <user>U635238TG</user>
    <text>thank you. basically completely new to programming in general, starting it off right with Elm! Wish I would have started 15 years ago though with whatever awesome pre-Elm languages there were (Haskell?)</text>
  </message>
  <message>
    <ts>2017-07-02T21:29:57.772060</ts>
    <user>U5D4VHEN7</user>
    <text>You can swap out `model` for anything else and it would still "work", only it'd set the model to whatever fixed value you chose.</text>
  </message>
  <message>
    <ts>2017-07-02T21:30:26.776226</ts>
    <user>U5D4VHEN7</user>
    <text>That's awesome! Elm is really amazing, and definitely an interesting first language to learn!</text>
  </message>
  <message>
    <ts>2017-07-02T21:33:23.798556</ts>
    <user>U635238TG</user>
    <text>i assume i should be learning html/css concurrently right? does this look solid: &lt;http://learn.shayhowe.com/&gt;</text>
  </message>
  <message>
    <ts>2017-07-02T21:33:47.801503</ts>
    <user>U635238TG</user>
    <text>or should i be approaching that differently since its all done in elm</text>
  </message>
  <message>
    <ts>2017-07-02T21:34:33.807133</ts>
    <user>U153UK3FA</user>
    <text>Learning static HTML and CSS first is a good idea</text>
  </message>
  <message>
    <ts>2017-07-02T21:35:15.812497</ts>
    <user>U5D4VHEN7</user>
    <text>"should" is a strong word. I definitely think an understanding HTML/CSS is both valuable, and really handy/fun. Elm definitely thinks about HTML/CSS fairly different than how it is typically used, and you could find yourself confused if you ever had to use something other than Elm, which you almost surely will.</text>
  </message>
  <message>
    <ts>2017-07-02T21:35:47.816737</ts>
    <user>U5D4VHEN7</user>
    <text>Do what is fun and engaging though. I think that is far more important than anything when you first start out. As long as you keep exploring, you'll come across all of the stuff you "should" know.</text>
  </message>
  <message>
    <ts>2017-07-02T21:36:58.825370</ts>
    <user>U635238TG</user>
    <text>that's basically been my whole philosophy right now. it's why i jumped straight into a linux command line and vim too. next stop git. they all fascinate me and i'm able to throw massive hours into this right now because i find it fun and interesting and it feels like the right way.</text>
  </message>
  <message>
    <ts>2017-07-02T21:37:33.829753</ts>
    <user>U153UK3FA</user>
    <text>Lots of Elm documentation expects you to have a certain amount of familiarity with HTML and CSS so you should run through a few tutorials on those first</text>
  </message>
  <message>
    <ts>2017-07-02T21:37:46.831455</ts>
    <user>U5D4VHEN7</user>
    <text>That is super awesome to hear! You are for sure on the right path. I didn't touch Linux/the command line/Git until well into my first year of programming.</text>
  </message>
  <message>
    <ts>2017-07-02T21:38:58.840848</ts>
    <user>U5D4VHEN7</user>
    <text>Yeah, I do agree with &lt;@U153UK3FA&gt;. Understanding HTML/CSS is like understanding the basic material that the web is made of, which is arguably very important. However, keep the fun factory priority #1, and don't let any specific topic burn you out.</text>
  </message>
  <message>
    <ts>2017-07-02T21:39:48.847449</ts>
    <user>U635238TG</user>
    <text>got it. i will jump on those html/css tutorials. but i'm still doing some elm stuff at the same time. you can't stop me jessta! lol, jk</text>
  </message>
  <message>
    <ts>2017-07-02T21:40:54.856481</ts>
    <user>U5D4VHEN7</user>
    <text>This was my intro to HTML/CSS, and I highly recommend it &lt;https://dash.generalassemb.ly/&gt;. Don't have any experience with the one you linked prior, but it definitely looks decent at a glance.</text>
  </message>
  <message>
    <ts>2017-07-02T21:41:24.860306</ts>
    <user>U5D4VHEN7</user>
    <text>It's very compartmentalized too, so easy to do in chunks</text>
  </message>
  <message>
    <ts>2017-07-02T21:42:34.869094</ts>
    <user>U635238TG</user>
    <text>will do. i appreciate it. i'm almost sad i'm doing a 10 day meditation retreat starting wed. But i'm going to have some uber focus when I get back to this.</text>
  </message>
  <message>
    <ts>2017-07-02T21:43:18.874757</ts>
    <user>U5D4VHEN7</user>
    <text>Hahaha, I feel you there. Haven't done a meditation retreat, but have had a lot of experiences with other things taking up my time when I'm just super stoked to program/learn some new language.</text>
  </message>
  <message>
    <ts>2017-07-02T22:50:15.419761</ts>
    <user>U3LUC6SNS</user>
    <text>I am installing my app on another machine.  It uses webpack.  Have been following the directions at &lt;https://www.elm-tutorial.org/en-v01/04-starting/06-webpack-4.html&gt;, but when I do `yarn start`, I get this message: 
```
 Error: Cannot find module '/Users/carlson/Documents/dev/koko_client/api.js'
```</text>
  </message>
  <message>
    <ts>2017-07-02T22:50:33.422521</ts>
    <user>U3LUC6SNS</user>
    <text>I've obviously missed something, but don't see what it is</text>
  </message>
  <message>
    <ts>2017-07-02T22:51:01.426310</ts>
    <user>U3LUC6SNS</user>
    <text>Indeed there is no `api.js`, but I don't know what to do to create it.</text>
  </message>
  <message>
    <ts>2017-07-02T23:40:11.808915</ts>
    <user>U5D4VHEN7</user>
    <text>Do you have this app on github?</text>
  </message>
  <message>
    <ts>2017-07-02T23:55:23.927675</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U5D4VHEN7&gt; Yes, here it is: &lt;https://github.com/jxxcarlson/koko_elm_client&gt;</text>
  </message>
  <message>
    <ts>2017-07-03T00:04:26.001644</ts>
    <user>U5D4VHEN7</user>
    <text>Taking a look :eyes:</text>
  </message>
  <message>
    <ts>2017-07-03T00:04:46.004227</ts>
    <user>U3LUC6SNS</user>
    <text>:slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-03T00:10:48.052581</ts>
    <user>U62PV9CPN</user>
    <text>Hi folks, I was wondering what the leading dot notation was about in rtfeldman's `elm-validate` package was?

The example given:
```
validateModel : Model -&amp;gt; List (Field, String)
validateModel =
    Validate.all
        [ .name  &amp;gt;&amp;gt; ifBlank (Name, "Please enter a name.")
        , .email &amp;gt;&amp;gt; ifBlank (Email, "Please enter an email address.")
        , .age   &amp;gt;&amp;gt; ifNotInt (Age, "Age must be a whole number.")
        ]
```

I feel like that means to implicitly access members of the Model record without needing specify it as an actual argument, but the type of something like `.name` is kinda funny:

 `{ a | name : String } -&amp;gt; String`</text>
  </message>
  <message>
    <ts>2017-07-03T00:11:40.059242</ts>
    <user>U62PV9CPN</user>
    <text>I'm trying to pass `.name` into a function of my own, and I thought it would be a `String` but I think this is saying it's a function of some kind?</text>
  </message>
  <message>
    <ts>2017-07-03T00:12:33.066547</ts>
    <user>U62U9DUN6</user>
    <text>I'm wondering if there's a simpler way to get a random int than by using the core random module?</text>
  </message>
  <message>
    <ts>2017-07-03T00:13:08.070951</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U62PV9CPN&gt; `foo.bar` and `.bar foo` are equivalent</text>
  </message>
  <message>
    <ts>2017-07-03T00:13:35.074593</ts>
    <user>U5D4VHEN7</user>
    <text>&lt;@U3LUC6SNS&gt; from a bit of poking around, it looks like there are some bits missing from this application? It seems to want to call `api.js`, which I think might be `server.js`, and it looks like it also is trying to talk to a Phoenix Websocket channel. I can get you part of the way there: just running `./node_modules/.bin/webpack-dev-server` will at least get the frontend to run</text>
  </message>
  <message>
    <ts>2017-07-03T00:36:08.250770</ts>
    <user>U62PV9CPN</user>
    <text>&lt;@U3LUC6SNS&gt; What is a `subject` and `error` in the context of this source? Are they built into elm?

&lt;https://github.com/rtfeldman/elm-validate/blob/1.1.3/src/Validate.elm&gt;</text>
  </message>
  <message>
    <ts>2017-07-03T00:37:47.263233</ts>
    <user>U62PV9CPN</user>
    <text>oh wait, are those args for the Validator type? (args is probably the wrong word…)</text>
  </message>
  <message>
    <ts>2017-07-03T00:37:57.264418</ts>
    <user>U62PV9CPN</user>
    <text>so they're kinda arbitrary?</text>
  </message>
  <message>
    <ts>2017-07-03T00:39:32.276288</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U5D4VHEN7&gt; Thanks, I tried that and got further than before.  The first error was 
```
ERROR in ./src/index.html
Module parse failed: /Users/carlson/Documents/dev/koko_client/src/index.html Unexpected token (1:0)
You may need an appropriate loader to handle this file type.
```
which seems a bit odd.  Any idea of why that is happenning?

I'm rebuilding the app and my development environment on my wife's computer from a working repo .. my computer no longer recognizes the keyboard and we are far from civilization for a week. :rage:</text>
  </message>
  <message>
    <ts>2017-07-03T00:41:34.292527</ts>
    <user>U3LUC6SNS</user>
    <text>Yes, the app talks to a Phoenix server using both http and websockets.</text>
  </message>
  <message>
    <ts>2017-07-03T00:41:50.294541</ts>
    <user>U3LUC6SNS</user>
    <text>Did you get the app to run?</text>
  </message>
  <message>
    <ts>2017-07-03T00:42:23.298568</ts>
    <user>U3LUC6SNS</user>
    <text>My last message from webpack was `failed to compile`</text>
  </message>
  <message>
    <ts>2017-07-03T00:45:48.325598</ts>
    <user>U3LUC6SNS</user>
    <text>Of course, "working repo" means that the app was working on the other machine and the github repo represents it except for .gitignored files :angry:</text>
  </message>
  <message>
    <ts>2017-07-03T00:46:26.330587</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U62PV9CPN&gt;, not sure what you are referring to.</text>
  </message>
  <message>
    <ts>2017-07-03T00:48:20.345764</ts>
    <user>U62PV9CPN</user>
    <text>Sorry, still wrestling with the `elm-validate` package, trying to use it to validate a username's length is valid, so I'm looking at the source:

&lt;https://github.com/rtfeldman/elm-validate/blob/1.1.3/src/Validate.elm&gt;

And I see on line 24 the type alias for `Validator` and was trying to figure out what `error` and `subject` were, but I realized now that they are types supplied by the app, not some native elm thing.</text>
  </message>
  <message>
    <ts>2017-07-03T00:48:39.348297</ts>
    <user>U62PV9CPN</user>
    <text>So I'm slowly grocking the dark magicks at work here</text>
  </message>
  <message>
    <ts>2017-07-03T00:50:41.364677</ts>
    <user>U62PV9CPN</user>
    <text>On line 94 I see that `ifNotInt` is the only function which does not appear to return a call to `ifInvalid` with a bool argument, and it's the only function that takes both a `subject` and an `error` as it's args, so that means the other functions are leveraging some currying since they use the `ifInvalid` function but only provide an `error` arg?</text>
  </message>
  <message>
    <ts>2017-07-03T00:59:02.431889</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U62PV9CPN&gt; yep, other functions are ‘partially applying' the first argument of the `ifInvalid` function</text>
  </message>
  <message>
    <ts>2017-07-03T00:59:41.437026</ts>
    <user>U62PV9CPN</user>
    <text>I *think* I'm starting to get what's going on…

If I modify the source of the package in `elm-stuff` will it be compiled when I reload the page? Or will my changes be wiped?</text>
  </message>
  <message>
    <ts>2017-07-03T00:59:50.438246</ts>
    <user>U153UK3FA</user>
    <text>`subject` and `error` are type parameters, they can be any type</text>
  </message>
  <message>
    <ts>2017-07-03T01:00:10.441640</ts>
    <user>U62PV9CPN</user>
    <text>Instead of messing around in my app, maybe I can contribute something when I figure this out… would be kinda neat</text>
  </message>
  <message>
    <ts>2017-07-03T01:01:22.453192</ts>
    <user>U153UK3FA</user>
    <text>any lowercase identifier in a type signature is a ‘type parameter'</text>
  </message>
  <message>
    <ts>2017-07-03T01:51:42.882707</ts>
    <user>U2D7NUGS1</user>
    <text>Good morning! (It's morning here :)</text>
  </message>
  <message>
    <ts>2017-07-03T01:52:01.885578</ts>
    <user>U2D7NUGS1</user>
    <text>Any hints how to implement a custom Json Decoder?</text>
  </message>
  <message>
    <ts>2017-07-03T01:52:48.892671</ts>
    <user>U2D7NUGS1</user>
    <text>I have a `Decode.Decoder String` and want to turn it into `Decode.Decoder MyCustomType`</text>
  </message>
  <message>
    <ts>2017-07-03T01:55:20.916314</ts>
    <user>U2D7NUGS1</user>
    <text>Let's say I have a Json.Decode.Value that holds only a string, like `"a"` or `"b"` or `"c"`. I also have a type `MyCustomType = A | B | C`.</text>
  </message>
  <message>
    <ts>2017-07-03T01:57:38.938318</ts>
    <user>U2D7NUGS1</user>
    <text>I know I can use a `decodeValue` to get a string and then pattern match it and return `MyCustomType`, but I want to get a decoder so I can use it in decoding larger JSON structure, say: ```
{
  name: "Bob",
  type: "a"
}
```</text>
  </message>
  <message>
    <ts>2017-07-03T01:58:27.946264</ts>
    <user>U2D7NUGS1</user>
    <text>So I guess I still need pattern matching, but without actual decoding.</text>
  </message>
  <message>
    <ts>2017-07-03T01:59:29.955757</ts>
    <user>U2D7NUGS1</user>
    <text>Shall I use `Decode.map`?</text>
  </message>
  <message>
    <ts>2017-07-03T02:17:29.148578</ts>
    <user>U2D7NUGS1</user>
    <text>Ok, got it! In case someone wonders, here is a sample code for decoding `string` into `type`: ```
decodeAttribute : Decode.Value -&amp;gt; Attribute
decodeAttribute json =
    let
        stringToValueType string =
            case string of
                "boolean" -&amp;gt;
                    Boolean

                "string" -&amp;gt;
                    String

                "number" -&amp;gt;
                    Numerical

                _ -&amp;gt;
                    Other

        typeDecoder : Decode.Decoder ValueType
        typeDecoder =
            Decode.map stringToValueType Decode.string

        attributeDecoder =
            Decode.map2 Attribute
                (&lt;http://Decode.at|Decode.at&gt; [ "name" ] Decode.string)
                (&lt;http://Decode.at|Decode.at&gt; [ "type" ] typeDecoder)
    in
        case Decode.decodeValue attributeDecoder json of
            Ok attribute -&amp;gt;
                attribute

            Err message -&amp;gt;
                Debug.crash message
```</text>
  </message>
  <message>
    <ts>2017-07-03T02:20:01.176683</ts>
    <user>U2D7NUGS1</user>
    <text>Still JSON decoding feels a little bit like black magic to me.</text>
  </message>
  <message>
    <ts>2017-07-03T02:39:27.405501</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U2D7NUGS1&gt; which part feels like magic?</text>
  </message>
  <message>
    <ts>2017-07-03T02:56:28.630514</ts>
    <user>U2D7NUGS1</user>
    <text>It's hard to pin it down. I guess that's the thing about magic :magic_wand:</text>
  </message>
  <message>
    <ts>2017-07-03T03:08:29.814920</ts>
    <user>U153UK3FA</user>
    <text>`Decode.map2 Attribute` is often something that people mention</text>
  </message>
  <message>
    <ts>2017-07-03T03:12:11.871293</ts>
    <user>U153UK3FA</user>
    <text>`(&lt;http://Decode.at|Decode.at&gt; [ "name" ] Decode.string)` is pretty straight forward</text>
  </message>
  <message>
    <ts>2017-07-03T03:13:07.885537</ts>
    <user>U153UK3FA</user>
    <text>`Decode.map stringToValueType Decode.string` is just a `map` and it works like most other `map` functions. eg. `Maybe.map`, `List.map` etc.</text>
  </message>
  <message>
    <ts>2017-07-03T03:16:35.939198</ts>
    <user>U604S603Y</user>
    <text>I find writing json decoders hard because the error messages look really crazy when I mess up - and as a beginner I mess them up constantly. And I'm probably pampered already by the other Elm compiler error messages...</text>
  </message>
  <message>
    <ts>2017-07-03T03:38:02.296311</ts>
    <user>U2D7NUGS1</user>
    <text>&lt;@U153UK3FA&gt; you are right and I'm not really complaining. Probably it's just my brain rewiring from imperative to FP.</text>
  </message>
  <message>
    <ts>2017-07-03T03:42:35.377880</ts>
    <user>U2D7NUGS1</user>
    <text>Probably the difficult part is composing decoders. In JS you would just travers value. In Elm you have to think in more abstract terms.</text>
  </message>
  <message>
    <ts>2017-07-03T03:43:53.400920</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, you have to compose them to match the intended structure. It's a somewhat different way of thinking, indeed.</text>
  </message>
  <message>
    <ts>2017-07-03T03:44:49.417096</ts>
    <user>U2D7NUGS1</user>
    <text>It's very good. Just takes a change of a mindset.</text>
  </message>
  <message>
    <ts>2017-07-03T04:29:06.293166</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U604S603Y&gt; are you using elm-decoder-pipeline ? That trades nicer API against good error messages</text>
  </message>
  <message>
    <ts>2017-07-03T04:58:56.937777</ts>
    <user>U604S603Y</user>
    <text>yes, I am using elm-decoder-pipeline</text>
  </message>
  <message>
    <ts>2017-07-03T06:01:48.299820</ts>
    <user>U3LUC6SNS</user>
    <text>Hello all!  I've transferred the entire folder containing my app from my dev machine (with inoperative keyboard) to my wife's computer.  On the latter I have installed elm, node, webpack, etc.  However, when I run `yarn start`, I get this error message:
```
$ yarn start
yarn start v0.27.5
$ nf start
[WARN] No ENV file found
5:52:52 AM api.1    |  module.js:487
5:52:52 AM api.1    |      throw err;
5:52:52 AM api.1    |      ^
5:52:52 AM api.1    |  Error: Cannot find module '/Users/carlson/Documents/dev/koko_client2/api.js'
5:52:52 AM api.1    |      at Function.Module._resolveFilename (module.js:485:15)
5:52:52 AM api.1    |      at Function.Module._load (module.js:437:25)
5:52:52 AM api.1    |      at Function.Module.runMain (module.js:605:10)
5:52:52 AM api.1    |      at startup (bootstrap_node.js:158:16)
5:52:52 AM api.1    |      at bootstrap_node.js:575:3
5:52:52 AM api.1    |  error Command failed with exit code 1.
[DONE] Killing all processes with signal  null
internal/util.js:183
  throw new errors.Error('ERR_UNKNOWN_SIGNAL', signal);
  ^

Error [ERR_UNKNOWN_SIGNAL]: Unknown signal: null
    at convertToValidSignal (internal/util.js:183:9)
    at ChildProcess.kill (internal/child_process.js:373:5)
    at EventEmitter.&amp;lt;anonymous&amp;gt; (/Users/carlson/Documents/dev/koko_client2/node_modules/foreman/lib/proc.js:54:11)
    at emitOne (events.js:120:20)
    at EventEmitter.emit (events.js:210:7)
    at ChildProcess.&amp;lt;anonymous&amp;gt; (/Users/carlson/Documents/dev/koko_client2/node_modules/foreman/lib/proc.js:50:13)
    at emitTwo (events.js:125:13)
    at ChildProcess.emit (events.js:213:7)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:197:12)
error Command failed with exit code 1.
```
I've missed something, but have no idea what it is.</text>
  </message>
  <message>
    <ts>2017-07-03T06:06:48.400211</ts>
    <user>U3SJEDR96</user>
    <text>to be fair, &lt;@U3LUC6SNS&gt;, I didn't see an api.js when I had a look at your code last week.. I did see a `server.js` though, but that seems a mock at most</text>
  </message>
  <message>
    <ts>2017-07-03T06:07:24.411911</ts>
    <user>U3SJEDR96</user>
    <text>can you check if there _is_ an api.js on your (former) dev machine? Plugging in an external keyboard might help..</text>
  </message>
  <message>
    <ts>2017-07-03T06:08:14.427488</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, I'll investigate -- thanks!</text>
  </message>
  <message>
    <ts>2017-07-03T06:18:42.624102</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, just looked at the old app folder.  No `api.js` file there.  Interestingly enough, when I run `yarn start` there, I get a similar error message.: `Cannot find model ...koko_client/api.js` etc.  But it is much shorter.  It ends with `Killing all processs with signal null ... Exited with code 1`  But then it goes on to say `Project is running at http://...3000`</text>
  </message>
  <message>
    <ts>2017-07-03T06:19:15.633693</ts>
    <user>U3LUC6SNS</user>
    <text>Hard to do much on the old machine since I can't type a space with the  incompatible keyboard.</text>
  </message>
  <message>
    <ts>2017-07-03T06:20:31.656653</ts>
    <user>U3LUC6SNS</user>
    <text>server.js is an express web server.  I looked in webpack.config.js and found no `api.js`</text>
  </message>
  <message>
    <ts>2017-07-03T06:22:29.691933</ts>
    <user>U3LUC6SNS</user>
    <text>Ah here it is: in `package.json`:
```
"scripts": {
    "api": "node api.js",
    "build": "webpack",
    "client": "webpack-dev-server --port 3000",
    "start": "nf start"
  },
```</text>
  </message>
  <message>
    <ts>2017-07-03T06:24:28.728250</ts>
    <user>U3SJEDR96</user>
    <text>right. So your Procfile probably has a `yarn client` in there somewhere... It's a little odd that foreman decides to stop on your current machine, but continued on your older machine. I suppose you can remove the `yarn api` part of your Procfile for now..</text>
  </message>
  <message>
    <ts>2017-07-03T06:29:49.821035</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt; Commented out `api yarn api` in `Procfile`.  The error is now
```
172-10-18-240:koko_client2 carlson$ yarn start
yarn start v0.27.5
$ nf start
[WARN] No ENV file found
6:27:11 AM client.1 |  sh: webpack-dev-server: command not found
6:27:11 AM client.1 |  error Command failed with exit code 127.
```
Could there be a problem with `PATH`?  It is now
```
172-10-18-240:koko_client2 carlson$ echo $PATH
/Users/carlson/Library/Haskell/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/carlson/.rvm/bin:/Users/carlson/dev/node_modules/mathjax-node/bin
```</text>
  </message>
  <message>
    <ts>2017-07-03T06:31:17.848130</ts>
    <user>U3SJEDR96</user>
    <text>it seems to expect webpack to be installed globally</text>
  </message>
  <message>
    <ts>2017-07-03T06:31:33.853150</ts>
    <user>U3LUC6SNS</user>
    <text>OK, how would I do that?</text>
  </message>
  <message>
    <ts>2017-07-03T06:32:13.865364</ts>
    <user>U0CLDU8UB</user>
    <text>`yarn global add webpack`</text>
  </message>
  <message>
    <ts>2017-07-03T06:32:14.865867</ts>
    <user>U3SJEDR96</user>
    <text>yarn global add webpack would probably fix that, though I do suggest trying to make sure it uses the local path</text>
  </message>
  <message>
    <ts>2017-07-03T06:34:22.904469</ts>
    <user>U3LUC6SNS</user>
    <text>I'll give these suggestions a try.  Thanks &lt;@U3SJEDR96&gt; and &lt;@U0CLDU8UB&gt; Yikes</text>
  </message>
  <message>
    <ts>2017-07-03T06:35:10.919249</ts>
    <user>U3LUC6SNS</user>
    <text>Yikes what a pain this is!!! I did `yarn global add webpack`, then `yarn start`  Error message is
```
172-10-18-240:koko_client2 carlson$ yarn start
yarn start v0.27.5
$ nf start
[WARN] No ENV file found
6:33:28 AM client.1 |  sh: webpack-dev-server: command not found
6:33:28 AM client.1 |  error Command failed with exit code 127.
[DONE] Killing all processes with signal  null
internal/util.js:183
  throw new errors.Error('ERR_UNKNOWN_SIGNAL', signal);
```</text>
  </message>
  <message>
    <ts>2017-07-03T06:36:16.939062</ts>
    <user>U3LUC6SNS</user>
    <text>`$ which webpack` returns nothing</text>
  </message>
  <message>
    <ts>2017-07-03T06:36:18.939669</ts>
    <user>U0CLDU8UB</user>
    <text>ahh, `webpack-dev-server` is being used directly in the scripts, too</text>
  </message>
  <message>
    <ts>2017-07-03T06:36:26.941837</ts>
    <user>U3LUC6SNS</user>
    <text>Yes</text>
  </message>
  <message>
    <ts>2017-07-03T06:36:51.949384</ts>
    <user>U3SJEDR96</user>
    <text>can you test `yarn client`?</text>
  </message>
  <message>
    <ts>2017-07-03T06:37:32.961492</ts>
    <user>U3LUC6SNS</user>
    <text>```
172-10-18-240:koko_client2 carlson$ yarn client
yarn client v0.27.5
$ webpack-dev-server --port 3000
sh: webpack-dev-server: command not found
error Command failed with exit code 127.
```</text>
  </message>
  <message>
    <ts>2017-07-03T06:37:51.966821</ts>
    <user>U3SJEDR96</user>
    <text>did you run `yarn` to install npm dependencies?</text>
  </message>
  <message>
    <ts>2017-07-03T06:38:32.978888</ts>
    <user>U3LUC6SNS</user>
    <text>I don't believe so.  Doing that now  Lots of activity.</text>
  </message>
  <message>
    <ts>2017-07-03T06:38:39.980735</ts>
    <user>U3SJEDR96</user>
    <text>:thumbsup:</text>
  </message>
  <message>
    <ts>2017-07-03T06:40:39.015120</ts>
    <user>U0CLDU8UB</user>
    <text>and if that doesn't get you any further, then maybe `yarn global add webpack-dev-server`?</text>
  </message>
  <message>
    <ts>2017-07-03T06:44:56.090031</ts>
    <user>U3LUC6SNS</user>
    <text>All working!!! I had to kill some stray `webpack` processes, but then ... YAY!!  Thanks so much. Would never have been able to do this by myself.</text>
  </message>
  <message>
    <ts>2017-07-03T07:05:32.450051</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U4BJ8UDCP&gt; module names in elm match the filesystem 1-1: `src/Foo/Bar.elm` corresponds to `module Foo.Bar`. Case sensitivity is also important.</text>
  </message>
  <message>
    <ts>2017-07-03T07:05:59.457585</ts>
    <user>U3SJEDR96</user>
    <text>(the above assumes `"source-directories": ["src"]`)</text>
  </message>
  <message>
    <ts>2017-07-03T07:06:07.460094</ts>
    <user>U4BJ8UDCP</user>
    <text>Hi there - I'm having some trouble with the module system - The compiler can't find one of my modules.

in my ```elm-package.json``` my only source-directory is written as "source".

my folder hierarchy is:
```
/source
    /server
        Main.elm (named "Server.Main")
        Request.elm (named "Server.Request")
```
Server.Main fails to import Server.Request :disappointed:</text>
  </message>
  <message>
    <ts>2017-07-03T07:06:42.469974</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, go for `/Server` instead :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-03T07:07:09.477521</ts>
    <user>U4BJ8UDCP</user>
    <text>in the package.json?</text>
  </message>
  <message>
    <ts>2017-07-03T07:07:34.484188</ts>
    <user>U1P6FFJ64</user>
    <text>in the folder structure</text>
  </message>
  <message>
    <ts>2017-07-03T07:07:43.486739</ts>
    <user>U4BJ8UDCP</user>
    <text>ah</text>
  </message>
  <message>
    <ts>2017-07-03T07:07:44.487156</ts>
    <user>U1P6FFJ64</user>
    <text>and the package too</text>
  </message>
  <message>
    <ts>2017-07-03T07:08:14.495058</ts>
    <user>U3SJEDR96</user>
    <text>the `elm-package.json` doesn't need any changes, but the directory needs to match the module-name, exactly</text>
  </message>
  <message>
    <ts>2017-07-03T07:08:37.501603</ts>
    <user>U4BJ8UDCP</user>
    <text>the funny thing is - it was working great on my macbook, but now I'm on my ubuntu machine it isn't working :disappointed:</text>
  </message>
  <message>
    <ts>2017-07-03T07:09:13.511453</ts>
    <user>U1P6FFJ64</user>
    <text>Mac is case insensitive on the folders</text>
  </message>
  <message>
    <ts>2017-07-03T07:09:29.516195</ts>
    <user>U4BJ8UDCP</user>
    <text>oooooooooh :slightly_smiling_face: makes a lot of sense now</text>
  </message>
  <message>
    <ts>2017-07-03T07:10:04.525646</ts>
    <user>U4BJ8UDCP</user>
    <text>thanks guys ^_^</text>
  </message>
  <message>
    <ts>2017-07-03T07:42:08.057557</ts>
    <user>U2D5SAEMN</user>
    <text>&lt;@U0CLDU8UB&gt; I made `EverySet` today: &lt;https://gist.github.com/leonderijke/18f04f991a5f1945876e285249f5c8ad&gt; For now, only the functions I needed in the project, but is does work. Is this what you had in mind?</text>
  </message>
  <message>
    <ts>2017-07-03T07:42:43.067577</ts>
    <user>U0CLDU8UB</user>
    <text>Yep, that's exactly it! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-03T07:44:29.096403</ts>
    <user>U2D5SAEMN</user>
    <text>Cool, thanks!</text>
  </message>
  <message>
    <ts>2017-07-03T08:23:19.800524</ts>
    <user>U3LT1UTPF</user>
    <text>Hi! I have a type CycleList which contains List Cycle:</text>
  </message>
  <message>
    <ts>2017-07-03T08:23:32.804275</ts>
    <user>U3LT1UTPF</user>
    <text>`type alias CycleList =    { cycleList : List Cycle }`</text>
  </message>
  <message>
    <ts>2017-07-03T08:25:13.837064</ts>
    <user>U3LT1UTPF</user>
    <text>`type alias Cycle = { cycle : String , productList : List Product }`</text>
  </message>
  <message>
    <ts>2017-07-03T08:25:56.851416</ts>
    <user>U3LT1UTPF</user>
    <text>Cycle.cycle is a date in form of a string 'yyymmdd'</text>
  </message>
  <message>
    <ts>2017-07-03T08:26:50.868901</ts>
    <user>U3LT1UTPF</user>
    <text>What I want to do is find the latest Cycle (with the greatest string)</text>
  </message>
  <message>
    <ts>2017-07-03T08:27:23.879628</ts>
    <user>U3LT1UTPF</user>
    <text>I tried to do it with foldl, but I don't know if it's the way to go</text>
  </message>
  <message>
    <ts>2017-07-03T08:30:53.951622</ts>
    <user>U2D5SAEMN</user>
    <text>There's also `List.maximum` you could use to find the maximum element in a list: &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/List#maximum&gt;</text>
  </message>
  <message>
    <ts>2017-07-03T08:31:57.972897</ts>
    <user>U2D5SAEMN</user>
    <text>Maybe you can express `yyyymmdd` as an Int instead of a String? That would make the comparison easier, I'd say.</text>
  </message>
  <message>
    <ts>2017-07-03T08:33:16.999491</ts>
    <user>U3SJEDR96</user>
    <text>strings are just as comparable, and `yyyymmdd` especially. As for getting the maximum; it's a little annoying that there is no `List.maximumBy : (a -&amp;gt; comparable) -&amp;gt; List a -&amp;gt; Maybe a`</text>
  </message>
  <message>
    <ts>2017-07-03T08:33:48.009749</ts>
    <user>U3SJEDR96</user>
    <text>but as luck would have it, `List.Extra` has _exactly_ that :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-03T08:33:54.011878</ts>
    <user>U3SJEDR96</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-community/list-extra/6.1.0/List-Extra#maximumBy&gt;</text>
  </message>
  <message>
    <ts>2017-07-03T08:36:41.067462</ts>
    <user>U3LT1UTPF</user>
    <text>Then it would be `List.maximumBy cycleList.cycleList.cycle cycleList` ?</text>
  </message>
  <message>
    <ts>2017-07-03T08:38:37.106229</ts>
    <user>U62PV9CPN</user>
    <text>So I have a validation function which checks the length of a String, what type would I use such that I could provide a type `a` which I know supported `length`? So my function could take more than `String` (say `List`, `Set`, etc)</text>
  </message>
  <message>
    <ts>2017-07-03T08:39:29.123375</ts>
    <user>U62PV9CPN</user>
    <text>```
isLongerThan : Int -&amp;gt; String -&amp;gt; Bool
isLongerThan minLength subject =
    (String.length subject) &amp;gt; minLength
```</text>
  </message>
  <message>
    <ts>2017-07-03T08:43:45.211580</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U3LT1UTPF&gt;  close - it would be `List.maximumBy .cycle cycleList.cycleList` - though if you name your type alias "somethingList", it would make senseif it were an alias for a list, not a record. You can use `type alias CycleList = List Cycle` and get rid of the extra step that way :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-03T08:45:28.247380</ts>
    <user>U3LT1UTPF</user>
    <text>&lt;@U3SJEDR96&gt; Yes, I know. I did it so because it is info from a JSON decoding.</text>
  </message>
  <message>
    <ts>2017-07-03T08:45:35.249913</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U62PV9CPN&gt; unfortunately, there is no such thing - that would be a typeclass</text>
  </message>
  <message>
    <ts>2017-07-03T08:46:12.262666</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U3LT1UTPF&gt; Ah, okay. If you want, I'm pretty sure we can make your json-decoder return just that list, rather than a record, tho...</text>
  </message>
  <message>
    <ts>2017-07-03T08:46:24.267318</ts>
    <user>U3SJEDR96</user>
    <text>the nice thing about json decoders is that they can decouple representations</text>
  </message>
  <message>
    <ts>2017-07-03T08:49:01.322631</ts>
    <user>U3LT1UTPF</user>
    <text>Ok, let's try</text>
  </message>
  <message>
    <ts>2017-07-03T08:50:28.354646</ts>
    <user>U3LT1UTPF</user>
    <text>```
cycleListDecoder : JD.Decoder CycleList
cycleListDecoder =    
    succeed
    CycleList        
    |: (field "cycleList" (list cycleDecoder))

cycleDecoder : JD.Decoder Cycle
cycleDecoder =
    succeed
        Cycle
        |: (field "cycle" string)
        |: (field "productList" (list productDecoder))
```</text>
  </message>
  <message>
    <ts>2017-07-03T08:50:47.361442</ts>
    <user>U3SJEDR96</user>
    <text>```
cycleListDecoder : JD.Decoder (List Cycle)
cycleListDecoder =    
   field "cycleList" (list cycleDecoder)
```</text>
  </message>
  <message>
    <ts>2017-07-03T08:52:01.388098</ts>
    <user>U3LT1UTPF</user>
    <text>I don't know how to get that beautiful formatting...</text>
  </message>
  <message>
    <ts>2017-07-03T08:52:26.397357</ts>
    <user>U3SJEDR96</user>
    <text>try three backticks, newline *code* newline, three backticks</text>
  </message>
  <message>
    <ts>2017-07-03T08:53:37.423346</ts>
    <user>U3SJEDR96</user>
    <text>anyway, just removing the `succeed CycleList |:` part should do the trick, since that's essentially saying "decode into this function", and `CycleList` is a function which creates a record :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-03T08:54:29.442591</ts>
    <user>U3LT1UTPF</user>
    <text>Thank you so much, &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-03T09:38:13.499948</ts>
    <user>U2FL3ARLG</user>
    <text>I read that as cyclist at first :bicyclist: Shouldn't have watched the tour de france…</text>
  </message>
  <message>
    <ts>2017-07-03T09:40:02.545959</ts>
    <user>U3LT1UTPF</user>
    <text>It has more to do with weather forecast models :blush::wink:</text>
  </message>
  <message>
    <ts>2017-07-03T09:59:45.059061</ts>
    <user>U638BAUJZ</user>
    <text>Hi everyone. I'm a beginner and need some help with controls that are ignoring my inputs on a specific page of my web app.
On 10:10 of the video, &lt;https://www.youtube.com/watch?v=qFaFL7G2ijs&gt;, I explain the bug.
The source code can be found here: &lt;https://github.com/Lambda-Cartel/Nikeza&gt;</text>
  </message>
  <message>
    <ts>2017-07-03T10:11:43.376658</ts>
    <user>U623QK78C</user>
    <text>Is it possible to merge types?</text>
  </message>
  <message>
    <ts>2017-07-03T10:13:09.414290</ts>
    <user>U623QK78C</user>
    <text>Without composing, I mean.</text>
  </message>
  <message>
    <ts>2017-07-03T10:16:14.492581</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U623QK78C&gt; nope</text>
  </message>
  <message>
    <ts>2017-07-03T10:40:14.129365</ts>
    <user>U623QK78C</user>
    <text>I'm trying to create a module which uses ports and to integrate it a Main app.</text>
  </message>
  <message>
    <ts>2017-07-03T10:41:18.157811</ts>
    <user>U623QK78C</user>
    <text>But subscriptions require some Msg type so the module has a Msg and the MAin has as well</text>
  </message>
  <message>
    <ts>2017-07-03T10:41:38.166799</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U638BAUJZ&gt; I tried to have a look but there's a whole lot of code and it doesn't seem all that easy to get the app working locally in order to reproduce it</text>
  </message>
  <message>
    <ts>2017-07-03T10:41:43.168755</ts>
    <user>U623QK78C</user>
    <text>Is my thinking wrong here?</text>
  </message>
  <message>
    <ts>2017-07-03T10:42:50.197971</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U623QK78C&gt; yeah, so a subscription looks like this: port mySub : (IncomingType -&amp;gt; msg) -&amp;gt; Sub msg` right? In order to use that from your main app, you can just have a `subscriptions = mySub MyMsg` there - there is no need to insert an extra layer somewhere in between</text>
  </message>
  <message>
    <ts>2017-07-03T10:44:17.236155</ts>
    <user>U623QK78C</user>
    <text>&lt;@U3SJEDR96&gt; in the Main? or the Port?</text>
  </message>
  <message>
    <ts>2017-07-03T10:44:53.251616</ts>
    <user>U3SJEDR96</user>
    <text>in the port module, you'd have `port mySub : (IncomingType -&amp;gt; msg) -&amp;gt; Sub msg`. In the main module, you'd have `subscriptions = mySub MyMsg`</text>
  </message>
  <message>
    <ts>2017-07-03T10:45:25.266288</ts>
    <user>U623QK78C</user>
    <text>yes, that is what I currently have.</text>
  </message>
  <message>
    <ts>2017-07-03T10:46:46.301493</ts>
    <user>U623QK78C</user>
    <text>It works, but the Msg type of the Main now needs to have every MyMsg as well as the actual app commands.</text>
  </message>
  <message>
    <ts>2017-07-03T10:47:51.329510</ts>
    <user>U623QK78C</user>
    <text>So the Msg type of the Main became unwieldy, so I was hoping to off-load a few message definitions to the Port module.</text>
  </message>
  <message>
    <ts>2017-07-03T10:49:10.363138</ts>
    <user>U623QK78C</user>
    <text>```type Msg = PortMsg Port.Msg | &amp;lt;rest...&amp;gt;```</text>
  </message>
  <message>
    <ts>2017-07-03T10:49:28.370990</ts>
    <user>U623QK78C</user>
    <text>seemed not really the solution</text>
  </message>
  <message>
    <ts>2017-07-03T10:51:19.420025</ts>
    <user>U3SJEDR96</user>
    <text>Ah. Well that's a possibility too, but then you're spreading out the logic of your application; which might make sense, depending on your exact use-case. To do that, you'd create a `subscribeToThis : (Msg -&amp;gt; wrapper) -&amp;gt; Sub wrapper` function in the port module, and give it an implementation like `subscribeToThis wrapper = mySub SomePortMessage |&amp;gt; Sub.map wrapper`</text>
  </message>
  <message>
    <ts>2017-07-03T10:53:44.484635</ts>
    <user>U623QK78C</user>
    <text>I see</text>
  </message>
  <message>
    <ts>2017-07-03T10:55:35.534046</ts>
    <user>U623QK78C</user>
    <text>If I wanted to put the port logic into a separate module as a reusable package is that the way to do it?</text>
  </message>
  <message>
    <ts>2017-07-03T10:57:47.591434</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, pretty much. Though keep in mind that port modules cannot be shared on &lt;http://package.elm-lang.org|package.elm-lang.org&gt;</text>
  </message>
  <message>
    <ts>2017-07-03T11:44:22.782781</ts>
    <user>U623QK78C</user>
    <text>Thanx</text>
  </message>
  <message>
    <ts>2017-07-03T11:45:54.819781</ts>
    <user>U61RNCASK</user>
    <text>Anyone know when Elm 0.19 is expected roughly? 2017? 2018?</text>
  </message>
  <message>
    <ts>2017-07-03T11:46:48.841408</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://github.com/elm-lang/projects/blob/master/roadmap.md#what-is-the-timeline&gt;</text>
  </message>
  <message>
    <ts>2017-07-03T11:47:19.854070</ts>
    <user>U0CLDU8UB</user>
    <text>If I had to guess I'd say this year, based on nothing in particular :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-03T11:47:38.861591</ts>
    <user>U0FP80EKB</user>
    <text>I'm hoping for October-ish :slightly_smiling_face: We could start a betting pool</text>
  </message>
  <message>
    <ts>2017-07-03T11:48:38.885041</ts>
    <user>U61RNCASK</user>
    <text>Glad to hear that 2017 is more likely than 2018.</text>
  </message>
  <message>
    <ts>2017-07-03T11:55:19.041710</ts>
    <user>U0FP80EKB</user>
    <text>Mine, like &lt;@U0CLDU8UB&gt;'s, is based on pure wishing, not on any actual knowledge or anything.</text>
  </message>
  <message>
    <ts>2017-07-03T11:56:41.073793</ts>
    <user>U61RNCASK</user>
    <text>Is the work in progress publicly accessible on GitHub?</text>
  </message>
  <message>
    <ts>2017-07-03T11:57:04.082799</ts>
    <user>U0FP80EKB</user>
    <text>&lt;https://github.com/elm-lang&gt;</text>
  </message>
  <message>
    <ts>2017-07-03T11:57:20.089260</ts>
    <user>U0FP80EKB</user>
    <text>Although my understanding is that there is A LOT of work being done that isn't in there yet.</text>
  </message>
  <message>
    <ts>2017-07-03T11:57:25.091080</ts>
    <user>U61RNCASK</user>
    <text>You probably have a better feel for it </text>
  </message>
  <message>
    <ts>2017-07-03T11:57:26.091661</ts>
    <user>U0FP80EKB</user>
    <text>Experimentation, thinking, planning, etc.</text>
  </message>
  <message>
    <ts>2017-07-03T11:57:39.096505</ts>
    <user>U0FP80EKB</user>
    <text>I wouldn't count on me having a better feel for it. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-03T11:58:17.111400</ts>
    <user>U61RNCASK</user>
    <text>&lt;@U0FP80EKB&gt; Ok that makes sense.</text>
  </message>
  <message>
    <ts>2017-07-03T11:58:30.116727</ts>
    <user>U0FP80EKB</user>
    <text>Just don't want you to get the wrong impression about any knowledge I have. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-03T11:58:50.124750</ts>
    <user>U41NK9BM4</user>
    <text>Look at the `dev` branches.</text>
  </message>
  <message>
    <ts>2017-07-03T11:58:50.124918</ts>
    <user>U61RNCASK</user>
    <text>Is elm-node presently the best way to run on Node?</text>
  </message>
  <message>
    <ts>2017-07-03T11:59:02.129769</ts>
    <user>U0FP80EKB</user>
    <text>I'd actually love it in September, as we are going to be going very heavy on having our app hosted on our customers' websites as embeds. The work to shrink the size will be happy for us.</text>
  </message>
  <message>
    <ts>2017-07-03T11:59:35.143037</ts>
    <user>U0FP80EKB</user>
    <text>I think we'll benefit a lot from the DCE stuff</text>
  </message>
  <message>
    <ts>2017-07-03T11:59:57.151655</ts>
    <user>U0CLDU8UB</user>
    <text>There is no good way to run Elm on Node</text>
  </message>
  <message>
    <ts>2017-07-03T12:00:15.160742</ts>
    <user>U0CLDU8UB</user>
    <text>What are you hoping to do?</text>
  </message>
  <message>
    <ts>2017-07-03T12:01:22.190086</ts>
    <user>U61RNCASK</user>
    <text>&lt;@U0CLDU8UB&gt; Read a file and write another. I'm aware this isn't anywhere near supported.</text>
  </message>
  <message>
    <ts>2017-07-03T12:02:04.207270</ts>
    <user>U61RNCASK</user>
    <text>This looks like it might work &lt;https://github.com/ElmCast/elm-node&gt;</text>
  </message>
  <message>
    <ts>2017-07-03T12:03:21.237724</ts>
    <user>U0CLDU8UB</user>
    <text>Yeah, it's going to involve a lot of ports and depending on what you're doing, maybe not that much Elm :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-03T12:03:21.237928</ts>
    <user>U0FP80EKB</user>
    <text>I would think of it as "reading from in, writing to out" then pipe, rather than thinking of it in terms of files.</text>
  </message>
  <message>
    <ts>2017-07-03T12:05:05.278108</ts>
    <user>U0CLDU8UB</user>
    <text>I would even claim you'd have a better time doing that sort of stuff in Haskell, but we all have our hobbies</text>
  </message>
  <message>
    <ts>2017-07-03T12:09:05.367019</ts>
    <user>U61RNCASK</user>
    <text>Thanks. The native interop story seems pretty good with ports and native modules.</text>
  </message>
  <message>
    <ts>2017-07-03T12:10:46.403846</ts>
    <user>U61RNCASK</user>
    <text>&lt;@U0CLDU8UB&gt; Haskell or F# have this covered but I need Elm in this case.</text>
  </message>
  <message>
    <ts>2017-07-03T12:11:07.411527</ts>
    <user>U3SJEDR96</user>
    <text>~native~ _kernel_ code is about the easiest way to throw all guarantees that Elm can give you. If at all possible, use ports :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-03T12:11:44.424611</ts>
    <user>U61RNCASK</user>
    <text>&lt;@U3SJEDR96&gt; Native has been renamed to Kernel as of late? I think I saw a commit to that effect somewhere?</text>
  </message>
  <message>
    <ts>2017-07-03T13:08:24.571435</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U61RNCASK&gt; yes. Well, reframed is a better word. "Native" sounds as if it belongs there. Kernel implies low level and "extreme caution is advised".</text>
  </message>
  <message>
    <ts>2017-07-03T13:09:18.587140</ts>
    <user>U0CLDU8UB</user>
    <text>&lt;@U61RNCASK&gt; If you do want to do it, you could take a look at `stoeffel/elm-verify-examples` on GitHub. It's mostly written in Elm, even though it deals with text files.</text>
  </message>
  <message>
    <ts>2017-07-03T13:53:35.383403</ts>
    <user>U5R6L5MT4</user>
    <text>Does anyone has an example of Dict.update usage?</text>
  </message>
  <message>
    <ts>2017-07-03T13:53:50.387694</ts>
    <user>U5R6L5MT4</user>
    <text>I am trying something like that</text>
  </message>
  <message>
    <ts>2017-07-03T13:53:51.388064</ts>
    <user>U5R6L5MT4</user>
    <text>{ model | books = Dict.update isbn (\book -&amp;gt; { book | review = review }) model.books }</text>
  </message>
  <message>
    <ts>2017-07-03T13:53:55.389316</ts>
    <user>U5R6L5MT4</user>
    <text>But it doesn't seems valid</text>
  </message>
  <message>
    <ts>2017-07-03T13:57:00.446091</ts>
    <user>U5R6L5MT4</user>
    <text>Ok I didn't handled the Maybe case</text>
  </message>
  <message>
    <ts>2017-07-03T13:57:05.447394</ts>
    <user>U5R6L5MT4</user>
    <text>Going with</text>
  </message>
  <message>
    <ts>2017-07-03T13:57:06.447809</ts>
    <user>U5R6L5MT4</user>
    <text>SetReview isbn review -&amp;gt;
            { model | books = Dict.update isbn (updateBook review) model.books }


updateBook : Review -&amp;gt; Maybe Book -&amp;gt; Maybe Book
updateBook review book =
    case book of
        Nothing -&amp;gt;
            Nothing

        Just book -&amp;gt;
            Just { book | review = review }</text>
  </message>
  <message>
    <ts>2017-07-03T13:59:31.490856</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, so the easiest way to do that is `Dict.update isbn (Maybe.map (\book -&amp;gt; { book | review = review })) model.books`</text>
  </message>
  <message>
    <ts>2017-07-03T14:34:35.090275</ts>
    <user>U638BAUJZ</user>
    <text>In Visual Studio Code, how do I observe output from Debug.log?</text>
  </message>
  <message>
    <ts>2017-07-03T14:35:19.102470</ts>
    <user>U638BAUJZ</user>
    <text>I checked the "Debug Console" tab, however I don't see any debugging info.</text>
  </message>
  <message>
    <ts>2017-07-03T14:35:42.108683</ts>
    <user>U3SJEDR96</user>
    <text>It appears in your browser's dev console</text>
  </message>
  <message>
    <ts>2017-07-03T14:36:01.113910</ts>
    <user>U3SJEDR96</user>
    <text>not sure if VC has some sort of integration with the browser?</text>
  </message>
  <message>
    <ts>2017-07-03T14:37:09.132677</ts>
    <user>U638BAUJZ</user>
    <text>I'm using elm-live, if that means anything...</text>
  </message>
  <message>
    <ts>2017-07-03T14:37:52.144377</ts>
    <user>U638BAUJZ</user>
    <text>Found it. Thanks!</text>
  </message>
  <message>
    <ts>2017-07-03T14:38:22.152862</ts>
    <user>U638BAUJZ</user>
    <text>I'm new to web dev. So there's a lot of fundamentals that I don't have yet.</text>
  </message>
  <message>
    <ts>2017-07-03T14:46:56.295591</ts>
    <user>U3SJEDR96</user>
    <text>No worries! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-03T14:54:25.418146</ts>
    <user>U1NME8MS8</user>
    <text>Hi!</text>
  </message>
  <message>
    <ts>2017-07-03T14:54:46.424120</ts>
    <user>U1NME8MS8</user>
    <text>Does someone has a recommendation how to make &lt;https://gist.github.com/dawehner/0d1ce58a402af5c959ce3597dc731788&gt; nicer, aka. not having a lot of case -&amp;gt; Just else Nothing ...</text>
  </message>
  <message>
    <ts>2017-07-03T14:55:31.436797</ts>
    <user>U0CLDU8UB</user>
    <text>Oh wow. This might be a case for `andThen`. Hang on a bit.</text>
  </message>
  <message>
    <ts>2017-07-03T14:58:29.484701</ts>
    <user>U1NME8MS8</user>
    <text>yeah right, this can't be right :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-03T14:59:15.497025</ts>
    <user>U5R6L5MT4</user>
    <text>Is it possible to decode this kind of JSON: &lt;http://openlibrary.org/api/books?bibkeys=ISBN:0385472579,LCCN:62019420&amp;amp;jscmd=data&amp;amp;format=json&gt;</text>
  </message>
  <message>
    <ts>2017-07-03T14:59:27.500449</ts>
    <user>U5R6L5MT4</user>
    <text>in a dict</text>
  </message>
  <message>
    <ts>2017-07-03T15:00:30.519226</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5R6L5MT4&gt; it's not a straight up key-value list, so it would depend on what exactly you need</text>
  </message>
  <message>
    <ts>2017-07-03T15:00:43.522868</ts>
    <user>U1NME8MS8</user>
    <text>&lt;@U5R6L5MT4&gt; I don't think there should be a problem. Do you know already which data you actually need?</text>
  </message>
  <message>
    <ts>2017-07-03T15:00:46.523743</ts>
    <user>U3SJEDR96</user>
    <text>it's definitely feasible to make a nice decoder for that</text>
  </message>
  <message>
    <ts>2017-07-03T15:00:52.525302</ts>
    <user>U5R6L5MT4</user>
    <text>Basically, at the end I want a Dict ISBN Book</text>
  </message>
  <message>
    <ts>2017-07-03T15:01:16.532570</ts>
    <user>U5R6L5MT4</user>
    <text>ISBN being the part after the colum in the key (so I would need to map at some point)</text>
  </message>
  <message>
    <ts>2017-07-03T15:01:31.536739</ts>
    <user>U5R6L5MT4</user>
    <text>And then the I want to decode the value as a book</text>
  </message>
  <message>
    <ts>2017-07-03T15:01:40.539230</ts>
    <user>U5R6L5MT4</user>
    <text>type alias Book =
    { title : String
    , subtitle : String
    , authors : List String
    , publish_date : String
    , url : String}</text>
  </message>
  <message>
    <ts>2017-07-03T15:01:50.542105</ts>
    <user>U1NME8MS8</user>
    <text>&lt;@U5R6L5MT4&gt; so start with defining a decoder for a single book</text>
  </message>
  <message>
    <ts>2017-07-03T15:01:57.543882</ts>
    <user>U5R6L5MT4</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-03T15:01:59.544501</ts>
    <user>U5R6L5MT4</user>
    <text>I can do that</text>
  </message>
  <message>
    <ts>2017-07-03T15:02:37.554964</ts>
    <user>U3SJEDR96</user>
    <text>The do something like `keyValues bookDecoder |&amp;gt; Json.map (List.map (Tuple.mapFirst extractISBN) &amp;gt;&amp;gt; Dict.fromList) `</text>
  </message>
  <message>
    <ts>2017-07-03T15:05:59.609135</ts>
    <user>U0CLDU8UB</user>
    <text>&lt;@U1NME8MS8&gt; I am not entirely sure if I did this correctly without the rest of the code, but this compiles, at least:
```
parseSubrequestsResponse response =
    Dict.get "Content-Type" response.headers
        |&amp;gt; Maybe.andThen
            (\headerValue -&amp;gt;
                List.head &amp;lt;| Regex.find (Regex.AtMost 1) (Regex.regex "boundary=\\\"([^\"]+)\\\"") headerValue
            )
        |&amp;gt; Maybe.andThen (\match -&amp;gt; List.head match.submatches)
        |&amp;gt; Maybe.andThen identity
        |&amp;gt; Maybe.andThen
            (\boundary -&amp;gt;
                String.split ("--" ++ boundary) response.body
                    |&amp;gt; List.filter (\string -&amp;gt; string /= "" &amp;amp;&amp;amp; string /= "--")
                    |&amp;gt; List.map (String.split "\x0D \n")
                    |&amp;gt; List.map secondElement
                    |&amp;gt; filterNothing
            )
        |&amp;gt; Maybe.map Ok
        |&amp;gt; Maybe.withDefault (Err "no content-type specified")
```</text>
  </message>
  <message>
    <ts>2017-07-03T15:06:54.623295</ts>
    <user>U5R6L5MT4</user>
    <text>&lt;@U3SJEDR96&gt; ok I will try that</text>
  </message>
  <message>
    <ts>2017-07-03T15:10:39.681994</ts>
    <user>U1NME8MS8</user>
    <text>&lt;@U0CLDU8UB&gt; oh I see, Maybe.andThen, this is super powerful!!</text>
  </message>
  <message>
    <ts>2017-07-03T15:10:49.684966</ts>
    <user>U0CLDU8UB</user>
    <text>Some of the anonymous functions could be made a little shorter too, like `(\match -&amp;gt; List.head match.submatches)` --&amp;gt; `(List.head &amp;lt;&amp;lt; .submatches)`, but whichever you prefer!</text>
  </message>
  <message>
    <ts>2017-07-03T15:11:54.701642</ts>
    <user>U1NME8MS8</user>
    <text>&lt;@U0CLDU8UB&gt; oh yeah I'm not into composing functions like that yet, but maybe this is a good place getting more familiar with it</text>
  </message>
  <message>
    <ts>2017-07-03T15:13:17.723312</ts>
    <user>U0CLDU8UB</user>
    <text>There's no reason to, just use the form that makes most sense to _you_.</text>
  </message>
  <message>
    <ts>2017-07-03T15:13:55.733159</ts>
    <user>U1NME8MS8</user>
    <text>&lt;@U0CLDU8UB&gt; This is why I love elm, it has all those reasonable / practical people!</text>
  </message>
  <message>
    <ts>2017-07-03T15:14:45.745921</ts>
    <user>U3SJEDR96</user>
    <text>`Maybe.andThen identity` is particularly nice, actually haven't had to use that before :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-03T15:15:03.750488</ts>
    <user>U0CLDU8UB</user>
    <text>Me neither, to be honest :smile:</text>
  </message>
  <message>
    <ts>2017-07-03T15:15:53.763284</ts>
    <user>U3SJEDR96</user>
    <text>Then again, `Maybe (Maybe v)` doesn't happen _that_ often. Should have a `type alias Maaaaaybe a = Maybe (Maybe a)`</text>
  </message>
  <message>
    <ts>2017-07-03T15:19:37.820723</ts>
    <user>U23SA861Y</user>
    <text>yeah, identity comes in handy from time to time</text>
  </message>
  <message>
    <ts>2017-07-03T15:30:40.985009</ts>
    <user>U1NME8MS8</user>
    <text>Do I understand correctly that this is what people call flatMap in other languages?</text>
  </message>
  <message>
    <ts>2017-07-03T15:37:56.091276</ts>
    <user>U0CLDU8UB</user>
    <text>Right, or `&amp;gt;&amp;gt;=` (bind).</text>
  </message>
  <message>
    <ts>2017-07-03T15:46:49.218472</ts>
    <user>U0RPQMZ9S</user>
    <text>&lt;@U3SJEDR96&gt; &lt;@U0CLDU8UB&gt;, if you ever do need it, and are already using elm-community/maybe-extra, `Maybe.andThen identity == Maybe.Extra.join`</text>
  </message>
  <message>
    <ts>2017-07-03T15:47:03.221949</ts>
    <user>U0RPQMZ9S</user>
    <text>I think "join" captures whats going on a bit better</text>
  </message>
  <message>
    <ts>2017-07-03T15:53:53.319596</ts>
    <user>U0CLDU8UB</user>
    <text>All right, good to know</text>
  </message>
  <message>
    <ts>2017-07-03T15:57:14.367843</ts>
    <user>U5ABF3BH7</user>
    <text>Hello, does anyone know what ```&amp;lt;\&amp;gt;``` represent? For example in  ```route =
    oneOf
        [ Url.map Home (s "")
        , Url.map Login (s "login")
        , Url.map Logout (s "logout")
        , Url.map Settings (s "settings")
        , Url.map Profile (s "profile" &amp;lt;/&amp;gt; User.usernameParser)
        , Url.map Register (s "register")
        , Url.map Article (s "article" &amp;lt;/&amp;gt; Article.slugParser)
        , Url.map NewArticle (s "editor")
        , Url.map EditArticle (s "editor" &amp;lt;/&amp;gt; Article.slugParser)
        ]```</text>
  </message>
  <message>
    <ts>2017-07-03T15:59:03.393838</ts>
    <user>U3SJEDR96</user>
    <text>`&amp;lt;/&amp;gt;` is an infix operator defined in the urlparser package, that says "the parser that precedes me, followed by a `/`, followed by the parser that follows")</text>
  </message>
  <message>
    <ts>2017-07-03T16:00:15.411915</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U3SJEDR96&gt; Thanks!</text>
  </message>
  <message>
    <ts>2017-07-03T16:00:42.419168</ts>
    <user>U3SJEDR96</user>
    <text>because you'll often want to match on something that's separated by slashes, like `/blog/user/article/id` which could be `s "blog" &amp;lt;/&amp;gt; string &amp;lt;/&amp;gt; s "article" &amp;lt;/&amp;gt; int`</text>
  </message>
  <message>
    <ts>2017-07-03T17:06:10.307580</ts>
    <user>U5ABF3BH7</user>
    <text>Hello, I am trying to re-organize all my files to follow Richard Fedman SPA appapp&lt;https://github.com/rtfeldman/elm-spa-example&gt; to separate view from data that needs to be encoded (or decoded via json).  I would appreciate some advice on how I should organize the following model. In the backend, the Person Model has a physician (through physician id, a care taker via caretaker_id, etc... which are RolodexEntries.  Is the best practice to create. Data.Person.Physician, Data.Person.CareTaker....etc... or Data.Person.RolodexEntry?</text>
  </message>
  <message>
    <ts>2017-07-03T17:08:12.331954</ts>
    <user>U0LPMPL2U</user>
    <text>It's OK to put multiple types in a file</text>
  </message>
  <message>
    <ts>2017-07-03T17:08:38.337081</ts>
    <user>U0LPMPL2U</user>
    <text>once you have a lot of functions that work on one type, it can make sense to extract that type and the related functions to a new file</text>
  </message>
  <message>
    <ts>2017-07-03T17:11:06.366375</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U0LPMPL2U&gt;, would you use one file Data.Person.RolodexEntry instead of several like Data.Person.Physician,  Data.Person.CareTaker, etc... ? And if later there are too many differences, you would create new files? Is that how you would do it?</text>
  </message>
  <message>
    <ts>2017-07-03T17:12:30.382554</ts>
    <user>U0CLDU8UB</user>
    <text>I usually start with a single Types.elm file :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-03T17:12:47.385765</ts>
    <user>U5KCFP7GT</user>
    <text>What's the best way to work with elm-css during development? As somebody who's coming from react / css-modules / webpack hot reloading it's not quite obvious what the best approach is. Ideally I would like to avoid to manually compile the css and reload the app..</text>
  </message>
  <message>
    <ts>2017-07-03T17:13:02.388702</ts>
    <user>U0LPMPL2U</user>
    <text>I tend to start with multiple types in the same file. As time goes on, the functions in the file tend to clump around each of the types. At some point, I'll extract the type and related functions.</text>
  </message>
  <message>
    <ts>2017-07-03T17:13:37.395484</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U0LPMPL2U&gt; thanks</text>
  </message>
  <message>
    <ts>2017-07-03T17:14:10.401808</ts>
    <user>U0CLDU8UB</user>
    <text>&lt;@U5KCFP7GT&gt; Then you'll probably feel right at home with one of the webpack-based starters</text>
  </message>
  <message>
    <ts>2017-07-03T17:14:34.406377</ts>
    <user>U5KCFP7GT</user>
    <text>&lt;https://github.com/tcoopman/elm-css-webpack-loader&gt;?</text>
  </message>
  <message>
    <ts>2017-07-03T17:15:03.412069</ts>
    <user>U0LPMPL2U</user>
    <text>Not sure if the video is out yet but it's worth watching Evan's keynote from ElmConf Europe. It's all about how to structure apps and when to break up files :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-03T17:16:45.432160</ts>
    <user>U4F64AKQV</user>
    <text>:point_up: Was about to link to that</text>
  </message>
  <message>
    <ts>2017-07-03T17:18:53.456443</ts>
    <user>U0FP80EKB</user>
    <text>&lt;https://www.youtube.com/watch?v=2ihTgEYiKpI&gt;</text>
  </message>
  <message>
    <ts>2017-07-03T17:18:55.456803</ts>
    <user>U0CLDU8UB</user>
    <text>hfjallemark: Yep, that looks like something I'd try. Maybe base it on this &lt;https://github.com/elm-community/elm-webpack-starter&gt;</text>
  </message>
  <message>
    <ts>2017-07-03T17:19:16.460762</ts>
    <user>U0FP80EKB</user>
    <text>Evan's talk ^^^</text>
  </message>
  <message>
    <ts>2017-07-03T17:19:19.461491</ts>
    <user>U5KCFP7GT</user>
    <text>Awesome. Will try it out, thanks!</text>
  </message>
  <message>
    <ts>2017-07-03T17:24:10.517127</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U0FP80EKB&gt; and &lt;@U0LPMPL2U&gt; Thanks!</text>
  </message>
  <message>
    <ts>2017-07-03T17:41:31.708431</ts>
    <user>U2SR9DL7Q</user>
    <text>hello all. quick question. i've been considering adding multiple "pages" to  small web application hosted on github. Currently using the *elm-mdl* library for formatting. Should I just used their built in tabs to mimic page to page movement, or use *elm-navigation* to capture and handle proper routing?</text>
  </message>
  <message>
    <ts>2017-07-03T17:47:30.771338</ts>
    <user>U5J0H2NS2</user>
    <text>You could use both at the same time</text>
  </message>
  <message>
    <ts>2017-07-03T17:47:54.775504</ts>
    <user>U5J0H2NS2</user>
    <text>Then the user has the ability to use back and forward of the browser</text>
  </message>
  <message>
    <ts>2017-07-03T17:48:51.785042</ts>
    <user>U5J0H2NS2</user>
    <text>Selecting a tab via clicking could raise a change in the url which will be handled via routing</text>
  </message>
  <message>
    <ts>2017-07-03T17:50:24.801171</ts>
    <user>U2SR9DL7Q</user>
    <text>cool. thats the goal almost. i'm using to practice responsive design. so on mobile, the user should be able to move around using drawer buttons. but when its on a large screen, the drawer should be replaced by tabs or something similar.</text>
  </message>
  <message>
    <ts>2017-07-03T17:50:59.807276</ts>
    <user>U2SR9DL7Q</user>
    <text>i'm designing for the small screen first through then moving my way outwards.</text>
  </message>
  <message>
    <ts>2017-07-03T17:53:00.828246</ts>
    <user>U17PWHU4D</user>
    <text>been struggling since yesterday on importing an array from json with mixed types.  Its always consistent.  `[ int, int, string, int ]`.</text>
  </message>
  <message>
    <ts>2017-07-03T17:53:29.833212</ts>
    <user>U17PWHU4D</user>
    <text>Im' using pipeline decoder.  and works for everything else, however, I have to specify a type alias. and have no idea how to describe this.</text>
  </message>
  <message>
    <ts>2017-07-03T17:53:45.835963</ts>
    <user>U17PWHU4D</user>
    <text>any advice would be much appreciated.</text>
  </message>
  <message>
    <ts>2017-07-03T17:55:15.851082</ts>
    <user>U5J0H2NS2</user>
    <text>Did you try oneOf ?</text>
  </message>
  <message>
    <ts>2017-07-03T17:55:57.858384</ts>
    <user>U17PWHU4D</user>
    <text>was trying to learn oneOf, but i think the issues is more that i need to map.  i got this far, with the help of someone yesterday.</text>
  </message>
  <message>
    <ts>2017-07-03T17:56:10.860582</ts>
    <user>U17PWHU4D</user>
    <text>```
segmentsDecoder list =
    Decode.map5 &amp;lt;need type alias here&amp;gt;
        (Decode.index 0 &lt;http://Decode.int|Decode.int&gt;)
        (Decode.index 1 &lt;http://Decode.int|Decode.int&gt;)
        (Decode.index 2 Decode.string)
        (Decode.index 3 &lt;http://Decode.int|Decode.int&gt;)
        (Decode.index 4 &lt;http://Decode.int|Decode.int&gt;)


segmentDecoder : Decoder SegmentResponse
segmentDecoder =
    decode SegmentResponse
        |&amp;gt; required "segments" (Decode.list segmentsDecoder)
```</text>
  </message>
  <message>
    <ts>2017-07-03T17:58:49.886795</ts>
    <user>U17PWHU4D</user>
    <text>it feels like oneOf is more for if i wanted to convert if all index are not the same type.  When really, i just want to pull that `index 2` out and make it a key/dict or something.</text>
  </message>
  <message>
    <ts>2017-07-03T18:15:02.049154</ts>
    <user>U2D7NUGS1</user>
    <text>:champagne: Just published my first Elm package! &lt;http://package.elm-lang.org/packages/lzrski/elm-polymer/latest&gt;</text>
  </message>
  <message>
    <ts>2017-07-03T18:15:39.055405</ts>
    <user>U2D7NUGS1</user>
    <text>Thanks for your tremendous help!</text>
  </message>
  <message>
    <ts>2017-07-03T18:16:13.061117</ts>
    <user>U0CLDU8UB</user>
    <text>&lt;@U17PWHU4D&gt; Does your JSON look something like this:
```
{ "segments": [ 4, 2, "yes", 4, 2 ] }
```</text>
  </message>
  <message>
    <ts>2017-07-03T18:16:35.064741</ts>
    <user>U17PWHU4D</user>
    <text>yes, exactly &lt;@U0CLDU8UB&gt; !</text>
  </message>
  <message>
    <ts>2017-07-03T18:18:10.079343</ts>
    <user>U0CLDU8UB</user>
    <text>Okay so what is the problem you are facing?</text>
  </message>
  <message>
    <ts>2017-07-03T18:18:46.084853</ts>
    <user>U17PWHU4D</user>
    <text>so this is my first attempt with json decoders.  and i'm able to correctly decode all other data.</text>
  </message>
  <message>
    <ts>2017-07-03T18:19:10.088583</ts>
    <user>U17PWHU4D</user>
    <text>but as far as i know i need to specify an alias, so the decoder, can use it to create the Elm object.</text>
  </message>
  <message>
    <ts>2017-07-03T18:19:29.091562</ts>
    <user>U17PWHU4D</user>
    <text>in my ex. above.  after Decode.map5.</text>
  </message>
  <message>
    <ts>2017-07-03T18:21:36.111419</ts>
    <user>U0CLDU8UB</user>
    <text>You can do that, or use a function. For example, if you wanted to make that into a 5-element tuple, you could:
```
 segmentsDecoder list =
    Decode.map5 (\num1 num2 str num3 num4 -&amp;gt; ( num1, num2, str, num3, num4 ))
        (Decode.index 0 &lt;http://Decode.int|Decode.int&gt;)
        ...
```</text>
  </message>
  <message>
    <ts>2017-07-03T18:22:26.119114</ts>
    <user>U0CLDU8UB</user>
    <text>But what does your `SegmentResponse` type look like?</text>
  </message>
  <message>
    <ts>2017-07-03T18:23:06.125355</ts>
    <user>U17PWHU4D</user>
    <text>i removed a lot of the other fields, but it just includes 1 field that has the segments key, with the mixed array.</text>
  </message>
  <message>
    <ts>2017-07-03T18:23:32.129110</ts>
    <user>U17PWHU4D</user>
    <text>what you showed me is great here though.  so basically, those args of the Tuple, match up to the decode.index below, correct?</text>
  </message>
  <message>
    <ts>2017-07-03T18:24:08.134363</ts>
    <user>U0CLDU8UB</user>
    <text>Correct</text>
  </message>
  <message>
    <ts>2017-07-03T18:24:24.137017</ts>
    <user>U17PWHU4D</user>
    <text>ah, great, going to give this a shot, i'll ping if i get stuck again.  thank you a ton!</text>
  </message>
  <message>
    <ts>2017-07-03T18:25:22.146048</ts>
    <user>U0CLDU8UB</user>
    <text>the very bottom of this page explains the same thing gradually: &lt;http://ohanhi.com/secret-spy-messages.html&gt;</text>
  </message>
  <message>
    <ts>2017-07-03T18:25:52.150658</ts>
    <user>U17PWHU4D</user>
    <text>oh nice, going to read that right now…</text>
  </message>
  <message>
    <ts>2017-07-03T18:41:03.283989</ts>
    <user>U17PWHU4D</user>
    <text>it worked perfect &lt;@U0CLDU8UB&gt; .   Can't thank you enough for that one!</text>
  </message>
  <message>
    <ts>2017-07-03T22:06:56.967520</ts>
    <user>U37BS6J6N</user>
    <text>ello all, trying to do the extra credit for the "random" exercise in the docs and I can't seem to get my update to return the correct type</text>
  </message>
  <message>
    <ts>2017-07-03T22:09:37.990774</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U37BS6J6N&gt; have a look at what the return type of `Random.generate` is</text>
  </message>
  <message>
    <ts>2017-07-03T22:11:33.008242</ts>
    <user>U37BS6J6N</user>
    <text>&lt;@U153UK3FA&gt; is there a generator arg for 2 ints?</text>
  </message>
  <message>
    <ts>2017-07-03T22:12:18.014802</ts>
    <user>U37BS6J6N</user>
    <text>or am I just thinking about this wrong?</text>
  </message>
  <message>
    <ts>2017-07-03T22:13:07.021969</ts>
    <user>U37BS6J6N</user>
    <text>what i initially tried to do was
(model, (Random.generate NewFace (&lt;http://Random.int|Random.int&gt; 1 6)  (&lt;http://Random.int|Random.int&gt; 1 6))</text>
  </message>
  <message>
    <ts>2017-07-03T22:13:44.027279</ts>
    <user>U37BS6J6N</user>
    <text>My NewFace Message is 
NewFace Int Int</text>
  </message>
  <message>
    <ts>2017-07-03T22:14:12.031259</ts>
    <user>U153UK3FA</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Random#pair&gt; will help</text>
  </message>
  <message>
    <ts>2017-07-03T22:14:30.033718</ts>
    <user>U37BS6J6N</user>
    <text>OH</text>
  </message>
  <message>
    <ts>2017-07-03T22:14:38.034825</ts>
    <user>U153UK3FA</user>
    <text>you can also instead use &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Random#map2&gt;</text>
  </message>
  <message>
    <ts>2017-07-03T22:45:02.293221</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U37BS6J6N&gt; nice work.</text>
  </message>
  <message>
    <ts>2017-07-03T22:51:35.348904</ts>
    <user>U37BS6J6N</user>
    <text>Question on the next exercises that say they "require new skills" 

&amp;gt;Instead of showing an image of a die face, use the elm-lang/svg library to draw it yourself.

&amp;gt;After you have learned about tasks and animation, have the die flip around randomly before they settle on a final value.

Should I do those now or come back after working through the rest of the tutorial?</text>
  </message>
  <message>
    <ts>2017-07-03T23:01:04.431888</ts>
    <user>U153UK3FA</user>
    <text>come back to them, they'll be tricky without a good foundation</text>
  </message>
  <message>
    <ts>2017-07-03T23:01:24.434772</ts>
    <user>U37BS6J6N</user>
    <text>roger that~</text>
  </message>
  <message>
    <ts>2017-07-03T23:07:26.484877</ts>
    <user>U5J08KX0D</user>
    <text>Using elm-bootstrap Tabs in my UI and I notice that each item is
` item  :  { id : String, link : Link msg, pane : Pane msg }`</text>
  </message>
  <message>
    <ts>2017-07-03T23:09:53.503470</ts>
    <user>U5J08KX0D</user>
    <text>Is there a reason that id is a string, and not a member of a union type? I guess it might have to pass the id value to the underlying JS? And the return value in update is `TabMsg state`, and in the console, state looks like `State { activeTab = Just "Auscultation", visibility = Showing }`. It's described as an 'opaque type'. I want to know which tab I need to update - and so I'm not sure how to fund out the value of activeTab:
Thanks, as ever.</text>
  </message>
  <message>
    <ts>2017-07-04T00:17:24.052216</ts>
    <user>U5J08KX0D</user>
    <text>So is there a minimal example of updating various panes of a Tabbed control - that would require finding out the active tab after a click on the tab and then updating the items.item.pane content. Just not sure how that's done - there seem to be a couple of opaque types : State and Item and Pane! How do I "get at" these? thanks again.</text>
  </message>
  <message>
    <ts>2017-07-04T00:35:14.199542</ts>
    <user>U5YDC1YUW</user>
    <text>what's the best practice in regards to union types that have the same labels, such as `type Action = Selected | Idle` and `type Result = Selected | Idle`</text>
  </message>
  <message>
    <ts>2017-07-04T00:35:32.202111</ts>
    <user>U5YDC1YUW</user>
    <text>the compiler complains about the double-up of `Selected`</text>
  </message>
  <message>
    <ts>2017-07-04T00:36:00.206021</ts>
    <user>U5YDC1YUW</user>
    <text>do people generally prefix them? like `type Action = ActionSelected | ActionIdle`</text>
  </message>
  <message>
    <ts>2017-07-04T00:40:02.237994</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5YDC1YUW&gt; you can prefix them or put them in different modules</text>
  </message>
  <message>
    <ts>2017-07-04T00:41:42.251903</ts>
    <user>U153UK3FA</user>
    <text>the same as you would if you had two functions with the same name in the same module</text>
  </message>
  <message>
    <ts>2017-07-04T00:44:03.270658</ts>
    <user>U153UK3FA</user>
    <text>You might also like to Split that very similar type out on it's own eg.</text>
  </message>
  <message>
    <ts>2017-07-04T00:45:04.279013</ts>
    <user>U153UK3FA</user>
    <text>```
type Selectable = Selected | Idle
type Action = Action Selectable
type Result = Result Selectable

blah = Result Selected
beep = Action Idle
```</text>
  </message>
  <message>
    <ts>2017-07-04T00:46:55.294285</ts>
    <user>U153UK3FA</user>
    <text>then you could define some functions for that type like `toggle: Selectable -&amp;gt; Selectable` that toggles between the two states or perhaps a `toString: Selectable -&amp;gt; String`</text>
  </message>
  <message>
    <ts>2017-07-04T00:48:41.307954</ts>
    <user>U153UK3FA</user>
    <text>`toCheckBoxView: (a-&amp;gt; msg) -&amp;gt; Selectable -&amp;gt; Html msg` for displaying it</text>
  </message>
  <message>
    <ts>2017-07-04T01:00:25.406951</ts>
    <user>U5J08KX0D</user>
    <text>&lt;@U0JFEBK6F&gt; are there setters and getters for the Tab control? I want to be able to find out the new activeTab, and to update the relevant pane - it seems (to a beginner like me!) that State, Item and Pane are opaque types, and I don't know how to "get at them" - thanks!</text>
  </message>
  <message>
    <ts>2017-07-04T01:20:01.577813</ts>
    <user>U5YDC1YUW</user>
    <text>&lt;@U153UK3FA&gt; excellent, thank you!</text>
  </message>
  <message>
    <ts>2017-07-04T01:49:19.837844</ts>
    <user>U3LT1UTPF</user>
    <text>Great article! :blush:</text>
  </message>
  <message>
    <ts>2017-07-04T02:25:14.215646</ts>
    <user>U0JFEBK6F</user>
    <text>&lt;@U5J08KX0D&gt; there are intentionally no getters and setters for tab state. Is your use case that you dynamically want to change the content of a tab once the user selects a particular tab ? </text>
  </message>
  <message>
    <ts>2017-07-04T02:25:47.222207</ts>
    <user>U5J08KX0D</user>
    <text>Yes, exactly - to know which tab has been selected, and then to change the contents</text>
  </message>
  <message>
    <ts>2017-07-04T02:26:08.226606</ts>
    <user>U5J08KX0D</user>
    <text>and sorry for not posting in the elm-bootstrap channel - I've just found it! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-04T02:32:22.301306</ts>
    <user>U0JFEBK6F</user>
    <text>I think a better way than getters/setters in that case would be a "callback"7message  ónTabSelctedˋ with the id of the tab passed.</text>
  </message>
  <message>
    <ts>2017-07-04T02:34:23.326151</ts>
    <user>U5J08KX0D</user>
    <text>Forgive my beginner-ness! Is there a way of doing what I want to do, or will it require a change to the module? Do you mean that there is already a message `onTabSelected id` ?</text>
  </message>
  <message>
    <ts>2017-07-04T02:59:37.662139</ts>
    <user>U5Q1H5XC2</user>
    <text>Hey, Im trying to set a field in a record, then use the new field value in the model to update another field. Im using a let block to first create a model, then using this to create another one. Is there a better way? It gets very messy now if I want to have it chain further. ``</text>
  </message>
  <message>
    <ts>2017-07-04T02:59:56.666866</ts>
    <user>U5Q1H5XC2</user>
    <text>How i do it now:```let
    tempModel =
        setWidth input model.height (*) model
in
setRight tempModel.width tempModel.left (+) tempModel```</text>
  </message>
  <message>
    <ts>2017-07-04T03:11:43.851397</ts>
    <user>U41NK9BM4</user>
    <text>Now I think to grok because the line after `in` is not indented. It must be a single expression. Correct?</text>
  </message>
  <message>
    <ts>2017-07-04T03:12:29.863463</ts>
    <user>U3SJEDR96</user>
    <text>the line after `in` must _always_ be a single expression.. This is just elm-format@exp :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-04T03:13:34.880122</ts>
    <user>U41NK9BM4</user>
    <text>It feels a bit strange, TBH. I'm not used to it :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-04T03:15:30.910634</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5Q1H5XC2&gt; that's basically a good way for now. If you feel like it's getting out of hand because you have too many nesting, you could examine whether you need that nesting (what does it buy you?), and if you feel that you do in fact need it, you can make a somewhat more pipeline-friendly api so you can do `model |&amp;gt; withWidth input model.height (*) |&amp;gt; \(model -&amp;gt; setRight model.width model.left (+) model)`</text>
  </message>
  <message>
    <ts>2017-07-04T03:16:43.930494</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U41NK9BM4&gt; yeah, it's a little weird at first. If your actual function bodies tend to be longer than your `let in` blocks, it works out pretty nicely; and adding a `let..in` to an existing function won't cause pointless lines to appear in diffs because of the extra indent they used to get</text>
  </message>
  <message>
    <ts>2017-07-04T03:20:04.984805</ts>
    <user>U41NK9BM4</user>
    <text>I see. So there's also the diff-friendly aspect to keep in mind.</text>
  </message>
  <message>
    <ts>2017-07-04T03:21:31.009349</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://github.com/avh4/elm-format/issues/350&gt; for more context :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-04T03:24:51.066510</ts>
    <user>U5Q1H5XC2</user>
    <text>thanks, was trying to do the pipe format yesterday, but couldnt figure out how to reference the "new" model down the pipeline. Is that why you did an anon function?</text>
  </message>
  <message>
    <ts>2017-07-04T03:27:19.108538</ts>
    <user>U3SJEDR96</user>
    <text>yeah, though I think I'd rather work with functions that _know_ how to calculate the `right` based on the current state.. And perhaps even better, if I change the `width` through the proper function, I'd expect the model to be in a consistent state afterwards</text>
  </message>
  <message>
    <ts>2017-07-04T03:30:36.167623</ts>
    <user>U5Q1H5XC2</user>
    <text>cool thanks for the help, I shall experiment a bit further.</text>
  </message>
  <message>
    <ts>2017-07-04T03:59:46.714319</ts>
    <user>U0CLDU8UB</user>
    <text>Thanks :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-04T05:32:48.729964</ts>
    <user>U284ZSVSN</user>
    <text>Hi, can anyone recommend elm-return over elm-response or vice versa? Or recommend not using them? Or any alternatives? I'm starting to think I might be starting to see the gains but I'm not sure which to go for</text>
  </message>
  <message>
    <ts>2017-07-04T05:59:46.301786</ts>
    <user>U4872964V</user>
    <text>&lt;@U284ZSVSN&gt; they look identical to me :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-04T06:02:15.357969</ts>
    <user>U4872964V</user>
    <text>&lt;@U284ZSVSN&gt; but I've never had the need for those abstractions, I don't have that many "sub-components"</text>
  </message>
  <message>
    <ts>2017-07-04T06:17:11.651375</ts>
    <user>U284ZSVSN</user>
    <text>Good to hear :slightly_smiling_face: I can avoid it I imagine but I've not really done much 'chaining' with the model in the update and have one situation where I've got an operation that comes up a few times that I'd like to make a function for and wondered if I should start using one of these.</text>
  </message>
  <message>
    <ts>2017-07-04T06:28:58.867619</ts>
    <user>U3LT1UTPF</user>
    <text>I want to add a dropdown select so that when the value is changed the page is updated. I thought it would be easier to do it myself, but I've found that it's necessary to keep an eye on the state of the dropdown. I've found some "components" in elm packages, like this one &lt;http://package.elm-lang.org/packages/jschonenberg/elm-dropdown/latest&gt; , but I don't know if I should go on that road. Any advice on how I should face the issue?</text>
  </message>
  <message>
    <ts>2017-07-04T07:22:38.789491</ts>
    <user>U64D26Q95</user>
    <text>Hi guys,

I am trying to replicate of my existing React/Redux application in Elm. I am struggling with the following part: I need to fetch data from few different urls (asynchronously) and as soon as I will get all responses back I need to dispatch an action (for example: LoadCompleted). As far as I understand I need to use Cmd.batch for many asynchronously requests, however how can I dispatch an action as soon as everything fetched?

It is probably stupid question, but I am struggling find any information about this kind of case. Can anyone help me, please?</text>
  </message>
  <message>
    <ts>2017-07-04T07:31:16.932543</ts>
    <user>U3LT1UTPF</user>
    <text>&lt;@U64D26Q95&gt; I learned a lot from this article series: &lt;http://codeloveandboards.com/blog/2017/02/08/phoenix-and-elm-a-real-use-case-pt-2/&gt; I link to the second chapter because you probably don't need the Phoenix stuff (the backend that gives the json). You probably need from "The Messages" on.</text>
  </message>
  <message>
    <ts>2017-07-04T07:33:54.975033</ts>
    <user>U3EPLC6A0</user>
    <text>&lt;@U64D26Q95&gt; Have you seen RemoteData? It helps you keep track of the "download-state" of your data. It even forces you to do so. So, as soon as everything is ```Success a``` you're there. &lt;http://package.elm-lang.org/packages/krisajenkins/remotedata/latest&gt;</text>
  </message>
  <message>
    <ts>2017-07-04T07:36:08.013649</ts>
    <user>U3LT1UTPF</user>
    <text>The info is fetched in the init:
```
init : ( Model, Cmd Msg )
init =
    initialModel ! [ fetch ]
```

`fetch` lives in Commands, fetches the info and triggers `FetchResult` in `update`</text>
  </message>
  <message>
    <ts>2017-07-04T07:36:31.020168</ts>
    <user>U3LT1UTPF</user>
    <text>Yes, RemoteData seems a good option.</text>
  </message>
  <message>
    <ts>2017-07-04T07:51:14.257420</ts>
    <user>U0FBZ4J5V</user>
    <text>And have a look at the docs for `RemoteData.andMap` for a neat way to merge data-loads into a single result. </text>
  </message>
  <message>
    <ts>2017-07-04T08:00:33.414825</ts>
    <user>U0CLDU8UB</user>
    <text>With RemoteData, you would have a Msg for each of the responses. 

So in your model, you have a field for the responses
```
type alias Model =
    { a : WebData Thing
    -- ...
    }
```
This means that in the update, you simply go
```
ResponseA webData -&amp;gt; { model | a = webData }
```

Now, there's no need for an action when all of the responses are in: 

```
view model =
    RemoteData.map resolvedView model.a
        |&amp;gt; RemoteData.andMap model.b 
        --...
        |&amp;gt; RemoteData.withDefault notResolvedView
```
</text>
  </message>
  <message>
    <ts>2017-07-04T08:04:57.491014</ts>
    <user>U62PV9CPN</user>
    <text>Is there a way to compile elm and see the error messages in the terminal rather than opening a browser?</text>
  </message>
  <message>
    <ts>2017-07-04T08:06:31.518352</ts>
    <user>U3SJEDR96</user>
    <text>I assume you're using elm-reactor? `elm-make` shows errors on the CLI</text>
  </message>
  <message>
    <ts>2017-07-04T08:08:12.547397</ts>
    <user>U62PV9CPN</user>
    <text>Yeah I've been using `elm-reactor`. So I just intentionally changed a functions signature to something wrong and ran `elm-make` and it says it compiled successfully</text>
  </message>
  <message>
    <ts>2017-07-04T08:09:00.561817</ts>
    <user>U62PV9CPN</user>
    <text>But running `elm-reactor` I see several errors</text>
  </message>
  <message>
    <ts>2017-07-04T08:24:32.839284</ts>
    <user>U64D26Q95</user>
    <text>Thank you very much everyone! Really appreciate that. `RemoteData` sounds good so far. I will check all links in depth soon and hope it will work for me :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-04T08:42:42.179706</ts>
    <user>U4872964V</user>
    <text>&lt;@U62PV9CPN&gt;, are you passing the same file to elm-make as to elm-reactor?</text>
  </message>
  <message>
    <ts>2017-07-04T08:54:39.414751</ts>
    <user>U3SJEDR96</user>
    <text>make it a `Maybe` in your `company` type alias, and decode it as `|&amp;gt; optional "deleted" (map Just deletedDecoder ) Nothing`</text>
  </message>
  <message>
    <ts>2017-07-04T08:56:10.446620</ts>
    <user>U5CPJRWQ6</user>
    <text>Aw man i was so close… Thanks a lot!</text>
  </message>
  <message>
    <ts>2017-07-04T08:59:47.522041</ts>
    <user>U62PV9CPN</user>
    <text>&lt;@U4872964V&gt; I'm rust running `elm-reactor` in the same director as my source files. I guess from there I click on the source file. So I should be doing stuff like `elm-make Main.elm`?</text>
  </message>
  <message>
    <ts>2017-07-04T09:00:09.531566</ts>
    <user>U4872964V</user>
    <text>yes, run it on the file you are clicking on</text>
  </message>
  <message>
    <ts>2017-07-04T10:11:52.061708</ts>
    <user>U3YDBDP4Z</user>
    <text>If writing a custom event handler, how do I write it so that the message sent includes the event object?
Or, can I read the event object before sending the message?</text>
  </message>
  <message>
    <ts>2017-07-04T10:12:54.083874</ts>
    <user>U3SJEDR96</user>
    <text>you mean using `on`? `on` takes a json decoder, which should decode the event object into a msg :slightly_smiling_face: (note that it's a little tricky to figure out that structure, because it contains domnodes and circular references...)</text>
  </message>
  <message>
    <ts>2017-07-04T10:14:16.113637</ts>
    <user>U3YDBDP4Z</user>
    <text>I don't understand the decoding part. `(Json.succeed message)`</text>
  </message>
  <message>
    <ts>2017-07-04T10:14:23.116089</ts>
    <user>U3YDBDP4Z</user>
    <text>This just decodes the message</text>
  </message>
  <message>
    <ts>2017-07-04T10:14:27.117289</ts>
    <user>U3YDBDP4Z</user>
    <text>?</text>
  </message>
  <message>
    <ts>2017-07-04T10:14:41.122437</ts>
    <user>U3YDBDP4Z</user>
    <text>Not even that, right? It just says succeed with this?</text>
  </message>
  <message>
    <ts>2017-07-04T10:15:33.141508</ts>
    <user>U3SJEDR96</user>
    <text>yeah, that completely ignores the content of the event object and just gives you a message. Which makes sense for messages that don't take content, like you'll typically have for blur, click, focus, ...</text>
  </message>
  <message>
    <ts>2017-07-04T10:15:43.145152</ts>
    <user>U3SJEDR96</user>
    <text>`onInput` should be slightly more interesting</text>
  </message>
  <message>
    <ts>2017-07-04T10:17:02.172832</ts>
    <user>U3YDBDP4Z</user>
    <text>What's the "tagger" function?</text>
  </message>
  <message>
    <ts>2017-07-04T10:18:59.213305</ts>
    <user>U3SJEDR96</user>
    <text>your message. Say you have `type Msg = ReceivedInput String`, then `ReceivedInput` is basically a function of type `String -&amp;gt; Msg`. If you use `onInput ReceivedInput`, that function refers to `ReceivedInput` as the "tagger" with which to tag the data it decodes</text>
  </message>
  <message>
    <ts>2017-07-04T10:19:23.221494</ts>
    <user>U3YDBDP4Z</user>
    <text>Ah, right</text>
  </message>
  <message>
    <ts>2017-07-04T10:19:45.229172</ts>
    <user>U3YDBDP4Z</user>
    <text>Thanks &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-04T10:49:45.860696</ts>
    <user>U3YDBDP4Z</user>
    <text>Not getting it to work.
```
onFormSubmit : (String -&amp;gt; msg) -&amp;gt; Html.Attribute msg
onFormSubmit tagger =
    let
        options =
            { stopPropagation = False
            , preventDefault = True
            }
    in
        Events.onWithOptions "submit" options (Json.map tagger targetData)
```

Used like `onFormSubmit SignIn` on the form.

Causes a page reload.</text>
  </message>
  <message>
    <ts>2017-07-04T10:50:05.867917</ts>
    <user>U3YDBDP4Z</user>
    <text>Switching the line `onFormSubmit SignIn` to the built in `onSubmit SignIn` works</text>
  </message>
  <message>
    <ts>2017-07-04T10:50:24.874189</ts>
    <user>U3YDBDP4Z</user>
    <text>But the implementations look identitical…</text>
  </message>
  <message>
    <ts>2017-07-04T10:56:10.995177</ts>
    <user>U3SJEDR96</user>
    <text>what is targetData?</text>
  </message>
  <message>
    <ts>2017-07-04T10:56:59.012357</ts>
    <user>U3YDBDP4Z</user>
    <text>Json decoder</text>
  </message>
  <message>
    <ts>2017-07-04T10:57:12.016658</ts>
    <user>U3YDBDP4Z</user>
    <text>The same as the built in targetValue decoder</text>
  </message>
  <message>
    <ts>2017-07-04T10:58:37.047200</ts>
    <user>U3SJEDR96</user>
    <text>you'll probably want to stop propagation, too, actually</text>
  </message>
  <message>
    <ts>2017-07-04T10:59:04.056520</ts>
    <user>U3YDBDP4Z</user>
    <text>`onSubmit` doesn't</text>
  </message>
  <message>
    <ts>2017-07-04T11:01:16.104351</ts>
    <user>U2M39B7TM</user>
    <text>One question. How I can decode a union type with decode.pipeline?
```
"""
{
 Click: Int
 action : Action
}
"""

type Action =
  Increment
  | Decrement

decoder : Decoder Types.Model
decoder =
    decode Types.Model
        |&amp;gt; required "click" int
        |&amp;gt; ???

```</text>
  </message>
  <message>
    <ts>2017-07-04T11:02:31.131221</ts>
    <user>U3YDBDP4Z</user>
    <text>Okay, I'm getting an error that's not shown anywhere</text>
  </message>
  <message>
    <ts>2017-07-04T11:02:49.137637</ts>
    <user>U3YDBDP4Z</user>
    <text>Expecting an object with a field named `value` at _.target but instead got: {"0":{},"1":{},"elm_handlers":{}}</text>
  </message>
  <message>
    <ts>2017-07-04T11:03:05.143167</ts>
    <user>U3YDBDP4Z</user>
    <text>when Elm is creating the event handler</text>
  </message>
  <message>
    <ts>2017-07-04T11:03:38.154358</ts>
    <user>U3SJEDR96</user>
    <text>```
actionDecoder : Decoder Action
actionDecoder =
  string |&amp;gt; andThen (\action -&amp;gt;
    case action of
      "Increment" -&amp;gt; succeed Increment
      "Decrement" -&amp;gt; succeed Decrement
      _ -&amp;gt; fail &amp;lt;| "Failed to decode '" ++ action ++ "'"
  )
```</text>
  </message>
  <message>
    <ts>2017-07-04T11:06:12.206729</ts>
    <user>U3YDBDP4Z</user>
    <text>It looks like it fails creating the message constructor</text>
  </message>
  <message>
    <ts>2017-07-04T11:10:58.302506</ts>
    <user>U3SJEDR96</user>
    <text>So what do you expect `event.target.value` to be for an `onSubmit` event? As in, what is the "value" of a `form` element?</text>
  </message>
  <message>
    <ts>2017-07-04T11:15:03.380971</ts>
    <user>U3YDBDP4Z</user>
    <text>I wasn't expecting target.value to be anything, just trying to put things together.
But you are on the right track, that is that it will silently fail and refresh the page if the property on `target` doesn't exist</text>
  </message>
  <message>
    <ts>2017-07-04T11:15:31.390081</ts>
    <user>U3YDBDP4Z</user>
    <text>I just used the targetValue decoder as a template</text>
  </message>
  <message>
    <ts>2017-07-04T11:16:03.400479</ts>
    <user>U3SJEDR96</user>
    <text>close. Your decoder is ran, and returns a `Result String val`. If that is an Err, the event will not be handled by Elm</text>
  </message>
  <message>
    <ts>2017-07-04T11:17:07.420798</ts>
    <user>U3SJEDR96</user>
    <text>i.e. `on "submit" (fail "nah")` would have a similar effect :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-04T11:17:58.436942</ts>
    <user>U3YDBDP4Z</user>
    <text>That's what I mean with a silent fail. The result was an `Err` and anything that isn't `Ok` will just do nothing.</text>
  </message>
  <message>
    <ts>2017-07-04T11:18:34.448763</ts>
    <user>U3YDBDP4Z</user>
    <text>In this case, it caused a page refresh. I suspect I might have seen an error in console if the page hadn't refreshed…?</text>
  </message>
  <message>
    <ts>2017-07-04T11:20:28.485552</ts>
    <user>U3SJEDR96</user>
    <text>Nope, they're not logged; they silently fail</text>
  </message>
  <message>
    <ts>2017-07-04T11:21:27.504716</ts>
    <user>U3SJEDR96</user>
    <text>the refresh is simply because that's the default action for a form, so yeah, you're on the right track, just need a working decoder now. Out of interest, what are you attempting?</text>
  </message>
  <message>
    <ts>2017-07-04T11:23:13.536951</ts>
    <user>U3YDBDP4Z</user>
    <text>Instead of keeping certain short-lived form state in the Model, I want to grab the form data and pass it as a Record to the Update function</text>
  </message>
  <message>
    <ts>2017-07-04T11:24:23.558428</ts>
    <user>U3YDBDP4Z</user>
    <text>Basically, I don't want `onInput` all form fields to put their values in Model</text>
  </message>
  <message>
    <ts>2017-07-04T11:58:31.164177</ts>
    <user>U635238TG</user>
    <text>this might be off topic, but I'm new to programming/web development and found Elm after not liking the whole js mess at all. I love the approach and community here but am worried I'm completely handicapping myself from any future job chances if I focus on self teaching myself this over the next 6-12 months. what would your advice be? I see other functional languages trying to incorporate some of the good in Elm with things like Miso for Haskell. Would that help employment chances though even if I overcome the learning curve? Should I suck it up and learn js and all that mess and keep Elm/FP as a side project for now? Am I overthinking all of this?</text>
  </message>
  <message>
    <ts>2017-07-04T12:10:35.365999</ts>
    <user>U2SR9DL7Q</user>
    <text>chasote: i've had similar concerns. I've basically decided to hedge my bets on elm. 
At the moment, I work primarily as an independent consultant, building desktop apps. I'll eventually branch into web development, and I plan on going Elm first. 
I think FP is no longer some weird sub-niche in the web development world. I also realize that elm was the best way for me to learn the hodge podge of waffle that is javascript through its interaction with elm... where I can digest it all in sane bite sized chunks.</text>
  </message>
  <message>
    <ts>2017-07-04T12:17:12.466546</ts>
    <user>U635238TG</user>
    <text>i like that approach. you are saying learn js as needed in complementing elm? I also wonder if anyone is bootstrapping their own small companies/services while using elm. I don't need much to get by so if there aren't jobs out there for me, I wonder if I could create my own position. I'm basically just trying to rationalize why I'm going to stubbornly stick with Elm. Every experience I've had with it so far has felt right except for the employment opportunities.</text>
  </message>
  <message>
    <ts>2017-07-04T12:18:51.490822</ts>
    <user>U2SR9DL7Q</user>
    <text>for employ by someone else... i'd like to think their hiring process looks for someone who has experience building good, stable, performant sites, using good dev practices, over someone who can write _fancy_ javascript. learning new languages is easy, but developing good code discipline and principle is much more valuable. Elm is good for that.</text>
  </message>
  <message>
    <ts>2017-07-04T12:20:59.521894</ts>
    <user>U635238TG</user>
    <text>make my portfolio so good they can't ignore me. Got it! Hahaha. (That actually is my plan/approach though)</text>
  </message>
  <message>
    <ts>2017-07-04T12:21:31.529928</ts>
    <user>U2SR9DL7Q</user>
    <text>for all its "flaws", python's syntax matters interpreter means I never write sloppy looking code, even when I'm making throw-away scripts. I just never learned how. With Elm, I can never add complexity to one part of my code, and leave it unhandled by the rest. That's *really* important I think.</text>
  </message>
  <message>
    <ts>2017-07-04T12:23:26.557199</ts>
    <user>U635238TG</user>
    <text>Yes, and that is my "back up" I think. Take the good habits and approach developed from Elm and transition it to a more hireable language only when and if I have to. It should give me a leg up over other junior web devs hopefully.</text>
  </message>
  <message>
    <ts>2017-07-04T12:24:20.569772</ts>
    <user>U635238TG</user>
    <text>back to the tutorial! Thank you for the chat</text>
  </message>
  <message>
    <ts>2017-07-04T12:25:07.580413</ts>
    <user>U2SR9DL7Q</user>
    <text>no problem! i return to my crappy website i'm building.</text>
  </message>
  <message>
    <ts>2017-07-04T13:06:47.115779</ts>
    <user>U638BAUJZ</user>
    <text>Executing elm-test throws runtime exception: Cannot read property 'href' of undefined</text>
  </message>
  <message>
    <ts>2017-07-04T13:06:55.117395</ts>
    <user>U638BAUJZ</user>
    <text>&lt;https://stackoverflow.com/questions/44909872/executing-elm-test-throws-runtime-exception-cannot-read-property-href-of-unde&gt;</text>
  </message>
  <message>
    <ts>2017-07-04T13:23:54.312170</ts>
    <user>U2W6RTGQH</user>
    <text>```main: Html msg 
main =
    text "elm"
```
what does msg mean here?</text>
  </message>
  <message>
    <ts>2017-07-04T13:26:34.342907</ts>
    <user>U23SA861Y</user>
    <text>It is the type of the object to be dispatched back to the update function. In this case it is unspecified because text does not use it.</text>
  </message>
  <message>
    <ts>2017-07-04T13:32:42.413101</ts>
    <user>U2W6RTGQH</user>
    <text>`List String` means list with values in string format, do you mean each type can have different values like html can have msg as values?</text>
  </message>
  <message>
    <ts>2017-07-04T13:34:22.431469</ts>
    <user>U23SA861Y</user>
    <text>I mean that `List a` represents a `List` with a parameterized type `a`. It is the value the list contains. That a could be any type `List Int` `List String` `List (Int-&amp;gt;String)`</text>
  </message>
  <message>
    <ts>2017-07-04T13:34:47.436142</ts>
    <user>U23SA861Y</user>
    <text>In the case of html it needs to be one single type, but it could be any type</text>
  </message>
  <message>
    <ts>2017-07-04T13:35:41.446412</ts>
    <user>U23SA861Y</user>
    <text>typically it is a user defined union type and by convention that type is typically called `Msg` note the difference in capitalization</text>
  </message>
  <message>
    <ts>2017-07-04T13:48:52.591979</ts>
    <user>U2W6RTGQH</user>
    <text>got it thanks, but why doesn't `Html Msg` work ?</text>
  </message>
  <message>
    <ts>2017-07-04T13:49:28.598423</ts>
    <user>U23SA861Y</user>
    <text>`Html Msg` would say that this dispatches messages of concrete type `Msg` which it does not</text>
  </message>
  <message>
    <ts>2017-07-04T13:51:35.622800</ts>
    <user>U2W6RTGQH</user>
    <text>but Html msg also does same right ? I'm sorry i'm very new to elm and type system, getting confused.</text>
  </message>
  <message>
    <ts>2017-07-04T13:52:31.632919</ts>
    <user>U3YDBDP4Z</user>
    <text>`msg` is like a placeholder for an unspecified value. While `Msg` is a specific type</text>
  </message>
  <message>
    <ts>2017-07-04T13:52:58.637840</ts>
    <user>U23SA861Y</user>
    <text>I'm not sure where it states it in the docs (or if it does so) but type parameters are uncapitalized and concrete types are capitalized</text>
  </message>
  <message>
    <ts>2017-07-04T13:53:09.639823</ts>
    <user>U3YDBDP4Z</user>
    <text>It's the difference between "I don't know what I'll get but I'll take it" and "I'm expecting this specific thing and will be cranky if I don't get it"</text>
  </message>
  <message>
    <ts>2017-07-04T13:53:34.644274</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U2W6RTGQH&gt;  have you used java or c++ in the past?</text>
  </message>
  <message>
    <ts>2017-07-04T13:53:46.646484</ts>
    <user>U2W6RTGQH</user>
    <text>no, only JS</text>
  </message>
  <message>
    <ts>2017-07-04T13:54:53.659191</ts>
    <user>U2W6RTGQH</user>
    <text>`concrete types are capitalized` sure?</text>
  </message>
  <message>
    <ts>2017-07-04T13:55:06.661674</ts>
    <user>U3YDBDP4Z</user>
    <text>Yup</text>
  </message>
  <message>
    <ts>2017-07-04T13:56:26.676725</ts>
    <user>U2W6RTGQH</user>
    <text>thanks.</text>
  </message>
  <message>
    <ts>2017-07-04T13:58:23.698361</ts>
    <user>U3YDBDP4Z</user>
    <text>Unit testing a `case`, how can I ignore all but the branch I care about testing?</text>
  </message>
  <message>
    <ts>2017-07-04T13:58:43.701852</ts>
    <user>U23SA861Y</user>
    <text>you can put catch all branches in like `_-&amp;gt;`</text>
  </message>
  <message>
    <ts>2017-07-04T13:59:00.704851</ts>
    <user>U23SA861Y</user>
    <text>avoid them in the mainline code but its fine for testing</text>
  </message>
  <message>
    <ts>2017-07-04T13:59:28.709874</ts>
    <user>U3YDBDP4Z</user>
    <text>I still need to return something from that catch all. Not a big deal though.</text>
  </message>
  <message>
    <ts>2017-07-04T13:59:48.713584</ts>
    <user>U23SA861Y</user>
    <text>right, return someting which would fail the test because you are presuming it should never get there</text>
  </message>
  <message>
    <ts>2017-07-04T14:04:17.764795</ts>
    <user>U3YDBDP4Z</user>
    <text>Does a decode `Result` error return any value?</text>
  </message>
  <message>
    <ts>2017-07-04T14:04:39.768677</ts>
    <user>U3YDBDP4Z</user>
    <text>Or is it just `Err -&amp;gt;` in a case branch?</text>
  </message>
  <message>
    <ts>2017-07-04T14:04:59.772328</ts>
    <user>U3YDBDP4Z</user>
    <text>Wondering if it's possible to see what the error was</text>
  </message>
  <message>
    <ts>2017-07-04T14:05:00.772417</ts>
    <user>U17MNKY3H</user>
    <text>It'll have a string message AFAIR.</text>
  </message>
  <message>
    <ts>2017-07-04T14:05:33.778557</ts>
    <user>U17MNKY3H</user>
    <text>An error `Result` can't really be created without a value.</text>
  </message>
  <message>
    <ts>2017-07-04T14:06:39.790620</ts>
    <user>U3YDBDP4Z</user>
    <text>```
getResultValue result =
    case result of
        Ok value -&amp;gt;
            value

        Err err -&amp;gt;
            err
```
Says the type annotation should be `Result a a -&amp;gt; a`</text>
  </message>
  <message>
    <ts>2017-07-04T14:07:02.794844</ts>
    <user>U3YDBDP4Z</user>
    <text>Would have thought it could say `Result String String -&amp;gt; String` or something</text>
  </message>
  <message>
    <ts>2017-07-04T14:07:50.803338</ts>
    <user>U17MNKY3H</user>
    <text>Elm does that. It finds the most general type it can for a function.</text>
  </message>
  <message>
    <ts>2017-07-04T14:08:39.812100</ts>
    <user>U17MNKY3H</user>
    <text>It will accept a less general one though.</text>
  </message>
  <message>
    <ts>2017-07-04T14:08:51.814173</ts>
    <user>U3YDBDP4Z</user>
    <text>Ah, my annotation worked just as well :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-04T14:09:08.817170</ts>
    <user>U23SA861Y</user>
    <text>your annotation can be more specific</text>
  </message>
  <message>
    <ts>2017-07-04T14:09:51.824879</ts>
    <user>U17MNKY3H</user>
    <text>Better wording. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-04T14:11:07.839136</ts>
    <user>U3YDBDP4Z</user>
    <text>Hmm… Invalid JSON : Unexpected token t in JSON at position 53.
```
json =
                        """
                        {
                          target: {
                            elements: {
                              email: {
                                value: "&lt;mailto:jane@mail.com|jane@mail.com&gt;"
                                }
                              }
                            }
                          }
                        """
```</text>
  </message>
  <message>
    <ts>2017-07-04T14:11:28.843036</ts>
    <user>U17MNKY3H</user>
    <text>JSON needs to have string keys.</text>
  </message>
  <message>
    <ts>2017-07-04T14:11:48.846529</ts>
    <user>U17MNKY3H</user>
    <text>`{ "target": ... }` vs `{ target: ... }`</text>
  </message>
  <message>
    <ts>2017-07-04T14:11:58.848330</ts>
    <user>U3YDBDP4Z</user>
    <text>Doh</text>
  </message>
  <message>
    <ts>2017-07-04T14:12:05.849507</ts>
    <user>U17MNKY3H</user>
    <text>:slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-04T14:12:31.854399</ts>
    <user>U3YDBDP4Z</user>
    <text>:clap:</text>
  </message>
  <message>
    <ts>2017-07-04T14:14:20.872912</ts>
    <user>U3YDBDP4Z</user>
    <text>Sweet. Things are moving along!</text>
  </message>
  <message>
    <ts>2017-07-04T15:36:18.706382</ts>
    <user>U2DF486HL</user>
    <text>Hi, how can convert a list of strings, into a single string with its values separeted by ", " ?</text>
  </message>
  <message>
    <ts>2017-07-04T15:36:48.711039</ts>
    <user>U2DF486HL</user>
    <text>or a list of int to a single string separated by ","</text>
  </message>
  <message>
    <ts>2017-07-04T15:38:34.728016</ts>
    <user>U2DF486HL</user>
    <text>I think this can work but not sure if it is the best... String.join "," (List.map (toString) a)</text>
  </message>
  <message>
    <ts>2017-07-04T15:39:38.737968</ts>
    <user>U23SA861Y</user>
    <text>I believe there is a single built info for what you want</text>
  </message>
  <message>
    <ts>2017-07-04T15:39:47.739346</ts>
    <user>U4872964V</user>
    <text>&lt;@U2DF486HL&gt; it's the best! </text>
  </message>
  <message>
    <ts>2017-07-04T15:40:44.748828</ts>
    <user>U23SA861Y</user>
    <text>ahh, yeah String.join is exactly what you want</text>
  </message>
  <message>
    <ts>2017-07-04T15:41:25.755438</ts>
    <user>U23SA861Y</user>
    <text>the List.map is you constructing the list of strings
you might also try:
```
List.map toString a
   |&amp;gt; String.join ","
```</text>
  </message>
  <message>
    <ts>2017-07-04T15:42:19.764372</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U2DF486HL&gt; ^</text>
  </message>
  <message>
    <ts>2017-07-04T15:43:29.775350</ts>
    <user>U23SA861Y</user>
    <text>becareful with toString though, if you thing is already a string it will insert quotes</text>
  </message>
  <message>
    <ts>2017-07-04T15:44:20.783064</ts>
    <user>U2DF486HL</user>
    <text>Ok, I understand.. thank you &lt;@U23SA861Y&gt; and &lt;@U4872964V&gt;</text>
  </message>
  <message>
    <ts>2017-07-04T15:57:18.908527</ts>
    <user>U3YDBDP4Z</user>
    <text>To pluralize or not pluralize module names…</text>
  </message>
  <message>
    <ts>2017-07-04T15:57:24.909573</ts>
    <user>U3YDBDP4Z</user>
    <text>:thinking_face:</text>
  </message>
  <message>
    <ts>2017-07-04T15:57:40.912093</ts>
    <user>U23SA861Y</user>
    <text>the stdlib seems to go with not pluralizing</text>
  </message>
  <message>
    <ts>2017-07-04T15:58:05.916201</ts>
    <user>U23SA861Y</user>
    <text>with the exception of `Basics`</text>
  </message>
  <message>
    <ts>2017-07-04T15:58:28.920007</ts>
    <user>U3YDBDP4Z</user>
    <text>I started with pluralized names, but now I'm leaning towards not</text>
  </message>
  <message>
    <ts>2017-07-04T16:00:09.936285</ts>
    <user>U23SA861Y</user>
    <text>non-plural also reads nice when it's included in the signature like `Msg.map` as opposed to `Msgs.map`</text>
  </message>
  <message>
    <ts>2017-07-04T16:56:38.434508</ts>
    <user>U63PULD18</user>
    <text>Hi! Starting with Elm</text>
  </message>
  <message>
    <ts>2017-07-04T16:59:30.458799</ts>
    <user>U23SA861Y</user>
    <text>Hi! welcome</text>
  </message>
  <message>
    <ts>2017-07-04T17:16:19.597022</ts>
    <user>U62MXFL9K</user>
    <text>hi &lt;@U63PULD18&gt;</text>
  </message>
  <message>
    <ts>2017-07-04T17:16:52.601135</ts>
    <user>U62MXFL9K</user>
    <text>I'm just getting my hands dirty as well</text>
  </message>
  <message>
    <ts>2017-07-04T17:17:21.604780</ts>
    <user>U62MXFL9K</user>
    <text>is anyone interested in doing some pair programming?</text>
  </message>
  <message>
    <ts>2017-07-04T18:08:36.973509</ts>
    <user>U5V0HVAKB</user>
    <text>same lums</text>
  </message>
  <message>
    <ts>2017-07-04T18:08:59.975788</ts>
    <user>U5V0HVAKB</user>
    <text>if another beginner want to learn at two (my english a bit bad) we can vocal</text>
  </message>
  <message>
    <ts>2017-07-04T18:19:50.044853</ts>
    <user>U3FJSB596</user>
    <text>Hi &lt;@U63PULD18&gt; &lt;@U62MXFL9K&gt; &amp;amp; &lt;@U5V0HVAKB&gt;</text>
  </message>
  <message>
    <ts>2017-07-04T18:21:02.052720</ts>
    <user>U5V0HVAKB</user>
    <text>yoyo</text>
  </message>
  <message>
    <ts>2017-07-04T18:21:55.058111</ts>
    <user>U5V0HVAKB</user>
    <text>someone have others good doc for learning elm in depth instead of &lt;https://guide.elm-lang.org/interop/javascript.html&gt; and the elm-tutorial pdf?\</text>
  </message>
  <message>
    <ts>2017-07-04T18:33:17.129379</ts>
    <user>U23SA861Y</user>
    <text>what are you looking for specifically. One of the best ways to learn is by doing</text>
  </message>
  <message>
    <ts>2017-07-04T18:34:22.135203</ts>
    <user>U5V0HVAKB</user>
    <text>i know i want a good tuto about architecture an app</text>
  </message>
  <message>
    <ts>2017-07-04T18:34:26.135589</ts>
    <user>U5V0HVAKB</user>
    <text>with routing etc</text>
  </message>
  <message>
    <ts>2017-07-04T18:34:54.138056</ts>
    <user>U5V0HVAKB</user>
    <text>multiple routes multiple component</text>
  </message>
  <message>
    <ts>2017-07-04T18:36:36.148087</ts>
    <user>U62JFJWKT</user>
    <text>yep the "no component" thing is not very clear, I learn elixir at the same time there's not this big attachement between Module and Data but It make things clear</text>
  </message>
  <message>
    <ts>2017-07-04T18:36:40.148549</ts>
    <user>U23SA861Y</user>
    <text>there is alot of work being done currently to make that easier slated for the next release, but in the mean time there is an example to look at:
&lt;https://github.com/rtfeldman/elm-spa-example&gt;</text>
  </message>
  <message>
    <ts>2017-07-04T18:37:27.153092</ts>
    <user>U62JFJWKT</user>
    <text>what's new in the next release ?</text>
  </message>
  <message>
    <ts>2017-07-04T18:38:02.156410</ts>
    <user>U23SA861Y</user>
    <text>remains exactly to be seen, but there is a road map
&lt;https://github.com/elm-lang/projects/blob/master/roadmap.md&gt;</text>
  </message>
  <message>
    <ts>2017-07-04T18:38:13.157500</ts>
    <user>U62JFJWKT</user>
    <text>oh will take a look thx</text>
  </message>
  <message>
    <ts>2017-07-04T18:39:13.163005</ts>
    <user>U23SA861Y</user>
    <text>noooo, problem</text>
  </message>
  <message>
    <ts>2017-07-04T18:42:00.179700</ts>
    <user>U62JFJWKT</user>
    <text>If i may ask, because I'm not sure</text>
  </message>
  <message>
    <ts>2017-07-04T18:43:01.185890</ts>
    <user>U62JFJWKT</user>
    <text>you're suppose to have a big update func etc, you can break down if it go to big, but sending message to another update func for each components is not elm spirit</text>
  </message>
  <message>
    <ts>2017-07-04T18:43:08.186551</ts>
    <user>U62JFJWKT</user>
    <text>am i right ?</text>
  </message>
  <message>
    <ts>2017-07-04T18:44:18.193284</ts>
    <user>U62JFJWKT</user>
    <text>(My english is atrocious sorry for that, i'm tired)</text>
  </message>
  <message>
    <ts>2017-07-04T18:47:39.213654</ts>
    <user>U23SA861Y</user>
    <text>Initially you should try to keep it simple and the way you do that is just letting your update get a little large.</text>
  </message>
  <message>
    <ts>2017-07-04T18:48:09.216694</ts>
    <user>U23SA861Y</user>
    <text>Then when you can see definite patterns emerging you can factor those out into seperate function perhaps in the same module</text>
  </message>
  <message>
    <ts>2017-07-04T18:48:27.218482</ts>
    <user>U62JFJWKT</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-04T18:48:41.219840</ts>
    <user>U62JFJWKT</user>
    <text>i tend o everdo things</text>
  </message>
  <message>
    <ts>2017-07-04T18:48:56.221300</ts>
    <user>U23SA861Y</user>
    <text>It's only when you find you have a really decoupled or isolated peice of code does it make sense to go through the over head of a seperate update and mapping over the child messages etc</text>
  </message>
  <message>
    <ts>2017-07-04T18:49:07.222462</ts>
    <user>U62JFJWKT</user>
    <text>I see</text>
  </message>
  <message>
    <ts>2017-07-04T18:49:08.222556</ts>
    <user>U23SA861Y</user>
    <text>take a look at the spa example</text>
  </message>
  <message>
    <ts>2017-07-04T18:49:13.222990</ts>
    <user>U62JFJWKT</user>
    <text>yep</text>
  </message>
  <message>
    <ts>2017-07-04T18:49:42.225574</ts>
    <user>U23SA861Y</user>
    <text>and also this:
&lt;https://github.com/evancz/elm-sortable-table&gt;
for what things might look like when you do break it out</text>
  </message>
  <message>
    <ts>2017-07-04T18:52:01.240104</ts>
    <user>U5V0HVAKB</user>
    <text>&lt;https://www.manning.com/books/elm-in-action?a_aid=elm_in_action&amp;amp;a_bid=b15edc5c&gt;</text>
  </message>
  <message>
    <ts>2017-07-04T18:52:12.241231</ts>
    <user>U5V0HVAKB</user>
    <text>wow only 5 elements ready :disappointed:</text>
  </message>
  <message>
    <ts>2017-07-04T18:52:47.244822</ts>
    <user>U62JFJWKT</user>
    <text>I tend to code even crap then read what the best coders do ^^</text>
  </message>
  <message>
    <ts>2017-07-04T18:53:32.249335</ts>
    <user>U23SA861Y</user>
    <text>then might I suggest just write something and learn what not to do from the pain of dealing with it.</text>
  </message>
  <message>
    <ts>2017-07-04T18:54:47.256442</ts>
    <user>U62JFJWKT</user>
    <text>Yep already doing it, in fact it's just sometime i feel lost</text>
  </message>
  <message>
    <ts>2017-07-04T18:54:48.256485</ts>
    <user>U23SA861Y</user>
    <text>little game like breakout or minesweeper or something</text>
  </message>
  <message>
    <ts>2017-07-04T18:55:16.259564</ts>
    <user>U62JFJWKT</user>
    <text>I have a  personnal project already starting by a calendar</text>
  </message>
  <message>
    <ts>2017-07-04T18:55:16.259607</ts>
    <user>U23SA861Y</user>
    <text>if you've got specific questions don't hesitate to drop them in here or &lt;#C0K8VHA6B|help&gt;</text>
  </message>
  <message>
    <ts>2017-07-04T18:55:51.263187</ts>
    <user>U62JFJWKT</user>
    <text>but It may sound stupid but juste gating the current date seem not easy for me</text>
  </message>
  <message>
    <ts>2017-07-04T18:57:17.271598</ts>
    <user>U62JFJWKT</user>
    <text>I'm not asking, want to found out myself :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-04T18:57:55.275503</ts>
    <user>U23SA861Y</user>
    <text>Your right because the question of the current time is inherently stateful</text>
  </message>
  <message>
    <ts>2017-07-04T19:02:57.309072</ts>
    <user>U23SA861Y</user>
    <text>Moreover, there are different ways to get the time depending on how you want to consume it</text>
  </message>
  <message>
    <ts>2017-07-04T19:05:12.323670</ts>
    <user>U62JFJWKT</user>
    <text>I want to use a command at init which launch Time.now then when time is set i know i can render my calendar</text>
  </message>
  <message>
    <ts>2017-07-04T19:05:53.328017</ts>
    <user>U62JFJWKT</user>
    <text>for now my clendar is only rendering "hard coded" dates</text>
  </message>
  <message>
    <ts>2017-07-04T19:10:55.358207</ts>
    <user>U23SA861Y</user>
    <text>Do you understand the relationship between `Cmd` and `Task`?</text>
  </message>
  <message>
    <ts>2017-07-04T19:10:59.358603</ts>
    <user>U3LUC6SNS</user>
    <text>I am thinking of adding a document identifier to my document model and would like some advice.  All database operations are currently handled using an auto-incremented integer id.  However, this is no good when importing linked sets of documents.  I would like to use identifiers something like johndoe.intro-to-forestry.2017.07.04.af36c2.  The first element is the author's username. The second is a normalized version of the title, the third is the creation date, and the fourth is a short hexadecimal random number, say 6 digits long.  Of course identifiers need to be unique with probability near 1.0. Comments?</text>
  </message>
  <message>
    <ts>2017-07-04T19:12:58.370567</ts>
    <user>U23SA861Y</user>
    <text>typically you would normalize something like that, documents get given a unique id and then express relationships between the ids in a separate data structure</text>
  </message>
  <message>
    <ts>2017-07-04T19:13:58.376335</ts>
    <user>U23SA861Y</user>
    <text>either way, that sounds more like a backend thing</text>
  </message>
  <message>
    <ts>2017-07-04T19:15:50.387863</ts>
    <user>U23SA861Y</user>
    <text>it really depends on how you want to index and look up the data</text>
  </message>
  <message>
    <ts>2017-07-04T19:16:26.391179</ts>
    <user>U62JFJWKT</user>
    <text>&lt;@U23SA861Y&gt; for now I have just take into account task can fail</text>
  </message>
  <message>
    <ts>2017-07-04T19:16:50.393534</ts>
    <user>U23SA861Y</user>
    <text>ahh, so here is a subtle thing about that particular task</text>
  </message>
  <message>
    <ts>2017-07-04T19:17:25.396955</ts>
    <user>U23SA861Y</user>
    <text>because it returns a `Task x Time` the x indicates that it is a type variable and this implies that it can never fail</text>
  </message>
  <message>
    <ts>2017-07-04T19:17:35.397942</ts>
    <user>U62JFJWKT</user>
    <text>ah</text>
  </message>
  <message>
    <ts>2017-07-04T19:19:31.409561</ts>
    <user>U62JFJWKT</user>
    <text>ok when my brain will be more rested I'll take a closer look at that</text>
  </message>
  <message>
    <ts>2017-07-04T19:20:19.414435</ts>
    <user>U62JFJWKT</user>
    <text>but you probable saved me a lot of time</text>
  </message>
  <message>
    <ts>2017-07-04T19:20:24.414903</ts>
    <user>U62JFJWKT</user>
    <text>probably</text>
  </message>
  <message>
    <ts>2017-07-04T19:20:49.417665</ts>
    <user>U23SA861Y</user>
    <text>that's what this channel is for :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-04T20:37:38.895395</ts>
    <user>U20K0C2G4</user>
    <text>is there a good way to update one value of a tuple?</text>
  </message>
  <message>
    <ts>2017-07-04T20:38:39.901862</ts>
    <user>U23SA861Y</user>
    <text>how big is the tuple?</text>
  </message>
  <message>
    <ts>2017-07-04T20:38:50.903015</ts>
    <user>U20K0C2G4</user>
    <text>2</text>
  </message>
  <message>
    <ts>2017-07-04T20:40:23.912743</ts>
    <user>U20K0C2G4</user>
    <text>let me clarify</text>
  </message>
  <message>
    <ts>2017-07-04T20:40:27.913244</ts>
    <user>U20K0C2G4</user>
    <text>```                newModel =
                    { model
                        | landingProblemSolutionModels = ( transferRecord.problemSolutionModel, second model.landingProblemSolutionModels )
                    }```</text>
  </message>
  <message>
    <ts>2017-07-04T20:40:53.916352</ts>
    <user>U20K0C2G4</user>
    <text>I have a value that I would like the first part of the tuple to be updated to</text>
  </message>
  <message>
    <ts>2017-07-04T20:43:07.931095</ts>
    <user>U23SA861Y</user>
    <text>I think some of the issues here is in the verbosity of the text, what you have written there is not particularly complex</text>
  </message>
  <message>
    <ts>2017-07-04T20:45:36.948063</ts>
    <user>U20K0C2G4</user>
    <text>&lt;@U23SA861Y&gt; thanks for the response, I'm gonna play around with this</text>
  </message>
  <message>
    <ts>2017-07-04T20:47:13.959453</ts>
    <user>U23SA861Y</user>
    <text>maybe you could do:
```
Tuple.mapFirst (\_-&amp;gt;transferRecord.problemSolutionModel) model.landingProblemSolutionModels
```</text>
  </message>
  <message>
    <ts>2017-07-04T20:47:41.962808</ts>
    <user>U23SA861Y</user>
    <text>but that isn't much more compact</text>
  </message>
  <message>
    <ts>2017-07-04T20:48:02.965188</ts>
    <user>U23SA861Y</user>
    <text>the other thing you can do is pull the tuple creation up into a let block</text>
  </message>
  <message>
    <ts>2017-07-04T20:57:33.034282</ts>
    <user>U20K0C2G4</user>
    <text>yea I guess I was hoping there was a similar syntax for updating tuples as there is for records</text>
  </message>
  <message>
    <ts>2017-07-04T20:57:52.036774</ts>
    <user>U20K0C2G4</user>
    <text>a syntax where I don't have to supplying values for the fields I'm not updating</text>
  </message>
  <message>
    <ts>2017-07-04T23:30:12.279331</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U20K0C2G4&gt; to be fair, depending on how you are using this you might want a record instead of a tuple. or perhaps even two top level entries?</text>
  </message>
  <message>
    <ts>2017-07-05T01:38:55.333444</ts>
    <user>U64MK7215</user>
    <text>hey</text>
  </message>
  <message>
    <ts>2017-07-05T01:39:06.335180</ts>
    <user>U64MK7215</user>
    <text>how to use multiple divs in elm?</text>
  </message>
  <message>
    <ts>2017-07-05T02:48:14.104678</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U64MK7215&gt; wrap them in a div</text>
  </message>
  <message>
    <ts>2017-07-05T02:48:40.110272</ts>
    <user>U153UK3FA</user>
    <text>eg. `div [] [div [] [], div [] []]`</text>
  </message>
  <message>
    <ts>2017-07-05T02:51:51.153695</ts>
    <user>U3YDBDP4Z</user>
    <text>Does Elm have default function parameter syntax?</text>
  </message>
  <message>
    <ts>2017-07-05T02:54:03.184502</ts>
    <user>U1ECWM37W</user>
    <text>Nope</text>
  </message>
  <message>
    <ts>2017-07-05T02:57:04.226462</ts>
    <user>U0CK8CJ5D</user>
    <text>Elm has automatic currying, so you can create functions with preset arguments. Maybe this fits your use case.</text>
  </message>
  <message>
    <ts>2017-07-05T02:57:18.229630</ts>
    <user>U3YDBDP4Z</user>
    <text>Creating unit tests that involves the model can become a bit cumbersome when model has a lot of properties after a while</text>
  </message>
  <message>
    <ts>2017-07-05T02:58:27.245914</ts>
    <user>U0CK8CJ5D</user>
    <text>You could provide a static default model then and use that to create more specialised ones.</text>
  </message>
  <message>
    <ts>2017-07-05T02:59:47.264823</ts>
    <user>U3YDBDP4Z</user>
    <text>You mean creating new ones by updating the default one with the needed properties?</text>
  </message>
  <message>
    <ts>2017-07-05T03:00:26.276501</ts>
    <user>U3YDBDP4Z</user>
    <text>That's an option :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-05T03:00:35.278940</ts>
    <user>U0CK8CJ5D</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-05T07:05:24.107079</ts>
    <user>U604S603Y</user>
    <text>to call some function in my update function I need to create a let ... in ... block, don't I? But then I have to store the result of any function call in a value, even if I don't care for it?</text>
  </message>
  <message>
    <ts>2017-07-05T07:07:30.143631</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U604S603Y&gt; if you don't need the result of the function, why would you call it? Since it can't have side-effects, it won't really do anything, will it? :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-05T07:07:38.145814</ts>
    <user>U604S603Y</user>
    <text>for example:
```ChangeWindowTitle page -&amp;gt;
            let
                pageInfo =
                    getPageInfo page

                _ =
                    Ports.changeWindowTitle pageInfo.baseTitle
            in
                ( model, Cmd.none )```</text>
  </message>
  <message>
    <ts>2017-07-05T07:08:38.163119</ts>
    <user>U3SJEDR96</user>
    <text>Oh, alright. So even that `Ports.changeWindowTitle : String -&amp;gt; Cmd msg` function doesn't have a side effect; and doesn't actually change the window title. Rather, it returns a `Cmd` that describe to the runtime that it needs to call a function in JS</text>
  </message>
  <message>
    <ts>2017-07-05T07:09:15.173273</ts>
    <user>U3SJEDR96</user>
    <text>so you probably want `ChangeWindowTitle page -&amp;gt; ( model, Parts.changeWindowTitle (getPageInfo page |&amp;gt; .baseTitle) )` or something like that</text>
  </message>
  <message>
    <ts>2017-07-05T07:09:33.178383</ts>
    <user>U3SJEDR96</user>
    <text>the important part is that you must return that Cmd from your `update` to have it do anything</text>
  </message>
  <message>
    <ts>2017-07-05T07:13:28.243227</ts>
    <user>U64D26Q95</user>
    <text>Hi. Can anyone help me with decoding the following JSON:
```
{
  "hotels": [ ... ],
  "deals": [ ... ]
}
```
into: ```List Hotel```
where:
```
type alias Hotel =
  { deals : List Deal }
```
, please?</text>
  </message>
  <message>
    <ts>2017-07-05T07:16:21.291271</ts>
    <user>U3SJEDR96</user>
    <text>so each deal is valid for each hotel? or..?</text>
  </message>
  <message>
    <ts>2017-07-05T07:23:19.407818</ts>
    <user>U3SJEDR96</user>
    <text>making a few assumptions here, but possibly something like this: &lt;https://ellie-app.com/3FLMJtntJm8a1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-05T07:55:37.965814</ts>
    <user>U0ULRASLC</user>
    <text>&lt;@U3SJEDR96&gt; I love those fancy resorts with free toilet paper ;D</text>
  </message>
  <message>
    <ts>2017-07-05T07:56:15.977056</ts>
    <user>U3SJEDR96</user>
    <text>Don't we all?</text>
  </message>
  <message>
    <ts>2017-07-05T08:06:10.165000</ts>
    <user>U604S603Y</user>
    <text>with the elm debugger (seems to be builtin?) running in Chrome -&amp;gt; is there a way to look into the Message contents?</text>
  </message>
  <message>
    <ts>2017-07-05T08:07:33.190934</ts>
    <user>U0ULRASLC</user>
    <text>if elm debugger is running you can just click on it and it will open a window with all the Messages and states</text>
  </message>
  <message>
    <ts>2017-07-05T08:08:13.203773</ts>
    <user>U0ULRASLC</user>
    <text>the thing in the bottom right corner of the page</text>
  </message>
  <message>
    <ts>2017-07-05T08:09:11.222102</ts>
    <user>U3SJEDR96</user>
    <text>also, for quick-n-dirty msg logging, `case Debug.log "msg" msg of` in your `update` :wink:</text>
  </message>
  <message>
    <ts>2017-07-05T08:09:13.222790</ts>
    <user>U604S603Y</user>
    <text>yeah but the Messages part of it is so small so I can't see the data, even when hovering over it</text>
  </message>
  <message>
    <ts>2017-07-05T08:11:16.263147</ts>
    <user>U604S603Y</user>
    <text>ah okay, it does not show the whole message content anyway (looked into the elm debug window with Chrome's devtools)</text>
  </message>
  <message>
    <ts>2017-07-05T08:11:23.265581</ts>
    <user>U604S603Y</user>
    <text>well, it's still awesome</text>
  </message>
  <message>
    <ts>2017-07-05T08:12:12.281582</ts>
    <user>U64D26Q95</user>
    <text>ilias: Thank you very much for that!</text>
  </message>
  <message>
    <ts>2017-07-05T08:12:34.288869</ts>
    <user>U641LDZFU</user>
    <text>Hey, I have scanned the FAQ, but couldn't find an answer, could anyone help me with a wee problem?</text>
  </message>
  <message>
    <ts>2017-07-05T08:12:37.290022</ts>
    <user>U604S603Y</user>
    <text>woah, `case Debug.log "msg" msg of` is great!</text>
  </message>
  <message>
    <ts>2017-07-05T08:13:39.309777</ts>
    <user>U41NK9BM4</user>
    <text>Tell us, Allan</text>
  </message>
  <message>
    <ts>2017-07-05T08:14:17.322374</ts>
    <user>U641LDZFU</user>
    <text>I want to specify that the return type of a function could be one of a few things, is it possible? i.e. functio : Alias1 -&amp;gt; model -&amp;gt; Maybe OneOfAFewThings</text>
  </message>
  <message>
    <ts>2017-07-05T08:15:17.342081</ts>
    <user>U3SJEDR96</user>
    <text>you could do that by making `OneOfAFewThings` a type: `type OneOfAFewThings = AString String | OrMaybeAnInt Int | SomethingElseEntirely FooBar`</text>
  </message>
  <message>
    <ts>2017-07-05T08:15:58.355948</ts>
    <user>U641LDZFU</user>
    <text>Awesome, thanks, will give that a whirl</text>
  </message>
  <message>
    <ts>2017-07-05T08:16:00.356406</ts>
    <user>U3SJEDR96</user>
    <text>You have to be explicit about the types, wrap them with a "tagger" and unwrap them where you use them, though</text>
  </message>
  <message>
    <ts>2017-07-05T08:16:42.370572</ts>
    <user>U641LDZFU</user>
    <text>There are some good search terms for me :smile:</text>
  </message>
  <message>
    <ts>2017-07-05T08:17:21.383559</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://guide.elm-lang.org/types/union_types.html&gt; might help :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-05T10:30:46.219074</ts>
    <user>U5H8JJP24</user>
    <text>Hi guys, I've got following problem:

I have a port that sends a url of a picture as a String. I want to decode this string to the type Photo (Maybe String)
Therefore I have this photo decoder:
```
decoder : Decoder Photo
decoder =
	Decode.map Photo (Decode.nullable Decode.string)
```

I am calling it like this, but decoding always fails. I guess because decodeString needs input in JSON format. My question now is, how can I decode a simple String to a custom type?

```
Ports.elm
port getPicture : (String -&amp;gt; msg) -&amp;gt; Sub msg

File2.elm
onGetPicture : Sub (Msg Result String Photo)
onGetPicture =
	Ports.getPicture (Decode.decodeString Photo.decoder)
```</text>
  </message>
  <message>
    <ts>2017-07-05T10:35:51.401694</ts>
    <user>U4872964V</user>
    <text>&lt;@U5H8JJP24&gt; if it's already a string, why decode it?</text>
  </message>
  <message>
    <ts>2017-07-05T10:36:25.421262</ts>
    <user>U4872964V</user>
    <text>what do you want to do with the string?</text>
  </message>
  <message>
    <ts>2017-07-05T10:36:32.425748</ts>
    <user>U5H8JJP24</user>
    <text>I need to transform it into my custom Type Photo</text>
  </message>
  <message>
    <ts>2017-07-05T10:36:51.436266</ts>
    <user>U4872964V</user>
    <text>ok, so what's that type?</text>
  </message>
  <message>
    <ts>2017-07-05T10:37:24.455469</ts>
    <user>U5H8JJP24</user>
    <text>type Photo = Photo (Maybe String)</text>
  </message>
  <message>
    <ts>2017-07-05T10:37:49.469838</ts>
    <user>U4872964V</user>
    <text>so, just do `Photo (Just yourStringFromYourPort)`</text>
  </message>
  <message>
    <ts>2017-07-05T10:38:25.491215</ts>
    <user>U4872964V</user>
    <text>`getPicture (Photo &amp;lt;&amp;lt; Just)` for short</text>
  </message>
  <message>
    <ts>2017-07-05T10:38:30.493785</ts>
    <user>U5H8JJP24</user>
    <text>Thx &lt;@U4872964V&gt; I will give it a try. I think I was overcomplicating it a little bit too much</text>
  </message>
  <message>
    <ts>2017-07-05T10:39:11.517213</ts>
    <user>U4872964V</user>
    <text>sorry wrong arrow :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-05T10:41:38.603887</ts>
    <user>U0J8D9M2P</user>
    <text>what is possible in Elm that in JS is impossible?</text>
  </message>
  <message>
    <ts>2017-07-05T10:42:40.640268</ts>
    <user>U4872964V</user>
    <text>&lt;@U0J8D9M2P&gt; to enjoy programming? I'm not sure I understand the question, everything that's possible in Elm can be done in JS, with more pain and headache</text>
  </message>
  <message>
    <ts>2017-07-05T10:43:29.668513</ts>
    <user>U0JFXEUCT</user>
    <text>uhh, fearless refactoring :smile:</text>
  </message>
  <message>
    <ts>2017-07-05T10:44:13.694407</ts>
    <user>U0JFXEUCT</user>
    <text>to be able to add a feature to a large codebase and have a very strong degree of confidence you didn't break anything else</text>
  </message>
  <message>
    <ts>2017-07-05T10:44:46.714625</ts>
    <user>U0JFXEUCT</user>
    <text>another one would be the enforced semantic versioning on elm packages</text>
  </message>
  <message>
    <ts>2017-07-05T10:44:52.717936</ts>
    <user>U0JFXEUCT</user>
    <text>not sure that's really possible with js</text>
  </message>
  <message>
    <ts>2017-07-05T10:45:26.738650</ts>
    <user>U23SA861Y</user>
    <text>well one thing that is possible in JS that is impossible in elm: having a runtime exception</text>
  </message>
  <message>
    <ts>2017-07-05T10:46:51.790211</ts>
    <user>U0J8D9M2P</user>
    <text>Yes, that's a good points. I've mentioned all of this already. I'm trying to deliver step by step small things to my work. So everyone can get more and more exited about it like me.</text>
  </message>
  <message>
    <ts>2017-07-05T10:48:22.844974</ts>
    <user>U0JFXEUCT</user>
    <text>I'm working on bringing elm guarantees to style as well with the `style-elements` library.</text>
  </message>
  <message>
    <ts>2017-07-05T10:48:38.854581</ts>
    <user>U0JFXEUCT</user>
    <text>(just gave a talk at elm europe about it: &lt;https://www.youtube.com/watch?v=NYb2GDWMIm0&gt;)</text>
  </message>
  <message>
    <ts>2017-07-05T10:49:49.896966</ts>
    <user>U0JFXEUCT</user>
    <text>I believe it would be much harder to have a similar system in JS.  Though probably not 100% impossible.</text>
  </message>
  <message>
    <ts>2017-07-05T10:52:25.991931</ts>
    <user>U5XC2FJ1Y</user>
    <text>runtime exceptions in elm are not impossible, of course, just difficult</text>
  </message>
  <message>
    <ts>2017-07-05T10:54:28.066141</ts>
    <user>U0LPMPL2U</user>
    <text>null-checking is a huge feature of Elm over JS for me</text>
  </message>
  <message>
    <ts>2017-07-05T10:55:13.093836</ts>
    <user>U0LPMPL2U</user>
    <text>instead of defaulting to "everything could be null unless you've proven otherwise", Elm says "everything is guaranteed present unless it's wrapped in Maybe"</text>
  </message>
  <message>
    <ts>2017-07-05T10:55:26.101891</ts>
    <user>U4872964V</user>
    <text>&lt;@U0JFXEUCT&gt; just saw that talk, impressive work</text>
  </message>
  <message>
    <ts>2017-07-05T10:55:52.118385</ts>
    <user>U0JFXEUCT</user>
    <text>thanks!</text>
  </message>
  <message>
    <ts>2017-07-05T10:57:13.168241</ts>
    <user>U0JFXEUCT</user>
    <text>as a comparison to typescript, Elm is safe by default while typescript makes you work and remain diligent for your safety</text>
  </message>
  <message>
    <ts>2017-07-05T10:57:29.178444</ts>
    <user>U0JFXEUCT</user>
    <text>basically you dont get that awesome refactoring experience</text>
  </message>
  <message>
    <ts>2017-07-05T10:57:36.182933</ts>
    <user>U0JFXEUCT</user>
    <text>unless you work real hard</text>
  </message>
  <message>
    <ts>2017-07-05T10:57:39.184972</ts>
    <user>U0K92QFST</user>
    <text>I think the answer to &lt;@U0J8D9M2P&gt;'s question can be summed up with the word "guarantees," specifically guarantees about the primitive data you're using and the shape of your larger data structures before runtime</text>
  </message>
  <message>
    <ts>2017-07-05T10:58:00.198540</ts>
    <user>U0K92QFST</user>
    <text>In JS, no matter what you do, you *cannot* guarantee anything</text>
  </message>
  <message>
    <ts>2017-07-05T10:58:07.202791</ts>
    <user>U0K92QFST</user>
    <text>even if you use Typescript or Flowtype</text>
  </message>
  <message>
    <ts>2017-07-05T10:58:28.216539</ts>
    <user>U4872964V</user>
    <text>another _opionated_ advantage of Elm is that Elm is opionated, i.e. there is mostly only one way to do something</text>
  </message>
  <message>
    <ts>2017-07-05T10:58:34.220187</ts>
    <user>U0JFXEUCT</user>
    <text>I like to think of elm as having a "vacation guarantee".  Meaning when it compiles, I can likely take a vacation.</text>
  </message>
  <message>
    <ts>2017-07-05T10:58:45.227255</ts>
    <user>U0K92QFST</user>
    <text>aha, that's a good way of putting it</text>
  </message>
  <message>
    <ts>2017-07-05T10:59:33.256586</ts>
    <user>U0J8D9M2P</user>
    <text>Yes the most stopping thing now is that they say it's small community and Evan is the sole decision maker for the language. And that Elm has no group, board or foundation behind it. But the thing is that we use now AngularJS which has Google behind it. And what they did is that they just "killed" AngularJS with it's next version. Even migration from 1.5 to 1.6 brings us quite much of pain so we still got those exceptions from production. Even they are not really harmful.</text>
  </message>
  <message>
    <ts>2017-07-05T11:00:40.299697</ts>
    <user>U0K92QFST</user>
    <text>&lt;@U0J8D9M2P&gt; would you consider Ruby and Python to be mature languages?</text>
  </message>
  <message>
    <ts>2017-07-05T11:00:50.305560</ts>
    <user>U0JFXEUCT</user>
    <text>I mean, Evan is employed to work full time on Elm</text>
  </message>
  <message>
    <ts>2017-07-05T11:00:54.308121</ts>
    <user>U0JFXEUCT</user>
    <text>through NoRedInk</text>
  </message>
  <message>
    <ts>2017-07-05T11:01:12.319191</ts>
    <user>U0JFXEUCT</user>
    <text>I would really _not_ want elm to be behind a board, actually</text>
  </message>
  <message>
    <ts>2017-07-05T11:01:18.323581</ts>
    <user>U0J8D9M2P</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-05T11:02:04.352189</ts>
    <user>U0K92QFST</user>
    <text>I think Elm's patronage is very similar to that of Rails, to use a familiar example</text>
  </message>
  <message>
    <ts>2017-07-05T11:02:14.358361</ts>
    <user>U4872964V</user>
    <text>Elm certainly lacks in quantity in many respects, but you only need quality to make a great app</text>
  </message>
  <message>
    <ts>2017-07-05T11:02:23.363747</ts>
    <user>U0K92QFST</user>
    <text>Rails is propped up by Basecamp, which is a small company</text>
  </message>
  <message>
    <ts>2017-07-05T11:02:34.370621</ts>
    <user>U0K92QFST</user>
    <text>which means that Rails will always be optimized for solving the needs of a small company</text>
  </message>
  <message>
    <ts>2017-07-05T11:02:39.373714</ts>
    <user>U0JFXEUCT</user>
    <text>I guess I have much more faith in the Elm community to maintain a design focus than I do with Google</text>
  </message>
  <message>
    <ts>2017-07-05T11:02:49.379756</ts>
    <user>U0J8D9M2P</user>
    <text>I told actually that small community has it's benefits as well. It's less of the mess. You can get clear answer all the time. Everyone like a family.</text>
  </message>
  <message>
    <ts>2017-07-05T11:03:05.389897</ts>
    <user>U0K92QFST</user>
    <text>If you look at AngularJS or Go, which are propped up by Google, you see that they'll always be optimized for solving the problems of a Google-like company</text>
  </message>
  <message>
    <ts>2017-07-05T11:03:16.396554</ts>
    <user>U0K92QFST</user>
    <text>the problem with that is there's precisely one Google-like company on Earth :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-05T11:04:17.434197</ts>
    <user>U0J8D9M2P</user>
    <text>The good thing is that half of the team already loves Elm. And we gonna have competition between new technologies to choose one.</text>
  </message>
  <message>
    <ts>2017-07-05T11:04:33.444674</ts>
    <user>U0K92QFST</user>
    <text>although I agree that there will inevitably be migrations pains down the road, Elm will *always* be easier to upgrade because a lot of it can be done statically, thanks to static types!</text>
  </message>
  <message>
    <ts>2017-07-05T11:04:57.459323</ts>
    <user>U0K92QFST</user>
    <text>if your teammates are afraid of upgrades across breaking versions, you should show them some of the tools that were made to ease the transition from 0.17 to 0.18</text>
  </message>
  <message>
    <ts>2017-07-05T11:05:08.466354</ts>
    <user>U0K92QFST</user>
    <text>&lt;https://www.npmjs.com/package/elm-upgrade&gt;</text>
  </message>
  <message>
    <ts>2017-07-05T11:06:05.500836</ts>
    <user>U0K92QFST</user>
    <text>and if they're afraid of the Elm community being too small, I would encourage you to show them how many community members responded to your question on here :smile:</text>
  </message>
  <message>
    <ts>2017-07-05T11:06:09.503032</ts>
    <user>U0J8D9M2P</user>
    <text>Yes, that's a good one. Thanks</text>
  </message>
  <message>
    <ts>2017-07-05T11:06:38.521109</ts>
    <user>U0J8D9M2P</user>
    <text>Thank you support!</text>
  </message>
  <message>
    <ts>2017-07-05T11:07:08.539455</ts>
    <user>U3SJEDR96</user>
    <text>Just to pump up the number: I agree with most everything said. :heart:</text>
  </message>
  <message>
    <ts>2017-07-05T11:10:21.655166</ts>
    <user>U0CLDU8UB</user>
    <text>Me too. I personally upgraded a 10kLOC Elm codebase from signals to no signals. It took time, sure, but I was never afraid I will not make it though.</text>
  </message>
  <message>
    <ts>2017-07-05T11:10:47.671515</ts>
    <user>U0JFXEUCT</user>
    <text>Something to think about for patronage:  in the past year there have been 3 elm specific conferences this year.  Sponsored by large names such as google, microsoft, firefox and ableton.  As well as numerous other sponsors</text>
  </message>
  <message>
    <ts>2017-07-05T11:11:18.690418</ts>
    <user>U0JFXEUCT</user>
    <text>as far as growth, thats 3 more elm conferences than in any previous year</text>
  </message>
  <message>
    <ts>2017-07-05T11:11:40.702928</ts>
    <user>U0CLDU8UB</user>
    <text>Infinite growth!</text>
  </message>
  <message>
    <ts>2017-07-05T11:13:27.767347</ts>
    <user>U0K92QFST</user>
    <text>Also, more companies using Elm -&amp;gt; more diverse patronage</text>
  </message>
  <message>
    <ts>2017-07-05T11:13:51.781995</ts>
    <user>U0K92QFST</user>
    <text>our local Ruby conference last month was sponsored by 6-8 medium-sized companies. No Googles needed!</text>
  </message>
  <message>
    <ts>2017-07-05T11:15:57.857754</ts>
    <user>U0J8D9M2P</user>
    <text>&amp;gt; Let's be mainstream!</text>
  </message>
  <message>
    <ts>2017-07-05T11:15:58.858454</ts>
    <user>U3SJEDR96</user>
    <text>I think my single biggest qualm with Elm is this: I despise working with anything _but_ Elm now.</text>
  </message>
  <message>
    <ts>2017-07-05T11:35:20.550904</ts>
    <user>U62JFJWKT</user>
    <text>Hum, I am playing with elm, currently with a calendar, since I'm not sure to have the date at first (probably I clould order command that's not the point), I set it to Maybe in model and nothing at init. When I receive CurrentDate Message I setup my calendar</text>
  </message>
  <message>
    <ts>2017-07-05T11:35:29.556047</ts>
    <user>U62JFJWKT</user>
    <text>&lt;https://gist.github.com/wow-sweetlie/22f14f58d4c021ed7144695de09ddba2&gt;</text>
  </message>
  <message>
    <ts>2017-07-05T11:35:34.559421</ts>
    <user>U62JFJWKT</user>
    <text>looks like this</text>
  </message>
  <message>
    <ts>2017-07-05T11:35:47.566504</ts>
    <user>U62JFJWKT</user>
    <text>the maybe thing is irritating me</text>
  </message>
  <message>
    <ts>2017-07-05T11:36:00.574331</ts>
    <user>U62JFJWKT</user>
    <text>Looks like I do something wrong</text>
  </message>
  <message>
    <ts>2017-07-05T11:36:42.598121</ts>
    <user>U62JFJWKT</user>
    <text>any advice ?</text>
  </message>
  <message>
    <ts>2017-07-05T11:41:19.757108</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U62JFJWKT&gt; reimplement your function with this signature: `setupCalendar: Date -&amp;gt; Calendar.Model -&amp;gt; Calendar.Model` and then use it like this `Maybe.map (setupCalendar myDate) maybeCalendar` which will return a `Maybe Calendar`. that way, your helper-function doesn't have to deal with Maybe's, only your update-function does (with the Maybe.map)</text>
  </message>
  <message>
    <ts>2017-07-05T11:42:19.792313</ts>
    <user>U62JFJWKT</user>
    <text>ok sounds good</text>
  </message>
  <message>
    <ts>2017-07-05T11:44:17.862007</ts>
    <user>U0LPMPL2U</user>
    <text>Can you avoid the Maybe altogether by passing in a date as a flag when initializing the program?</text>
  </message>
  <message>
    <ts>2017-07-05T11:44:43.876428</ts>
    <user>U23SA861Y</user>
    <text>You could but thats needs some top level JS to do</text>
  </message>
  <message>
    <ts>2017-07-05T11:45:43.912403</ts>
    <user>U5H8JJP24</user>
    <text>&lt;@U4872964V&gt; Thx again, your example worked like a charm. I just got another more general question.
I am coming from the JS world and know the differences between &amp;gt;&amp;gt; and |&amp;gt; in theory, but to me it seems that you often can accomplish the same with piping and composition.
When is it better/looks better to use what.</text>
  </message>
  <message>
    <ts>2017-07-05T11:45:45.914116</ts>
    <user>U62JFJWKT</user>
    <text>yep I try to avoid js</text>
  </message>
  <message>
    <ts>2017-07-05T11:46:33.942716</ts>
    <user>U4872964V</user>
    <text>&lt;@U5H8JJP24&gt; `&amp;gt;&amp;gt;` is used to compose functions, `|&amp;gt;` is used to pipe values</text>
  </message>
  <message>
    <ts>2017-07-05T11:47:14.965790</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U5H8JJP24&gt;  `|&amp;gt;` requires a concrete value while `&amp;gt;&amp;gt;` can combines functions without needing to have the argument</text>
  </message>
  <message>
    <ts>2017-07-05T11:47:17.968163</ts>
    <user>U4872964V</user>
    <text>So, when you're construction a _function_ you use `&amp;gt;&amp;gt;` but when you're piping a value through a function you use `|&amp;gt;`</text>
  </message>
  <message>
    <ts>2017-07-05T11:47:27.973898</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U62JFJWKT&gt; another hacky way is to use time, set it to 0 and then do `if model.time == 0 then text "loading" else div [] [ viewCalendar (Date.fromTime model.time) ]`</text>
  </message>
  <message>
    <ts>2017-07-05T11:47:48.985890</ts>
    <user>U4872964V</user>
    <text>In your case, your port wanted a function, so you use the `&amp;gt;&amp;gt;` operator (or `&amp;lt;&amp;lt;`)</text>
  </message>
  <message>
    <ts>2017-07-05T11:48:00.992508</ts>
    <user>U1AN4JRFV</user>
    <text>or smthing like that. joelq's suggestion is the preferrable one, if you want to avoid `Maybe`</text>
  </message>
  <message>
    <ts>2017-07-05T11:48:09.998215</ts>
    <user>U62JFJWKT</user>
    <text>you're right but I'm exploring :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-05T11:48:17.002806</ts>
    <user>U5H8JJP24</user>
    <text>So &amp;gt;&amp;gt; is for constructing more generic functions which may be used with values later and piping is for actually piping a value?</text>
  </message>
  <message>
    <ts>2017-07-05T11:48:38.015287</ts>
    <user>U4872964V</user>
    <text>&lt;@U5H8JJP24&gt; basically</text>
  </message>
  <message>
    <ts>2017-07-05T11:48:39.015893</ts>
    <user>U62JFJWKT</user>
    <text>hacky way for letter</text>
  </message>
  <message>
    <ts>2017-07-05T11:49:58.061845</ts>
    <user>U0LPMPL2U</user>
    <text>```
True |&amp;gt; not -- False
.isSelected &amp;gt;&amp;gt; not -- function with signature { a | isSelected : Bool } -&amp;gt; Bool
```</text>
  </message>
  <message>
    <ts>2017-07-05T11:54:57.239028</ts>
    <user>U41CTMR1S</user>
    <text>Hi everyone, I have a n00b question, what is the recommended way to use css? It's the only thing that not clear for me after reading the wonderful intro  guide. I read about elm-css and elm-style but I don't sure what the difference is. thanks!</text>
  </message>
  <message>
    <ts>2017-07-05T11:58:03.348299</ts>
    <user>U2M39B7TM</user>
    <text>Beginner question. How I can decode something like this?
```
type Page
    = Home Home.Model
    | Dresses Dresses.Model


-- in Home.Model

type alias Model = {
  title: String 
}

"""
{"Home":{"title":"home"}}
or 
{"Dresses":{"other":"property"}}

"""

```</text>
  </message>
  <message>
    <ts>2017-07-05T11:59:27.398787</ts>
    <user>U4872964V</user>
    <text>&lt;@U41CTMR1S&gt;, elm-css is closer to plain css, elm-style is a more composable way to do css</text>
  </message>
  <message>
    <ts>2017-07-05T12:00:50.450424</ts>
    <user>U4872964V</user>
    <text>&lt;@U2M39B7TM&gt; you'd probably use the `oneOf` decoder, and then a list of `field` decoders with the different constructors</text>
  </message>
  <message>
    <ts>2017-07-05T12:02:25.507371</ts>
    <user>U0LPMPL2U</user>
    <text>Look into `Json.Decode.keyValuePairs`</text>
  </message>
  <message>
    <ts>2017-07-05T12:03:04.529429</ts>
    <user>U3HQVHERX</user>
    <text>You might want to use `at ["Home","title"]` to dive into the json</text>
  </message>
  <message>
    <ts>2017-07-05T12:03:26.541614</ts>
    <user>U4872964V</user>
    <text>`keyValuePairs` does not really work if the values are different types though</text>
  </message>
  <message>
    <ts>2017-07-05T12:05:18.606084</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U41CTMR1S&gt; if you are just starting out i would recommend sticking with plain css</text>
  </message>
  <message>
    <ts>2017-07-05T12:05:36.616094</ts>
    <user>U4872964V</user>
    <text>I'd do it like this
```
oneOf
    [ map Home (field "Home" homeDecoder)
    , map Dresses (field "Dresses" dressesDecoder)
    ]
```</text>
  </message>
  <message>
    <ts>2017-07-05T12:07:30.677780</ts>
    <user>U41CTMR1S</user>
    <text>&lt;@U4872964V&gt; &lt;@U3HQVHERX&gt; thanks</text>
  </message>
  <message>
    <ts>2017-07-05T12:07:55.690790</ts>
    <user>U41CTMR1S</user>
    <text>&lt;@U3HQVHERX&gt; how can I integrate css file with elm-reactor?</text>
  </message>
  <message>
    <ts>2017-07-05T12:08:13.700372</ts>
    <user>U2M39B7TM</user>
    <text>I'll try. ty</text>
  </message>
  <message>
    <ts>2017-07-05T12:09:18.735192</ts>
    <user>U4872964V</user>
    <text>&lt;@U41CTMR1S&gt; you can include a stylesheet in your view like this:
```
node "link"
        [ rel "stylesheet"
        , href "yourstyle.css"
        ]
        []
```</text>
  </message>
  <message>
    <ts>2017-07-05T12:13:22.868140</ts>
    <user>U41CTMR1S</user>
    <text>I see. My specific use case is 3rd party widget. Inline css help me to avoid class/id conflict, but feel more complicated and less natural with elm-css/style</text>
  </message>
  <message>
    <ts>2017-07-05T12:14:53.917230</ts>
    <user>U4872964V</user>
    <text>not sure what you mean by 3rd party widget</text>
  </message>
  <message>
    <ts>2017-07-05T12:16:58.983788</ts>
    <user>U41CTMR1S</user>
    <text>I write widget that another website implement in their website. Disqus is one example.</text>
  </message>
  <message>
    <ts>2017-07-05T12:17:36.004378</ts>
    <user>U4872964V</user>
    <text>ok, and they want to change styles with stylesheets?</text>
  </message>
  <message>
    <ts>2017-07-05T12:18:25.029853</ts>
    <user>U41CTMR1S</user>
    <text>Usually widgets like Disqus use iframe, but I must seat in the website html for my use case</text>
  </message>
  <message>
    <ts>2017-07-05T12:19:27.063147</ts>
    <user>U41CTMR1S</user>
    <text>&lt;@U4872964V&gt; nope. I afraid to collide with their styles</text>
  </message>
  <message>
    <ts>2017-07-05T12:19:44.072426</ts>
    <user>U4872964V</user>
    <text>ok, i'd either use a unique class/id prefix or use inline styles</text>
  </message>
  <message>
    <ts>2017-07-05T12:19:55.077948</ts>
    <user>U62JFJWKT</user>
    <text>module Calendar exposing (..) &amp;lt;- it doesn't export record types ?</text>
  </message>
  <message>
    <ts>2017-07-05T12:20:20.091272</ts>
    <user>U4872964V</user>
    <text>&lt;@U62JFJWKT&gt; it exposes everything, so yes it does</text>
  </message>
  <message>
    <ts>2017-07-05T12:21:24.125568</ts>
    <user>U62JFJWKT</user>
    <text>:open_mouth:  I suppose i've done a typ</text>
  </message>
  <message>
    <ts>2017-07-05T12:21:32.129931</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U41CTMR1S&gt; you could also use inline styles from the html attributes package. nothing wrong with that. `p [style [("background","red")]][text "hello"]` or instead of using elm reactor you could use `elm-make` and include your js and css on a seperate index page</text>
  </message>
  <message>
    <ts>2017-07-05T12:21:54.141744</ts>
    <user>U3HQVHERX</user>
    <text>if you are writing a widget you will likely be embedding it anyway, right?</text>
  </message>
  <message>
    <ts>2017-07-05T12:23:00.176791</ts>
    <user>U41CTMR1S</user>
    <text>currently I use React+Styled Components, so I got single js file with inline css, much simpler to implement..</text>
  </message>
  <message>
    <ts>2017-07-05T12:23:39.196808</ts>
    <user>U63UF49NH</user>
    <text>In cases like that I really wish Firefox &amp;amp; Edge would finish their ShadowDom implementations.</text>
  </message>
  <message>
    <ts>2017-07-05T12:24:20.218007</ts>
    <user>U63UF49NH</user>
    <text>This is better than it has been, but not quire there yet: &lt;http://caniuse.com/#search=shadow%20dom%20v1&gt;</text>
  </message>
  <message>
    <ts>2017-07-05T12:25:02.239803</ts>
    <user>U63UF49NH</user>
    <text>I don't know what Elm integration would look like, but I imagine there would be an elegant way to make that work.</text>
  </message>
  <message>
    <ts>2017-07-05T12:30:35.417105</ts>
    <user>U41CTMR1S</user>
    <text>&lt;@U3HQVHERX&gt; with html package I loose the prefixing. Also, the official docs say "the general recommendation is to use this function lightly"</text>
  </message>
  <message>
    <ts>2017-07-05T12:31:39.451374</ts>
    <user>U4872964V</user>
    <text>&lt;@U41CTMR1S&gt; you can make inline styles with elm-css too</text>
  </message>
  <message>
    <ts>2017-07-05T12:32:42.483708</ts>
    <user>U4872964V</user>
    <text>`Css.asPairs`</text>
  </message>
  <message>
    <ts>2017-07-05T12:33:10.497555</ts>
    <user>U41CTMR1S</user>
    <text>yep, but I loose pseudo-classes support</text>
  </message>
  <message>
    <ts>2017-07-05T12:34:18.531667</ts>
    <user>U41CTMR1S</user>
    <text>looks like no all-in-one solution like styled-compoents but I can live with it</text>
  </message>
  <message>
    <ts>2017-07-05T12:34:50.547672</ts>
    <user>U4872964V</user>
    <text>well, then you'd use elm-css to generate the css file (with your prefix of choice)</text>
  </message>
  <message>
    <ts>2017-07-05T12:36:18.592747</ts>
    <user>U41CTMR1S</user>
    <text>I'll try it out</text>
  </message>
  <message>
    <ts>2017-07-05T12:36:26.597222</ts>
    <user>U41CTMR1S</user>
    <text>thanks again</text>
  </message>
  <message>
    <ts>2017-07-05T12:37:00.613685</ts>
    <user>U4872964V</user>
    <text>yeah, how you handle css will depend very much on your use case</text>
  </message>
  <message>
    <ts>2017-07-05T12:37:12.619570</ts>
    <user>U4872964V</user>
    <text>that's why there are multiple options, i suppose</text>
  </message>
  <message>
    <ts>2017-07-05T13:17:51.880628</ts>
    <user>U2W6RTGQH</user>
    <text>we can import attributes from `Html.Attributes` but exposing `Attributes` from `Html` says `Html doesn't expose Attributes`, then how does `Html.Attributes` work ?</text>
  </message>
  <message>
    <ts>2017-07-05T13:19:23.926172</ts>
    <user>U0LPMPL2U</user>
    <text>The _module_ is named `Html.Attributes` but the _type_ is `Html.Attribute`</text>
  </message>
  <message>
    <ts>2017-07-05T13:19:30.929922</ts>
    <user>U0LPMPL2U</user>
    <text>note the singular vs plural</text>
  </message>
  <message>
    <ts>2017-07-05T13:19:51.940279</ts>
    <user>U0LPMPL2U</user>
    <text>so you could say:
```
import Html.Attributes exposing(Attribute)
```</text>
  </message>
  <message>
    <ts>2017-07-05T13:21:39.994204</ts>
    <user>U4872964V</user>
    <text>&lt;@U2W6RTGQH&gt; `Html.Attributes` is just a module name. It's nothing that lives in the `Html` module. They are completely unrelated (except that one may import the other).</text>
  </message>
  <message>
    <ts>2017-07-05T13:27:07.160344</ts>
    <user>U2W6RTGQH</user>
    <text>&lt;@U0LPMPL2U&gt; &lt;@U4872964V&gt; thanks</text>
  </message>
  <message>
    <ts>2017-07-05T13:53:59.997457</ts>
    <user>U218QNMR8</user>
    <text>Does anyone know why i'd be able to `curl &lt;http://localhost:8000&gt;` when using `elm-reactor` but when opening in the browser it just refuses to connect/times out?</text>
  </message>
  <message>
    <ts>2017-07-05T14:00:37.209847</ts>
    <user>U1C5N3NUD</user>
    <text>Hey everybody, is there an easy way of changing pixel values in a `&amp;lt;canvas&amp;gt;`?</text>
  </message>
  <message>
    <ts>2017-07-05T14:01:53.251711</ts>
    <user>U218QNMR8</user>
    <text>have you looked at &lt;http://package.elm-lang.org/packages/evancz/elm-graphics/1.0.1/Collage&gt; &lt;@U1C5N3NUD&gt; ?</text>
  </message>
  <message>
    <ts>2017-07-05T14:02:53.283037</ts>
    <user>U0LPMPL2U</user>
    <text>As with HTML, you don't mutate the canvas but instead re-render based on a different model state</text>
  </message>
  <message>
    <ts>2017-07-05T14:03:49.311681</ts>
    <user>U1C5N3NUD</user>
    <text>Ah yep it looks like Collage is what I'm looking for</text>
  </message>
  <message>
    <ts>2017-07-05T14:04:12.323277</ts>
    <user>U1C5N3NUD</user>
    <text>&lt;@U0LPMPL2U&gt; yeah I just need to change individual pixels on state change</text>
  </message>
  <message>
    <ts>2017-07-05T14:04:51.344491</ts>
    <user>U0LPMPL2U</user>
    <text>You'd define a view function that takes in a model and renders the desired pixels</text>
  </message>
  <message>
    <ts>2017-07-05T14:05:03.350425</ts>
    <user>U0LPMPL2U</user>
    <text>now when the model changes, the pixels will too</text>
  </message>
  <message>
    <ts>2017-07-05T14:05:23.360442</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U218QNMR8&gt; the only thing that comes to mind is browser specific proxy settings. Have you tried on a different port? (`elm-reactor -p 5050` for example)</text>
  </message>
  <message>
    <ts>2017-07-05T14:05:24.361243</ts>
    <user>U1C5N3NUD</user>
    <text>got it :thumbsup:</text>
  </message>
  <message>
    <ts>2017-07-05T14:06:24.392741</ts>
    <user>U218QNMR8</user>
    <text>yep - i've been using `python -m SimpleHTTPServer` on the same port as a workaround</text>
  </message>
  <message>
    <ts>2017-07-05T14:06:51.406318</ts>
    <user>U218QNMR8</user>
    <text>i've tried removing all traces of elm and reinstalling</text>
  </message>
  <message>
    <ts>2017-07-05T14:07:35.428977</ts>
    <user>U0CLDU8UB</user>
    <text>on the same port? that should not be possible</text>
  </message>
  <message>
    <ts>2017-07-05T14:08:20.451563</ts>
    <user>U218QNMR8</user>
    <text>correct</text>
  </message>
  <message>
    <ts>2017-07-05T14:09:00.471751</ts>
    <user>U218QNMR8</user>
    <text>i mean - i'm not using them both at the same time, but it makes no difference to the python server whether or not `elm-reactor` is running or not (on the same port)</text>
  </message>
  <message>
    <ts>2017-07-05T14:09:47.495374</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U0CLDU8UB&gt; yeah, I've had wonky things like that happening too, tbh - elm-live + elm-reactor = weird :wink:</text>
  </message>
  <message>
    <ts>2017-07-05T14:10:47.526145</ts>
    <user>U218QNMR8</user>
    <text>fixed it</text>
  </message>
  <message>
    <ts>2017-07-05T14:10:55.530087</ts>
    <user>U218QNMR8</user>
    <text>i had some weird stuff in `/etc/hosts`</text>
  </message>
  <message>
    <ts>2017-07-05T14:11:10.537842</ts>
    <user>U0CLDU8UB</user>
    <text>okay good</text>
  </message>
  <message>
    <ts>2017-07-05T14:11:18.541696</ts>
    <user>U218QNMR8</user>
    <text>```
127.0.0.1	localhost
255.255.255.255	broadcasthost
1             localhost
```</text>
  </message>
  <message>
    <ts>2017-07-05T14:11:28.546375</ts>
    <user>U218QNMR8</user>
    <text>thanks anyway :thumbsup:</text>
  </message>
  <message>
    <ts>2017-07-05T14:32:36.198269</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U1C5N3NUD&gt; It might also be worthwhile to check out &lt;https://github.com/Elm-Canvas/elm-canvas&gt; for accessing the canvas API.</text>
  </message>
  <message>
    <ts>2017-07-05T14:52:39.804141</ts>
    <user>U62JFJWKT</user>
    <text>if I have a "Maybe value" field, in a record and methods that take into argument value, I must call a case value.. Just..., oh there's a more elegant way to call my method only if value is not nothing</text>
  </message>
  <message>
    <ts>2017-07-05T14:53:10.819427</ts>
    <user>U23SA861Y</user>
    <text>you are probably looking for a Maybe.map</text>
  </message>
  <message>
    <ts>2017-07-05T14:53:12.820484</ts>
    <user>U62JFJWKT</user>
    <text>waw that sounded more clear in my mind</text>
  </message>
  <message>
    <ts>2017-07-05T14:53:37.833155</ts>
    <user>U62JFJWKT</user>
    <text>I don't understand it</text>
  </message>
  <message>
    <ts>2017-07-05T14:53:53.841192</ts>
    <user>U62JFJWKT</user>
    <text>Maybe.map( (\c -&amp;gt; Calendar.view c) (Just model.calendar))</text>
  </message>
  <message>
    <ts>2017-07-05T14:54:28.858713</ts>
    <user>U23SA861Y</user>
    <text>```
Maybe.map f mab = 
  case mab of 
     Just data -&amp;gt;
       f data
    Nothing -&amp;gt;
     Nothing
```</text>
  </message>
  <message>
    <ts>2017-07-05T14:54:35.862210</ts>
    <user>U62JFJWKT</user>
    <text>oh</text>
  </message>
  <message>
    <ts>2017-07-05T14:54:39.864305</ts>
    <user>U23SA861Y</user>
    <text>is basically how it works under the hood</text>
  </message>
  <message>
    <ts>2017-07-05T14:54:39.864579</ts>
    <user>U62JFJWKT</user>
    <text>nice</text>
  </message>
  <message>
    <ts>2017-07-05T14:55:03.876711</ts>
    <user>U4872964V</user>
    <text>So, you want to show your calendare if it exists, otherwise show nothing?</text>
  </message>
  <message>
    <ts>2017-07-05T14:55:18.884444</ts>
    <user>U62JFJWKT</user>
    <text>exactly</text>
  </message>
  <message>
    <ts>2017-07-05T14:55:38.894636</ts>
    <user>U23SA861Y</user>
    <text>so you can combine a Maybe.map and a Maybe.withDefault</text>
  </message>
  <message>
    <ts>2017-07-05T14:55:48.899414</ts>
    <user>U4872964V</user>
    <text>`Maybe.map Calendar.view model.calendar |&amp;gt; Maybe.withDefault (text "")`</text>
  </message>
  <message>
    <ts>2017-07-05T14:56:16.914179</ts>
    <user>U62JFJWKT</user>
    <text>Ok i see what i was missing</text>
  </message>
  <message>
    <ts>2017-07-05T14:57:14.943932</ts>
    <user>U62JFJWKT</user>
    <text>official documentation is not that clear about this concept</text>
  </message>
  <message>
    <ts>2017-07-05T14:57:29.951792</ts>
    <user>U62JFJWKT</user>
    <text>At least for a newcomer</text>
  </message>
  <message>
    <ts>2017-07-05T14:57:32.953464</ts>
    <user>U23SA861Y</user>
    <text>it kind of assumes you'll just pick up the patterns as you go along</text>
  </message>
  <message>
    <ts>2017-07-05T14:57:54.964518</ts>
    <user>U62JFJWKT</user>
    <text>maybe</text>
  </message>
  <message>
    <ts>2017-07-05T14:57:59.966814</ts>
    <user>U4872964V</user>
    <text>yes, it could use a pipe example</text>
  </message>
  <message>
    <ts>2017-07-05T14:58:37.986581</ts>
    <user>U0LPMPL2U</user>
    <text>I guess it just assumes you'll use a `case` ?</text>
  </message>
  <message>
    <ts>2017-07-05T14:58:57.996768</ts>
    <user>U0LPMPL2U</user>
    <text>It's convenient to know that `map |&amp;gt; withDefault` is equivalent though</text>
  </message>
  <message>
    <ts>2017-07-05T14:59:36.017567</ts>
    <user>U4872964V</user>
    <text>nothing wrong with using a `case` statement though</text>
  </message>
  <message>
    <ts>2017-07-05T15:00:08.034659</ts>
    <user>U62JFJWKT</user>
    <text>yep case is fine but in the end I will have a lot of components, it seems to verbose for something I'll do a lot</text>
  </message>
  <message>
    <ts>2017-07-05T15:00:32.048190</ts>
    <user>U4872964V</user>
    <text>if you do it a lot you can make your own general function</text>
  </message>
  <message>
    <ts>2017-07-05T15:01:05.065830</ts>
    <user>U62JFJWKT</user>
    <text>probably let's play with maybe.map for now</text>
  </message>
  <message>
    <ts>2017-07-05T15:01:25.076540</ts>
    <user>U23SA861Y</user>
    <text>you'll notice that alot of things have map on them</text>
  </message>
  <message>
    <ts>2017-07-05T15:01:28.077785</ts>
    <user>U23SA861Y</user>
    <text>List</text>
  </message>
  <message>
    <ts>2017-07-05T15:01:30.079174</ts>
    <user>U23SA861Y</user>
    <text>Dict</text>
  </message>
  <message>
    <ts>2017-07-05T15:01:34.081130</ts>
    <user>U23SA861Y</user>
    <text>Task</text>
  </message>
  <message>
    <ts>2017-07-05T15:01:37.082790</ts>
    <user>U0LPMPL2U</user>
    <text>`Maybe.Extra` has a function `unwrap : b -&amp;gt; (a -&amp;gt; b) -&amp;gt; Maybe a -&amp;gt; b`</text>
  </message>
  <message>
    <ts>2017-07-05T15:02:21.105426</ts>
    <user>U0LPMPL2U</user>
    <text>So you could say `Maybe.Extra.unwrap (text "") Calendar.view model.calendar`</text>
  </message>
  <message>
    <ts>2017-07-05T15:02:34.112003</ts>
    <user>U62JFJWKT</user>
    <text>I'm friendly with map ruby is my defaut langage</text>
  </message>
  <message>
    <ts>2017-07-05T15:03:12.130673</ts>
    <user>U4872964V</user>
    <text>&lt;@U0LPMPL2U&gt; functions with three or more parameters are harder to understand though</text>
  </message>
  <message>
    <ts>2017-07-05T15:03:39.144418</ts>
    <user>U0LPMPL2U</user>
    <text>fair</text>
  </message>
  <message>
    <ts>2017-07-05T15:04:04.156925</ts>
    <user>U4872964V</user>
    <text>but it's a matter of taste i suppose</text>
  </message>
  <message>
    <ts>2017-07-05T15:04:07.158657</ts>
    <user>U4872964V</user>
    <text>i like pipelining</text>
  </message>
  <message>
    <ts>2017-07-05T15:04:26.168056</ts>
    <user>U0LPMPL2U</user>
    <text>I'd say `case` vs `map |&amp;gt; withDefault` vs `unwrap` are probably context dependent for readability</text>
  </message>
  <message>
    <ts>2017-07-05T15:04:28.169279</ts>
    <user>U6478N1V1</user>
    <text>Hi, could some one help me explain why these 2 expressions yield different results:
```
import Html exposing (text)

x1 = (*) ((*) 2 3) 3 ^ (^) 2 2 + 5 --results in 104981
x2 = (*) 2 3 * 3 ^ (^) 2 2 + 5 --results in 491

main = text (toString (x1 == x2))
```

x2 only replaces infix operations with prefix operators of x1</text>
  </message>
  <message>
    <ts>2017-07-05T15:04:42.176075</ts>
    <user>U0CLDU8UB</user>
    <text>What I like to do with views is have a `maybeToList : Maybe a -&amp;gt; List a`
This lets me do compose views like so:
```
view model =
    div []
        ( maybeToList model.maybeOne ++ maybeToList model.maybeTwo ++ [ someView, otherView ] )
```</text>
  </message>
  <message>
    <ts>2017-07-05T15:04:50.180011</ts>
    <user>U3LUC6SNS</user>
    <text> I believe that it is the case that languages/os's designed by one person, maybe two (see: Unix) are more successful than those designed by a large group. There needs to a single coherent vision. But I'd love to see both examples and counterexamples. </text>
  </message>
  <message>
    <ts>2017-07-05T15:05:29.198858</ts>
    <user>U4872964V</user>
    <text>&lt;@U0CLDU8UB&gt; yes, that's useful</text>
  </message>
  <message>
    <ts>2017-07-05T15:06:02.214713</ts>
    <user>U0CLDU8UB</user>
    <text>nbergsma: I think `(*) ((*) 2 3) 3` is not equal to `(*) 2 3 * 3`</text>
  </message>
  <message>
    <ts>2017-07-05T15:06:08.217999</ts>
    <user>U4872964V</user>
    <text>it's in maybe-extra too</text>
  </message>
  <message>
    <ts>2017-07-05T15:07:13.249355</ts>
    <user>U0CLDU8UB</user>
    <text>yep, I rarely have many cases for *.Extra though</text>
  </message>
  <message>
    <ts>2017-07-05T15:08:23.283049</ts>
    <user>U0CLDU8UB</user>
    <text>See, `(*) 2 3` has function precedence, which is the highest precedence in Elm.</text>
  </message>
  <message>
    <ts>2017-07-05T15:08:29.286042</ts>
    <user>U6478N1V1</user>
    <text>Hi &lt;@U0CLDU8UB&gt;, could you explain?</text>
  </message>
  <message>
    <ts>2017-07-05T15:08:55.297929</ts>
    <user>U6478N1V1</user>
    <text>ah equal to 0 right?</text>
  </message>
  <message>
    <ts>2017-07-05T15:10:47.352103</ts>
    <user>U0CLDU8UB</user>
    <text>Oh wait, that can't be the source, product is always the same no matter the order</text>
  </message>
  <message>
    <ts>2017-07-05T15:12:53.413419</ts>
    <user>U0CLDU8UB</user>
    <text>But anyway, using `(&amp;lt;infix&amp;gt;)` changes the precedence, and that is most definitely the reason for the different results</text>
  </message>
  <message>
    <ts>2017-07-05T15:15:02.475095</ts>
    <user>U6478N1V1</user>
    <text>interesting, that must be it</text>
  </message>
  <message>
    <ts>2017-07-05T15:25:34.770087</ts>
    <user>U1C5N3NUD</user>
    <text>&lt;@U4F64AKQV&gt; I am looking into elm-canvas now</text>
  </message>
  <message>
    <ts>2017-07-05T15:32:04.954584</ts>
    <user>U6478N1V1</user>
    <text>I just confirmed your theory. Using prefix notation changes the precedence to 0</text>
  </message>
  <message>
    <ts>2017-07-05T15:32:18.960624</ts>
    <user>U6478N1V1</user>
    <text>thanks for your help!</text>
  </message>
  <message>
    <ts>2017-07-05T15:59:51.747470</ts>
    <user>U5FU80S06</user>
    <text>In &lt;http://package.elm-lang.org/packages/elm-lang/html/2.0.0/Html-Events#onMouseEnter&gt;, what's the difference between `onMouseEnter` &amp;amp; `onMouseOver`? Same question for  `onMouseLeave` &amp;amp; `onMouseOut`.</text>
  </message>
  <message>
    <ts>2017-07-05T16:01:36.801888</ts>
    <user>U0J8D9M2P</user>
    <text>Enter happens one time when you enter, over happens many times when you move mouse</text>
  </message>
  <message>
    <ts>2017-07-05T16:03:02.843669</ts>
    <user>U5FU80S06</user>
    <text>Thanks</text>
  </message>
  <message>
    <ts>2017-07-05T16:04:08.875228</ts>
    <user>U0J8D9M2P</user>
    <text>Leave will happen only once you live the element, and out will be triggered any time you leave child elements as well</text>
  </message>
  <message>
    <ts>2017-07-05T16:05:50.925798</ts>
    <user>U0J8D9M2P</user>
    <text>&lt;https://developer.mozilla.org/en/docs/Web/Events/mouseout&gt;
&lt;https://developer.mozilla.org/en/docs/Web/Events/mouseleave&gt;
&lt;https://developer.mozilla.org/en/docs/Web/Events/mouseenter&gt;
&lt;https://developer.mozilla.org/en/docs/Web/Events/mouseover&gt;</text>
  </message>
  <message>
    <ts>2017-07-05T16:38:19.853653</ts>
    <user>U3HQVHERX</user>
    <text>I have a utc date time that looks like this: `"2017-07-05T20:14:02.530471"` and I want to display it in us/pacific time zone. I started trying to do this with `elm-community/elm-time` but it seems the library does not keep track of the time, just dates</text>
  </message>
  <message>
    <ts>2017-07-05T16:39:32.886667</ts>
    <user>U3HQVHERX</user>
    <text>`ZonedDateTime { timeZone = TimeZone { name = "Etc/UTC", spans = [{ from = -Infinity, until = Infinity, abbreviation = "UTC", offset = 0 }] }, dateTime = DateTime { date = Date { year = 2017, month = 7, day = 6 }, offset = 11642530 } }`</text>
  </message>
  <message>
    <ts>2017-07-05T16:39:38.889878</ts>
    <user>U3HQVHERX</user>
    <text>That's what I'm currently getting</text>
  </message>
  <message>
    <ts>2017-07-05T16:39:52.896328</ts>
    <user>U3HQVHERX</user>
    <text>er - `Just` that.</text>
  </message>
  <message>
    <ts>2017-07-05T16:39:55.897469</ts>
    <user>U3HQVHERX</user>
    <text>after doing</text>
  </message>
  <message>
    <ts>2017-07-05T16:40:00.899652</ts>
    <user>U3HQVHERX</user>
    <text>```
Date.fromString m.created_at
|&amp;gt; Result.toMaybe
|&amp;gt; Maybe.map Date.toTime
|&amp;gt; Maybe.map (Time.ZonedDateTime.fromTimestamp &amp;lt;| utc ())
```</text>
  </message>
  <message>
    <ts>2017-07-05T16:42:59.982925</ts>
    <user>U3HQVHERX</user>
    <text>Oh maybe it does `text &amp;lt;| Time.ZonedDateTime.toISO8601 d`</text>
  </message>
  <message>
    <ts>2017-07-05T16:43:00.983215</ts>
    <user>U0LPMPL2U</user>
    <text>It looks like you string is ISO8601 formatted?</text>
  </message>
  <message>
    <ts>2017-07-05T16:43:06.985850</ts>
    <user>U0LPMPL2U</user>
    <text>LOL :smile:</text>
  </message>
  <message>
    <ts>2017-07-05T16:43:12.988390</ts>
    <user>U3HQVHERX</user>
    <text>`2017-07-06T03:14:02.530+00:00`</text>
  </message>
  <message>
    <ts>2017-07-05T16:43:35.999482</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U0LPMPL2U&gt; actually it could not parse it :disappointed:</text>
  </message>
  <message>
    <ts>2017-07-05T16:45:31.053540</ts>
    <user>U3HQVHERX</user>
    <text>oh waut</text>
  </message>
  <message>
    <ts>2017-07-05T16:45:33.054603</ts>
    <user>U3HQVHERX</user>
    <text>wait*</text>
  </message>
  <message>
    <ts>2017-07-05T16:45:54.064580</ts>
    <user>U3HQVHERX</user>
    <text>`Date.fromString` i was passing the result of that function to the fromISO8601 function</text>
  </message>
  <message>
    <ts>2017-07-05T16:45:59.066862</ts>
    <user>U3HQVHERX</user>
    <text>maybe that's why, XD</text>
  </message>
  <message>
    <ts>2017-07-05T16:46:42.087132</ts>
    <user>U0LPMPL2U</user>
    <text>Also, going through `Date.fromString` may be what's truncating the time parts</text>
  </message>
  <message>
    <ts>2017-07-05T16:48:03.124540</ts>
    <user>U3HQVHERX</user>
    <text>```
, date =
                        m.created_at
                            |&amp;gt; Time.ZonedDateTime.fromISO8601 (us_pacific ())
                            |&amp;gt; Result.toMaybe
```</text>
  </message>
  <message>
    <ts>2017-07-05T16:48:08.126608</ts>
    <user>U3HQVHERX</user>
    <text>Now I am getting `Nothing`</text>
  </message>
  <message>
    <ts>2017-07-05T16:48:46.144963</ts>
    <user>U3HQVHERX</user>
    <text>`fromISO8601 : TimeZone -&amp;gt; String -&amp;gt; Result String ZonedDateTime`</text>
  </message>
  <message>
    <ts>2017-07-05T16:49:15.159016</ts>
    <user>U3HQVHERX</user>
    <text>`us_pacific : () -&amp;gt; TimeZone`</text>
  </message>
  <message>
    <ts>2017-07-05T16:49:40.170935</ts>
    <user>U3HQVHERX</user>
    <text>and `m.created_at` is `"2017-07-05T20:14:02.530471"`</text>
  </message>
  <message>
    <ts>2017-07-05T16:49:41.171478</ts>
    <user>U0LPMPL2U</user>
    <text>Can you drop the `Result.toMaybe` so we can see the error?</text>
  </message>
  <message>
    <ts>2017-07-05T16:49:49.174961</ts>
    <user>U3HQVHERX</user>
    <text>good idea</text>
  </message>
  <message>
    <ts>2017-07-05T16:52:58.265451</ts>
    <user>U3HQVHERX</user>
    <text>"Errors encountered at position 26: expected \"Z\" or expected an integer"</text>
  </message>
  <message>
    <ts>2017-07-05T16:53:29.279799</ts>
    <user>U0LPMPL2U</user>
    <text>Does it not like the decimal seconds?</text>
  </message>
  <message>
    <ts>2017-07-05T16:53:46.287664</ts>
    <user>U3HQVHERX</user>
    <text>it wants a char `'Z'` at the end i think</text>
  </message>
  <message>
    <ts>2017-07-05T16:53:55.292115</ts>
    <user>U3HQVHERX</user>
    <text>hmm</text>
  </message>
  <message>
    <ts>2017-07-05T16:53:59.293558</ts>
    <user>U0LPMPL2U</user>
    <text>The Z is usually optional though</text>
  </message>
  <message>
    <ts>2017-07-05T16:54:19.303226</ts>
    <user>U0LPMPL2U</user>
    <text>ISO8601 has more edge cases than you'd think :confused:</text>
  </message>
  <message>
    <ts>2017-07-05T16:56:39.369763</ts>
    <user>U0LPMPL2U</user>
    <text>So it does parse with the Z `2017-07-05T20:14:02.530471Z`</text>
  </message>
  <message>
    <ts>2017-07-05T16:56:41.370534</ts>
    <user>U3HQVHERX</user>
    <text>I tried hard coding it and it still wants the Z</text>
  </message>
  <message>
    <ts>2017-07-05T16:56:42.371048</ts>
    <user>U3HQVHERX</user>
    <text>"2017-07-05T20:14:02"
                            |&amp;gt; Time.ZonedDateTime.fromISO8601 (us_pacific ())</text>
  </message>
  <message>
    <ts>2017-07-05T16:56:57.377976</ts>
    <user>U3HQVHERX</user>
    <text>should I just tack on a Z?</text>
  </message>
  <message>
    <ts>2017-07-05T16:57:19.388181</ts>
    <user>U0CLDU8UB</user>
    <text>I thought the Z or timezone were mandatory</text>
  </message>
  <message>
    <ts>2017-07-05T16:57:44.400187</ts>
    <user>U0CLDU8UB</user>
    <text>One of those is needed, I mean</text>
  </message>
  <message>
    <ts>2017-07-05T16:58:06.410436</ts>
    <user>U3HQVHERX</user>
    <text>yay</text>
  </message>
  <message>
    <ts>2017-07-05T16:58:13.413651</ts>
    <user>U3HQVHERX</user>
    <text>```
(m.created_at ++ "Z")
|&amp;gt; Time.ZonedDateTime.fromISO8601 (utc ())
```</text>
  </message>
  <message>
    <ts>2017-07-05T16:58:41.426516</ts>
    <user>U3HQVHERX</user>
    <text>So now I need to convert it from utc to local time</text>
  </message>
  <message>
    <ts>2017-07-05T17:00:12.470289</ts>
    <user>U0CLDU8UB</user>
    <text>Z means it's UTC. Can ISO8601 ever be local datetime?</text>
  </message>
  <message>
    <ts>2017-07-05T17:00:51.489596</ts>
    <user>U0LPMPL2U</user>
    <text>```
&amp;gt; ZDT.fromISO8601 (TZ.us_pacific ()) "2017-07-05T20:14:02.530471Z" |&amp;gt; Result.map (ZDT.toISO8601)
Ok "2017-07-05T13:14:02.530-07:00" : Result.Result String String
```</text>
  </message>
  <message>
    <ts>2017-07-05T17:01:10.498491</ts>
    <user>U0LPMPL2U</user>
    <text>from the REPL (ZDT is ZoneDateTime and TZ is TimeZones)</text>
  </message>
  <message>
    <ts>2017-07-05T17:02:10.526141</ts>
    <user>U3HQVHERX</user>
    <text>(oh dear, production returns Z at the end, but not local dev environment, lol....)</text>
  </message>
  <message>
    <ts>2017-07-05T17:03:07.552491</ts>
    <user>U3HQVHERX</user>
    <text>Is there a way to subscribe to the users local browser time?</text>
  </message>
  <message>
    <ts>2017-07-05T17:03:39.567388</ts>
    <user>U0LPMPL2U</user>
    <text>`Time.now` or `Time.every` ?</text>
  </message>
  <message>
    <ts>2017-07-05T17:04:01.577346</ts>
    <user>U3HQVHERX</user>
    <text>Time.now returns unix epoch time though</text>
  </message>
  <message>
    <ts>2017-07-05T17:04:17.584654</ts>
    <user>U0LPMPL2U</user>
    <text>oh you want the user's machine time zone?</text>
  </message>
  <message>
    <ts>2017-07-05T17:04:34.592543</ts>
    <user>U3HQVHERX</user>
    <text>yeah</text>
  </message>
  <message>
    <ts>2017-07-05T17:04:41.595736</ts>
    <user>U3HQVHERX</user>
    <text>in js I can do</text>
  </message>
  <message>
    <ts>2017-07-05T17:04:46.597891</ts>
    <user>U3HQVHERX</user>
    <text>```
Date()
"Wed Jul 05 2017 14:03:15 GMT-0700 (PDT)"
```</text>
  </message>
  <message>
    <ts>2017-07-05T17:05:11.609046</ts>
    <user>U3HQVHERX</user>
    <text>Maybe I could write a port that returns that last PDT bit and map to the timezones</text>
  </message>
  <message>
    <ts>2017-07-05T17:05:14.610425</ts>
    <user>U3HQVHERX</user>
    <text>sounds a bit hacky though</text>
  </message>
  <message>
    <ts>2017-07-05T17:07:33.671962</ts>
    <user>U3HQVHERX</user>
    <text>`new Date().getTimezoneOffset();`</text>
  </message>
  <message>
    <ts>2017-07-05T17:07:46.677710</ts>
    <user>U3HQVHERX</user>
    <text>gives me `420`</text>
  </message>
  <message>
    <ts>2017-07-05T17:08:12.688373</ts>
    <user>U0LPMPL2U</user>
    <text>so 7 hours?</text>
  </message>
  <message>
    <ts>2017-07-05T17:08:23.693305</ts>
    <user>U0LPMPL2U</user>
    <text>I'm assuming that 420 minutes</text>
  </message>
  <message>
    <ts>2017-07-05T17:08:55.706790</ts>
    <user>U3HQVHERX</user>
    <text>that makes sense given the previous output from the browser (GMT-0700)</text>
  </message>
  <message>
    <ts>2017-07-05T17:11:18.767360</ts>
    <user>U0LPMPL2U</user>
    <text>Strangely there doesn't seem to be any way of constructing a timezone from the offset :confused:</text>
  </message>
  <message>
    <ts>2017-07-05T17:14:52.856271</ts>
    <user>U3HQVHERX</user>
    <text>i guess I do have another api endpoint that gives me my profiles current timezone</text>
  </message>
  <message>
    <ts>2017-07-05T17:15:00.859720</ts>
    <user>U3HQVHERX</user>
    <text>but it sure would be nicer to get it from the browser</text>
  </message>
  <message>
    <ts>2017-07-05T17:16:56.907600</ts>
    <user>U0LPMPL2U</user>
    <text>Typically you would want Timezone to be configurable right? Instead of always getting it from the system?</text>
  </message>
  <message>
    <ts>2017-07-05T17:17:09.912629</ts>
    <user>U3HQVHERX</user>
    <text>i guess?</text>
  </message>
  <message>
    <ts>2017-07-05T17:17:39.924580</ts>
    <user>U3HQVHERX</user>
    <text>seems like the burden of setting the correct timezone should be on the system, not the user</text>
  </message>
  <message>
    <ts>2017-07-05T17:18:01.933265</ts>
    <user>U3HQVHERX</user>
    <text>(to the contrary of what you just said)</text>
  </message>
  <message>
    <ts>2017-07-05T17:18:56.955521</ts>
    <user>U3HQVHERX</user>
    <text>so if you go to a different timezone everything "just works"</text>
  </message>
  <message>
    <ts>2017-07-05T17:19:02.957915</ts>
    <user>U0LPMPL2U</user>
    <text>As long as it can be overridden</text>
  </message>
  <message>
    <ts>2017-07-05T17:19:02.958259</ts>
    <user>U3HQVHERX</user>
    <text>instead of going and clicking a drop down</text>
  </message>
  <message>
    <ts>2017-07-05T17:19:06.959936</ts>
    <user>U3HQVHERX</user>
    <text>yeah</text>
  </message>
  <message>
    <ts>2017-07-05T17:19:47.976209</ts>
    <user>U3HQVHERX</user>
    <text>like, if we were going to meet up at 5pm, i would want the software we are using to be smart enough to show timezones in a helpful manner</text>
  </message>
  <message>
    <ts>2017-07-05T17:19:53.978638</ts>
    <user>U0LPMPL2U</user>
    <text>I used to have French set as the default language on my computer it it would get super annoyed when sites would auto-redirect me to their French site, even when I specifically requested the English version</text>
  </message>
  <message>
    <ts>2017-07-05T17:19:53.978681</ts>
    <user>U0LPMPL2U</user>
    <text>I could see something similar happening with timezones</text>
  </message>
  <message>
    <ts>2017-07-05T17:20:39.997014</ts>
    <user>U3HQVHERX</user>
    <text>i worked on some bilingual software and my browser would always try to auto translate the text</text>
  </message>
  <message>
    <ts>2017-07-05T17:20:45.999455</ts>
    <user>U3HQVHERX</user>
    <text>which got confusing with debugging</text>
  </message>
  <message>
    <ts>2017-07-05T17:20:59.005242</ts>
    <user>U3HQVHERX</user>
    <text>hmm, it's rendering the wrong language....</text>
  </message>
  <message>
    <ts>2017-07-05T17:21:00.005742</ts>
    <user>U3HQVHERX</user>
    <text>oh wiat</text>
  </message>
  <message>
    <ts>2017-07-05T17:21:05.007471</ts>
    <user>U3HQVHERX</user>
    <text>dang it google!</text>
  </message>
  <message>
    <ts>2017-07-05T17:21:07.008324</ts>
    <user>U3HQVHERX</user>
    <text>lol</text>
  </message>
  <message>
    <ts>2017-07-05T17:21:46.024257</ts>
    <user>U3HQVHERX</user>
    <text>`List.map #random messages`</text>
  </message>
  <message>
    <ts>2017-07-05T17:22:17.036502</ts>
    <user>U3HQVHERX</user>
    <text>`fromName : String -&amp;gt; Maybe TimeZone`</text>
  </message>
  <message>
    <ts>2017-07-05T17:22:22.038412</ts>
    <user>U3HQVHERX</user>
    <text>so that's what i need to use now</text>
  </message>
  <message>
    <ts>2017-07-05T17:22:24.039256</ts>
    <user>U0LPMPL2U</user>
    <text>Say I'm traveling and I want to set up a meeting on my return. I'd want to set the meeting for 10AM in my home time zone, not whatever time zone I'm in right now</text>
  </message>
  <message>
    <ts>2017-07-05T17:23:02.055108</ts>
    <user>U3HQVHERX</user>
    <text>so this use case is with messages</text>
  </message>
  <message>
    <ts>2017-07-05T17:23:20.062547</ts>
    <user>U3HQVHERX</user>
    <text>i wonder if I want to know what time you sent me the message in your timezone</text>
  </message>
  <message>
    <ts>2017-07-05T17:23:55.076628</ts>
    <user>U3HQVHERX</user>
    <text>or maybe just show them in my timezone and then warn if the user is in a different timezone</text>
  </message>
  <message>
    <ts>2017-07-05T17:24:13.083568</ts>
    <user>U0LPMPL2U</user>
    <text>I think I'd want to see what time the message was sent in _my_ timezone?</text>
  </message>
  <message>
    <ts>2017-07-05T17:24:28.089806</ts>
    <user>U3HQVHERX</user>
    <text>so do you see a "5:24" time stamp on this slack message?</text>
  </message>
  <message>
    <ts>2017-07-05T17:24:35.092560</ts>
    <user>U0LPMPL2U</user>
    <text>Yes</text>
  </message>
  <message>
    <ts>2017-07-05T17:24:41.094816</ts>
    <user>U3HQVHERX</user>
    <text>i see "2:24"</text>
  </message>
  <message>
    <ts>2017-07-05T17:24:49.098285</ts>
    <user>U3HQVHERX</user>
    <text>on your message</text>
  </message>
  <message>
    <ts>2017-07-05T17:25:09.106152</ts>
    <user>U3HQVHERX</user>
    <text>does it mater to me that it's a bit later where you are?</text>
  </message>
  <message>
    <ts>2017-07-05T17:25:26.112928</ts>
    <user>U0LPMPL2U</user>
    <text>Maybe?</text>
  </message>
  <message>
    <ts>2017-07-05T17:25:32.115302</ts>
    <user>U3HQVHERX</user>
    <text>i guess if it does i click your face</text>
  </message>
  <message>
    <ts>2017-07-05T17:25:50.122809</ts>
    <user>U0LPMPL2U</user>
    <text>This is probably a case where you want to do some user research for your specific use case.</text>
  </message>
  <message>
    <ts>2017-07-05T17:25:57.125311</ts>
    <user>U3HQVHERX</user>
    <text>right</text>
  </message>
  <message>
    <ts>2017-07-05T17:26:39.142048</ts>
    <user>U0LPMPL2U</user>
    <text>In Slack's case, I'm guessing they came to the conclusion that you mostly care about the time a message was sent in relation to your current time</text>
  </message>
  <message>
    <ts>2017-07-05T17:27:28.162198</ts>
    <user>U0LPMPL2U</user>
    <text>but you might occasionally want to know the time of day of the other person</text>
  </message>
  <message>
    <ts>2017-07-05T20:27:35.090017</ts>
    <user>U37BS6J6N</user>
    <text>woot just figured it out~</text>
  </message>
  <message>
    <ts>2017-07-05T20:27:53.093360</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U37BS6J6N&gt; You are matching on the wrong part of the result, it should be:
```
NewGif (Err error) -&amp;gt;
    case error of
```</text>
  </message>
  <message>
    <ts>2017-07-05T20:28:36.101578</ts>
    <user>U37BS6J6N</user>
    <text>thanks though &lt;@U48AEBJQ3&gt;</text>
  </message>
  <message>
    <ts>2017-07-05T20:44:19.281150</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U37BS6J6N&gt; just a note - checkout `elm-format` to auto format your code for readability. also, line 30 it's perhaps a better practice to replace `Model topic "waiting.gif" ""` to a `initModel` function  that returns a `{topic = ""  , gifUrl = "waiting.gif"  , error = ""}`</text>
  </message>
  <message>
    <ts>2017-07-05T20:50:53.354221</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U0LPMPL2U&gt; you can't actually convert an offset to a timezone, many timezones can share the same offset. For a valid time you need an actual timezone, the offset is mostly useless.</text>
  </message>
  <message>
    <ts>2017-07-05T20:53:26.382795</ts>
    <user>U64FLQRC4</user>
    <text>Hey, this is an embarrassingly stupid question, but I just installed Elm on my Mc and I can't find what folder it ended up in...</text>
  </message>
  <message>
    <ts>2017-07-05T20:53:44.386047</ts>
    <user>U64FLQRC4</user>
    <text>Mac*</text>
  </message>
  <message>
    <ts>2017-07-05T20:56:23.415608</ts>
    <user>U37BS6J6N</user>
    <text>&lt;@U28CBJM9R&gt; have you tried opening a terminal and typing
`whereis elm`?</text>
  </message>
  <message>
    <ts>2017-07-05T20:56:51.420981</ts>
    <user>U64FLQRC4</user>
    <text>Nothing happens when I try that</text>
  </message>
  <message>
    <ts>2017-07-05T20:56:59.422237</ts>
    <user>U64FLQRC4</user>
    <text>Just get a new terminal line</text>
  </message>
  <message>
    <ts>2017-07-05T20:57:19.426040</ts>
    <user>U153UK3FA</user>
    <text>I don't think I've ever used a machine where `whereis` worked as expected</text>
  </message>
  <message>
    <ts>2017-07-05T20:57:34.428806</ts>
    <user>U37BS6J6N</user>
    <text>#worksonmymachine</text>
  </message>
  <message>
    <ts>2017-07-05T20:57:57.433013</ts>
    <user>U37BS6J6N</user>
    <text>there is also `which`</text>
  </message>
  <message>
    <ts>2017-07-05T20:58:19.437215</ts>
    <user>U64FLQRC4</user>
    <text>nada</text>
  </message>
  <message>
    <ts>2017-07-05T20:58:29.439137</ts>
    <user>U37BS6J6N</user>
    <text>&lt;@U64FLQRC4&gt; when you open a new terminal and type `elm` does it prompt you with anything?</text>
  </message>
  <message>
    <ts>2017-07-05T20:59:28.450355</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U64FLQRC4&gt; is it at  /usr/local/bin/elm</text>
  </message>
  <message>
    <ts>2017-07-05T21:00:22.462249</ts>
    <user>U64FLQRC4</user>
    <text>elm gives command not found</text>
  </message>
  <message>
    <ts>2017-07-05T21:00:27.463233</ts>
    <user>U37BS6J6N</user>
    <text>if you aren't seeing anything did you install it with 
`npm install -g elm` ?</text>
  </message>
  <message>
    <ts>2017-07-05T21:00:34.464865</ts>
    <user>U64FLQRC4</user>
    <text>I can't get in to usr/local/bin</text>
  </message>
  <message>
    <ts>2017-07-05T21:00:38.465598</ts>
    <user>U37BS6J6N</user>
    <text>you may have just installed it locally</text>
  </message>
  <message>
    <ts>2017-07-05T21:00:42.466561</ts>
    <user>U64FLQRC4</user>
    <text>I installed it with the Mac install pkg</text>
  </message>
  <message>
    <ts>2017-07-05T21:00:52.468558</ts>
    <user>U37BS6J6N</user>
    <text>oh</text>
  </message>
  <message>
    <ts>2017-07-05T21:01:37.477620</ts>
    <user>U64FLQRC4</user>
    <text>so...?</text>
  </message>
  <message>
    <ts>2017-07-05T21:03:09.495435</ts>
    <user>U64FLQRC4</user>
    <text>should I just install it with the command above?</text>
  </message>
  <message>
    <ts>2017-07-05T21:04:27.510108</ts>
    <user>U37BS6J6N</user>
    <text>You certainly can if you have npm already installed</text>
  </message>
  <message>
    <ts>2017-07-05T21:04:39.512492</ts>
    <user>U64FLQRC4</user>
    <text>uh</text>
  </message>
  <message>
    <ts>2017-07-05T21:04:53.515231</ts>
    <user>U37BS6J6N</user>
    <text>but i have no idea where the mac package manager installs stuff outside of the apps</text>
  </message>
  <message>
    <ts>2017-07-05T21:04:59.516467</ts>
    <user>U153UK3FA</user>
    <text>looks like the installer does install at /usr/local/bin &lt;https://github.com/elm-lang/elm-platform/blob/master/installers/mac/make-installer.sh#L23&gt;</text>
  </message>
  <message>
    <ts>2017-07-05T21:05:36.524039</ts>
    <user>U64FLQRC4</user>
    <text>hm, ok, but I do not have permissions for bin somehow</text>
  </message>
  <message>
    <ts>2017-07-05T21:05:46.526126</ts>
    <user>U37BS6J6N</user>
    <text>if you can't access it normally from that directory try running cd with sudo</text>
  </message>
  <message>
    <ts>2017-07-05T21:06:16.532084</ts>
    <user>U37BS6J6N</user>
    <text>`sudo cd /usr/local/bin`</text>
  </message>
  <message>
    <ts>2017-07-05T21:06:54.539292</ts>
    <user>U64FLQRC4</user>
    <text>that seems to have done nothing?</text>
  </message>
  <message>
    <ts>2017-07-05T21:07:08.541780</ts>
    <user>U64FLQRC4</user>
    <text>didn't even change the directory</text>
  </message>
  <message>
    <ts>2017-07-05T21:08:34.557179</ts>
    <user>U64FLQRC4</user>
    <text>asked for a password, I entered it, nothing happens</text>
  </message>
  <message>
    <ts>2017-07-05T21:08:49.559722</ts>
    <user>U37BS6J6N</user>
    <text>k, when you type 
`pwd` what do you see</text>
  </message>
  <message>
    <ts>2017-07-05T21:09:09.563379</ts>
    <user>U64FLQRC4</user>
    <text>I see /Users/kyle</text>
  </message>
  <message>
    <ts>2017-07-05T21:09:39.568902</ts>
    <user>U37BS6J6N</user>
    <text>hmm try `cd /usr/local`</text>
  </message>
  <message>
    <ts>2017-07-05T21:09:47.570358</ts>
    <user>U37BS6J6N</user>
    <text>in the same terminal</text>
  </message>
  <message>
    <ts>2017-07-05T21:09:49.570660</ts>
    <user>U64FLQRC4</user>
    <text>Yeah I can get there just fine</text>
  </message>
  <message>
    <ts>2017-07-05T21:09:52.571312</ts>
    <user>U64FLQRC4</user>
    <text>It's bin that's locked</text>
  </message>
  <message>
    <ts>2017-07-05T21:10:13.575253</ts>
    <user>U37BS6J6N</user>
    <text>so what happens when you type `cd /bin`</text>
  </message>
  <message>
    <ts>2017-07-05T21:10:29.578471</ts>
    <user>U64FLQRC4</user>
    <text>Oh, now I can get in</text>
  </message>
  <message>
    <ts>2017-07-05T21:11:07.585488</ts>
    <user>U64FLQRC4</user>
    <text>oh, no, I'm in usr/local/bin</text>
  </message>
  <message>
    <ts>2017-07-05T21:11:26.588862</ts>
    <user>U64FLQRC4</user>
    <text>and there is no elm</text>
  </message>
  <message>
    <ts>2017-07-05T21:11:47.592508</ts>
    <user>U64FLQRC4</user>
    <text>Never mind, apparently I was in some other bin</text>
  </message>
  <message>
    <ts>2017-07-05T21:13:20.609133</ts>
    <user>U64FLQRC4</user>
    <text>-bash: cd: bin: Permission denied</text>
  </message>
  <message>
    <ts>2017-07-05T21:13:40.612670</ts>
    <user>U37BS6J6N</user>
    <text>try with sudo</text>
  </message>
  <message>
    <ts>2017-07-05T21:14:03.616899</ts>
    <user>U64FLQRC4</user>
    <text>no effect</text>
  </message>
  <message>
    <ts>2017-07-05T21:14:16.619376</ts>
    <user>U64FLQRC4</user>
    <text>I'm still in /usr/local</text>
  </message>
  <message>
    <ts>2017-07-05T21:15:47.636167</ts>
    <user>U37BS6J6N</user>
    <text>kyleorl: hey, what is the end goal you are trying to achieve with navigating to the bin folder ?</text>
  </message>
  <message>
    <ts>2017-07-05T21:16:05.639518</ts>
    <user>U37BS6J6N</user>
    <text>Maybe we should start from that.</text>
  </message>
  <message>
    <ts>2017-07-05T21:16:24.642993</ts>
    <user>U64FLQRC4</user>
    <text>I'd like to use elm...</text>
  </message>
  <message>
    <ts>2017-07-05T21:16:34.644906</ts>
    <user>U64FLQRC4</user>
    <text>Like the programs the installer says it created</text>
  </message>
  <message>
    <ts>2017-07-05T21:17:16.652807</ts>
    <user>U64FLQRC4</user>
    <text>reactor etc.</text>
  </message>
  <message>
    <ts>2017-07-05T21:20:07.684112</ts>
    <user>U37BS6J6N</user>
    <text>well I can't speak for the installer but, I know what works for me. If you build out anything more complex than the beginner programs you will have to install npm at some point.</text>
  </message>
  <message>
    <ts>2017-07-05T21:20:15.685781</ts>
    <user>U37BS6J6N</user>
    <text>npm is the node package manager</text>
  </message>
  <message>
    <ts>2017-07-05T21:20:47.692092</ts>
    <user>U64FLQRC4</user>
    <text>ok...</text>
  </message>
  <message>
    <ts>2017-07-05T21:20:47.692146</ts>
    <user>U37BS6J6N</user>
    <text>&lt;https://nodejs.org/en/&gt;</text>
  </message>
  <message>
    <ts>2017-07-05T21:21:24.699054</ts>
    <user>U37BS6J6N</user>
    <text>its a tool similar to elm-package except that it works with a lot of different javascript libraries.</text>
  </message>
  <message>
    <ts>2017-07-05T21:21:56.705233</ts>
    <user>U37BS6J6N</user>
    <text>So tl;dr; your going to need it in the long run anyway</text>
  </message>
  <message>
    <ts>2017-07-05T21:22:01.706141</ts>
    <user>U37BS6J6N</user>
    <text>&lt;https://nodejs.org/en/&gt;</text>
  </message>
  <message>
    <ts>2017-07-05T21:22:07.707416</ts>
    <user>U64FLQRC4</user>
    <text>npm was installed at

   /usr/local/bin/npm</text>
  </message>
  <message>
    <ts>2017-07-05T21:22:12.708468</ts>
    <user>U37BS6J6N</user>
    <text>k cool</text>
  </message>
  <message>
    <ts>2017-07-05T21:22:43.714718</ts>
    <user>U37BS6J6N</user>
    <text>so all you need to do now is to run 
`sudo npm install -g elm`</text>
  </message>
  <message>
    <ts>2017-07-05T21:23:06.719036</ts>
    <user>U37BS6J6N</user>
    <text>and that should install it so that it is globally available on your system</text>
  </message>
  <message>
    <ts>2017-07-05T21:23:16.720969</ts>
    <user>U64FLQRC4</user>
    <text>it's doing stuff</text>
  </message>
  <message>
    <ts>2017-07-05T21:23:29.723230</ts>
    <user>U37BS6J6N</user>
    <text>once you have run that you should be able to open a terminal and type `elm`</text>
  </message>
  <message>
    <ts>2017-07-05T21:23:38.724958</ts>
    <user>U64FLQRC4</user>
    <text>Got a few errors</text>
  </message>
  <message>
    <ts>2017-07-05T21:23:54.727927</ts>
    <user>U37BS6J6N</user>
    <text>did you type sudo at the beginning of it?</text>
  </message>
  <message>
    <ts>2017-07-05T21:24:02.729368</ts>
    <user>U64FLQRC4</user>
    <text>npm ERR! Failed at the elm@0.18.0 install script 'node install.js'.</text>
  </message>
  <message>
    <ts>2017-07-05T21:24:22.733027</ts>
    <user>U64FLQRC4</user>
    <text>yeah I used sudo</text>
  </message>
  <message>
    <ts>2017-07-05T21:24:46.737279</ts>
    <user>U37BS6J6N</user>
    <text>hmm... try it without sudo</text>
  </message>
  <message>
    <ts>2017-07-05T21:24:57.739388</ts>
    <user>U64FLQRC4</user>
    <text>npm command not found</text>
  </message>
  <message>
    <ts>2017-07-05T21:25:00.740000</ts>
    <user>U64FLQRC4</user>
    <text>...</text>
  </message>
  <message>
    <ts>2017-07-05T21:25:29.745651</ts>
    <user>U37BS6J6N</user>
    <text>k could you paste your output from the command.</text>
  </message>
  <message>
    <ts>2017-07-05T21:25:40.747674</ts>
    <user>U37BS6J6N</user>
    <text>if it doen't work again</text>
  </message>
  <message>
    <ts>2017-07-05T21:25:42.748048</ts>
    <user>U64FLQRC4</user>
    <text>npm WARN deprecated node-uuid@1.4.8: Use uuid module instead
/usr/local/bin/elm -&amp;gt; /usr/local/lib/node_modules/elm/binwrappers/elm
/usr/local/bin/elm-reactor -&amp;gt; /usr/local/lib/node_modules/elm/binwrappers/elm-reactor
/usr/local/bin/elm-package -&amp;gt; /usr/local/lib/node_modules/elm/binwrappers/elm-package
/usr/local/bin/elm-repl -&amp;gt; /usr/local/lib/node_modules/elm/binwrappers/elm-repl
/usr/local/bin/elm-make -&amp;gt; /usr/local/lib/node_modules/elm/binwrappers/elm-make

&amp;gt; elm@0.18.0 install /usr/local/lib/node_modules/elm
&amp;gt; node install.js

sh: node: command not found
npm ERR! Darwin 16.6.0
npm ERR! argv "/usr/local/bin/node" "/usr/local/bin/npm" "install" "-g" "elm"
npm ERR! node v6.11.0
npm ERR! npm  v3.10.10
npm ERR! file sh
npm ERR! code ELIFECYCLE
npm ERR! errno ENOENT
npm ERR! syscall spawn

npm ERR! elm@0.18.0 install: `node install.js`
npm ERR! spawn ENOENT
npm ERR! 
npm ERR! Failed at the elm@0.18.0 install script 'node install.js'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the elm package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     node install.js
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs elm
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls elm
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /usr/local/npm-debug.log</text>
  </message>
  <message>
    <ts>2017-07-05T21:26:16.754211</ts>
    <user>U64FLQRC4</user>
    <text>same error when I sudo it a 2nd time</text>
  </message>
  <message>
    <ts>2017-07-05T21:26:20.754803</ts>
    <user>U37BS6J6N</user>
    <text>k</text>
  </message>
  <message>
    <ts>2017-07-05T21:26:32.756829</ts>
    <user>U37BS6J6N</user>
    <text>what do you get when you type `npm -v`</text>
  </message>
  <message>
    <ts>2017-07-05T21:26:42.758561</ts>
    <user>U64FLQRC4</user>
    <text>command not found</text>
  </message>
  <message>
    <ts>2017-07-05T21:27:02.761970</ts>
    <user>U37BS6J6N</user>
    <text>npm -v</text>
  </message>
  <message>
    <ts>2017-07-05T21:27:06.762625</ts>
    <user>U64FLQRC4</user>
    <text>yup</text>
  </message>
  <message>
    <ts>2017-07-05T21:27:35.767560</ts>
    <user>U37BS6J6N</user>
    <text>k what about just `npm`</text>
  </message>
  <message>
    <ts>2017-07-05T21:27:41.768743</ts>
    <user>U64FLQRC4</user>
    <text>same</text>
  </message>
  <message>
    <ts>2017-07-05T21:27:45.769472</ts>
    <user>U64FLQRC4</user>
    <text>command not found</text>
  </message>
  <message>
    <ts>2017-07-05T21:28:13.774364</ts>
    <user>U37BS6J6N</user>
    <text>could you show me your screen output?</text>
  </message>
  <message>
    <ts>2017-07-05T21:28:14.774649</ts>
    <user>U64FLQRC4</user>
    <text>sudo npm gives me a usage primer</text>
  </message>
  <message>
    <ts>2017-07-05T21:28:35.778316</ts>
    <user>U37BS6J6N</user>
    <text>k so you have npm installed under the root</text>
  </message>
  <message>
    <ts>2017-07-05T21:28:41.779501</ts>
    <user>U37BS6J6N</user>
    <text>you need to have it installed for users</text>
  </message>
  <message>
    <ts>2017-07-05T21:28:44.780053</ts>
    <user>U64FLQRC4</user>
    <text>ok...</text>
  </message>
  <message>
    <ts>2017-07-05T21:28:50.780927</ts>
    <user>U37BS6J6N</user>
    <text>try reinstalling it</text>
  </message>
  <message>
    <ts>2017-07-05T21:29:10.784448</ts>
    <user>U64FLQRC4</user>
    <text>The installer said it installed in usr/local/bin</text>
  </message>
  <message>
    <ts>2017-07-05T21:29:21.786445</ts>
    <user>U64FLQRC4</user>
    <text>I chose to install it for all users</text>
  </message>
  <message>
    <ts>2017-07-05T21:29:26.787337</ts>
    <user>U64FLQRC4</user>
    <text>Not sure what I should do differently...</text>
  </message>
  <message>
    <ts>2017-07-05T21:29:44.790506</ts>
    <user>U37BS6J6N</user>
    <text>try reinstalling it</text>
  </message>
  <message>
    <ts>2017-07-05T21:29:54.792278</ts>
    <user>U37BS6J6N</user>
    <text>via the download</text>
  </message>
  <message>
    <ts>2017-07-05T21:30:04.794202</ts>
    <user>U37BS6J6N</user>
    <text>then make sure you can type npm</text>
  </message>
  <message>
    <ts>2017-07-05T21:30:33.800037</ts>
    <user>U64FLQRC4</user>
    <text>"This package will install Node.js v6.11.0 and npm v3.10.10 into /usr/local/."</text>
  </message>
  <message>
    <ts>2017-07-05T21:30:50.803186</ts>
    <user>U64FLQRC4</user>
    <text>Install for all users of this computer</text>
  </message>
  <message>
    <ts>2017-07-05T21:31:08.806332</ts>
    <user>U64FLQRC4</user>
    <text>Node.js was installed at

   /usr/local/bin/node

npm was installed at

   /usr/local/bin/npm

Make sure that /usr/local/bin is in your $PATH.</text>
  </message>
  <message>
    <ts>2017-07-05T21:31:20.808679</ts>
    <user>U64FLQRC4</user>
    <text>npm command not found</text>
  </message>
  <message>
    <ts>2017-07-05T21:33:25.832015</ts>
    <user>U37BS6J6N</user>
    <text>is "/usr/local/bin is in your $PATH" ?</text>
  </message>
  <message>
    <ts>2017-07-05T21:33:37.834175</ts>
    <user>U64FLQRC4</user>
    <text>I have no idea</text>
  </message>
  <message>
    <ts>2017-07-05T21:33:41.834977</ts>
    <user>U37BS6J6N</user>
    <text>Do you know about $path variables?</text>
  </message>
  <message>
    <ts>2017-07-05T21:33:44.835510</ts>
    <user>U64FLQRC4</user>
    <text>no</text>
  </message>
  <message>
    <ts>2017-07-05T21:34:06.839657</ts>
    <user>U37BS6J6N</user>
    <text>&lt;https://stackoverflow.com/questions/7501678/set-environment-variables-on-mac-os-x-lion&gt;</text>
  </message>
  <message>
    <ts>2017-07-05T21:38:56.894583</ts>
    <user>U64FLQRC4</user>
    <text>OK, so I'm adding
PATH=$PATH:/usr/local/bin/
export PATH</text>
  </message>
  <message>
    <ts>2017-07-05T21:39:00.895393</ts>
    <user>U64FLQRC4</user>
    <text>To my PATH file</text>
  </message>
  <message>
    <ts>2017-07-05T21:39:13.897734</ts>
    <user>U64FLQRC4</user>
    <text>my bash_profile, rather</text>
  </message>
  <message>
    <ts>2017-07-05T21:40:28.912243</ts>
    <user>U64FLQRC4</user>
    <text>echo $PATH
/Library/Frameworks/Python.framework/Versions/3.6/bin:/Library/Frameworks/Python.framework/Versions/2.7/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/Library/Frameworks/Python.framework/Versions/2.7/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin/</text>
  </message>
  <message>
    <ts>2017-07-05T21:40:36.913848</ts>
    <user>U64FLQRC4</user>
    <text>npm
-bash: npm: command not found</text>
  </message>
  <message>
    <ts>2017-07-05T21:45:06.963745</ts>
    <user>U64FLQRC4</user>
    <text>my /etc/paths file has</text>
  </message>
  <message>
    <ts>2017-07-05T21:45:19.965957</ts>
    <user>U64FLQRC4</user>
    <text>"/usr/local/bin
/usr/bin
/bin
/usr/sbin
/sbin"</text>
  </message>
  <message>
    <ts>2017-07-05T21:47:24.988515</ts>
    <user>U37BS6J6N</user>
    <text>restart maybe?</text>
  </message>
  <message>
    <ts>2017-07-05T21:50:30.021450</ts>
    <user>U5AEH3L05</user>
    <text>I want to store some content for my site in markdown format, and then edit those markdown files. Is the best way to load those files through the Http library?</text>
  </message>
  <message>
    <ts>2017-07-05T21:51:42.034651</ts>
    <user>U64FLQRC4</user>
    <text>no change after a restart</text>
  </message>
  <message>
    <ts>2017-07-05T21:54:46.069110</ts>
    <user>U3HQVHERX</user>
    <text>theotherben: &lt;https://github.com/eeue56/elm-static-html&gt;</text>
  </message>
  <message>
    <ts>2017-07-05T21:55:43.080178</ts>
    <user>U5AEH3L05</user>
    <text>Ooh, that's neat! That's not quite what I'm looking for though -- I'd still like the page to be a normal Elm app, I just want to load content from other files</text>
  </message>
  <message>
    <ts>2017-07-05T21:58:15.107749</ts>
    <user>U37BS6J6N</user>
    <text>did you echo your path before or after sudo?</text>
  </message>
  <message>
    <ts>2017-07-05T22:02:55.161508</ts>
    <user>U3HQVHERX</user>
    <text>&lt;http://package.elm-lang.org/packages/evancz/elm-markdown/latest/Markdown&gt;</text>
  </message>
  <message>
    <ts>2017-07-05T22:03:21.166165</ts>
    <user>U3HQVHERX</user>
    <text>If you put your markdown in `.elm` modules then rendered it that</text>
  </message>
  <message>
    <ts>2017-07-05T22:03:22.166415</ts>
    <user>U3HQVHERX</user>
    <text>way</text>
  </message>
  <message>
    <ts>2017-07-05T22:03:37.168995</ts>
    <user>U5AEH3L05</user>
    <text>Yeah, I was thinking about how to do exactly that but without embedding the markdown in the .elm files.</text>
  </message>
  <message>
    <ts>2017-07-05T22:18:52.323438</ts>
    <user>U64FLQRC4</user>
    <text>FYI &lt;https://github.com/elm-lang/elm-compiler/issues/1563&gt;</text>
  </message>
  <message>
    <ts>2017-07-05T22:18:58.324404</ts>
    <user>U64FLQRC4</user>
    <text>I fixed the permissions</text>
  </message>
  <message>
    <ts>2017-07-05T22:19:06.325801</ts>
    <user>U64FLQRC4</user>
    <text>but I still can't run the elm programs I now see inside bin</text>
  </message>
  <message>
    <ts>2017-07-05T22:19:09.326273</ts>
    <user>U64FLQRC4</user>
    <text>command not found...</text>
  </message>
  <message>
    <ts>2017-07-05T22:19:33.330184</ts>
    <user>U64FLQRC4</user>
    <text>echo $PATH gives</text>
  </message>
  <message>
    <ts>2017-07-05T22:19:42.331788</ts>
    <user>U64FLQRC4</user>
    <text>"/Library/Frameworks/Python.framework/Versions/3.6/bin:/Library/Frameworks/Python.framework/Versions/2.7/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin/"</text>
  </message>
  <message>
    <ts>2017-07-05T22:37:14.511411</ts>
    <user>U37BS6J6N</user>
    <text>&lt;https://github.com/elm-lang/elm-platform/issues/164&gt;</text>
  </message>
  <message>
    <ts>2017-07-05T22:37:55.518114</ts>
    <user>U37BS6J6N</user>
    <text>or you could change permissions on the dir</text>
  </message>
  <message>
    <ts>2017-07-05T22:38:06.520042</ts>
    <user>U37BS6J6N</user>
    <text>using chmod....</text>
  </message>
  <message>
    <ts>2017-07-05T22:39:40.536126</ts>
    <user>U37BS6J6N</user>
    <text>they also mention brew install as an option</text>
  </message>
  <message>
    <ts>2017-07-05T22:49:55.636472</ts>
    <user>U64FLQRC4</user>
    <text>I did change permissions on the directory</text>
  </message>
  <message>
    <ts>2017-07-05T22:50:31.642246</ts>
    <user>U64FLQRC4</user>
    <text>apparently the actual elm files were not put in /lib/node_modules/elm/binwrappers/</text>
  </message>
  <message>
    <ts>2017-07-05T22:50:38.643516</ts>
    <user>U64FLQRC4</user>
    <text>there is no elm directory in node_modules</text>
  </message>
  <message>
    <ts>2017-07-05T22:56:03.694823</ts>
    <user>U64FLQRC4</user>
    <text>installing via homebrew seems to have worked just fine</text>
  </message>
  <message>
    <ts>2017-07-05T22:56:09.695846</ts>
    <user>U64FLQRC4</user>
    <text>Thanks for the help</text>
  </message>
  <message>
    <ts>2017-07-05T23:00:26.737098</ts>
    <user>U37BS6J6N</user>
    <text>yw, you definitely had it rough on the setup</text>
  </message>
  <message>
    <ts>2017-07-05T23:00:36.738928</ts>
    <user>U37BS6J6N</user>
    <text>glad you are squared away</text>
  </message>
  <message>
    <ts>2017-07-06T00:11:13.395890</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U64FLQRC4&gt; if you are using linux &lt;https://docs.npmjs.com/getting-started/fixing-npm-permissions&gt; follow option 2</text>
  </message>
  <message>
    <ts>2017-07-06T02:58:53.152810</ts>
    <user>U623QK78C</user>
    <text>Can union types be curried?</text>
  </message>
  <message>
    <ts>2017-07-06T03:01:00.188343</ts>
    <user>U623QK78C</user>
    <text>Never mind. Just tried it in the repl.</text>
  </message>
  <message>
    <ts>2017-07-06T03:01:15.192680</ts>
    <user>U623QK78C</user>
    <text>Turns out they can be curried.</text>
  </message>
  <message>
    <ts>2017-07-06T03:19:38.483530</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U623QK78C&gt; like all functions in Elm, constructors are curried. You can use the fact that they are curried to easily partially apply arguments to them.</text>
  </message>
  <message>
    <ts>2017-07-06T03:37:09.780965</ts>
    <user>U623QK78C</user>
    <text>Thanks, that was exactly the use-case I was thinking of.</text>
  </message>
  <message>
    <ts>2017-07-06T04:53:48.327446</ts>
    <user>U5WD40ZA9</user>
    <text>Could someone please explain why the following doesn't returns true :

Regex.contains (Regex.regex "^([1-9][0-9]*)$") "123"</text>
  </message>
  <message>
    <ts>2017-07-06T04:54:41.347052</ts>
    <user>U5WD40ZA9</user>
    <text>Trying to create a regex pattern that only matches string that only contains numbers</text>
  </message>
  <message>
    <ts>2017-07-06T04:57:08.402784</ts>
    <user>U1RK41R0T</user>
    <text>It returns `True` for me</text>
  </message>
  <message>
    <ts>2017-07-06T04:57:13.404234</ts>
    <user>U41NK9BM4</user>
    <text>BTW That won't match 0, i believe - is it indented?</text>
  </message>
  <message>
    <ts>2017-07-06T04:58:29.432855</ts>
    <user>U5WD40ZA9</user>
    <text>&lt;@U41NK9BM4&gt; it's intended</text>
  </message>
  <message>
    <ts>2017-07-06T04:58:37.436046</ts>
    <user>U41NK9BM4</user>
    <text>OK :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T04:58:54.442167</ts>
    <user>U1RK41R0T</user>
    <text>&lt;https://ellie-app.com/3G9qn8d5JRWa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T04:59:37.459077</ts>
    <user>U41NK9BM4</user>
    <text>```&amp;gt; Regex.contains (Regex.regex "^([1-9][0-9]*)$") "123"
True : Bool```</text>
  </message>
  <message>
    <ts>2017-07-06T04:59:54.465843</ts>
    <user>U41NK9BM4</user>
    <text>From the 0.18 repl :point_up_2:</text>
  </message>
  <message>
    <ts>2017-07-06T05:02:30.528244</ts>
    <user>U1RK41R0T</user>
    <text>can somebody explain me in simple words how Fuzzer Shrinkers work and how to write them? I get that their role is to determine the closest value that makes test fail but do you know some more sophisticated examples of their definition? :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T05:04:35.575374</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U1RK41R0T&gt; generally, they're built using `elm-shrink`, might want to have a look at the code of that project (it's not overly complicated)</text>
  </message>
  <message>
    <ts>2017-07-06T05:06:43.624101</ts>
    <user>U3SJEDR96</user>
    <text>and generally, they work by defining a "lower" value, given a certain value. So for a list, this would be a shorter list. For an integer, this would be an integer closer to zero. For a `Just x`, this could be the `Just (shrink x)` or `Nothing`</text>
  </message>
  <message>
    <ts>2017-07-06T05:07:00.630413</ts>
    <user>U1RK41R0T</user>
    <text>thanks! I didn't hit upon an idea of checking `elm-shrink` package itself :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T05:09:22.682298</ts>
    <user>U64M3DF1B</user>
    <text>hi - being noob to Elm - I have (totally c/p'ed) this

```
module Main exposing (..)
```
and a ports.js saying `Elm.Main.embed(container)` - only it doesn't :cry: - all it does is complain about Elm.Main.embed not being a function

I've searched for ‘embed' on &lt;http://github.com/elm-lang|github.com/elm-lang&gt; - and to my surprise it's not there? Even so, a number of posts says it can be done like that - even &lt;http://elm-lang.org|elm-lang.org&gt; has it front and center in a piece of code? I am going crazy over this!</text>
  </message>
  <message>
    <ts>2017-07-06T05:11:31.729854</ts>
    <user>U41NK9BM4</user>
    <text>Usually that `Elm.Main.embed(...)` is defined in the generated file by `elm-make`.</text>
  </message>
  <message>
    <ts>2017-07-06T05:11:58.739814</ts>
    <user>U41NK9BM4</user>
    <text>So, how do you have compiled the Elm file?</text>
  </message>
  <message>
    <ts>2017-07-06T05:12:45.757663</ts>
    <user>U64M3DF1B</user>
    <text>&lt;@U41NK9BM4&gt; that would be the elm.js - 

I did elm make Main.elm --output=elm.js</text>
  </message>
  <message>
    <ts>2017-07-06T05:12:56.761944</ts>
    <user>U41NK9BM4</user>
    <text>Good.</text>
  </message>
  <message>
    <ts>2017-07-06T05:13:02.764063</ts>
    <user>U1RK41R0T</user>
    <text>perhaps the problem is a `require` statement that must be translated/bundled into ES5 code runnable on the browser?</text>
  </message>
  <message>
    <ts>2017-07-06T05:13:03.764627</ts>
    <user>U64M3DF1B</user>
    <text>:$</text>
  </message>
  <message>
    <ts>2017-07-06T05:13:05.765135</ts>
    <user>U41NK9BM4</user>
    <text>And you added that elm.js to you HTML file, right?</text>
  </message>
  <message>
    <ts>2017-07-06T05:14:02.785996</ts>
    <user>U64M3DF1B</user>
    <text>this is the ports.js - all of it

```
‘use strict'
const Elm = require(‘./elm.js')
console.log(Elm);
// get a reference to the div where we will show our UI
let container = document.getElementById(‘container')

// start the elm app in the container
// and keep a reference for communicating with the app
let mandarinClient = Elm.Main.embed(container)
```</text>
  </message>
  <message>
    <ts>2017-07-06T05:14:18.792014</ts>
    <user>U41NK9BM4</user>
    <text>Yes, could be you need a more exotic way to include that JS in our app like vviktor said</text>
  </message>
  <message>
    <ts>2017-07-06T05:14:49.803033</ts>
    <user>U64M3DF1B</user>
    <text>ohh</text>
  </message>
  <message>
    <ts>2017-07-06T05:15:14.812481</ts>
    <user>U1RK41R0T</user>
    <text>generally there are some project starting boilerplates that make build process easier</text>
  </message>
  <message>
    <ts>2017-07-06T05:15:50.825191</ts>
    <user>U64M3DF1B</user>
    <text>what I am trying is building an app that will compile into electron - and be runnable from browser - using this: &lt;https://medium.com/@ezekeal/building-an-electron-app-with-elm-part-1-boilerplate-3416a730731f&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T05:16:24.837934</ts>
    <user>U41NK9BM4</user>
    <text>Quite advanced stuff! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T05:16:24.838042</ts>
    <user>U64M3DF1B</user>
    <text>and that works</text>
  </message>
  <message>
    <ts>2017-07-06T05:17:10.855037</ts>
    <user>U64M3DF1B</user>
    <text>well - it's not like I have not done any programming before :wink:
(but my Elm is of recent date) :smile:</text>
  </message>
  <message>
    <ts>2017-07-06T05:17:42.866741</ts>
    <user>U41NK9BM4</user>
    <text>Advanced for me, that's for sure.</text>
  </message>
  <message>
    <ts>2017-07-06T05:18:04.875097</ts>
    <user>U64M3DF1B</user>
    <text>but when I change the Main.elm from being a 2-liner into being a module - it kind'a gets out of hand with the embedding stuff</text>
  </message>
  <message>
    <ts>2017-07-06T05:18:34.885789</ts>
    <user>U64M3DF1B</user>
    <text>I don't think that is an issue - I'm concerned with the browser</text>
  </message>
  <message>
    <ts>2017-07-06T05:18:53.892785</ts>
    <user>U64M3DF1B</user>
    <text>but vviktor may be on to something</text>
  </message>
  <message>
    <ts>2017-07-06T05:19:00.895322</ts>
    <user>U41NK9BM4</user>
    <text>So that example works in your machine?</text>
  </message>
  <message>
    <ts>2017-07-06T05:19:11.899389</ts>
    <user>U64M3DF1B</user>
    <text>yep</text>
  </message>
  <message>
    <ts>2017-07-06T05:19:37.909238</ts>
    <user>U64M3DF1B</user>
    <text>only - when I change the Main.elm to being a module - this embed thing happens</text>
  </message>
  <message>
    <ts>2017-07-06T05:20:32.929726</ts>
    <user>U41NK9BM4</user>
    <text>IIRC: it must be called `Main` BTW in order to write `Elm.Main.embed`. Otherwise `Elm.YourName.embed`.</text>
  </message>
  <message>
    <ts>2017-07-06T05:21:32.952435</ts>
    <user>U64M3DF1B</user>
    <text>yes - the `module Main exposing (..)` right? Or does it go for the filename too?</text>
  </message>
  <message>
    <ts>2017-07-06T05:22:01.962536</ts>
    <user>U41NK9BM4</user>
    <text>The naming must be consistent</text>
  </message>
  <message>
    <ts>2017-07-06T05:22:21.970456</ts>
    <user>U41NK9BM4</user>
    <text>so `module YourName exposing (..)`. But Elm will catch that.</text>
  </message>
  <message>
    <ts>2017-07-06T05:23:11.988035</ts>
    <user>U41NK9BM4</user>
    <text>I'm just exploring the obvious gotchas :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T05:24:12.010564</ts>
    <user>U64M3DF1B</user>
    <text>due to the `const Elm = require('./elm.js')` I had to add Browserify - so my build looks like this:

`elm make Main.elm --output elm.js &amp;amp;&amp;amp; browserify ports.js -o ports.js`</text>
  </message>
  <message>
    <ts>2017-07-06T05:25:07.030759</ts>
    <user>U41NK9BM4</user>
    <text>What does that console.log(Elm); says?</text>
  </message>
  <message>
    <ts>2017-07-06T05:25:27.038230</ts>
    <user>U3SJEDR96</user>
    <text>that should do the trick, indeed, &lt;@U64M3DF1B&gt; :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T05:25:41.043373</ts>
    <user>U3SJEDR96</user>
    <text>I'm a little surprised it didn't blow up on the `require` before, actually</text>
  </message>
  <message>
    <ts>2017-07-06T05:26:17.056763</ts>
    <user>U64M3DF1B</user>
    <text>what? :wait:</text>
  </message>
  <message>
    <ts>2017-07-06T05:26:26.059892</ts>
    <user>U64M3DF1B</user>
    <text>no - it isn't</text>
  </message>
  <message>
    <ts>2017-07-06T05:26:47.067521</ts>
    <user>U41NK9BM4</user>
    <text>Ah, nevermind.</text>
  </message>
  <message>
    <ts>2017-07-06T05:26:59.071909</ts>
    <user>U64M3DF1B</user>
    <text>funny you mention it - I've totally forgot about it</text>
  </message>
  <message>
    <ts>2017-07-06T05:27:09.075410</ts>
    <user>U64M3DF1B</user>
    <text>the console.log says nothing !?!</text>
  </message>
  <message>
    <ts>2017-07-06T05:27:24.081141</ts>
    <user>U41NK9BM4</user>
    <text>Really weird.</text>
  </message>
  <message>
    <ts>2017-07-06T05:27:52.091918</ts>
    <user>U3SJEDR96</user>
    <text>can you explain _what_ goes wrong? Also, where do you use `ports.js` and how? Does `elm-make Main.elm --output elm.js` give any output at all?</text>
  </message>
  <message>
    <ts>2017-07-06T05:29:19.123164</ts>
    <user>U64M3DF1B</user>
    <text>if I change Main.elm to
```
import Html

main = Html.text "hello"
```</text>
  </message>
  <message>
    <ts>2017-07-06T05:29:25.125202</ts>
    <user>U64M3DF1B</user>
    <text>upps</text>
  </message>
  <message>
    <ts>2017-07-06T05:30:07.140584</ts>
    <user>U3SJEDR96</user>
    <text>yeah, that should do the trick. Well, that and having `module Main exposing (..)` at the very top</text>
  </message>
  <message>
    <ts>2017-07-06T05:30:16.143744</ts>
    <user>U3SJEDR96</user>
    <text>as in, that's a valid module</text>
  </message>
  <message>
    <ts>2017-07-06T05:30:19.145176</ts>
    <user>U64M3DF1B</user>
    <text>all is well</text>
  </message>
  <message>
    <ts>2017-07-06T05:32:17.189067</ts>
    <user>U3SJEDR96</user>
    <text>On a general note, I would focus on learning how to use Elm before focusing too much on having it run both in electron _and_ the browser. Getting it running in the browser first, should make it quite easy to getting it to run in electron after</text>
  </message>
  <message>
    <ts>2017-07-06T05:32:50.201084</ts>
    <user>U64M3DF1B</user>
    <text>ok - so now I am really confused!

I tried your suggestion - that works!

```
module Main exposing (..)
import Html
main = Html.text "hello world"
```</text>
  </message>
  <message>
    <ts>2017-07-06T05:33:19.211643</ts>
    <user>U3SJEDR96</user>
    <text>(lacking a module at the top will default to `module Main`, afaik)</text>
  </message>
  <message>
    <ts>2017-07-06T05:33:56.223978</ts>
    <user>U64M3DF1B</user>
    <text>but 

if I do this:

```
module Main exposing
  ( Model
  , Msg
  , init
  , update
  , subscriptions
  , view
  )


```

stops the fun! And leaves me with `..embed bla bla undefined`</text>
  </message>
  <message>
    <ts>2017-07-06T05:34:21.233081</ts>
    <user>U3SJEDR96</user>
    <text>But do you have a `Model`, `Msg`, and those functions defined?</text>
  </message>
  <message>
    <ts>2017-07-06T05:34:48.242390</ts>
    <user>U64M3DF1B</user>
    <text>so - under the cover "exposing (..)" kind a _spills_ the *embed* too?</text>
  </message>
  <message>
    <ts>2017-07-06T05:35:14.251569</ts>
    <user>U3SJEDR96</user>
    <text>`exposing` only declares what functions any other Elm module can import from your module</text>
  </message>
  <message>
    <ts>2017-07-06T05:35:28.256757</ts>
    <user>U3SJEDR96</user>
    <text>`embed` is enabled by having a function called `main` with a valid signature</text>
  </message>
  <message>
    <ts>2017-07-06T05:35:28.256927</ts>
    <user>U64M3DF1B</user>
    <text>that - I would chalk up as _a feature_</text>
  </message>
  <message>
    <ts>2017-07-06T05:35:57.266622</ts>
    <user>U3SJEDR96</user>
    <text>note that `main` doesn't _have to be_ exposed, but it can.</text>
  </message>
  <message>
    <ts>2017-07-06T05:36:20.274608</ts>
    <user>U3SJEDR96</user>
    <text>but you can only `expose` things that are actually defined in a given module</text>
  </message>
  <message>
    <ts>2017-07-06T05:36:30.278299</ts>
    <user>U3SJEDR96</user>
    <text>so if you haven't written those functions and types, you can't compile it</text>
  </message>
  <message>
    <ts>2017-07-06T05:36:55.287129</ts>
    <user>U64M3DF1B</user>
    <text>that I understand</text>
  </message>
  <message>
    <ts>2017-07-06T05:37:05.290745</ts>
    <user>U3SJEDR96</user>
    <text>if you have written them, but removed `main`, there is nothing for elm to run</text>
  </message>
  <message>
    <ts>2017-07-06T05:38:05.311306</ts>
    <user>U3SJEDR96</user>
    <text>`main` defines an entry-point into your application, and can be either a simple static Html node (`main : Html a`) or a program of some kind (`main : Program flagType modelType msgType`)</text>
  </message>
  <message>
    <ts>2017-07-06T05:39:13.334295</ts>
    <user>U3SJEDR96</user>
    <text>the latter you can declare by using `Html.program` or `Html.beginnerProgram` both of which will allow you to `embed` or `fullscreen` your app, or `Platform.program` which will allow you to use `Elm.YourModel.worker(..)`, however that's not really relevant at the moment</text>
  </message>
  <message>
    <ts>2017-07-06T05:40:13.355195</ts>
    <user>U3SJEDR96</user>
    <text>but let's take a step back: explore basic Elm programming for a while, read the guide (&lt;http://guide.elm-lang.org|guide.elm-lang.org&gt;) and _then_ attempt to get it running in the platform(s) of your choice :wink:</text>
  </message>
  <message>
    <ts>2017-07-06T05:40:49.368212</ts>
    <user>U64M3DF1B</user>
    <text>thx ilias!</text>
  </message>
  <message>
    <ts>2017-07-06T05:41:33.383939</ts>
    <user>U3SJEDR96</user>
    <text>the reason I'm saying this is because trying to get everything going all at once is going to make it hard(er) to pinpoint which part of the equation is giving you trouble, and make it a generally frustrating experience</text>
  </message>
  <message>
    <ts>2017-07-06T05:53:44.643934</ts>
    <user>U64M3DF1B</user>
    <text>well - true - the toolbelt has widend considerably since I bootstrapped a AB Metric :wink:</text>
  </message>
  <message>
    <ts>2017-07-06T05:55:33.682254</ts>
    <user>U37BS6J6N</user>
    <text>Ello all looking for some spa structure advice.
I've seen examples with Components (similar to react) that have single files containing the model, view, and update  in a single file. (the webpack starter does this a bit)

I"ve also seen spas written into individual folders for views, models, 
&lt;https://github.com/rtfeldman/elm-spa-example&gt;

I've done both in other js spa's with varying degrees of success and am open to either.

Is there a "preferred best practice" way to do this?

Also, is there a "Redux" type single "source of truth" storage solution for elm that I should look into?

Or if there is a better channel to ask please point me to it</text>
  </message>
  <message>
    <ts>2017-07-06T06:13:12.047818</ts>
    <user>U3SJEDR96</user>
    <text>Alright, so; components don't work that well in Elm, since they sort of urge you to put the default abstraction boundary at the "TEA triplet", and result in having a separate `Msg` type, `Model` type, `update` `view` and `init` function for every "reusable thing". As such, trying to keep things flat and making reusable _functions_  will get you better results. Of course, when it makes sense to abstract at the TEA boundary, that's when you do. For example in the elm-spa-example, every page has a separate msg type and model, and separate functions.</text>
  </message>
  <message>
    <ts>2017-07-06T06:13:36.055625</ts>
    <user>U3SJEDR96</user>
    <text>A good resource for that is &lt;https://www.reddit.com/r/elm/comments/5jd2xn/how_to_structure_elm_with_multiple_models/dbkpgbd/&gt; this comment/thread</text>
  </message>
  <message>
    <ts>2017-07-06T06:13:56.061863</ts>
    <user>U3SJEDR96</user>
    <text>as for "single source of truth" - you actually have _no other option_ in Elm.</text>
  </message>
  <message>
    <ts>2017-07-06T06:14:28.071354</ts>
    <user>U3SJEDR96</user>
    <text>In the end, you hand a single `main` to the runtime, which has a `model` that contains all your state</text>
  </message>
  <message>
    <ts>2017-07-06T06:16:05.102516</ts>
    <user>U37BS6J6N</user>
    <text>&lt;@U3SJEDR96&gt; thanks for the info</text>
  </message>
  <message>
    <ts>2017-07-06T06:17:03.120650</ts>
    <user>U4872964V</user>
    <text>&lt;@U37BS6J6N&gt; I know this sounds like cheesy advice, but my preferred best practice is not to worry about it, and refactor when the code becomes uncomfortable. That is, I just write the functions that I think I need at the moment :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T06:17:39.132116</ts>
    <user>U3SJEDR96</user>
    <text>Yeah. Also don't be "guilt tripped" into overabstracting and encapsulating things that - realistically - don't need to be encapsulated</text>
  </message>
  <message>
    <ts>2017-07-06T06:17:57.137686</ts>
    <user>U3SJEDR96</user>
    <text>best practices from other paradigms don't transfer perfectly to a functional language</text>
  </message>
  <message>
    <ts>2017-07-06T06:18:46.153447</ts>
    <user>U4872964V</user>
    <text>I just do `exposing (..)` until I get conflicts, then I refine. Unless I'm writing a package of course, then the API is important. But that's another matter.</text>
  </message>
  <message>
    <ts>2017-07-06T06:21:55.212745</ts>
    <user>U3LT1UTPF</user>
    <text>```
26|         UpdateCurrentProduct product -&amp;gt;
27|             { model | currentProduct = product } ! []
28|
29|         UpdateCurrentCycle newCycle -&amp;gt;
30|&amp;gt;            let
31|&amp;gt;                currentProduct =
32|&amp;gt;                    model.currentProduct.product
33|&amp;gt;
34|&amp;gt;                findProductInNewCycle =
35|&amp;gt;                    find (\product -&amp;gt; product.product == currentProduct) newCycle.productList
36|&amp;gt;            in
37|&amp;gt;                case findProductInNewCycle of
38|&amp;gt;                    Nothing -&amp;gt;
39|&amp;gt;                        ( { model | currentCycle = newCycle }, UpdateCurrentProduct initialCurrentProduct )
40|&amp;gt;
41|&amp;gt;                    Just product -&amp;gt;
42|&amp;gt;                        ( { model | currentCycle = newCycle }, UpdateCurrentProduct product )

The 3rd branch has this type:
    ( { currentCycle : Cycle    , currentProduct : Product    , cycleList : List Cycle    , error : Maybe String    }    , *Cmd msg*    )

But the 4th is:
    ( { currentCycle : Cycle    , currentProduct : Product    , cycleList : List Cycle    , error : Maybe String    }    , *Msg*    )

Hint: All branches in a `case` must have the same type. So no matter which one we take, we always get back the same type of value.
```

I'm sure this is a very silly mistake, but I don't get what I'm doing wrong...</text>
  </message>
  <message>
    <ts>2017-07-06T06:25:58.286514</ts>
    <user>U41NK9BM4</user>
    <text>You miss a `! []` on UpdateCurrentCycle</text>
  </message>
  <message>
    <ts>2017-07-06T06:26:13.290699</ts>
    <user>U41NK9BM4</user>
    <text>See UpdateCurrentProduct for a comparison</text>
  </message>
  <message>
    <ts>2017-07-06T06:26:28.295262</ts>
    <user>U41NK9BM4</user>
    <text>&lt;@U3LT1UTPF&gt; ^^^^</text>
  </message>
  <message>
    <ts>2017-07-06T06:27:01.305214</ts>
    <user>U41NK9BM4</user>
    <text>Basically you don't pack your Msg into a Cmd like you do above</text>
  </message>
  <message>
    <ts>2017-07-06T06:28:00.323291</ts>
    <user>U3SJEDR96</user>
    <text>Well, no, it's that you seem to be trying to return a `Msg` from `update` so that it will be called again, rather than actually doing what needs to be done</text>
  </message>
  <message>
    <ts>2017-07-06T06:29:04.343678</ts>
    <user>U3SJEDR96</user>
    <text>`{ model | currentCycle = newCycle, currentProduct = findProdictInNewCycle |&amp;gt; Maybe.withDefault initialCurrentProduct } ! []`instead</text>
  </message>
  <message>
    <ts>2017-07-06T06:30:00.360610</ts>
    <user>U3LT1UTPF</user>
    <text>Thank you &lt;@U3SJEDR96&gt; and &lt;@U41NK9BM4&gt; :smile:</text>
  </message>
  <message>
    <ts>2017-07-06T06:30:02.361418</ts>
    <user>U3SJEDR96</user>
    <text>(which would replace that entire `case findProductInNewCycle of` :slightly_smiling_face: )</text>
  </message>
  <message>
    <ts>2017-07-06T06:30:14.365204</ts>
    <user>U3LT1UTPF</user>
    <text>Great!</text>
  </message>
  <message>
    <ts>2017-07-06T06:34:05.435356</ts>
    <user>U3LT1UTPF</user>
    <text>Then, one must not call a Msg from another Msg, right, &lt;@U3SJEDR96&gt;?</text>
  </message>
  <message>
    <ts>2017-07-06T06:36:29.477810</ts>
    <user>U3SJEDR96</user>
    <text>Well, you can, but if you find yourself doing that, it _usually_ makes more sense to take the functionality from that branch that you actually want, make it into a separate function (like `withCurrentProduct : Product -&amp;gt; Model -&amp;gt; Model`) and call that from both places</text>
  </message>
  <message>
    <ts>2017-07-06T06:38:09.507411</ts>
    <user>U3SJEDR96</user>
    <text>so then you'd have `(model |&amp;gt; withCurrentProduct product) ! []` in one place, and `( model |&amp;gt; withCurrentCycle newCycle |&amp;gt; withCurrentProduct (productInNewCycle |&amp;gt; withDefault initialProduct) ) ! []` in the other place</text>
  </message>
  <message>
    <ts>2017-07-06T06:40:42.552705</ts>
    <user>U3SJEDR96</user>
    <text>the alternatives are:
- calling `update` from `update` directly, i.e. making it recursive, which can lead to nasty bugs and doesn't seem necessary at all
- forcing `Msg` into a `Cmd Msg` and letting the runtime call `update` instead, which should make you wonder "why do I need to asynchronously call a function I defined myself?" and "what happens in between?", since your model will essentially be in an invalid state between those calls</text>
  </message>
  <message>
    <ts>2017-07-06T06:41:59.575736</ts>
    <user>U3LT1UTPF</user>
    <text>Wowww... I get it :smile::bananadance: Thank you so much, &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T06:43:15.597873</ts>
    <user>U0CLDU8UB</user>
    <text>My favorite alternative is to rethink what I am trying to do. Many times I can use the same Msg in a couple of places, instead of having two separate `update` cases.</text>
  </message>
  <message>
    <ts>2017-07-06T06:43:58.610462</ts>
    <user>U5P4FLYLE</user>
    <text>Hi all, I am working with elm-mdl with card. And I am adding action block like below:
```      , Card.actions                                                                                                                                                                        
       [ Card.border, css "vertical-align" "center", css "text-align" "right", backgroundColor ]                                                                                            
       [ Button.render Mdl [8,1] model.mdl                                                                                                                                                  
           [ Button.icon, Button.ripple ]                                                                                                                                                   
           [ Icon.i "favorite_border" ]                                                                                                                                                     
       , Button.render Mdl [8,2] model.mdl                                                                                                                                                  
           [ Button.icon, Button.ripple ]                                                                                                                                                   
           [ Icon.i "event_available" ]                                                                                                                                                     
       ]    ```
And it is added *below* the other blocks. What would you change to add it to the *right side* of already existing blocks? I bet it is more css question than elm-mdl one...</text>
  </message>
  <message>
    <ts>2017-07-06T06:44:09.613533</ts>
    <user>U0CLDU8UB</user>
    <text>Of course sometimes I do need the two cases, but even then the separation might change with the rethinking.</text>
  </message>
  <message>
    <ts>2017-07-06T06:46:06.647403</ts>
    <user>U3LT1UTPF</user>
    <text>Good advice, &lt;@U0CLDU8UB&gt; :smile:</text>
  </message>
  <message>
    <ts>2017-07-06T07:32:51.449424</ts>
    <user>U5H8JJP24</user>
    <text>Hi, I have this weird problem. If I write my functions like this:

```
newLocation : Result Http.Error Location -&amp;gt; Model -&amp;gt; ( Model, Cmd Msg )
newLocation result model =
    case result of
        Err error -&amp;gt;
            handleHttpError error model

        Ok location -&amp;gt;
            model |&amp;gt; updateLocation location |&amp;gt; fetchRoute


handleHttpError : Http.Error -&amp;gt; Model -&amp;gt; ( Model, Cmd msg )
handleHttpError error model =
    ({ model | error = Just (toString error) } |&amp;gt; Debug.log "Error") ! []
```
I get the error:

```
Function `handleHttpError` is expecting the 1st argument to be:

    Http.Error

But it is:

    String
```

If I change the function annotation to:
```
handleHttpError : String -&amp;gt; Model -&amp;gt; ( Model, Cmd msg )
```
I get the error:

```
Function `handleHttpError` is expecting the 1st argument to be:

    String

But it is:

    Http.Error
```</text>
  </message>
  <message>
    <ts>2017-07-06T07:34:58.485935</ts>
    <user>U3SJEDR96</user>
    <text>are you calling that `handleHttpError` function from anywhere else? You first attempt looks correct to me...</text>
  </message>
  <message>
    <ts>2017-07-06T07:36:05.505913</ts>
    <user>U4872964V</user>
    <text>yes, check the location of the error</text>
  </message>
  <message>
    <ts>2017-07-06T07:39:30.565298</ts>
    <user>U5H8JJP24</user>
    <text>oumph, thx &lt;@U3SJEDR96&gt; &lt;@U4872964V&gt;. I was searching at the wrong place. There was another call which caused the error... This took me 30 min to realise xD</text>
  </message>
  <message>
    <ts>2017-07-06T07:50:53.763055</ts>
    <user>U62R599PU</user>
    <text>so new 'beginner' may be overstating it ... been trying to wrap my head around the concepts in Elm vs JavaScript.  I have some basic framework (object ... record, some similarities, many differences ...that kind of thing).  At a high level I understand subscriptions in the time clock sense or even keyboard input.  The one area I can't seem to figure out is the equivalent approach/style to deal with observables.</text>
  </message>
  <message>
    <ts>2017-07-06T07:51:19.770715</ts>
    <user>U62R599PU</user>
    <text>Can someone point me in the right direction.  In the past I would have used Flyd observable streams.</text>
  </message>
  <message>
    <ts>2017-07-06T07:51:53.780809</ts>
    <user>U4872964V</user>
    <text>in Elm, the concept of observable corresponds to a Msg</text>
  </message>
  <message>
    <ts>2017-07-06T07:52:33.792370</ts>
    <user>U4872964V</user>
    <text>there is only one stream of Msg, they go into your update function</text>
  </message>
  <message>
    <ts>2017-07-06T07:53:15.805021</ts>
    <user>U4872964V</user>
    <text>maybe that confuses you more, and now I have to go, sorry</text>
  </message>
  <message>
    <ts>2017-07-06T07:55:41.847707</ts>
    <user>U62R599PU</user>
    <text>All the examples I have seen have been ... not sure how to say it... external.  Does anyone know of an example where one variable impact another.  For example, if game variable of "health" changes, a number of dependent variables also updates.</text>
  </message>
  <message>
    <ts>2017-07-06T07:56:19.858571</ts>
    <user>U0CLDU8UB</user>
    <text>I would say there is no concept of observable in Elm. The entire program is a reaction to a "stream" of messages, like norpan said, but you can't really see it from the perspective of the developer</text>
  </message>
  <message>
    <ts>2017-07-06T07:57:18.876117</ts>
    <user>U0CLDU8UB</user>
    <text>You're on the right track. You cannot do dependent streams in Elm. The concept just doesn't exist.</text>
  </message>
  <message>
    <ts>2017-07-06T07:57:20.876934</ts>
    <user>U62R599PU</user>
    <text>Yeah, I kind of get that.  So now I am looking for an example of the pattern I would use to do it in an Elm way. Have not found it yet.</text>
  </message>
  <message>
    <ts>2017-07-06T07:58:22.895191</ts>
    <user>U1CE9DL9H</user>
    <text>well, when the health changes, a message must have been triggered</text>
  </message>
  <message>
    <ts>2017-07-06T07:59:05.908321</ts>
    <user>U1CE9DL9H</user>
    <text>then in update, you can do whatever you need to move the model to a new, valid state, say `{ model | health = model.health - 5, durability = model.durability - 10}`</text>
  </message>
  <message>
    <ts>2017-07-06T07:59:46.921392</ts>
    <user>U0CLDU8UB</user>
    <text>This is very abstract without a concrete example, I'm afraid.</text>
  </message>
  <message>
    <ts>2017-07-06T08:01:01.947150</ts>
    <user>U62R599PU</user>
    <text>Yeah, your right. I guess I just need to dive in.  &lt;@U1CE9DL9H&gt; that makes sense. I guess this model in my head where you assign relationships and move on needs rework.</text>
  </message>
  <message>
    <ts>2017-07-06T08:01:26.955457</ts>
    <user>U0CLDU8UB</user>
    <text>I don't know if this helps or just confuses more, but here's an update with plenty of interdependent things from a game I'm building for fun: &lt;https://github.com/ohanhi/bike-wars/blob/master/src/Bike.elm#L53&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T08:02:03.967233</ts>
    <user>U62R599PU</user>
    <text>oh thanks, yeah, looking at examples for me is a great way to learn.  Appreciate it.</text>
  </message>
  <message>
    <ts>2017-07-06T08:03:18.991120</ts>
    <user>U0CLDU8UB</user>
    <text>Essentially there are just multiple calls to functions and some case expressions in the let block. They are interdependent too: figuring out the collisionPoint needs the nextPosition to be calculated etc.</text>
  </message>
  <message>
    <ts>2017-07-06T08:06:24.050266</ts>
    <user>U0CLDU8UB</user>
    <text>But the thing is, in Elm you need to store _everything_ in the model. There is no other source of state in a program. If you think about it, every single Observable can be a source of state. This is why the two mindsets are a little hard to combine.</text>
  </message>
  <message>
    <ts>2017-07-06T08:10:51.135765</ts>
    <user>U62R599PU</user>
    <text>In some ways that is how I ended up here.  In JS I had just moved my world state to Baobab (immutable structure) and was struggling with 1. Changing my mindset 2. All the options and tools and what was right.  Hence, Elm offers (I think) someone with entry to mid level skills (kind of new to this in general) ... structure.</text>
  </message>
  <message>
    <ts>2017-07-06T08:11:36.149844</ts>
    <user>U62R599PU</user>
    <text>II will follow your code example through.  Thanks for the help.  Off to work.</text>
  </message>
  <message>
    <ts>2017-07-06T08:20:07.320725</ts>
    <user>U4872964V</user>
    <text>&lt;@U62R599PU&gt; if you look at something like debouncing, which you'd use an observable for, this can be handled by explicit state, like done in the various debounce packages for Elm</text>
  </message>
  <message>
    <ts>2017-07-06T08:45:33.873617</ts>
    <user>U41NK9BM4</user>
    <text>pzolla: I'm doing an RPG in Elm and your observations resonate a lot. Coming from imperative language we need to reframe a lot fo things :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T10:23:32.873312</ts>
    <user>U4SM7ECAG</user>
    <text>Hi there! 
I need some help with some 0.16 elm... 
I've got some signal that 's not being handled properly... 
in the main view I've a "escape catcher" that allows me to dismiss modals 


```
 onWithOptions "keyup"
                { stopPropagation = False, preventDefault = False }
                keyCode
                (\keyCode -&amp;gt;
                    Signal.message address &amp;lt;|
                        if keyCode == 27 then
                            App.Action.EscPressed
                        else
                            Debug.log "asdasdasd" App.Action.NoOp
                )
```

the issue is: I'm listening on the `change` event on some inputs which are being "ignored". 
(i.e. the `App.Action.NoOp` gets triggered on any non-`esc` key press and so my view is re-rendered and my inputs reset. 

Any idea of how I could listen to onkey on a single touch? or have something better than `App.Action.NoOp` for the case that doesn't interest me and that would not interfere with the user inputs?</text>
  </message>
  <message>
    <ts>2017-07-06T10:28:46.061253</ts>
    <user>U0LPMPL2U</user>
    <text>Could you filter the signal in the part of the code that handles signals rather than having a conditional in the event handler?</text>
  </message>
  <message>
    <ts>2017-07-06T10:29:25.085284</ts>
    <user>U0LPMPL2U</user>
    <text>Alternatively, write a custom decoder instead of using `keyCode` and make sure it returns `Json.Decode.fail` for non-ESC characters</text>
  </message>
  <message>
    <ts>2017-07-06T10:30:45.134082</ts>
    <user>U0LPMPL2U</user>
    <text>For reference, see how the `onEnter` handler is implemented here: &lt;https://github.com/elm-community/html-extra/blob/2.2.0/src/Html/Events/Extra.elm#L267&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T10:30:59.142669</ts>
    <user>U4SM7ECAG</user>
    <text>oh that's a neat idea!</text>
  </message>
  <message>
    <ts>2017-07-06T10:31:21.156342</ts>
    <user>U3SJEDR96</user>
    <text>`escDecoder tagger = keyCode |&amp;gt; andThen (\k -&amp;gt; if k == 27 then succeed tagger else  fail "not esc")`</text>
  </message>
  <message>
    <ts>2017-07-06T10:31:56.177172</ts>
    <user>U3SJEDR96</user>
    <text>or, indeed, go all the way and make it a custom `onEsc` :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T10:32:35.201092</ts>
    <user>U4SM7ECAG</user>
    <text>I'll try that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T10:51:16.877888</ts>
    <user>U4SM7ECAG</user>
    <text>Awesome that works !</text>
  </message>
  <message>
    <ts>2017-07-06T10:52:02.907158</ts>
    <user>U4SM7ECAG</user>
    <text>Thanks a lot &lt;@U3SJEDR96&gt; and &lt;@U0LPMPL2U&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T10:58:31.151674</ts>
    <user>U641LDZFU</user>
    <text>Hey all, just wondering if it's possible to have union types that look like ``` type Node = ChatNode {id : Int, chatMessage: ChatMessage } | NewsNode {id: int, newsItem: NewsItem} ```</text>
  </message>
  <message>
    <ts>2017-07-06T10:59:48.201039</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, that's actually exactly how you can define them</text>
  </message>
  <message>
    <ts>2017-07-06T11:00:38.235253</ts>
    <user>U3SJEDR96</user>
    <text>well, you'd have `Int` for the second `id`, too</text>
  </message>
  <message>
    <ts>2017-07-06T11:00:53.244724</ts>
    <user>U3SJEDR96</user>
    <text>but other than that, that's a perfectly valid union type :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T11:01:34.271623</ts>
    <user>U641LDZFU</user>
    <text>and so checking an item in a case with ChatNode item -&amp;gt;</text>
  </message>
  <message>
    <ts>2017-07-06T11:02:20.300196</ts>
    <user>U3SJEDR96</user>
    <text>yep. I think you can even do `ChatNode {id, chatMessage}`</text>
  </message>
  <message>
    <ts>2017-07-06T11:02:46.316854</ts>
    <user>U641LDZFU</user>
    <text>should theoretically match if the item is { id = 1, chatMessage = {some - "ChatMessage"}</text>
  </message>
  <message>
    <ts>2017-07-06T11:03:59.362448</ts>
    <user>U3SJEDR96</user>
    <text>if It's `ChatNode { id = 1, chatMessage = ... }`</text>
  </message>
  <message>
    <ts>2017-07-06T11:04:26.379210</ts>
    <user>U641LDZFU</user>
    <text>yeah, sorry always muddling my = and : :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T11:04:41.387866</ts>
    <user>U641LDZFU</user>
    <text>ok thanks! I am not insane :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T11:04:45.390420</ts>
    <user>U3SJEDR96</user>
    <text>nah, those were fine! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T11:05:06.403507</ts>
    <user>U641LDZFU</user>
    <text>So if it's not matching I need to look into the "item" to make sure it has the correct fields</text>
  </message>
  <message>
    <ts>2017-07-06T11:05:47.428865</ts>
    <user>U3SJEDR96</user>
    <text>well right now a Node can only be either of those two things, no extra or missing fields allowed. You can't construct wrong values, so you also can't encounter them :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T11:06:06.441501</ts>
    <user>U641LDZFU</user>
    <text>yeah, I am loving that about elm!</text>
  </message>
  <message>
    <ts>2017-07-06T11:35:21.527833</ts>
    <user>U3BTVEFQU</user>
    <text>hello Elm community .. i'm kinda stuck right now: Is there a way to debounce/delay a cmd for a certain timeperiod? I read all the stuff about Task and Process.sleep, but know I'm more confused than ever :disappointed:</text>
  </message>
  <message>
    <ts>2017-07-06T11:36:58.586456</ts>
    <user>U0LPMPL2U</user>
    <text>why do you need to delay commands?</text>
  </message>
  <message>
    <ts>2017-07-06T11:41:46.758413</ts>
    <user>U3BTVEFQU</user>
    <text>I'm using a form which uses RemoteData to submit something to my server. My server needs a little bit time (talking to a 3rd party server) to validate the input. My idea was to wait for RemoteData response and when the data is not validated yet, issue another request to the server. The response in my model would than be overridden with the new response, and so on, until the data is validated.</text>
  </message>
  <message>
    <ts>2017-07-06T11:42:55.799589</ts>
    <user>U3BTVEFQU</user>
    <text>To keep it simple and clean I wanted to skip a `Time.every` subscription and introducing another msg for my `update` function.</text>
  </message>
  <message>
    <ts>2017-07-06T11:44:04.840504</ts>
    <user>U3BTVEFQU</user>
    <text>So I basically need it for polling … I'm able to poll already, however because of no timeout/delay the performance is horrible and I make 100 requests per second</text>
  </message>
  <message>
    <ts>2017-07-06T11:44:23.852163</ts>
    <user>U2JA29EKF</user>
    <text>&lt;https://github.com/Bernardoow/elm-alert-timer-message/blob/1.0.0/src/AlertTimerMessage.elm&gt; is a good example of sleeping</text>
  </message>
  <message>
    <ts>2017-07-06T11:45:43.900339</ts>
    <user>U3BTVEFQU</user>
    <text>&lt;@U2JA29EKF&gt; yep found something similar, however how would I do another http request with this delay function?</text>
  </message>
  <message>
    <ts>2017-07-06T11:46:33.930880</ts>
    <user>U3SJEDR96</user>
    <text>So you can do `Time.sleep (100 * millisecond) |&amp;gt; Task.andThen (makeNewRequest)`</text>
  </message>
  <message>
    <ts>2017-07-06T11:47:55.980027</ts>
    <user>U0LPMPL2U</user>
    <text>You could have something like:
```
subscriptions : Model -&amp;gt; Sub Msg
subscriptions model =
  case model.state of
    Polling -&amp;gt; Time.every second (always Poll)
    _ -&amp;gt; Sub.none
```</text>
  </message>
  <message>
    <ts>2017-07-06T11:49:03.020955</ts>
    <user>U3BTVEFQU</user>
    <text>&lt;@U0LPMPL2U&gt; yep, just wanted to avoid this :wink:</text>
  </message>
  <message>
    <ts>2017-07-06T11:49:21.032029</ts>
    <user>U0K92QFST</user>
    <text>ilias: is it Time.sleep, or Process.sleep?</text>
  </message>
  <message>
    <ts>2017-07-06T11:49:40.043304</ts>
    <user>U3SJEDR96</user>
    <text>somewhat more complete example: `Process.sleep (100 * Time.millisecond) |&amp;gt; Task.andThen (\_ -&amp;gt; buildRequest |&amp;gt; Http.toTask) |&amp;gt; Task.attempt GotResponse`</text>
  </message>
  <message>
    <ts>2017-07-06T11:49:56.052587</ts>
    <user>U3SJEDR96</user>
    <text>Process, my bad :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T11:50:13.063145</ts>
    <user>U0K92QFST</user>
    <text>Cool! Just making sure</text>
  </message>
  <message>
    <ts>2017-07-06T11:53:12.172953</ts>
    <user>U641LDZFU</user>
    <text>So I can't still can't get unions working...</text>
  </message>
  <message>
    <ts>2017-07-06T11:53:14.173585</ts>
    <user>U641LDZFU</user>
    <text>&lt;https://gist.github.com/allansideas/60658d50f4f6b5ab9738c05f419324a8&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T11:54:09.206690</ts>
    <user>U641LDZFU</user>
    <text>```Function `unionFn` is expecting the argument to be:

MyThing

But it is:

String```</text>
  </message>
  <message>
    <ts>2017-07-06T11:54:55.233764</ts>
    <user>U641LDZFU</user>
    <text>Am I missing something super obvious</text>
  </message>
  <message>
    <ts>2017-07-06T11:55:00.236472</ts>
    <user>U0LPMPL2U</user>
    <text>Line 58 `text (unionFn "String")`</text>
  </message>
  <message>
    <ts>2017-07-06T11:55:11.242713</ts>
    <user>U0LPMPL2U</user>
    <text>you're passing a string to `unionFn`</text>
  </message>
  <message>
    <ts>2017-07-06T11:55:19.247238</ts>
    <user>U0LPMPL2U</user>
    <text>you need to give it a `MyThing`</text>
  </message>
  <message>
    <ts>2017-07-06T11:55:30.254326</ts>
    <user>U0LPMPL2U</user>
    <text>in your case, `AString "String'`</text>
  </message>
  <message>
    <ts>2017-07-06T11:55:50.266455</ts>
    <user>U641LDZFU</user>
    <text>ahhhhhh</text>
  </message>
  <message>
    <ts>2017-07-06T11:56:27.288350</ts>
    <user>U41NK9BM4</user>
    <text>Maybe it helps to think about `AString` as a constructor which accepts a strign as argument and return a `MyThing`</text>
  </message>
  <message>
    <ts>2017-07-06T11:56:39.294858</ts>
    <user>U62R599PU</user>
    <text>For me this is just a hobby so I find it very exciting.  Luckily I started to move my JS to more of a functional approach so I at ;east have that to draw on.</text>
  </message>
  <message>
    <ts>2017-07-06T11:56:39.295287</ts>
    <user>U3SJEDR96</user>
    <text>yeah, you need to explicitly tag the values. `AString` is basically a value constructor: `AString : String -&amp;gt; MyThing`</text>
  </message>
  <message>
    <ts>2017-07-06T11:56:49.301053</ts>
    <user>U62R599PU</user>
    <text>;east = least</text>
  </message>
  <message>
    <ts>2017-07-06T11:58:03.345740</ts>
    <user>U641LDZFU</user>
    <text>so I can still do records ARecord {id = 1, thing="super"}</text>
  </message>
  <message>
    <ts>2017-07-06T11:58:27.359802</ts>
    <user>U641LDZFU</user>
    <text>or do I have to do them in the Arecord 1 "super" style?</text>
  </message>
  <message>
    <ts>2017-07-06T11:58:42.369053</ts>
    <user>U641LDZFU</user>
    <text>(I will try now)</text>
  </message>
  <message>
    <ts>2017-07-06T11:59:50.410960</ts>
    <user>U0LPMPL2U</user>
    <text>If you're adding onto the `MyThing` type you'll want `ARecord {id = 1, thing="super"}`</text>
  </message>
  <message>
    <ts>2017-07-06T12:00:51.451068</ts>
    <user>U41NK9BM4</user>
    <text>Same here, at least for now I'm writing Elm code for fun</text>
  </message>
  <message>
    <ts>2017-07-06T12:00:55.453162</ts>
    <user>U0LPMPL2U</user>
    <text>`Arecord 1 "super` can be used with a _type alias_ like `type alias Arecord = { id : Int, thing : String }`</text>
  </message>
  <message>
    <ts>2017-07-06T12:01:07.460374</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;http://faq.elm-community.org/#what-is-the-difference-between-type-and-type-alias&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T12:01:30.474479</ts>
    <user>U641LDZFU</user>
    <text>ah perfect!</text>
  </message>
  <message>
    <ts>2017-07-06T12:02:37.515679</ts>
    <user>U0LPMPL2U</user>
    <text>with the _type_, `ARecord` is wrapping the record. with the _type alias_ `Arecord` is the record.</text>
  </message>
  <message>
    <ts>2017-07-06T12:02:52.524320</ts>
    <user>U641LDZFU</user>
    <text>thank you so much!</text>
  </message>
  <message>
    <ts>2017-07-06T12:03:06.532547</ts>
    <user>U641LDZFU</user>
    <text>got it :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T13:07:14.585063</ts>
    <user>U5DJNFLUD</user>
    <text>Opinion time: If you get to the point where you need to split a data model off from `Main`, do you also tend to create an `update` function on your new Model and call that from `Main`?</text>
  </message>
  <message>
    <ts>2017-07-06T13:14:37.821524</ts>
    <user>U23SA861Y</user>
    <text>after a few thousand lines of elm, I haven't got that far.</text>
  </message>
  <message>
    <ts>2017-07-06T13:15:03.835139</ts>
    <user>U1P6FFJ64</user>
    <text>&lt;@U5DJNFLUD&gt; yes. You can have a look at this post, with a nice example of a large application to see how to split your code: &lt;https://dev.to/rtfeldman/tour-of-an-open-source-elm-spa&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T13:15:12.839778</ts>
    <user>U23SA861Y</user>
    <text>I got into alot of trouble thinking that I need new files after a hundred lines or so because of the stigma associated with OO programming</text>
  </message>
  <message>
    <ts>2017-07-06T13:17:14.903422</ts>
    <user>U1P6FFJ64</user>
    <text>About files life and how do they grow, Evan did a nice talk at Elm Europe about this topic, but the video is not published yet. It will be published at some point in this youtube channel: &lt;https://www.youtube.com/channel/UCT5HLUjjXdqUSUnpblFNOwQ/videos&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T13:17:28.910634</ts>
    <user>U5DJNFLUD</user>
    <text>Yeah! I've seen the talk</text>
  </message>
  <message>
    <ts>2017-07-06T13:23:58.115086</ts>
    <user>U5DJNFLUD</user>
    <text>I like the idea of doing that page-wise</text>
  </message>
  <message>
    <ts>2017-07-06T13:24:37.135708</ts>
    <user>U5DJNFLUD</user>
    <text>Pretty nice separation of concerns there</text>
  </message>
  <message>
    <ts>2017-07-06T13:38:12.568965</ts>
    <user>U3BTVEFQU</user>
    <text>&lt;@U3SJEDR96&gt; (cc &lt;@U0LPMPL2U&gt; &lt;@U2JA29EKF&gt;) I wasn't able to use your example :confused: How would you proceed with code like here: &lt;https://ellie-app.com/3GkfJWm6PM9a1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T13:39:01.594054</ts>
    <user>U0J1M0F32</user>
    <text>I still try to keep most everything on `Main` unless its very page specific and has the possibility of either growing exponentially or messing with data from another "page" in either naming convention or type.</text>
  </message>
  <message>
    <ts>2017-07-06T13:46:45.842192</ts>
    <user>U23SA861Y</user>
    <text>uh oh, seems like ellie is having issues</text>
  </message>
  <message>
    <ts>2017-07-06T13:48:01.882732</ts>
    <user>U3BTVEFQU</user>
    <text>it wasn't me!! :wink:</text>
  </message>
  <message>
    <ts>2017-07-06T13:48:38.902119</ts>
    <user>U2JA29EKF</user>
    <text>Sorry, won't be able to look tonight.</text>
  </message>
  <message>
    <ts>2017-07-06T13:48:39.902685</ts>
    <user>U3SJEDR96</user>
    <text>```
sendDelayedRequest : (WebData String -&amp;gt; msg) -&amp;gt; Cmd msg
sendDelayedRequest tagger =
    Process.sleep (200 * Time.millisecond)
        |&amp;gt; Task.andThen (\_ -&amp;gt; Http.toTask request)
        |&amp;gt; RemoteData.fromTask
        |&amp;gt; Task.perform tagger
````</text>
  </message>
  <message>
    <ts>2017-07-06T13:50:47.971299</ts>
    <user>U48AEBJQ3</user>
    <text>ream88: &lt;https://www.youtube.com/watch?v=NbosplYmAT0&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T13:51:32.995669</ts>
    <user>U23SA861Y</user>
    <text>umm, request isn't defined....</text>
  </message>
  <message>
    <ts>2017-07-06T13:52:01.011500</ts>
    <user>U3BTVEFQU</user>
    <text>&lt;@U3SJEDR96&gt; ok this does work. However I still don't get it.. do you know any good introduction into cmds vs tasks?</text>
  </message>
  <message>
    <ts>2017-07-06T13:52:01.011562</ts>
    <user>U0F7JPK36</user>
    <text>jonf: something weird happened with aws. looks okay now</text>
  </message>
  <message>
    <ts>2017-07-06T13:52:03.012331</ts>
    <user>U3SJEDR96</user>
    <text>In &lt;@U3BTVEFQU&gt;'s code, it is :wink:</text>
  </message>
  <message>
    <ts>2017-07-06T13:52:13.017770</ts>
    <user>U3BTVEFQU</user>
    <text>Btw &lt;@U3SJEDR96&gt; thx!!! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T13:53:08.047263</ts>
    <user>U3SJEDR96</user>
    <text>Though this probably makes more sense:</text>
  </message>
  <message>
    <ts>2017-07-06T13:53:47.068572</ts>
    <user>U3SJEDR96</user>
    <text>```
sendDelayedRequest : Time.Time -&amp;gt; Http.Request a -&amp;gt; (WebData a -&amp;gt; msg) -&amp;gt; Cmd msg
sendDelayedRequest delay request tagger =
    Process.sleep delay
        |&amp;gt; Task.andThen (\_ -&amp;gt; Http.toTask request)
        |&amp;gt; RemoteData.fromTask
        |&amp;gt; Task.perform tagger
```</text>
  </message>
  <message>
    <ts>2017-07-06T13:55:30.125952</ts>
    <user>U3BTVEFQU</user>
    <text>&lt;@U2JA29EKF&gt; no problemo, &lt;@U3SJEDR96&gt; fixed it for me.. However I'm still on the task to understand it properly :wink:</text>
  </message>
  <message>
    <ts>2017-07-06T14:00:39.301289</ts>
    <user>U3BTVEFQU</user>
    <text>ilias: &lt;https://github.com/ream88/delayed-requests&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T14:01:21.325219</ts>
    <user>U23SA861Y</user>
    <text>the cloud never goes down /s</text>
  </message>
  <message>
    <ts>2017-07-06T14:03:42.403537</ts>
    <user>U3BTVEFQU</user>
    <text>&lt;@U3SJEDR96&gt; thx again, you made my day :blush: I love this community</text>
  </message>
  <message>
    <ts>2017-07-06T14:04:04.415165</ts>
    <user>U3BTVEFQU</user>
    <text>here a :beer: or a :coffee: for you :wink:</text>
  </message>
  <message>
    <ts>2017-07-06T14:16:09.792640</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://gist.github.com/zwilias/a8acaf4c9ecf76d7c26faf46ac2f1e3f&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T14:29:06.202252</ts>
    <user>U5W50TZ6C</user>
    <text>I have a question about records:
Lets say I have a function that takes a record, like this:
```
getId : { file | id : String } -&amp;gt; String
getId file =
    file.id
```
I could pass in something like this: `{ id = "abcd", name = "hi.txt"}` because it's got an `id`. All good so far.

My question is: could I create an alias for the "file" in the function type signature? What would the syntax for that be?</text>
  </message>
  <message>
    <ts>2017-07-06T14:30:55.262975</ts>
    <user>U0J8D9M2P</user>
    <text>Yes you can</text>
  </message>
  <message>
    <ts>2017-07-06T14:31:10.270915</ts>
    <user>U0J8D9M2P</user>
    <text>It's called extensible record</text>
  </message>
  <message>
    <ts>2017-07-06T14:31:26.280082</ts>
    <user>U0J8D9M2P</user>
    <text>You can create a type alias for that</text>
  </message>
  <message>
    <ts>2017-07-06T14:32:54.329218</ts>
    <user>U0J8D9M2P</user>
    <text>type alias File file = { file | id : String }</text>
  </message>
  <message>
    <ts>2017-07-06T14:32:56.330118</ts>
    <user>U0LPMPL2U</user>
    <text>you can alias anything that would go in a function signature</text>
  </message>
  <message>
    <ts>2017-07-06T14:33:44.355975</ts>
    <user>U0LPMPL2U</user>
    <text>even functions e.g. `type alias Function a b  = (a -&amp;gt; b)`</text>
  </message>
  <message>
    <ts>2017-07-06T14:34:17.373928</ts>
    <user>U5W50TZ6C</user>
    <text>Awesome, thank you &lt;@U0J8D9M2P&gt;, that's the word I was looking for</text>
  </message>
  <message>
    <ts>2017-07-06T14:34:42.387521</ts>
    <user>U5W50TZ6C</user>
    <text>Wow, good to know &lt;@U0LPMPL2U&gt; !</text>
  </message>
  <message>
    <ts>2017-07-06T14:45:35.729842</ts>
    <user>U2DSBB76Y</user>
    <text>Is it possible to click on a button which expands out an input, and give that input focus?</text>
  </message>
  <message>
    <ts>2017-07-06T14:46:16.751729</ts>
    <user>U4WH8STNX</user>
    <text>&lt;@U2DSBB76Y&gt; as far as I know that's only possible with ports right now</text>
  </message>
  <message>
    <ts>2017-07-06T14:46:23.755275</ts>
    <user>U0LPMPL2U</user>
    <text>Yes. You want `Dom.focus`</text>
  </message>
  <message>
    <ts>2017-07-06T14:46:28.758122</ts>
    <user>U0LPMPL2U</user>
    <text>from `elm-lang/dom` package</text>
  </message>
  <message>
    <ts>2017-07-06T14:46:43.765843</ts>
    <user>U4WH8STNX</user>
    <text>Oh, I didn't know that one :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T14:46:49.768917</ts>
    <user>U0LPMPL2U</user>
    <text>it returns a `Task` that you can turn into a `Cmd`</text>
  </message>
  <message>
    <ts>2017-07-06T14:47:22.785182</ts>
    <user>U2DSBB76Y</user>
    <text>Awesome, thanks! :raised_hands:</text>
  </message>
  <message>
    <ts>2017-07-06T14:48:58.835874</ts>
    <user>U2DSBB76Y</user>
    <text>Btw, it did return a `Task` :smile:</text>
  </message>
  <message>
    <ts>2017-07-06T14:49:13.843881</ts>
    <user>U0LPMPL2U</user>
    <text>typically you don't care to do anything after the focus has happened so I typically just use a `Noop` message</text>
  </message>
  <message>
    <ts>2017-07-06T14:49:18.846735</ts>
    <user>U0LPMPL2U</user>
    <text>```
focus : Cmd Msg
focus =
    Dom.focus "search-box"
        |&amp;gt; Task.attempt (always Noop)
```</text>
  </message>
  <message>
    <ts>2017-07-06T14:49:35.855586</ts>
    <user>U0LPMPL2U</user>
    <text>where `"search-box"` is an id on the input</text>
  </message>
  <message>
    <ts>2017-07-06T14:50:32.885511</ts>
    <user>U0LPMPL2U</user>
    <text>It get's triggered in an `update` function like:

```
 OpenSelect -&amp;gt;
            ( { model | state = Open }, focus )
```</text>
  </message>
  <message>
    <ts>2017-07-06T14:53:02.963939</ts>
    <user>U2DSBB76Y</user>
    <text>Cool, I've never really used `always` before! Neat</text>
  </message>
  <message>
    <ts>2017-07-06T14:54:29.011192</ts>
    <user>U5GSY0G9J</user>
    <text>So i have this container that has a date picker in it and it is being built with a port. Right now i have to call the port everytime i switch the view in that container. Is there a better way to do this other than calling that port on all the buttons that switch to that view?</text>
  </message>
  <message>
    <ts>2017-07-06T14:59:29.173553</ts>
    <user>U0LPMPL2U</user>
    <text>The port calling would be done in the `update`, not on the buttons right?</text>
  </message>
  <message>
    <ts>2017-07-06T15:00:15.198820</ts>
    <user>U0LPMPL2U</user>
    <text>your probably have a Msg like:
```
TransitionTo page -&amp;gt; (transitionTo page model, triggerPort)
```</text>
  </message>
  <message>
    <ts>2017-07-06T15:32:29.153378</ts>
    <user>U37BS6J6N</user>
    <text>Ello all, what is the simplest way to work with design heavy views that need to be responsive. Working with bootstrap is pretty painful atm.
I"m debating trying elmx
&lt;https://github.com/pzavolinsky/elmx&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T15:33:58.195883</ts>
    <user>U1CE9DL9H</user>
    <text>what exactly is problematic?</text>
  </message>
  <message>
    <ts>2017-07-06T15:34:48.220341</ts>
    <user>U1CE9DL9H</user>
    <text>and how would another way of writing html help?, the default elm html is really nice once you have worked with it a little bit</text>
  </message>
  <message>
    <ts>2017-07-06T15:35:13.232532</ts>
    <user>U37BS6J6N</user>
    <text>I'm trying to translate existing bootstrap html into sections of Html</text>
  </message>
  <message>
    <ts>2017-07-06T15:35:53.252015</ts>
    <user>U1CE9DL9H</user>
    <text>are you familiar with &lt;http://elm-bootstrap.info/&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T15:36:46.276889</ts>
    <user>U37BS6J6N</user>
    <text>I played with it a bit</text>
  </message>
  <message>
    <ts>2017-07-06T15:37:17.291185</ts>
    <user>U37BS6J6N</user>
    <text>I've also attempted to use the Html2Elm but keep getting Text "" all over the place.</text>
  </message>
  <message>
    <ts>2017-07-06T15:38:50.335131</ts>
    <user>U37BS6J6N</user>
    <text>is elmx bad?</text>
  </message>
  <message>
    <ts>2017-07-06T15:39:07.343373</ts>
    <user>U37BS6J6N</user>
    <text>Or just not recommended?</text>
  </message>
  <message>
    <ts>2017-07-06T15:40:29.381716</ts>
    <user>U0CLDU8UB</user>
    <text>joelq: And even pieces of the signature!
```
type alias WebDataTask success =
    Decoder success -&amp;gt; Value -&amp;gt; String -&amp;gt; Task Never (WebData success)

-- ...

taskFnToCmdFn : WebDataTask success -&amp;gt; WebDataCmd success msg
```</text>
  </message>
  <message>
    <ts>2017-07-06T15:40:52.393475</ts>
    <user>U0CLDU8UB</user>
    <text>That's pretty involved though, I don't really recommend it :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T15:44:39.501505</ts>
    <user>U1CE9DL9H</user>
    <text>definitely not recommended, those empty text nodes are not harmful and you can easily delete them in your editor</text>
  </message>
  <message>
    <ts>2017-07-06T15:44:53.508343</ts>
    <user>U1CE9DL9H</user>
    <text>after you run the formatter, select all `, text ""` and delete</text>
  </message>
  <message>
    <ts>2017-07-06T15:54:44.795315</ts>
    <user>U37BS6J6N</user>
    <text>&lt;@U1CE9DL9H&gt; any idea why? It seems natural for folks coming from react. Fixing syntax errors for Text for huge chunks is definitely a sub optimal experience. Also it does break my code if I just try to leave them in.</text>
  </message>
  <message>
    <ts>2017-07-06T15:55:22.814025</ts>
    <user>U37BS6J6N</user>
    <text>Did elmx break a bunch ?</text>
  </message>
  <message>
    <ts>2017-07-06T15:55:28.817200</ts>
    <user>U1CE9DL9H</user>
    <text>because the html in elm is actually just elm, and so all the things that make elm nice apply to it</text>
  </message>
  <message>
    <ts>2017-07-06T15:55:40.823276</ts>
    <user>U1CE9DL9H</user>
    <text>type checking, not making typo's, formatting</text>
  </message>
  <message>
    <ts>2017-07-06T15:56:57.862173</ts>
    <user>U1CE9DL9H</user>
    <text>also the empty text nodes shouldn't do anything, what breaks?</text>
  </message>
  <message>
    <ts>2017-07-06T15:58:24.906487</ts>
    <user>U0CLDU8UB</user>
    <text>Okay that's very strange</text>
  </message>
  <message>
    <ts>2017-07-06T15:59:21.934923</ts>
    <user>U37BS6J6N</user>
    <text>AHHHH figured it out. I'm using vscode I had CRLF instead of LF</text>
  </message>
  <message>
    <ts>2017-07-06T15:59:27.937901</ts>
    <user>U23SA861Y</user>
    <text>yep,</text>
  </message>
  <message>
    <ts>2017-07-06T15:59:35.941615</ts>
    <user>U23SA861Y</user>
    <text>going to say carrige returns</text>
  </message>
  <message>
    <ts>2017-07-06T15:59:37.942739</ts>
    <user>U0CLDU8UB</user>
    <text>Oooohhhh</text>
  </message>
  <message>
    <ts>2017-07-06T15:59:59.953510</ts>
    <user>U23SA861Y</user>
    <text>remember, when give a choice for a standard use all three</text>
  </message>
  <message>
    <ts>2017-07-06T16:00:41.975782</ts>
    <user>U0CLDU8UB</user>
    <text>`\r\n\r`, for safety!</text>
  </message>
  <message>
    <ts>2017-07-06T16:01:07.989727</ts>
    <user>U37BS6J6N</user>
    <text>k cool~</text>
  </message>
  <message>
    <ts>2017-07-06T16:02:04.018958</ts>
    <user>U37BS6J6N</user>
    <text>For projects do you all use the inline css or include css via the index.js\ index.html ?</text>
  </message>
  <message>
    <ts>2017-07-06T16:02:52.042797</ts>
    <user>U0CLDU8UB</user>
    <text>I think most production apps use an external CSS file</text>
  </message>
  <message>
    <ts>2017-07-06T16:03:00.046911</ts>
    <user>U0CLDU8UB</user>
    <text>I know ours do</text>
  </message>
  <message>
    <ts>2017-07-06T16:04:06.079376</ts>
    <user>U0CLDU8UB</user>
    <text>For hobby things, it doesn't really matter -- except that inline CSS can't do pseudo-classes (`:hover`, `:active`..)</text>
  </message>
  <message>
    <ts>2017-07-06T16:37:47.055762</ts>
    <user>U65R5TES2</user>
    <text>Hello, my first Elm newbie error. Successfully installed elm but on trying out _elm-repl_ I got `elm-repl.exe: repl-temp-000.elm: openFile: permission denied (Permission denied)`. I'm in a Windows environment and using **Gitbash**</text>
  </message>
  <message>
    <ts>2017-07-06T16:39:07.094242</ts>
    <user>U0LPMPL2U</user>
    <text>It sounds like the terminal process doesn't have permissions to read a particular file/directory?</text>
  </message>
  <message>
    <ts>2017-07-06T16:39:30.105225</ts>
    <user>U0LPMPL2U</user>
    <text>I'm not familiar with the terminal on Windows</text>
  </message>
  <message>
    <ts>2017-07-06T16:39:35.107926</ts>
    <user>U5W50TZ6C</user>
    <text>I get that error sometimes too (also on Windows). Does the same thing happen if you use the elm-repl in Powershell?</text>
  </message>
  <message>
    <ts>2017-07-06T16:39:47.112959</ts>
    <user>U0LPMPL2U</user>
    <text>perhaps you need to run it as an admin?</text>
  </message>
  <message>
    <ts>2017-07-06T16:40:17.127978</ts>
    <user>U0CLDU8UB</user>
    <text>Hmm, or the repl doesn't have permissions to create a temp file in the directory?</text>
  </message>
  <message>
    <ts>2017-07-06T16:40:39.138560</ts>
    <user>U65R5TES2</user>
    <text>&lt;@U0LPMPL2U&gt; &lt;@U0CLDU8UB&gt; Looks like that. Can't even run Gitbash as Admin</text>
  </message>
  <message>
    <ts>2017-07-06T16:41:06.151572</ts>
    <user>U65R5TES2</user>
    <text>&lt;@U5W50TZ6C&gt; Will try Powershell</text>
  </message>
  <message>
    <ts>2017-07-06T16:43:19.215208</ts>
    <user>U65R5TES2</user>
    <text>Powershell works fine. Permissions issue with Gitbash I guess. Thanks &lt;@U5W50TZ6C&gt;, guys</text>
  </message>
  <message>
    <ts>2017-07-06T16:43:49.228772</ts>
    <user>U6531GSTW</user>
    <text>Hello, where can i post codes for someone to look over at?</text>
  </message>
  <message>
    <ts>2017-07-06T16:44:17.241616</ts>
    <user>U2FMN03NZ</user>
    <text>&lt;@U6531GSTW&gt; try &lt;http://ellie-app.com|ellie-app.com&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T16:45:57.288223</ts>
    <user>U6531GSTW</user>
    <text>a code that runs fine on &lt;http://elm-lang.org/try&gt; wont run &lt;http://ellie-app.com|ellie-app.com&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T16:46:29.303759</ts>
    <user>U6531GSTW</user>
    <text>it says I cannot find module 'Svg'.</text>
  </message>
  <message>
    <ts>2017-07-06T16:46:48.312447</ts>
    <user>U23SA861Y</user>
    <text>ahh, the add packages button on the left, you need to add it</text>
  </message>
  <message>
    <ts>2017-07-06T16:47:02.319802</ts>
    <user>U23SA861Y</user>
    <text>elm-lang/svg</text>
  </message>
  <message>
    <ts>2017-07-06T16:47:30.332621</ts>
    <user>U6531GSTW</user>
    <text>ah yes thanks</text>
  </message>
  <message>
    <ts>2017-07-06T16:47:33.334180</ts>
    <user>U6531GSTW</user>
    <text>i found that one</text>
  </message>
  <message>
    <ts>2017-07-06T16:47:42.338556</ts>
    <user>U6531GSTW</user>
    <text>but this I cannot find module 'Http'. gives me only community packages</text>
  </message>
  <message>
    <ts>2017-07-06T16:47:56.345199</ts>
    <user>U0LPMPL2U</user>
    <text>You want `elm-lang/http`</text>
  </message>
  <message>
    <ts>2017-07-06T16:51:30.446069</ts>
    <user>U6531GSTW</user>
    <text>This usage of variable text is ambiguous.
Maybe you want one of the following?

Html.text
Svg.text</text>
  </message>
  <message>
    <ts>2017-07-06T16:51:45.453408</ts>
    <user>U23SA861Y</user>
    <text>you can't import exposing(..) from both modules</text>
  </message>
  <message>
    <ts>2017-07-06T16:51:48.454671</ts>
    <user>U6531GSTW</user>
    <text>i am using it in a table such as "th [] [ text "09:00" ]"</text>
  </message>
  <message>
    <ts>2017-07-06T16:51:54.457502</ts>
    <user>U23SA861Y</user>
    <text>because they both have a text function</text>
  </message>
  <message>
    <ts>2017-07-06T16:52:04.462583</ts>
    <user>U6531GSTW</user>
    <text>yes, but are they any different?</text>
  </message>
  <message>
    <ts>2017-07-06T16:52:10.464863</ts>
    <user>U23SA861Y</user>
    <text>or you atleast need to be specific</text>
  </message>
  <message>
    <ts>2017-07-06T16:52:29.474150</ts>
    <user>U23SA861Y</user>
    <text>one is for an Svg node and one is for an Html node</text>
  </message>
  <message>
    <ts>2017-07-06T16:52:40.479507</ts>
    <user>U23SA861Y</user>
    <text>under the hood they actually wind up the same thing</text>
  </message>
  <message>
    <ts>2017-07-06T16:52:52.485210</ts>
    <user>U23SA861Y</user>
    <text>but elm can't tell that because their types are different</text>
  </message>
  <message>
    <ts>2017-07-06T16:53:05.491592</ts>
    <user>U6531GSTW</user>
    <text>ah okay, i just deleted svg exposing (..) and now everything works fine</text>
  </message>
  <message>
    <ts>2017-07-06T16:53:30.503938</ts>
    <user>U23SA861Y</user>
    <text>if what you intent to create is and Html table then yes, no need to import Svg if you aren't using it</text>
  </message>
  <message>
    <ts>2017-07-06T16:55:21.556931</ts>
    <user>U6531GSTW</user>
    <text>mmhm, this is the code that im working on &lt;https://ellie-app.com/3GpdHFztdsta1/0&gt; .. basically what im trying to add now is a json decoder that would read some "tasks" (type Aufgabe) and add them to the List Aufgabe (model.saved)</text>
  </message>
  <message>
    <ts>2017-07-06T16:55:46.569130</ts>
    <user>U6531GSTW</user>
    <text>however json.decoder.map doesnt go over than 8</text>
  </message>
  <message>
    <ts>2017-07-06T16:55:59.575151</ts>
    <user>U6531GSTW</user>
    <text>but i have 9-10 attributes in my task "type"</text>
  </message>
  <message>
    <ts>2017-07-06T16:56:18.584177</ts>
    <user>U6531GSTW</user>
    <text>what method/function would be better?</text>
  </message>
  <message>
    <ts>2017-07-06T16:56:29.589377</ts>
    <user>U0LPMPL2U</user>
    <text>`Json.Decode.Extra` has an `andMap` function that allows you to chain to any number of fields</text>
  </message>
  <message>
    <ts>2017-07-06T16:57:20.613288</ts>
    <user>U0LPMPL2U</user>
    <text>Alternately, take a look at the `Json.Decode.Pipeline` package</text>
  </message>
  <message>
    <ts>2017-07-06T16:58:45.653230</ts>
    <user>U23SA861Y</user>
    <text>something tells me some of this view code could be made.... smaller</text>
  </message>
  <message>
    <ts>2017-07-06T16:59:58.688525</ts>
    <user>U23SA861Y</user>
    <text>do you have some of the json code you are hacking away on?</text>
  </message>
  <message>
    <ts>2017-07-06T17:00:03.690953</ts>
    <user>U6531GSTW</user>
    <text>yes, ive been trying to make the table through functions. but i had trouble editing them later on.. especially because i created another list with times and tasks behind them</text>
  </message>
  <message>
    <ts>2017-07-06T17:00:28.703482</ts>
    <user>U6531GSTW</user>
    <text>&lt;https://jsonblob.com/07d6a4a4-6281-11e7-ae4c-49cc8622fb88&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T17:01:41.739953</ts>
    <user>U6531GSTW</user>
    <text>im also not entirely sure if this json file is right, if i want to decode it with json.decode.extra ..</text>
  </message>
  <message>
    <ts>2017-07-06T17:03:55.803229</ts>
    <user>U23SA861Y</user>
    <text>in what way would it be, not right</text>
  </message>
  <message>
    <ts>2017-07-06T17:04:06.808132</ts>
    <user>U23SA861Y</user>
    <text>the use of a list is a little strange</text>
  </message>
  <message>
    <ts>2017-07-06T17:04:13.811089</ts>
    <user>U0LPMPL2U</user>
    <text>Elm can decode any valid JSON :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T17:04:38.822930</ts>
    <user>U23SA861Y</user>
    <text>that sounds like a challenge</text>
  </message>
  <message>
    <ts>2017-07-06T17:04:56.830872</ts>
    <user>U5W50TZ6C</user>
    <text>~Arrays are not valid JSON~ ah no, don't mind me</text>
  </message>
  <message>
    <ts>2017-07-06T17:05:39.850802</ts>
    <user>U5W50TZ6C</user>
    <text>~Err... right?~</text>
  </message>
  <message>
    <ts>2017-07-06T17:06:30.873722</ts>
    <user>U0LPMPL2U</user>
    <text>they are</text>
  </message>
  <message>
    <ts>2017-07-06T17:06:43.879435</ts>
    <user>U0LPMPL2U</user>
    <text>and they can be decoded using `Json.Decode.list`</text>
  </message>
  <message>
    <ts>2017-07-06T17:07:20.896397</ts>
    <user>U23SA861Y</user>
    <text>yeah, arrays are fine. it's just the structure here seems a bit off. Implies you can have more than one task under "AufGabe1"</text>
  </message>
  <message>
    <ts>2017-07-06T17:07:23.897341</ts>
    <user>U6531GSTW</user>
    <text>so with the right coding this json could be decoded into tasks in my elm code?</text>
  </message>
  <message>
    <ts>2017-07-06T17:07:30.900410</ts>
    <user>U0LPMPL2U</user>
    <text>right</text>
  </message>
  <message>
    <ts>2017-07-06T17:07:41.905467</ts>
    <user>U6531GSTW</user>
    <text>im not sure because its a type alias and not some type shape etc.</text>
  </message>
  <message>
    <ts>2017-07-06T17:07:43.906327</ts>
    <user>U0LPMPL2U</user>
    <text>what are the types you are trying to decode into?</text>
  </message>
  <message>
    <ts>2017-07-06T17:07:59.913149</ts>
    <user>U6531GSTW</user>
    <text>only one type: Aufgabe</text>
  </message>
  <message>
    <ts>2017-07-06T17:08:23.923503</ts>
    <user>U6531GSTW</user>
    <text>with 8-9 attributes differentiating between strnig, int, date, (int, int)</text>
  </message>
  <message>
    <ts>2017-07-06T17:09:24.950064</ts>
    <user>U0LPMPL2U</user>
    <text>`"(12,0)"` is just string from JSON's perspective</text>
  </message>
  <message>
    <ts>2017-07-06T17:09:46.959630</ts>
    <user>U23SA861Y</user>
    <text>ahh yeah, that one would require a custom parser</text>
  </message>
  <message>
    <ts>2017-07-06T17:10:06.968745</ts>
    <user>U0LPMPL2U</user>
    <text>You might prefer to represent that as a list `[12, 0]` in the JSON (if you have control over the JSON)</text>
  </message>
  <message>
    <ts>2017-07-06T17:10:32.980416</ts>
    <user>U6531GSTW</user>
    <text>yeah, i can write the json file as i like</text>
  </message>
  <message>
    <ts>2017-07-06T17:10:41.984395</ts>
    <user>U6531GSTW</user>
    <text>at the moment im trying to work with (field "astart" string)</text>
  </message>
  <message>
    <ts>2017-07-06T17:10:53.989578</ts>
    <user>U0LPMPL2U</user>
    <text>Are the `Aufgabe1` and `Aufgabe2` keys significant?</text>
  </message>
  <message>
    <ts>2017-07-06T17:10:59.992306</ts>
    <user>U6531GSTW</user>
    <text>no</text>
  </message>
  <message>
    <ts>2017-07-06T17:11:18.001086</ts>
    <user>U0LPMPL2U</user>
    <text>or could the JSON return a single flat list of JSON objects?</text>
  </message>
  <message>
    <ts>2017-07-06T17:11:18.001145</ts>
    <user>U6531GSTW</user>
    <text>i just found out that it had to be different names, or uploading them would cause the latest one only to appear</text>
  </message>
  <message>
    <ts>2017-07-06T17:11:26.004491</ts>
    <user>U6531GSTW</user>
    <text>flat list of json objects</text>
  </message>
  <message>
    <ts>2017-07-06T17:11:30.006103</ts>
    <user>U6531GSTW</user>
    <text>would be actually okay</text>
  </message>
  <message>
    <ts>2017-07-06T17:11:41.011158</ts>
    <user>U23SA861Y</user>
    <text>either a flat list, or a record with a single key which contains the list</text>
  </message>
  <message>
    <ts>2017-07-06T17:15:48.117321</ts>
    <user>U6531GSTW</user>
    <text>a flat list? like only the values that i need? and can i create a new Aufgabe with the attributes set to the values?</text>
  </message>
  <message>
    <ts>2017-07-06T17:17:04.149754</ts>
    <user>U23SA861Y</user>
    <text>&lt;https://jsonblob.com/6ecd993e-6290-11e7-ae4c-e793fe90c432&gt; like this</text>
  </message>
  <message>
    <ts>2017-07-06T17:17:44.166916</ts>
    <user>U6531GSTW</user>
    <text>and with what function can i extract them out?</text>
  </message>
  <message>
    <ts>2017-07-06T17:17:57.172246</ts>
    <user>U23SA861Y</user>
    <text>or like this, &lt;https://jsonblob.com/8e4e7acc-6290-11e7-ae4c-970281df5d50&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T17:18:17.180794</ts>
    <user>U6531GSTW</user>
    <text>decode.extra?</text>
  </message>
  <message>
    <ts>2017-07-06T17:18:31.186786</ts>
    <user>U23SA861Y</user>
    <text>you compose decoders</text>
  </message>
  <message>
    <ts>2017-07-06T17:18:56.197364</ts>
    <user>U23SA861Y</user>
    <text>first you need to write a decoder for a single task and then compose it with something that will decode the entire structure</text>
  </message>
  <message>
    <ts>2017-07-06T17:21:04.251264</ts>
    <user>U23SA861Y</user>
    <text>&lt;https://github.com/elm-community/json-extra/blob/2.0.0/docs/andMap.md&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T17:24:02.324995</ts>
    <user>U23SA861Y</user>
    <text>also, use ints if you are representing numbers</text>
  </message>
  <message>
    <ts>2017-07-06T17:24:10.328358</ts>
    <user>U23SA861Y</user>
    <text>no need to encode those as strings</text>
  </message>
  <message>
    <ts>2017-07-06T17:24:52.346096</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U6531GSTW&gt; here's an implementation: &lt;https://ellie-app.com/3GpHMhsmNJza1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T17:25:50.370467</ts>
    <user>U6531GSTW</user>
    <text>okey thanks, ill try to work on my code based on these very helpful tips :smile:</text>
  </message>
  <message>
    <ts>2017-07-06T17:26:23.384155</ts>
    <user>U23SA861Y</user>
    <text>reddit is good, but some times you just need the back and forth :wink:</text>
  </message>
  <message>
    <ts>2017-07-06T17:42:22.762210</ts>
    <user>U6531GSTW</user>
    <text>so i implemented the codes and changed the json file.. also there are so new update msg's where i added the (field "Aufgaben (JD.List Aufgabe))</text>
  </message>
  <message>
    <ts>2017-07-06T17:42:28.764622</ts>
    <user>U6531GSTW</user>
    <text>and it looks like this &lt;https://ellie-app.com/3GpdHFztdsta1/2&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T17:43:16.782012</ts>
    <user>U6531GSTW</user>
    <text>i changed that specific JD.string to jd.date but then it says there is no jd.date, is there a json decoder for dates/days?</text>
  </message>
  <message>
    <ts>2017-07-06T17:45:33.833190</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U6531GSTW&gt; `Json.Decode.Extra` has some helpers around that &lt;http://package.elm-lang.org/packages/circuithub/elm-json-extra/latest/Json-Decode-Extra&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T17:45:44.837437</ts>
    <user>U0FP80EKB</user>
    <text>Oooh, but bad for throwing an exception</text>
  </message>
  <message>
    <ts>2017-07-06T17:46:19.850677</ts>
    <user>U0FP80EKB</user>
    <text>Personally, I'd write my own decoder for it. Do something like `JS.field "created_at" (Decode.map toDate JS.string)`</text>
  </message>
  <message>
    <ts>2017-07-06T17:46:26.853169</ts>
    <user>U0FP80EKB</user>
    <text>and then handle things appropriate in `toDate`</text>
  </message>
  <message>
    <ts>2017-07-06T17:46:30.854715</ts>
    <user>U0FP80EKB</user>
    <text>We've done something like this in our system</text>
  </message>
  <message>
    <ts>2017-07-06T17:46:49.861254</ts>
    <user>U6531GSTW</user>
    <text>developer of elm?</text>
  </message>
  <message>
    <ts>2017-07-06T17:47:18.872188</ts>
    <user>U23SA861Y</user>
    <text>there is an elm-community time package</text>
  </message>
  <message>
    <ts>2017-07-06T17:47:29.876184</ts>
    <user>U0FP80EKB</user>
    <text>Does that have better decoders?</text>
  </message>
  <message>
    <ts>2017-07-06T17:47:46.882598</ts>
    <user>U23SA861Y</user>
    <text>well it has convertions from string which can be composed with map</text>
  </message>
  <message>
    <ts>2017-07-06T17:48:03.888932</ts>
    <user>U6531GSTW</user>
    <text>im just really trying to get this code to work</text>
  </message>
  <message>
    <ts>2017-07-06T17:48:12.892398</ts>
    <user>U6531GSTW</user>
    <text>is there any easy way to make it work?</text>
  </message>
  <message>
    <ts>2017-07-06T17:48:47.905150</ts>
    <user>U6531GSTW</user>
    <text>the different types to decode are really getting to me</text>
  </message>
  <message>
    <ts>2017-07-06T17:49:20.917700</ts>
    <user>U23SA861Y</user>
    <text>so if you have a function which goes `foo : String-&amp;gt;Time` you can use `JD.string |&amp;gt; JD.map foo` to get a decoder of type time</text>
  </message>
  <message>
    <ts>2017-07-06T17:49:26.919872</ts>
    <user>U23SA861Y</user>
    <text>as it should be</text>
  </message>
  <message>
    <ts>2017-07-06T17:49:33.922061</ts>
    <user>U23SA861Y</user>
    <text>types are there to help you</text>
  </message>
  <message>
    <ts>2017-07-06T17:49:41.925166</ts>
    <user>U23SA861Y</user>
    <text>they tell you when things are incompatible</text>
  </message>
  <message>
    <ts>2017-07-06T17:50:15.937502</ts>
    <user>U23SA861Y</user>
    <text>that incompatibility exists whether you explicitly call it typing or not</text>
  </message>
  <message>
    <ts>2017-07-06T17:50:30.943301</ts>
    <user>U0FP80EKB</user>
    <text>Here's the decoder we wrote
```
dateDecoder : Decode.Decoder (Maybe Date)
dateDecoder =
    Decode.map dateFromString Decode.string


dateFromString : String -&amp;gt; Maybe Date
dateFromString =
    Date.fromString &amp;gt;&amp;gt; Result.toMaybe
```</text>
  </message>
  <message>
    <ts>2017-07-06T17:50:54.952051</ts>
    <user>U0FP80EKB</user>
    <text>Then used it like
```
        |&amp;gt; required "date" DateHelpers.dateDecoder
```</text>
  </message>
  <message>
    <ts>2017-07-06T17:51:39.968481</ts>
    <user>U23SA861Y</user>
    <text>heh, there is a date decoder in extra</text>
  </message>
  <message>
    <ts>2017-07-06T18:02:37.204897</ts>
    <user>U1CE9DL9H</user>
    <text>&lt;@U0FP80EKB&gt; why not let the decoder fail when no date can be parsed? so 
```
decode.string |&amp;gt; andThen (\str -&amp;gt; 
    case dateFromString str of
        Nothing -&amp;gt; Decode.fail "could not parse date"
        Just v -&amp;gt; Decode.succeed v
)
```
saves you from having to deal with maybes everywhere</text>
  </message>
  <message>
    <ts>2017-07-06T18:07:56.312279</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U1CE9DL9H&gt; Not totally sure, but I think we had cases where it wasn't a failure maybe</text>
  </message>
  <message>
    <ts>2017-07-06T18:08:10.316861</ts>
    <user>U6531GSTW</user>
    <text>i only partielly understand what has to be done.. is there anyway to make this code running&amp;gt; &lt;https://ellie-app.com/3GpdHFztdsta1/5&gt; ? im still stuck on these errors with different types..</text>
  </message>
  <message>
    <ts>2017-07-06T18:08:36.325330</ts>
    <user>U0FP80EKB</user>
    <text>oh, yeah, looking at other uses, there are cases where we want the Nothing to be there</text>
  </message>
  <message>
    <ts>2017-07-06T18:08:42.327037</ts>
    <user>U0FP80EKB</user>
    <text>Since it wasn't always set</text>
  </message>
  <message>
    <ts>2017-07-06T20:02:17.122946</ts>
    <user>U37BS6J6N</user>
    <text>Or should I take this to mean that my models are too complicated?</text>
  </message>
  <message>
    <ts>2017-07-06T20:04:35.152438</ts>
    <user>U37BS6J6N</user>
    <text>full code listing
&lt;https://ellie-app.com/3Gs79HdmykBa1/1&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T20:05:51.168595</ts>
    <user>U23SA861Y</user>
    <text>create recursive inits to help you</text>
  </message>
  <message>
    <ts>2017-07-06T20:06:11.173135</ts>
    <user>U23SA861Y</user>
    <text>err, both of those are lists so yeah</text>
  </message>
  <message>
    <ts>2017-07-06T20:06:13.173480</ts>
    <user>U23SA861Y</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-06T20:06:50.181284</ts>
    <user>U23SA861Y</user>
    <text>ahh no your model is ChatModel</text>
  </message>
  <message>
    <ts>2017-07-06T20:07:06.184485</ts>
    <user>U23SA861Y</user>
    <text>yeah you should have a seperate init for each of those types and then compose them togoether</text>
  </message>
  <message>
    <ts>2017-07-06T20:07:21.187819</ts>
    <user>U23SA861Y</user>
    <text>There are no `nil` types in elm</text>
  </message>
  <message>
    <ts>2017-07-06T20:08:00.195732</ts>
    <user>U37BS6J6N</user>
    <text>Are you seeing a "nil"? somewhere?</text>
  </message>
  <message>
    <ts>2017-07-06T20:08:13.198524</ts>
    <user>U37BS6J6N</user>
    <text>OH the MeetingInfo!</text>
  </message>
  <message>
    <ts>2017-07-06T20:08:14.198878</ts>
    <user>U23SA861Y</user>
    <text>no, I mean there is not default constructur</text>
  </message>
  <message>
    <ts>2017-07-06T20:08:41.204326</ts>
    <user>U23SA861Y</user>
    <text>so break it up into a few different inits</text>
  </message>
  <message>
    <ts>2017-07-06T20:09:52.219393</ts>
    <user>U6574P2MB</user>
    <text>hello</text>
  </message>
  <message>
    <ts>2017-07-06T20:10:16.224574</ts>
    <user>U37BS6J6N</user>
    <text>&lt;@U23SA861Y&gt; k thanks~ I'll give it a try</text>
  </message>
  <message>
    <ts>2017-07-06T20:11:04.234852</ts>
    <user>U23SA861Y</user>
    <text>if you have things like 
```
initUser: User
initUser = ...
```
it will make it easier to see where the types are breaking down</text>
  </message>
  <message>
    <ts>2017-07-06T20:11:29.240131</ts>
    <user>U23SA861Y</user>
    <text>hello &lt;@U6574P2MB&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T20:29:15.454442</ts>
    <user>U64FYS317</user>
    <text>Is there a way to define type alias B which is a superset/subset of type alias A, but without explicitly copying all the same field annotations from  A?</text>
  </message>
  <message>
    <ts>2017-07-06T20:31:06.476991</ts>
    <user>U23SA861Y</user>
    <text>hmm, I believe not</text>
  </message>
  <message>
    <ts>2017-07-06T20:31:15.478527</ts>
    <user>U23SA861Y</user>
    <text>there is an issue for this let me dig it up</text>
  </message>
  <message>
    <ts>2017-07-06T20:32:05.488322</ts>
    <user>U23SA861Y</user>
    <text>&lt;https://github.com/elm-lang/elm-lang.org/issues/529&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T20:33:06.500080</ts>
    <user>U23SA861Y</user>
    <text>you can however have a method accept a partial record</text>
  </message>
  <message>
    <ts>2017-07-06T20:34:19.514047</ts>
    <user>U64FYS317</user>
    <text>hrm. Thanks for the tip. wouldn't you just have to redefine a `PartialType`, though?</text>
  </message>
  <message>
    <ts>2017-07-06T20:34:58.521469</ts>
    <user>U23SA861Y</user>
    <text>no</text>
  </message>
  <message>
    <ts>2017-07-06T20:35:00.521904</ts>
    <user>U23SA861Y</user>
    <text>one sec</text>
  </message>
  <message>
    <ts>2017-07-06T20:35:14.524694</ts>
    <user>U64FYS317</user>
    <text>I appreciate you digging up this stuff for me :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-06T20:37:27.549257</ts>
    <user>U23SA861Y</user>
    <text>you can do stuff like this
&lt;https://ellie-app.com/3GsCRNFtvZfa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T20:46:40.651857</ts>
    <user>U64FYS317</user>
    <text>ah &lt;@U23SA861Y&gt; I found the section on extensible records: &lt;http://elm-lang.org/docs/records#pattern-matching&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T20:46:46.652889</ts>
    <user>U64FYS317</user>
    <text>thanks for your example, too</text>
  </message>
  <message>
    <ts>2017-07-06T21:13:19.950292</ts>
    <user>U5AEH3L05</user>
    <text>Let's say I'm making an SPA, and the main route is &lt;http://www.mysite.com|www.mysite.com&gt;; I'd like for &lt;http://www.mysite.com/projects|www.mysite.com/projects&gt; to open the main page and then parse the URL in Elm. How do I make sure the main page is loaded?</text>
  </message>
  <message>
    <ts>2017-07-06T21:13:34.952932</ts>
    <user>U5AEH3L05</user>
    <text>I know if I have something like &lt;http://www.mysite.com/#/projects|www.mysite.com/#/projects&gt;, it'll just load the main page. Is it possible without that hash?</text>
  </message>
  <message>
    <ts>2017-07-06T21:21:04.032889</ts>
    <user>U64FYS317</user>
    <text>I think theres a navigator package that addresses that, although I haven't used it.</text>
  </message>
  <message>
    <ts>2017-07-06T21:22:08.044427</ts>
    <user>U64FYS317</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/navigation/latest&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T21:22:13.045164</ts>
    <user>U5AEH3L05</user>
    <text>I'm using the navigation package, I'm just not sure where I need to configure stuff so that I get served the right page</text>
  </message>
  <message>
    <ts>2017-07-06T21:22:22.046783</ts>
    <user>U5AEH3L05</user>
    <text>I think it might be server-side?</text>
  </message>
  <message>
    <ts>2017-07-06T21:22:24.047161</ts>
    <user>U64FYS317</user>
    <text>Ah, can't be of much help then :smile:</text>
  </message>
  <message>
    <ts>2017-07-06T21:23:07.054633</ts>
    <user>U64FYS317</user>
    <text>Well, assuming you want to handle initial loads to a subroute, you'll need your server to serve your assets on a multitude of routes, I think</text>
  </message>
  <message>
    <ts>2017-07-06T21:24:51.073533</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U5AEH3L05&gt; working on that myself, but trying serverless routing. If i get it all connected, I'll be happy to share.</text>
  </message>
  <message>
    <ts>2017-07-06T21:27:03.097248</ts>
    <user>U64FYS317</user>
    <text>Given I haven't tried it, but I'd assume that you could even serve  your main.html from any page</text>
  </message>
  <message>
    <ts>2017-07-06T21:27:24.101070</ts>
    <user>U64FYS317</user>
    <text>as long as the client then handles initial url checking as well</text>
  </message>
  <message>
    <ts>2017-07-06T22:21:57.687930</ts>
    <user>U5AEH3L05</user>
    <text>&lt;@U2SR9DL7Q&gt; Oh-ho! Any leads I should look into as well?</text>
  </message>
  <message>
    <ts>2017-07-06T22:34:00.812309</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U5AEH3L05&gt; I'm trying to follow richard feldman's SPA tutorial, where he combines the Navigation package and the routing package to serve up "pages". It's one html file though... the views are just being swapped but it all looks like multiple pages to the user.</text>
  </message>
  <message>
    <ts>2017-07-06T22:59:55.066018</ts>
    <user>U5AEH3L05</user>
    <text>&lt;@U2SR9DL7Q&gt; Yeah, he's using the parseHash function from the UrlParser; the URLs are all served as &lt;http://www.mysite.com/#/route|www.mysite.com/#/route&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T23:00:20.071020</ts>
    <user>U5AEH3L05</user>
    <text>The browser interprets that accessing the address &lt;http://www.mysite.com|www.mysite.com&gt; with the "hash" of `#/route`</text>
  </message>
  <message>
    <ts>2017-07-06T23:03:07.099483</ts>
    <user>U2SR9DL7Q</user>
    <text>But you're looking for something with no hash correct? &lt;@U5AEH3L05&gt;</text>
  </message>
  <message>
    <ts>2017-07-06T23:10:04.165167</ts>
    <user>U5AEH3L05</user>
    <text>&lt;@U2SR9DL7Q&gt; yep!</text>
  </message>
  <message>
    <ts>2017-07-07T01:49:51.601229</ts>
    <user>U0CJA7BLJ</user>
    <text>&lt;@U5AEH3L05&gt; yes you can do this with Navigation and UrlParser. You need to have your backend serve the same html regardless of the path. Then do the url parsing in Elm to show the correct view.</text>
  </message>
  <message>
    <ts>2017-07-07T01:50:30.607207</ts>
    <user>U0CJA7BLJ</user>
    <text>Here is an example &lt;https://github.com/sporto/elm-navigation-pushstate&gt;</text>
  </message>
  <message>
    <ts>2017-07-07T03:02:42.461838</ts>
    <user>U3FFQ6DE3</user>
    <text>hi all, which is the correct MDL package to use?  debois/elm-mdl or MichaelCombs28/elm-mdl ?</text>
  </message>
  <message>
    <ts>2017-07-07T03:02:56.465318</ts>
    <user>U3FFQ6DE3</user>
    <text>are they both current?</text>
  </message>
  <message>
    <ts>2017-07-07T03:12:39.606012</ts>
    <user>U4SM7ECAG</user>
    <text>debois' is the original one isn't it?</text>
  </message>
  <message>
    <ts>2017-07-07T03:14:19.631411</ts>
    <user>U4SM7ECAG</user>
    <text>I've checked their respective github repos and yes, debois is the original one and the most "current" one.</text>
  </message>
  <message>
    <ts>2017-07-07T03:21:27.743673</ts>
    <user>U41NK9BM4</user>
    <text>I'm not a fan of MDL but heck, the Elm port looks fantastic :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-07T03:23:44.778838</ts>
    <user>U600K7WE4</user>
    <text>It looks great, are there any other good ui packages for Elm?</text>
  </message>
  <message>
    <ts>2017-07-07T03:25:33.807387</ts>
    <user>U41NK9BM4</user>
    <text>I know about Elm Bootstrap  and Elm UI</text>
  </message>
  <message>
    <ts>2017-07-07T03:26:02.815419</ts>
    <user>U3SJEDR96</user>
    <text>Sure; elm-bootstrap is very well done. I'd argue that style-elements also counts as a UI framework, and to some degree, elm-tachyons is also relevant</text>
  </message>
  <message>
    <ts>2017-07-07T03:28:13.852310</ts>
    <user>U41NK9BM4</user>
    <text>I would add that `style-elements` is the most progressive-thinking of the bunch. It tends to abstract layout further</text>
  </message>
  <message>
    <ts>2017-07-07T03:29:00.865585</ts>
    <user>U62Q5C999</user>
    <text>Hey I've just started playing with Elm . I wanted to create generic function that will wrap label and input in single div. I wonder since except for my function specific arguments there are plenty of html attributes to apply for input and label. Is there anything like object spread operator in JavaScript so I could group those html attributes in some object and pass everything that comes to input? </text>
  </message>
  <message>
    <ts>2017-07-07T03:30:31.891941</ts>
    <user>U3SJEDR96</user>
    <text>You can have your function take lists for those</text>
  </message>
  <message>
    <ts>2017-07-07T03:30:51.897762</ts>
    <user>U3SJEDR96</user>
    <text>which is basically what the `button` and ` label` function do, too :wink:</text>
  </message>
  <message>
    <ts>2017-07-07T03:31:18.905472</ts>
    <user>U62Q5C999</user>
    <text>Ah will search through, thanks !</text>
  </message>
  <message>
    <ts>2017-07-07T03:39:37.043722</ts>
    <user>U5J0H2NS2</user>
    <text>&lt;@U5AEH3L05&gt; Maybe this is what you are looking for? &lt;https://medium.com/elm-shorts/choosing-the-right-elm-spa-architecture-d6e8275f6899&gt;</text>
  </message>
  <message>
    <ts>2017-07-07T03:44:56.132549</ts>
    <user>U4SM7ECAG</user>
    <text>&lt;@U600K7WE4&gt; I like using BulmaCSS but I'm not super found of the port (although as it is pure css you can choose to use the port that enforce types on the css classes or to deal with it by hand which is quite easy to do as well )</text>
  </message>
  <message>
    <ts>2017-07-07T03:46:35.161149</ts>
    <user>U600K7WE4</user>
    <text>That looks nice as well, only using css can be practical as well</text>
  </message>
  <message>
    <ts>2017-07-07T03:46:54.166402</ts>
    <user>U600K7WE4</user>
    <text>might be easier to integrate into existing apps</text>
  </message>
  <message>
    <ts>2017-07-07T06:51:32.722059</ts>
    <user>U4SM7ECAG</user>
    <text>yes, it's quite nice to have clear modals and stuff that do *not* have some options to close them automatically via javascript or something else and to be sure that doing it with elm won't interfere with the js part of the library</text>
  </message>
  <message>
    <ts>2017-07-07T07:01:28.886681</ts>
    <user>U600K7WE4</user>
    <text>Thats a very good point</text>
  </message>
  <message>
    <ts>2017-07-07T08:14:57.093595</ts>
    <user>U653NCEEA</user>
    <text>Hi there, 
Just begun with Elm and i`m very much delighted! 
However there´s some small (?) thing i can`t get to work, been searching the internetz for a couple of days without finding any answers. 
The problem, i´m using Navigation and UrlParser, everything works as expected but when using Time Traveling Debugger the browser address does not change, is there some way to "sync" browser url with the application state when using debugger? 
Thanks in advance!</text>
  </message>
  <message>
    <ts>2017-07-07T08:21:57.224358</ts>
    <user>U3SJEDR96</user>
    <text>If your update involves `newLocation` or `modifyLocation`, that should be reflected in the url bar; however, if it's through clicking a link (which results in a JS event which results in your `update` being called) I'm afraid that's not possible: your app reacts to changing the URL, rather than being the one who changes the url in the first place.. To put it differently, the browsers's URL isn't part of your `model`, but rather your model may react to changes to that external state</text>
  </message>
  <message>
    <ts>2017-07-07T08:22:38.237725</ts>
    <user>U3SJEDR96</user>
    <text>Long story short; I don't think that can work without hacking in special support for the `Navigation` package into the debugger, and even then it would be of limited use, methinks</text>
  </message>
  <message>
    <ts>2017-07-07T08:25:05.284196</ts>
    <user>U653NCEEA</user>
    <text>Hi &lt;@U3SJEDR96&gt; and thank you for your reply. 
Well i`m using links but keeping current route in my model, no `newUrl` or `modifyUrl`. 
Thats to bad, would be nice to actually se the url change when moving backward/forward in time.
So if using, say, `onClick` this might be working?</text>
  </message>
  <message>
    <ts>2017-07-07T08:27:11.324094</ts>
    <user>U3SJEDR96</user>
    <text>thinking about this some more, I don't think even that would work. When you select a state in the debugger, your app is rendered using that state. Everything that's not actually part of that state, like the url bar, or the currently focused element, or input in an uncontrolled field, won't be changed..</text>
  </message>
  <message>
    <ts>2017-07-07T08:27:51.337032</ts>
    <user>U3SJEDR96</user>
    <text>Since the url in the browser can only be changed by calling (side-effectful) functions, I'm not sure how that would work</text>
  </message>
  <message>
    <ts>2017-07-07T08:28:02.340670</ts>
    <user>U3SJEDR96</user>
    <text>It's interesting to think about</text>
  </message>
  <message>
    <ts>2017-07-07T08:29:07.362190</ts>
    <user>U653NCEEA</user>
    <text>Seems fair! 
But you could send a message which manipulate browser url using `newUrl`/`modifyUrl`?</text>
  </message>
  <message>
    <ts>2017-07-07T08:30:05.381712</ts>
    <user>U653NCEEA</user>
    <text>I wonder, i wonder… 
Now i know that this is not something currently supported i can stop Googeling :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-07T08:30:26.389020</ts>
    <user>U5WS7CJLV</user>
    <text>question about annotations and aliasing</text>
  </message>
  <message>
    <ts>2017-07-07T08:30:35.392093</ts>
    <user>U5WS7CJLV</user>
    <text>say I have a higher order function</text>
  </message>
  <message>
    <ts>2017-07-07T08:31:00.400562</ts>
    <user>U5WS7CJLV</user>
    <text>one of the args it takes has the same signature as List.filter</text>
  </message>
  <message>
    <ts>2017-07-07T08:31:21.407876</ts>
    <user>U5WS7CJLV</user>
    <text>is there a way to alias the annotation of List.filter so that the annotation for my higher order function is not quite so long?</text>
  </message>
  <message>
    <ts>2017-07-07T08:32:08.422955</ts>
    <user>U653NCEEA</user>
    <text>Well, thanks a lot &lt;@U3SJEDR96&gt;, will keep trying to find some solution :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-07T08:34:03.461174</ts>
    <user>U3RDE7LDP</user>
    <text>&lt;@U5WS7CJLV&gt; You can define type aliases for any existing types</text>
  </message>
  <message>
    <ts>2017-07-07T08:34:05.461669</ts>
    <user>U3RDE7LDP</user>
    <text>&lt;http://elm-lang.org/docs/syntax#type-aliases&gt;</text>
  </message>
  <message>
    <ts>2017-07-07T08:35:04.480895</ts>
    <user>U3RDE7LDP</user>
    <text>(including functions)</text>
  </message>
  <message>
    <ts>2017-07-07T08:35:23.487453</ts>
    <user>U3RDE7LDP</user>
    <text>What does the type signature of your function look like just now?</text>
  </message>
  <message>
    <ts>2017-07-07T08:35:50.496477</ts>
    <user>U5WS7CJLV</user>
    <text>increaseQuantityBy : Int -&amp;gt; (OrderItem -&amp;gt; Bool) -&amp;gt; ItemizedPurchaseOrder -&amp;gt; ItemizedPurchaseOrder) -&amp;gt; ItemizedPurchaseOrder</text>
  </message>
  <message>
    <ts>2017-07-07T08:36:11.503466</ts>
    <user>U5WS7CJLV</user>
    <text>I'm still hammering this one out, and I think it can be simpler.</text>
  </message>
  <message>
    <ts>2017-07-07T08:36:27.508617</ts>
    <user>U3RDE7LDP</user>
    <text>I think there's a bracket missing there somewhere</text>
  </message>
  <message>
    <ts>2017-07-07T08:37:11.523077</ts>
    <user>U5WS7CJLV</user>
    <text>yep, a left paren</text>
  </message>
  <message>
    <ts>2017-07-07T08:37:15.524168</ts>
    <user>U3RDE7LDP</user>
    <text>I would just use the full signature for now though</text>
  </message>
  <message>
    <ts>2017-07-07T08:37:32.530334</ts>
    <user>U3RDE7LDP</user>
    <text>Worry about refactoring it later if you really need to</text>
  </message>
  <message>
    <ts>2017-07-07T08:37:37.531956</ts>
    <user>U5WS7CJLV</user>
    <text>right</text>
  </message>
  <message>
    <ts>2017-07-07T08:37:46.534976</ts>
    <user>U5WS7CJLV</user>
    <text>asking more out of curiosity than immediate need</text>
  </message>
  <message>
    <ts>2017-07-07T08:37:59.539647</ts>
    <user>U5WS7CJLV</user>
    <text>I didn't see examples in the docs of functions getting aliased, so I wondered</text>
  </message>
  <message>
    <ts>2017-07-07T08:38:15.544891</ts>
    <user>U3RDE7LDP</user>
    <text>You can have `type alias MyFunction = A -&amp;gt; B -&amp;gt; C`</text>
  </message>
  <message>
    <ts>2017-07-07T08:38:16.545164</ts>
    <user>U5WS7CJLV</user>
    <text>but it makes sense that you can as functions are first-class-kinda objects in functional languages</text>
  </message>
  <message>
    <ts>2017-07-07T08:38:37.551999</ts>
    <user>U5WS7CJLV</user>
    <text>thanks, bro!</text>
  </message>
  <message>
    <ts>2017-07-07T08:38:40.552905</ts>
    <user>U3RDE7LDP</user>
    <text>At least I think you can.</text>
  </message>
  <message>
    <ts>2017-07-07T08:39:00.559447</ts>
    <user>U5WS7CJLV</user>
    <text>I shall find out using science shortly!</text>
  </message>
  <message>
    <ts>2017-07-07T08:39:09.562419</ts>
    <user>U3RDE7LDP</user>
    <text>yes, that works fine</text>
  </message>
  <message>
    <ts>2017-07-07T08:39:48.575553</ts>
    <user>U5WS7CJLV</user>
    <text>cool.  Thanks again!  It is super awesome that Elm has a Slack channel.  And that there a bunch of smart and helpful people on here.</text>
  </message>
  <message>
    <ts>2017-07-07T08:47:11.729520</ts>
    <user>U5H8JJP24</user>
    <text>Hi, I'm stuck with a decoder that should decode an array [ 9.34958, 48.87733, 1000 ] to a Point, where index 2 (elevation) is optional.

```
type alias Point =
    { elev : Maybe Float, lat : Float, lng : Float }

```
Therefore I created following decoder:
```
fromArrayDecoder : Decoder Point
fromArrayDecoder =
    map3 Point
        (index 2 Decode.float |&amp;gt; Decode.maybe)
        (index 1 Decode.float)
        (index 0 Decode.float)

```

My problem now is, that this decoder succeeds when index 2 is missing or is of any type like string etc. But I want it only to succeed if elev is missing, not if it has the wrong type. Is there any way of accomplishing this?</text>
  </message>
  <message>
    <ts>2017-07-07T08:55:49.918099</ts>
    <user>U1CE9DL9H</user>
    <text>&lt;@U5H8JJP24&gt; create a decoder for the two valid cases, then combine them with `Decode.oneOf`</text>
  </message>
  <message>
    <ts>2017-07-07T08:56:43.938463</ts>
    <user>U5H8JJP24</user>
    <text>nice idea &lt;@U1CE9DL9H&gt; thx. I will give it a try</text>
  </message>
  <message>
    <ts>2017-07-07T10:02:59.800922</ts>
    <user>U65AGCFC3</user>
    <text>hello hello</text>
  </message>
  <message>
    <ts>2017-07-07T10:47:36.257068</ts>
    <user>U4RR7KX45</user>
    <text>hey everyone. I know I can use `::` to add an element to the front of the list, but to add it to the end of the list, should I just use concat?</text>
  </message>
  <message>
    <ts>2017-07-07T10:49:47.330841</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U4RR7KX45&gt; `List.append myList [newElement]`</text>
  </message>
  <message>
    <ts>2017-07-07T10:50:15.346244</ts>
    <user>U4RR7KX45</user>
    <text>perfect, thank you &lt;@U48AEBJQ3&gt;</text>
  </message>
  <message>
    <ts>2017-07-07T10:51:04.373899</ts>
    <user>U48AEBJQ3</user>
    <text>The `++` does the same thing (although it is overloaded to work with strings as well)</text>
  </message>
  <message>
    <ts>2017-07-07T10:51:38.393049</ts>
    <user>U4RR7KX45</user>
    <text>I tried that too. oh I was actually trying it without placing the element in the list</text>
  </message>
  <message>
    <ts>2017-07-07T10:52:24.419045</ts>
    <user>U4RR7KX45</user>
    <text>oh well</text>
  </message>
  <message>
    <ts>2017-07-07T10:52:37.426022</ts>
    <user>U4RR7KX45</user>
    <text>#noobslife</text>
  </message>
  <message>
    <ts>2017-07-07T11:37:44.948911</ts>
    <user>U1CHKCKBR</user>
    <text>hey, any of you played with touch screens ? i have to create a kiosk app and i should recreate a virtual keyboard</text>
  </message>
  <message>
    <ts>2017-07-07T11:44:34.170536</ts>
    <user>U1P6FFJ64</user>
    <text>Should not be a problem, &lt;@U1CHKCKBR&gt;. In the app we develop we support touch screens without too many problems.</text>
  </message>
  <message>
    <ts>2017-07-07T11:47:35.271033</ts>
    <user>U4SM7ECAG</user>
    <text>I saw there is even a library that helps with gesture support in Elm (unfortunately I'm working with elm 0.16 in my day job so I haven't tried it yet, and I reverted to `hammer.js` and ports)</text>
  </message>
  <message>
    <ts>2017-07-07T11:52:27.431543</ts>
    <user>U1CHKCKBR</user>
    <text>i don't know how i should orchestrate things; having a button -&amp;gt; then capture press/touch event -&amp;gt; then sub-circuit to ‘Z'  key press event  =&amp;gt; output the result to input contexts</text>
  </message>
  <message>
    <ts>2017-07-07T11:53:08.454009</ts>
    <user>U1CHKCKBR</user>
    <text>is this a proper way of doing things, or i overthinking it?</text>
  </message>
  <message>
    <ts>2017-07-07T12:02:28.759074</ts>
    <user>U5GCK308N</user>
    <text>=</text>
  </message>
  <message>
    <ts>2017-07-07T12:02:32.761561</ts>
    <user>U5GCK308N</user>
    <text>oops lol</text>
  </message>
  <message>
    <ts>2017-07-07T12:09:18.971531</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U1CHKCKBR&gt; Is this what you are thinking? &lt;https://ellie-app.com/3GKKgFsXjbga1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-07T12:09:44.984405</ts>
    <user>U0J1M0F32</user>
    <text>&lt;@U1CHKCKBR&gt; Thinking through it right now. I think I would have buttons that fire events with their corresponding key and handle it that way.

`div [ onClick (KeyPressed "C")] [text "C"]` etc.</text>
  </message>
  <message>
    <ts>2017-07-07T12:10:07.996198</ts>
    <user>U0J1M0F32</user>
    <text>Yah, what &lt;@U48AEBJQ3&gt; suggests.</text>
  </message>
  <message>
    <ts>2017-07-07T12:12:57.082835</ts>
    <user>U1CHKCKBR</user>
    <text>&lt;@U48AEBJQ3&gt; yeah, sort of</text>
  </message>
  <message>
    <ts>2017-07-07T12:14:50.138816</ts>
    <user>U1CHKCKBR</user>
    <text>thank you, it a good starting point</text>
  </message>
  <message>
    <ts>2017-07-07T12:47:54.112456</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U1CHKCKBR&gt; I got interested and tried something. It might be useful. &lt;https://ellie-app.com/3GKKgFsXjbga1/1&gt;</text>
  </message>
  <message>
    <ts>2017-07-07T12:55:24.330554</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U48AEBJQ3&gt; thanks for posting the example, it is pretty cool</text>
  </message>
  <message>
    <ts>2017-07-07T12:57:32.395128</ts>
    <user>U5ABF3BH7</user>
    <text>Hi! I have a quick question, If I have```import FirstCall exposing (Model)``` but in my view, I want to rename Model FirstCallModel (because I already have something called Model in my view). Is there a straightforward way to do that?</text>
  </message>
  <message>
    <ts>2017-07-07T13:01:29.518327</ts>
    <user>U5ABF3BH7</user>
    <text>in other words I want to rename a type a import, is that possible?</text>
  </message>
  <message>
    <ts>2017-07-07T13:11:53.823208</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5ABF3BH7&gt; I don't think so? I think your better bet would be to not expose `Model` and instead use `FirstCall.Model` or you can `import FirstCall as FC` and then go `FC.Model`</text>
  </message>
  <message>
    <ts>2017-07-07T13:13:02.856685</ts>
    <user>U5ABF3BH7</user>
    <text>I had done that but I am getting a dependency, and I need each one for the other one. I guess I need to re-structure differently</text>
  </message>
  <message>
    <ts>2017-07-07T13:13:13.861524</ts>
    <user>U5ABF3BH7</user>
    <text>```Your dependencies form a cycle:

  ┌─────┐
  │    Views.Pages.FirstCall
  │     ↓
  │    Views.Sections.ArrangementMeeting
  └─────┘
```</text>
  </message>
  <message>
    <ts>2017-07-07T13:15:06.916092</ts>
    <user>U48AEBJQ3</user>
    <text>Yeah, dependency cycles are occasionally annoying. The easiest way is to make an extra module which doesn't depend on either. However, I find that the emergence of such a cycle is often a sign that I might want to re-think what I'm doing more fundamentally.</text>
  </message>
  <message>
    <ts>2017-07-07T13:15:40.932480</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5H8JJP24&gt; Here is another possibility: &lt;https://ellie-app.com/3GLHPTQgz7da1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-07T13:21:09.089636</ts>
    <user>U5H8JJP24</user>
    <text>&lt;@U48AEBJQ3&gt; Thank you so much. That looks like a really nice approach. This will take me some time for understanding it xD</text>
  </message>
  <message>
    <ts>2017-07-07T13:26:25.243112</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5H8JJP24&gt; Well, if you have any questions about it, I'm happy to answer.</text>
  </message>
  <message>
    <ts>2017-07-07T13:34:09.476081</ts>
    <user>U23SA861Y</user>
    <text>mm yeah, that you might be slicing across the grain as opposed to with it.</text>
  </message>
  <message>
    <ts>2017-07-07T13:36:48.552842</ts>
    <user>U3SJEDR96</user>
    <text>`elm-community/json-extra` has an `optionalField` with those semantics, actually. No `optionalIndex` tho</text>
  </message>
  <message>
    <ts>2017-07-07T13:42:56.733670</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U5ABF3BH7&gt; I used to get those cycles all the time, i finally drew a directed graph of my modules on a whiteboard to help me avoid this (&lt;https://en.wikipedia.org/wiki/Directed_graph&gt;)</text>
  </message>
  <message>
    <ts>2017-07-07T13:44:11.770726</ts>
    <user>U3SJEDR96</user>
    <text>When you run into something like that, usually you have 2 things that are actually 3 things, or just 1.</text>
  </message>
  <message>
    <ts>2017-07-07T13:45:06.798309</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U3HQVHERX&gt; That is good idea, thanks &lt;@U3SJEDR96&gt; I see</text>
  </message>
  <message>
    <ts>2017-07-07T13:48:30.899309</ts>
    <user>U3HQVHERX</user>
    <text>apparently your modules should match the language/structure of the particular domain, but I've found structuring them like this is helpful: `Main.elm` (just for your `program`), `Model.elm` (for your model), `Update.elm` (for your update function), `View.elm` (for your view).</text>
  </message>
  <message>
    <ts>2017-07-07T13:49:05.916491</ts>
    <user>U3HQVHERX</user>
    <text>It  depends on use case though</text>
  </message>
  <message>
    <ts>2017-07-07T13:50:17.951380</ts>
    <user>U3HQVHERX</user>
    <text>I added a small app to a server side rendered web application and I only had two modules `Messaging.elm` (for program, update function and view) and `Data.elm` (for types, decoders, encoders, model)</text>
  </message>
  <message>
    <ts>2017-07-07T14:02:44.335380</ts>
    <user>U64U09S6R</user>
    <text>hey guys, what editor do you generally use for elm? I'm using vscode currently, and found that the snippets that come with the elm extension are somewhat...illogical</text>
  </message>
  <message>
    <ts>2017-07-07T14:03:49.368586</ts>
    <user>U0FP80EKB</user>
    <text>I use vim</text>
  </message>
  <message>
    <ts>2017-07-07T14:03:49.368610</ts>
    <user>U23SA861Y</user>
    <text>I'm using vscode, what about it seems an issue</text>
  </message>
  <message>
    <ts>2017-07-07T14:04:27.388590</ts>
    <user>U64U09S6R</user>
    <text>for example the snippet for caseof</text>
  </message>
  <message>
    <ts>2017-07-07T14:06:11.441126</ts>
    <user>U64U09S6R</user>
    <text>I think I saw vscode even noting that some of the caret positions "don't seem correct" for some of the snippets, and I checked a few of them and that's indeed what it looks like</text>
  </message>
  <message>
    <ts>2017-07-07T14:11:08.588802</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://github.com/Krzysztof-Cieslak/vscode-elm/blob/master/snippets/elm.json&gt; &amp;lt;- I'm pretty sure they'd be open to an issue and maybe a PR for improving the snippets :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-07T14:18:08.791170</ts>
    <user>U3HQVHERX</user>
    <text>i switch between sublime text, vim, vscode and atom. lol.</text>
  </message>
  <message>
    <ts>2017-07-07T14:18:43.807679</ts>
    <user>U3HQVHERX</user>
    <text>mostly i use sublime text since that's where my motor memory is strongest.</text>
  </message>
  <message>
    <ts>2017-07-07T14:19:00.816065</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U64U09S6R&gt; try Atom with the elmjutsu plugin</text>
  </message>
  <message>
    <ts>2017-07-07T15:06:39.190869</ts>
    <user>U4JT89FGB</user>
    <text>&lt;@U3SJEDR96&gt; did your demystifying decoders last night twice. big thanks! :beer:</text>
  </message>
  <message>
    <ts>2017-07-07T15:06:52.196925</ts>
    <user>U3SJEDR96</user>
    <text>twice? :smile: Good job :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-07T15:17:59.490029</ts>
    <user>U4JT89FGB</user>
    <text>ha, yes twice. you put in all that work for me, i figured i'd try to get as much as i could out of it :smile:</text>
  </message>
  <message>
    <ts>2017-07-07T15:19:01.516777</ts>
    <user>U3SJEDR96</user>
    <text>That's awesome, I'm really happy to hear you found it useful! (Or _so_ mystifying you had to do it twice. :sweat_smile: )</text>
  </message>
  <message>
    <ts>2017-07-07T15:19:41.534060</ts>
    <user>U4JT89FGB</user>
    <text>no no, it actually didn't take long even the first time.. but it did help me grok a lot of what i'd been copy-pasta for a while now</text>
  </message>
  <message>
    <ts>2017-07-07T15:29:20.780238</ts>
    <user>U3SJEDR96</user>
    <text>Cool! If you want a challenge, you could always try implementing `at` without using `at` :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-07T15:38:07.007786</ts>
    <user>U5FC7BE0G</user>
    <text>I have an API that returns either

```
{ "data": {...} }
```

... or in case of an error:

```
{ "error": "..." }
```

The status is 200 in both cases. What would be a good approach to decode this?</text>
  </message>
  <message>
    <ts>2017-07-07T15:39:56.054021</ts>
    <user>U1CHKCKBR</user>
    <text>&lt;@U48AEBJQ3&gt;  nice one, there's an odd behaviour at combo input (click and key press)</text>
  </message>
  <message>
    <ts>2017-07-07T15:41:06.084121</ts>
    <user>U4JT89FGB</user>
    <text>&lt;@U5FC7BE0G&gt; I think `Decode.oneOf` is what you're looking for</text>
  </message>
  <message>
    <ts>2017-07-07T15:45:11.185339</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5FC7BE0G&gt; What's your end-goal? Do you want to handle the `error`, do you want to get an `Err` when you get that, ..?</text>
  </message>
  <message>
    <ts>2017-07-07T15:45:29.193395</ts>
    <user>U1CHKCKBR</user>
    <text>&lt;@U48AEBJQ3&gt; a nice one done in vue &lt;http://vue-keyboard.martywallace.com/&gt;</text>
  </message>
  <message>
    <ts>2017-07-07T15:45:29.193465</ts>
    <user>U5FC7BE0G</user>
    <text>but what would the type look like? 

I know I could do something like 

```
type alias MyResult = { data: Maybe MyData, error: Maybe String }
```</text>
  </message>
  <message>
    <ts>2017-07-07T15:45:52.203438</ts>
    <user>U5FC7BE0G</user>
    <text>&lt;@U3SJEDR96&gt; yes an Err would be preferable</text>
  </message>
  <message>
    <ts>2017-07-07T16:01:42.612308</ts>
    <user>U0LPMPL2U</user>
    <text>Could you do something like:
```
JD.oneOf
  [ JD.field "data" myDataDecoder
  , JD.field "error" (JD.string |&amp;gt; JD.andThen JD.fail)
  ]
```</text>
  </message>
  <message>
    <ts>2017-07-07T16:07:22.755860</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, that would work.. You would get a `I ran into a failure decoder: ` thing in the Err case, but eh</text>
  </message>
  <message>
    <ts>2017-07-07T16:07:59.771398</ts>
    <user>U3SJEDR96</user>
    <text>I suppose, if that's unacceptable, you could take that a little further and make a custom response handler - &lt;https://ellie-app.com/3GPkxJJjHQna1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-07T16:08:16.778759</ts>
    <user>U3SJEDR96</user>
    <text>Though you'd still have a String in the error case</text>
  </message>
  <message>
    <ts>2017-07-07T16:08:29.783697</ts>
    <user>U641LDZFU</user>
    <text>Evening (or whatever time of day it is where you are) all, I am having problems with union types (again)... is it possible to have a list filled with different types and then run a filter on that list? here is a demo of what I am trying to achieve:</text>
  </message>
  <message>
    <ts>2017-07-07T16:08:31.784722</ts>
    <user>U641LDZFU</user>
    <text>&lt;https://gist.github.com/allansideas/9a2c513d1b4add499b1605abe5d69ed4&gt;</text>
  </message>
  <message>
    <ts>2017-07-07T16:11:33.859262</ts>
    <user>U3SJEDR96</user>
    <text>Right, so you need to be explicit about the types of entries in a List. Doing that would yield something like this: &lt;https://ellie-app.com/3GPpVLz2wdRa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-07T16:12:03.870778</ts>
    <user>U3SJEDR96</user>
    <text>Oh, `Record` is actually defined, missed that: &lt;https://ellie-app.com/3GPpVLz2wdRa1/1&gt;</text>
  </message>
  <message>
    <ts>2017-07-07T16:12:53.891688</ts>
    <user>U641LDZFU</user>
    <text>heh :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-07T16:13:05.896354</ts>
    <user>U641LDZFU</user>
    <text>I believe you taught me that bit last time :smile:</text>
  </message>
  <message>
    <ts>2017-07-07T16:19:06.045692</ts>
    <user>U5FC7BE0G</user>
    <text>&lt;@U3SJEDR96&gt; Awesome! That's exactly the solution I was lookign for! String in the error case is fine. Thanks!</text>
  </message>
  <message>
    <ts>2017-07-07T16:19:25.053524</ts>
    <user>U641LDZFU</user>
    <text>oh wow, so if I am getting errors on the "big array" like ```The 5th entry has this type:

{ ..., nodeContent : { ..., chatId : ..., userId : ... } }

But the 6th is:

{ ..., nodeContent : { ... } }

Hint: Problem in the `nodeContent` field. Looks like a record is missing these
fields: chatId and userId```</text>
  </message>
  <message>
    <ts>2017-07-07T16:19:57.067274</ts>
    <user>U641LDZFU</user>
    <text>although the nodeContent have different type aliases</text>
  </message>
  <message>
    <ts>2017-07-07T16:21:39.110159</ts>
    <user>U641LDZFU</user>
    <text>there is an error with my type aliases?</text>
  </message>
  <message>
    <ts>2017-07-07T16:22:28.130376</ts>
    <user>U641LDZFU</user>
    <text>or I have to construct them in the list?</text>
  </message>
  <message>
    <ts>2017-07-07T16:25:33.207412</ts>
    <user>U2LAL86AY</user>
    <text>&lt;@U641LDZFU&gt; in elm lists, arrays, dicts and trees and other data that resembles collections of elements - need to have the same type.

you need `chatId`  and `userId` on the 6-th element - which i guess is of different type.
Can you please give your type aliases you use in that list?</text>
  </message>
  <message>
    <ts>2017-07-07T16:27:54.265275</ts>
    <user>U641LDZFU</user>
    <text>Thanks, I think my problem is I need to use another union type... ```type alias ChatMessage =
    { id : Int
    , chatId : Int
    , userId : Int
    , content : List (Html Msg)
    }


type alias Transition =
    { transitionType : String, toStoryNode : Int, text : Maybe String }


type alias ChatNodeContent =
    { id : Int, nodeType : String, nodeContent : ChatMessage, state : Maybe String, transitions : List Transition }


type alias NewsItem =
    { id : Int
    , content : List (Html Msg)
    , userId : 1
    , chatId : 2
    }


type alias NewsItemNodeContent =
    { id : Int, nodeType : String, nodeContent : NewsItem, state : Maybe String, transitions : List Transition }


type StoryNode
    = ChatNode ChatNodeContent
    | NewsItemNode NewsItemNodeContent```</text>
  </message>
  <message>
    <ts>2017-07-07T16:28:48.288122</ts>
    <user>U641LDZFU</user>
    <text>I think I should probably rename,  ChatNodeContent, and NewsItemContent, then create a new union type for the nodeContent which can be one of NewsItem or ChatMessage</text>
  </message>
  <message>
    <ts>2017-07-07T16:30:26.329531</ts>
    <user>U2LAL86AY</user>
    <text>hmm.. processing .. :smile:</text>
  </message>
  <message>
    <ts>2017-07-07T16:32:09.372898</ts>
    <user>U2LAL86AY</user>
    <text>if you have an image will help.</text>
  </message>
  <message>
    <ts>2017-07-07T16:40:09.565392</ts>
    <user>U2LAL86AY</user>
    <text>```
type alias NewsItem =    { id : Int    , content : List (Html Msg)    , userId : 1    , chatId : 2    }
```
This should not compile</text>
  </message>
  <message>
    <ts>2017-07-07T16:40:27.572686</ts>
    <user>U2LAL86AY</user>
    <text>you have values mixed with types.</text>
  </message>
  <message>
    <ts>2017-07-07T16:41:38.600775</ts>
    <user>U2LAL86AY</user>
    <text>also is not so good to have `content : List (Html Msg) ` is better to just keep the data on your model , not html + data.</text>
  </message>
  <message>
    <ts>2017-07-07T16:42:05.611537</ts>
    <user>U641LDZFU</user>
    <text>Ah, that was causing me trouble :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-07T16:43:18.640298</ts>
    <user>U2LAL86AY</user>
    <text>i will do a rewrite here.</text>
  </message>
  <message>
    <ts>2017-07-07T16:43:30.645052</ts>
    <user>U641LDZFU</user>
    <text>Ah sorry, that was an progress update to: ``` 
type alias ChatMessage =
    { id : Int
    , chatId : Int
    , userId : Int
    , content : List (Html Msg)
    }


type alias Transition =
    { transitionType : String, toStoryNode : Int, text : Maybe String }


type alias ChatNodeItem =
    { id : Int, nodeType : String, nodeContent : StoryNodeContent, state : Maybe String, transitions : List Transition }


type alias NewsItem =
    { id : Int
    , content : List (Html Msg)
    }


type alias NewsNodeItem =
    { id : Int, nodeType : String, nodeContent : StoryNodeContent, state : Maybe String, transitions : List Transition }


type StoryNode
    = ChatNode ChatNodeItem
    | NewsNode NewsNodeItem


type StoryNodeContent
    = NewsItemContent NewsItem
    | ChatMessageContent ChatMessage




type alias Player =
    { visitedStoryNodes : List StoryNode
    , currentStoryNode : Maybe StoryNode
    }


type alias Model =
    { player : Player
    }

```</text>
  </message>
  <message>
    <ts>2017-07-07T16:43:32.646021</ts>
    <user>U2LAL86AY</user>
    <text>i understand what you are going after.</text>
  </message>
  <message>
    <ts>2017-07-07T16:43:57.655823</ts>
    <user>U2LAL86AY</user>
    <text>why do you need to have `content : List (Html Msg)`</text>
  </message>
  <message>
    <ts>2017-07-07T16:44:18.663698</ts>
    <user>U2LAL86AY</user>
    <text>auch ! :smile:</text>
  </message>
  <message>
    <ts>2017-07-07T16:48:25.761711</ts>
    <user>U641LDZFU</user>
    <text>Vielen Dank!</text>
  </message>
  <message>
    <ts>2017-07-07T16:48:57.774164</ts>
    <user>U2LAL86AY</user>
    <text>```
type Msg
    = NoOp


type alias Model =
    { player : Player }


type alias Player =
    { visitedStoryNodes : List StoryNode, currentStoryNode : Maybe StoryNode }


type StoryNode
    = ChatNode ChatNodeItem
    | NewsNode NewsNodeItem


type StoryNodeContent
    = NewsItemContent NewsItem
    | ChatMessageContent ChatMessage


type alias ChatNodeItem =
    { id : Int, nodeType : String, nodeContent : StoryNodeContent, state : Maybe String, transitions : List Transition }


type alias NewsNodeItem =
    { id : Int, nodeType : String, nodeContent : StoryNodeContent, state : Maybe String, transitions : List Transition }


type alias ChatMessage =
    { id : Int, content : List (Html Msg), chatId : Int, userId : Int }


type alias NewsItem =
    { id : Int, content : List (Html Msg) }


type alias Transition =
    { transitionType : String, toStoryNode : Int, text : Maybe String }

```</text>
  </message>
  <message>
    <ts>2017-07-07T16:49:06.777775</ts>
    <user>U2LAL86AY</user>
    <text>i need that function causing the problem</text>
  </message>
  <message>
    <ts>2017-07-07T16:49:51.795809</ts>
    <user>U641LDZFU</user>
    <text>The problem is it's many :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-07T16:50:22.807989</ts>
    <user>U641LDZFU</user>
    <text>I think I will have another hack at it tomorrow</text>
  </message>
  <message>
    <ts>2017-07-07T16:50:29.810740</ts>
    <user>U2LAL86AY</user>
    <text>```
Hint: Problem in the `nodeContent` field. Looks like a record is missing these fields: chatId and userId
```
THis error has a line number</text>
  </message>
  <message>
    <ts>2017-07-07T16:51:06.824992</ts>
    <user>U641LDZFU</user>
    <text>yeah, that's why I thought I needed another union type for nodeContent</text>
  </message>
  <message>
    <ts>2017-07-07T16:51:46.840690</ts>
    <user>U641LDZFU</user>
    <text>so they could also be different-but-the-same</text>
  </message>
  <message>
    <ts>2017-07-07T16:51:57.845130</ts>
    <user>U2LAL86AY</user>
    <text>oh</text>
  </message>
  <message>
    <ts>2017-07-07T16:52:00.846300</ts>
    <user>U2LAL86AY</user>
    <text>no</text>
  </message>
  <message>
    <ts>2017-07-07T16:52:33.859693</ts>
    <user>U2LAL86AY</user>
    <text>:))</text>
  </message>
  <message>
    <ts>2017-07-07T16:52:59.869772</ts>
    <user>U641LDZFU</user>
    <text>I better get to bed, thanks again!!</text>
  </message>
  <message>
    <ts>2017-07-07T17:04:32.140861</ts>
    <user>U5R6L5MT4</user>
    <text>Hi</text>
  </message>
  <message>
    <ts>2017-07-07T17:04:59.151380</ts>
    <user>U5R6L5MT4</user>
    <text>At Elm Europe someone talked about compiling two Elm component at once to be able to load them after wards without compiling Elm twice</text>
  </message>
  <message>
    <ts>2017-07-07T17:05:37.165462</ts>
    <user>U5R6L5MT4</user>
    <text>I also had another question about loading the same elm component multiple times on the same page</text>
  </message>
  <message>
    <ts>2017-07-07T17:06:25.183433</ts>
    <user>U0LPMPL2U</user>
    <text>Are you asking about compiling multiple files at once with `elm make File1.elm File2.elm` ?</text>
  </message>
  <message>
    <ts>2017-07-07T17:11:09.284164</ts>
    <user>U2LAL86AY</user>
    <text>allan_x_anderson: I've simplified the data structure a bit. THis is just looking at what you have there,

As i sayed  -if i see a picture it will be much simpler to underestand if is what you need. Working only with what you have provided, this is the same thing:</text>
  </message>
  <message>
    <ts>2017-07-07T17:11:13.285810</ts>
    <user>U2LAL86AY</user>
    <text>```
type Msg
    = NoOp


type alias Model =
    { player : Player }


type alias Player =
    { visitedStoryNodes : List Node, currentStoryNode : Maybe Node }


type alias Node =
    { id : Int
    , nodeType : String
    , state : Maybe String
    , transitions : List Transition
    , nodeContent : NodeContent
    }


type NodeContent
    = NewsItem { id : Int, content : List (Html Msg) }
    | ChatMessage { id : Int, content : List (Html Msg), chatId : Int, userId : Int }


type alias Transition =
    { transitionType : String, toStoryNode : Int, text : Maybe String }

```</text>
  </message>
  <message>
    <ts>2017-07-07T17:14:16.348955</ts>
    <user>U2LAL86AY</user>
    <text>simplified: you don't have ChatNode and NewsNode - but instead you have a node - that can have different content.

and just this content inside is different.
this is why `nodeContent : NodeContent` can either be: 
`NewsItem` or `ChatMessage`
OK see you tomorrow :smile:</text>
  </message>
  <message>
    <ts>2017-07-07T17:18:24.434085</ts>
    <user>U5R6L5MT4</user>
    <text>&lt;@U0LPMPL2U&gt; is it all it takes? :flushed:</text>
  </message>
  <message>
    <ts>2017-07-07T17:18:55.444738</ts>
    <user>U0LPMPL2U</user>
    <text>I think so?</text>
  </message>
  <message>
    <ts>2017-07-07T17:19:06.448343</ts>
    <user>U0LPMPL2U</user>
    <text>checking `elm make --help`</text>
  </message>
  <message>
    <ts>2017-07-07T17:19:12.450119</ts>
    <user>U0LPMPL2U</user>
    <text>```
elm make --help
elm-make 0.18 (Elm Platform 0.18.0)

Usage: elm-make [FILES...] [--output FILE] [--yes] [--report FORMAT] [--debug]
                [--warn] [--docs FILE] [--prepublish] [--prepublish-core]
  build Elm projects
```</text>
  </message>
  <message>
    <ts>2017-07-07T17:19:29.455924</ts>
    <user>U0LPMPL2U</user>
    <text>That `[FILES...]` means you can put a list of file names</text>
  </message>
  <message>
    <ts>2017-07-07T17:24:42.560198</ts>
    <user>U5R6L5MT4</user>
    <text>&lt;@U0LPMPL2U&gt; it does works thanks</text>
  </message>
  <message>
    <ts>2017-07-07T17:33:20.732191</ts>
    <user>U2LAL86AY</user>
    <text>does anyone seen this bug in `elmjutsu` where you try to rename a symbol - an the search tree appears 2 times for each symbol - and it renames the symbol 2 times. I restarted atom. it's still present. let me create a picture first.</text>
  </message>
  <message>
    <ts>2017-07-07T18:03:40.273567</ts>
    <user>U2LAL86AY</user>
    <text>&lt;https://github.com/halohalospecial/atom-elmjutsu/issues/81&gt;</text>
  </message>
  <message>
    <ts>2017-07-07T20:43:35.011401</ts>
    <user>U61RNCASK</user>
    <text>What is the best way to parse Elm in Elm at the moment? </text>
  </message>
  <message>
    <ts>2017-07-07T22:39:22.609984</ts>
    <user>U601ELFEG</user>
    <text>I know I saw the idiom of defining `(=&amp;gt;)` to be `(,)` - can anyone remember where it is</text>
  </message>
  <message>
    <ts>2017-07-07T22:39:50.611908</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U601ELFEG&gt; &lt;http://package.elm-lang.org/packages/NoRedInk/rocket-update/latest&gt; ?</text>
  </message>
  <message>
    <ts>2017-07-07T22:41:34.619939</ts>
    <user>U601ELFEG</user>
    <text>thanks!</text>
  </message>
  <message>
    <ts>2017-07-07T23:14:22.754886</ts>
    <user>U23SA861Y</user>
    <text>*hisses*</text>
  </message>
  <message>
    <ts>2017-07-08T03:56:07.717464</ts>
    <user>U62MXFL9K</user>
    <text>Hi everyone! I was a bit puzzled regarding *data structures in Elm* and then I found this very helpful article &lt;http://tech.noredink.com/post/140646140878/data-structures-in-elm&gt; maybe someone else has a similar problem.. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-08T06:39:00.259621</ts>
    <user>U64MK7215</user>
    <text>hey</text>
  </message>
  <message>
    <ts>2017-07-08T06:39:28.261091</ts>
    <user>U64MK7215</user>
    <text>what does this mean?</text>
  </message>
  <message>
    <ts>2017-07-08T06:40:01.262802</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U64MK7215&gt; it's a type signature for a function</text>
  </message>
  <message>
    <ts>2017-07-08T06:40:23.264177</ts>
    <user>U153UK3FA</user>
    <text>it says that the function `update` take a `Msg` and a `Model` and returns a `Model`</text>
  </message>
  <message>
    <ts>2017-07-08T06:41:08.267226</ts>
    <user>U64MK7215</user>
    <text>&lt;@U153UK3FA&gt; Thanks for clearing it up.</text>
  </message>
  <message>
    <ts>2017-07-08T07:12:11.375067</ts>
    <user>U62UFEG4D</user>
    <text>Hi everyone! is there a way to convert a Union type to a list (or array)</text>
  </message>
  <message>
    <ts>2017-07-08T07:12:17.375450</ts>
    <user>U62UFEG4D</user>
    <text>my use-case is the following</text>
  </message>
  <message>
    <ts>2017-07-08T07:12:32.376311</ts>
    <user>U62UFEG4D</user>
    <text>```type Shape
    = Poly
    | Star5
    | Image
    | Ellipse
    | Circle
    | Rectangle
    | Unknown


genShape : Random.Generator Shape
genShape =
    let
        availableShape : Array.Array Shape
        availableShape =
            Array.fromList [ Poly, Star5, Image, Ellipse, Circle, Rectangle, Unknown ]
    in
        (&lt;http://Random.int|Random.int&gt; 0 (Array.length availableShape))
            |&amp;gt; Random.map
                (\o -&amp;gt;
                    case (Array.get o (availableShape)) of
                        Just shape -&amp;gt;
                            shape

                        Nothing -&amp;gt;
                            Unknown
                )
```</text>
  </message>
  <message>
    <ts>2017-07-08T07:13:08.378442</ts>
    <user>U62UFEG4D</user>
    <text>I would like to avoid the duplication of the shapes definition</text>
  </message>
  <message>
    <ts>2017-07-08T07:16:41.390499</ts>
    <user>U3SJEDR96</user>
    <text>There is currently no way to automatically enumerate a union type. Keeping the list of possible shapes as close to your `shape` type should help in making sure you don't get them out of sync by accident :slightly_smiling_face: (i.e. `shapes = [ Poly, Star5, Image, Ellipse, Circle, Rectangle, Unknown ]` and refer to `shapes` whenever you need that enumeration)</text>
  </message>
  <message>
    <ts>2017-07-08T07:20:14.402602</ts>
    <user>U62UFEG4D</user>
    <text>is it worth to spend time on implementing that feature ? Something like</text>
  </message>
  <message>
    <ts>2017-07-08T07:20:36.404063</ts>
    <user>U62UFEG4D</user>
    <text>`List.fromUnion Shape`</text>
  </message>
  <message>
    <ts>2017-07-08T07:20:39.404246</ts>
    <user>U62UFEG4D</user>
    <text>?</text>
  </message>
  <message>
    <ts>2017-07-08T07:21:47.408184</ts>
    <user>U62UFEG4D</user>
    <text>dont know if I can do it, but I would love to give it a try ...</text>
  </message>
  <message>
    <ts>2017-07-08T07:22:22.410187</ts>
    <user>U3SJEDR96</user>
    <text>It would need support from the compiler since type-info isn't available at runtime. Additionally, it would only work for enumerations, not unions that actually hold content.. So in reality, it would be of somewhat limited use, and fairly complex to implement in the sense that it requires "magic"</text>
  </message>
  <message>
    <ts>2017-07-08T07:24:00.415739</ts>
    <user>U3SJEDR96</user>
    <text>i.e. if you decide that a `Poly` shape should also have an Int that defines the number of edges, you can no longer enumerate it</text>
  </message>
  <message>
    <ts>2017-07-08T07:32:33.445340</ts>
    <user>U62UFEG4D</user>
    <text>all right understood, thank you &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-08T08:07:10.564024</ts>
    <user>U5DJNFLUD</user>
    <text>I found this comment intriguing &lt;https://github.com/rtfeldman/elm-spa-example/blob/master/src/Main.elm#L25-L26&gt;</text>
  </message>
  <message>
    <ts>2017-07-08T08:07:24.564757</ts>
    <user>U5DJNFLUD</user>
    <text>Anyone know where to read up more on plans for SPA stuff in 0.19?</text>
  </message>
  <message>
    <ts>2017-07-08T08:09:44.572932</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://github.com/elm-lang/projects/blob/master/roadmap.md&gt;</text>
  </message>
  <message>
    <ts>2017-07-08T08:24:53.628112</ts>
    <user>U5DJNFLUD</user>
    <text>&lt;@U3SJEDR96&gt; Thanks! I've seen that but didn't quite make the connection to why there won't be anything your Main.elm anymore :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-08T08:25:22.629839</ts>
    <user>U5DJNFLUD</user>
    <text>If SPA in 0.19 starts to look more framework-like I will be very happy</text>
  </message>
  <message>
    <ts>2017-07-08T09:18:42.832248</ts>
    <user>U641LDZFU</user>
    <text>Ah! Interesting, and much cleaner :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-08T09:19:12.834350</ts>
    <user>U641LDZFU</user>
    <text>Thanks!</text>
  </message>
  <message>
    <ts>2017-07-08T09:19:46.836350</ts>
    <user>U641LDZFU</user>
    <text>Then I can just switch on the nodeType field for different UI behaviour!</text>
  </message>
  <message>
    <ts>2017-07-08T09:22:52.849541</ts>
    <user>U5WS7CJLV</user>
    <text>syntax for Dict literal?</text>
  </message>
  <message>
    <ts>2017-07-08T09:23:18.851309</ts>
    <user>U5WS7CJLV</user>
    <text>I see Dict.fromList in the docs - is that how it's usually done?</text>
  </message>
  <message>
    <ts>2017-07-08T09:24:45.857160</ts>
    <user>U641LDZFU</user>
    <text>Hallo everyone!  I'm back with another question about... you guessed it - Union types!</text>
  </message>
  <message>
    <ts>2017-07-08T09:25:35.860616</ts>
    <user>U641LDZFU</user>
    <text>Basically in a list of records with different types is it possible to filter by a field without using a case for each different type?</text>
  </message>
  <message>
    <ts>2017-07-08T09:25:42.861109</ts>
    <user>U641LDZFU</user>
    <text>here is the code:</text>
  </message>
  <message>
    <ts>2017-07-08T09:25:49.861584</ts>
    <user>U641LDZFU</user>
    <text>&lt;https://ellie-app.com/3H7WyZXf2F7a1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-08T09:26:17.863683</ts>
    <user>U641LDZFU</user>
    <text>line 88 is what I would like to do</text>
  </message>
  <message>
    <ts>2017-07-08T09:26:26.864255</ts>
    <user>U641LDZFU</user>
    <text>the rest of the function body is what works</text>
  </message>
  <message>
    <ts>2017-07-08T09:28:51.873860</ts>
    <user>U62MXFL9K</user>
    <text>&lt;@U5WS7CJLV&gt; Dict.empty does also the job then you can add and remove elements (does this answer your question?)</text>
  </message>
  <message>
    <ts>2017-07-08T09:29:03.874678</ts>
    <user>U5WS7CJLV</user>
    <text>sure</text>
  </message>
  <message>
    <ts>2017-07-08T09:29:15.875512</ts>
    <user>U5WS7CJLV</user>
    <text>was just wondering if you could do something like list literals</text>
  </message>
  <message>
    <ts>2017-07-08T09:29:27.876278</ts>
    <user>U5WS7CJLV</user>
    <text>but it seems like with Dict you must be function-y</text>
  </message>
  <message>
    <ts>2017-07-08T09:32:28.888839</ts>
    <user>U5WS7CJLV</user>
    <text>&lt;@U641LDZFU&gt; I am a super noob myself, but I have an idea and will do my best to explain it</text>
  </message>
  <message>
    <ts>2017-07-08T09:32:42.889736</ts>
    <user>U5WS7CJLV</user>
    <text>union types can have more than one "constructor" arg</text>
  </message>
  <message>
    <ts>2017-07-08T09:33:25.892382</ts>
    <user>U5WS7CJLV</user>
    <text>what if you passed the common stuff, like id - as the first arg to your different union "constructors"</text>
  </message>
  <message>
    <ts>2017-07-08T09:33:40.893304</ts>
    <user>U5WS7CJLV</user>
    <text>type MyUnion =</text>
  </message>
  <message>
    <ts>2017-07-08T09:33:56.894334</ts>
    <user>U5WS7CJLV</user>
    <text>Cool Int Float</text>
  </message>
  <message>
    <ts>2017-07-08T09:34:02.894714</ts>
    <user>U641LDZFU</user>
    <text>I think I did in the list at the bottom of the file :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-08T09:34:02.894768</ts>
    <user>U5WS7CJLV</user>
    <text>AlsoCool Int String</text>
  </message>
  <message>
    <ts>2017-07-08T09:34:08.895175</ts>
    <user>U641LDZFU</user>
    <text>&lt;https://ellie-app.com/3H7WyZXf2F7a1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-08T09:34:12.895493</ts>
    <user>U641LDZFU</user>
    <text>Is that what you mean?</text>
  </message>
  <message>
    <ts>2017-07-08T09:34:51.898037</ts>
    <user>U641LDZFU</user>
    <text>or do you mean take the ID out of the record?</text>
  </message>
  <message>
    <ts>2017-07-08T09:35:35.901291</ts>
    <user>U5WS7CJLV</user>
    <text>yes, I think that's my idea</text>
  </message>
  <message>
    <ts>2017-07-08T09:35:52.902534</ts>
    <user>U5WS7CJLV</user>
    <text>but now that I'm thinking about it further, maybe it won't work.  I am new to this union stuff myself</text>
  </message>
  <message>
    <ts>2017-07-08T09:36:06.903507</ts>
    <user>U62MXFL9K</user>
    <text>&lt;@U5WS7CJLV&gt; it seems that there is no other syntax</text>
  </message>
  <message>
    <ts>2017-07-08T09:37:00.907002</ts>
    <user>U5WS7CJLV</user>
    <text>taking the ID out of the record, I mean</text>
  </message>
  <message>
    <ts>2017-07-08T09:38:13.911904</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5WS7CJLV&gt; you _could_ have special syntax for Dicts.. and sets, and arrays, and whatever other data structures. But having more syntax wouldn't necessarily make things more legible or easier to understand :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-08T09:38:42.913735</ts>
    <user>U5WS7CJLV</user>
    <text>right, I just wanted to make sure there wasn't literal syntax before I started functioning everything</text>
  </message>
  <message>
    <ts>2017-07-08T09:38:59.914796</ts>
    <user>U5WS7CJLV</user>
    <text>for example, I've used List.singleton when [ myItem ] is simpler, I think</text>
  </message>
  <message>
    <ts>2017-07-08T09:39:33.916972</ts>
    <user>U5WS7CJLV</user>
    <text>&lt;@U641LDZFU&gt; what if StoryNode were not a union type?</text>
  </message>
  <message>
    <ts>2017-07-08T09:39:36.917161</ts>
    <user>U3SJEDR96</user>
    <text>Fair enough :slightly_smiling_face: `Dict.fromList [ ( "key", value" ), ( "other", "value" ) ]` is the most succinct syntax we have for it</text>
  </message>
  <message>
    <ts>2017-07-08T09:39:49.917950</ts>
    <user>U5WS7CJLV</user>
    <text>what if it were a record with an ID property, and some other property that held the union-y stuff?</text>
  </message>
  <message>
    <ts>2017-07-08T09:39:52.918115</ts>
    <user>U641LDZFU</user>
    <text>I think then I couldn't have a list filled with different "StoryNodes"</text>
  </message>
  <message>
    <ts>2017-07-08T09:40:03.918908</ts>
    <user>U641LDZFU</user>
    <text>because the format of the records are all different</text>
  </message>
  <message>
    <ts>2017-07-08T09:40:28.920676</ts>
    <user>U641LDZFU</user>
    <text>ah, interesting</text>
  </message>
  <message>
    <ts>2017-07-08T09:41:08.923970</ts>
    <user>U5WS7CJLV</user>
    <text>I'd like to hangout and talk more Elm, but my children be calllin' - later fellas!</text>
  </message>
  <message>
    <ts>2017-07-08T09:41:24.925098</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U641LDZFU&gt; Here is a fairly light refactor which fixes that particular problem. &lt;https://ellie-app.com/3H8hWdzqWCCa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-08T09:43:03.931649</ts>
    <user>U48AEBJQ3</user>
    <text>The basic changes are merging the two identical record aliases and switch from using a string to represent the different node types to using a union.</text>
  </message>
  <message>
    <ts>2017-07-08T09:43:33.933683</ts>
    <user>U641LDZFU</user>
    <text>Very nice</text>
  </message>
  <message>
    <ts>2017-07-08T09:43:52.934777</ts>
    <user>U641LDZFU</user>
    <text>I think that's what you were hinting at too &lt;@U5WS7CJLV&gt; !</text>
  </message>
  <message>
    <ts>2017-07-08T09:43:56.935022</ts>
    <user>U641LDZFU</user>
    <text>Thanks so much</text>
  </message>
  <message>
    <ts>2017-07-08T09:45:56.943749</ts>
    <user>U62MXFL9K</user>
    <text>&lt;@U641LDZFU&gt; I don't understand where `rawStoryNodes` comes from.. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-08T09:46:05.944413</ts>
    <user>U62MXFL9K</user>
    <text>line 89</text>
  </message>
  <message>
    <ts>2017-07-08T09:46:36.946570</ts>
    <user>U641LDZFU</user>
    <text>it's at the bottom of the file isn't it?</text>
  </message>
  <message>
    <ts>2017-07-08T09:46:49.947523</ts>
    <user>U641LDZFU</user>
    <text>it's just a list to play around with</text>
  </message>
  <message>
    <ts>2017-07-08T09:48:16.953678</ts>
    <user>U62MXFL9K</user>
    <text>saw it later… why don't you pass it to the function?</text>
  </message>
  <message>
    <ts>2017-07-08T09:49:06.957084</ts>
    <user>U62MXFL9K</user>
    <text>if it's just as a quick trial still this makes it error prone</text>
  </message>
  <message>
    <ts>2017-07-08T09:49:30.958656</ts>
    <user>U641LDZFU</user>
    <text>ah, that could be a good tip!</text>
  </message>
  <message>
    <ts>2017-07-08T09:49:36.959086</ts>
    <user>U641LDZFU</user>
    <text>it's basically my "database"</text>
  </message>
  <message>
    <ts>2017-07-08T09:50:32.963102</ts>
    <user>U62MXFL9K</user>
    <text>you want to have pure functions (event though in Elm you cannot mutate at least)</text>
  </message>
  <message>
    <ts>2017-07-08T09:50:52.964655</ts>
    <user>U641LDZFU</user>
    <text>Ah yes</text>
  </message>
  <message>
    <ts>2017-07-08T09:51:32.967223</ts>
    <user>U641LDZFU</user>
    <text>Then would I have to pass it into the view function too?</text>
  </message>
  <message>
    <ts>2017-07-08T09:52:26.970977</ts>
    <user>U641LDZFU</user>
    <text>or would it just be worth attaching it to the initial model?</text>
  </message>
  <message>
    <ts>2017-07-08T09:52:57.973218</ts>
    <user>U62MXFL9K</user>
    <text>you pass the model to the view function usually.. so yes</text>
  </message>
  <message>
    <ts>2017-07-08T09:53:30.975535</ts>
    <user>U641LDZFU</user>
    <text>and if it's 100's of nodes long</text>
  </message>
  <message>
    <ts>2017-07-08T09:53:42.976297</ts>
    <user>U641LDZFU</user>
    <text>it won't have a huge impact?</text>
  </message>
  <message>
    <ts>2017-07-08T09:54:03.977754</ts>
    <user>U641LDZFU</user>
    <text>considering the model gets passed around all over the show</text>
  </message>
  <message>
    <ts>2017-07-08T09:54:07.977990</ts>
    <user>U641LDZFU</user>
    <text>(on performance)</text>
  </message>
  <message>
    <ts>2017-07-08T09:56:03.986074</ts>
    <user>U48AEBJQ3</user>
    <text>Data rarely gets copied in Elm. Since it is immutable, you just pass or copy references.</text>
  </message>
  <message>
    <ts>2017-07-08T09:56:37.988371</ts>
    <user>U641LDZFU</user>
    <text>btw, Thanks &lt;@U48AEBJQ3&gt; here is a diff with your fixes, incase anyone else ever comes across this :slightly_smiling_face: &lt;https://gist.github.com/allansideas/2360e065c13a48b419fce245d0485a12/revisions&gt;</text>
  </message>
  <message>
    <ts>2017-07-08T09:56:47.989102</ts>
    <user>U641LDZFU</user>
    <text>Ah alright!</text>
  </message>
  <message>
    <ts>2017-07-08T09:57:35.992628</ts>
    <user>U641LDZFU</user>
    <text>Thanks again everyone for all your help!</text>
  </message>
  <message>
    <ts>2017-07-08T09:58:10.995454</ts>
    <user>U641LDZFU</user>
    <text>The door buzzer has geklingelt, so I am off for a bit :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-08T09:58:21.996224</ts>
    <user>U62MXFL9K</user>
    <text>ciao</text>
  </message>
  <message>
    <ts>2017-07-08T10:48:02.224821</ts>
    <user>U5FC7BE0G</user>
    <text>is there a function to create a URL query? Something like 

```
Http.url "/baseurl" [("somekey": "somevalue")] == "baseurl?somekey=somevalue"
```

Of course i could create my own but there must already be an implementation somewhere? I saw that in an earlier version this was in Http but seems to have been removed in Http 1.0.0</text>
  </message>
  <message>
    <ts>2017-07-08T10:50:36.236854</ts>
    <user>U5FC7BE0G</user>
    <text>just saw that this function exists in ```lukewestby/elm-http-extra``` which does not support elm 0.18 :confused:</text>
  </message>
  <message>
    <ts>2017-07-08T10:54:55.256358</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://ellie-app.com/3H9qS8T3znMa1/0&gt; something like that should work</text>
  </message>
  <message>
    <ts>2017-07-08T10:58:39.273922</ts>
    <user>U3SJEDR96</user>
    <text>which also makes it easy to make an `url` function: &lt;https://ellie-app.com/3H9qS8T3znMa1/1&gt;</text>
  </message>
  <message>
    <ts>2017-07-08T11:22:41.392549</ts>
    <user>U5FC7BE0G</user>
    <text>&lt;@U3SJEDR96&gt; you are the best, thanks!</text>
  </message>
  <message>
    <ts>2017-07-08T11:43:29.492864</ts>
    <user>U5WJZNEF5</user>
    <text>Hello everyone, first time I write here and as you can easily guess I'm an Elm newby. I'm trying to write some code that takes values from a random element of a JSON array with, of course, no success.
I'm able to get values from a specific element with something like `Decode.index 0 (&lt;http://Decode.at|Decode.at&gt; [ "value" ] Decode.string)` but I really don't understand how to take the element randomly.</text>
  </message>
  <message>
    <ts>2017-07-08T11:47:02.509800</ts>
    <user>U3SJEDR96</user>
    <text>Alright, so, while feasible, this is not super-trivial in Elm. Modelling randomness in an environment where every function is pure (and, as such, needs to return the same value every time the function is called) means it needs some extra stuff to pass around. Json decoders are also a somewhat involved topic, as it involves taking a blob of unknown shape with unknown types, and extracting some typed information from it.</text>
  </message>
  <message>
    <ts>2017-07-08T11:49:25.521396</ts>
    <user>U0FP80EKB</user>
    <text>Personally, I would separate this idea out into two steps: decode the list, then work on randomly choosing one. Picking a random one at the point of decoding adds a potentially unnecessary complexity level.</text>
  </message>
  <message>
    <ts>2017-07-08T11:49:38.522457</ts>
    <user>U0FP80EKB</user>
    <text>Especially as &lt;@U3SJEDR96&gt; mentions, these two topics can be complex :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-08T11:50:21.525958</ts>
    <user>U5WJZNEF5</user>
    <text>&lt;@U3SJEDR96&gt; yay :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-08T11:52:17.535871</ts>
    <user>U5WJZNEF5</user>
    <text>&lt;@U0FP80EKB&gt; I thought about that too but I got stuck trying converting the JSON array to a List of I didn't know what. Dict? Records? I don't actually get the difference between the two or how I should declare the decoder in that case</text>
  </message>
  <message>
    <ts>2017-07-08T11:52:45.538342</ts>
    <user>U0FP80EKB</user>
    <text>Exactly. :slightly_smiling_face: Adding randomness into this is a tough added complexity.</text>
  </message>
  <message>
    <ts>2017-07-08T11:53:05.539962</ts>
    <user>U0P088J1L</user>
    <text>Hi, is there a way to alias a type name in the import statement? Something like this.

`import SubMessages exposing (SMsg as Msg)`</text>
  </message>
  <message>
    <ts>2017-07-08T11:54:07.544946</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U5WJZNEF5&gt; I usually recommend people go read a lot by Brian Hicks and get his json survival guide &lt;https://www.brianthicks.com/json-survival-kit/&gt;     Demystifying decoders is a great thing</text>
  </message>
  <message>
    <ts>2017-07-08T11:54:33.547199</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U0P088J1L&gt; nope, though what you'll usually find people doing is calling is `Msg` within `SubMessages` and using `SubMessages.Msg` outside of that</text>
  </message>
  <message>
    <ts>2017-07-08T11:54:57.549219</ts>
    <user>U3SJEDR96</user>
    <text>alternatively, `import SubMessages as SM` and using `SM.Msg`</text>
  </message>
  <message>
    <ts>2017-07-08T11:55:10.550550</ts>
    <user>U0FP80EKB</user>
    <text>I use the latter</text>
  </message>
  <message>
    <ts>2017-07-08T11:55:47.554058</ts>
    <user>U5WJZNEF5</user>
    <text>&lt;@U0FP80EKB&gt; Thanks, I'll look into it</text>
  </message>
  <message>
    <ts>2017-07-08T11:56:33.558030</ts>
    <user>U0P088J1L</user>
    <text>OK. The reason I had to change the type name to SMsg in SubMessages module, is because the Parent module imports ParentMessages and SubMessages, and there is an `ambiguous`  naming conflict because of that.</text>
  </message>
  <message>
    <ts>2017-07-08T11:56:34.558094</ts>
    <user>U0FP80EKB</user>
    <text>His blog is really great. I learned a bunch from it, as well.</text>
  </message>
  <message>
    <ts>2017-07-08T11:57:05.560610</ts>
    <user>U0P088J1L</user>
    <text>Is it the right way to solve the issue to change one of the two Messages module's type name?</text>
  </message>
  <message>
    <ts>2017-07-08T11:57:15.561452</ts>
    <user>U0P088J1L</user>
    <text>Or am I doing something fundamentally wrong.</text>
  </message>
  <message>
    <ts>2017-07-08T11:57:23.562059</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U0P088J1L&gt; In this case don't bring it into your level, always fully qualify it</text>
  </message>
  <message>
    <ts>2017-07-08T11:57:30.562661</ts>
    <user>U0FP80EKB</user>
    <text>So, you'd always say `SubMessages.Msg`</text>
  </message>
  <message>
    <ts>2017-07-08T11:57:33.562952</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U0P088J1L&gt; basically you could drop the `exposing`, and qualify it using `SM` or `SubMessages`</text>
  </message>
  <message>
    <ts>2017-07-08T11:57:51.564370</ts>
    <user>U0FP80EKB</user>
    <text>and the include would be
`include SubMessages` without the `exposing` part (as &lt;@U3SJEDR96&gt; mentions)</text>
  </message>
  <message>
    <ts>2017-07-08T11:58:21.566833</ts>
    <user>U0FP80EKB</user>
    <text>In general, I tend to not expose things into my module's namespace. The majority of my includes are just the module. I might alias them
`include SubMessages as SM`</text>
  </message>
  <message>
    <ts>2017-07-08T11:58:49.569363</ts>
    <user>U0FP80EKB</user>
    <text>It helps me keep track of where the functions are coming from, as well as keeping from name collisions.</text>
  </message>
  <message>
    <ts>2017-07-08T11:59:13.571478</ts>
    <user>U0P088J1L</user>
    <text>I see. That makes a lot sense. Thanks!</text>
  </message>
  <message>
    <ts>2017-07-08T12:46:48.818348</ts>
    <user>U2M4VPZ9D</user>
    <text>Hi all, I've used this &lt;https://github.com/halfzebra/create-elm-app&gt; to create an Elm app. It's very nice. I can't however work out how to turn the debugger off when serving the app with `elm-app start`. Does anyone know how to do that?</text>
  </message>
  <message>
    <ts>2017-07-08T12:57:02.866523</ts>
    <user>U0L27J3N0</user>
    <text>&lt;@U2M4VPZ9D&gt; why would you want to turn off the debugger?</text>
  </message>
  <message>
    <ts>2017-07-08T12:58:43.874678</ts>
    <user>U0L27J3N0</user>
    <text>I mean... it's what's designed to do... you develop your app in debug mode and when you want to switch to production, you use `elm-app build` and serve that.</text>
  </message>
  <message>
    <ts>2017-07-08T12:59:32.878518</ts>
    <user>U2M4VPZ9D</user>
    <text>Sure thanks &lt;@U0L27J3N0&gt;</text>
  </message>
  <message>
    <ts>2017-07-08T13:03:51.901305</ts>
    <user>U3SJEDR96</user>
    <text>if you're dealing with something the debugger can't handle, you can `eject` and edit `webpack.config.dev.js` and remove the `debug: true` on line 92, tho :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-08T13:13:41.951779</ts>
    <user>U10P4FNMD</user>
    <text>&lt;@U2M4VPZ9D&gt; could you please explain why you don't want the debugger in `elm-app start`?</text>
  </message>
  <message>
    <ts>2017-07-08T13:18:25.975941</ts>
    <user>U2M4VPZ9D</user>
    <text>&lt;@U10P4FNMD&gt; I am not sure this is a problem any more. I am working on a drum machine with Elm using the Web Audio API via ports. The ports receive the audio clock on a regular basis ( at each request animation frame) so its creating a lot of debug messages. Initially I thought the sheer number of messages would interfere with the Elm scheduling, but it turns out there was a bug in my code.</text>
  </message>
  <message>
    <ts>2017-07-08T13:19:45.982365</ts>
    <user>U10P4FNMD</user>
    <text>&lt;@U2M4VPZ9D&gt; thanks! Please feel free to hit me with a message if you'll have troubles with `create-elm-app`</text>
  </message>
  <message>
    <ts>2017-07-08T13:21:25.990871</ts>
    <user>U2M4VPZ9D</user>
    <text>&lt;@U10P4FNMD&gt; No worries, it's actually quite cool. I can define the drum pattern in code and when you modify it and save the code, you can hear the difference. I am going to push this to git shortly.</text>
  </message>
  <message>
    <ts>2017-07-08T13:28:56.027195</ts>
    <user>U2SR9DL7Q</user>
    <text>Hey, can anyone explain what this type annotation means ```matchers : Parser (Route -&amp;gt; a) a```</text>
  </message>
  <message>
    <ts>2017-07-08T13:31:04.038366</ts>
    <user>U2SR9DL7Q</user>
    <text>Not the actual types involved, but rather the structure. It's not receiving a value, but it's returning a _Parser_ that in itself returns _a_ when passed a _Route_ ?</text>
  </message>
  <message>
    <ts>2017-07-08T13:31:41.041764</ts>
    <user>U3SJEDR96</user>
    <text>When dealing with the url-parser library, I think it's best not to worry about the type signatures too much :x</text>
  </message>
  <message>
    <ts>2017-07-08T13:32:11.044152</ts>
    <user>U0D4VR7BP</user>
    <text>the structure is `Parser x y` if that helps you making sense of the arrows</text>
  </message>
  <message>
    <ts>2017-07-08T13:32:39.046719</ts>
    <user>U2SR9DL7Q</user>
    <text>oh. &lt;@U0D4VR7BP&gt;  i see it now</text>
  </message>
  <message>
    <ts>2017-07-08T13:32:42.046979</ts>
    <user>U0D4VR7BP</user>
    <text>in this case `Parser fnTakingRoute result`, it seems like</text>
  </message>
  <message>
    <ts>2017-07-08T13:33:10.049490</ts>
    <user>U0D4VR7BP</user>
    <text>I don't know what it does, I'm just guessing at the meaning</text>
  </message>
  <message>
    <ts>2017-07-08T13:36:40.066906</ts>
    <user>U2SR9DL7Q</user>
    <text>to the documentation I go then. I've got it all working for my own site after following the example, but this is the one part where I feel myself not understanding exactly what's going on.</text>
  </message>
  <message>
    <ts>2017-07-08T14:06:13.215367</ts>
    <user>U2M4VPZ9D</user>
    <text>I pushed the code at &lt;https://github.com/kafecho/elm-beats&gt;</text>
  </message>
  <message>
    <ts>2017-07-08T14:24:57.307968</ts>
    <user>U3X6H8X8W</user>
    <text>Hi everyone</text>
  </message>
  <message>
    <ts>2017-07-08T14:25:37.311266</ts>
    <user>U3X6H8X8W</user>
    <text>I have a small questions about how you define your records types for entities that you can create, list, edit remotely.</text>
  </message>
  <message>
    <ts>2017-07-08T14:26:14.314376</ts>
    <user>U3X6H8X8W</user>
    <text>I have a `Product` type with several fields, but this record's `id` field is only present when this is a persisted entity.</text>
  </message>
  <message>
    <ts>2017-07-08T14:26:26.315323</ts>
    <user>U3X6H8X8W</user>
    <text>```type alias Product =
    { id : Int
    , name : String
    , description : String
    , vendorId : Int
    , unitPriceCents : Int
    , internalUnitPriceCents : Int
    }
```</text>
  </message>
  <message>
    <ts>2017-07-08T14:27:47.321360</ts>
    <user>U3X6H8X8W</user>
    <text>do you model the `id` as a `Maybe` and use the same type for persisted and new products?</text>
  </message>
  <message>
    <ts>2017-07-08T14:28:02.322400</ts>
    <user>U3X6H8X8W</user>
    <text>or should I create a separate type for this?</text>
  </message>
  <message>
    <ts>2017-07-08T14:28:53.326710</ts>
    <user>U3X6H8X8W</user>
    <text>or maybe like a union `type Product = PersistedProduct IdType CommonData | NewProduct CommonData`?</text>
  </message>
  <message>
    <ts>2017-07-08T14:29:29.329461</ts>
    <user>U3X6H8X8W</user>
    <text>I want to use the type system as much as possible and don't know if I'm overdoing it :see_no_evil:</text>
  </message>
  <message>
    <ts>2017-07-08T14:31:33.339658</ts>
    <user>U2SR9DL7Q</user>
    <text>It feels a little dubious IMO to have a `Product` type like this with a maybe id. I feel like its trying to make a product and a _template of a product_ be the same. But I may be misunderstanding... In what case would it not be a persistent entity?</text>
  </message>
  <message>
    <ts>2017-07-08T14:33:30.348701</ts>
    <user>U3X6H8X8W</user>
    <text>a non persistent entity is for instance a `Product` being created from a form that I have to convert to a JSON object and then post it to the API to see if it can be saved.</text>
  </message>
  <message>
    <ts>2017-07-08T14:33:59.351139</ts>
    <user>U3X6H8X8W</user>
    <text>for instance I have a button that says `Create new product` and shows me inputs to fill all the data.</text>
  </message>
  <message>
    <ts>2017-07-08T14:34:22.353058</ts>
    <user>U3X6H8X8W</user>
    <text>For that I have like a separate form type? I don't know how to find examples of how to do it.</text>
  </message>
  <message>
    <ts>2017-07-08T14:35:49.360394</ts>
    <user>U3X6H8X8W</user>
    <text>Another case is that I have a real `Product` that I decoded from an API call and now I want to update it, this new data that I haven't sent to the server is not really a `Product` because I don't even now if it's all valid according to the API</text>
  </message>
  <message>
    <ts>2017-07-08T14:36:44.364525</ts>
    <user>U2SR9DL7Q</user>
    <text>Ahhh. I see. I wouldn't call that a product then. Perhaps a product request or something similar. My worry with the maybe Int is that you would need to go to every place where the id is used and ensure you handle the maybe case. But after this initial form request and sending the json, there's no reason why you would want a product without an id.</text>
  </message>
  <message>
    <ts>2017-07-08T14:37:52.369587</ts>
    <user>U2SR9DL7Q</user>
    <text>So you would have product request of product update, and such, but they would be kept separate from an actual product, which is a persistent, validated thing</text>
  </message>
  <message>
    <ts>2017-07-08T14:38:15.371390</ts>
    <user>U0FP80EKB</user>
    <text>I've done where you have the union type and it works okay `type Product = Persisted Id Data | NotPersisted Data`</text>
  </message>
  <message>
    <ts>2017-07-08T14:38:36.372916</ts>
    <user>U0FP80EKB</user>
    <text>It also helps in that you don't run into situations where you have an id, but think you don't</text>
  </message>
  <message>
    <ts>2017-07-08T14:38:40.373243</ts>
    <user>U0FP80EKB</user>
    <text>Make it very clear</text>
  </message>
  <message>
    <ts>2017-07-08T14:39:37.377534</ts>
    <user>U0FP80EKB</user>
    <text>Also, can do something like
`type alias ProductData = {...}`
and
`type Product = Product Id ProductData`
Then you can just build up the product data in your form handler, post it, then take the return value and convert it to `Product`</text>
  </message>
  <message>
    <ts>2017-07-08T14:39:43.377969</ts>
    <user>U3X6H8X8W</user>
    <text>I saw something like this in elm-spa-example: ```type alias CreateConfig record =    { record | otherField : .... }`. All ids in my API are `Int` so maybe having something like `type alias Persisted x = { x | id = Int}`?</text>
  </message>
  <message>
    <ts>2017-07-08T14:40:07.379803</ts>
    <user>U3X6H8X8W</user>
    <text>&lt;@U0FP80EKB&gt; something liek what you mention is what I was thinking of</text>
  </message>
  <message>
    <ts>2017-07-08T14:40:13.380227</ts>
    <user>U0FP80EKB</user>
    <text>I don't like extensible records like that, personally. They always end up causing me headaches, because they are a form of inheritance with all the problems that come with that.</text>
  </message>
  <message>
    <ts>2017-07-08T14:40:43.382648</ts>
    <user>U0FP80EKB</user>
    <text>I'd say pick one, use it, then identify the pain points and migrate to another solution to fix those pain points. It is easier in Elm to refactor than in other languages</text>
  </message>
  <message>
    <ts>2017-07-08T14:41:02.384480</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U0FP80EKB&gt; that last example you wrote looks pretty good, and it's easy to see what the data actually is.</text>
  </message>
  <message>
    <ts>2017-07-08T14:41:20.385976</ts>
    <user>U0FP80EKB</user>
    <text>Every time I use an extensible record, for example, and I do try using them (currently experimenting with using one in our current system), I end up finding they aren't worth the headache, so I migrate away from them</text>
  </message>
  <message>
    <ts>2017-07-08T14:41:43.387682</ts>
    <user>U3X6H8X8W</user>
    <text>Exactly &lt;@U2SR9DL7Q&gt; Also I prefer to use the most "voted" option considering other people experience and probably I never have to pick the other one</text>
  </message>
  <message>
    <ts>2017-07-08T14:42:26.390903</ts>
    <user>U0FP80EKB</user>
    <text>Also, you might want to look at using 
`type Id = Id Int` rather than `type alias Id = Int`</text>
  </message>
  <message>
    <ts>2017-07-08T14:42:33.391461</ts>
    <user>U0FP80EKB</user>
    <text>We started doing this a long time ago and it has been very nice</text>
  </message>
  <message>
    <ts>2017-07-08T14:42:38.391810</ts>
    <user>U638BAUJZ</user>
    <text>Can someone please help me resolve a compiler error?
&lt;https://stackoverflow.com/questions/44989599/how-do-i-initialize-a-value-thats-based-on-a-recursive-type-alias&gt;</text>
  </message>
  <message>
    <ts>2017-07-08T14:43:33.396135</ts>
    <user>U3X6H8X8W</user>
    <text>&lt;@U0FP80EKB&gt; doesn't it become annoying to destructure things all the time?</text>
  </message>
  <message>
    <ts>2017-07-08T14:43:42.396926</ts>
    <user>U0FP80EKB</user>
    <text>no, I only have to destructure it at the api boundary</text>
  </message>
  <message>
    <ts>2017-07-08T14:43:48.397410</ts>
    <user>U0FP80EKB</user>
    <text>The rest of the code uses it just fine</text>
  </message>
  <message>
    <ts>2017-07-08T14:44:08.398988</ts>
    <user>U3X6H8X8W</user>
    <text>for instance to render it in views?</text>
  </message>
  <message>
    <ts>2017-07-08T14:45:01.403280</ts>
    <user>U3X6H8X8W</user>
    <text>&lt;@U638BAUJZ&gt; this usually has to be solved splitting your definitions in different files</text>
  </message>
  <message>
    <ts>2017-07-08T14:45:29.405721</ts>
    <user>U638BAUJZ</user>
    <text>K. I'll try that suggestion.</text>
  </message>
  <message>
    <ts>2017-07-08T14:45:45.406988</ts>
    <user>U0FP80EKB</user>
    <text>Oh, we don't tend to render it in views, but you can. We have a couple helpers</text>
  </message>
  <message>
    <ts>2017-07-08T14:45:51.407476</ts>
    <user>U0FP80EKB</user>
    <text>Here's a gist of the main stuff around it &lt;https://gist.github.com/coreyhaines/5f2a8d15de99ce91adbb10ac855172b1&gt;</text>
  </message>
  <message>
    <ts>2017-07-08T14:45:53.407633</ts>
    <user>U3X6H8X8W</user>
    <text>&lt;@U638BAUJZ&gt; :+1:</text>
  </message>
  <message>
    <ts>2017-07-08T14:46:11.409051</ts>
    <user>U0FP80EKB</user>
    <text>If we do need the value, we use `idValue` to get it</text>
  </message>
  <message>
    <ts>2017-07-08T14:46:44.411648</ts>
    <user>U3X6H8X8W</user>
    <text>ok, great. We have few special types like Id, something for monetary amounts and not much besides that so great, I think I'll try that</text>
  </message>
  <message>
    <ts>2017-07-08T14:46:55.412452</ts>
    <user>U3X6H8X8W</user>
    <text>thanks for the help &lt;@U0FP80EKB&gt; &lt;@U2SR9DL7Q&gt;</text>
  </message>
  <message>
    <ts>2017-07-08T14:47:55.416956</ts>
    <user>U0FP80EKB</user>
    <text>We started using it a while ago, and it has ended up being wonderful.</text>
  </message>
  <message>
    <ts>2017-07-08T14:48:43.420654</ts>
    <user>U0FP80EKB</user>
    <text>We have a lot of lists of items, as well, so we can do something like
`List.filter (Id.idIs idToFind) items`</text>
  </message>
  <message>
    <ts>2017-07-08T14:53:09.441806</ts>
    <user>U2SR9DL7Q</user>
    <text>so I just learned gist exists... instantly bookmarked.</text>
  </message>
  <message>
    <ts>2017-07-08T14:53:34.443896</ts>
    <user>U638BAUJZ</user>
    <text>&lt;@U3X6H8X8W&gt; Won't I still get a circular dependency by splitting the files in which each file relies on the other?</text>
  </message>
  <message>
    <ts>2017-07-08T15:10:50.527285</ts>
    <user>U3X6H8X8W</user>
    <text>can you share the code?</text>
  </message>
  <message>
    <ts>2017-07-08T15:43:08.678328</ts>
    <user>U64M3DF1B</user>
    <text>I am having some trouble wrapping my head around ‘Msg' - or rather applying it to my use case: a small number of fixed _messages_ which are not my problem, and a (potentially large) number of _messages_ being declared dynamically by _loadable_ modules (consider my app a lorry tucking away with milk, eggs, vegetables, a donkeyman, two romas (jypsies) or a letter to be delivered to someones aunt; each ‘parcel' has a set of messages it may ‘send')

I guess my question is: will the Elm Architecture bend enough to allow dynamic  *Msg*  - perhaps running multiple _message pumps_ in parallel, or using some other construct to basically map ‘new' messages on to the Msg union type ?</text>
  </message>
  <message>
    <ts>2017-07-08T15:47:32.698159</ts>
    <user>U601ELFEG</user>
    <text>&lt;@U64M3DF1B&gt; - _dyanamic_ isn't likely to happen.... but distributing your `Msg` types around your modules can be done cleanly, and safely: If each module has a `Msg` type, and associated `update` function.... then you can combine them in a roll-up module:  `type AllMsg = ThingMsg Thing.Msg | BarMsg Bar.Msg | FooMsg Foo.Msg`  then your `update` function looks like:</text>
  </message>
  <message>
    <ts>2017-07-08T15:49:26.706634</ts>
    <user>U635MRFPY</user>
    <text>hi, I am trying to talk to a go webserver from elm but I am having cors issues, even though things work just fine from js (testing using fetch api)</text>
  </message>
  <message>
    <ts>2017-07-08T15:50:04.709547</ts>
    <user>U635MRFPY</user>
    <text>do I need to set specific headers when sending the request or is there something broken with my server?</text>
  </message>
  <message>
    <ts>2017-07-08T15:51:16.715528</ts>
    <user>U64M3DF1B</user>
    <text>&lt;@U601ELFEG&gt; K - hmmm - you mean `update : AllMsg`?</text>
  </message>
  <message>
    <ts>2017-07-08T15:51:26.716229</ts>
    <user>U601ELFEG</user>
    <text>Oh - whoops - yes</text>
  </message>
  <message>
    <ts>2017-07-08T15:51:30.716542</ts>
    <user>U64M3DF1B</user>
    <text>:smile:</text>
  </message>
  <message>
    <ts>2017-07-08T15:51:34.716802</ts>
    <user>U64M3DF1B</user>
    <text>great</text>
  </message>
  <message>
    <ts>2017-07-08T15:51:48.717870</ts>
    <user>U601ELFEG</user>
    <text>or just rename `AllMsg` to `Msg`</text>
  </message>
  <message>
    <ts>2017-07-08T15:51:59.718825</ts>
    <user>U64M3DF1B</user>
    <text>sure - do you see any way to (mis) use the port construct</text>
  </message>
  <message>
    <ts>2017-07-08T15:52:00.718918</ts>
    <user>U601ELFEG</user>
    <text>remember that each module can have a `Msg` and `update`</text>
  </message>
  <message>
    <ts>2017-07-08T15:52:18.720272</ts>
    <user>U601ELFEG</user>
    <text>in this way, adding a new module is just one line to the top level `Msg` and one line to `update`</text>
  </message>
  <message>
    <ts>2017-07-08T15:52:52.722868</ts>
    <user>U601ELFEG</user>
    <text>I can think of all kinds of ways to mis use the `port` construct.... :stuck_out_tongue_winking_eye:</text>
  </message>
  <message>
    <ts>2017-07-08T15:52:57.723233</ts>
    <user>U64M3DF1B</user>
    <text>perhaps build a ‘generic' protocol that any ‘stray' module could implement and thus be "allowed" to have it's messages processed?</text>
  </message>
  <message>
    <ts>2017-07-08T15:53:04.723805</ts>
    <user>U64M3DF1B</user>
    <text>:smile:</text>
  </message>
  <message>
    <ts>2017-07-08T15:53:25.725289</ts>
    <user>U64M3DF1B</user>
    <text>but I get your BarMsg thing!</text>
  </message>
  <message>
    <ts>2017-07-08T15:53:28.725562</ts>
    <user>U64M3DF1B</user>
    <text>it's a start</text>
  </message>
  <message>
    <ts>2017-07-08T15:53:35.726053</ts>
    <user>U64M3DF1B</user>
    <text>thx!</text>
  </message>
  <message>
    <ts>2017-07-08T15:53:39.726301</ts>
    <user>U601ELFEG</user>
    <text>Not really for that, thought: No matter what, back in Elm, you're going to have add something "global" = be it a `port` or a `Sub`</text>
  </message>
  <message>
    <ts>2017-07-08T15:53:55.727408</ts>
    <user>U601ELFEG</user>
    <text>and the method I gave I think is the least amount of typing you'd have to do</text>
  </message>
  <message>
    <ts>2017-07-08T15:54:04.728040</ts>
    <user>U64M3DF1B</user>
    <text>kk</text>
  </message>
  <message>
    <ts>2017-07-08T15:55:13.733115</ts>
    <user>U601ELFEG</user>
    <text>Wonder how people deal with blobs of text or markup that I want in my page (like dialog text or help text) -</text>
  </message>
  <message>
    <ts>2017-07-08T15:55:27.734304</ts>
    <user>U601ELFEG</user>
    <text>I should say, static blobs -</text>
  </message>
  <message>
    <ts>2017-07-08T15:55:37.735102</ts>
    <user>U5J0H2NS2</user>
    <text>&lt;@U601ELFEG&gt;, I think you miss Cmd.map-s from your main update, don't you?</text>
  </message>
  <message>
    <ts>2017-07-08T15:56:07.737706</ts>
    <user>U601ELFEG</user>
    <text>I don't want to author them in elm as strings or `Html` functions -</text>
  </message>
  <message>
    <ts>2017-07-08T15:56:46.740946</ts>
    <user>U601ELFEG</user>
    <text>&lt;@U5J0H2NS2&gt;   - ah, yup</text>
  </message>
  <message>
    <ts>2017-07-08T15:58:41.749577</ts>
    <user>U601ELFEG</user>
    <text>though you could go to the trouble to make any module able to return `Cmd Msg` for the overall type - but takes more work, I suppose (have to split the modules into the `Msg` type modules and the code modules)</text>
  </message>
  <message>
    <ts>2017-07-08T16:04:06.776028</ts>
    <user>U64M3DF1B</user>
    <text>&lt;@U5J0H2NS2&gt; &lt;@U601ELFEG&gt; - I feel the :cold_sweat: Even though I can (as per mzero) send off a msg to the Thing.module - my update signature is wrong (Thing,module will return a Thing.Msg) :disappointed:</text>
  </message>
  <message>
    <ts>2017-07-08T16:06:42.788464</ts>
    <user>U5J0H2NS2</user>
    <text>No problem, you just have to map it via Cmd.map</text>
  </message>
  <message>
    <ts>2017-07-08T16:11:34.810078</ts>
    <user>U635MRFPY</user>
    <text>working now :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-08T16:15:05.825448</ts>
    <user>U64M3DF1B</user>
    <text>&lt;@U5J0H2NS2&gt; K - thx</text>
  </message>
  <message>
    <ts>2017-07-08T16:17:03.834649</ts>
    <user>U5J0H2NS2</user>
    <text>Before splitting everything, take a look at this presentation, if you haven't before : &lt;https://www.youtube.com/watch?v=nE9jLacXOys&amp;amp;feature=youtu.be&gt;</text>
  </message>
  <message>
    <ts>2017-07-08T16:47:26.970192</ts>
    <user>U2Q5GJNTB</user>
    <text>is there an idiomatic way to check which of a given list of ranges cover a given value. I have 6 ranges and could just  do 5 "else if" conditions but I am wondering if there is another way</text>
  </message>
  <message>
    <ts>2017-07-08T16:48:39.974890</ts>
    <user>U5J0H2NS2</user>
    <text>List.filter?</text>
  </message>
  <message>
    <ts>2017-07-08T22:32:14.206736</ts>
    <user>U0JFGGZS6</user>
    <text>tkshillz: Unfortunately, it's one of those cases it only makes sense if you read through the implementation, it's kind of an artifact of that.  But I highly recommend reading through it if you have the time.  

It's easier to get a feel for the types if you start by looking just at a single segment parser, like `int : Parser (Int -&amp;gt; a) a`.  The way I think of it, the `Int -&amp;gt; a` is the function that (assuming the parsing as Int is successful) "pushes forward" the internal state, so it parses/consumes the current segment of the URL and returns a new function for consuming the next segment (the `a`). 

When you chain together parsers, it kind of builds up this internal function like `a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; Route`, similar to how an applicative works if you are familiar with that.

Anyway, when you get to the top level, `matchers : Parser (Route -&amp;gt; a) a`,  I think that's saying simply that you _could_ stick another parser after this one, or in other words use this parser in the middle of a chain somewhere. But, of course you'd never want to do that, since you are just interested in getting the `Route` out of it.

So you could rewrite any top-level parser type as `matchers : Parser (Route -&amp;gt; Route) Route` ... which may be even more confusing :slightly_smiling_face:  But again it makes sense if you look at the implementation: the top-level parser is fed in the identity function as a value to start with.  &lt;https://github.com/evancz/url-parser/blob/2.0.1/src/UrlParser.elm#L366&gt;

Hope this makes some vague bit of sense :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-08T23:04:21.305135</ts>
    <user>U2SR9DL7Q</user>
    <text>more sense than you think, although less than you'd hope.</text>
  </message>
  <message>
    <ts>2017-07-08T23:05:01.307121</ts>
    <user>U2SR9DL7Q</user>
    <text>elm makes for a gentler introduction to the mathematics behind some FP constructs that say, Haskell</text>
  </message>
  <message>
    <ts>2017-07-08T23:05:46.309420</ts>
    <user>U2SR9DL7Q</user>
    <text>but some of it is still a bit opaque.</text>
  </message>
  <message>
    <ts>2017-07-08T23:37:46.401059</ts>
    <user>U64MK7215</user>
    <text>hey is there any sample elm code for taking input from a text box and displaying it?</text>
  </message>
  <message>
    <ts>2017-07-08T23:56:05.452778</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U64MK7215&gt; yes</text>
  </message>
  <message>
    <ts>2017-07-08T23:57:02.455387</ts>
    <user>U3HQVHERX</user>
    <text>&lt;http://elm-lang.org/examples/field&gt;</text>
  </message>
  <message>
    <ts>2017-07-08T23:58:52.460418</ts>
    <user>U3HQVHERX</user>
    <text>I built a little data structure that I'll eventually use for browsing time series. Does this look ok? Is there already something out there? I'm calling it `ShiftList`.... &lt;https://ellie-app.com/3Hqfm89DRS8a1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T00:07:13.488264</ts>
    <user>U64MK7215</user>
    <text>how do i trigger 2 events with onclick?</text>
  </message>
  <message>
    <ts>2017-07-09T00:07:45.490018</ts>
    <user>U1ZFF0E5P</user>
    <text>trigger just 1 event, it's in your update function that you can do multiple things</text>
  </message>
  <message>
    <ts>2017-07-09T00:07:54.490550</ts>
    <user>U1ZFF0E5P</user>
    <text>what are you trying to achieve?</text>
  </message>
  <message>
    <ts>2017-07-09T00:09:49.495840</ts>
    <user>U64MK7215</user>
    <text>i see.
thanks.
I want to display the text entered in the box and reset it using submit and reset buttons</text>
  </message>
  <message>
    <ts>2017-07-09T00:22:50.536402</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U64MK7215&gt; &lt;https://ellie-app.com/3Hqfm89DRS8a1/1&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T00:24:09.540161</ts>
    <user>U3HQVHERX</user>
    <text>&lt;https://ellie-app.com/3Hqfm89DRS8a1/1&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T00:24:24.540864</ts>
    <user>U3HQVHERX</user>
    <text>no need for the alias in that simple example</text>
  </message>
  <message>
    <ts>2017-07-09T00:30:37.559203</ts>
    <user>U6589U6DN</user>
    <text>Is there a tool to bootstrap applications? I've run through the tutorial following the elm-architecture stuff and want to start playing around with my own ideas and want to be able to create applications quickly.</text>
  </message>
  <message>
    <ts>2017-07-09T00:44:43.598894</ts>
    <user>U153UK3FA</user>
    <text>What kind of bootstrapping are you looking for?</text>
  </message>
  <message>
    <ts>2017-07-09T00:49:31.611597</ts>
    <user>U6589U6DN</user>
    <text>Anything - I'm a rails developer so most of the newer front-end tooling built around npm is not familiar to me. I'd prefer to worry about my application than setting up folders and build tools.</text>
  </message>
  <message>
    <ts>2017-07-09T00:50:19.613681</ts>
    <user>U5XC2FJ1Y</user>
    <text>can anyone tell me where i'm screwing up in this ellie? &lt;https://ellie-app.com/3Hq96fJSftQa1/4&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T01:07:57.663965</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U6589U6DN&gt; what tooling do you want? wants the big deal with creating folders? elm-make is what builds your elm. Maybe check out &lt;https://elmseeds.thaterikperson.com/elm-webpack-extras&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T01:08:33.665577</ts>
    <user>U3HQVHERX</user>
    <text>hrb90: what supposed to be happening?</text>
  </message>
  <message>
    <ts>2017-07-09T01:08:48.666213</ts>
    <user>U6589U6DN</user>
    <text>in rails I type `rails new &amp;lt;project&amp;gt;` to bootstrap a project.</text>
  </message>
  <message>
    <ts>2017-07-09T01:10:43.671728</ts>
    <user>U3HQVHERX</user>
    <text>so...?</text>
  </message>
  <message>
    <ts>2017-07-09T01:10:53.672124</ts>
    <user>U6589U6DN</user>
    <text>With `ember-cli` I can run `ember new &amp;lt;appname&amp;gt;` to start a new app.</text>
  </message>
  <message>
    <ts>2017-07-09T01:10:59.672490</ts>
    <user>U6589U6DN</user>
    <text>Is there an elm equivalent?</text>
  </message>
  <message>
    <ts>2017-07-09T01:11:04.672808</ts>
    <user>U3HQVHERX</user>
    <text>oh, SwitchColors is getting triggered 2 times for some reason</text>
  </message>
  <message>
    <ts>2017-07-09T01:11:51.674915</ts>
    <user>U1ZFF0E5P</user>
    <text>elm comes with something called elm-reactor</text>
  </message>
  <message>
    <ts>2017-07-09T01:11:58.675199</ts>
    <user>U1ZFF0E5P</user>
    <text>I'd just use this to get started</text>
  </message>
  <message>
    <ts>2017-07-09T01:11:59.675254</ts>
    <user>U1ZFF0E5P</user>
    <text>&lt;https://guide.elm-lang.org/install.html&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T01:12:39.677070</ts>
    <user>U6589U6DN</user>
    <text>yep - that seems to run a development server but not create anything to actually run?</text>
  </message>
  <message>
    <ts>2017-07-09T01:13:01.678022</ts>
    <user>U3HQVHERX</user>
    <text>have you  used `elm-make`?</text>
  </message>
  <message>
    <ts>2017-07-09T01:13:46.679898</ts>
    <user>U6589U6DN</user>
    <text>`elm-make` seems to compile an existing app rather than setting up the structure of an app? I feel like I'm missing something.</text>
  </message>
  <message>
    <ts>2017-07-09T01:14:01.680539</ts>
    <user>U3HQVHERX</user>
    <text>you just want some boilerplate?</text>
  </message>
  <message>
    <ts>2017-07-09T01:16:26.687448</ts>
    <user>U6589U6DN</user>
    <text>I'm getting tired of copying things out of the `elm-architecture` project and setting it up just right. Is there a recommend, or supported way of bootstrapping an application?</text>
  </message>
  <message>
    <ts>2017-07-09T01:16:37.687977</ts>
    <user>U3HQVHERX</user>
    <text>what kind of application?</text>
  </message>
  <message>
    <ts>2017-07-09T01:16:41.688184</ts>
    <user>U3HQVHERX</user>
    <text>a single page app?</text>
  </message>
  <message>
    <ts>2017-07-09T01:17:07.689406</ts>
    <user>U6589U6DN</user>
    <text>Can I not make this decision after starting the app?</text>
  </message>
  <message>
    <ts>2017-07-09T01:18:11.692256</ts>
    <user>U5XC2FJ1Y</user>
    <text>yeah exactly</text>
  </message>
  <message>
    <ts>2017-07-09T01:19:00.694435</ts>
    <user>U3HQVHERX</user>
    <text>as far as I know what you are asking for does not exist as part of the stuff that you get when you install elm.</text>
  </message>
  <message>
    <ts>2017-07-09T01:19:50.696612</ts>
    <user>U3HQVHERX</user>
    <text>&lt;https://github.com/rtfeldman/elm-spa-example&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T01:20:51.699520</ts>
    <user>U23SA861Y</user>
    <text>its seems to  be  the opposite</text>
  </message>
  <message>
    <ts>2017-07-09T01:21:06.700242</ts>
    <user>U3HQVHERX</user>
    <text>?</text>
  </message>
  <message>
    <ts>2017-07-09T01:22:01.703084</ts>
    <user>U3HQVHERX</user>
    <text>`rails` and `ember-cli` generate code, migrate databases, run dev servers, right?</text>
  </message>
  <message>
    <ts>2017-07-09T01:22:21.703985</ts>
    <user>U3HQVHERX</user>
    <text>it seems you are looking for "scaffolding"?</text>
  </message>
  <message>
    <ts>2017-07-09T01:22:28.704304</ts>
    <user>U3HQVHERX</user>
    <text>i think that's the rails term</text>
  </message>
  <message>
    <ts>2017-07-09T01:22:29.704344</ts>
    <user>U6589U6DN</user>
    <text>Once a app has been created they do.</text>
  </message>
  <message>
    <ts>2017-07-09T01:22:46.705179</ts>
    <user>U6589U6DN</user>
    <text>But thanks for answering the question. I was wondering if I was missing something. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T01:22:51.705417</ts>
    <user>U3HQVHERX</user>
    <text>`touch Main.elm`</text>
  </message>
  <message>
    <ts>2017-07-09T01:22:54.705543</ts>
    <user>U3HQVHERX</user>
    <text>done.</text>
  </message>
  <message>
    <ts>2017-07-09T01:22:55.705572</ts>
    <user>U3HQVHERX</user>
    <text>:wink:</text>
  </message>
  <message>
    <ts>2017-07-09T01:23:22.706637</ts>
    <user>U3HQVHERX</user>
    <text>put your view, model, update subscriptions in there</text>
  </message>
  <message>
    <ts>2017-07-09T01:23:37.707383</ts>
    <user>U3HQVHERX</user>
    <text>and then break things up according to the specific domain you are working in</text>
  </message>
  <message>
    <ts>2017-07-09T01:23:51.707937</ts>
    <user>U23SA861Y</user>
    <text>the think hes looking for is so  fundamenal that every elm program includes it</text>
  </message>
  <message>
    <ts>2017-07-09T01:24:10.708787</ts>
    <user>U3HQVHERX</user>
    <text>TEA itself?</text>
  </message>
  <message>
    <ts>2017-07-09T01:24:14.708954</ts>
    <user>U6589U6DN</user>
    <text>I would rather start my app like I intend to continue working with it. That app you linked me to has everything split up into domains already.</text>
  </message>
  <message>
    <ts>2017-07-09T01:25:03.711128</ts>
    <user>U23SA861Y</user>
    <text>exactly, thevtea is baked in.</text>
  </message>
  <message>
    <ts>2017-07-09T01:25:31.712484</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U6589U6DN&gt; i think you don't need to worry about it with Elm.</text>
  </message>
  <message>
    <ts>2017-07-09T01:26:24.715026</ts>
    <user>U3HQVHERX</user>
    <text>rails and ember are built with more general purpose languages</text>
  </message>
  <message>
    <ts>2017-07-09T01:26:33.715427</ts>
    <user>U3HQVHERX</user>
    <text>elm is specifically for front end web apps</text>
  </message>
  <message>
    <ts>2017-07-09T01:26:37.715611</ts>
    <user>U6589U6DN</user>
    <text>20+ years of programming tells me I _do_ need to worry about it,</text>
  </message>
  <message>
    <ts>2017-07-09T01:27:13.717212</ts>
    <user>U6589U6DN</user>
    <text>and maybe you're right that I shouldn't concern myself with it, but if I don't address my concern I will be distracted by it every step of the way..</text>
  </message>
  <message>
    <ts>2017-07-09T01:27:38.718160</ts>
    <user>U23SA861Y</user>
    <text>seriously you are over thinking it</text>
  </message>
  <message>
    <ts>2017-07-09T01:28:23.719886</ts>
    <user>U23SA861Y</user>
    <text>take a step back and implement something simple</text>
  </message>
  <message>
    <ts>2017-07-09T01:30:01.723614</ts>
    <user>U3HQVHERX</user>
    <text>how often are you creating new applications? could you create a basic structure you like and put it in a "starter" repo?</text>
  </message>
  <message>
    <ts>2017-07-09T01:30:29.725335</ts>
    <user>U6589U6DN</user>
    <text>I am implementing something simple - since I'm doing something simple I would like to explore a technique that is used in a larger application.</text>
  </message>
  <message>
    <ts>2017-07-09T01:32:18.730444</ts>
    <user>U3HQVHERX</user>
    <text>ah</text>
  </message>
  <message>
    <ts>2017-07-09T01:32:23.730634</ts>
    <user>U3HQVHERX</user>
    <text>i think i see where you are coming from here</text>
  </message>
  <message>
    <ts>2017-07-09T01:32:34.731172</ts>
    <user>U3HQVHERX</user>
    <text>so, with Elm you don't really need to worry about that</text>
  </message>
  <message>
    <ts>2017-07-09T01:32:48.731705</ts>
    <user>U23SA861Y</user>
    <text>fp is going to be different</text>
  </message>
  <message>
    <ts>2017-07-09T01:33:09.732623</ts>
    <user>U3HQVHERX</user>
    <text>you can literally start with `Main.elm`, compile that to `app.js` embed it in an `index.html`</text>
  </message>
  <message>
    <ts>2017-07-09T01:33:19.733018</ts>
    <user>U3HQVHERX</user>
    <text>then when you are ready to grow you just... grow... follow the compiler...</text>
  </message>
  <message>
    <ts>2017-07-09T01:33:48.734219</ts>
    <user>U3HQVHERX</user>
    <text>i know because I started with a small `Main.elm` file, and using the same patterns now have a ~6,000 line elm app</text>
  </message>
  <message>
    <ts>2017-07-09T01:34:14.735478</ts>
    <user>U3HQVHERX</user>
    <text>Model / View / Update is the pattern</text>
  </message>
  <message>
    <ts>2017-07-09T01:35:30.738872</ts>
    <user>U3HQVHERX</user>
    <text>and it's maintainable</text>
  </message>
  <message>
    <ts>2017-07-09T01:36:41.742144</ts>
    <user>U3HQVHERX</user>
    <text>you can start with `Html.beginnerProgram` and build out your entire app... then if you suddenly need to actually do something useful with an Http request, change to `Html.program` and it will walk you through all the changes you need to make in your code</text>
  </message>
  <message>
    <ts>2017-07-09T01:37:07.743245</ts>
    <user>U1ZFF0E5P</user>
    <text>evan gave a really good talk titled "the life of a file" &lt;https://www.youtube.com/watch?v=2ihTgEYiKpI&amp;amp;t=1s&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T01:38:17.745838</ts>
    <user>U3HQVHERX</user>
    <text>it's totally fine to start out simple, small and naïve and then grow from there. a fundamental understanding of the architecture is important, but the compilers got your back and the language is so simple, it's hard to do anything completely wacky</text>
  </message>
  <message>
    <ts>2017-07-09T01:40:01.749707</ts>
    <user>U3HQVHERX</user>
    <text>by "simple" i mean "small and strict"</text>
  </message>
  <message>
    <ts>2017-07-09T01:40:16.750428</ts>
    <user>U3HQVHERX</user>
    <text>only immutable data and pure functions</text>
  </message>
  <message>
    <ts>2017-07-09T01:53:01.783518</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U6589U6DN&gt; i can relate to the feeling of wanting a more prescribed way/initial structure - years ago i worked with a legacy PHP application that did not use any sort of framework (was likely "started small and then grew ugly"), then I moved to django which is very batteries included. neither used helpful compilers or types, so it's been quite a paradigm shift. Elm's fun and has a nice learning curve and from my experience is very developer friendly</text>
  </message>
  <message>
    <ts>2017-07-09T01:54:56.788205</ts>
    <user>U6589U6DN</user>
    <text>I want to experiment with a bunch of different things as quickly as possible. Hence wanting a bootstrapping/boilerplate tool. I learn best by playing and reflecting so being told to just accept something isn't satisfying.</text>
  </message>
  <message>
    <ts>2017-07-09T01:55:32.789865</ts>
    <user>U2Z9KFTN3</user>
    <text>Has anyone been encountering problems with upgrading elm-test? (And, the associated node-test-runner, I suppose?)</text>
  </message>
  <message>
    <ts>2017-07-09T01:59:00.798940</ts>
    <user>U3SJEDR96</user>
    <text>Edit tests/elm-package.json - you should remove the node-test-runner dependency there, and bump the major of elm-community/elm-test to 5.0.0 &amp;lt;= v &amp;lt; 6.0.0</text>
  </message>
  <message>
    <ts>2017-07-09T02:05:00.816486</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U6589U6DN&gt; there a few starter/template/bootstrap type tools around, but they tend to be opiniated and fit specific use-cases. I.e. a starter for webpack projects, a template for a page-based architecture, one which assumes sass+coffeescript for extra deps, etc. You may be interested in those, tho I'm very wary of a one-size-fits-all solution.</text>
  </message>
  <message>
    <ts>2017-07-09T02:05:56.819273</ts>
    <user>U2Z9KFTN3</user>
    <text>&lt;@U3SJEDR96&gt; I had already removed the node-test-runner dependency. As for elm-test to 5 &amp;lt;= v &amp;lt; 6, elm-test proceeds to stop being able to find elm-core.</text>
  </message>
  <message>
    <ts>2017-07-09T02:06:26.820831</ts>
    <user>U2Z9KFTN3</user>
    <text>Anyway, a fresh directory and running `elm-test init` chokes too.</text>
  </message>
  <message>
    <ts>2017-07-09T02:07:26.823707</ts>
    <user>U3SJEDR96</user>
    <text>Hmmm.. what happens if you remove the `elm-stuff` and `tests/elm-stuff` folder?</text>
  </message>
  <message>
    <ts>2017-07-09T02:07:29.823848</ts>
    <user>U2Z9KFTN3</user>
    <text>`elm-test init` drops "elm-community/elm-test": "4.0.0 &amp;lt;= v &amp;lt; 5.0.0"</text>
  </message>
  <message>
    <ts>2017-07-09T02:07:52.824894</ts>
    <user>U2Z9KFTN3</user>
    <text>&lt;@U3SJEDR96&gt; I did. It finishes the downloads and then chokes saying it can't find them.</text>
  </message>
  <message>
    <ts>2017-07-09T02:08:18.826384</ts>
    <user>U3SJEDR96</user>
    <text>What's the output of elm-test --version?</text>
  </message>
  <message>
    <ts>2017-07-09T02:09:59.830638</ts>
    <user>U2Z9KFTN3</user>
    <text>0.27.5</text>
  </message>
  <message>
    <ts>2017-07-09T02:10:54.833614</ts>
    <user>U3SJEDR96</user>
    <text>Hmmm, try `yarn elm-test -- --version`</text>
  </message>
  <message>
    <ts>2017-07-09T02:11:04.834236</ts>
    <user>U2Z9KFTN3</user>
    <text>Oh, hahaha</text>
  </message>
  <message>
    <ts>2017-07-09T02:11:18.835037</ts>
    <user>U2Z9KFTN3</user>
    <text>Thanks, I'm an idiot.</text>
  </message>
  <message>
    <ts>2017-07-09T02:11:22.835200</ts>
    <user>U2Z9KFTN3</user>
    <text>0.18.7</text>
  </message>
  <message>
    <ts>2017-07-09T02:11:26.835393</ts>
    <user>U2Z9KFTN3</user>
    <text>I was scratching my head there too.</text>
  </message>
  <message>
    <ts>2017-07-09T02:11:40.836090</ts>
    <user>U2Z9KFTN3</user>
    <text>I was like, wtf, version is ^0.18.7 in package.json</text>
  </message>
  <message>
    <ts>2017-07-09T02:13:26.840829</ts>
    <user>U3SJEDR96</user>
    <text>Okay. So, let's see, step by step.. can you: remove tests/ altogether, remove elm-stuff, and tell me what dependencies you have in elm-package.json?</text>
  </message>
  <message>
    <ts>2017-07-09T02:15:01.844720</ts>
    <user>U3SJEDR96</user>
    <text>(also, it should indeed be 4.0.0 &amp;lt;= v &amp;lt; 5.0.0 for elm-community/elm-test. My bad :))</text>
  </message>
  <message>
    <ts>2017-07-09T02:16:07.847968</ts>
    <user>U2Z9KFTN3</user>
    <text>Sure, one sec. I'm creating a whole new directory where I only have my package.json / elm-package.json pulled across.</text>
  </message>
  <message>
    <ts>2017-07-09T02:29:28.883806</ts>
    <user>U3HQVHERX</user>
    <text>len: if you like playing and reflecting, check out &lt;https://ellie-app.com/new&gt; if you want boilerplate, search for elm starter apps and yoemen. there templates out there.</text>
  </message>
  <message>
    <ts>2017-07-09T02:33:28.895156</ts>
    <user>U2Z9KFTN3</user>
    <text>OK. Put elm-community/elm-test back to 4 &amp;lt;= v &amp;lt;= 5</text>
  </message>
  <message>
    <ts>2017-07-09T02:33:52.896072</ts>
    <user>U2Z9KFTN3</user>
    <text>Deleted node_modules, elm-stuff, and tests/elm-stuff</text>
  </message>
  <message>
    <ts>2017-07-09T02:34:15.897105</ts>
    <user>U2Z9KFTN3</user>
    <text>Removed all dependencies except the default.</text>
  </message>
  <message>
    <ts>2017-07-09T02:34:17.897169</ts>
    <user>U2Z9KFTN3</user>
    <text>Finally working.</text>
  </message>
  <message>
    <ts>2017-07-09T02:34:21.897312</ts>
    <user>U2Z9KFTN3</user>
    <text>I'm not going to question it.</text>
  </message>
  <message>
    <ts>2017-07-09T02:34:29.897620</ts>
    <user>U2Z9KFTN3</user>
    <text>commit and push to CI. How frustrating.</text>
  </message>
  <message>
    <ts>2017-07-09T02:34:55.898631</ts>
    <user>U2Z9KFTN3</user>
    <text>This was a minor version upgrade... :disappointed:</text>
  </message>
  <message>
    <ts>2017-07-09T02:37:23.905234</ts>
    <user>U2Z9KFTN3</user>
    <text>&lt;@U3SJEDR96&gt; Thank you for your help!</text>
  </message>
  <message>
    <ts>2017-07-09T02:40:44.913955</ts>
    <user>U3SJEDR96</user>
    <text>Well, in semantic versioning world, anything pre `1.0.0` can do backwards compatibility breaks in even patch-versions; and the npm `elm-test` tries to mirror the Elm version it works for in its minor and major parts; so `0.18.x` should work with elm 0.18. Nevertheless, yeah, it was a somewhat painful upgrade, and we're working towards ensuring such surprises don't happen anymore. The project now has a changelog (&lt;https://github.com/rtfeldman/node-test-runner/blob/master/CHANGELOG.md&gt;) and if we ever need manual steps to upgrade a project again, we'll definitely look into having the executable tool attempt to guide the user through that process :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T02:45:15.925832</ts>
    <user>U2Z9KFTN3</user>
    <text>Fair enough on the semver point.</text>
  </message>
  <message>
    <ts>2017-07-09T02:46:07.928560</ts>
    <user>U2Z9KFTN3</user>
    <text>There was no pointer to the changelog as the source of upgrade instructions. And, having it off in node-test-runner is a bit surprising too; since I was focused on elm-test. Took a while to dig that deep. sigh. Yeah.</text>
  </message>
  <message>
    <ts>2017-07-09T02:46:11.928751</ts>
    <user>U2Z9KFTN3</user>
    <text>Cheers!</text>
  </message>
  <message>
    <ts>2017-07-09T04:30:37.238758</ts>
    <user>U6531GSTW</user>
    <text>Hello, can someone help me a json decoder for months and days&amp;gt;?</text>
  </message>
  <message>
    <ts>2017-07-09T04:30:43.239078</ts>
    <user>U6531GSTW</user>
    <text>type alias Date = {
    aTermin: Date.Date,
    aMonth: Date.Month
	}</text>
  </message>
  <message>
    <ts>2017-07-09T04:31:11.240917</ts>
    <user>U6531GSTW</user>
    <text>i found some packages for it, but am not able to use it</text>
  </message>
  <message>
    <ts>2017-07-09T04:51:34.305654</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://ellie-app.com/3HvJVvLtnyWa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T04:51:44.306119</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U6531GSTW&gt;  ^</text>
  </message>
  <message>
    <ts>2017-07-09T05:09:09.361426</ts>
    <user>U641LDZFU</user>
    <text>Moin Moin!</text>
  </message>
  <message>
    <ts>2017-07-09T05:10:09.364460</ts>
    <user>U641LDZFU</user>
    <text>I am having some issues with circular dependency caused (I think) by having a field in a record containing List (Html Msg)</text>
  </message>
  <message>
    <ts>2017-07-09T05:10:16.364817</ts>
    <user>U641LDZFU</user>
    <text>&lt;https://gist.github.com/allansideas/4e206abab9b158c6eb03c0714d5aa277&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T05:11:47.370252</ts>
    <user>U641LDZFU</user>
    <text>An expample of the reason I need Html Msg as the "content" would be a Message could contain text - then a link that fires off a Msg - then more text</text>
  </message>
  <message>
    <ts>2017-07-09T05:19:51.396118</ts>
    <user>U3SJEDR96</user>
    <text>I don't have time to look at this in detail right now, but my advice would be to try and make those `content` elements be a datastructure that describes _what_ to render, rather than the actual virtual-dom representation of that rendering, and making a `viewContent : Msg -&amp;gt; (List Content) -&amp;gt; Html Msg` function where you explicitly pass in what message to use when someone clicks a link. Content could be something like `type Content = Text String | Link String String` which could then be used like `[ Text "some text", Link "&lt;https://google.com&gt;" "a link", Text "some more text" ]`. Basically, make your data data, and your view something that can take this data and turn it into html.</text>
  </message>
  <message>
    <ts>2017-07-09T05:21:19.401017</ts>
    <user>U641LDZFU</user>
    <text>Awesome, I will have a crack at that then :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T05:21:23.401196</ts>
    <user>U641LDZFU</user>
    <text>thanks!</text>
  </message>
  <message>
    <ts>2017-07-09T05:28:26.423664</ts>
    <user>U62UFEG4D</user>
    <text>Good morning elm people ! 

I have install elm-format but it looks like the binary is `elm-format-0.18`, however my editors (emacs, atom) expect it to be `elm-format`. Did you experience similar issue ? If so, how did you solve it ?</text>
  </message>
  <message>
    <ts>2017-07-09T05:32:36.437837</ts>
    <user>U641LDZFU</user>
    <text>could you create a symlink that points to that executable?</text>
  </message>
  <message>
    <ts>2017-07-09T05:34:49.444289</ts>
    <user>U3SJEDR96</user>
    <text>Using `brew` you do indeed get that name. Using `npm -g i`, you get a proper `elm-format`. As for editors, if you do decide to use the `brew` version, in atom at least you can configure it to look for `elm-format-0.18`. Not sure about emacs :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T05:35:27.446223</ts>
    <user>U3SJEDR96</user>
    <text>another "advantage" of going the `npm` route is that you can try out the experimental version `npm -g i elm-format@exp`</text>
  </message>
  <message>
    <ts>2017-07-09T05:39:56.459468</ts>
    <user>U62UFEG4D</user>
    <text>&lt;@U641LDZFU&gt;  I indeed considered the symlink options but it seems a bit overkill to me. &lt;@U3SJEDR96&gt; using brew was my mistake, I have switched to `npm` and all work now as expected. Thanks you all for the swift replies!</text>
  </message>
  <message>
    <ts>2017-07-09T05:40:48.462763</ts>
    <user>U3SJEDR96</user>
    <text>It's a perfectly valid installation method, but yeah, it means you also get the formatter for `0.17` code which you (hopefully) aren't dealing with</text>
  </message>
  <message>
    <ts>2017-07-09T06:54:38.699266</ts>
    <user>U604S603Y</user>
    <text>Another Elm SPA question: I'm outputting a command to load some data when the URL changes to a subpage. This works fine. But reloading with the URL-hash already set to that page does not trigger the data request although I'm doing it in a UrlChanged message handler in the update function. But UrlChanged is never called when starting with a URL with a hash.
I tried to output a Cmd in the end of the init function where I call UrlChanged with the current (first) location, but I can't get it to work</text>
  </message>
  <message>
    <ts>2017-07-09T06:55:36.702474</ts>
    <user>U604S603Y</user>
    <text>as in "I don't know how to create a Cmd that triggers the update function with a Message I want"</text>
  </message>
  <message>
    <ts>2017-07-09T06:57:45.709555</ts>
    <user>U641LDZFU</user>
    <text>I am a complete noob</text>
  </message>
  <message>
    <ts>2017-07-09T06:58:01.710323</ts>
    <user>U641LDZFU</user>
    <text>But when I was having trouble with Cmd in update</text>
  </message>
  <message>
    <ts>2017-07-09T06:58:11.710907</ts>
    <user>U641LDZFU</user>
    <text>I was able to solve it by calling update recursively</text>
  </message>
  <message>
    <ts>2017-07-09T06:58:43.712695</ts>
    <user>U641LDZFU</user>
    <text>a-la: update (TransitionStoryNode transition) nextModel</text>
  </message>
  <message>
    <ts>2017-07-09T06:58:50.713022</ts>
    <user>U641LDZFU</user>
    <text>TransitionStoryNode being the message</text>
  </message>
  <message>
    <ts>2017-07-09T06:59:08.714005</ts>
    <user>U641LDZFU</user>
    <text>Could this help?</text>
  </message>
  <message>
    <ts>2017-07-09T06:59:35.715451</ts>
    <user>U641LDZFU</user>
    <text>(the update (TransitionStoryNode transition) nextModel) was called in the update branch from another Msg</text>
  </message>
  <message>
    <ts>2017-07-09T07:03:23.729163</ts>
    <user>U0CLDU8UB</user>
    <text>&lt;@U604S603Y&gt; If you're using &lt;http://package.elm-lang.org/packages/elm-lang/navigation/2.1.0/Navigation#program&gt;, then `init` gets the initial `Location` as an argument.</text>
  </message>
  <message>
    <ts>2017-07-09T07:04:07.731314</ts>
    <user>U0CLDU8UB</user>
    <text>So do whatever the `UrlChanged` update branch would do also in init.</text>
  </message>
  <message>
    <ts>2017-07-09T07:05:03.734213</ts>
    <user>U0CLDU8UB</user>
    <text>Do not try to make a `UrlChanged` message, just do the thing you want to do :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T07:09:36.749275</ts>
    <user>U604S603Y</user>
    <text>yay, that works! thanks &lt;@U0CLDU8UB&gt; 
and I'll keep the suggestion of &lt;@U641LDZFU&gt; in mind for the future, too</text>
  </message>
  <message>
    <ts>2017-07-09T07:13:34.762670</ts>
    <user>U5QJW0DDE</user>
    <text>is the process that Elm uses to convert JS data into Elm data when it goes through ports quite fast? would it make sense to send rapid streaming data through ports into an Elm program?</text>
  </message>
  <message>
    <ts>2017-07-09T07:22:56.794660</ts>
    <user>U6612TJLC</user>
    <text>Elm is cool</text>
  </message>
  <message>
    <ts>2017-07-09T07:23:51.797637</ts>
    <user>U6612TJLC</user>
    <text>I failed to run sample of Clock and Drag, Can anyone help? I use 0.18.0</text>
  </message>
  <message>
    <ts>2017-07-09T07:24:01.798270</ts>
    <user>U6612TJLC</user>
    <text>hello world is OK</text>
  </message>
  <message>
    <ts>2017-07-09T07:24:28.799926</ts>
    <user>U6612TJLC</user>
    <text>It said need SVG and Mouse</text>
  </message>
  <message>
    <ts>2017-07-09T07:26:23.807118</ts>
    <user>U62UFEG4D</user>
    <text>Hi &lt;@U6612TJLC&gt;, try `elm package install elm-lang/svg`</text>
  </message>
  <message>
    <ts>2017-07-09T07:27:07.809551</ts>
    <user>U62UFEG4D</user>
    <text>`elm package install elm-lang/mouse`</text>
  </message>
  <message>
    <ts>2017-07-09T07:27:34.810921</ts>
    <user>U62UFEG4D</user>
    <text>you need to run those commands in the project dir</text>
  </message>
  <message>
    <ts>2017-07-09T07:27:52.811883</ts>
    <user>U6612TJLC</user>
    <text>&lt;@U62UFEG4D&gt;, really thanks</text>
  </message>
  <message>
    <ts>2017-07-09T07:28:31.814246</ts>
    <user>U62UFEG4D</user>
    <text>ur welcome!</text>
  </message>
  <message>
    <ts>2017-07-09T07:46:18.875161</ts>
    <user>U641LDZFU</user>
    <text>is it possible to expose the type UnionType = This | OrThis when importing a module?</text>
  </message>
  <message>
    <ts>2017-07-09T07:51:56.893524</ts>
    <user>U62UFEG4D</user>
    <text>&lt;@U641LDZFU&gt; since it is possible to expose a type, I would say yes</text>
  </message>
  <message>
    <ts>2017-07-09T07:52:19.894841</ts>
    <user>U62UFEG4D</user>
    <text>I have seen this `import Msgs exposing (Msg)` where `Msg` is defined as a union type</text>
  </message>
  <message>
    <ts>2017-07-09T07:52:33.895667</ts>
    <user>U62UFEG4D</user>
    <text>&lt;https://www.elm-tutorial.org/en/04-starting/07-multiple-modules.html&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T07:55:01.903751</ts>
    <user>U641LDZFU</user>
    <text>ah thanks</text>
  </message>
  <message>
    <ts>2017-07-09T07:55:15.904653</ts>
    <user>U641LDZFU</user>
    <text>the key was exposing (UnionType(..))</text>
  </message>
  <message>
    <ts>2017-07-09T08:02:19.931129</ts>
    <user>U6612TJLC</user>
    <text>Is it possible to install SVG automaitically?</text>
  </message>
  <message>
    <ts>2017-07-09T08:10:18.958866</ts>
    <user>U5QJW0DDE</user>
    <text>i'm wondering if it is possible to build an Elm app that is just a component for embedding in html, but not for a single div, for multiple divs that would run that elm program. the docs show embedding in a single div, is it possible to build Elm stand-alone programs that run in any arbitrary div, even if multiple divs run at the same time?</text>
  </message>
  <message>
    <ts>2017-07-09T08:12:28.967755</ts>
    <user>U62UFEG4D</user>
    <text>Hey &lt;@U6612TJLC&gt; can elaborate on that, not sure I got your question :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T08:13:10.970542</ts>
    <user>U6612TJLC</user>
    <text>I manually installed ,and worked.</text>
  </message>
  <message>
    <ts>2017-07-09T08:27:52.022696</ts>
    <user>U62UFEG4D</user>
    <text>maybe run  `elm package install elm-lang/mouse` in the project dir</text>
  </message>
  <message>
    <ts>2017-07-09T08:28:26.024637</ts>
    <user>U6612TJLC</user>
    <text>OK, I see, thanks.</text>
  </message>
  <message>
    <ts>2017-07-09T08:54:08.116493</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5QJW0DDE&gt; you can embed a single program in multiple divs, but they'll be separate instance with their own state and events. I take it that's not quite what you're looking for? :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T08:57:50.130173</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U3SJEDR96&gt; that is indeed what I am looking for. now the question is about ports. getting data into the programs is through ports, from outside Elm. i'd be streaming lots of stuff into Elm through the ports and different instances of the Elm program would need to respond to different data through the ports.</text>
  </message>
  <message>
    <ts>2017-07-09T08:58:00.130916</ts>
    <user>U5QJW0DDE</user>
    <text>i suppose I could just have each Elm program filter out what it doesn't need</text>
  </message>
  <message>
    <ts>2017-07-09T08:58:37.133418</ts>
    <user>U3SJEDR96</user>
    <text>Every app gets its own instance, so has separate ports. `var app1 = Elm.App.embed(div1); var app2 = Elm.App.embed(div2);`</text>
  </message>
  <message>
    <ts>2017-07-09T08:59:08.135390</ts>
    <user>U5QJW0DDE</user>
    <text>ah i see</text>
  </message>
  <message>
    <ts>2017-07-09T09:00:06.139482</ts>
    <user>U5QJW0DDE</user>
    <text>it's not clear to me what the data conversion if like, if anything, between generic JS data like numbers and Elm data. If I am streaming a lot of numbers or even JSON objects through ports, is there an expensive overhead to Elm's conversion of these into Elm data types?</text>
  </message>
  <message>
    <ts>2017-07-09T09:00:26.141222</ts>
    <user>U5QJW0DDE</user>
    <text>Elm might wrap numbers, for example, into its own numbers type (perhaps?) but does it do something more complicated than this</text>
  </message>
  <message>
    <ts>2017-07-09T09:01:50.147342</ts>
    <user>U3SJEDR96</user>
    <text>For the most part, they're just type-checks. Like, a string in JS or a String in Elm, it's the same thing. A record is essentially a JS object. A few things need little more work, like lists. I wouldn't worry about it, if it does become a problem, I'm sure we can figure out a way to get it working :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T09:02:49.151116</ts>
    <user>U5QJW0DDE</user>
    <text>i'm trying an experiment to port part of an existing Clojurescript app to Elm. The Clojurescript app uses React via Om and is extremely fast, handling streaming financial data dozens of times per second, streaming over a socket.</text>
  </message>
  <message>
    <ts>2017-07-09T09:03:15.152667</ts>
    <user>U5QJW0DDE</user>
    <text>I'm hoping there won't be any surprises to Elm's handling of this kind of data at this speed</text>
  </message>
  <message>
    <ts>2017-07-09T09:07:03.167456</ts>
    <user>U3SJEDR96</user>
    <text>Dozens should be fine, generally. Handling a subscription to requestAnimationFrame (which fires at 60fps) is perfectly fine in Elm. One thing to do is to try and keep calculated data in your update low; prefer to just take the data in, letting the render manage the calculated data instead. If you find the overhead of the DOM rendering to be too slow, adding some `Html.lazy` nodes high up in the tree should take care of that, too</text>
  </message>
  <message>
    <ts>2017-07-09T09:07:52.170650</ts>
    <user>U5QJW0DDE</user>
    <text>i don't follow you with regards to calculated data; can you express with a simple example?</text>
  </message>
  <message>
    <ts>2017-07-09T09:10:06.178930</ts>
    <user>U3SJEDR96</user>
    <text>say you receive a string that represents an integer, prefer to save that string in your model rather than doing the `String.toInt` and matching on the result in your `update`.</text>
  </message>
  <message>
    <ts>2017-07-09T09:11:12.183951</ts>
    <user>U5QJW0DDE</user>
    <text>oh, i see</text>
  </message>
  <message>
    <ts>2017-07-09T09:13:12.192023</ts>
    <user>U3SJEDR96</user>
    <text>Though even that is something to worry about only after you notice you need it. Start with the most simple, most obvious setup. If you do get into trouble, benchmark and figure out how to speed things up :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T09:13:44.193977</ts>
    <user>U5QJW0DDE</user>
    <text>is relying on Chrome's dev tools typical in the Elm world, or are there more Elm-specific ways to profile and debug?</text>
  </message>
  <message>
    <ts>2017-07-09T09:40:39.297508</ts>
    <user>U641LDZFU</user>
    <text>Given this function ```delay : Float -&amp;gt; msg -&amp;gt; Cmd msg
delay seconds msg =
    Process.sleep (seconds * Time.second)
        |&amp;gt; Task.perform (\_ -&amp;gt; msg) ```</text>
  </message>
  <message>
    <ts>2017-07-09T09:41:24.300618</ts>
    <user>U641LDZFU</user>
    <text>used as a Cmd like ```( nextModel, delay 999 (NewStoryNode newNode) )```</text>
  </message>
  <message>
    <ts>2017-07-09T09:41:47.302037</ts>
    <user>U641LDZFU</user>
    <text>To pass a random number instead of 999</text>
  </message>
  <message>
    <ts>2017-07-09T09:42:39.305441</ts>
    <user>U641LDZFU</user>
    <text>Do I need somehow store it in the model, and go through setting up new Msg types</text>
  </message>
  <message>
    <ts>2017-07-09T09:42:59.306669</ts>
    <user>U0P088J1L</user>
    <text>&lt;@U5QJW0DDE&gt; I assume you have tried Elm debugger?</text>
  </message>
  <message>
    <ts>2017-07-09T09:43:04.307014</ts>
    <user>U641LDZFU</user>
    <text>or am I missing something?</text>
  </message>
  <message>
    <ts>2017-07-09T09:43:25.308349</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U0P088J1L&gt; no, but i will now! i'm quite green on Elm at the moment</text>
  </message>
  <message>
    <ts>2017-07-09T09:43:35.309031</ts>
    <user>U5QJW0DDE</user>
    <text>doing more high-level research of the lang and its ecosystem</text>
  </message>
  <message>
    <ts>2017-07-09T09:43:44.309576</ts>
    <user>U5QJW0DDE</user>
    <text>just started writing some code today</text>
  </message>
  <message>
    <ts>2017-07-09T09:44:22.311889</ts>
    <user>U641LDZFU</user>
    <text>aka is there a way to generate a random number without Msg (s)</text>
  </message>
  <message>
    <ts>2017-07-09T09:45:49.318015</ts>
    <user>U641LDZFU</user>
    <text>... "You cannot just get random values willy-nilly. You create a command, and Elm will go do some work behind the scenes to provide it for you. In fact, any time our program needs to get unreliable values (randomness, HTTP, file I/O, database reads, etc.) you have to go through Elm."</text>
  </message>
  <message>
    <ts>2017-07-09T09:46:08.319305</ts>
    <user>U641LDZFU</user>
    <text>so to answer myself... No</text>
  </message>
  <message>
    <ts>2017-07-09T09:47:10.323420</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U641LDZFU&gt; There are a few ways you could do something like this. One way is to hold onto a random seed in your model and then call `Random.step` whenever you needed it.</text>
  </message>
  <message>
    <ts>2017-07-09T09:47:13.323577</ts>
    <user>U0P088J1L</user>
    <text>Elm has a terrific time traveling debugger. I believe it's activated by default when you run elm reactor.</text>
  </message>
  <message>
    <ts>2017-07-09T09:49:13.331201</ts>
    <user>U5QJW0DDE</user>
    <text>i just noticed that "updating" a value in a record respects the type so far as if the record has a key of the same name you are updating, but otherwise does not respect the type of the key itself.</text>
  </message>
  <message>
    <ts>2017-07-09T09:49:20.331669</ts>
    <user>U5QJW0DDE</user>
    <text>that seems peculiar to me</text>
  </message>
  <message>
    <ts>2017-07-09T09:50:38.337072</ts>
    <user>U0P088J1L</user>
    <text>&lt;@U5QJW0DDE&gt; Can you provide an example? Not sure if I understand your comment.</text>
  </message>
  <message>
    <ts>2017-07-09T09:51:02.338814</ts>
    <user>U5QJW0DDE</user>
    <text>consider this record: g = {a=5}</text>
  </message>
  <message>
    <ts>2017-07-09T09:51:22.340031</ts>
    <user>U5QJW0DDE</user>
    <text>this expectedly fails: {g|b=3}</text>
  </message>
  <message>
    <ts>2017-07-09T09:51:36.340902</ts>
    <user>U5QJW0DDE</user>
    <text>this does not fail: {g|a="hi"}</text>
  </message>
  <message>
    <ts>2017-07-09T09:53:50.349522</ts>
    <user>U5J0H2NS2</user>
    <text>&lt;@U5QJW0DDE&gt; take a look at the description of "extensible records" &lt;http://elm-lang.org/docs/records&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T09:53:51.349582</ts>
    <user>U0P088J1L</user>
    <text>but g={g|a="hi"} fails, right?</text>
  </message>
  <message>
    <ts>2017-07-09T09:53:59.350072</ts>
    <user>U641LDZFU</user>
    <text>thanks &lt;@U48AEBJQ3&gt; I will give that a go</text>
  </message>
  <message>
    <ts>2017-07-09T09:54:20.351521</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U0P088J1L&gt; no it does not fail, that's why i find it peculiar, but will look at the link &lt;@U5J0H2NS2&gt;  sent</text>
  </message>
  <message>
    <ts>2017-07-09T09:54:35.352501</ts>
    <user>U5QJW0DDE</user>
    <text>oh, i misread your line &lt;@U0P088J1L&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T09:55:25.355776</ts>
    <user>U5J0H2NS2</user>
    <text>g= {g | a = "hi" } will fail, as you can not modify the value of an already existing one.</text>
  </message>
  <message>
    <ts>2017-07-09T09:55:27.355891</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U0P088J1L&gt; no  g={a="hi"} does not fail</text>
  </message>
  <message>
    <ts>2017-07-09T09:56:03.358504</ts>
    <user>U0P088J1L</user>
    <text>if you evaluate `g` after {g|a="hi"}, it still evaluates to {a = 5} : {a : number} which indicates g wasn't "updated".</text>
  </message>
  <message>
    <ts>2017-07-09T09:56:11.359077</ts>
    <user>U5QJW0DDE</user>
    <text>right</text>
  </message>
  <message>
    <ts>2017-07-09T09:56:55.362065</ts>
    <user>U5J0H2NS2</user>
    <text>immutability</text>
  </message>
  <message>
    <ts>2017-07-09T09:57:20.363872</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5QJW0DDE&gt; that's correct; you can indeed change the types of values in the record update syntax</text>
  </message>
  <message>
    <ts>2017-07-09T09:58:03.367139</ts>
    <user>U3SJEDR96</user>
    <text>I've actually written about that &lt;https://blog.ilias.xyz/5-things-you-didnt-know-about-elm-7bdb67b1b3cd&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T10:04:53.396778</ts>
    <user>U5QJW0DDE</user>
    <text>i just noticed that the Elm logo is *not* the generic Slack placeholder assigned as a default avatar.</text>
  </message>
  <message>
    <ts>2017-07-09T10:05:24.399057</ts>
    <user>U0P088J1L</user>
    <text>quick question, I have a function that receives a Msg as an argument. In different modules that call this function, one passes a `Msg a` and the other passes `NoOp`. This causes an issue because NoOp doesn't have an argument. What's the common way to handle this type of case?</text>
  </message>
  <message>
    <ts>2017-07-09T10:06:57.405451</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5QJW0DDE&gt; :smile: It's a tangram! Making complex shapes out of simple elements and all that</text>
  </message>
  <message>
    <ts>2017-07-09T10:07:10.406486</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U0P088J1L&gt; so what's the type signature of that function?</text>
  </message>
  <message>
    <ts>2017-07-09T10:07:30.407933</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U3SJEDR96&gt; i saw your blog and I thought, he's using the Slack icon for Elm as his favico. then I thought, that can't be right</text>
  </message>
  <message>
    <ts>2017-07-09T10:14:38.437245</ts>
    <user>U5QJW0DDE</user>
    <text>how realistic has the guarantee of zero runtime errors in Elm, in practicew?</text>
  </message>
  <message>
    <ts>2017-07-09T10:14:55.438324</ts>
    <user>U5QJW0DDE</user>
    <text>its a bold ambition, works out on large apps?</text>
  </message>
  <message>
    <ts>2017-07-09T10:15:10.439480</ts>
    <user>U0FP80EKB</user>
    <text>We have two apps in production and haven't seen a runtime exception, yet.</text>
  </message>
  <message>
    <ts>2017-07-09T10:15:33.441135</ts>
    <user>U0FP80EKB</user>
    <text>Actually, I guess you could say 3 apps, when I think about it.</text>
  </message>
  <message>
    <ts>2017-07-09T10:15:56.442810</ts>
    <user>U5QJW0DDE</user>
    <text>i suppose one source of exceptions would be on the js side when sending things through ports, since Elm throws exceptions there, yeah?</text>
  </message>
  <message>
    <ts>2017-07-09T10:16:02.443250</ts>
    <user>U0FP80EKB</user>
    <text>One consists of a set of widgets that are embedded on third-party sites. One is an administrative backend for our customers to manage those widgets. The third is a sort of CMS/Blog/Newsletter product.</text>
  </message>
  <message>
    <ts>2017-07-09T10:16:34.445392</ts>
    <user>U0P088J1L</user>
    <text>&lt;@U3SJEDR96&gt; I didn't have a type annotation for this function, but I guess something like `a-&amp;gt; msg` for the part where `Msg a` is the argument?</text>
  </message>
  <message>
    <ts>2017-07-09T10:16:36.445509</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U0FP80EKB&gt; regarding your embedeed third-party widgets, they are basically elm applications that get embedded on third-party sites inside a div on those external pages?</text>
  </message>
  <message>
    <ts>2017-07-09T10:16:38.445640</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U5QJW0DDE&gt; Anything outside of Elm is unsafe. So, just like your server might have an error at the other end of an http request, the js might have an error at the other end of a port request</text>
  </message>
  <message>
    <ts>2017-07-09T10:17:09.447844</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U5QJW0DDE&gt; yup. You can see an example here. The "What do you wonder?" and "Help us out" widgets &lt;https://www.wuft.org/findoutflorida/&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T10:18:18.452506</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5QJW0DDE&gt; as for sending things through ports; most (but not all) production apps end up using ports that work with `Json.Encode.Value` so the conversion to and from JS values happens within Elm, rather than being managed by the runtime</text>
  </message>
  <message>
    <ts>2017-07-09T10:18:32.453385</ts>
    <user>U3SJEDR96</user>
    <text>it's less magic, and more control over how to handle bad input :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T10:18:33.453465</ts>
    <user>U0FP80EKB</user>
    <text>We have a small js bootstrap that loads up the elm app and initializes it on a div</text>
  </message>
  <message>
    <ts>2017-07-09T10:18:43.454176</ts>
    <user>U5QJW0DDE</user>
    <text>I'm planning to have a React-controlled div from JS (actually clojurescript) load an Elm app. When React gets rid of the div and removes it from the DOM, the Elm app should just automatically quit, yeah?</text>
  </message>
  <message>
    <ts>2017-07-09T10:24:29.478952</ts>
    <user>U5QJW0DDE</user>
    <text>actually i suppose i'd need to set the var holding onto the Elm app to nil</text>
  </message>
  <message>
    <ts>2017-07-09T10:24:43.479899</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U0P088J1L&gt; Your `Msg` type has a bunch of constructors, right? `NoOp` `Foo String` and such. These are the types of the constructors `NoOp : Msg` `Foo : (String -&amp;gt; Msg)`. If the function you wrote really takes a `Msg` as an argument, it can't take both just `NoOp` or `Foo`, because those are different types.</text>
  </message>
  <message>
    <ts>2017-07-09T10:27:13.491217</ts>
    <user>U48AEBJQ3</user>
    <text>If your function is of type `myFun : Msg -&amp;gt; Something` then you can call `myFun NoOp` or `myFun (Foo "string")`</text>
  </message>
  <message>
    <ts>2017-07-09T10:27:44.493086</ts>
    <user>U48AEBJQ3</user>
    <text>If your function is of type `myFun : (String -&amp;gt; Msg) -&amp;gt; Something` then yo ucan call `myFun (\_ -&amp;gt; NoOp)` or `myFun Foo`</text>
  </message>
  <message>
    <ts>2017-07-09T10:28:33.496207</ts>
    <user>U0P088J1L</user>
    <text>&lt;@U48AEBJQ3&gt; That makes sense. Thanks!</text>
  </message>
  <message>
    <ts>2017-07-09T10:32:45.513681</ts>
    <user>U5XC2FJ1Y</user>
    <text>&lt;@U3SJEDR96&gt; i'm curious, does the compiler have a similar optimization for point-free composition with &amp;lt;&amp;lt; as it does for pipelines?</text>
  </message>
  <message>
    <ts>2017-07-09T10:33:08.515228</ts>
    <user>U5XC2FJ1Y</user>
    <text>most of the time so far in elm i find myself programming pointfully but i'm just wondering :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T10:33:43.517255</ts>
    <user>U3SJEDR96</user>
    <text>It does, though it's harder to predict the result in terms of performance impact</text>
  </message>
  <message>
    <ts>2017-07-09T10:34:09.519018</ts>
    <user>U3SJEDR96</user>
    <text>But yeah, `&amp;gt;&amp;gt;`, `&amp;lt;&amp;lt;`, `|&amp;gt;` and `&amp;lt;|` are all special cased in the compiler to "inline" the result</text>
  </message>
  <message>
    <ts>2017-07-09T10:34:35.520705</ts>
    <user>U5XC2FJ1Y</user>
    <text>cool!</text>
  </message>
  <message>
    <ts>2017-07-09T10:42:56.557482</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5XC2FJ1Y&gt; &lt;https://gist.github.com/zwilias/45cf39cf83f6f4dbdfc4c10707270051&gt; this might illustrate why the impact is harder to predict :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T10:46:19.572487</ts>
    <user>U5XC2FJ1Y</user>
    <text>hm, you have c3 defined twice in the elm</text>
  </message>
  <message>
    <ts>2017-07-09T10:48:50.583018</ts>
    <user>U3SJEDR96</user>
    <text>Refresh, noticed that after posting :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T10:50:39.590553</ts>
    <user>U5XC2FJ1Y</user>
    <text>i am trying to understand this, so (.&amp;gt;) is just a synonym for (&amp;gt;&amp;gt;) that doesn't have the compiler optimization, right?</text>
  </message>
  <message>
    <ts>2017-07-09T10:52:01.596078</ts>
    <user>U3SJEDR96</user>
    <text>yeah, it's just how `&amp;gt;&amp;gt;` would be implemented _without_ the compiler optimization :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T10:52:35.598554</ts>
    <user>U5XC2FJ1Y</user>
    <text>and c2 compiles to something that needs to execute another function before getting back x =&amp;gt; b(a(x))</text>
  </message>
  <message>
    <ts>2017-07-09T10:53:50.604233</ts>
    <user>U3SJEDR96</user>
    <text>Yep, essentially :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T10:53:55.604527</ts>
    <user>U5XC2FJ1Y</user>
    <text>compared to c1 which compiles to x =&amp;gt; b(a(x))</text>
  </message>
  <message>
    <ts>2017-07-09T10:54:51.608275</ts>
    <user>U5XC2FJ1Y</user>
    <text>i'm not clear what's going on with c3 and c4? it looks the same but wrapped in a constant function of 3 arguments</text>
  </message>
  <message>
    <ts>2017-07-09T10:56:24.614915</ts>
    <user>U5XC2FJ1Y</user>
    <text>oh wait but those functions are passed to a function called F3, hm</text>
  </message>
  <message>
    <ts>2017-07-09T11:05:00.653302</ts>
    <user>U604S603Y</user>
    <text>is there a way to manipulate `WebData` as received via the `RemoteData` package? I'm loading predefined vaues for a form from the server but then I want the user to be able to change them and later on send the possibly changed values back to the server.</text>
  </message>
  <message>
    <ts>2017-07-09T11:05:28.655505</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U604S603Y&gt; look at `RemoteData.map` that will allow you to update what is contained</text>
  </message>
  <message>
    <ts>2017-07-09T11:17:42.710182</ts>
    <user>U604S603Y</user>
    <text>thanks &lt;@U0FP80EKB&gt;, that was exactly what I was looking for</text>
  </message>
  <message>
    <ts>2017-07-09T12:20:09.001144</ts>
    <user>U31FGNWCT</user>
    <text>Hello everybody! Can someone point me to the good explanation of tasks (0.18), please? I've been waiting for the official documentation for a thousand years.</text>
  </message>
  <message>
    <ts>2017-07-09T12:21:53.009053</ts>
    <user>U23SA861Y</user>
    <text>What about them are you trying to understand?</text>
  </message>
  <message>
    <ts>2017-07-09T12:24:10.019054</ts>
    <user>U31FGNWCT</user>
    <text>How and when to use them, actually. How do they simplify my life as a developer.</text>
  </message>
  <message>
    <ts>2017-07-09T12:24:36.020938</ts>
    <user>U23SA861Y</user>
    <text>Tasks come as a consequence of having no side effects in the language</text>
  </message>
  <message>
    <ts>2017-07-09T12:25:12.023628</ts>
    <user>U23SA861Y</user>
    <text>if the language has no sideeffects, then you needs a way to interact with the world and so tasks are how you do that.</text>
  </message>
  <message>
    <ts>2017-07-09T12:26:33.030433</ts>
    <user>U23SA861Y</user>
    <text>Instead of having any arbitrary function fire the missles, you have a function return a description of what it wants to have happen and then the runtime performs that.</text>
  </message>
  <message>
    <ts>2017-07-09T12:27:10.033223</ts>
    <user>U31FGNWCT</user>
    <text>As long as I understand you describe commands in general</text>
  </message>
  <message>
    <ts>2017-07-09T12:27:21.034001</ts>
    <user>U4F64AKQV</user>
    <text>plausible deniability if you will</text>
  </message>
  <message>
    <ts>2017-07-09T12:29:03.041835</ts>
    <user>U23SA861Y</user>
    <text>you are right that at some point it gets dispatched as a command, but a task provides a nice wrapper for chaining different things and support for what to do when things fail</text>
  </message>
  <message>
    <ts>2017-07-09T12:30:27.048499</ts>
    <user>U31FGNWCT</user>
    <text>Okay. Let's assume I need to perfom a get request. I have a hammer for that nail: Http.get and all the Decode stuff. When should I use Task in my situation?</text>
  </message>
  <message>
    <ts>2017-07-09T12:30:41.049683</ts>
    <user>U31FGNWCT</user>
    <text>So it's a bit like Promises?</text>
  </message>
  <message>
    <ts>2017-07-09T12:30:48.050209</ts>
    <user>U6602MZ9Q</user>
    <text>Kinda</text>
  </message>
  <message>
    <ts>2017-07-09T12:31:21.053013</ts>
    <user>U6602MZ9Q</user>
    <text>With Tasks you can perform 2 get requests in the same command, for example</text>
  </message>
  <message>
    <ts>2017-07-09T12:31:37.054285</ts>
    <user>U6602MZ9Q</user>
    <text>Where the second depends on the result of the first</text>
  </message>
  <message>
    <ts>2017-07-09T12:32:15.057035</ts>
    <user>U31FGNWCT</user>
    <text>Aha! That's something.</text>
  </message>
  <message>
    <ts>2017-07-09T12:40:04.092620</ts>
    <user>U31FGNWCT</user>
    <text>If there is a need for me to check on every request if user's auth token is up to date, I will use Task (check cmd andThen if ok fire second one). Am I right? Or, maybe, you can think of some little programming exercise (like the ones in the official documentation) [for someone like me to do] which can expose Tasks better?</text>
  </message>
  <message>
    <ts>2017-07-09T12:41:43.100537</ts>
    <user>U6602MZ9Q</user>
    <text>I think that sounds about right yeah</text>
  </message>
  <message>
    <ts>2017-07-09T12:42:35.104576</ts>
    <user>U6602MZ9Q</user>
    <text>You could try to define a function like `Request a -&amp;gt; (a -&amp;gt; Request b) -&amp;gt; Task Err b`</text>
  </message>
  <message>
    <ts>2017-07-09T12:43:09.107097</ts>
    <user>U6602MZ9Q</user>
    <text>And partially applying to a check auth request would mean you have a function that always does the check auth for you</text>
  </message>
  <message>
    <ts>2017-07-09T12:43:57.110610</ts>
    <user>U23SA861Y</user>
    <text>Yeah, if you need to execute two (or more) tasks in a row where the second depends on the first. Then `andThen` is the way to do it</text>
  </message>
  <message>
    <ts>2017-07-09T12:49:06.134700</ts>
    <user>U31FGNWCT</user>
    <text>Well, I think I'm on my way to understand it.
But, can't I just fire my second task in my update function when the first one is executed (I mean, when one defines an Http request he or she also supplies a message, which can fire second command)?</text>
  </message>
  <message>
    <ts>2017-07-09T12:51:33.146110</ts>
    <user>U23SA861Y</user>
    <text>if you want, yep you can do that</text>
  </message>
  <message>
    <ts>2017-07-09T12:52:34.150564</ts>
    <user>U23SA861Y</user>
    <text>each task is going to go through a message though and so strict sequencing can be difficult</text>
  </message>
  <message>
    <ts>2017-07-09T12:58:58.180117</ts>
    <user>U31FGNWCT</user>
    <text>I meant - why do I need to use Task if I can "schedule" everything that is going on with just simple elm-flow (msg -&amp;gt; cmd -&amp;gt; msg -&amp;gt; cmd)?</text>
  </message>
  <message>
    <ts>2017-07-09T12:59:51.184277</ts>
    <user>U23SA861Y</user>
    <text>so theres two things there, tasks make it easier to handle errors</text>
  </message>
  <message>
    <ts>2017-07-09T13:00:16.186706</ts>
    <user>U23SA861Y</user>
    <text>and the other thing is, you can wind up with race conditions if you are going through message</text>
  </message>
  <message>
    <ts>2017-07-09T13:06:14.217877</ts>
    <user>U31FGNWCT</user>
    <text>1) When I need to schedule some "events" I may use Tasks
2) Which allow me to organise chains of "events"
3) So that I will be able to handle "events" in a convenient and proper way
4) And there is no risk of one, second, "event" happening before the other one, which should be first by design.</text>
  </message>
  <message>
    <ts>2017-07-09T13:06:48.220741</ts>
    <user>U31FGNWCT</user>
    <text>Is everything correct?</text>
  </message>
  <message>
    <ts>2017-07-09T13:08:09.227413</ts>
    <user>U23SA861Y</user>
    <text>more or less</text>
  </message>
  <message>
    <ts>2017-07-09T13:08:39.229636</ts>
    <user>U23SA861Y</user>
    <text>best I can say is try using them for things like web requests and see how things compose</text>
  </message>
  <message>
    <ts>2017-07-09T13:09:30.233729</ts>
    <user>U23SA861Y</user>
    <text>Its possible to go overboard and try to do too much in  a task, but they are a nice abstraction when the use case fits</text>
  </message>
  <message>
    <ts>2017-07-09T13:10:51.240670</ts>
    <user>U23SA861Y</user>
    <text>actually come to think of it, I don't think you can use just commands if there is the potential for the command to fail</text>
  </message>
  <message>
    <ts>2017-07-09T13:10:59.241363</ts>
    <user>U31FGNWCT</user>
    <text>Thank you &lt;@U23SA861Y&gt;! May the force be with you.</text>
  </message>
  <message>
    <ts>2017-07-09T13:12:52.250358</ts>
    <user>U5QJW0DDE</user>
    <text>What are the most popular editors most of you are using for Elm?</text>
  </message>
  <message>
    <ts>2017-07-09T13:13:10.251836</ts>
    <user>U23SA861Y</user>
    <text>well I use vscode for it</text>
  </message>
  <message>
    <ts>2017-07-09T13:13:57.255571</ts>
    <user>U0FP80EKB</user>
    <text>I use vim</text>
  </message>
  <message>
    <ts>2017-07-09T13:15:09.261272</ts>
    <user>U2SR9DL7Q</user>
    <text>I use atom</text>
  </message>
  <message>
    <ts>2017-07-09T13:19:01.279704</ts>
    <user>U2SR9DL7Q</user>
    <text>A lot of the beginner tutorials use atom, because of three very useful packages in language-elm, elm-format and linter-elm-make which work pretty well if you're just starting out. Of course, I'm sure the other editors have their own version of these things.</text>
  </message>
  <message>
    <ts>2017-07-09T13:47:27.418571</ts>
    <user>U5QJW0DDE</user>
    <text>does atom also do autocomplete?</text>
  </message>
  <message>
    <ts>2017-07-09T13:58:27.474318</ts>
    <user>U6531GSTW</user>
    <text>Can someone help with json decoding?</text>
  </message>
  <message>
    <ts>2017-07-09T14:00:03.482262</ts>
    <user>U6531GSTW</user>
    <text>type alias Aufgabe = {
    aName : String,
    aBeschreibung : String,
    aDauer : Int,
    aTyp : String,
    aTag : Date.Day,
    aDeadl : Date.Date,
    aPrio : String,
    aStunden : Int,
    aMinuten : Int,
    aTermin: Date.Date,
    aMonth: Date.Month
}</text>
  </message>
  <message>
    <ts>2017-07-09T14:00:46.486624</ts>
    <user>U6531GSTW</user>
    <text>i cant figure out after numerous attempts how to decode date.day, date.date and date.month</text>
  </message>
  <message>
    <ts>2017-07-09T14:05:32.511272</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U6531GSTW&gt; What does the incoming data look like for those fields?</text>
  </message>
  <message>
    <ts>2017-07-09T14:05:53.513135</ts>
    <user>U6531GSTW</user>
    <text>i can write the incoming data as i like</text>
  </message>
  <message>
    <ts>2017-07-09T14:06:03.513922</ts>
    <user>U6531GSTW</user>
    <text>but its gonna have all these attributes in them</text>
  </message>
  <message>
    <ts>2017-07-09T14:06:25.515821</ts>
    <user>U6531GSTW</user>
    <text>&lt;https://jsonblob.com/6ecd993e-6290-11e7-ae4c-e793fe90c432&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T14:06:28.516092</ts>
    <user>U6531GSTW</user>
    <text>something like this</text>
  </message>
  <message>
    <ts>2017-07-09T14:07:18.520088</ts>
    <user>U48AEBJQ3</user>
    <text>Well, for `Date` you should first look at &lt;http://package.elm-lang.org/packages/elm-community/json-extra/2.3.0/Json-Decode-Extra#date&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T14:08:55.527508</ts>
    <user>U6531GSTW</user>
    <text>and what about month and day?</text>
  </message>
  <message>
    <ts>2017-07-09T14:09:48.531442</ts>
    <user>U48AEBJQ3</user>
    <text>There you have options. You could just use a format which converts to a `Date` and then use the `Date.dayOfWeek` and `Date.month` to extract them.</text>
  </message>
  <message>
    <ts>2017-07-09T14:09:50.531613</ts>
    <user>U3SJEDR96</user>
    <text>month I already posted earlier today, actually</text>
  </message>
  <message>
    <ts>2017-07-09T14:13:32.549607</ts>
    <user>U48AEBJQ3</user>
    <text>Or you could use strings or integers or something. You would then write a function `stringToDay : String -&amp;gt; Result String Day` and then you could turn it into a decoder by going `Decode.string |&amp;gt; Decode.andThen (Json.Decode.Extra.fromResult &amp;lt;&amp;lt; stringToDay)`</text>
  </message>
  <message>
    <ts>2017-07-09T14:14:59.556159</ts>
    <user>U3SJEDR96</user>
    <text>for reference, this is what I made this morning: &lt;https://ellie-app.com/3HvJVvLtnyWa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T14:18:56.575379</ts>
    <user>U6531GSTW</user>
    <text>&lt;https://ellie-app.com/3GpdHFztdsta1/11&gt; this is how it looks like now</text>
  </message>
  <message>
    <ts>2017-07-09T14:19:03.575985</ts>
    <user>U6531GSTW</user>
    <text>everything besides the decoding is working fine</text>
  </message>
  <message>
    <ts>2017-07-09T14:30:05.627883</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U6531GSTW&gt; &lt;https://ellie-app.com/3HGvc3fZgc5a1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T14:31:42.636935</ts>
    <user>U48AEBJQ3</user>
    <text>I fixed the Json.Decode imports so that they referenced the correct thing, then I reworked the building of the Aufgabe record. When you do a bunch of `andMap` like that, you have to match the structure of the record precisely. I am just presuming the names in the JSON are the same as in the Elm record.</text>
  </message>
  <message>
    <ts>2017-07-09T14:32:50.642231</ts>
    <user>U48AEBJQ3</user>
    <text>Now you have two decoders to write. `dayDecoder : Decoder Day` and `monthDecoder : Decoder Month`</text>
  </message>
  <message>
    <ts>2017-07-09T14:34:07.648327</ts>
    <user>U6531GSTW</user>
    <text>dayFromString : String -&amp;gt; Result String Date.Day
dayFromString day = case day of
    "Mon" -&amp;gt; Ok Mon
    "Tue" -&amp;gt; Ok Tue
    "Wed" -&amp;gt; Ok Wed
    "Thu" -&amp;gt; Ok Thu
    "Fri" -&amp;gt; Ok Fri
    "Sat" -&amp;gt; Ok Sat
    "Sun" -&amp;gt; Ok Sun
    _ -&amp;gt; Err "not a valid day"</text>
  </message>
  <message>
    <ts>2017-07-09T14:34:17.649139</ts>
    <user>U48AEBJQ3</user>
    <text>Looks solid.</text>
  </message>
  <message>
    <ts>2017-07-09T14:35:20.654007</ts>
    <user>U0JFEBK6F</user>
    <text>a bit late compiling example with some holes to fill in: &lt;https://ellie-app.com/3GpdHFztdsta1/11&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T14:38:59.672104</ts>
    <user>U6531GSTW</user>
    <text>umm its looks like this &lt;https://ellie-app.com/3HGC3s98j2xa1/1&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T14:39:04.672518</ts>
    <user>U6531GSTW</user>
    <text>what argument am i missing?</text>
  </message>
  <message>
    <ts>2017-07-09T14:40:48.681304</ts>
    <user>U48AEBJQ3</user>
    <text>You need to convert your `String -&amp;gt; Result String Day` into a `Decoder Day` by having an extra function which has `JD.string |&amp;gt; JD.andThen (JDE.fromResult &amp;lt;&amp;lt; dayFromString)`</text>
  </message>
  <message>
    <ts>2017-07-09T14:41:40.685721</ts>
    <user>U6531GSTW</user>
    <text>uhh how would that look like, i am a bit clueless right now</text>
  </message>
  <message>
    <ts>2017-07-09T14:43:08.692705</ts>
    <user>U48AEBJQ3</user>
    <text>```
dayDecode : Decoder Day
dayDecode =
    JD.string
        |&amp;gt; JD.andThen (JDE.fromResult &amp;lt;&amp;lt; dayFromString)

dayFromString : String -&amp;gt; Result String Date.Day
dayFromString day =
  case day of
    "Mon" -&amp;gt; Ok Mon
    "Tue" -&amp;gt; Ok Tue
    "Wed" -&amp;gt; Ok Wed
    "Thu" -&amp;gt; Ok Thu
    "Fri" -&amp;gt; Ok Fri
    "Sat" -&amp;gt; Ok Sat
    "Sun" -&amp;gt; Ok Sun
    _ -&amp;gt; Err "not a valid day"
```</text>
  </message>
  <message>
    <ts>2017-07-09T14:43:26.694134</ts>
    <user>U6531GSTW</user>
    <text>for month also?</text>
  </message>
  <message>
    <ts>2017-07-09T14:43:29.694387</ts>
    <user>U6531GSTW</user>
    <text>yeah guess so..</text>
  </message>
  <message>
    <ts>2017-07-09T14:43:32.694594</ts>
    <user>U48AEBJQ3</user>
    <text>Yep.</text>
  </message>
  <message>
    <ts>2017-07-09T14:44:57.701233</ts>
    <user>U23SA861Y</user>
    <text>If it is encoded as a time stamp you should be able to use some the libraries for that?</text>
  </message>
  <message>
    <ts>2017-07-09T14:46:07.707299</ts>
    <user>U6531GSTW</user>
    <text>done, and now there is this a mismatch? &lt;https://ellie-app.com/3HGC3s98j2xa1/2&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T14:46:51.711001</ts>
    <user>U3BTVEFQU</user>
    <text>hey folks, hopefully you enjoyed your weekends :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T14:47:09.712548</ts>
    <user>U6531GSTW</user>
    <text>worket it out, it had to be int instead of string</text>
  </message>
  <message>
    <ts>2017-07-09T14:47:23.713801</ts>
    <user>U48AEBJQ3</user>
    <text>Yep, I used the wrong decoder for one of the fields.</text>
  </message>
  <message>
    <ts>2017-07-09T14:48:19.718340</ts>
    <user>U3BTVEFQU</user>
    <text>another beginner question: how do reuse the same component multiple times on the same page</text>
  </message>
  <message>
    <ts>2017-07-09T14:49:28.723488</ts>
    <user>U3BTVEFQU</user>
    <text>the problem is, somehow a msg comming from a command is send to all identical components at once, so all of them are updated instead just of the one creating the command</text>
  </message>
  <message>
    <ts>2017-07-09T14:51:09.731504</ts>
    <user>U48AEBJQ3</user>
    <text>A message just causes your model to be updated. If you want to use different data in different places, you have to store the data for each one in your model, then use that in your view to render each one.</text>
  </message>
  <message>
    <ts>2017-07-09T14:51:40.733813</ts>
    <user>U48AEBJQ3</user>
    <text>You will need different messages for each of them. Depending on how things are structured, that can take a couple of different forms.</text>
  </message>
  <message>
    <ts>2017-07-09T14:51:48.734485</ts>
    <user>U5J0H2NS2</user>
    <text>Use some kind of id. Eg. index if the components are in a list or dict. Pass that id around as a parameter of the Msg.</text>
  </message>
  <message>
    <ts>2017-07-09T14:52:16.736835</ts>
    <user>U6531GSTW</user>
    <text>the code is working now: &lt;https://ellie-app.com/3HGC3s98j2xa1/3&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T14:52:26.737692</ts>
    <user>U6531GSTW</user>
    <text>however none of the elements are being read in</text>
  </message>
  <message>
    <ts>2017-07-09T14:52:55.740049</ts>
    <user>U6531GSTW</user>
    <text>LoadJson -&amp;gt;
            ( model
            , Http.send JsonLoaded
                (Http.get "&lt;https://jsonblob.com/6ecd993e-6290-11e7-ae4c-e793fe90c432&gt;"
                    (JD.field "Aufgaben" (JD.list aufgabe))
                )
            )</text>
  </message>
  <message>
    <ts>2017-07-09T14:53:08.741132</ts>
    <user>U5W86UED6</user>
    <text>ream88: The elm guide has a great section about this &lt;https://guide.elm-lang.org/reuse/&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T14:53:32.743131</ts>
    <user>U6531GSTW</user>
    <text>this should read the url but im not sure if such a jsonblob link works fine</text>
  </message>
  <message>
    <ts>2017-07-09T14:56:48.759063</ts>
    <user>U48AEBJQ3</user>
    <text>I don't see the `LoadJson` message being used anywhere. That code probably never runs.</text>
  </message>
  <message>
    <ts>2017-07-09T14:58:09.765339</ts>
    <user>U6531GSTW</user>
    <text>its in the update part</text>
  </message>
  <message>
    <ts>2017-07-09T14:59:02.769590</ts>
    <user>U48AEBJQ3</user>
    <text>NM, big files in Ellie can be difficult to search.</text>
  </message>
  <message>
    <ts>2017-07-09T15:01:55.784308</ts>
    <user>U48AEBJQ3</user>
    <text>Sorry, life intervenes. I'll check in later.</text>
  </message>
  <message>
    <ts>2017-07-09T15:02:05.785223</ts>
    <user>U6531GSTW</user>
    <text>..</text>
  </message>
  <message>
    <ts>2017-07-09T15:02:27.786840</ts>
    <user>U6531GSTW</user>
    <text>but thanks for everything</text>
  </message>
  <message>
    <ts>2017-07-09T15:02:34.787527</ts>
    <user>U6531GSTW</user>
    <text>it was a lot of help</text>
  </message>
  <message>
    <ts>2017-07-09T15:22:39.883375</ts>
    <user>U6531GSTW</user>
    <text>Error: BadPayload "Given an invalid JSON: Unexpected token &amp;lt; in JSON at position 16" { status = { code = 200, message = "" }, headers = Dict.fromList [("content-type","application/octet-stream")</text>
  </message>
  <message>
    <ts>2017-07-09T15:22:44.883795</ts>
    <user>U604S603Y</user>
    <text>can one pass in a "value changer function" into another function?</text>
  </message>
  <message>
    <ts>2017-07-09T15:22:45.883883</ts>
    <user>U6531GSTW</user>
    <text>does this mean the json file is shit?</text>
  </message>
  <message>
    <ts>2017-07-09T15:23:10.885876</ts>
    <user>U604S603Y</user>
    <text>as in ```let
                    updatedModel =
                        updateInnerValue model (\innerModel = { innerModel | rechenergebnis = RemoteData.toMaybe (received) })
                in
                    ( updatedModel, Cmd.none )```</text>
  </message>
  <message>
    <ts>2017-07-09T15:23:59.889814</ts>
    <user>U604S603Y</user>
    <text>because I have a large code block to update the nested model for every "SomeValueChanged" message, and only the line actually assigning the new value ever changes</text>
  </message>
  <message>
    <ts>2017-07-09T15:25:34.897821</ts>
    <user>U604S603Y</user>
    <text>actually I'm just stupid</text>
  </message>
  <message>
    <ts>2017-07-09T15:26:01.900227</ts>
    <user>U604S603Y</user>
    <text>I had a `=` in the lambda function that should be a `-&amp;gt;`</text>
  </message>
  <message>
    <ts>2017-07-09T15:26:17.901640</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U6531GSTW&gt; yeah it seems like thats malformed json</text>
  </message>
  <message>
    <ts>2017-07-09T15:27:00.904857</ts>
    <user>U6531GSTW</user>
    <text>&lt;@U23SA861Y&gt; &lt;https://jsonblob.com/6ecd993e-6290-11e7-ae4c-e793fe90c432&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T15:27:40.908175</ts>
    <user>U6531GSTW</user>
    <text>used on this code &lt;https://ellie-app.com/3HGC3s98j2xa1/4&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T15:27:53.909189</ts>
    <user>U23SA861Y</user>
    <text>looks alright, but I think you might be reading the wrong file maybe?</text>
  </message>
  <message>
    <ts>2017-07-09T15:28:12.910728</ts>
    <user>U6531GSTW</user>
    <text>can i link this url to the elm code?</text>
  </message>
  <message>
    <ts>2017-07-09T15:28:20.911321</ts>
    <user>U6531GSTW</user>
    <text>or what do you mean by "wrong file"</text>
  </message>
  <message>
    <ts>2017-07-09T15:28:47.913348</ts>
    <user>U6531GSTW</user>
    <text>this part of update reads the json link etc. :</text>
  </message>
  <message>
    <ts>2017-07-09T15:28:48.913414</ts>
    <user>U6531GSTW</user>
    <text>LoadJson -&amp;gt;
            --( model, Http.send JsonLoaded (Http.getString "hello.txt") )
            --( model, Http.send JsonLoaded (Http.getString "shapes.json") )
            ( model
            , Http.send JsonLoaded
                (Http.get "&lt;https://jsonblob.com/6ecd993e-6290-11e7-ae4c-e793fe90c432&gt;"
                    (JD.field "Aufgaben" (JD.list aufgabe))
                )
            )

        JsonLoaded (Ok newListAufgaben) -&amp;gt;
            ( { model | saved = newListAufgaben }, Cmd.none )

        JsonLoaded (Err error) -&amp;gt;
            ( { model | show = "Error:  " ++ (toString error) }, Cmd.none )</text>
  </message>
  <message>
    <ts>2017-07-09T15:30:16.920317</ts>
    <user>U23SA861Y</user>
    <text>heh, doesn't that link to the html page not the raw json blob</text>
  </message>
  <message>
    <ts>2017-07-09T15:30:44.922807</ts>
    <user>U6531GSTW</user>
    <text>yes how can i upload such a raw json?</text>
  </message>
  <message>
    <ts>2017-07-09T15:31:38.927129</ts>
    <user>U23SA861Y</user>
    <text>umm, well you need a server to host it. you do it through github maybe</text>
  </message>
  <message>
    <ts>2017-07-09T15:33:02.934056</ts>
    <user>U62V8HFJR</user>
    <text>I'm getting a syntax error for this code snippet:
```
module Src.Models exposing (..)

import Navigation

import Homework.Week4.Main as Week4

type Route = ReadmeRoute
           | Week4Route
           | NotFoundRoute

type alias Model =
    { week4 : Week4.Model
    , route : Route
    }
```</text>
  </message>
  <message>
    <ts>2017-07-09T15:33:05.934385</ts>
    <user>U62V8HFJR</user>
    <text>```
-- SYNTAX PROBLEM ------------------------------------------- ././Src/Models.elm

I ran into something unexpected when parsing your code!

18|     { week4 : Week4.initModel
                ^
I am looking for one of the following things:

    "|"
    an equals sign '='
    whitespace
```</text>
  </message>
  <message>
    <ts>2017-07-09T15:33:30.936516</ts>
    <user>U62V8HFJR</user>
    <text>I keep staring at this and don't see the issue -- am I just blind or is something weird going on?</text>
  </message>
  <message>
    <ts>2017-07-09T15:35:27.945793</ts>
    <user>U23SA861Y</user>
    <text>hmm, I'm not seeing it either...</text>
  </message>
  <message>
    <ts>2017-07-09T15:36:33.951388</ts>
    <user>U62V8HFJR</user>
    <text>my initial guess was that Elm didn't like numbers in identifiers (e.g. `week4` as the field in `Model`), but the REPL didn't seem to mind them</text>
  </message>
  <message>
    <ts>2017-07-09T15:36:57.953121</ts>
    <user>U23SA861Y</user>
    <text>ohh the issues is where you are creating the model</text>
  </message>
  <message>
    <ts>2017-07-09T15:37:31.956044</ts>
    <user>U23SA861Y</user>
    <text>record assignment uses `=` not `:`. The colon is used for the type declaration but in the assignment you need to use equals</text>
  </message>
  <message>
    <ts>2017-07-09T15:37:59.958252</ts>
    <user>U62V8HFJR</user>
    <text>Oh, :facepalm:</text>
  </message>
  <message>
    <ts>2017-07-09T15:38:03.958663</ts>
    <user>U62V8HFJR</user>
    <text>just looking at the wrong line</text>
  </message>
  <message>
    <ts>2017-07-09T15:38:15.959521</ts>
    <user>U62V8HFJR</user>
    <text>yep, blind then. Thanks</text>
  </message>
  <message>
    <ts>2017-07-09T15:38:16.959583</ts>
    <user>U23SA861Y</user>
    <text>line 18</text>
  </message>
  <message>
    <ts>2017-07-09T15:38:32.960893</ts>
    <user>U23SA861Y</user>
    <text>happens to all of us</text>
  </message>
  <message>
    <ts>2017-07-09T15:40:13.969031</ts>
    <user>U6531GSTW</user>
    <text>Error: BadPayload "Expecting an Int at _.Aufgaben[1].aMinuten but instead got: \"1\"" { status = { code = 200, message = "OK" }, headers = Dict.fromList [("Cache-Control","max-age=300"),("Content-Type","text/plain; charset=utf-8"),("Expires","Sun, 09 Jul 2017</text>
  </message>
  <message>
    <ts>2017-07-09T15:40:30.970463</ts>
    <user>U6531GSTW</user>
    <text>&lt;https://raw.githubusercontent.com/Tegshigzugder/somethingnew/master/newfile.json&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T15:42:18.979364</ts>
    <user>U23SA861Y</user>
    <text>you are using an int as your elm type but you are encoding it as a string in the json message</text>
  </message>
  <message>
    <ts>2017-07-09T15:42:50.981967</ts>
    <user>U6531GSTW</user>
    <text>.. i dont follow</text>
  </message>
  <message>
    <ts>2017-07-09T15:42:52.982149</ts>
    <user>U6531GSTW</user>
    <text>what do you mean?</text>
  </message>
  <message>
    <ts>2017-07-09T15:43:23.984561</ts>
    <user>U6531GSTW</user>
    <text>should i take these " " away?</text>
  </message>
  <message>
    <ts>2017-07-09T15:44:22.989322</ts>
    <user>U23SA861Y</user>
    <text>yeah, "1" is a string</text>
  </message>
  <message>
    <ts>2017-07-09T15:44:26.989582</ts>
    <user>U23SA861Y</user>
    <text>1 is an int</text>
  </message>
  <message>
    <ts>2017-07-09T15:44:30.989930</ts>
    <user>U23SA861Y</user>
    <text>in json anyway</text>
  </message>
  <message>
    <ts>2017-07-09T15:44:44.991133</ts>
    <user>U23SA861Y</user>
    <text>well number</text>
  </message>
  <message>
    <ts>2017-07-09T15:44:52.991886</ts>
    <user>U6531GSTW</user>
    <text>should i take "" also from date?</text>
  </message>
  <message>
    <ts>2017-07-09T15:45:38.996121</ts>
    <user>U23SA861Y</user>
    <text>no, because those are strings and your decoder is expecting them to be</text>
  </message>
  <message>
    <ts>2017-07-09T15:46:06.998379</ts>
    <user>U6531GSTW</user>
    <text>holy shit</text>
  </message>
  <message>
    <ts>2017-07-09T15:46:08.998549</ts>
    <user>U6531GSTW</user>
    <text>it worked..</text>
  </message>
  <message>
    <ts>2017-07-09T15:46:16.999246</ts>
    <user>U23SA861Y</user>
    <text>and by date a presume you mean aTermin and aDeadl</text>
  </message>
  <message>
    <ts>2017-07-09T15:46:20.999649</ts>
    <user>U23SA861Y</user>
    <text>there you go</text>
  </message>
  <message>
    <ts>2017-07-09T15:46:39.001144</ts>
    <user>U6531GSTW</user>
    <text>i believe that one day, i will be able to use the full potential of coding</text>
  </message>
  <message>
    <ts>2017-07-09T15:46:44.001440</ts>
    <user>U6531GSTW</user>
    <text>:))</text>
  </message>
  <message>
    <ts>2017-07-09T15:46:50.001953</ts>
    <user>U6531GSTW</user>
    <text>thanks to you guys, for making this possible</text>
  </message>
  <message>
    <ts>2017-07-09T15:47:38.005584</ts>
    <user>U23SA861Y</user>
    <text>getting your code types to align with your data types can be one of the more infuriating experiences.</text>
  </message>
  <message>
    <ts>2017-07-09T15:48:14.008494</ts>
    <user>U23SA861Y</user>
    <text>its garunteed to manifest as a runtime error</text>
  </message>
  <message>
    <ts>2017-07-09T16:11:49.126869</ts>
    <user>U3BTVEFQU</user>
    <text>&lt;@U5W86UED6&gt; &lt;@U48AEBJQ3&gt; the problem is … I have views/components on my page which are different enough to all be defined as their own modules, but they are build using the same components

```
main
├── sub1
│   └── shared
├── sub2
│   └── shared
└── sub3
    └── shared
```</text>
  </message>
  <message>
    <ts>2017-07-09T16:14:39.140439</ts>
    <user>U3BTVEFQU</user>
    <text>&lt;@U5W86UED6&gt; &lt;@U48AEBJQ3&gt; so the messages of the shared component are kinda shared between them :disappointed:</text>
  </message>
  <message>
    <ts>2017-07-09T17:01:20.361881</ts>
    <user>U48AEBJQ3</user>
    <text>Alright, I have a minute to thick on this. We should have 'the talk' :wink:. Thinking in components in the way that you seem to be is going cause you a lot of grief working with Elm. You probably come from an OO background, so you are used to isolating state into objects, but in Elm, all of the state is in one place (the model) and you have to use that state to produce the view. Please don't take any of this the wrong way, it is a *very* common problem that the community is still working on a way to communicate earlier.

As for what is going on here, you have a bunch of 'components'. For each of them, you will likely have a data structure which holds its various pieces of state (usually a record) and this data structure lives in the model somewhere. You will use these data structures in functions which produce `Html Msg`. These functions need to generate different messages so you know which 'component' data structure to update.

There are a couple of ways to do this. One is to just make a whole bunch of messages, one for each message that the component needs times the number of components. That probably sucks.

Another way is to take the messages that you are already using and upgrade them with some sort of identifier which lets you know which component produced it. This could be an integer or a string or a union, it doesn't matter, you just have to be able to identify which data structure to update (perhaps they are all stored in a `Dict String ComponentState`) I am going to call this the `Id`. Now you need to upgrade all of the component-related message data constructors, so `MyMsg` becomes `MyMsg Id` or `MyOtherMsg String` becomes `MyOtherMsg Id String` (note the placement of Id ahead of String). Then you upgrade your component view functions to take the `Id` somehow. I would recommend that your view functions look something like `componentView : msg -&amp;gt; ComponentState -&amp;gt; Html msg`, then you would call `componentView (MyMsg "footer") model.footerComponentState`.</text>
  </message>
  <message>
    <ts>2017-07-09T17:26:22.480922</ts>
    <user>U333XNTNY</user>
    <text>Hi y'all! Short story: I'm looking for a function, that takes each element of a list and the next, applies another function and returns the result list. Something between `map` and `foldl` I believe :thinking_face: Longer story: I have a list of coordinates and a function, that can compute the distance between two coordinates. Now I'd like to compute the distance between each coordinate and it's next one in the list.</text>
  </message>
  <message>
    <ts>2017-07-09T17:28:34.491381</ts>
    <user>U333XNTNY</user>
    <text>I was thinking of creating two lists, one without the first and the other without the last element and then use `map2`. Feels a bit clumsy tho.</text>
  </message>
  <message>
    <ts>2017-07-09T17:29:04.493703</ts>
    <user>U23SA861Y</user>
    <text>no thats the typical way to do it</text>
  </message>
  <message>
    <ts>2017-07-09T17:29:28.495606</ts>
    <user>U23SA861Y</user>
    <text>List.map2 f list (List.tail list)</text>
  </message>
  <message>
    <ts>2017-07-09T17:31:01.503330</ts>
    <user>U0FP80EKB</user>
    <text>I'd probably do `zip list (List.tail list) |&amp;gt; foldl` instead of `map2` but that is just me</text>
  </message>
  <message>
    <ts>2017-07-09T17:31:13.504400</ts>
    <user>U0FP80EKB</user>
    <text>Depends on whether `map2` is optimized better</text>
  </message>
  <message>
    <ts>2017-07-09T17:31:34.506000</ts>
    <user>U0FP80EKB</user>
    <text>You probably want to make sure what each does since those lists are of different sizes</text>
  </message>
  <message>
    <ts>2017-07-09T17:31:42.506596</ts>
    <user>U0FP80EKB</user>
    <text>Depends on what you want the behavior to be</text>
  </message>
  <message>
    <ts>2017-07-09T17:32:03.508389</ts>
    <user>U23SA861Y</user>
    <text>why would you fold</text>
  </message>
  <message>
    <ts>2017-07-09T17:32:10.508925</ts>
    <user>U23SA861Y</user>
    <text>it would just be a map</text>
  </message>
  <message>
    <ts>2017-07-09T17:32:28.510318</ts>
    <user>U0FP80EKB</user>
    <text>I thought he wanted to fold</text>
  </message>
  <message>
    <ts>2017-07-09T17:32:37.511097</ts>
    <user>U23SA861Y</user>
    <text>also, there is no zip, only map2</text>
  </message>
  <message>
    <ts>2017-07-09T17:32:39.511227</ts>
    <user>U0FP80EKB</user>
    <text>oh, I misread. Yeah, map</text>
  </message>
  <message>
    <ts>2017-07-09T17:32:45.511770</ts>
    <user>U23SA861Y</user>
    <text>unless you pull out list-extra</text>
  </message>
  <message>
    <ts>2017-07-09T17:32:51.512172</ts>
    <user>U0FP80EKB</user>
    <text>oh, haha</text>
  </message>
  <message>
    <ts>2017-07-09T17:32:53.512427</ts>
    <user>U0FP80EKB</user>
    <text>I was looking at list-extra</text>
  </message>
  <message>
    <ts>2017-07-09T17:33:00.512916</ts>
    <user>U0FP80EKB</user>
    <text>Yeah, map2 is the best :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T17:33:14.514095</ts>
    <user>U0FP80EKB</user>
    <text>(serve me right for briefly jumping in and not paying attention)</text>
  </message>
  <message>
    <ts>2017-07-09T17:33:27.515087</ts>
    <user>U23SA861Y</user>
    <text>:stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-09T17:33:28.515197</ts>
    <user>U6531GSTW</user>
    <text>whats one way to check for dates? i have something like "termin : date.date" and now i want to check if a something.termin is between two set dates</text>
  </message>
  <message>
    <ts>2017-07-09T17:33:33.515579</ts>
    <user>U333XNTNY</user>
    <text>Thanks &lt;@U23SA861Y&gt; &amp;amp; &lt;@U0FP80EKB&gt; :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T17:33:55.517470</ts>
    <user>U6531GSTW</user>
    <text>would 31-10-2017 &amp;lt; something.termin &amp;lt; 23-11-2017 work?</text>
  </message>
  <message>
    <ts>2017-07-09T17:34:19.519351</ts>
    <user>U23SA861Y</user>
    <text>you're attempting to do what?</text>
  </message>
  <message>
    <ts>2017-07-09T17:34:56.521943</ts>
    <user>U6531GSTW</user>
    <text>i have this one "date" to an item</text>
  </message>
  <message>
    <ts>2017-07-09T17:35:30.524634</ts>
    <user>U6531GSTW</user>
    <text>like type alias something = {termin : date.date}</text>
  </message>
  <message>
    <ts>2017-07-09T17:35:52.526456</ts>
    <user>U6531GSTW</user>
    <text>something.termin = 01-11-2017</text>
  </message>
  <message>
    <ts>2017-07-09T17:36:09.527698</ts>
    <user>U6531GSTW</user>
    <text>now i want to only have these "something"s</text>
  </message>
  <message>
    <ts>2017-07-09T17:36:17.528239</ts>
    <user>U6531GSTW</user>
    <text>if their date is between certain two dates</text>
  </message>
  <message>
    <ts>2017-07-09T17:36:39.529708</ts>
    <user>U6531GSTW</user>
    <text>basically how can i check if a date is before another and after one</text>
  </message>
  <message>
    <ts>2017-07-09T17:36:54.530677</ts>
    <user>U23SA861Y</user>
    <text>so if you have a list and you only want to take a section of that list you want List.filter</text>
  </message>
  <message>
    <ts>2017-07-09T17:37:12.532069</ts>
    <user>U23SA861Y</user>
    <text>you can then construct a function that returns true, if it is between the dates.</text>
  </message>
  <message>
    <ts>2017-07-09T17:37:14.532214</ts>
    <user>U6531GSTW</user>
    <text>no no im just working with the dates</text>
  </message>
  <message>
    <ts>2017-07-09T17:37:36.533828</ts>
    <user>U6531GSTW</user>
    <text>yes a function that checks if the date is between certain 2 dates</text>
  </message>
  <message>
    <ts>2017-07-09T17:37:45.534485</ts>
    <user>U6531GSTW</user>
    <text>how would that work?</text>
  </message>
  <message>
    <ts>2017-07-09T17:38:30.537672</ts>
    <user>U23SA861Y</user>
    <text>do you have the dates as a string or as  an actual date object</text>
  </message>
  <message>
    <ts>2017-07-09T17:38:46.538976</ts>
    <user>U6531GSTW</user>
    <text>as an actual date object</text>
  </message>
  <message>
    <ts>2017-07-09T17:38:53.539598</ts>
    <user>U6531GSTW</user>
    <text>, aTermin : Date.Date</text>
  </message>
  <message>
    <ts>2017-07-09T17:39:48.543694</ts>
    <user>U6531GSTW</user>
    <text>but if its possible i want to write the other dates as string in the code</text>
  </message>
  <message>
    <ts>2017-07-09T17:40:33.547460</ts>
    <user>U23SA861Y</user>
    <text>you need to parse them to actually compare in a sane way</text>
  </message>
  <message>
    <ts>2017-07-09T17:40:42.548307</ts>
    <user>U23SA861Y</user>
    <text>are these static dates</text>
  </message>
  <message>
    <ts>2017-07-09T17:41:29.552011</ts>
    <user>U6531GSTW</user>
    <text>actually i would like to check if the dates are in the current week</text>
  </message>
  <message>
    <ts>2017-07-09T17:41:41.552864</ts>
    <user>U6531GSTW</user>
    <text>on a timetable i would only like to see the tasks that i have for this week</text>
  </message>
  <message>
    <ts>2017-07-09T17:41:49.553519</ts>
    <user>U6531GSTW</user>
    <text>but then i would also need to import other things such as now/time</text>
  </message>
  <message>
    <ts>2017-07-09T17:42:12.555525</ts>
    <user>U6531GSTW</user>
    <text>and for the sake of simpleness and demonstartion for tomorrow i would like to just write 2 dates for next week</text>
  </message>
  <message>
    <ts>2017-07-09T17:43:01.559039</ts>
    <user>U23SA861Y</user>
    <text>ok so 
```
start = Data.fromString "01-11-2017"
```</text>
  </message>
  <message>
    <ts>2017-07-09T17:43:17.560317</ts>
    <user>U23SA861Y</user>
    <text>will give you a nice date in your code</text>
  </message>
  <message>
    <ts>2017-07-09T17:43:30.561276</ts>
    <user>U6531GSTW</user>
    <text>and should i also say start : date.date</text>
  </message>
  <message>
    <ts>2017-07-09T17:43:32.561423</ts>
    <user>U6531GSTW</user>
    <text>?</text>
  </message>
  <message>
    <ts>2017-07-09T17:43:54.563035</ts>
    <user>U23SA861Y</user>
    <text>yep, you could do that</text>
  </message>
  <message>
    <ts>2017-07-09T17:44:18.565395</ts>
    <user>U23SA861Y</user>
    <text>I don't believe dates are directly comparable but times are</text>
  </message>
  <message>
    <ts>2017-07-09T17:45:07.569075</ts>
    <user>U23SA861Y</user>
    <text>so you can use the toTime function and then compare those</text>
  </message>
  <message>
    <ts>2017-07-09T17:45:18.569900</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;http://package.elm-lang.org/packages/justinmimbs/elm-date-extra/2.0.3/Date-Extra#isBetween&gt; ?</text>
  </message>
  <message>
    <ts>2017-07-09T17:46:11.574336</ts>
    <user>U23SA861Y</user>
    <text>then of course you can pull in more dependencies</text>
  </message>
  <message>
    <ts>2017-07-09T17:46:26.575341</ts>
    <user>U48AEBJQ3</user>
    <text>Or at least go and see how someone else has done it.</text>
  </message>
  <message>
    <ts>2017-07-09T17:48:03.582417</ts>
    <user>U6531GSTW</user>
    <text>is this correct ? start = Data.fromString "01-11-2017"?</text>
  </message>
  <message>
    <ts>2017-07-09T17:48:31.584865</ts>
    <user>U23SA861Y</user>
    <text>well Date not Data but I believe so yes</text>
  </message>
  <message>
    <ts>2017-07-09T17:48:55.586544</ts>
    <user>U23SA861Y</user>
    <text>ahh nvm, it returns a result because it may not be a valid date</text>
  </message>
  <message>
    <ts>2017-07-09T17:49:13.587941</ts>
    <user>U6531GSTW</user>
    <text>yes.. how do i make it a date?</text>
  </message>
  <message>
    <ts>2017-07-09T17:49:37.589831</ts>
    <user>U23SA861Y</user>
    <text>by parsing the result</text>
  </message>
  <message>
    <ts>2017-07-09T17:50:09.592119</ts>
    <user>U6531GSTW</user>
    <text>ahh how do i parse :smile:..</text>
  </message>
  <message>
    <ts>2017-07-09T17:50:33.593966</ts>
    <user>U48AEBJQ3</user>
    <text>There is also &lt;http://package.elm-lang.org/packages/elm-community/elm-time/1.0.7/Time-Date#date&gt; and that package also gives you a `compare` which can be used to construct `isBetween`</text>
  </message>
  <message>
    <ts>2017-07-09T17:51:25.598250</ts>
    <user>U23SA861Y</user>
    <text>yeah that date constructor would probably be helpful</text>
  </message>
  <message>
    <ts>2017-07-09T17:54:17.611447</ts>
    <user>U23SA861Y</user>
    <text>yeah, I'd pull in that community package.</text>
  </message>
  <message>
    <ts>2017-07-09T17:54:29.612470</ts>
    <user>U6531GSTW</user>
    <text>start = Date.fromString "10-07-2017"
end = Date.fromString "16-07-2017"</text>
  </message>
  <message>
    <ts>2017-07-09T17:54:33.612719</ts>
    <user>U6531GSTW</user>
    <text>umm this is false?</text>
  </message>
  <message>
    <ts>2017-07-09T17:55:47.618529</ts>
    <user>U6531GSTW</user>
    <text>i just need to turn Result String Date into a date..</text>
  </message>
  <message>
    <ts>2017-07-09T17:56:44.622823</ts>
    <user>U23SA861Y</user>
    <text>the data constructor in the community package avoids dealing with results and such</text>
  </message>
  <message>
    <ts>2017-07-09T17:57:45.627684</ts>
    <user>U6531GSTW</user>
    <text>so what should i do now?</text>
  </message>
  <message>
    <ts>2017-07-09T18:02:19.652093</ts>
    <user>U5XHTBFS6</user>
    <text>Hi y'all, I'm having an apparently crazy problem with `elm-test` and any help would be appreciated.

My tests were running fine until I installed `truqu/elm-base64` with `elm-package install truqu/elm-base64`, now `elm-test` fails with 
```
Compilation failed for /home/etandel/nomad/nomad-frontend/elm-stuff/generated-code/elm-community/elm-test/src/Maineed9d77ce544e1ad67de53dae9be090c.elm
```

Actually, this only started happening once I synced `tests/elm-package.json` with my main `elm-package.json`. If I remove the `truqu/elm-base64` line from `tests/elm-package.json`, the tests run fine again.

BTW, if I `cd tests` and then run:

```
elm-make /home/etandel/nomad/nomad-frontend/elm-stuff/generated-code/elm-community/elm-test/src/Maineed9d77ce544e1ad67de53dae9be090c.elm
```

I get this error:

```
I cannot find module 'Test.Runner.Node'.

Module 'Test.Generated.Maineed9d77ce544e1ad67de53dae9be090c' is trying to import it.

Potential problems could be:
  * Misspelled the module name
  * Need to add a source directory or new dependency to elm-package.json
```</text>
  </message>
  <message>
    <ts>2017-07-09T18:02:58.655174</ts>
    <user>U5XHTBFS6</user>
    <text>Does anyone have any idea what might be going on?</text>
  </message>
  <message>
    <ts>2017-07-09T18:03:36.658154</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U6531GSTW&gt;  &lt;https://ellie-app.com/3HKJwRqPDcja1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T18:10:44.693078</ts>
    <user>U5XHTBFS6</user>
    <text>Welp, I just found this similar error on github: &lt;https://github.com/elm-community/elm-test/issues/178&gt;
Deleting all of elm-stuff and reinstalling it again worked for me as well. Very strange, and very annoying =s</text>
  </message>
  <message>
    <ts>2017-07-09T18:13:51.708063</ts>
    <user>U6531GSTW</user>
    <text>somehow the code is creating a huge mismatch ni my code :))</text>
  </message>
  <message>
    <ts>2017-07-09T18:14:22.710535</ts>
    <user>U23SA861Y</user>
    <text>you can change the alias on the community package</text>
  </message>
  <message>
    <ts>2017-07-09T18:14:43.711889</ts>
    <user>U23SA861Y</user>
    <text>it's probably colliding with the native Date import</text>
  </message>
  <message>
    <ts>2017-07-09T18:14:49.712284</ts>
    <user>U6531GSTW</user>
    <text>yes it is :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T18:15:32.715773</ts>
    <user>U6531GSTW</user>
    <text>i renamed "import Time.Date as Something" and now  aTermin : Something.Date</text>
  </message>
  <message>
    <ts>2017-07-09T18:15:40.716305</ts>
    <user>U6531GSTW</user>
    <text>but it should be just native Date.Date</text>
  </message>
  <message>
    <ts>2017-07-09T18:16:17.719592</ts>
    <user>U23SA861Y</user>
    <text>no the type is still from the native package</text>
  </message>
  <message>
    <ts>2017-07-09T18:16:31.720648</ts>
    <user>U23SA861Y</user>
    <text>it's the functions Date.data and Date.compare which are in that package</text>
  </message>
  <message>
    <ts>2017-07-09T18:17:11.723689</ts>
    <user>U6531GSTW</user>
    <text>okey? and now i should?</text>
  </message>
  <message>
    <ts>2017-07-09T18:18:58.732129</ts>
    <user>U23SA861Y</user>
    <text>don't change it the `aTermin : Something.Date`.  Change the compare and date functions to be Something.date, Something.compare</text>
  </message>
  <message>
    <ts>2017-07-09T18:19:42.735497</ts>
    <user>U6531GSTW</user>
    <text>no no the aTermin: Date.Date</text>
  </message>
  <message>
    <ts>2017-07-09T18:19:46.735837</ts>
    <user>U6531GSTW</user>
    <text>but the error says</text>
  </message>
  <message>
    <ts>2017-07-09T18:19:48.735947</ts>
    <user>U6531GSTW</user>
    <text>&lt;https://ellie-app.com/3HK9tMNGTLHa1/2&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T18:19:54.736390</ts>
    <user>U6531GSTW</user>
    <text>List
{ aBeschreibung : String
, aDeadl : Date
, aMinuten : Int
, aMonth : Month
, aTyp : String
, aDauer : Int
, aName : String
, aPrio : String
, aStunden : Int
, aTag : Day
, aTermin : Something.Date
}</text>
  </message>
  <message>
    <ts>2017-07-09T18:21:55.747165</ts>
    <user>U48AEBJQ3</user>
    <text>You are still using `Date.fromString` instead of the `date` function from the package.</text>
  </message>
  <message>
    <ts>2017-07-09T18:23:19.754084</ts>
    <user>U6531GSTW</user>
    <text>sorry</text>
  </message>
  <message>
    <ts>2017-07-09T18:23:21.754215</ts>
    <user>U6531GSTW</user>
    <text>wrong link</text>
  </message>
  <message>
    <ts>2017-07-09T18:23:22.754312</ts>
    <user>U6531GSTW</user>
    <text>&lt;https://ellie-app.com/3HK9tMNGTLHa1/3&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T18:24:48.761055</ts>
    <user>U23SA861Y</user>
    <text>&lt;https://ellie-app.com/3HL3grG4KZGa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-09T18:24:57.761701</ts>
    <user>U23SA861Y</user>
    <text>pay attention to the types your values are returning</text>
  </message>
  <message>
    <ts>2017-07-09T18:43:50.849148</ts>
    <user>U23SA861Y</user>
    <text>the api documentation is your friend</text>
  </message>
  <message>
    <ts>2017-07-09T18:55:16.903666</ts>
    <user>U663M2MB7</user>
    <text>is there any super simple way to fetch some xml from a web service? i don't need to pass messages and stuff, as this http GET will be sent from within a map function</text>
  </message>
  <message>
    <ts>2017-07-09T18:56:18.908623</ts>
    <user>U48AEBJQ3</user>
    <text>You can't query things inside of a map function. You have to pass the request out of your update function to the runtime and then the runtime executes it and gives you the result.</text>
  </message>
  <message>
    <ts>2017-07-09T18:59:15.922738</ts>
    <user>U663M2MB7</user>
    <text>why not? the mapping function is mapping specifically based on the results from the http GET (or rather should)</text>
  </message>
  <message>
    <ts>2017-07-09T19:00:41.931513</ts>
    <user>U48AEBJQ3</user>
    <text>Elm has managed side effects. You can do the get and if it succeeds you can map on the resulting data.</text>
  </message>
  <message>
    <ts>2017-07-09T19:07:29.968632</ts>
    <user>U663M2MB7</user>
    <text>Right, that is going to make this more complicated than expected.</text>
  </message>
  <message>
    <ts>2017-07-09T19:07:31.968910</ts>
    <user>U663M2MB7</user>
    <text>Thank you.</text>
  </message>
  <message>
    <ts>2017-07-09T20:07:09.296023</ts>
    <user>U23SA861Y</user>
    <text>not more complicated, just different. You likely need to turn your code inside out to make it work out.</text>
  </message>
  <message>
    <ts>2017-07-09T20:42:53.524927</ts>
    <user>U5DJNFLUD</user>
    <text>I've been trying to understand how the code in `rtfeldman/elm-spa-example` handles having one `Main` file and multiple other model files, and how stuff gets routed between them, so I put together a working example -- &lt;https://gist.github.com/mrb/b5f87cf3d8918c87ff211d2ed3427d88&gt; -- it's "simpler" than the `elm-spa-example` stuff because it has fewer moving parts and doesn't do routing and such. Does this look sensible to people? Did I miss anything or mess anything up?</text>
  </message>
  <message>
    <ts>2017-07-09T20:43:57.531838</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5DJNFLUD&gt; yep, that's the pattern</text>
  </message>
  <message>
    <ts>2017-07-09T20:44:22.534823</ts>
    <user>U5DJNFLUD</user>
    <text>&lt;@U153UK3FA&gt; Cool! Took me a bit to figure out how to Map the sub-models Msg types</text>
  </message>
  <message>
    <ts>2017-07-09T20:45:23.541614</ts>
    <user>U5DJNFLUD</user>
    <text>Is there a resource that spells out how to do this? The spa example blog post is mostly higher level</text>
  </message>
  <message>
    <ts>2017-07-09T20:46:59.552871</ts>
    <user>U153UK3FA</user>
    <text>It's a pattern that was popular for a while, but people over used it resulting in lots of boilerplate and confusion</text>
  </message>
  <message>
    <ts>2017-07-09T20:47:39.557555</ts>
    <user>U153UK3FA</user>
    <text>it makes a lot of sense at the level of a ‘page', but a lot less sense at the level of a ‘widget/component'</text>
  </message>
  <message>
    <ts>2017-07-09T20:48:07.560918</ts>
    <user>U5DJNFLUD</user>
    <text>Depending on the complexity/size of the widget/component, I agree</text>
  </message>
  <message>
    <ts>2017-07-09T20:48:25.563176</ts>
    <user>U5DJNFLUD</user>
    <text>Certain things are definitely simpler if you have a page</text>
  </message>
  <message>
    <ts>2017-07-09T20:50:28.577180</ts>
    <user>U153UK3FA</user>
    <text>If you search for ‘elm components' you'll find many blog posts about the pattern, but you've already got everything you need to use it.</text>
  </message>
  <message>
    <ts>2017-07-09T20:53:16.596181</ts>
    <user>U5DJNFLUD</user>
    <text>Ah ok</text>
  </message>
  <message>
    <ts>2017-07-09T20:53:18.596407</ts>
    <user>U5DJNFLUD</user>
    <text>Cool</text>
  </message>
  <message>
    <ts>2017-07-09T20:53:43.598966</ts>
    <user>U153UK3FA</user>
    <text>`Html.map`, `Cmd.map` work like any other `map` function</text>
  </message>
  <message>
    <ts>2017-07-09T20:53:48.599453</ts>
    <user>U5DJNFLUD</user>
    <text>Always helpful to find the right thing to google :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-09T20:55:29.610756</ts>
    <user>U153UK3FA</user>
    <text>new users had a tendency to ‘cargo cult' that pattern to try to build React like ‘components' which lead to a lot of confusion</text>
  </message>
  <message>
    <ts>2017-07-10T02:14:39.305920</ts>
    <user>U601ELFEG</user>
    <text>So, I'm about to deploy to a web server - I've been running with `elm-reactor` for all of development - and I've got a main.html file that works with that</text>
  </message>
  <message>
    <ts>2017-07-10T02:15:23.314566</ts>
    <user>U601ELFEG</user>
    <text>I assume I need (a) a new index.html, and (b) to call `elm-make` putting the `.js` file somewhere (`build/main.js`??) --</text>
  </message>
  <message>
    <ts>2017-07-10T02:15:39.317443</ts>
    <user>U601ELFEG</user>
    <text>I couldn't find any docs on how to set this up or best practices.</text>
  </message>
  <message>
    <ts>2017-07-10T02:15:43.318137</ts>
    <user>U601ELFEG</user>
    <text>any good pointers?</text>
  </message>
  <message>
    <ts>2017-07-10T02:31:17.497174</ts>
    <user>U64M3DF1B</user>
    <text>&lt;@U601ELFEG&gt; this actually is pretty solid - &lt;https://medium.com/@diamondgfx/writing-a-full-site-in-phoenix-and-elm-a100804c9499&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T04:17:41.200567</ts>
    <user>U5QJW0DDE</user>
    <text>is there a way to have elm-reactor automatically refresh the page when you save the source file</text>
  </message>
  <message>
    <ts>2017-07-10T04:18:03.207591</ts>
    <user>U5QJW0DDE</user>
    <text>similar to how figwheel works for cljs</text>
  </message>
  <message>
    <ts>2017-07-10T04:18:22.213938</ts>
    <user>U5QJW0DDE</user>
    <text>this would allow you to keep coding, saving, and seeing changes immediately without switching to web page and hitting refresh</text>
  </message>
  <message>
    <ts>2017-07-10T04:22:34.298611</ts>
    <user>U3SJEDR96</user>
    <text>elm-reactor itself can't do that, but `elm-live` does exactly that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-10T04:28:00.409198</ts>
    <user>U5QJW0DDE</user>
    <text>sweet i shall give it a proper tidy effort</text>
  </message>
  <message>
    <ts>2017-07-10T04:31:28.483056</ts>
    <user>U5QJW0DDE</user>
    <text>i'm curious about the Debug module, if you have "log" sprinkled through your code, that would mean manually removing all those logs for a production build? or is there a more elegant workflow?</text>
  </message>
  <message>
    <ts>2017-07-10T04:42:36.720274</ts>
    <user>U600K7WE4</user>
    <text>&lt;@U5QJW0DDE&gt; You can also check out create-elm-app (&lt;https://www.npmjs.com/package/create-elm-app&gt;)</text>
  </message>
  <message>
    <ts>2017-07-10T04:46:07.795857</ts>
    <user>U5QJW0DDE</user>
    <text>looks nice</text>
  </message>
  <message>
    <ts>2017-07-10T04:46:35.805836</ts>
    <user>U600K7WE4</user>
    <text>It is similar to create-react-app if you are familiar with it. We are very satisfied with using it</text>
  </message>
  <message>
    <ts>2017-07-10T04:51:40.916679</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5QJW0DDE&gt; currently; yes. I believe in 0.19 Elm will be a little smarter about that, tho, but consider that "unconfirmed"</text>
  </message>
  <message>
    <ts>2017-07-10T05:25:12.635260</ts>
    <user>U663M2MB7</user>
    <text>&lt;@U23SA861Y&gt; likely not, having a Haskell background helps, but after 5 hours of Elm I had no idea it treated IO special or if it was me making the http calls wrongly or what :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-10T05:53:56.235821</ts>
    <user>U5QJW0DDE</user>
    <text>how do you import a module in the repl?</text>
  </message>
  <message>
    <ts>2017-07-10T05:54:00.237390</ts>
    <user>U5QJW0DDE</user>
    <text>i.e. the Text module</text>
  </message>
  <message>
    <ts>2017-07-10T05:57:38.312659</ts>
    <user>U2JA29EKF</user>
    <text>`import ModuleName` should work. not sure what Text module you are referring to. but, for example, `import Dict` will import the `Dict` module</text>
  </message>
  <message>
    <ts>2017-07-10T05:58:28.329665</ts>
    <user>U5QJW0DDE</user>
    <text>I'm referring to using Text.fromString</text>
  </message>
  <message>
    <ts>2017-07-10T06:01:39.397297</ts>
    <user>U5QJW0DDE</user>
    <text>import Text does not work from a repl</text>
  </message>
  <message>
    <ts>2017-07-10T06:02:01.404851</ts>
    <user>U2JA29EKF</user>
    <text>there is no `Text` module in core, is `Text` on of your own modules?</text>
  </message>
  <message>
    <ts>2017-07-10T06:02:20.411664</ts>
    <user>U5QJW0DDE</user>
    <text>no, it is mentioned as an Elm module here: &lt;http://elm-lang.org/docs/syntax&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T06:02:36.416974</ts>
    <user>U5QJW0DDE</user>
    <text>there is mention of Text.fromString function</text>
  </message>
  <message>
    <ts>2017-07-10T06:04:30.454167</ts>
    <user>U2JA29EKF</user>
    <text>I can't find any mention of `Text` or `fromString` on that page when I ctrl + f ...</text>
  </message>
  <message>
    <ts>2017-07-10T06:04:58.463284</ts>
    <user>U5QJW0DDE</user>
    <text>sorry, i meant this page: &lt;http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#++&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T06:05:28.473032</ts>
    <user>U3SJEDR96</user>
    <text>Elm only has a `String` type, no `Text`. Possibly a remnant from ... a long time ago :x</text>
  </message>
  <message>
    <ts>2017-07-10T06:05:35.475443</ts>
    <user>U5QJW0DDE</user>
    <text>ah, a doc failure</text>
  </message>
  <message>
    <ts>2017-07-10T06:05:36.475900</ts>
    <user>U5QJW0DDE</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-10T06:06:21.490544</ts>
    <user>U3SJEDR96</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/3.0.0/Text&gt; so yeah, 0.16 leftovers, it seems like</text>
  </message>
  <message>
    <ts>2017-07-10T06:06:45.497911</ts>
    <user>U5QJW0DDE</user>
    <text>is there such a thing as fromString anymore?</text>
  </message>
  <message>
    <ts>2017-07-10T06:06:52.500341</ts>
    <user>U5QJW0DDE</user>
    <text>i guess not</text>
  </message>
  <message>
    <ts>2017-07-10T06:07:31.513209</ts>
    <user>U3SJEDR96</user>
    <text>I don't think there's a `fromString` in core anymore, no, but there might be things like `BigInt.fromString` in separate packages</text>
  </message>
  <message>
    <ts>2017-07-10T06:07:58.522273</ts>
    <user>U3SJEDR96</user>
    <text>oh, theres `Date.fromString` still</text>
  </message>
  <message>
    <ts>2017-07-10T06:08:09.525400</ts>
    <user>U3SJEDR96</user>
    <text>&lt;http://klaftertief.github.io/elm-search/?q=fromString&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T06:08:32.532966</ts>
    <user>U604S603Y</user>
    <text>I think there's one for Float and Int, too</text>
  </message>
  <message>
    <ts>2017-07-10T06:08:59.541502</ts>
    <user>U3SJEDR96</user>
    <text>there are `String.toFloat` and `String.toInt`, indeed</text>
  </message>
  <message>
    <ts>2017-07-10T06:09:32.552077</ts>
    <user>U5QJW0DDE</user>
    <text>I was interested in the bit of taking any data structure, using toString on it, and then using fromString on it.</text>
  </message>
  <message>
    <ts>2017-07-10T06:09:41.555187</ts>
    <user>U5QJW0DDE</user>
    <text>but since that exercise is moot now, no bother</text>
  </message>
  <message>
    <ts>2017-07-10T06:10:17.566471</ts>
    <user>U5QJW0DDE</user>
    <text>the old Text module seems to have provided some interesting tools similar to Clojure's reader</text>
  </message>
  <message>
    <ts>2017-07-10T08:48:16.469560</ts>
    <user>U5QJW0DDE</user>
    <text>i don't understand this type annotation: main : Program Never Model Msg</text>
  </message>
  <message>
    <ts>2017-07-10T08:49:42.502616</ts>
    <user>U5QJW0DDE</user>
    <text>What type is Program here?</text>
  </message>
  <message>
    <ts>2017-07-10T08:50:00.509486</ts>
    <user>U0K92QFST</user>
    <text>&lt;@U5QJW0DDE&gt; check out the `program` function in the `Html` module:
```
program
    :  { init : (model, Cmd msg), update : msg -&amp;gt; model -&amp;gt; (model, Cmd msg), subscriptions : model -&amp;gt; Sub msg, view : model -&amp;gt; Html msg }
    -&amp;gt; Program Never model msg
```</text>
  </message>
  <message>
    <ts>2017-07-10T08:50:38.524827</ts>
    <user>U0K92QFST</user>
    <text>as far as I know, the functions exposed by the `Html` module are the only ones which construct the type `Program`</text>
  </message>
  <message>
    <ts>2017-07-10T08:51:03.534786</ts>
    <user>U0K92QFST</user>
    <text>So you need to use these functions in order to produce a valid value for your `main` function</text>
  </message>
  <message>
    <ts>2017-07-10T08:51:50.553265</ts>
    <user>U0K92QFST</user>
    <text>I *think* `main` can also be of type `Html msg` if you just want static Html though.</text>
  </message>
  <message>
    <ts>2017-07-10T08:52:15.563549</ts>
    <user>U0K92QFST</user>
    <text>Does that make sense?</text>
  </message>
  <message>
    <ts>2017-07-10T08:53:01.582150</ts>
    <user>U5QJW0DDE</user>
    <text>ok, but as far as parsing the main type annotation itself, what does Program actually refer to here, what kind of type, i.e. is it a union or.. ?</text>
  </message>
  <message>
    <ts>2017-07-10T08:53:19.589501</ts>
    <user>U0K92QFST</user>
    <text>It's an opaque type from the `Html` library, so its implementation details are hidden from view.</text>
  </message>
  <message>
    <ts>2017-07-10T08:53:58.605114</ts>
    <user>U0K92QFST</user>
    <text>Take a look at this: &lt;http://package.elm-lang.org/help/design-guidelines#keep-tags-and-record-constructors-secret&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T08:55:12.635483</ts>
    <user>U5QJW0DDE</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-10T08:56:38.670743</ts>
    <user>U5QJW0DDE</user>
    <text>a little confusing. I assume "List" is similar. For example, List number. What does that mean? Well, it means a list of numbers, of course. But what is the actual List type, is it a record, a union, etc ? I assume that is also just like a language primitive, in a sense</text>
  </message>
  <message>
    <ts>2017-07-10T08:57:42.697921</ts>
    <user>U0K92QFST</user>
    <text>Kind of. Any library can create an opaque type. You won't know under the hood if it's a union type, a sum type with many constructors, or a native type (a language primitive)</text>
  </message>
  <message>
    <ts>2017-07-10T08:59:02.731835</ts>
    <user>U0K92QFST</user>
    <text>since its constructors aren't exposed, you can't pattern match on it or anything like that. You can only use values of that type in other functions that consume it. Library creators use opaque types to make their APIs clear and intentful and to avoid constant breaking changes whenever the underlying implementation changes.</text>
  </message>
  <message>
    <ts>2017-07-10T08:59:44.749940</ts>
    <user>U600K7WE4</user>
    <text>For the really interested i guess &lt;https://github.com/elm-lang/core&gt; may be worth a look?</text>
  </message>
  <message>
    <ts>2017-07-10T09:01:30.800703</ts>
    <user>U5QJW0DDE</user>
    <text>In this case, Program Never Model Msg is a single type, Program, with the 3 other types associated with the Program type, rightr?</text>
  </message>
  <message>
    <ts>2017-07-10T09:03:13.846217</ts>
    <user>U5QJW0DDE</user>
    <text>kinda like List Float -- the type is a List, with Float as the "kind" of List. main then is just a Program, with those others expressing the kind of Program. is this about right?</text>
  </message>
  <message>
    <ts>2017-07-10T09:05:11.897989</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U5QJW0DDE&gt; that's about right. Think about `Dict` where you can say something like `Dict String Int` that specifies the two types (key/value). So, in general, you can create a type `Foo a` where `a` is a type variable and can be replaced by a more specific type when used.</text>
  </message>
  <message>
    <ts>2017-07-10T09:05:33.907384</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, they define the type of flags, model and message you program will handle</text>
  </message>
  <message>
    <ts>2017-07-10T09:07:21.956320</ts>
    <user>U5QJW0DDE</user>
    <text>at a repl, you cannot really do a type annotation before a definition, it seems. so I guess there is no way to express a function definition that restricts the type of Maybe you can accept with the function, yeah?</text>
  </message>
  <message>
    <ts>2017-07-10T09:07:53.970466</ts>
    <user>U0K92QFST</user>
    <text>Yeah, that's right! `Program` is kind of annotating those other 3 types. It's a "tagged union." Sorry, I think I misunderstood what you were asking before :sweat_smile:</text>
  </message>
  <message>
    <ts>2017-07-10T09:08:29.986253</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5QJW0DDE&gt; correct, although you can import files (and they'll be recompiled for each expression)</text>
  </message>
  <message>
    <ts>2017-07-10T09:10:03.028228</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U0K92QFST&gt; well technically all ADT types (like Elm's union) are tagged unions</text>
  </message>
  <message>
    <ts>2017-07-10T09:10:21.036153</ts>
    <user>U5QJW0DDE</user>
    <text>as opposed to languages like C where unions cannot reflect on what they contain</text>
  </message>
  <message>
    <ts>2017-07-10T09:10:46.047986</ts>
    <user>U0K92QFST</user>
    <text>Yep!</text>
  </message>
  <message>
    <ts>2017-07-10T09:13:28.121868</ts>
    <user>U5QJW0DDE</user>
    <text>next, i'm curious about this syntax for the main definition. main = program. there is no mention of "program" before this, so it's unclear to me what it represents.</text>
  </message>
  <message>
    <ts>2017-07-10T09:13:53.133053</ts>
    <user>U5QJW0DDE</user>
    <text>actually never mind, i see program is exposed by Html</text>
  </message>
  <message>
    <ts>2017-07-10T09:13:58.135393</ts>
    <user>U5QJW0DDE</user>
    <text>it's a function</text>
  </message>
  <message>
    <ts>2017-07-10T09:15:33.178610</ts>
    <user>U0K92QFST</user>
    <text>&lt;@U5QJW0DDE&gt; that's right, I think it exposes 3 functions that return the `Program` type. You can choose the one you need depending on your use case.</text>
  </message>
  <message>
    <ts>2017-07-10T09:28:04.544652</ts>
    <user>U5QJW0DDE</user>
    <text>what is the most elegant way to flip the value of a Bool?</text>
  </message>
  <message>
    <ts>2017-07-10T09:28:15.550212</ts>
    <user>U5QJW0DDE</user>
    <text>since it's a union, i can only think of an if or case</text>
  </message>
  <message>
    <ts>2017-07-10T09:29:09.577245</ts>
    <user>U1P6FFJ64</user>
    <text>`bool = not aBool`</text>
  </message>
  <message>
    <ts>2017-07-10T09:29:12.578459</ts>
    <user>U1ANV9FML</user>
    <text>Is there a cross-module index for Elm packages? For example, it would be interesting to see which packages export a program or a subscription.</text>
  </message>
  <message>
    <ts>2017-07-10T09:29:53.599778</ts>
    <user>U5QJW0DDE</user>
    <text>ah so there is a not function specifically written to hand Bools</text>
  </message>
  <message>
    <ts>2017-07-10T09:33:52.723486</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U1ANV9FML&gt; that would be an interesting graph.</text>
  </message>
  <message>
    <ts>2017-07-10T09:36:51.814163</ts>
    <user>U41NK9BM4</user>
    <text>I believe it exists. I recall I've seen something like that</text>
  </message>
  <message>
    <ts>2017-07-10T09:37:51.844640</ts>
    <user>U5QJW0DDE</user>
    <text>if i have type Msg = Bool and I want to match on msg, are the cases branches not True -&amp;gt; and False -&amp;gt; ? the compiler is complaining</text>
  </message>
  <message>
    <ts>2017-07-10T09:38:21.860176</ts>
    <user>U5QJW0DDE</user>
    <text>oh, Msg needs to be a union</text>
  </message>
  <message>
    <ts>2017-07-10T09:39:59.911177</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U5QJW0DDE&gt; you would need `type alias Msg = Bool` if you want that</text>
  </message>
  <message>
    <ts>2017-07-10T09:40:22.923293</ts>
    <user>U0FP80EKB</user>
    <text>`type` defines a new type, whereas `type alias` let's you set a new name (Msg) for existing type (Bool)</text>
  </message>
  <message>
    <ts>2017-07-10T09:40:40.932446</ts>
    <user>U0FP80EKB</user>
    <text>If you used `type alias Msg = Bool` then the compiler won't complain, and you should be able to go fine</text>
  </message>
  <message>
    <ts>2017-07-10T09:48:40.190092</ts>
    <user>U5QJW0DDE</user>
    <text>from what I can understand about the Architecture, all messages that could change application state (for purposes of view rendering) are grouped together into a single type, right? If so, that must mean that for some large applications, you'd have something like a union with maybe dozens or hundreds of options</text>
  </message>
  <message>
    <ts>2017-07-10T09:49:16.210279</ts>
    <user>U5QJW0DDE</user>
    <text>if essentially every single action a user can take on a page is an option of the same type</text>
  </message>
  <message>
    <ts>2017-07-10T09:52:24.312479</ts>
    <user>U604S603Y</user>
    <text>I'm dealing with a challenge concerning nested models again: I have a `Record a`, containing a `Record b`, containing a `Maybe c`, containing a `Maybe Float` of which I want the string representation of the inner value in the Just case. 
When I'm using ugly nested `case ... of ...` to match the `Maybe`s I get the `Float` as `String` in the end just fine, let's say "42". 
But when making it look nicer using `Maybe.map` I end up with "Just 42" in the end. 
And using `|&amp;gt; Maybe.withDefault ""` does not work, because Float and String don't match. And `toString`ing the Float beforehand gets me "Just 42" again.
The complete helper methond in the let block is:
```getErgebnisZahl schnellcheckData =
            case schnellcheckData.rechenergebnis of
                Just re -&amp;gt;
                    case re.ergebnis of
                        Just ergebnis -&amp;gt;
                            ergebnis |&amp;gt; toString

                        Nothing -&amp;gt;
                            ""

                Nothing -&amp;gt;
                    ""```</text>
  </message>
  <message>
    <ts>2017-07-10T09:52:24.312802</ts>
    <user>U0FP80EKB</user>
    <text>Yeah</text>
  </message>
  <message>
    <ts>2017-07-10T09:52:51.327426</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U5QJW0DDE&gt; so, you have one top-level `type Msg = ....` that contains all the messages that can be triggered.</text>
  </message>
  <message>
    <ts>2017-07-10T09:53:49.359462</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U5QJW0DDE&gt; Here's a sample of my top-level `Msg` on one of my apps (this is an editor for customizing our embed modules) 
```
type Msg
    = UpdateEmbed FieldHelpers.FieldInfo
    | Save
    | SaveResult (Api.ApiResult Embed)
    | EmbedMsg Embed.Msg
    | ImageSelected ImagePicker.ImageControl FieldHelpers.FieldInfo
    | ImageControlClicked ImagePicker.ImageControl
    | ImageStateChange { id : String, state : String, data : String, bytes : Int, totalBytes : Int }
    | ToggleEmbedCodeVisibility
    | IgnoreEmbedMsg Embed.Msg
```</text>
  </message>
  <message>
    <ts>2017-07-10T09:55:06.402602</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U0FP80EKB&gt; would be nice if elm-format allowed you to put empty lines between parts of that long list, for annotating different categories of related messages</text>
  </message>
  <message>
    <ts>2017-07-10T09:55:28.415099</ts>
    <user>U0FP80EKB</user>
    <text>As you start noticing groupinng of messages (such as ones that update the data for our `Embed`), you can pull them into a new one and collapse them, such as `EmbedMsg Embed.Msg`</text>
  </message>
  <message>
    <ts>2017-07-10T09:55:41.423377</ts>
    <user>U0FP80EKB</user>
    <text>If you start wanting to annotate, you might be at a point where you want to start grouping them.</text>
  </message>
  <message>
    <ts>2017-07-10T09:56:03.435328</ts>
    <user>U5QJW0DDE</user>
    <text>oh i see. so EmbedMsg is itself a union</text>
  </message>
  <message>
    <ts>2017-07-10T09:56:28.450620</ts>
    <user>U0FP80EKB</user>
    <text>Yeah, notice `FieldHelpers.FieldInfo`, as well. This is how we collapsed editing form fields</text>
  </message>
  <message>
    <ts>2017-07-10T09:57:31.486438</ts>
    <user>U0FP80EKB</user>
    <text>We have `FieldInfo` further collapse
```
type FieldInfo
    = ContentField ContentFieldInfo
    | AppearanceField AppearanceFieldInfo
    | GeneralField GeneralFieldInfo
```</text>
  </message>
  <message>
    <ts>2017-07-10T09:57:48.496739</ts>
    <user>U5QJW0DDE</user>
    <text>that's' nice</text>
  </message>
  <message>
    <ts>2017-07-10T09:58:21.515514</ts>
    <user>U0FP80EKB</user>
    <text>So, over time, there are techniques to keep your top-level `Msg` from being too cluttered. At some point, I always end up collapsing my form field update messages.</text>
  </message>
  <message>
    <ts>2017-07-10T09:58:47.530675</ts>
    <user>U5QJW0DDE</user>
    <text>i dig it</text>
  </message>
  <message>
    <ts>2017-07-10T09:58:53.533703</ts>
    <user>U0FP80EKB</user>
    <text>Oh, here is one of the bottom types, `AppearanceFieldInfo`
```
type AppearanceFieldInfo
    = BackgroundColor ColorPicker.ColorControl
    | SubmitButtonColor ColorPicker.ColorControl
    | AccentColor ColorPicker.ColorControl
    | QuestionBackgroundColor ColorPicker.ColorControl
    | HeaderTextColor ColorPicker.ColorControl
    | PrimaryTextColor ColorPicker.ColorControl
    | SecondaryTextColor ColorPicker.ColorControl
    | HeaderImage ImagePicker.ImageControl
    | FontFamily String
    | FontSize Int
```</text>
  </message>
  <message>
    <ts>2017-07-10T09:59:23.551038</ts>
    <user>U0FP80EKB</user>
    <text>There you can see all the possible things that can be updated. So, when `FontSize` is edited, the message comes up like `FontSize 16` or something</text>
  </message>
  <message>
    <ts>2017-07-10T09:59:28.554209</ts>
    <user>U0FP80EKB</user>
    <text>So, the payload has the new value</text>
  </message>
  <message>
    <ts>2017-07-10T10:00:15.582733</ts>
    <user>U0FP80EKB</user>
    <text>Our situation has a bit of complexity because we used the same editor customizing 3 different types of embeds, so there are general fields and type-specific fields that need to be edited.</text>
  </message>
  <message>
    <ts>2017-07-10T10:00:22.587382</ts>
    <user>U5QJW0DDE</user>
    <text>i suppose that sending a Msg then means wrapping the FontSize in an FieldInfo and then in another, etc</text>
  </message>
  <message>
    <ts>2017-07-10T10:00:28.591205</ts>
    <user>U0FP80EKB</user>
    <text>Yup</text>
  </message>
  <message>
    <ts>2017-07-10T10:01:03.612708</ts>
    <user>U0FP80EKB</user>
    <text>For example
```
        generalControls =
            Html.map UpdateEmbed &amp;lt;|
                div [ class "control-group" ]
                    [ CommonControls.textControl "Name" embed.displayName (FieldHelpers.GeneralField &amp;lt;&amp;lt; FieldHelpers.DisplayName)
                    ]
```</text>
  </message>
  <message>
    <ts>2017-07-10T10:01:34.631000</ts>
    <user>U0FP80EKB</user>
    <text>This edits the "Name" field, so the message ends up something like `UpdateEmbed (FieldHelpers.GeneralField (FieldHelpers.DisplayName "Corey"))`</text>
  </message>
  <message>
    <ts>2017-07-10T10:02:13.654221</ts>
    <user>U0FP80EKB</user>
    <text>Luckily the constructors for a union type are composable, since they are just ordinary functions, so we can do `FieldsHelpers.GeneralField &amp;lt;&amp;lt; FieldHelpers.DisplaName` as the event handler</text>
  </message>
  <message>
    <ts>2017-07-10T10:02:24.660985</ts>
    <user>U5QJW0DDE</user>
    <text>I like it</text>
  </message>
  <message>
    <ts>2017-07-10T10:03:06.685939</ts>
    <user>U0FP80EKB</user>
    <text>Keep it in your pocket as a tool for when you start noticing groupings in your `Msg` constructors. That's often a flag that you'll want to collapse some of them.</text>
  </message>
  <message>
    <ts>2017-07-10T10:03:20.694030</ts>
    <user>U0FP80EKB</user>
    <text>But, it definitely adds complexity to the system, so I will always say "extract to this, don't plan for it"</text>
  </message>
  <message>
    <ts>2017-07-10T10:04:32.735128</ts>
    <user>U0FP80EKB</user>
    <text>Our system is constantly going through cycles of extraction. We're currently replacing our original, faulty design of `AppearanceFields` and `ContentFields` with `GeneralFields` and `TypeSpecificFields`  :slightly_smiling_face: Luckily Elm makes it pretty safe to do these refactorings, although it will be a bit time-consuming.</text>
  </message>
  <message>
    <ts>2017-07-10T10:05:17.761541</ts>
    <user>U5QJW0DDE</user>
    <text>i assume in your example embed would refer to a record somewhere</text>
  </message>
  <message>
    <ts>2017-07-10T10:05:36.772476</ts>
    <user>U5QJW0DDE</user>
    <text>and CommonControls.textControl is a function returning Html?</text>
  </message>
  <message>
    <ts>2017-07-10T10:05:46.778220</ts>
    <user>U0FP80EKB</user>
    <text>yeah. It is just a wrapper for a view function.</text>
  </message>
  <message>
    <ts>2017-07-10T10:06:14.794471</ts>
    <user>U0FP80EKB</user>
    <text>```
textControl : String -&amp;gt; String -&amp;gt; (String -&amp;gt; msg) -&amp;gt; Html msg
textControl labelText value onInputMsg =
    controlWithLabel labelText &amp;lt;|
        input
            [ class "text-control"
            , defaultValue value
            , onInput onInputMsg
            ]
            []
```</text>
  </message>
  <message>
    <ts>2017-07-10T10:07:46.849449</ts>
    <user>U0FP80EKB</user>
    <text>`Embed` is a module that gives an entry point to building the embed modules. We use the same code for the actual live embed that sites on our customers' sites and the customization editor in our admin site.</text>
  </message>
  <message>
    <ts>2017-07-10T10:08:30.875281</ts>
    <user>U0FP80EKB</user>
    <text>We have a bunch of records floating around, but, at the core, it looks like
```
type alias Embed =
    { id : Id
    , displayName : String
    , embedType : String
    , apiUrls : ApiUrls
    , appearance : UI.Appearance
    , content : Content
    }
```</text>
  </message>
  <message>
    <ts>2017-07-10T10:08:57.890901</ts>
    <user>U0FP80EKB</user>
    <text>We initialize it via flags at load time.</text>
  </message>
  <message>
    <ts>2017-07-10T10:09:05.895678</ts>
    <user>U5QJW0DDE</user>
    <text>thanks, nice summary</text>
  </message>
  <message>
    <ts>2017-07-10T10:09:38.914625</ts>
    <user>U5QJW0DDE</user>
    <text>reading more code like this from real-world examples will be good to understand all the syntax and architecture and best practices</text>
  </message>
  <message>
    <ts>2017-07-10T10:10:41.950490</ts>
    <user>U0FP80EKB</user>
    <text>Yeah. I wouldn't call ours best practices, though. :slightly_smiling_face: We're constantly evolving the design as we feel pressure. There are a couple good ones, like the collapsing technique for `Msg`</text>
  </message>
  <message>
    <ts>2017-07-10T10:10:45.952559</ts>
    <user>U5QJW0DDE</user>
    <text>i'm switching my mind from clojurescript so for me the first thing i'm always doing is trying to follow the types through the flow</text>
  </message>
  <message>
    <ts>2017-07-10T10:11:08.966312</ts>
    <user>U0FP80EKB</user>
    <text>That can be a reasonable way to look at it.</text>
  </message>
  <message>
    <ts>2017-07-10T10:12:30.013711</ts>
    <user>U0FP80EKB</user>
    <text>At any point in time, our codebase consists of what I call a bunch of "fish with goat heads". Halfway evolved to the final design. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-10T10:12:53.027661</ts>
    <user>U5QJW0DDE</user>
    <text>well, at least the compiler enforces some degree of structure at a minimum</text>
  </message>
  <message>
    <ts>2017-07-10T10:12:56.029302</ts>
    <user>U0FP80EKB</user>
    <text>yup</text>
  </message>
  <message>
    <ts>2017-07-10T10:12:59.031164</ts>
    <user>U5QJW0DDE</user>
    <text>which you don't get with dynamically typed langs</text>
  </message>
  <message>
    <ts>2017-07-10T10:13:00.031349</ts>
    <user>U0FP80EKB</user>
    <text>we rely on that a lot</text>
  </message>
  <message>
    <ts>2017-07-10T10:13:27.047198</ts>
    <user>U0FP80EKB</user>
    <text>We have other techniques for those languages. We have a rails backend, so we rely on other things to maintain the structures there.</text>
  </message>
  <message>
    <ts>2017-07-10T10:13:50.061005</ts>
    <user>U0FP80EKB</user>
    <text>Our Rails codebase is the same, though, as it has a fairly fluid design</text>
  </message>
  <message>
    <ts>2017-07-10T10:14:08.071143</ts>
    <user>U0FP80EKB</user>
    <text>We have a really small team with pretty good communication, so it works well to be more fluid</text>
  </message>
  <message>
    <ts>2017-07-10T10:15:50.131714</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;http://www.elm-tutorial.org|www.elm-tutorial.org&gt; seems pretty good so far</text>
  </message>
  <message>
    <ts>2017-07-10T10:16:09.142720</ts>
    <user>U0FP80EKB</user>
    <text>We have come up with some nice libraries that we use, such as handling our overlays, coordinating with css-based animation timing, `Id`, `Editable`, a library for handling workflows, then combined with the overlay to handle overlay-based workflows. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-10T10:16:19.149104</ts>
    <user>U0FP80EKB</user>
    <text>Lots of fun stuff.</text>
  </message>
  <message>
    <ts>2017-07-10T10:40:51.044527</ts>
    <user>U5KAUJZ4K</user>
    <text>Hi here, is it possible to create elm interface for  c++ application? how should I write a wrapper for it?</text>
  </message>
  <message>
    <ts>2017-07-10T10:41:41.075553</ts>
    <user>U0K92QFST</user>
    <text>&lt;@U5KAUJZ4K&gt; do you want to integrate an Elm front end with a c++ back end? Or something else? Not sure what you mean by "elm interface"</text>
  </message>
  <message>
    <ts>2017-07-10T10:42:01.087586</ts>
    <user>U5KAUJZ4K</user>
    <text>yes sorry, ELM for front end yes</text>
  </message>
  <message>
    <ts>2017-07-10T10:42:24.100970</ts>
    <user>U5QJW0DDE</user>
    <text>if by backend you are referring to the web server, you can write a server in anything</text>
  </message>
  <message>
    <ts>2017-07-10T10:42:50.116434</ts>
    <user>U5QJW0DDE</user>
    <text>alternately, you could use a c++ library for sending out websocket messgaes, and then subscribe to them in Elm</text>
  </message>
  <message>
    <ts>2017-07-10T10:43:02.123874</ts>
    <user>U5QJW0DDE</user>
    <text>and bundle the whole thing as one program</text>
  </message>
  <message>
    <ts>2017-07-10T10:43:09.128339</ts>
    <user>U5QJW0DDE</user>
    <text>i'd recommend websocket++ library for c++</text>
  </message>
  <message>
    <ts>2017-07-10T10:44:04.162461</ts>
    <user>U5QJW0DDE</user>
    <text>or, if you use Qt for your C++, you can embed your Elm application in a Qt web view layer, which can always communicate with C++ logic</text>
  </message>
  <message>
    <ts>2017-07-10T10:46:35.255421</ts>
    <user>U5KAUJZ4K</user>
    <text>I create UI for C++ audio program, I should try to embed ELM app in a QT web view layer, that sound nice :slightly_smiling_face: thank you</text>
  </message>
  <message>
    <ts>2017-07-10T10:47:54.304211</ts>
    <user>U5QJW0DDE</user>
    <text>If you are using Qt, you might just consider QML as well, it is more tightly integrated into Qt already, and it uses FRP for its UI mechanisms. It is dynamically types and uses javascript. Another option would be to load Elm compiled JS into a QML program that interfaces with the C++. I've done that with Clojurescript</text>
  </message>
  <message>
    <ts>2017-07-10T10:49:48.373573</ts>
    <user>U5QJW0DDE</user>
    <text>is there a way to grab what is inside a tuple at a particular index without a let binding?</text>
  </message>
  <message>
    <ts>2017-07-10T10:53:29.509825</ts>
    <user>U3SJEDR96</user>
    <text>Tuple.first/Tuple.second for 2-tuples, or with a patter in either a let binding, the function declaration, a lambda, or a case..of</text>
  </message>
  <message>
    <ts>2017-07-10T10:54:52.560913</ts>
    <user>U2JA29EKF</user>
    <text>think you can also pattern match them in a function defintion</text>
  </message>
  <message>
    <ts>2017-07-10T10:55:07.570642</ts>
    <user>U3SJEDR96</user>
    <text>i.e. `foo (bar, baz) = baz` is essentially how `Tuple.second` is defined</text>
  </message>
  <message>
    <ts>2017-07-10T10:55:15.574756</ts>
    <user>U5QJW0DDE</user>
    <text>and update msg ( f, sec )  is pretty nice</text>
  </message>
  <message>
    <ts>2017-07-10T10:55:31.584996</ts>
    <user>U3SJEDR96</user>
    <text>:slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-10T11:15:37.329180</ts>
    <user>U5QJW0DDE</user>
    <text>is it possible to  match on a range, i.e. a case branch for an Int between 5 and 10 and another for a different range, etc</text>
  </message>
  <message>
    <ts>2017-07-10T11:17:48.408736</ts>
    <user>U0J1M0F32</user>
    <text>Yes, I think, &lt;@U5QJW0DDE&gt;... I'm looking for some of the code now.</text>
  </message>
  <message>
    <ts>2017-07-10T11:17:50.409983</ts>
    <user>U0J1M0F32</user>
    <text>I have it somewhere.</text>
  </message>
  <message>
    <ts>2017-07-10T11:19:25.467904</ts>
    <user>U0K92QFST</user>
    <text>I actually don't think it is, at least not in the way you can match on a range in Ruby.</text>
  </message>
  <message>
    <ts>2017-07-10T11:19:31.471926</ts>
    <user>U0K92QFST</user>
    <text>But prove me wrong &lt;@U0J1M0F32&gt;!</text>
  </message>
  <message>
    <ts>2017-07-10T11:22:26.579590</ts>
    <user>U3SJEDR96</user>
    <text>you can do something like `case (compare x 5, compare x 10, compare x 20) of`, but I doubt that'll be more readable than a list of `if..else if`, or a function `rangeFor : Int -&amp;gt; Range` where `type Range = Range Int Int` or something</text>
  </message>
  <message>
    <ts>2017-07-10T11:23:08.605545</ts>
    <user>U0J1M0F32</user>
    <text>Sorry &lt;@U0K92QFST&gt; and &lt;@U5QJW0DDE&gt; seems my memory betrayed me. I basically have what &lt;@U3SJEDR96&gt; is describing, not a pattern match on a case.</text>
  </message>
  <message>
    <ts>2017-07-10T11:23:33.621383</ts>
    <user>U0J1M0F32</user>
    <text>I do remember there was something vaguely like that back when Elm has range literals, but none of that would work now a days.</text>
  </message>
  <message>
    <ts>2017-07-10T11:25:04.678005</ts>
    <user>U0K92QFST</user>
    <text>I do love Ruby's range literals, but I also realize that it's not exactly Elmish</text>
  </message>
  <message>
    <ts>2017-07-10T11:25:33.695942</ts>
    <user>U5QJW0DDE</user>
    <text>Swift has them, very convenient</text>
  </message>
  <message>
    <ts>2017-07-10T11:29:10.830544</ts>
    <user>U0J1M0F32</user>
    <text>There are a few things like that in Elm, that are not the decision I'm the most used to, or most comfortable with, but when it has me work through a more robust and better thought out system, I'm rather glad the easy tool wasn't always there.</text>
  </message>
  <message>
    <ts>2017-07-10T11:29:39.848393</ts>
    <user>U494Y62N7</user>
    <text>Does anybody here experience with the `elm-community/random-extra` package? Specifically, I'm looking here: &lt;http://package.elm-lang.org/packages/elm-community/random-extra/2.0.0/Random-Extra#andMap&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T11:30:11.868795</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U494Y62N7&gt; Many of us can probably help you with that. What do you want to know?</text>
  </message>
  <message>
    <ts>2017-07-10T11:30:41.887899</ts>
    <user>U494Y62N7</user>
    <text>In the code example, they reference `person` and I'm wondering exactly what `person` is or probably is</text>
  </message>
  <message>
    <ts>2017-07-10T11:31:14.908732</ts>
    <user>U494Y62N7</user>
    <text>I mean, i know it's a function - I'm just unsure about what the function is</text>
  </message>
  <message>
    <ts>2017-07-10T11:32:00.937430</ts>
    <user>U3SJEDR96</user>
    <text>In that case, it's probably `type alias Person = { firstName: String, lastName: String, birthday: Date, phoneNumber: String, address: Address, email: String}`</text>
  </message>
  <message>
    <ts>2017-07-10T11:32:10.942964</ts>
    <user>U3SJEDR96</user>
    <text>essentially, just "a large record", really</text>
  </message>
  <message>
    <ts>2017-07-10T11:32:33.957476</ts>
    <user>U3SJEDR96</user>
    <text>which means `Person : String -&amp;gt; String -&amp;gt; Date -&amp;gt; String -&amp;gt; Address -&amp;gt; String -&amp;gt; Person`</text>
  </message>
  <message>
    <ts>2017-07-10T11:35:30.067951</ts>
    <user>U494Y62N7</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-10T11:36:04.088574</ts>
    <user>U494Y62N7</user>
    <text>thank you</text>
  </message>
  <message>
    <ts>2017-07-10T11:36:53.117613</ts>
    <user>U3SJEDR96</user>
    <text>It's basically how json-decode-pipeline works</text>
  </message>
  <message>
    <ts>2017-07-10T11:36:58.120195</ts>
    <user>U494Y62N7</user>
    <text>yea</text>
  </message>
  <message>
    <ts>2017-07-10T11:37:06.124787</ts>
    <user>U3SJEDR96</user>
    <text>except rather than `andMap (field..)` it has `required`</text>
  </message>
  <message>
    <ts>2017-07-10T11:37:25.136335</ts>
    <user>U494Y62N7</user>
    <text>should it be `Person` instead of `person`?</text>
  </message>
  <message>
    <ts>2017-07-10T11:38:12.164768</ts>
    <user>U3SJEDR96</user>
    <text>eh, maybe they just have a `person = Person` somewhere. Not sure if using a type-alias in that example would make thing more or less confusing, it would be better if that function definition were there tho</text>
  </message>
  <message>
    <ts>2017-07-10T11:38:27.173441</ts>
    <user>U494Y62N7</user>
    <text>yea</text>
  </message>
  <message>
    <ts>2017-07-10T11:42:35.324291</ts>
    <user>U3X6H8X8W</user>
    <text>Good morning, everyone</text>
  </message>
  <message>
    <ts>2017-07-10T11:43:07.343827</ts>
    <user>U3X6H8X8W</user>
    <text>I'm working on a not so small SPA and I came with an issue that I don't know how to resolve</text>
  </message>
  <message>
    <ts>2017-07-10T11:43:08.344596</ts>
    <user>U3X6H8X8W</user>
    <text>here's the code</text>
  </message>
  <message>
    <ts>2017-07-10T11:43:09.345265</ts>
    <user>U3X6H8X8W</user>
    <text>&lt;https://gist.github.com/davidpelaez/a30eb3d5a8db8828d49ac45ee6be21a7#file-productdata-elm-L75-L78&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T11:43:14.347861</ts>
    <user>U3X6H8X8W</user>
    <text>and the problem is as follows:</text>
  </message>
  <message>
    <ts>2017-07-10T11:44:52.407399</ts>
    <user>U3X6H8X8W</user>
    <text>I have a "drawer" with a form to edit or create a "Product" in our backend. For that we have a `ProductData` representing all the valid data with the proper types and we have a `ProductForm` representing the info of the form with the potentially invalid user input. I need to implement a funtion to convert from the form to the actual data so that I can send it to the server. This conversation may fail, therefore it returns a `Result String ProductData`. How do I handle conversions of one record type to another where field conversation may fail?</text>
  </message>
  <message>
    <ts>2017-07-10T11:45:23.426678</ts>
    <user>U3X6H8X8W</user>
    <text>I'm thinking of something like json decoders but for my own types :thinking_face:</text>
  </message>
  <message>
    <ts>2017-07-10T11:45:29.430681</ts>
    <user>U3X6H8X8W</user>
    <text>but I have no idea how to do it</text>
  </message>
  <message>
    <ts>2017-07-10T11:45:55.446660</ts>
    <user>U3X6H8X8W</user>
    <text>I look at `elm-validate` but that only gives me errors, I don't know how to combine something like a validation and a record generator</text>
  </message>
  <message>
    <ts>2017-07-10T11:48:01.524128</ts>
    <user>U3X6H8X8W</user>
    <text>I also considered not storing invalid data but I cannot do this because validating that a String is a number usually fails until the user completes his input. that's why I have a form with strings all over</text>
  </message>
  <message>
    <ts>2017-07-10T11:50:58.629588</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://ellie-app.com/3J4SM5dSGBxa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T11:52:22.680497</ts>
    <user>U3SJEDR96</user>
    <text>since we were talking about `andMap`/`apply` anyway</text>
  </message>
  <message>
    <ts>2017-07-10T11:52:46.694952</ts>
    <user>U3X6H8X8W</user>
    <text>Let me read this functional wizardry for a moment!</text>
  </message>
  <message>
    <ts>2017-07-10T11:52:57.702037</ts>
    <user>U3SJEDR96</user>
    <text>actually, &lt;http://package.elm-lang.org/packages/elm-community/result-extra/2.2.0/Result-Extra#andMap&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T11:52:58.702283</ts>
    <user>U4JT89FGB</user>
    <text>One approach is to store invalid data - have the validator make sure it can all be properly cast to the values necessary for the HTTP request. So as long as the validators all pass, you can safely convert type. I.e. don't do anything unless it's all valid. This way, an extra Result converter might be overkill since the types are defined in an abstract way by the validator</text>
  </message>
  <message>
    <ts>2017-07-10T11:53:01.704329</ts>
    <user>U3X6H8X8W</user>
    <text>the error string would be the first error in the chain?</text>
  </message>
  <message>
    <ts>2017-07-10T11:53:08.708619</ts>
    <user>U3SJEDR96</user>
    <text>Yes</text>
  </message>
  <message>
    <ts>2017-07-10T11:53:46.731666</ts>
    <user>U3SJEDR96</user>
    <text>You could potentially make them accumulate..</text>
  </message>
  <message>
    <ts>2017-07-10T11:53:58.738852</ts>
    <user>U3X6H8X8W</user>
    <text>&lt;@U3SJEDR96&gt; I get it. Thanks for pointing it out</text>
  </message>
  <message>
    <ts>2017-07-10T11:54:55.773297</ts>
    <user>U3X6H8X8W</user>
    <text>&lt;@U4JT89FGB&gt; I'm trying to do the don't do anything approach until it's all valid. But it the validator passes I can convert but I would have to discard the potential errors on the conversion which makes me feel uneasy.</text>
  </message>
  <message>
    <ts>2017-07-10T11:56:06.816039</ts>
    <user>U3X6H8X8W</user>
    <text>&lt;@U4JT89FGB&gt; what you propose is validate, if it passes then you are certain that the conversion process will be OK, then, convert and you should never get an error on conversion, is that correct? More like a logical approach to the steps than fully considering all errors in every step?</text>
  </message>
  <message>
    <ts>2017-07-10T11:57:04.850414</ts>
    <user>U4JT89FGB</user>
    <text>that's what i'm proposing - but it all depends on what you're using the converted data for. my original assumption was you're just validating so it meets the HTTP API spec</text>
  </message>
  <message>
    <ts>2017-07-10T11:58:54.917386</ts>
    <user>U3X6H8X8W</user>
    <text>yeap, I just ensure they match the expected types and let the backend validate all the extra things</text>
  </message>
  <message>
    <ts>2017-07-10T11:59:33.941856</ts>
    <user>U3X6H8X8W</user>
    <text>not the best UX but a little faster to ship right now</text>
  </message>
  <message>
    <ts>2017-07-10T12:00:12.966618</ts>
    <user>U4JT89FGB</user>
    <text>yeah, so what i'd do is have a FormData with validators and have the server respond with the fully qualified record for decoding after successful creation. but this is just my preference</text>
  </message>
  <message>
    <ts>2017-07-10T12:00:37.983246</ts>
    <user>U3X6H8X8W</user>
    <text>and how do you validate things? With a library like elm-validate or your own code?</text>
  </message>
  <message>
    <ts>2017-07-10T12:01:12.004836</ts>
    <user>U4JT89FGB</user>
    <text>yes, i use elm-validate</text>
  </message>
  <message>
    <ts>2017-07-10T12:01:53.030657</ts>
    <user>U3X6H8X8W</user>
    <text>OK, thanks for the help I'm going to implement that and see if I can accumulate things like &lt;@U3SJEDR96&gt; suggested</text>
  </message>
  <message>
    <ts>2017-07-10T12:02:10.041161</ts>
    <user>U3X6H8X8W</user>
    <text>this channels has helped me so much, thank you &lt;@U4JT89FGB&gt; &amp;amp; &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T12:05:46.169356</ts>
    <user>U2SR9DL7Q</user>
    <text>Hey, so I'm trying to see how far I can take this static page model in github. Do you think I could make add blogging functionality to a site without having to implement a db on the backend. I'm wondering if a simple JSON file could be feasible.</text>
  </message>
  <message>
    <ts>2017-07-10T12:10:02.315007</ts>
    <user>U4JT89FGB</user>
    <text>yeah, that'd work fine. `{user}.&lt;http://github.io/{repo}/{filename}.json|github.io/{repo}/{filename}.json&gt;`</text>
  </message>
  <message>
    <ts>2017-07-10T12:11:34.366849</ts>
    <user>U4JT89FGB</user>
    <text>of course you wouldn't be able to POST new articles to the blog, you'll need to git push an update to your json file</text>
  </message>
  <message>
    <ts>2017-07-10T12:12:46.407373</ts>
    <user>U1NME8MS8</user>
    <text>How crazy would it be to build an elm -&amp;gt; react/redux transpiler so I can use elm in work, but pretend to still use react</text>
  </message>
  <message>
    <ts>2017-07-10T12:12:57.413560</ts>
    <user>U23SA861Y</user>
    <text>very crazy</text>
  </message>
  <message>
    <ts>2017-07-10T12:14:03.449753</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U1NME8MS8&gt; talk to &lt;@U0F7JPK36&gt; about the elm-react bridge he wrote :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-10T12:14:52.476666</ts>
    <user>U0F7JPK36</user>
    <text>It's not worth it :stuck_out_tongue_closed_eyes:</text>
  </message>
  <message>
    <ts>2017-07-10T12:19:31.630606</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U4JT89FGB&gt; could Elm easily encode my text input to a json file type and update the json file? or would I have to do that myself manually?</text>
  </message>
  <message>
    <ts>2017-07-10T12:21:25.693106</ts>
    <user>U4JT89FGB</user>
    <text>the elm app would have no way to write that file.. unless you had some server-side component that updated the file and pushed the change to github… in which case it'd be easier to use a database</text>
  </message>
  <message>
    <ts>2017-07-10T12:21:56.709861</ts>
    <user>U23SA861Y</user>
    <text>heh, arguably I like the idea of publishing via git commit :stuck_out_tongue_closed_eyes:</text>
  </message>
  <message>
    <ts>2017-07-10T12:21:56.709893</ts>
    <user>U1NME8MS8</user>
    <text>&lt;@U0FP80EKB&gt; yeah I assume it would be quite an effort</text>
  </message>
  <message>
    <ts>2017-07-10T12:32:23.054249</ts>
    <user>U0JFGGZS6</user>
    <text>&lt;@U3X6H8X8W&gt;  I don't know if it suits your case, but I put up a validation library that works like ilias described, with some extra bells and whistles like an Initial state.  &lt;http://package.elm-lang.org/packages/ericgj/elm-validation/1.0.0/Validation&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T12:47:49.549392</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U3X6H8X8W&gt; also I'm going to claim temporary braindeathness while writing that example earlier and say you can redefine `apply = Result.map2 (|&amp;gt;)`.</text>
  </message>
  <message>
    <ts>2017-07-10T13:04:26.087676</ts>
    <user>U64MK7215</user>
    <text>hi,</text>
  </message>
  <message>
    <ts>2017-07-10T13:04:37.093605</ts>
    <user>U64MK7215</user>
    <text>how do i send json requests in elm?</text>
  </message>
  <message>
    <ts>2017-07-10T13:17:35.502904</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U64MK7215&gt; POST? GET?</text>
  </message>
  <message>
    <ts>2017-07-10T13:18:14.523427</ts>
    <user>U48AEBJQ3</user>
    <text>The answers you seek are probably here: &lt;http://package.elm-lang.org/packages/elm-lang/http/1.0.0/Http&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T13:19:20.558926</ts>
    <user>U23SA861Y</user>
    <text>prepare the task and then dispatch</text>
  </message>
  <message>
    <ts>2017-07-10T13:34:39.064446</ts>
    <user>U2SR9DL7Q</user>
    <text>does anyone know of any elm applications with flask on the back-end?</text>
  </message>
  <message>
    <ts>2017-07-10T14:05:42.097767</ts>
    <user>U5QJW0DDE</user>
    <text> &lt;@U2SR9DL7Q&gt; I know some people who wear a flask on their back end</text>
  </message>
  <message>
    <ts>2017-07-10T14:09:44.227029</ts>
    <user>U23SA861Y</user>
    <text>I have a flask in my desk, does that count?</text>
  </message>
  <message>
    <ts>2017-07-10T14:10:03.236968</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U23SA861Y&gt; only if it has a python in it.</text>
  </message>
  <message>
    <ts>2017-07-10T14:13:19.340429</ts>
    <user>U2SR9DL7Q</user>
    <text>I'm looking through some github repos, but I was just wondering if anyone active here knew of some good ones... I've been using elm with no back-end so far. Starting to look into server-side connections</text>
  </message>
  <message>
    <ts>2017-07-10T14:17:59.488800</ts>
    <user>U31A7HG1E</user>
    <text>I am attempting to decode some oddly structured JSON and struggling to figure out how to leverage what exists in Json.Decode and Json.Decode.Pipeline to make it happen.  I essentially want to decode *and filter* contents of a single array from JSON into different fields of an Elm record.</text>
  </message>
  <message>
    <ts>2017-07-10T14:18:11.495044</ts>
    <user>U31A7HG1E</user>
    <text>The JSON looks like:</text>
  </message>
  <message>
    <ts>2017-07-10T14:18:12.495746</ts>
    <user>U31A7HG1E</user>
    <text>{
  children: [
    { title: "a title" },
    { description: "description" },
    { info: … },
    { info: … },
    { info: … }
  ]
}</text>
  </message>
  <message>
    <ts>2017-07-10T14:18:35.508593</ts>
    <user>U31A7HG1E</user>
    <text>And my Elm record and alias looks like:</text>
  </message>
  <message>
    <ts>2017-07-10T14:18:50.516317</ts>
    <user>U31A7HG1E</user>
    <text>type alias Organization =
{ title : String
, description : String
, infos : List Info
}</text>
  </message>
  <message>
    <ts>2017-07-10T14:19:37.541381</ts>
    <user>U31A7HG1E</user>
    <text>It is guaranteed that there is only ever one 'title' and one 'description' in the 'children' array.  There can be many 'info' instances.</text>
  </message>
  <message>
    <ts>2017-07-10T14:20:11.559610</ts>
    <user>U23SA861Y</user>
    <text>oh wow, thats special isn't it</text>
  </message>
  <message>
    <ts>2017-07-10T14:20:29.569269</ts>
    <user>U31A7HG1E</user>
    <text>Yeah, I have no control over that format, unfortunately</text>
  </message>
  <message>
    <ts>2017-07-10T14:22:07.622711</ts>
    <user>U663M2MB7</user>
    <text>Special, and surprisingly common...</text>
  </message>
  <message>
    <ts>2017-07-10T14:22:41.640645</ts>
    <user>U31A7HG1E</user>
    <text>This is JSON converted from an XML document, which kinda explains the structure</text>
  </message>
  <message>
    <ts>2017-07-10T14:25:48.741644</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U31A7HG1E&gt; There are different ways to attack this problem. If you are confident that the title will always be at index 0 and the description is at index 1, it is easier. If you can't be confident of that, then it is a bit more convoluted.</text>
  </message>
  <message>
    <ts>2017-07-10T14:26:10.752478</ts>
    <user>U23SA861Y</user>
    <text>yeah I was going to ask, are they at the top garunteed</text>
  </message>
  <message>
    <ts>2017-07-10T14:26:55.776849</ts>
    <user>U31A7HG1E</user>
    <text>&lt;@U48AEBJQ3&gt;, thanks, I have seen the index decoder, but unfortunatley I do not believe that I have a guarantee of the positioning.</text>
  </message>
  <message>
    <ts>2017-07-10T14:27:18.789591</ts>
    <user>U31A7HG1E</user>
    <text>My current thinking is to introduce an intermediate representation to decode to, and then post process that</text>
  </message>
  <message>
    <ts>2017-07-10T14:27:29.795808</ts>
    <user>U31A7HG1E</user>
    <text>Something like:</text>
  </message>
  <message>
    <ts>2017-07-10T14:27:36.799513</ts>
    <user>U31A7HG1E</user>
    <text>type Node = Title | Description | Info

type alias ParsingOrganization = 
{ nodes: List Node
}</text>
  </message>
  <message>
    <ts>2017-07-10T14:27:54.809293</ts>
    <user>U23SA861Y</user>
    <text>that would be one way to attack it</text>
  </message>
  <message>
    <ts>2017-07-10T14:28:09.817413</ts>
    <user>U23SA861Y</user>
    <text>and then do a final map from List Node -&amp;gt; Organization</text>
  </message>
  <message>
    <ts>2017-07-10T14:28:34.830920</ts>
    <user>U31A7HG1E</user>
    <text>Yes &lt;@U23SA861Y&gt;,  I think that seems workable</text>
  </message>
  <message>
    <ts>2017-07-10T14:29:10.850340</ts>
    <user>U23SA861Y</user>
    <text>it would be more like `type Node = Title String | Description String | Info InfoRec`</text>
  </message>
  <message>
    <ts>2017-07-10T14:29:23.857353</ts>
    <user>U31A7HG1E</user>
    <text>Oh yes, definitely, thanks</text>
  </message>
  <message>
    <ts>2017-07-10T14:30:47.903020</ts>
    <user>U48AEBJQ3</user>
    <text>Make decoders for each type, use `oneOf` and then you end up with a `Decoder (List Node)`. Then write `processList : List Node -&amp;gt; FinalStructure` and use `Json.Decode.map`.</text>
  </message>
  <message>
    <ts>2017-07-10T14:31:40.932250</ts>
    <user>U23SA861Y</user>
    <text>yeah you get a `nodeDecoder = JD.oneOf [titleDecoder, descDecoder, infoDecoder]`</text>
  </message>
  <message>
    <ts>2017-07-10T14:31:54.940035</ts>
    <user>U31A7HG1E</user>
    <text>Ah, ok</text>
  </message>
  <message>
    <ts>2017-07-10T14:32:51.971002</ts>
    <user>U23SA861Y</user>
    <text>title decoder might look like 
```
JD.field "title" JD.string
   |&amp;gt; JD.map Title
```</text>
  </message>
  <message>
    <ts>2017-07-10T14:34:11.014955</ts>
    <user>U31A7HG1E</user>
    <text>Great, this is making sense.  I'll give it a go.  Thanks!</text>
  </message>
  <message>
    <ts>2017-07-10T14:35:26.055178</ts>
    <user>U0FP80EKB</user>
    <text>I probably would write it 
`JD.field "title" (JD.map Title JD.string)`</text>
  </message>
  <message>
    <ts>2017-07-10T14:36:12.079556</ts>
    <user>U0FP80EKB</user>
    <text>We do just this thing for our `Id` decoder &lt;https://gist.github.com/coreyhaines/5f2a8d15de99ce91adbb10ac855172b1#file-id-elm-L20-L22&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T14:37:18.115329</ts>
    <user>U0FP80EKB</user>
    <text>makes it easier to use in a pipeline while decoding other fields</text>
  </message>
  <message>
    <ts>2017-07-10T14:58:13.789494</ts>
    <user>U641LDZFU</user>
    <text>hey everybody, I am trying to get unique values out of a list I have a nasty big function which works, and I am wondering if there is a much nicer more FP way to do it?</text>
  </message>
  <message>
    <ts>2017-07-10T14:58:19.792683</ts>
    <user>U641LDZFU</user>
    <text>&lt;https://ellie-app.com/3J7tc7ykKZqa1/10&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T15:00:16.856795</ts>
    <user>U641LDZFU</user>
    <text>any hints appreciated :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-10T15:09:47.150711</ts>
    <user>U641LDZFU</user>
    <text>nvm I found &lt;https://github.com/elm-community/elm-list-extra/blob/master/src/List/Extra.elm&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T15:10:28.171801</ts>
    <user>U641LDZFU</user>
    <text>Which has a) the dropDuplicates function and b) juicy lecker source code :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-10T15:12:13.224786</ts>
    <user>U3SJEDR96</user>
    <text>Using a `Set` is the best way to do this, indeed. The one in `List.Extra` preserves order - if you don't need that, you can just `unique = Set.fromList &amp;gt;&amp;gt; Set.toList`</text>
  </message>
  <message>
    <ts>2017-07-10T15:14:09.282427</ts>
    <user>U641LDZFU</user>
    <text>oh wow, even sneakier!</text>
  </message>
  <message>
    <ts>2017-07-10T15:14:11.283528</ts>
    <user>U641LDZFU</user>
    <text>thanks!</text>
  </message>
  <message>
    <ts>2017-07-10T15:33:09.849028</ts>
    <user>U5QJW0DDE</user>
    <text>i gather that the update portion of the architecture happens on the requestAnimationFrame, right? if there are multiple messages to be processed, they are sequentially handled in the same order they were sent?</text>
  </message>
  <message>
    <ts>2017-07-10T15:43:39.159869</ts>
    <user>U5ABF3BH7</user>
    <text>Hello! Writing import Json.Decode in elm-repl, this is what I get. I am not sure what to do with that message. ```&amp;gt; import Json.Decode as Decode exposing (Decoder)
Problem in dependency elm-lang/html 2.0.0

The elm-package.json constraints of 'elm-lang/html' are probably
letting too much stuff through. Definitely open an issue on the relevant github
repo to get this fixed and save other people from this pain.```</text>
  </message>
  <message>
    <ts>2017-07-10T15:44:43.191370</ts>
    <user>U5ABF3BH7</user>
    <text>I don't know how to open an issue on the relevant github repo</text>
  </message>
  <message>
    <ts>2017-07-10T16:02:12.724445</ts>
    <user>U5QJW0DDE</user>
    <text>what is this syntax after Msg: exposing (Msg(..))</text>
  </message>
  <message>
    <ts>2017-07-10T16:05:21.821763</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U5QJW0DDE&gt; that says expose the `Msg` type and the `(..)` says all its constructors</text>
  </message>
  <message>
    <ts>2017-07-10T16:05:58.840798</ts>
    <user>U0FP80EKB</user>
    <text>So, you could (and we do this sometimes in our codebase) expose the type but none of the constructors `exposing (Msg)` and also expose the type but only a couple of the constructors `exposing (Msg(Constructor1, Constructor2))`</text>
  </message>
  <message>
    <ts>2017-07-10T16:06:14.848537</ts>
    <user>U0FP80EKB</user>
    <text>So, you can only construct a `Msg` type using those two constructors, regardless of how many you have defined</text>
  </message>
  <message>
    <ts>2017-07-10T16:11:43.010055</ts>
    <user>U5QJW0DDE</user>
    <text>what would be the value of exposing the type but zero constructors?</text>
  </message>
  <message>
    <ts>2017-07-10T16:12:14.024880</ts>
    <user>U0FP80EKB</user>
    <text>For example, you might expose a function that returns the type, then ones that work on it, but you don't want external code constructing it</text>
  </message>
  <message>
    <ts>2017-07-10T16:12:31.032801</ts>
    <user>U0FP80EKB</user>
    <text>Here's a contrived example: `Currency`</text>
  </message>
  <message>
    <ts>2017-07-10T16:12:48.041062</ts>
    <user>U0FP80EKB</user>
    <text>```
intToCurrency : Int -&amp;gt; Currency
add: Currency -&amp;gt; Currency -&amp;gt; Currency
```</text>
  </message>
  <message>
    <ts>2017-07-10T16:13:05.049207</ts>
    <user>U0FP80EKB</user>
    <text>You want all `Currency` to be created by external code calling `intToCurrency`</text>
  </message>
  <message>
    <ts>2017-07-10T16:13:10.051611</ts>
    <user>U0FP80EKB</user>
    <text>Then, you want to support adding them together</text>
  </message>
  <message>
    <ts>2017-07-10T16:13:17.055082</ts>
    <user>U0FP80EKB</user>
    <text>There is no need to expose the constructors</text>
  </message>
  <message>
    <ts>2017-07-10T16:15:41.125782</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5QJW0DDE&gt; An example I like is you could have a `Url` data type, you want only validated urls, so the only way to construct it is using a function which validates it first. If the constructors were exposed, one might be working with invalid data.</text>
  </message>
  <message>
    <ts>2017-07-10T16:17:44.185357</ts>
    <user>U0FP80EKB</user>
    <text>That's a good one, too</text>
  </message>
  <message>
    <ts>2017-07-10T16:19:35.239420</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U48AEBJQ3&gt; i see. you mean, the function which builds your Url is accessible, and the Urls' constructors are accessible only to that function's definition, but they are not accessible in the place where you call that function</text>
  </message>
  <message>
    <ts>2017-07-10T16:20:08.255417</ts>
    <user>U48AEBJQ3</user>
    <text>right</text>
  </message>
  <message>
    <ts>2017-07-10T16:22:47.334876</ts>
    <user>U5QJW0DDE</user>
    <text>any idea why this page says to avoid installing Elm globally, and only do it per project: &lt;http://www.romanzolotarev.com/elm/&gt;  &amp;gt;"if you are working with multiple projects or with other developers, avoid installing Elm globally."</text>
  </message>
  <message>
    <ts>2017-07-10T16:23:24.353442</ts>
    <user>U0FP80EKB</user>
    <text>maybe so you can work with different versions on different projects?</text>
  </message>
  <message>
    <ts>2017-07-10T16:24:00.371280</ts>
    <user>U5QJW0DDE</user>
    <text>different versions of the elm language?</text>
  </message>
  <message>
    <ts>2017-07-10T16:24:03.372869</ts>
    <user>U0FP80EKB</user>
    <text>yeah</text>
  </message>
  <message>
    <ts>2017-07-10T16:24:07.374876</ts>
    <user>U5QJW0DDE</user>
    <text>oh ok</text>
  </message>
  <message>
    <ts>2017-07-10T16:24:14.378535</ts>
    <user>U0FP80EKB</user>
    <text>maybe? I haven't read that page, though. ¯\_(ツ)_/¯</text>
  </message>
  <message>
    <ts>2017-07-10T16:24:31.386934</ts>
    <user>U5QJW0DDE</user>
    <text>he made that statement but did not provide a reason why</text>
  </message>
  <message>
    <ts>2017-07-10T16:49:05.119633</ts>
    <user>U5QJW0DDE</user>
    <text>do i understand correctly that the only place you'd write a type variable would be in the declaration of a union or record, but nowhere else?</text>
  </message>
  <message>
    <ts>2017-07-10T16:52:21.215832</ts>
    <user>U14Q8S4EM</user>
    <text>Not sure what that measn &lt;@U5QJW0DDE&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T16:52:28.219067</ts>
    <user>U14Q8S4EM</user>
    <text>I write them in case statements all the time</text>
  </message>
  <message>
    <ts>2017-07-10T16:52:29.219551</ts>
    <user>U14Q8S4EM</user>
    <text>Like</text>
  </message>
  <message>
    <ts>2017-07-10T16:53:22.245667</ts>
    <user>U14Q8S4EM</user>
    <text>```
handle : Maybe Int -&amp;gt; Int
handle maybeInt =
    case maybeInt of
        Just int -&amp;gt;
            int + 5
        Nothing -&amp;gt;
            20
```</text>
  </message>
  <message>
    <ts>2017-07-10T16:53:59.263291</ts>
    <user>U14Q8S4EM</user>
    <text>But maybe thats not what you meant.</text>
  </message>
  <message>
    <ts>2017-07-10T16:54:02.264493</ts>
    <user>U5QJW0DDE</user>
    <text>i don't see a type varaible in your case statement</text>
  </message>
  <message>
    <ts>2017-07-10T16:54:34.280956</ts>
    <user>U5QJW0DDE</user>
    <text>The "Int" in "Maybe Int" is a type given to the type variable declared in Maybe</text>
  </message>
  <message>
    <ts>2017-07-10T16:54:51.289104</ts>
    <user>U14Q8S4EM</user>
    <text>``` 
handle : Maybe Int -&amp;gt; Int
handle maybeInt =
    case maybeInt of
        Just 5 -&amp;gt;
            12
        everythingElse -&amp;gt;
            20
```</text>
  </message>
  <message>
    <ts>2017-07-10T16:54:54.290231</ts>
    <user>U5QJW0DDE</user>
    <text>types are capitalized, your Just int uses "int" as a regular variable</text>
  </message>
  <message>
    <ts>2017-07-10T16:56:24.334966</ts>
    <user>U14Q8S4EM</user>
    <text>By type variable, you mean a lower case word like used in the type signature?</text>
  </message>
  <message>
    <ts>2017-07-10T16:56:38.342351</ts>
    <user>U5QJW0DDE</user>
    <text>yeah</text>
  </message>
  <message>
    <ts>2017-07-10T16:57:08.356810</ts>
    <user>U5QJW0DDE</user>
    <text>all variables are lowercase; if used in a signature, that variable is a type variable; if used in a definition, it's a regular variable, holding data</text>
  </message>
  <message>
    <ts>2017-07-10T16:57:49.377759</ts>
    <user>U14Q8S4EM</user>
    <text>Yeah, in that case I can think of 0 declaring a variable, 1 specifying the type signature, and 2 that case statement stuff</text>
  </message>
  <message>
    <ts>2017-07-10T16:58:33.399783</ts>
    <user>U14Q8S4EM</user>
    <text>Or also
```
handle : Model -&amp;gt; CustomType
handle { customType } =
```</text>
  </message>
  <message>
    <ts>2017-07-10T16:58:37.401613</ts>
    <user>U5QJW0DDE</user>
    <text>you can't use type variables in a case, at least not that I've ever seen</text>
  </message>
  <message>
    <ts>2017-07-10T16:58:44.405083</ts>
    <user>U5QJW0DDE</user>
    <text>your case example is not using type variables</text>
  </message>
  <message>
    <ts>2017-07-10T16:59:03.414889</ts>
    <user>U14Q8S4EM</user>
    <text>In my second case example I use `everythingElse`?</text>
  </message>
  <message>
    <ts>2017-07-10T16:59:19.422402</ts>
    <user>U14Q8S4EM</user>
    <text>`everythingElse : Maybe Int`</text>
  </message>
  <message>
    <ts>2017-07-10T17:01:09.479134</ts>
    <user>U5QJW0DDE</user>
    <text>that's just catching any value other than the Just 5, right? it's not specifying the type variable for Maybe, which is an Int</text>
  </message>
  <message>
    <ts>2017-07-10T17:02:04.507234</ts>
    <user>U663M2MB7</user>
    <text>Does &lt;http://package.elm-lang.org/packages/NoRedInk/elm-decode-pipeline/3.0.0/&gt; support decoding json with lists containing more objects?</text>
  </message>
  <message>
    <ts>2017-07-10T17:02:29.519095</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U5QJW0DDE&gt; How would you describe a type variable in your own words? The terminology can be a bit vague.</text>
  </message>
  <message>
    <ts>2017-07-10T17:03:34.549457</ts>
    <user>U5QJW0DDE</user>
    <text>i don't think it's vague, it's a standard term in FP</text>
  </message>
  <message>
    <ts>2017-07-10T17:04:08.565513</ts>
    <user>U5QJW0DDE</user>
    <text>`type alias Rect a =`
   ` { x : a }`</text>
  </message>
  <message>
    <ts>2017-07-10T17:04:17.569471</ts>
    <user>U5QJW0DDE</user>
    <text>a is a type variable</text>
  </message>
  <message>
    <ts>2017-07-10T17:04:50.585273</ts>
    <user>U4F64AKQV</user>
    <text>Ah, a parameterized type?</text>
  </message>
  <message>
    <ts>2017-07-10T17:05:14.596799</ts>
    <user>U5QJW0DDE</user>
    <text>well, all the Elm docs I've been reading, and a few Haskell ones, refer to the "a" in my example as a "type variable"</text>
  </message>
  <message>
    <ts>2017-07-10T17:05:44.611045</ts>
    <user>U4F64AKQV</user>
    <text>You could definitely use one in a function signature</text>
  </message>
  <message>
    <ts>2017-07-10T17:06:03.619964</ts>
    <user>U4F64AKQV</user>
    <text>`length : List a -&amp;gt; Int` for example.</text>
  </message>
  <message>
    <ts>2017-07-10T17:06:48.640845</ts>
    <user>U5QJW0DDE</user>
    <text>that's true</text>
  </message>
  <message>
    <ts>2017-07-10T17:07:27.659043</ts>
    <user>U4F64AKQV</user>
    <text>Is that what you were asking about?</text>
  </message>
  <message>
    <ts>2017-07-10T17:08:13.680441</ts>
    <user>U4F64AKQV</user>
    <text>Or `identity : a -&amp;gt; a` is another good example.</text>
  </message>
  <message>
    <ts>2017-07-10T17:08:53.699449</ts>
    <user>U5QJW0DDE</user>
    <text>suppose you wish to match against different type values of a in this example: ```
type Tex a
    = AA a
    | B


fort : Tex -&amp;gt; Int
fort a =
    case a of
        AA 3 -&amp;gt;
            3

        B -&amp;gt;
            1

        _ -&amp;gt;
            0
```</text>
  </message>
  <message>
    <ts>2017-07-10T17:09:07.705614</ts>
    <user>U5QJW0DDE</user>
    <text>this does not compile, but can you match for different types in Tex?</text>
  </message>
  <message>
    <ts>2017-07-10T17:09:40.720672</ts>
    <user>U4F64AKQV</user>
    <text>As far as I know, it does not work that way.</text>
  </message>
  <message>
    <ts>2017-07-10T17:10:08.733378</ts>
    <user>U5QJW0DDE</user>
    <text>so you'd have to specify what type of Tex the function fort accepts? i.e. `fort: Text Int -&amp;gt; Int`</text>
  </message>
  <message>
    <ts>2017-07-10T17:13:11.816950</ts>
    <user>U4F64AKQV</user>
    <text>Yes, you always need to specify something. It can be an explicit type like `Int` or it could be another type variable like `a`. The thing is that you can't really tailor the implementation based on that type variable as far as I'm aware. The type variable there is meant to provide a layer of generalization for when you want the same operation to be applicable for all types.</text>
  </message>
  <message>
    <ts>2017-07-10T17:14:00.838685</ts>
    <user>U4F64AKQV</user>
    <text>I would recommend making separate functions if you need different behavior for different types.</text>
  </message>
  <message>
    <ts>2017-07-10T17:14:05.841388</ts>
    <user>U5QJW0DDE</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-10T17:15:07.868993</ts>
    <user>U39DE7RQ9</user>
    <text>&lt;@U663M2MB7&gt; yes it does. You can decode what ever structure</text>
  </message>
  <message>
    <ts>2017-07-10T17:15:32.880721</ts>
    <user>U5QJW0DDE</user>
    <text>it's rather interesting to me that you can use variables in Elm code before they are actually defined</text>
  </message>
  <message>
    <ts>2017-07-10T17:17:20.929266</ts>
    <user>U663M2MB7</user>
    <text>&lt;@U39DE7RQ9&gt; do I attach a separate decoder for the objects in the list below the top element or is there something else here? reading the docs does not really make this clear to me</text>
  </message>
  <message>
    <ts>2017-07-10T17:18:22.956994</ts>
    <user>U39DE7RQ9</user>
    <text>scav: yes I can show you an example, w8</text>
  </message>
  <message>
    <ts>2017-07-10T17:20:02.001182</ts>
    <user>U39DE7RQ9</user>
    <text>```

module Form.FormDecoder exposing (..)

import Form.Models exposing (..)
import Json.Decode exposing (int, string, nullable, Decoder, list, andThen, succeed)
import Json.Decode.Pipeline exposing (decode, required, optional)


decodeForm : Json.Decode.Value -&amp;gt; Result String JsonForm
decodeForm modelJson =
    Json.Decode.decodeValue formDecoder modelJson


decodeFormList : Decoder (List JsonForm)
decodeFormList =
    list formDecoder


formDecoder : Decoder JsonForm
formDecoder =
    decode JsonForm
        |&amp;gt; required "eventId" int
        |&amp;gt; required "eventName" string
        |&amp;gt; required "orgName" string
        |&amp;gt; required "formName" string
        |&amp;gt; required "formSteps" (list formStepDecoder)


formStepDecoder : Decoder FormStep
formStepDecoder =
    decode FormStep
        |&amp;gt; required "stepId" string
        |&amp;gt; required "stepTitle" string
        |&amp;gt; required "stepIndex" int
        |&amp;gt; required "questions" (list questionDecoder)


questionDecoder : Decoder Question
questionDecoder =
    decode Question
        -- Nödvändigt?
        |&amp;gt; required "questionId" string
        |&amp;gt; required "questionText" string
        |&amp;gt; required "questionType" (string |&amp;gt; andThen questionTypeDecoder)
        |&amp;gt; required "questionIndex" int
        |&amp;gt; optional "choices" (list choiceDecoder) []


questionTypeDecoder : String -&amp;gt; Decoder QuestionType
questionTypeDecoder typeString =
    case typeString of
        "TextType" -&amp;gt;
            Json.Decode.succeed TextType

        "TextType_email" -&amp;gt;
            Json.Decode.succeed TextType_email

        "ChoiceType" -&amp;gt;
            Json.Decode.succeed ChoiceType

        "InfoType" -&amp;gt;
            Json.Decode.succeed InfoType

        _ -&amp;gt;
            Json.Decode.succeed NoType


choiceDecoder : Decoder Choice
choiceDecoder =
    decode Choice
        |&amp;gt; required "choiceFee" int
        |&amp;gt; required "choiceIndex" int
        |&amp;gt; required "choiceText" string
```</text>
  </message>
  <message>
    <ts>2017-07-10T17:20:13.006382</ts>
    <user>U39DE7RQ9</user>
    <text>The json:</text>
  </message>
  <message>
    <ts>2017-07-10T17:21:20.036511</ts>
    <user>U663M2MB7</user>
    <text>Oh, that makes sense</text>
  </message>
  <message>
    <ts>2017-07-10T17:21:36.043321</ts>
    <user>U663M2MB7</user>
    <text>`|&amp;gt; required "formSteps" (list formStepDecoder)``</text>
  </message>
  <message>
    <ts>2017-07-10T17:22:18.062050</ts>
    <user>U39DE7RQ9</user>
    <text>```
"forms" : {
    "-Kh8yFc6pVkosSrUgDkD" : {
      "eventId" : 1,
      "eventName" : "Utmaningen 2017",
      "formName" : "AnmÃ¤lan till Utmaningen 2017",
      "formSteps" : [ {
        "questions" : [ {
          "questionId" : "martinwefwef",
          "questionIndex" : 1,
          "questionText" : "Namn",
          "questionType" : "TextType"
        }, {
          "questionId" : "martintrt54",
          "questionIndex" : 2,
          "questionText" : "E-post",
          "questionType" : "TextType_email"
        } ],
        "stepId" : "martin_step_ffeef",
        "stepIndex" : 1,
        "stepTitle" : "Kontaktinformation"
      }, {
        "questions" : [ {
          "questionId" : "martinefwegrh",
          "questionIndex" : 1,
          "questionText" : "Lagnamn",
          "questionType" : "TextType"
        }, {
          "choices" : [ {
            "choiceFee" : 0,
            "choiceIndex" : 1,
            "choiceText" : "Herr"
          }, {
            "choiceFee" : 0,
            "choiceIndex" : 2,
            "choiceText" : "Dam"
          }, {
            "choiceFee" : 0,
            "choiceIndex" : 3,
            "choiceText" : "Mix"
          } ],
          "questionId" : "martinfg43g43",
          "questionIndex" : 2,
          "questionText" : "Klass",
          "questionType" : "ChoiceType"
        }, {
          "choices" : [ {
            "choiceFee" : 800,
            "choiceIndex" : 1,
            "choiceText" : "LÃ¥ng"
          }, {
            "choiceFee" : 600,
            "choiceIndex" : 2,
            "choiceText" : "Kort"
          } ],
          "questionId" : "martinfwevweg",
          "questionIndex" : 3,
          "questionText" : "Bana",
          "questionType" : "ChoiceType"
        } ],
        "stepId" : "martin_step_ffee",
        "stepIndex" : 2,
        "stepTitle" : "TÃ¤vlingsinformation"
      } ],
      "orgName" : "Karlstad Multisport"
    }
```</text>
  </message>
  <message>
    <ts>2017-07-10T17:24:57.130930</ts>
    <user>U39DE7RQ9</user>
    <text>yes, does it make sense?</text>
  </message>
  <message>
    <ts>2017-07-10T17:28:28.221492</ts>
    <user>U5QJW0DDE</user>
    <text>as far as I can tell, the single source of model data in the architecture is via the view function. I'm curious about the best way to handle a scenario where a distanct child html component needs some data in the model that none of its ancestors need. assuming these components are built as different functions, this would mean sending that data for a distanct child down through all its parents?</text>
  </message>
  <message>
    <ts>2017-07-10T17:28:53.232102</ts>
    <user>U663M2MB7</user>
    <text>totally :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-10T17:29:16.242446</ts>
    <user>U5QJW0DDE</user>
    <text>or, just passing the entire model to all the children?</text>
  </message>
  <message>
    <ts>2017-07-10T17:29:43.253875</ts>
    <user>U663M2MB7</user>
    <text>Thanks!</text>
  </message>
  <message>
    <ts>2017-07-10T17:30:28.273749</ts>
    <user>U4JT89FGB</user>
    <text>logically an ancestor needs said data if some descendant needs it. no need for entire model, just what is necessary for all descendants, eh?</text>
  </message>
  <message>
    <ts>2017-07-10T17:32:05.315277</ts>
    <user>U5QJW0DDE</user>
    <text>that's not entirely correct. for example, re-frame (a clojurescript library) gets around this by separating subscriptions for a component from the location at which they are called/instantiated. a component independently establishes what it wants from the central model, without ancestors needing to know what a child needs.</text>
  </message>
  <message>
    <ts>2017-07-10T17:32:52.335038</ts>
    <user>U5QJW0DDE</user>
    <text>an ancestor might only need to know that it needs to build a particular screen, for example, without caring what widgets should be on that screen and what those individual widgets need</text>
  </message>
  <message>
    <ts>2017-07-10T17:35:41.404407</ts>
    <user>U4JT89FGB</user>
    <text>So your parent doens't know even which widgets are on it?</text>
  </message>
  <message>
    <ts>2017-07-10T17:37:05.439353</ts>
    <user>U5QJW0DDE</user>
    <text>it could, but it doesn't need to. the point is, why string a bunch of data through many ancestral layers with all the inbetween components not needing that data, just to build some distant child? it's a problem that appeared in the first version of Om that has been fixed in more modern libraries, but it appears Elm's architecture requires this type of logic also, unless there is another technique that is not apparent</text>
  </message>
  <message>
    <ts>2017-07-10T17:38:35.475364</ts>
    <user>U5QJW0DDE</user>
    <text>perhaps it is typical in Elm apps to pass the whole model around to all the html view functions</text>
  </message>
  <message>
    <ts>2017-07-10T17:38:59.484945</ts>
    <user>U4JT89FGB</user>
    <text>I think there is a technique. As long as each parent knows which descendants it contains, you can set a hierarchical model and command/message structure.</text>
  </message>
  <message>
    <ts>2017-07-10T17:39:21.493666</ts>
    <user>U5QJW0DDE</user>
    <text>what do you mean command/message structure?</text>
  </message>
  <message>
    <ts>2017-07-10T17:39:35.498761</ts>
    <user>U4JT89FGB</user>
    <text>nested elm architecture</text>
  </message>
  <message>
    <ts>2017-07-10T17:40:22.517091</ts>
    <user>U5QJW0DDE</user>
    <text>still sounds vague to me. it seems that Elm's architecture assumes that the best way to store model data must also be the best way to organize that data for a view. and usually, this is not the case.</text>
  </message>
  <message>
    <ts>2017-07-10T17:40:37.523264</ts>
    <user>U4JT89FGB</user>
    <text>i have no idea how you would get around this if parents dont know about their children, though</text>
  </message>
  <message>
    <ts>2017-07-10T17:40:58.531974</ts>
    <user>U5QJW0DDE</user>
    <text>in the Elm archicture, you are right, I don't see a way around this. I'm a little surprised, actually.</text>
  </message>
  <message>
    <ts>2017-07-10T17:41:16.539247</ts>
    <user>U4JT89FGB</user>
    <text>i've actually come to prefer it</text>
  </message>
  <message>
    <ts>2017-07-10T17:41:41.549223</ts>
    <user>U4JT89FGB</user>
    <text>the only place it bothers me are helper view functions, which need to return a single type of Html msg</text>
  </message>
  <message>
    <ts>2017-07-10T17:42:06.559126</ts>
    <user>U5QJW0DDE</user>
    <text>that's fine, but Elm doesn't give you the flexibility to separate model organization from view organization, it assumes they must correspond. This is a limitation that has been addressed throughout the industry in recent years</text>
  </message>
  <message>
    <ts>2017-07-10T17:42:38.571923</ts>
    <user>U0LPMPL2U</user>
    <text>What do you mean by separating model and view organization?</text>
  </message>
  <message>
    <ts>2017-07-10T17:42:55.578489</ts>
    <user>U4JT89FGB</user>
    <text>as far as i'm concerned, elm architecture is a superior organizational form</text>
  </message>
  <message>
    <ts>2017-07-10T17:43:19.587760</ts>
    <user>U5QJW0DDE</user>
    <text>if your views get their data only from parent views, that means model data must correspond to the view heirarchy, unless you pass the entire model to all view functions</text>
  </message>
  <message>
    <ts>2017-07-10T17:44:05.605785</ts>
    <user>U0LPMPL2U</user>
    <text>Hmmm, it seems like you're looking at this from more of an OO point of view?</text>
  </message>
  <message>
    <ts>2017-07-10T17:44:10.607550</ts>
    <user>U5QJW0DDE</user>
    <text>not at all</text>
  </message>
  <message>
    <ts>2017-07-10T17:44:35.617197</ts>
    <user>U0LPMPL2U</user>
    <text>The model is just data. Views functions that take a subset of that data and return Html</text>
  </message>
  <message>
    <ts>2017-07-10T17:44:39.618862</ts>
    <user>U5QJW0DDE</user>
    <text>is there any way for a view to get data out of a model if that data is not passed from a parent function that builds the view?</text>
  </message>
  <message>
    <ts>2017-07-10T17:45:15.632339</ts>
    <user>U4JT89FGB</user>
    <text>views take a model and return a view. the model you pass it is completely up to you. i.e. some subset of your model</text>
  </message>
  <message>
    <ts>2017-07-10T17:45:51.646524</ts>
    <user>U0LPMPL2U</user>
    <text>Functions in elm are pure. All data must come in as arguments.</text>
  </message>
  <message>
    <ts>2017-07-10T17:45:52.646937</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U4JT89FGB&gt;: that is exactly my point. views only handle data passed from parents. this is very limiting: it requires all ancestors to know and handle data they don't actually use, only because a distant child requires it.</text>
  </message>
  <message>
    <ts>2017-07-10T17:45:57.648670</ts>
    <user>U0FP80EKB</user>
    <text>You can also have a reusable function that takes `Model -&amp;gt; Html Msg` that you call. The return value of that can be passed into another view that wants to use it</text>
  </message>
  <message>
    <ts>2017-07-10T17:46:13.655350</ts>
    <user>U0FP80EKB</user>
    <text>Your view call stack doesn't have to correspond to your visual hierarchy</text>
  </message>
  <message>
    <ts>2017-07-10T17:46:15.655981</ts>
    <user>U4JT89FGB</user>
    <text>that's not true, either. an ancestor doesn't need to know what data is there, just that it is there</text>
  </message>
  <message>
    <ts>2017-07-10T17:46:36.664395</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U4JT89FGB&gt; i don't think you are understanding the problem I am addressing</text>
  </message>
  <message>
    <ts>2017-07-10T17:46:38.665374</ts>
    <user>U4JT89FGB</user>
    <text>i mean, in theory they could know what is there - but the sub-component can control that model completely</text>
  </message>
  <message>
    <ts>2017-07-10T17:46:51.670315</ts>
    <user>U0FP80EKB</user>
    <text>"view only handle data passed from parents" implies that the view function for a specific piece on your page has to be called by the view function for the containing piece.</text>
  </message>
  <message>
    <ts>2017-07-10T17:46:53.671269</ts>
    <user>U0FP80EKB</user>
    <text>That's incorrect</text>
  </message>
  <message>
    <ts>2017-07-10T17:47:21.682618</ts>
    <user>U0FP80EKB</user>
    <text>The view hierarchy doesn't have to correspond to the call hierarchy</text>
  </message>
  <message>
    <ts>2017-07-10T17:47:59.697549</ts>
    <user>U0FP80EKB</user>
    <text>the "parent" doesn't have to call the "child" view functions in order to show them. The "parent" can instead have it passed in.</text>
  </message>
  <message>
    <ts>2017-07-10T17:48:08.700882</ts>
    <user>U5QJW0DDE</user>
    <text>if you have a reusable function, in order to call it from a distant child, that child must have the entire model passed to it first, so it can then call the resuable function, is that what you mean?</text>
  </message>
  <message>
    <ts>2017-07-10T17:48:11.702002</ts>
    <user>U0FP80EKB</user>
    <text>So, if you are worried about passing a "child"‘s data into the "parent"‘s view function, then you don't have to</text>
  </message>
  <message>
    <ts>2017-07-10T17:48:22.706124</ts>
    <user>U0FP80EKB</user>
    <text>No, pass the result of the function</text>
  </message>
  <message>
    <ts>2017-07-10T17:48:43.713751</ts>
    <user>U0FP80EKB</user>
    <text>Call the function in a more flat approach, then pass the pieces to the containers</text>
  </message>
  <message>
    <ts>2017-07-10T17:48:45.714823</ts>
    <user>U5QJW0DDE</user>
    <text>but the result would then require the parent of that child to have the entire model in its scope, right?</text>
  </message>
  <message>
    <ts>2017-07-10T17:48:51.716958</ts>
    <user>U0FP80EKB</user>
    <text>No</text>
  </message>
  <message>
    <ts>2017-07-10T17:48:58.719349</ts>
    <user>U5QJW0DDE</user>
    <text>i guess i need to see an example</text>
  </message>
  <message>
    <ts>2017-07-10T17:49:32.732430</ts>
    <user>U0FP80EKB</user>
    <text>The only view function that "requires" the whole model is the top-level `view`</text>
  </message>
  <message>
    <ts>2017-07-10T17:49:37.734648</ts>
    <user>U0FP80EKB</user>
    <text>Everything else is just functions and values</text>
  </message>
  <message>
    <ts>2017-07-10T17:49:46.737958</ts>
    <user>U5QJW0DDE</user>
    <text>you are saying pass the Html Msg for a distant child down through the ancestors?</text>
  </message>
  <message>
    <ts>2017-07-10T17:50:15.749349</ts>
    <user>U0FP80EKB</user>
    <text>Or build up the tree from the bottom</text>
  </message>
  <message>
    <ts>2017-07-10T17:50:42.759985</ts>
    <user>U0FP80EKB</user>
    <text>I think you are thinking that you call top-level, it calls all its "children components" which call their "children components" and so on</text>
  </message>
  <message>
    <ts>2017-07-10T17:50:47.761721</ts>
    <user>U0FP80EKB</user>
    <text>You don't have to do it that way</text>
  </message>
  <message>
    <ts>2017-07-10T17:50:57.765721</ts>
    <user>U5QJW0DDE</user>
    <text>what do you mean build up from the bottom?</text>
  </message>
  <message>
    <ts>2017-07-10T17:51:13.771944</ts>
    <user>U0FP80EKB</user>
    <text>If you think of the visual hierarchy, it is a tree</text>
  </message>
  <message>
    <ts>2017-07-10T17:51:58.788678</ts>
    <user>U0FP80EKB</user>
    <text>So, start at the nodes (the childmost chunks) and call the functions to build those. Now, you pass those chunks into the next level up saying "here are the pieces you are going to contain"</text>
  </message>
  <message>
    <ts>2017-07-10T17:52:40.804676</ts>
    <user>U0LPMPL2U</user>
    <text>That's how the `Html` library works. For example, you pass child nodes into the `div` function.</text>
  </message>
  <message>
    <ts>2017-07-10T17:52:40.804828</ts>
    <user>U0FP80EKB</user>
    <text>Going to that reverse order, you never have to pass any "component" any part of the model it doesn't need.</text>
  </message>
  <message>
    <ts>2017-07-10T17:52:51.809065</ts>
    <user>U0FP80EKB</user>
    <text>yeah, you have to build those child nodes, then pass them to `div`</text>
  </message>
  <message>
    <ts>2017-07-10T17:53:32.824389</ts>
    <user>U0FP80EKB</user>
    <text>I tend to do a combination of inside-out and outside-in building of my html</text>
  </message>
  <message>
    <ts>2017-07-10T17:53:57.833568</ts>
    <user>U0FP80EKB</user>
    <text>But, I also don't mind passing my model down a tree of view functions</text>
  </message>
  <message>
    <ts>2017-07-10T17:54:14.840009</ts>
    <user>U39DE7RQ9</user>
    <text>Good</text>
  </message>
  <message>
    <ts>2017-07-10T17:54:59.856859</ts>
    <user>U5QJW0DDE</user>
    <text>i still see a problem there. let's talk about these distance child leaves. suppose they need some data X. they are the only ones that need X. let's say all these children are built by a couple of parents. the top-most level is only interested in building those couple of parents, and to do so, perhaps it only needs to have a screen position for those parents to build. now, it doesn't know those distance children need X. so what does it pass to the parents?</text>
  </message>
  <message>
    <ts>2017-07-10T17:55:29.869057</ts>
    <user>U5QJW0DDE</user>
    <text>where are the distant children going to get their X from?</text>
  </message>
  <message>
    <ts>2017-07-10T17:55:39.872815</ts>
    <user>U0LPMPL2U</user>
    <text>&amp;gt; let's say all these children are built by a couple of parents</text>
  </message>
  <message>
    <ts>2017-07-10T17:55:41.873626</ts>
    <user>U0FP80EKB</user>
    <text>I'd say it is time to get to code and less abstract "what about X and Y"</text>
  </message>
  <message>
    <ts>2017-07-10T17:55:56.879274</ts>
    <user>U0FP80EKB</user>
    <text>Would be easier to go onto ellie and actually build examples of the problems you feel.</text>
  </message>
  <message>
    <ts>2017-07-10T17:56:02.881656</ts>
    <user>U0FP80EKB</user>
    <text>Otherwise it is easy to go round and round</text>
  </message>
  <message>
    <ts>2017-07-10T17:56:17.887208</ts>
    <user>U0FP80EKB</user>
    <text>Especially since it is easy to get on Ellie and do it. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-10T17:56:24.889617</ts>
    <user>U0LPMPL2U</user>
    <text>when building from the bottom up, parents don't build their children</text>
  </message>
  <message>
    <ts>2017-07-10T17:56:39.895325</ts>
    <user>U0FP80EKB</user>
    <text>(I'm heading to chicago elm code night, so have a good night, folks)</text>
  </message>
  <message>
    <ts>2017-07-10T17:57:18.909838</ts>
    <user>U41NK9BM4</user>
    <text>Wish I could be there!  Sounds fun.</text>
  </message>
  <message>
    <ts>2017-07-10T17:57:46.920302</ts>
    <user>U5QJW0DDE</user>
    <text>but building from the bottom up still requires someone somewhere to call those functions that build those children, right? and to do so, those children-making functions need access to the data the child needs, or full model, right?</text>
  </message>
  <message>
    <ts>2017-07-10T17:59:54.967984</ts>
    <user>U5QJW0DDE</user>
    <text>perhaps i shall code up an example</text>
  </message>
  <message>
    <ts>2017-07-10T18:00:00.970741</ts>
    <user>U0LPMPL2U</user>
    <text>sure</text>
  </message>
  <message>
    <ts>2017-07-10T18:04:33.072825</ts>
    <user>U41NK9BM4</user>
    <text>&lt;@U5QJW0DDE&gt; I see your point. Given that `Model` is passed to `view` and it isn't truly global in the traditional sense you need to pass to the called functions all the info they need to generate the markup, including the info needed by their sub functions.</text>
  </message>
  <message>
    <ts>2017-07-10T18:05:05.084329</ts>
    <user>U41NK9BM4</user>
    <text>There's no magic.</text>
  </message>
  <message>
    <ts>2017-07-10T18:06:07.105869</ts>
    <user>U5QJW0DDE</user>
    <text>it's a bit of a problem on large SPAs. This issue has been addressed over the last 3 years by the Clojurescript folks and have arrived at a good solution in re-frame. The Elm Architecture looks a bit like the Clojurescript 2014 model of handling complex UIs, but perhaps I will be proven wrong in a few moments when I ask more about some code</text>
  </message>
  <message>
    <ts>2017-07-10T18:06:21.111109</ts>
    <user>U41NK9BM4</user>
    <text>You usually end up writing a lot of simple functions which require as little data as possible.</text>
  </message>
  <message>
    <ts>2017-07-10T18:07:06.127107</ts>
    <user>U41NK9BM4</user>
    <text>There is a good sample app by Richard Feldman that deal with the complexity of a SPA</text>
  </message>
  <message>
    <ts>2017-07-10T18:07:58.145122</ts>
    <user>U5QJW0DDE</user>
    <text>i'm guessing it is fairly idiomatic in a lot of Elm apps to pass the whole model around to view functions</text>
  </message>
  <message>
    <ts>2017-07-10T18:08:10.149258</ts>
    <user>U5QJW0DDE</user>
    <text>at least, in large complex UIs</text>
  </message>
  <message>
    <ts>2017-07-10T18:08:21.153328</ts>
    <user>U48AEBJQ3</user>
    <text>Some people do that, but it is not the only way to do so.</text>
  </message>
  <message>
    <ts>2017-07-10T18:10:08.188972</ts>
    <user>U41NK9BM4</user>
    <text>In the SPA example you will see the model is separated by each single page. &lt;https://github.com/rtfeldman/elm-spa-example/blob/master/src/Main.elm#L51&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T18:11:04.208105</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U41NK9BM4&gt; well that is part of the problem: the model is separated by the needs of the view. it shouldn't be that way</text>
  </message>
  <message>
    <ts>2017-07-10T18:11:16.212421</ts>
    <user>U5QJW0DDE</user>
    <text>the view and the model are separate, their organization is not necessarily the same and usually isn't</text>
  </message>
  <message>
    <ts>2017-07-10T18:11:38.219512</ts>
    <user>U41NK9BM4</user>
    <text>You can model the thing as you see it fit</text>
  </message>
  <message>
    <ts>2017-07-10T18:11:45.221974</ts>
    <user>U5QJW0DDE</user>
    <text>i just need to fix some compiler errors here then we can talk about the real stuff</text>
  </message>
  <message>
    <ts>2017-07-10T18:12:12.230753</ts>
    <user>U5QJW0DDE</user>
    <text>i've written like 100 lines of Elm in my life but really want to give it a shot, convinced my company to take a serious look</text>
  </message>
  <message>
    <ts>2017-07-10T18:15:04.287879</ts>
    <user>U5QJW0DDE</user>
    <text>there's a js error somewhere here but &lt;https://ellie-app.com/3JbGH7v2v7ra1/1&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T18:16:10.309941</ts>
    <user>U41NK9BM4</user>
    <text>Shoud be `var app = Elm.Hello.fullscreen()`</text>
  </message>
  <message>
    <ts>2017-07-10T18:17:02.326903</ts>
    <user>U5QJW0DDE</user>
    <text>ok, so my question is about the call that says `child 0`</text>
  </message>
  <message>
    <ts>2017-07-10T18:17:28.335226</ts>
    <user>U5QJW0DDE</user>
    <text>the idea is that the parent only got what it needs, and now the child needs what it needs from the model.</text>
  </message>
  <message>
    <ts>2017-07-10T18:17:48.341762</ts>
    <user>U5QJW0DDE</user>
    <text>the parent does not get the whole model, so how does the child get it (I've hard-set it to 0 but it should be pulling from the model)</text>
  </message>
  <message>
    <ts>2017-07-10T18:22:13.425643</ts>
    <user>U48AEBJQ3</user>
    <text>Here is one way of doing it: &lt;https://ellie-app.com/3JbNQk26qNRa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T18:23:17.445347</ts>
    <user>U5QJW0DDE</user>
    <text>that's not a good solution, because it requires top-level ancestors to be aware of distant children, and that really breaks down in a non-trivial app</text>
  </message>
  <message>
    <ts>2017-07-10T18:23:42.454022</ts>
    <user>U5QJW0DDE</user>
    <text>an ancestor should be concerned with building its direct children, not its distant descendants</text>
  </message>
  <message>
    <ts>2017-07-10T18:25:53.499196</ts>
    <user>U48AEBJQ3</user>
    <text>I don't find that it falls down in a non-trivial app at all. The parent is some sort of container, but it doesn't necessarily *care* what its children are. Building the elements in a flat way and then passing them down is quite scalable.</text>
  </message>
  <message>
    <ts>2017-07-10T18:27:28.528292</ts>
    <user>U4JT89FGB</user>
    <text>Here's a verbose way where only parent knows about child &lt;https://ellie-app.com/3JbShZXMxrFa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T18:27:43.532800</ts>
    <user>U41NK9BM4</user>
    <text>I encourage you to try coding a real project. This concerns seems really exaggerated</text>
  </message>
  <message>
    <ts>2017-07-10T18:29:08.557858</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U41NK9BM4&gt; this is not exaggerated; the language might be new, but the problems are battle-tested in several languages. this Elm style of UI is similar to some older libraries in clojurescript, so I've been down this path to great extent and know exactly where it is going</text>
  </message>
  <message>
    <ts>2017-07-10T18:30:30.582666</ts>
    <user>U41NK9BM4</user>
    <text>I don't know… I use web UI everyday and the are all pretty simple. They tend to do those as simple as possible.</text>
  </message>
  <message>
    <ts>2017-07-10T18:30:33.583537</ts>
    <user>U5QJW0DDE</user>
    <text>in this example, it might be trivial, but imagine the top div needing to build children many many layers down, in the end it would be easier to just pass the entire model to all view functions, which is what folks used to do in clojurescript before re-frame came along</text>
  </message>
  <message>
    <ts>2017-07-10T18:30:42.586589</ts>
    <user>U5QJW0DDE</user>
    <text>imagine hundreds of children</text>
  </message>
  <message>
    <ts>2017-07-10T18:30:49.588641</ts>
    <user>U5QJW0DDE</user>
    <text>at all levels of the view heirarchy</text>
  </message>
  <message>
    <ts>2017-07-10T18:30:59.591899</ts>
    <user>U5QJW0DDE</user>
    <text>as is the norm in a serious app</text>
  </message>
  <message>
    <ts>2017-07-10T18:32:38.621973</ts>
    <user>U4JT89FGB</user>
    <text>i've had more problems when i have more than one source of truth</text>
  </message>
  <message>
    <ts>2017-07-10T18:32:53.626456</ts>
    <user>U41NK9BM4</user>
    <text>I'm not familiar with reframe. I would be curious to understand it.</text>
  </message>
  <message>
    <ts>2017-07-10T18:32:55.627220</ts>
    <user>U5QJW0DDE</user>
    <text>this isn't about more than one source of truth</text>
  </message>
  <message>
    <ts>2017-07-10T18:32:55.627230</ts>
    <user>U4JT89FGB</user>
    <text>so maybe there's some preference going on, but what elm provides to me is much more maintainable and sane than otherwise</text>
  </message>
  <message>
    <ts>2017-07-10T18:32:59.628358</ts>
    <user>U48AEBJQ3</user>
    <text>If there are better ways of doing things, this is a community which has been very open to questioning its best practices in the past, an adequate description of the problem and a better way of doing it would certainly be given serious consideration.</text>
  </message>
  <message>
    <ts>2017-07-10T18:33:42.641417</ts>
    <user>U4JT89FGB</user>
    <text>how is this not about more than one source of truth? you want your highest level model to not know some data that only children know…</text>
  </message>
  <message>
    <ts>2017-07-10T18:34:06.648186</ts>
    <user>U5QJW0DDE</user>
    <text>that's not about truth, that's about modularization</text>
  </message>
  <message>
    <ts>2017-07-10T18:34:24.653465</ts>
    <user>U5QJW0DDE</user>
    <text>it's about restricting unnecessary access, about *safer programming*</text>
  </message>
  <message>
    <ts>2017-07-10T18:35:32.673123</ts>
    <user>U48AEBJQ3</user>
    <text>Then, please point us to where we can learn, because I think we are at the end of where we are going to convince each other of anything here.</text>
  </message>
  <message>
    <ts>2017-07-10T18:35:54.679786</ts>
    <user>U4JT89FGB</user>
    <text>take a look at my example above - see how top level doesn't know anything about child - it just knows it has to place the parent somewhere in its view</text>
  </message>
  <message>
    <ts>2017-07-10T18:35:59.681010</ts>
    <user>U5QJW0DDE</user>
    <text>are you familiar with the company CircleCI</text>
  </message>
  <message>
    <ts>2017-07-10T18:37:03.699674</ts>
    <user>U5QJW0DDE</user>
    <text>this shows how they handled state in the "old" way, which resemble's Elm's Architecture, the part starting at "Stretching Om's Seams" : &lt;https://circleci.com/blog/why-we-use-om-and-why-were-excited-for-om-next/&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T18:37:30.707800</ts>
    <user>U5QJW0DDE</user>
    <text>here is an explanation of how reframe works &lt;https://github.com/Day8/re-frame&gt;</text>
  </message>
  <message>
    <ts>2017-07-10T18:39:26.740550</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U4JT89FGB&gt;  your example is not separating the concerns: your parent is still getting the child data, you are essentially passing the whole model tree through to the parent so it can give it to the child. it's the same thing</text>
  </message>
  <message>
    <ts>2017-07-10T18:40:42.762533</ts>
    <user>U4JT89FGB</user>
    <text>then i'm with the rest here. i'm lost. i'm not sure what you're looking for</text>
  </message>
  <message>
    <ts>2017-07-10T18:41:11.771158</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U4JT89FGB&gt; i'm sorry you don't understand the issue, but I think some of the others have</text>
  </message>
  <message>
    <ts>2017-07-10T18:41:16.772687</ts>
    <user>U5QJW0DDE</user>
    <text>it's not complicated.</text>
  </message>
  <message>
    <ts>2017-07-10T18:41:25.775393</ts>
    <user>U5QJW0DDE</user>
    <text>it's just about separating model state from view heirachies</text>
  </message>
  <message>
    <ts>2017-07-10T18:43:42.813973</ts>
    <user>U0LPMPL2U</user>
    <text>If I understand correctly, you'd like to be able to pull some sort of "global" value directly from within deeply nested child functions?</text>
  </message>
  <message>
    <ts>2017-07-10T18:44:16.823335</ts>
    <user>U5QJW0DDE</user>
    <text>that would be one solution, yes</text>
  </message>
  <message>
    <ts>2017-07-10T18:44:26.825994</ts>
    <user>U5QJW0DDE</user>
    <text>or, to "subscribe" to a particular part of the model for a child</text>
  </message>
  <message>
    <ts>2017-07-10T18:46:39.862997</ts>
    <user>U5QJW0DDE</user>
    <text>i will post to the mailing list</text>
  </message>
  <message>
    <ts>2017-07-10T19:35:44.645627</ts>
    <user>U663M2MB7</user>
    <text>Is there any equivalent to  `$` from Haskell in Elm?</text>
  </message>
  <message>
    <ts>2017-07-10T19:37:17.668335</ts>
    <user>U0CL0AS3V</user>
    <text>&lt;@U663M2MB7&gt; `&amp;lt;|`</text>
  </message>
  <message>
    <ts>2017-07-10T19:39:19.698434</ts>
    <user>U663M2MB7</user>
    <text>Thank you! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-10T19:40:44.718611</ts>
    <user>U64FYS317</user>
    <text>Can anyone help me troubleshoot this? I'm getting a `cannot find variable: Mdl` in the following code, although it's defined just a few lines before.
```
module Lib.Layout.View exposing (..)

import Types exposing (Model)
import Html exposing (..)
import Html.Attributes exposing (..)
import Material.Layout as Layout
import Material


type alias Mdl =
    Material.Model

view : (Model -&amp;gt; Html msg) -&amp;gt; Model -&amp;gt; Html msg
view viewFn model =
    -- Cannot find variable `Mdl`
    Layout.render Mdl
        model.mdl
        [ Layout.fixedHeader
        ]
        { header = [ h1 [ style [ ( "padding", "2rem" ) ] ] [ text "counter" ] ]
        , drawer = []
        , tabs = ( [], [] )
        , main = [ viewFn model ]
        }

```</text>
  </message>
  <message>
    <ts>2017-07-10T19:49:15.840452</ts>
    <user>U64FYS317</user>
    <text>I'm confused at the possibility of such a thing</text>
  </message>
  <message>
    <ts>2017-07-10T19:54:56.919047</ts>
    <user>U300LJUAK</user>
    <text>I think your confusing the meaning of this part.

```type alias Mdl =
    Material.Model```

This only defines `Mdl` as an alias of the type `Material.Model`, so you can use it in function definition. It does not copy `Material.Model`'s constructor into `Mdl`.</text>
  </message>
  <message>
    <ts>2017-07-10T19:58:37.970668</ts>
    <user>U300LJUAK</user>
    <text>```type alias Foo =
    { rawr : String }


type alias Bar =
    Foo


someFunc : Bar -&amp;gt; String
someFunc { rawr } =
    rawr```

In this case I could do `Foo "someString"` and get a value of type `Foo`, but I can't do `Bar "someString"`. I can, on the other hand, pass a value of type `Foo` into `someFunc`, because `Bar` is and alias of `Foo`.</text>
  </message>
  <message>
    <ts>2017-07-10T20:02:05.022502</ts>
    <user>U64FYS317</user>
    <text>&lt;@U300LJUAK&gt; Thanks. I'm trying to reconcile this with some examples I've seen</text>
  </message>
  <message>
    <ts>2017-07-10T20:12:07.157364</ts>
    <user>U300LJUAK</user>
    <text>No problem, I doubt I can really help you any further than that with elm-mdl unfortunately. You can try &lt;#C12KMAYJX|elm-mdl&gt;, too. Perhaps someone on there will have a better answer than me. I'm just not very familiar with it.</text>
  </message>
  <message>
    <ts>2017-07-10T20:22:47.289802</ts>
    <user>U300LJUAK</user>
    <text>&lt;@U64FYS317&gt; From what I understand from the docs though, the first argument of Layout.render (the `Mdl` you're trying to pass) should be a message that's local to your app and receives a value of type Material.Msg. See this example:

```import Material.Layout as Layout
import Material

type alias Model =
  { ...
  , mdl : Material.Model -- Boilerplate
  }

type Msg =
  ...
  | Mdl Material.Msg -- Boilerplate

...

App.program
  { init = ( model, Layout.sub0 Mdl )
  , view = view
  , subscriptions = Layout.subs Mdl model
  , update = update
  }```</text>
  </message>
  <message>
    <ts>2017-07-10T20:27:53.350752</ts>
    <user>U64FYS317</user>
    <text>&lt;@U300LJUAK&gt; Lol I've struggled a lot with this one. Was actually just coming to that conclusion myself (albeit 100x slower than you )</text>
  </message>
  <message>
    <ts>2017-07-10T20:28:37.360088</ts>
    <user>U64FYS317</user>
    <text>I was trying to figure out how they used Mdl as a seeming constructor in the `Layout.render` function</text>
  </message>
  <message>
    <ts>2017-07-10T20:30:34.385230</ts>
    <user>U64FYS317</user>
    <text>I assume creating the 
```
type Msg =
...
| Mdl (Material.Msg MyMsg)
```
actually does let us use the `Mdl` name as a constructor</text>
  </message>
  <message>
    <ts>2017-07-10T20:30:44.387391</ts>
    <user>U64FYS317</user>
    <text>as its then defined as a component of a union type?</text>
  </message>
  <message>
    <ts>2017-07-10T20:30:59.390660</ts>
    <user>U64FYS317</user>
    <text>and thus fits neatly into the layout.render fn</text>
  </message>
  <message>
    <ts>2017-07-10T20:35:54.450358</ts>
    <user>U300LJUAK</user>
    <text>Yup. Thing to remember is that when you say

```type Msg =
    Mdl String
```
OR
```type alias Mdl =
    { val : String }
```
It creates a `Mdl` constructor that takes a string and returns a value (of type `Msg` in the first case, and of type `Mdl` in the second). These are the only two cases where you will have constructors automatically created for you.</text>
  </message>
  <message>
    <ts>2017-07-10T20:36:54.462592</ts>
    <user>U64FYS317</user>
    <text>Thanks a ton :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-10T20:37:26.468776</ts>
    <user>U300LJUAK</user>
    <text>No problem :thumbsup:</text>
  </message>
  <message>
    <ts>2017-07-10T21:17:14.938415</ts>
    <user>U663M2MB7</user>
    <text>Is there some sugar in Elm to switch a Boolean?</text>
  </message>
  <message>
    <ts>2017-07-10T21:27:22.052508</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U663M2MB7&gt; do you mean `if True then "blah" else "beep` ?</text>
  </message>
  <message>
    <ts>2017-07-10T21:28:00.059726</ts>
    <user>U4JT89FGB</user>
    <text>`not &amp;lt;| lastValue`</text>
  </message>
  <message>
    <ts>2017-07-10T21:30:12.084813</ts>
    <user>U153UK3FA</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Basics#not&gt; it's just a regular function</text>
  </message>
  <message>
    <ts>2017-07-10T21:31:49.103828</ts>
    <user>U663M2MB7</user>
    <text>It was a pretty bad idea to begin with</text>
  </message>
  <message>
    <ts>2017-07-10T22:21:19.658083</ts>
    <user>U26LR8F4H</user>
    <text>I'm trying to build a progress bar thing, how would I get the width of the element?</text>
  </message>
  <message>
    <ts>2017-07-10T22:48:38.947766</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U26LR8F4H&gt; the best way is to set that width</text>
  </message>
  <message>
    <ts>2017-07-10T22:49:30.956711</ts>
    <user>U153UK3FA</user>
    <text>the other good way is use CSS percentage units so you don't need to know the width</text>
  </message>
  <message>
    <ts>2017-07-10T22:54:53.014629</ts>
    <user>U26LR8F4H</user>
    <text>Thanks for the suggestion, that may just work</text>
  </message>
  <message>
    <ts>2017-07-10T23:08:10.153909</ts>
    <user>U4JT89FGB</user>
    <text>&lt;@U26LR8F4H&gt; here's some junk you could consider: &lt;https://ellie-app.com/3JgJBMXNxp4a1/2&gt; but i would lean heavily toward jessta's answers</text>
  </message>
  <message>
    <ts>2017-07-10T23:09:42.169078</ts>
    <user>U26LR8F4H</user>
    <text>oh thanks, that looks pretty useful as well.</text>
  </message>
  <message>
    <ts>2017-07-10T23:11:01.182864</ts>
    <user>U153UK3FA</user>
    <text>You can also use a port to get JS to query the DOM and pass it back to Elm, but that's quite a lot of effort</text>
  </message>
  <message>
    <ts>2017-07-10T23:29:50.366603</ts>
    <user>U64MK7215</user>
    <text>how do i use a for loop in elm?</text>
  </message>
  <message>
    <ts>2017-07-10T23:30:37.374808</ts>
    <user>U0JFXEUCT</user>
    <text>there is no for loop, you'll need to check out `List.map`</text>
  </message>
  <message>
    <ts>2017-07-10T23:31:35.384473</ts>
    <user>U0JFXEUCT</user>
    <text>there are other functions too, but it depends what you want to do :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-10T23:32:26.392396</ts>
    <user>U64MK7215</user>
    <text>i am trying to build a caesar cipher, for that i need to iterate through the strings</text>
  </message>
  <message>
    <ts>2017-07-10T23:33:18.400705</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U64MK7215&gt; sounds like a perfect use of `List.map`</text>
  </message>
  <message>
    <ts>2017-07-10T23:33:46.404878</ts>
    <user>U153UK3FA</user>
    <text>a caesar cipher is mapping one character to a different character</text>
  </message>
  <message>
    <ts>2017-07-10T23:34:58.415808</ts>
    <user>U153UK3FA</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/String#map&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T00:32:46.974097</ts>
    <user>U64MK7215</user>
    <text>how to a define a  custom function in elm and call it inside update?</text>
  </message>
  <message>
    <ts>2017-07-11T01:05:51.296546</ts>
    <user>U14Q8S4EM</user>
    <text>What like this?
```
update : Message -&amp;gt; Model -&amp;gt; Model
update message model =
    Shift i -&amp;gt;
        let
            by : Model -&amp;gt; Model
            by model =
                model + i
        in
            by model
```</text>
  </message>
  <message>
    <ts>2017-07-11T01:07:51.314758</ts>
    <user>U5W5F6QGP</user>
    <text>&lt;@U64MK7215&gt; you can declare it as a function on the top level and you can use it in your update function, this is an example where you declare an "addThree" function, which gets used in your update function

```
addThree: Int -&amp;gt; Int
addThree num = 
    num + 3
    
type Msg 
    = AddThree

update: Msg -&amp;gt; Model -&amp;gt; Model
update msg model = 
    case msg of
        AddThree -&amp;gt;
            { model | count = addThree model.count }
```</text>
  </message>
  <message>
    <ts>2017-07-11T01:08:28.320383</ts>
    <user>U5W5F6QGP</user>
    <text>or alternatively, you can use a `let...in` block like chadtech showed above</text>
  </message>
  <message>
    <ts>2017-07-11T01:59:34.823991</ts>
    <user>U14Q8S4EM</user>
    <text>Yeah, I would delcare it top level way before I would declare it in the `let` statement like I did in the example.</text>
  </message>
  <message>
    <ts>2017-07-11T02:11:57.969916</ts>
    <user>U2U94G0QG</user>
    <text>Had a break at work today and ran through &lt;https://github.com/zwilias/elm-demystify-decoders&gt;
Sad that I finished it! Who knew writing JSON decoders in Elm would be such a nice bit o respite</text>
  </message>
  <message>
    <ts>2017-07-11T02:18:28.049043</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U2U94G0QG&gt; Don't worry, now you can use your new found parser combinator powers to parser things other than json.</text>
  </message>
  <message>
    <ts>2017-07-11T02:39:00.308230</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U153UK3FA&gt;, &lt;@U2U94G0QG&gt;, where can I learn about parser combinators?</text>
  </message>
  <message>
    <ts>2017-07-11T02:39:41.316964</ts>
    <user>U0CLDU8UB</user>
    <text>&lt;@U5QJW0DDE&gt; Types help with the problems you're describing. Watch this talk: &lt;https://www.youtube.com/watch?v=DoA4Txr4GUs&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T02:42:54.360979</ts>
    <user>U3LUC6SNS</user>
    <text>Currently I am sending a long string to JS-land where it is rendered first by Asciidoctor.js, then by MathJax.  This happens inside a div "rendered_text".  I have a truly awkward set up where this div is carefully placed so as to look like an ordinary part of the Elm app.  Is there a way of capturing the rendered HTML in this div by a subscription and displaying it in an ordinary HTML element in the Elm app? 

((In fact I am using &lt;@U0JFXEUCT&gt; 's `style-elements`, so I want to display it in one of those))</text>
  </message>
  <message>
    <ts>2017-07-11T02:54:00.513762</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U48AEBJQ3&gt; I noticed you mentioned  ways of building apps other than passing `model` around. That is what I have been doing, and it has worked for me so far.  However, I'm very interested in learning about alternatives.</text>
  </message>
  <message>
    <ts>2017-07-11T03:02:17.639477</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U3LUC6SNS&gt; for more general parsing you can use &lt;http://package.elm-lang.org/packages/Bogdanp/elm-combine/3.1.1/Combine&gt; you'll notice that the concepts there are very similar to those used in Json.Decode</text>
  </message>
  <message>
    <ts>2017-07-11T03:03:39.661690</ts>
    <user>U3SJEDR96</user>
    <text>Personally, I'm partial to `elm-tools/parser` which is... super nice, and really quite performant</text>
  </message>
  <message>
    <ts>2017-07-11T03:05:39.693593</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U2U94G0QG&gt; bonus exercises: implement these without using the originals:
- `at : List String -&amp;gt; Decoder a -&amp;gt; Decoder a`
- `map : (a -&amp;gt; b) -&amp;gt; Decoder a -&amp;gt; Decoder b`
- `maybe : Decoder a -&amp;gt; Decoder (Maybe a)`</text>
  </message>
  <message>
    <ts>2017-07-11T03:15:53.858057</ts>
    <user>U1ZFF0E5P</user>
    <text>can someone tell me how this is useful? `type Something a = Something`</text>
  </message>
  <message>
    <ts>2017-07-11T03:18:22.899284</ts>
    <user>U3SJEDR96</user>
    <text>Kind of depends on where you saw that. If it's in something that has native behind it, that may actually hold data (examples: virtual-dom, elm-benchmark, ..). If you saw that elsewhere, that's a phantom type and it can be pretty useful to enforce constraints at compile-time, though it will generally hold some data. You can read about that a bit more here: &lt;http://package.elm-lang.org/packages/joneshf/elm-tagged/latest&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T03:19:07.912179</ts>
    <user>U1ZFF0E5P</user>
    <text>thanks &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T03:20:19.932622</ts>
    <user>U3SJEDR96</user>
    <text>the reason that, for virtual-dom, it isn't just `type Node = Node` is so you can enforce a consistent msg type at compile-time.</text>
  </message>
  <message>
    <ts>2017-07-11T03:49:14.447288</ts>
    <user>U5QJW0DDE</user>
    <text>Thanks I will be watching that this morning </text>
  </message>
  <message>
    <ts>2017-07-11T04:14:16.951407</ts>
    <user>U61FZV5EK</user>
    <text>What is the best way to find the size of the DOM/view. My elm application runs inside an iframe (cross-domain) and I want to make sure the iframe resizes after load</text>
  </message>
  <message>
    <ts>2017-07-11T04:30:24.297682</ts>
    <user>U2AHAPQUV</user>
    <text>&lt;@U61FZV5EK&gt; I think you can use Window module, use subscriptions to check/listen on resizes: &lt;http://package.elm-lang.org/packages/elm-lang/window/1.0.1/Window&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T04:30:40.304010</ts>
    <user>U2AHAPQUV</user>
    <text>someone correct me if I'm pointing in the wrong direction :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-11T04:31:50.329377</ts>
    <user>U5QJW0DDE</user>
    <text>what is this syntax: `SetEmail email -&amp;gt; { model | email = email}` it's not an annotation (no colon) and it's not a function definition (no equal sign)</text>
  </message>
  <message>
    <ts>2017-07-11T04:32:50.351151</ts>
    <user>U3SJEDR96</user>
    <text>Where did that come from? Context would help :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-11T04:33:04.356325</ts>
    <user>U5QJW0DDE</user>
    <text>around 19:20 at &lt;https://www.youtube.com/watch?v=DoA4Txr4GUs&amp;amp;app=desktop&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T04:33:38.368377</ts>
    <user>U3SJEDR96</user>
    <text>oooh, that's just a branch from an `update`</text>
  </message>
  <message>
    <ts>2017-07-11T04:33:42.370078</ts>
    <user>U5QJW0DDE</user>
    <text>oh ok</text>
  </message>
  <message>
    <ts>2017-07-11T04:33:48.372179</ts>
    <user>U3SJEDR96</user>
    <text>```case msg of</text>
  </message>
  <message>
    <ts>2017-07-11T04:33:54.374427</ts>
    <user>U5QJW0DDE</user>
    <text>got it</text>
  </message>
  <message>
    <ts>2017-07-11T04:34:00.376495</ts>
    <user>U3SJEDR96</user>
    <text>:thumbsup:</text>
  </message>
  <message>
    <ts>2017-07-11T04:39:44.499393</ts>
    <user>U1VH0J8HM</user>
    <text>Hi. I am having a bit of a problem introducing Elm into an existing project which has a webpack set-up. I already wrote about it here: &lt;https://github.com/elm-community/elm-webpack-loader/issues/42#issuecomment-314357069&gt; But, I'll sum up it again:

Now I have a gulp watch that watches elm files and runs the `elm make A.elm B.elm --output elmStuff.js`, but I also have a webpack watch that watches all the rest. When `gulp watch` compiles Elm into `elmStuff.js` bundle, only then the webpack watch is triggered (because the Elm output bundle is required somewhere in watched JS files).

So, my current set-up works, but not only it's noticeably slow (compared to using webpack elm loader), but I have to run 2 independent watches (I wasn't able to combine them into one with nice output at least)...

Before having the set-up above, I tried the `webpack elm loader` and it worked amazing when I had just one Elm module, but it introduced code duplication in case of multiple Elm programs.

So, the question is, how do you go about nicely reloading all of the code in the big app that is being introduced to Elm one module at a time?</text>
  </message>
  <message>
    <ts>2017-07-11T04:46:56.657188</ts>
    <user>U61FZV5EK</user>
    <text>&lt;@U2AHAPQUV&gt; Not exactly what I wanted. I think Window gives the size my parent application gives the iframe. In my index.js file I found the size of the content by calling document.body.scrollHeight</text>
  </message>
  <message>
    <ts>2017-07-11T04:50:51.744240</ts>
    <user>U1ZFF0E5P</user>
    <text>&lt;@U1VH0J8HM&gt; not sure if relevant, but here we go: I was using elm-live to compile to elm.js, and I was used to import said elm.js in a &amp;lt;Elm&amp;gt; react component. so elm-live would start to compile, and sometimes before it even finished writing the elm.js bundle my gulp watching react would pick up on the fact that the file was being changed... anyway I ended up doing this: return `&amp;lt;Elm src={window.Elm.Main} ports={setupPorts}/&amp;gt;;` and simply add the script in your header `&amp;lt;script type="text/javascript" src="/build/js/elm/app.js"&amp;gt;&amp;lt;/script&amp;gt;`</text>
  </message>
  <message>
    <ts>2017-07-11T04:51:46.764414</ts>
    <user>U1ZFF0E5P</user>
    <text>this way my elm can compile on it's own and doest force a react re-compile</text>
  </message>
  <message>
    <ts>2017-07-11T04:52:04.771359</ts>
    <user>U1ZFF0E5P</user>
    <text>this obviously wont work with hot-reload but we dont use it so...</text>
  </message>
  <message>
    <ts>2017-07-11T04:54:49.834226</ts>
    <user>U1VH0J8HM</user>
    <text>&lt;@U1ZFF0E5P&gt; But it looks like you were using only one Elm program. Or am I wrong? In my situation, I have A.elm and B.elm. A.elm is required in one js module and B.elm in another. Both of them can work independently and are attached to different elements.</text>
  </message>
  <message>
    <ts>2017-07-11T04:56:57.883164</ts>
    <user>U1ZFF0E5P</user>
    <text>okay idea: could you have just 1 elm app, and use flags to say in which "module" you are?</text>
  </message>
  <message>
    <ts>2017-07-11T04:57:16.890295</ts>
    <user>U1ZFF0E5P</user>
    <text>so essentially like a SPA</text>
  </message>
  <message>
    <ts>2017-07-11T04:57:44.901011</ts>
    <user>U1VH0J8HM</user>
    <text>Yeah, I was thinking along those lines, I think. I thought of having different ports in main Elm module and then just redirect those ports to a specific Elm sub-module</text>
  </message>
  <message>
    <ts>2017-07-11T04:57:45.901230</ts>
    <user>U1ZFF0E5P</user>
    <text>but instead of using the location passed to your init to know on which page you are, you could pass a flag for context</text>
  </message>
  <message>
    <ts>2017-07-11T04:58:29.918075</ts>
    <user>U1VH0J8HM</user>
    <text>But it does feel like I am trying to bundle up something that should work independently - just doesn't feel nice.</text>
  </message>
  <message>
    <ts>2017-07-11T04:58:53.927105</ts>
    <user>U1VH0J8HM</user>
    <text>&lt;https://groups.google.com/forum/#!msg/elm-discuss/eEJgNnl99ps/keWXnn1KCwAJ&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T04:59:17.936222</ts>
    <user>U1VH0J8HM</user>
    <text>This sums up my concerns about using one Main module approach though</text>
  </message>
  <message>
    <ts>2017-07-11T05:02:46.019738</ts>
    <user>U1VH0J8HM</user>
    <text>Also, if, say, I have A, B, C elms modules all connected in Main somehow and I use that main in one bundle. Then, I want to use just B and C in another bundle (two index pages in one app, say), I either have to use the same Main, meaning I pull unnecessary code into that other bundle, or I have to make another Main file that only connects B and C.</text>
  </message>
  <message>
    <ts>2017-07-11T05:02:54.022637</ts>
    <user>U1VH0J8HM</user>
    <text>Reusing those small modules is no longer easy</text>
  </message>
  <message>
    <ts>2017-07-11T05:22:28.454244</ts>
    <user>U604S603Y</user>
    <text>is there a way to create a Cmd with a new message in the return value of the update function?</text>
  </message>
  <message>
    <ts>2017-07-11T05:22:35.456806</ts>
    <user>U604S603Y</user>
    <text>because I want to run two things sequentially</text>
  </message>
  <message>
    <ts>2017-07-11T05:25:14.515238</ts>
    <user>U604S603Y</user>
    <text>I'm having a button toggling a text to an input field, and I want to set focus to the input field after toggling. Settings focus in the "let" of the toggling message handler does not work, probably because the input is not yet visible at that moment</text>
  </message>
  <message>
    <ts>2017-07-11T05:25:30.520977</ts>
    <user>U604S603Y</user>
    <text>or more likely doesnt even exist yet</text>
  </message>
  <message>
    <ts>2017-07-11T05:25:59.531950</ts>
    <user>U604S603Y</user>
    <text>maybe I can just workaround it with using css's display property instead of inserting only the "right" element in the view</text>
  </message>
  <message>
    <ts>2017-07-11T05:29:22.604473</ts>
    <user>U1ZFF0E5P</user>
    <text>&lt;@U1VH0J8HM&gt; you'd include the bundle only once in your header, and access your modules like so : `window.Elm.FirstModule`, `window.Elm.SecondModule`</text>
  </message>
  <message>
    <ts>2017-07-11T05:32:29.673696</ts>
    <user>U1ZFF0E5P</user>
    <text>&lt;@U604S603Y&gt; I do this in my update in some app I wrote a while back: ```        SelectServer server -&amp;gt;
            { model
                | loginModel = selectServer server model.loginModel
            } ! [ Task.attempt (always NoOp) (Dom.focus "login-username") ]```</text>
  </message>
  <message>
    <ts>2017-07-11T05:33:25.694847</ts>
    <user>U1ZFF0E5P</user>
    <text>so essentially it's a list of servers, when you select one I display a login form and focus the username straight away</text>
  </message>
  <message>
    <ts>2017-07-11T05:34:30.717608</ts>
    <user>U604S603Y</user>
    <text>I'm still living in Non-Elm land with my thinking: I thought Dom.focus does something instantly. But it does return a Task (never worked with those yet) which I have to "schedule" for running myself</text>
  </message>
  <message>
    <ts>2017-07-11T05:34:37.720147</ts>
    <user>U604S603Y</user>
    <text>thanks &lt;@U1ZFF0E5P&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T05:34:52.725688</ts>
    <user>U1ZFF0E5P</user>
    <text>yeah it's how you do side effects in elm</text>
  </message>
  <message>
    <ts>2017-07-11T05:36:17.757050</ts>
    <user>U1ZFF0E5P</user>
    <text>first you update your model, then you ask for a bunch of commands to be executed by the elm runtime. As part of the command to specify the `Msg` that you want to receive once the runtime has executed the command (in this case `NoOp`)</text>
  </message>
  <message>
    <ts>2017-07-11T05:38:12.799738</ts>
    <user>U3SJEDR96</user>
    <text>I was sort of wondering at the "_setting focus in the `let`_" statement, glad you sorted it out :thumbsup:</text>
  </message>
  <message>
    <ts>2017-07-11T06:01:23.303864</ts>
    <user>U5QJW0DDE</user>
    <text>i've been comparing &lt;@U0CL0AS3V&gt; 's SPA example and comparing it to the Re-Frame version (in clojurescript). I'm curious why there is noticiable latency on clicks vs. the reframe version. is it a question of virtual-dom performance vs. react? or is it because of the advanced optimizations that are available to the clojurescript code?</text>
  </message>
  <message>
    <ts>2017-07-11T06:01:54.315722</ts>
    <user>U5QJW0DDE</user>
    <text>for reference, it's &lt;http://rtfeldman.github.io/elm-spa-example/#/&gt; and &lt;https://polymeris.github.io/re-frame-realword-example-app-demo/#/&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T06:05:21.389611</ts>
    <user>U3SJEDR96</user>
    <text>the spa example does a fairly non-standard-yet-neat thing where it fetches the resources the "next" page needs _before_ actually rendering that view. It shows a spinner in the top-right while doing so. This means you get a tad extra latency on fast connections, but a _much_ nicer UX on slow connections</text>
  </message>
  <message>
    <ts>2017-07-11T06:05:35.394472</ts>
    <user>U5QJW0DDE</user>
    <text>thanks I watched that talk by &lt;@U0CL0AS3V&gt; . it still seems to sum up my impression that the elm architecture mostly requires that the general tree structure of data model should line up with the view tree, otherwise passing whole model state would be common. i provided some detailed examples of this in a message to elm-discuss mail list, so after it passes moderation (my first email there) perhaps there will be some useful feedback</text>
  </message>
  <message>
    <ts>2017-07-11T06:05:57.402300</ts>
    <user>U3SJEDR96</user>
    <text>it's described in more detail here: &lt;https://dev.to/rtfeldman/tour-of-an-open-source-elm-spa&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T06:08:10.448182</ts>
    <user>U5QJW0DDE</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-11T06:10:13.489374</ts>
    <user>U5QJW0DDE</user>
    <text>i talked with &lt;@U0FP80EKB&gt; about this here last night quite a bit, so i look forward to some good explanations of how to better separate model structure from view structure without the pressure of passing global data everywhere or injecting child data dependencies into parent components</text>
  </message>
  <message>
    <ts>2017-07-11T06:14:40.575842</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U3SJEDR96&gt; inspecting Chrome's network console in the two apps appears to reveal the Elm version is querying for more information on clicks, so I guess that explains it</text>
  </message>
  <message>
    <ts>2017-07-11T06:16:54.619476</ts>
    <user>U5QJW0DDE</user>
    <text>&lt;@U3SJEDR96&gt; although, the total amount of data transferred during a session with each app and with the same click flow appears similar, so..</text>
  </message>
  <message>
    <ts>2017-07-11T06:17:00.621073</ts>
    <user>U3SJEDR96</user>
    <text>yeah, by "resources" I mean that each page has an `init` function that returns a task to fetch all the resources like JSON's and whatnot the page needs, so the elm version tries to prevent a flash of partial content by fetching those json's before doing the initial render of the next page, which should a complete render the first time around</text>
  </message>
  <message>
    <ts>2017-07-11T06:17:18.627050</ts>
    <user>U5QJW0DDE</user>
    <text>i see</text>
  </message>
  <message>
    <ts>2017-07-11T06:18:56.657159</ts>
    <user>U3SJEDR96</user>
    <text>so rather than rendering (and re-rendering) while data comes in, the elm version does that in two separate steps. Less snappy on fast connections, much nicer on slow connections - seeing a partial page while it's still fetching json data is not particularly nice.</text>
  </message>
  <message>
    <ts>2017-07-11T06:19:16.662982</ts>
    <user>U3SJEDR96</user>
    <text>so rather than optimizing only for fast connections, it tries to give a nice experience across the board</text>
  </message>
  <message>
    <ts>2017-07-11T06:19:39.669793</ts>
    <user>U3SJEDR96</user>
    <text>might not be optimal for some scenario's, but it was a design goal in this implementation :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-11T06:20:37.688045</ts>
    <user>U5QJW0DDE</user>
    <text>actually the re-frame version has an infinite scroll and continues to load new pages as you scroll down, so it's just a different design decision</text>
  </message>
  <message>
    <ts>2017-07-11T06:22:51.729499</ts>
    <user>U3SJEDR96</user>
    <text>with different trade-offs, indeed. That's kind of the thing, though - both solutions come with trade-offs, but those come as a result of design decisions rather than being anything inherent to the languages</text>
  </message>
  <message>
    <ts>2017-07-11T06:23:04.733679</ts>
    <user>U5QJW0DDE</user>
    <text>right, thanks for the explanation</text>
  </message>
  <message>
    <ts>2017-07-11T07:03:34.466103</ts>
    <user>U3LUC6SNS</user>
    <text>I just installed elm-tools/parser but get this error message in the repl:
```
&amp;gt; import Parser exposing (Parser, (|.), (|=), succeed, symbol, float, ignore, zeroOrMore)
elm-make: Map.!: given key is not an element in the map
```</text>
  </message>
  <message>
    <ts>2017-07-11T07:05:44.504224</ts>
    <user>U3SJEDR96</user>
    <text>might want to `rm -rf elm-stuff &amp;amp;&amp;amp; elm-package install --yes`</text>
  </message>
  <message>
    <ts>2017-07-11T07:29:36.924411</ts>
    <user>U663M2MB7</user>
    <text>I basically aliased that.</text>
  </message>
  <message>
    <ts>2017-07-11T07:35:06.020865</ts>
    <user>U3SJEDR96</user>
    <text>I've used that maybe three times :thinking_face: Installing everything through `elm-package install` rather than manually editing elm-package.json seems to prevent it from happening, most of the time</text>
  </message>
  <message>
    <ts>2017-07-11T07:43:37.171358</ts>
    <user>U663M2MB7</user>
    <text>As someone coming from a backend background, not familiar with anything web. Does this &lt;http://package.elm-lang.org/packages/elm-lang/svg/2.0.0/Svg&gt; expect me to know a lot about how browsers implement Svg?</text>
  </message>
  <message>
    <ts>2017-07-11T07:44:28.186673</ts>
    <user>U663M2MB7</user>
    <text>e.g. I created a line like so `line [ y1 xt, y2 xb, stroke "#FF0000 " ] []` - Curious about what `stroke` means, or where I can find it's definition,</text>
  </message>
  <message>
    <ts>2017-07-11T07:45:22.203567</ts>
    <user>U663M2MB7</user>
    <text>Is it perhaps a CSS property?</text>
  </message>
  <message>
    <ts>2017-07-11T07:47:25.240714</ts>
    <user>U3SJEDR96</user>
    <text>stroke is an svg property, &lt;https://www.w3schools.com/graphics/svg_stroking.asp&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T07:48:17.256073</ts>
    <user>U3SJEDR96</user>
    <text>and yeah, that package does assume knowledge of SVG, though this isn't a browser-specific thing; tools like inkscape or illustrator can also work with that format</text>
  </message>
  <message>
    <ts>2017-07-11T07:50:12.291416</ts>
    <user>U663M2MB7</user>
    <text>Nice, thank you. I felt a bit lost reading the package documentation.</text>
  </message>
  <message>
    <ts>2017-07-11T09:50:18.347966</ts>
    <user>U4J14E7F1</user>
    <text>Does anyone has any experience using Elm with some kind of cms API? I'm wondering how one would build front end in Elm without knowing the texts and titles in advance. Inject it through flags or request from Elm? </text>
  </message>
  <message>
    <ts>2017-07-11T10:02:04.767508</ts>
    <user>U4F64AKQV</user>
    <text>Using flags sounds like a reasonable idea.</text>
  </message>
  <message>
    <ts>2017-07-11T10:03:01.802226</ts>
    <user>U4F64AKQV</user>
    <text>Or if you have the raw data for the posts stored in some DB, you could potentially make a GET request with Http.</text>
  </message>
  <message>
    <ts>2017-07-11T10:03:26.817146</ts>
    <user>U2AHAPQUV</user>
    <text>you can look for examples with firebase or contentful. I just googled on packages, there seems to be a very simple/minimalistic CMS package: &lt;http://package.elm-lang.org/packages/peterszerzo/elm-cms/1.0.3&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T10:05:58.907800</ts>
    <user>U48AEBJQ3</user>
    <text>jxxcarlson: I prefer to write reusable view functions to take as little information as possible. I don't even like to think of it as a parent/child relationship most of the time. Instead, I think in terms of functions which take parameters.

'Container' elements shouldn't know how to construct their children beyond information that only they specifically know. The children should be built at or above the level where the container function is called. 

This has a flattening effect on the code where a function is taking data out of its arguments (e.g. the model) and using them to construct HTML elements. We can then rein-in complexity by exporting portions of this into functions.

I end up with functions that are each performing small steps of extracting data from a data structure and passing them onto other functions. Decisions are made at the last point all of the required information to make the decision is available. If something needs information from data structures on multiple levels, the higher data is either passed down via parameters, either directly, or by partially applying it to a function which is being passed.</text>
  </message>
  <message>
    <ts>2017-07-11T10:14:44.217266</ts>
    <user>U663M2MB7</user>
    <text>Can we set functions to `undefined` in the same way one can in Haskell, while composing functions?</text>
  </message>
  <message>
    <ts>2017-07-11T10:16:43.288230</ts>
    <user>U3SJEDR96</user>
    <text>`Debug.crash "todo"`</text>
  </message>
  <message>
    <ts>2017-07-11T10:17:18.309100</ts>
    <user>U1922CGQH</user>
    <text>In case the docs don't warn enough, I should stress that elm-cms is not quite flushed out on the security side (it requires the auth to happen outside of elm and creds be passed down in flags, and it doesn't react to changes). That said, if you poke around with it, &lt;@U2AHAPQUV&gt;, let me know, I'd love to hear some thoughts on it :).</text>
  </message>
  <message>
    <ts>2017-07-11T10:29:34.757777</ts>
    <user>U4J14E7F1</user>
    <text>
Flags: But wouldnt that make the app crash / not start properly if the data is corrupted (say its a bug in back end) without me getting the chance to handle it properly?

Http-request: one downside that comes to mind is that client has to wait for another request though the data was known already when app was sent. You wouldn't notice on a fast network of course.

Anyway, so there is no common server side way to inject text before app was sent?</text>
  </message>
  <message>
    <ts>2017-07-11T10:38:04.073839</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U4J14E7F1&gt; With flags and ports you can accept something as a `Json.Decode.Value` and then decode using `Json.Decode.decodeValue` to avoid crashing and handle errors.</text>
  </message>
  <message>
    <ts>2017-07-11T10:43:11.260460</ts>
    <user>U4J14E7F1</user>
    <text>&lt;@U48AEBJQ3&gt; Of course, thanks! </text>
  </message>
  <message>
    <ts>2017-07-11T10:51:47.584513</ts>
    <user>U5ABF3BH7</user>
    <text>Hello.  From my Elm records, I want to talk to the back end (Rails) to create/update objects. Are there any examples on that?</text>
  </message>
  <message>
    <ts>2017-07-11T10:57:40.812126</ts>
    <user>U5ABF3BH7</user>
    <text>I know how to get data with Http.get Http.send, but Post is not clear to me.</text>
  </message>
  <message>
    <ts>2017-07-11T11:02:35.008041</ts>
    <user>U4J14E7F1</user>
    <text>&lt;@U5ABF3BH7&gt;, its almost like get, you just pass the function a body (your parameters) too. Check out http-docs &lt;http://package.elm-lang.org/packages/evancz/elm-http/1.0.0/Http&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T11:02:41.011992</ts>
    <user>U2U94G0QG</user>
    <text>&lt;@U5ABF3BH7&gt; take a look at this article, do a search for 'createDocumentCmd : String -&amp;gt; Cmd Msg'
&lt;https://css-tricks.com/structure-elm-application/&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T11:02:54.020500</ts>
    <user>U2U94G0QG</user>
    <text>there is a nice clean example of building a POST</text>
  </message>
  <message>
    <ts>2017-07-11T11:03:08.029618</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U2U94G0QG&gt; Thanks a lot!</text>
  </message>
  <message>
    <ts>2017-07-11T11:03:54.059321</ts>
    <user>U2U94G0QG</user>
    <text>no prob! there's also elm-http-builder which people say good things about, but I've never used it so can't offer advice there beyond maybe look into that</text>
  </message>
  <message>
    <ts>2017-07-11T11:09:13.260291</ts>
    <user>U3SJEDR96</user>
    <text>knutandersstokke: Just so you know, that's an outdated package - `elm-lang/http/latest` is going to give better results :wink:</text>
  </message>
  <message>
    <ts>2017-07-11T11:16:55.553428</ts>
    <user>U4J14E7F1</user>
    <text>&lt;@U3SJEDR96&gt; That's right, I always end up on the wrong one :joy: It should have red background or something haha</text>
  </message>
  <message>
    <ts>2017-07-11T11:40:50.470216</ts>
    <user>U0FP80EKB</user>
    <text>I really like http builder, although it is important to understand the underlying http module, as well, since it relies on stuff there</text>
  </message>
  <message>
    <ts>2017-07-11T11:43:56.585711</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U0FP80EKB&gt; Do you have examples using the Http builder to post things?</text>
  </message>
  <message>
    <ts>2017-07-11T11:45:13.633932</ts>
    <user>U0FP80EKB</user>
    <text>There's an example in the README here &lt;https://github.com/lukewestby/elm-http-builder&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T11:45:48.655682</ts>
    <user>U0FP80EKB</user>
    <text>The key parts are the `withJsonBody` and `withExpect`, then you do `send` with the appropriate response handler</text>
  </message>
  <message>
    <ts>2017-07-11T11:46:50.695426</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U0FP80EKB&gt; Ok, I will look into it. thanks</text>
  </message>
  <message>
    <ts>2017-07-11T12:47:30.857527</ts>
    <user>U3HQVHERX</user>
    <text>It has a warning at the top. But it's in a calming blue color...</text>
  </message>
  <message>
    <ts>2017-07-11T13:01:46.343424</ts>
    <user>U3HQVHERX</user>
    <text>Also check out &lt;http://package.elm-lang.org/packages/krisajenkins/remotedata/latest&gt; if you want to easily show "loading" states in your view</text>
  </message>
  <message>
    <ts>2017-07-11T13:42:54.706928</ts>
    <user>U61JQ4F4J</user>
    <text>Hi! How do you recommend that I parse an arbitrary JSON payload, consisting of heterogeneous values and with undefined keys?</text>
  </message>
  <message>
    <ts>2017-07-11T13:43:22.722692</ts>
    <user>U23SA861Y</user>
    <text>if you don't know the data you a receiving, then it is useless to you</text>
  </message>
  <message>
    <ts>2017-07-11T13:44:09.748687</ts>
    <user>U23SA861Y</user>
    <text>There are some things you can do, but it is ultimately akin to runtime type reflection.</text>
  </message>
  <message>
    <ts>2017-07-11T13:44:30.760961</ts>
    <user>U64FYS317</user>
    <text>jonf, we can't really assume that. For instance, he could be building a json inspector. However, it would seem that that sort of use isn't really in line with the benefits of elm at all</text>
  </message>
  <message>
    <ts>2017-07-11T13:44:49.771649</ts>
    <user>U23SA861Y</user>
    <text>like I said, runtime type inspection</text>
  </message>
  <message>
    <ts>2017-07-11T13:45:16.786884</ts>
    <user>U23SA861Y</user>
    <text>when you start to go down that route you are effectively programming in json</text>
  </message>
  <message>
    <ts>2017-07-11T13:47:31.864864</ts>
    <user>U23SA861Y</user>
    <text>what are you doing with this json &lt;@U61JQ4F4J&gt; ?</text>
  </message>
  <message>
    <ts>2017-07-11T13:49:08.919575</ts>
    <user>U61JQ4F4J</user>
    <text>&lt;@U23SA861Y&gt; &lt;@U64FYS317&gt; it's an API response related to a file system directory listing... with the special case of actual JSON files, those are embedded in the response... for normal files I get its hash as value...</text>
  </message>
  <message>
    <ts>2017-07-11T13:49:24.928556</ts>
    <user>U61JQ4F4J</user>
    <text>the JSON files themselves can be anything</text>
  </message>
  <message>
    <ts>2017-07-11T13:49:47.941632</ts>
    <user>U61JQ4F4J</user>
    <text>I can't change the API behaviour since it's third party</text>
  </message>
  <message>
    <ts>2017-07-11T13:50:16.957901</ts>
    <user>U61JQ4F4J</user>
    <text>I want to display this listing as a file browser list layout</text>
  </message>
  <message>
    <ts>2017-07-11T13:50:25.963150</ts>
    <user>U61JQ4F4J</user>
    <text>with the ability to expand the JSON files</text>
  </message>
  <message>
    <ts>2017-07-11T13:50:33.967742</ts>
    <user>U4WH8STNX</user>
    <text>I'd suggest using a port, doing this in JS shouldn't be a problem</text>
  </message>
  <message>
    <ts>2017-07-11T13:50:39.971032</ts>
    <user>U23SA861Y</user>
    <text>if you don't need them, then just keep them as strings</text>
  </message>
  <message>
    <ts>2017-07-11T13:51:04.985698</ts>
    <user>U61JQ4F4J</user>
    <text>&lt;@U4WH8STNX&gt; that's what I thought actually, but didn't look clean to me...</text>
  </message>
  <message>
    <ts>2017-07-11T13:51:36.003359</ts>
    <user>U64FYS317</user>
    <text>hrm. I'm not familiar with elm's reflection module(s) as I'm quite new to elm myself. However, my first (probably naive) thought would be to create a large recursive union type that you could attempt to unmarshal into?</text>
  </message>
  <message>
    <ts>2017-07-11T13:51:55.014372</ts>
    <user>U64FYS317</user>
    <text>&lt;@U61JQ4F4J&gt; probably has the right of it there</text>
  </message>
  <message>
    <ts>2017-07-11T13:52:34.036847</ts>
    <user>U23SA861Y</user>
    <text>elm doesn't have a reflection model persay, you would have find a library or write it yourself</text>
  </message>
  <message>
    <ts>2017-07-11T13:53:07.055817</ts>
    <user>U3SJEDR96</user>
    <text>So write a generic JSON decoder?</text>
  </message>
  <message>
    <ts>2017-07-11T13:53:21.063779</ts>
    <user>U4WH8STNX</user>
    <text>The thing with the the *clean* part is that this sort of thing isn't really in the domain of Elm as a language - you'd have to work around every security measure in place that is there to protect you from the messy JS world. I would send the stuff through a port and normalize the data into something the Elm type system can handle and then push it back into the Elm world and be happy with it</text>
  </message>
  <message>
    <ts>2017-07-11T13:53:47.078857</ts>
    <user>U23SA861Y</user>
    <text>seriously, if they are just reading the generic files just keep them as values and don't parse them at all</text>
  </message>
  <message>
    <ts>2017-07-11T13:54:01.086855</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://ellie-app.com/3JyyCNNZrQga1/1&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T13:54:06.090108</ts>
    <user>U4WH8STNX</user>
    <text>or you could do what &lt;@U23SA861Y&gt; suggests :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-11T13:54:20.098447</ts>
    <user>U0RPQMZ9S</user>
    <text>I think &lt;@U64FYS317&gt;'s approach, big a big recursive union type representing JSON structure, is the most straightforward way to go</text>
  </message>
  <message>
    <ts>2017-07-11T13:54:54.117693</ts>
    <user>U61JQ4F4J</user>
    <text>&lt;@U4WH8STNX&gt; yeah, there's actually no way I could predict the adequate type for the payload values...</text>
  </message>
  <message>
    <ts>2017-07-11T13:55:00.121288</ts>
    <user>U3SJEDR96</user>
    <text>It's not even that big of a datastructure, really. And the `Other` type is just in case someone decides to throw a `function () {}` in there</text>
  </message>
  <message>
    <ts>2017-07-11T13:56:23.168997</ts>
    <user>U61JQ4F4J</user>
    <text>the recursive union type sounds like a good option though... I thought they wasn't supported in Elm though but I was just confused with records</text>
  </message>
  <message>
    <ts>2017-07-11T13:56:31.173923</ts>
    <user>U0RPQMZ9S</user>
    <text>something like this 
``` 
type JsonValue = Str String | Number Float| Boolean Bool | Arr (List JsonValue) | Object (Dict String JsonValue)
```</text>
  </message>
  <message>
    <ts>2017-07-11T13:56:49.184006</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U0RPQMZ9S&gt; click on that ellie a few lines up :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-11T13:57:40.213272</ts>
    <user>U0RPQMZ9S</user>
    <text>I just felt the urge to model the domain so strongly</text>
  </message>
  <message>
    <ts>2017-07-11T13:57:49.218468</ts>
    <user>U64FYS317</user>
    <text>:slightly_smiling_face: i know that feel</text>
  </message>
  <message>
    <ts>2017-07-11T13:57:58.223693</ts>
    <user>U64FYS317</user>
    <text>(I was writing one myself, albeit more slowly)</text>
  </message>
  <message>
    <ts>2017-07-11T13:58:22.238243</ts>
    <user>U3SJEDR96</user>
    <text>It's pretty straightforward to represent generic JSON in Elm, type-safely, and allows you to quite easily make a pretty UI for it, too.</text>
  </message>
  <message>
    <ts>2017-07-11T13:59:10.267225</ts>
    <user>U0RPQMZ9S</user>
    <text>this could easily be a pulled out into a library</text>
  </message>
  <message>
    <ts>2017-07-11T13:59:18.272140</ts>
    <user>U3SJEDR96</user>
    <text>So what I'd do, &lt;@U61JQ4F4J&gt;, is make a nice datastructure for your directory tree, `type FSTree = Directory String (List FSTree) | File String JSVal` and have a nice little decoder for it</text>
  </message>
  <message>
    <ts>2017-07-11T14:00:26.313672</ts>
    <user>U4WH8STNX</user>
    <text>&lt;@U3SJEDR96&gt;, never thought of that, good point. I wouldn't want to use something like this because it loses all domain meaning. JSON decoders might be tedius but I think this is a plus in the sense that it makes you think about the necessities in API design :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-11T14:01:25.348665</ts>
    <user>U3SJEDR96</user>
    <text>Arbitrary JSON *is* the domain. The idea would be to use that _within_ a semantic structure.</text>
  </message>
  <message>
    <ts>2017-07-11T14:01:25.348746</ts>
    <user>U0RPQMZ9S</user>
    <text>&lt;@U3SJEDR96&gt; while we're here, I'm curious why you included JSOther in there?</text>
  </message>
  <message>
    <ts>2017-07-11T14:01:33.353980</ts>
    <user>U0RPQMZ9S</user>
    <text>seems unnecessary</text>
  </message>
  <message>
    <ts>2017-07-11T14:01:54.366133</ts>
    <user>U3SJEDR96</user>
    <text>`app.ports.foo.send({"magic": function () {}})`</text>
  </message>
  <message>
    <ts>2017-07-11T14:02:09.375113</ts>
    <user>U3SJEDR96</user>
    <text>for JSON, it's redundant, yes</text>
  </message>
  <message>
    <ts>2017-07-11T14:02:16.379112</ts>
    <user>U3SJEDR96</user>
    <text>for JS values, less so :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-11T14:02:56.402547</ts>
    <user>U64FYS317</user>
    <text>In other news, I'm trying to modularize my application and have recently run into an issue with modular Msg subtypes &amp;amp; their corresponding update/view functions. Here's an example that I've made more generic/simpler for brevity, but it illustrates my issue. The question is, Can I more idiomatically cast a subtype into the parent type?
example: &lt;https://gist.github.com/owen-d/b727b9a1a5d4990ed947c6fa7056a92a&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T14:02:58.403698</ts>
    <user>U0RPQMZ9S</user>
    <text>I always forget you can tuck arbitrary JS away in a `Value`</text>
  </message>
  <message>
    <ts>2017-07-11T14:03:10.410552</ts>
    <user>U0RPQMZ9S</user>
    <text>which is probably a good thing haha</text>
  </message>
  <message>
    <ts>2017-07-11T14:03:58.438095</ts>
    <user>U3SJEDR96</user>
    <text>oh and don't try to use that decoder ^ on a JS Event. :sweat_smile:</text>
  </message>
  <message>
    <ts>2017-07-11T14:04:11.445841</ts>
    <user>U4WH8STNX</user>
    <text>&lt;@U3SJEDR96&gt; yes it is the domain in the OP case, I was trying to refer to my own code where JSON isn't the domain. You're totally right in this case</text>
  </message>
  <message>
    <ts>2017-07-11T14:04:56.472034</ts>
    <user>U3SJEDR96</user>
    <text>Oh, alright, gotcha. Shouldn't use that unless what you're trying to represent _is_ arbitrary JSON, indeed! Good point :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-11T14:04:59.473542</ts>
    <user>U4WH8STNX</user>
    <text>:smile: does it launch the rockets on JS events?</text>
  </message>
  <message>
    <ts>2017-07-11T14:05:10.480019</ts>
    <user>U61JQ4F4J</user>
    <text>ok I feel like I should try the type safe version first and keep the port as a fallback</text>
  </message>
  <message>
    <ts>2017-07-11T14:05:40.497501</ts>
    <user>U3SJEDR96</user>
    <text>events have domnodes tucked away in them, and you start to endlessly recurse quite fast :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-11T14:06:07.512587</ts>
    <user>U3SJEDR96</user>
    <text>(domnodes tend to be cyclic: child has a parent has children etc)</text>
  </message>
  <message>
    <ts>2017-07-11T14:06:37.529310</ts>
    <user>U4WH8STNX</user>
    <text>OMG I didn't consider that - my life is so much better thinking in Elm</text>
  </message>
  <message>
    <ts>2017-07-11T14:06:57.540433</ts>
    <user>U0RPQMZ9S</user>
    <text>&lt;@U64FYS317&gt; as kind of a first thing, I wouldn't think about it in terms of `casting`. You're ultimately creating values of the higher level `Msg` type, and one way to do so happens to be via the data constructor `LayoutMsg`, which is a function `SubMsg -&amp;gt; Msg`</text>
  </message>
  <message>
    <ts>2017-07-11T14:06:57.540981</ts>
    <user>U3SJEDR96</user>
    <text>life's nicer without cycles :smile:</text>
  </message>
  <message>
    <ts>2017-07-11T14:07:09.547418</ts>
    <user>U61JQ4F4J</user>
    <text>I kind of wonder why this isn't part of Json.Decode</text>
  </message>
  <message>
    <ts>2017-07-11T14:07:21.553510</ts>
    <user>U61JQ4F4J</user>
    <text>at least the union definition</text>
  </message>
  <message>
    <ts>2017-07-11T14:07:35.561414</ts>
    <user>U3SJEDR96</user>
    <text>It represents a very specific Domain, though - it's not terribly useful outside of that domain</text>
  </message>
  <message>
    <ts>2017-07-11T14:07:43.566161</ts>
    <user>U0RPQMZ9S</user>
    <text>but to more directly answer your question, if you have a chunk of `Html SubMsg`, and you want to get an `Html Msg`, `Html.map` is the way to go</text>
  </message>
  <message>
    <ts>2017-07-11T14:08:10.581097</ts>
    <user>U3SJEDR96</user>
    <text>I pondered including it in json-extra but decided against it</text>
  </message>
  <message>
    <ts>2017-07-11T14:08:29.591576</ts>
    <user>U3SJEDR96</user>
    <text>but if you have solid arguments for including it, feel absolutely free to open an issue and we'll talk about it :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-11T14:09:20.619655</ts>
    <user>U64FYS317</user>
    <text>&lt;@U0RPQMZ9S&gt; Thanks for linking html.map</text>
  </message>
  <message>
    <ts>2017-07-11T14:09:23.621494</ts>
    <user>U61JQ4F4J</user>
    <text>yeah my mindset is closer to Rust's serde's `Value` on this</text>
  </message>
  <message>
    <ts>2017-07-11T14:09:57.640368</ts>
    <user>U61JQ4F4J</user>
    <text>which is practically the above union type</text>
  </message>
  <message>
    <ts>2017-07-11T14:09:59.641725</ts>
    <user>U64FYS317</user>
    <text>i wonder what the cross pollination between elm &amp;amp; rust are.</text>
  </message>
  <message>
    <ts>2017-07-11T14:10:22.654058</ts>
    <user>U64FYS317</user>
    <text>clarification: in terms of userbase.</text>
  </message>
  <message>
    <ts>2017-07-11T14:10:56.673005</ts>
    <user>U0RPQMZ9S</user>
    <text>should also point out that doing the whole SubMsg, SubUpdate, SubView pattern is often overkill....... a lot of the time, the cleanest way to separate concerns is just with a few helper functions with narrowed down types</text>
  </message>
  <message>
    <ts>2017-07-11T14:11:30.691378</ts>
    <user>U64FYS317</user>
    <text>oh, thanks. Could you elaborate? Really looking for a clean way to extend my codebase</text>
  </message>
  <message>
    <ts>2017-07-11T14:12:01.708431</ts>
    <user>U0RPQMZ9S</user>
    <text>the recent elm europe talks by Evan and Richard go in to this in a good amount of detail, let me rustle up some links right quick</text>
  </message>
  <message>
    <ts>2017-07-11T14:12:30.723892</ts>
    <user>U64FYS317</user>
    <text>oh hell yeah, thanks a bunch</text>
  </message>
  <message>
    <ts>2017-07-11T14:13:14.748299</ts>
    <user>U0RPQMZ9S</user>
    <text>here's Richard's: &lt;https://www.youtube.com/watch?v=DoA4Txr4GUs&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T14:14:40.795463</ts>
    <user>U0RPQMZ9S</user>
    <text>looks like evan's isn't online yet, I only managed to catch it when the stream was still up</text>
  </message>
  <message>
    <ts>2017-07-11T14:15:04.809159</ts>
    <user>U681TBBUP</user>
    <text>Hey everyone! Where would be the correct spot to discuss tackling tickets in core?</text>
  </message>
  <message>
    <ts>2017-07-11T14:15:08.811446</ts>
    <user>U4WH8STNX</user>
    <text>they're probably still editing Evan's talk</text>
  </message>
  <message>
    <ts>2017-07-11T14:15:29.823105</ts>
    <user>U4WH8STNX</user>
    <text>&lt;@U681TBBUP&gt; define "tackling"</text>
  </message>
  <message>
    <ts>2017-07-11T14:16:59.873222</ts>
    <user>U4WH8STNX</user>
    <text>As far as I know issues on core libraries are Evan's realm right now</text>
  </message>
  <message>
    <ts>2017-07-11T14:17:06.877419</ts>
    <user>U4WH8STNX</user>
    <text>... and his only</text>
  </message>
  <message>
    <ts>2017-07-11T14:17:10.879027</ts>
    <user>U4WH8STNX</user>
    <text>:slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-11T14:17:34.893228</ts>
    <user>U681TBBUP</user>
    <text>So we wouldn't be taking in any prs there?</text>
  </message>
  <message>
    <ts>2017-07-11T14:18:04.909461</ts>
    <user>U3SJEDR96</user>
    <text>Depends. Can you expand a bit what you're thinking of?</text>
  </message>
  <message>
    <ts>2017-07-11T14:19:22.953460</ts>
    <user>U4WH8STNX</user>
    <text>&lt;https://www.youtube.com/watch?v=DSjbTC-hvqQ&gt; remember me of Evan's "Code is the easy part" video</text>
  </message>
  <message>
    <ts>2017-07-11T14:19:33.959411</ts>
    <user>U4WH8STNX</user>
    <text>...reminds...</text>
  </message>
  <message>
    <ts>2017-07-11T14:20:14.982204</ts>
    <user>U681TBBUP</user>
    <text>The issues within &lt;https://github.com/elm-lang/core/issues/721&gt; look like they would be good candidates for a first contribution</text>
  </message>
  <message>
    <ts>2017-07-11T14:21:31.025226</ts>
    <user>U3SJEDR96</user>
    <text>Right. The idea is certainly appreciated, but I'm afraid that it's not _really_ how work on Elm happens - it tends to be batched so a _single_ coherent solution to things can be found and implemented - where the implementation usually takes only a fraction of the time spent thinking, researching and coordinating things</text>
  </message>
  <message>
    <ts>2017-07-11T14:22:54.071178</ts>
    <user>U4WH8STNX</user>
    <text>The approach is strange at first but I think it really pays off well - other languages like JS grow/mutate where Elm shrinks in complexity</text>
  </message>
  <message>
    <ts>2017-07-11T14:22:59.073837</ts>
    <user>U3SJEDR96</user>
    <text>If you're thinking about contributing to Elm in a more structured way, I highly recommend having a look at &lt;https://github.com/elm-lang/projects/blob/master/README.md&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T14:25:15.149412</ts>
    <user>U681TBBUP</user>
    <text>&lt;@U3SJEDR96&gt; thanks for that link! I was looking in the wrong places for the usual contribution guide. And &lt;@U4WH8STNX&gt; yes I completely agree with that approach</text>
  </message>
  <message>
    <ts>2017-07-11T14:26:24.188404</ts>
    <user>U3SJEDR96</user>
    <text>It's all part of the "doing things right vs doing things right now" philosophy; and the long term goals of Elm. I sincerely hope this doesn't scare you off - we tend to be a very welcoming bunch. But jumping in and writing code is - contrary to how it happens in many other projects - not quite how things in Elm are done :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-11T14:27:05.211044</ts>
    <user>U3SJEDR96</user>
    <text>I'm happy you came here to ask actually - just making a PR, having it sit there for a few months and getting frustrated over the seemingly slow progress can be _extremely_ frustrating!</text>
  </message>
  <message>
    <ts>2017-07-11T14:29:55.308701</ts>
    <user>U4WH8STNX</user>
    <text>Right, I'm really excited to see what Elm 1.0 will eventually look like, although the bus-factor of 1 is kind of a risk :rainbow:</text>
  </message>
  <message>
    <ts>2017-07-11T14:33:24.429396</ts>
    <user>U64FYS317</user>
    <text>&lt;@U681TBBUP&gt; I'm glad you asked, too, as I wasn't aware of the process until &lt;@U3SJEDR96&gt; explained it</text>
  </message>
  <message>
    <ts>2017-07-11T14:37:03.553215</ts>
    <user>U681TBBUP</user>
    <text>Part of my motivation for peeking into the core repo was that I want to start using elm, but I need to also have some somewhat advanced graphics. Given the current ecosystem of javascript plotting/charting libraries D3 seemed like the right choice, but since Elm uses it's own virtual-dom implementation as of 0.17, I can no longer use hooks like described in this blog post (&lt;http://sgillis.github.io/posts/2016-03-25-highcharts-integration-in-elm.html&gt;). It looks like there is a data visualization project though (&lt;https://github.com/elm-lang/projects#data-visualization&gt;). Has there been any progress down this avenue?</text>
  </message>
  <message>
    <ts>2017-07-11T14:37:35.570117</ts>
    <user>U0JFGGZS6</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-11T14:37:39.572252</ts>
    <user>U681TBBUP</user>
    <text>&lt;@U64FYS317&gt; would there be any interest in making this process more documented for people coming in through a route similar to mine?</text>
  </message>
  <message>
    <ts>2017-07-11T14:38:25.598168</ts>
    <user>U64FYS317</user>
    <text>&lt;@U681TBBUP&gt; I haven't poked around the contribution docs at all, so I'm afraid I'd have a rather poor opinion on that. I'm flattered you asked, though</text>
  </message>
  <message>
    <ts>2017-07-11T14:38:39.605520</ts>
    <user>U0JFGGZS6</user>
    <text>&lt;https://github.com/gampleman/elm-visualization&gt;  is pretty much a port of D3, or at least the parts Elm needs (not the jquery-esque stuff)</text>
  </message>
  <message>
    <ts>2017-07-11T14:39:39.638584</ts>
    <user>U0JFGGZS6</user>
    <text>also for very common business plots there's &lt;https://github.com/terezka/elm-plot&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T14:40:23.663412</ts>
    <user>U681TBBUP</user>
    <text>&lt;@U0JFGGZS6&gt; oh awesome :slightly_smiling_face: my googling unfortunately yielded &lt;https://github.com/seliopou/elm-d3&gt; which appears to be dead</text>
  </message>
  <message>
    <ts>2017-07-11T14:40:56.682029</ts>
    <user>U0JFGGZS6</user>
    <text>doesn't have everything yet by any means, but the author has been adding stuff steadily</text>
  </message>
  <message>
    <ts>2017-07-11T14:41:04.687055</ts>
    <user>U0JFGGZS6</user>
    <text>recently added force-directed graphs for instance</text>
  </message>
  <message>
    <ts>2017-07-11T14:41:36.704386</ts>
    <user>U4WH8STNX</user>
    <text>&lt;@U681TBBUP&gt; Actually the projects link is supposed to be that better documentation of the contribution process, maybe you can file an issue there and make some suggestions?</text>
  </message>
  <message>
    <ts>2017-07-11T14:41:46.710019</ts>
    <user>U4WH8STNX</user>
    <text>I mean this one: &lt;https://github.com/elm-lang/projects/blob/master/README.md&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T14:42:16.726366</ts>
    <user>U0JFGGZS6</user>
    <text>he also gave a talk on it at the recent elm europe conf</text>
  </message>
  <message>
    <ts>2017-07-11T14:46:30.866314</ts>
    <user>U681TBBUP</user>
    <text>&lt;@U4WH8STNX&gt; yes that documentation of the process is great and my suggestions were not related to its contents but rather how a newcomer would go about finding it. The first thing I looked for was a `CONTRIBUTING.md` in the core repo as this is the way other langs (&lt;https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md&gt; , &lt;https://github.com/golang/go/blob/master/CONTRIBUTING.md&gt;) seem to do it. Granted that elm is structured differently but it might be easy to just redirect people to the projects repo</text>
  </message>
  <message>
    <ts>2017-07-11T14:47:52.910744</ts>
    <user>U4WH8STNX</user>
    <text>that would be a good suggestion, I'd like that</text>
  </message>
  <message>
    <ts>2017-07-11T14:51:33.033102</ts>
    <user>U4WH8STNX</user>
    <text>&lt;@U681TBBUP&gt; welcome to Elm, let's conquer the future</text>
  </message>
  <message>
    <ts>2017-07-11T14:54:40.135284</ts>
    <user>U681TBBUP</user>
    <text>:elm: I have certainly never been nearly as excited about writing a front end :grin:</text>
  </message>
  <message>
    <ts>2017-07-11T14:55:11.153169</ts>
    <user>U6602MZ9Q</user>
    <text>Hey there, I have a small question</text>
  </message>
  <message>
    <ts>2017-07-11T14:55:27.162181</ts>
    <user>U6602MZ9Q</user>
    <text>Is it possible to add an extensible record to another record?</text>
  </message>
  <message>
    <ts>2017-07-11T14:56:14.189258</ts>
    <user>U6602MZ9Q</user>
    <text>Something like
```
type Model = 
  {  MyOtherRecord r
      ... other things ...
  }
```</text>
  </message>
  <message>
    <ts>2017-07-11T14:57:42.237959</ts>
    <user>U0LPMPL2U</user>
    <text>You would write that as
```
type Model = { ... other things ... }
type alias Combo = MyOtherRecord Model
```</text>
  </message>
  <message>
    <ts>2017-07-11T14:58:11.254170</ts>
    <user>U6602MZ9Q</user>
    <text>Oh that's great thanks!</text>
  </message>
  <message>
    <ts>2017-07-11T15:01:21.360797</ts>
    <user>U4WH8STNX</user>
    <text>&lt;@U681TBBUP&gt; yes, it's not like when Angular became The Thing and the whole world would go nuts about it and I just didn't get it, same thing with your state of the art react/redux/immutablejs/reselect/webpack/... stack - I get almost all of that in Elm without the hassle and the brittle modelling and JS</text>
  </message>
  <message>
    <ts>2017-07-11T15:01:41.372123</ts>
    <user>U4WH8STNX</user>
    <text>well mostly without JS</text>
  </message>
  <message>
    <ts>2017-07-11T15:04:35.465663</ts>
    <user>U681TBBUP</user>
    <text>I'm particularly intrigued by how it fits together in real time application with something like phoenix on the back end. Since both techs are based on message passing (to some level), combining it with channels seems very powerful</text>
  </message>
  <message>
    <ts>2017-07-11T15:11:50.690501</ts>
    <user>U681TBBUP</user>
    <text>&lt;@U4WH8STNX&gt; would a pr adding the appropriate links to the projects repo be accepted?</text>
  </message>
  <message>
    <ts>2017-07-11T15:13:59.757616</ts>
    <user>U4WH8STNX</user>
    <text>That I can not vouch for :slightly_smiling_face:. Maybe have a quick PM with Evan about it. Seems like an instant win-win scenario to me</text>
  </message>
  <message>
    <ts>2017-07-11T15:17:01.852670</ts>
    <user>U4WH8STNX</user>
    <text>or just put it on the elm-dev group and see what the response is? &lt;https://groups.google.com/forum/#!forum/elm-dev&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T15:27:33.176396</ts>
    <user>U0J1M0F32</user>
    <text>&lt;@U681TBBUP&gt; &lt;#C0H8V5YM7|elm-with-elixir&gt; Is a room you could join and chat about elixir and elm together if you haven't already :smile:</text>
  </message>
  <message>
    <ts>2017-07-11T16:28:52.066805</ts>
    <user>U62BFCPPD</user>
    <text>Hi, trying to get npm run watch working as per this post &lt;https://maximilianhoffmann.com/posts/how-to-compile-elm-files-on-save&gt; but it keeps complaining it can't find elm (''elm' is not recognized as an internal or external command, operable program or batch file.)  If I just do the command (elm make game3.elm --output elm.compiled.js) from the command line it works fine.  Any help?</text>
  </message>
  <message>
    <ts>2017-07-11T16:37:17.329197</ts>
    <user>U5FC7BE0G</user>
    <text>Are you on Windows?</text>
  </message>
  <message>
    <ts>2017-07-11T17:31:39.903443</ts>
    <user>U5WS7CJLV</user>
    <text>I am looking at elm-decode-pipeline and the documentation includes an example that uses Json.Decode 3.0.0 wherein there exists a ":=" operator.  Or something.</text>
  </message>
  <message>
    <ts>2017-07-11T17:31:44.905796</ts>
    <user>U5WS7CJLV</user>
    <text>has := gone away?</text>
  </message>
  <message>
    <ts>2017-07-11T17:31:53.909493</ts>
    <user>U5WS7CJLV</user>
    <text>and what did it do exactly?</text>
  </message>
  <message>
    <ts>2017-07-11T17:32:03.913733</ts>
    <user>U5WS7CJLV</user>
    <text>I have tried using := in the repl and the repl doesn't like it</text>
  </message>
  <message>
    <ts>2017-07-11T17:32:16.919650</ts>
    <user>U1ZFF0E5P</user>
    <text>it's an old version</text>
  </message>
  <message>
    <ts>2017-07-11T17:32:44.931556</ts>
    <user>U5WS7CJLV</user>
    <text>yeah, 5.1.1 seems to be the current.  So := is no more?</text>
  </message>
  <message>
    <ts>2017-07-11T17:32:54.935823</ts>
    <user>U1ZFF0E5P</user>
    <text>no more</text>
  </message>
  <message>
    <ts>2017-07-11T17:33:17.945507</ts>
    <user>U1ZFF0E5P</user>
    <text>with elm 0.18 the direction is to not use custom operators (such as :=)</text>
  </message>
  <message>
    <ts>2017-07-11T17:33:25.948978</ts>
    <user>U5WS7CJLV</user>
    <text>for the best it seems</text>
  </message>
  <message>
    <ts>2017-07-11T17:33:42.956187</ts>
    <user>U5WS7CJLV</user>
    <text>hard to keep track of all the operators</text>
  </message>
  <message>
    <ts>2017-07-11T17:33:43.956473</ts>
    <user>U1ZFF0E5P</user>
    <text>they are hard to google for help, confusing, not descriptive...</text>
  </message>
  <message>
    <ts>2017-07-11T17:33:55.961239</ts>
    <user>U1ZFF0E5P</user>
    <text>yeah I'm with you!</text>
  </message>
  <message>
    <ts>2017-07-11T17:34:35.978169</ts>
    <user>U5WS7CJLV</user>
    <text>:fire: :allthethings:</text>
  </message>
  <message>
    <ts>2017-07-11T17:34:45.982338</ts>
    <user>U5WS7CJLV</user>
    <text>all the operator things anyways :smile:</text>
  </message>
  <message>
    <ts>2017-07-11T17:36:12.018788</ts>
    <user>U5WS7CJLV</user>
    <text>I guess the math operators can live...</text>
  </message>
  <message>
    <ts>2017-07-11T17:36:19.021965</ts>
    <user>U1ZFF0E5P</user>
    <text>the new version looks like this for reference (out of one of my projects) ```studentCourseDecoder : Decoder StudentCourse
studentCourseDecoder =
    decode StudentCourse
        |&amp;gt; required "id" Json.Decode.string
        |&amp;gt; required "startDate" (nullable date)
        |&amp;gt; required "endDate" (nullable date)
        |&amp;gt; required "signOffDate" (nullable date)
        |&amp;gt; required "comment" (nullable Json.Decode.string)
        |&amp;gt; required "studyReason" studyReasonDecoder
        |&amp;gt; optional "course" relationshipDecoder NotIncluded
        |&amp;gt; optional "courseDescriptor" maybeRelationshipDecoder NotIncluded
        |&amp;gt; optional "studentCourseClass" relationshipDecoder NotIncluded
        |&amp;gt; optional "studentCourseUnits" relationshipListDecoder NotIncluded
        |&amp;gt; optional "fundingScheme" relationshipDecoder NotIncluded
        |&amp;gt; optional "employer" maybeRelationshipDecoder NotIncluded
        |&amp;gt; optional "referralSource" maybeRelationshipDecoder NotIncluded
        |&amp;gt; optional "notifications" relationshipListDecoder NotIncluded
        |&amp;gt; optional "deliveryLocation" maybeRelationshipDecoder NotIncluded```</text>
  </message>
  <message>
    <ts>2017-07-11T17:37:11.043370</ts>
    <user>U5WS7CJLV</user>
    <text>you are using elm-decode-pipeline?</text>
  </message>
  <message>
    <ts>2017-07-11T17:37:19.046782</ts>
    <user>U1ZFF0E5P</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-11T17:37:32.052086</ts>
    <user>U5WS7CJLV</user>
    <text>cool - thanks!</text>
  </message>
  <message>
    <ts>2017-07-11T17:38:33.076592</ts>
    <user>U1ZFF0E5P</user>
    <text>this is from a project not using pipeline: ```connectionDecoder : Json.Decode.Decoder Connection
connectionDecoder =
    Json.Decode.map7 Connection
        (Json.Decode.field "server" serverDecoder)
        (Json.Decode.field "databases" databasesDecoder)
        (Json.Decode.field "driverName" Json.Decode.string)
        (Json.Decode.field "serverInfo" Json.Decode.string)
        (Json.Decode.field "clientInfo" Json.Decode.string)
        (Json.Decode.field "serverVersion" Json.Decode.string)
        (Json.Decode.field "connectionStatus" Json.Decode.string)```</text>
  </message>
  <message>
    <ts>2017-07-11T17:38:49.083351</ts>
    <user>U1ZFF0E5P</user>
    <text>as you can see I have to use `Json.Decode.map7`</text>
  </message>
  <message>
    <ts>2017-07-11T17:38:54.085302</ts>
    <user>U5WS7CJLV</user>
    <text>yep, that's what I been doing so far.  Because I am a n00b.</text>
  </message>
  <message>
    <ts>2017-07-11T17:39:06.090109</ts>
    <user>U1ZFF0E5P</user>
    <text>which is not ideal as it only goes up to `map8`</text>
  </message>
  <message>
    <ts>2017-07-11T17:39:36.102881</ts>
    <user>U1ZFF0E5P</user>
    <text>yeah definitely use pipeline, it's really nice :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-11T17:40:26.124113</ts>
    <user>U5WD40ZA9</user>
    <text>Anyone used keystonejs together with elm?</text>
  </message>
  <message>
    <ts>2017-07-11T17:53:27.436597</ts>
    <user>U1ZFF0E5P</user>
    <text>I havent personally, but in my experience the choice of backend doesnt really matter when using elm</text>
  </message>
  <message>
    <ts>2017-07-11T17:53:39.441203</ts>
    <user>U1ZFF0E5P</user>
    <text>everything has to go through elm decoders anyway</text>
  </message>
  <message>
    <ts>2017-07-11T17:55:39.487185</ts>
    <user>U2SR9DL7Q</user>
    <text>anyone else encounter an issue with fontawesome when setting up webpack in the elm tutorial?</text>
  </message>
  <message>
    <ts>2017-07-11T19:12:07.926353</ts>
    <user>U663M2MB7</user>
    <text>Are records immutable in Elm? I have been doing `(Model x y z)` for now, when updating the model. `{ model | x = y }` just feels so wrong to me. What am I missing? :confused:</text>
  </message>
  <message>
    <ts>2017-07-11T19:12:53.938568</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U663M2MB7&gt;

Good question, yes everything is immutable in Elm. When you do `{ model | x = y }` that's just a helpful **syntax** for creating a new record which is _like_ the old record but with a slight change.

To be clear, your `model` is left untouched after `{ model | x = y }`</text>
  </message>
  <message>
    <ts>2017-07-11T19:13:32.949181</ts>
    <user>U663M2MB7</user>
    <text>Right, so it is basically `(Model x y z)` with Elm taking care of the values that did not change, while I handle the changes?</text>
  </message>
  <message>
    <ts>2017-07-11T19:14:00.956405</ts>
    <user>U2GPAEU1L</user>
    <text>Absolutely :slightly_smiling_face: You could never use `{ | }` syntax your code would just be more verbose and less readable</text>
  </message>
  <message>
    <ts>2017-07-11T19:14:47.968995</ts>
    <user>U663M2MB7</user>
    <text>Nice, good to know, because manually creating a new model was becoming... tedious at best!</text>
  </message>
  <message>
    <ts>2017-07-11T19:17:57.018180</ts>
    <user>U663M2MB7</user>
    <text>Thank you for clearing that up, &lt;@U2GPAEU1L&gt; :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-11T19:18:12.021794</ts>
    <user>U2GPAEU1L</user>
    <text>No problem</text>
  </message>
  <message>
    <ts>2017-07-11T20:10:26.790331</ts>
    <user>U2GPAEU1L</user>
    <text>Hey everyone, *if you're struggling with encoders/decoders* I just created a series of tutorials that will go through *everything* you need to know about encoding/decoding in Elm. I'm not quite done the series but I already have a few tutorials covering the decode pipeline, decoding/encoding maybe types, decoding/encoding unions, and soon it'll have a few more things such as working with recursive data types: &lt;http://codetidbit.com/#view/story/58f7ac012bdce7111285c2ea&gt;

I'll be making *a lot* of Elm tutorials this next little while, so if you ever are confused with something and want a full tutorial to explain it, please ping me, I'd happily make a custom tutorial just for you, especially because a lot of things you struggle with a lot of other people likely struggle with as well! Don't be shy to ping me and ask for help or ask me to make a tutorial for you :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-11T20:11:40.807443</ts>
    <user>U2GPAEU1L</user>
    <text>Elm really is simple :slightly_smiling_face: And I'm happy to convince you of that by explaining _anything and everything_ you find not simple</text>
  </message>
  <message>
    <ts>2017-07-11T20:54:05.331116</ts>
    <user>U3LUC6SNS</user>
    <text>Hi all, I am trying to construct a parser using elm-tools/parser that will parse, among other things, text like
```
\begin{ENV} BODY \end{ENV}
```
where ENV and BODY are strings.  Here is my attempt so far.  It should be viewed as psedocode -- and is far from working.
```
type alias Environment =
    { env : String
    , body : String
    }


environment : Parser Environment
environment =
    succeed Environment
        |. symbol "\\"
        |. (keyword "begin")
        |. symbol "{"
        |= string
        |. symbol "}"
        |= string
        |. symbol "\\"
        |. (keyword "end")
        |. symbol "{"
        |= (keyword env)
        |. symbol "}
```
I'd be grateful for any tips/help/whatever, as I am just starting out.</text>
  </message>
  <message>
    <ts>2017-07-11T20:57:48.376586</ts>
    <user>U3LUC6SNS</user>
    <text>Of course there isn't  `string` parser, and here `env` as in `(keyword env)` means that we recognize the same string that was recognized in 
```
|. symbol "{"
|= string
|. symbol "}"
```</text>
  </message>
  <message>
    <ts>2017-07-11T21:00:44.415130</ts>
    <user>U3LUC6SNS</user>
    <text>By `string` parser, I mean that I want to recognize, for example, everything up to `symbol "}"`.</text>
  </message>
  <message>
    <ts>2017-07-11T21:01:30.424654</ts>
    <user>U3LUC6SNS</user>
    <text>In the second case, I want to recognize everything between `\begin{ENV}` and `\end{ENV}`</text>
  </message>
  <message>
    <ts>2017-07-11T21:20:04.647496</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U3LUC6SNS&gt; so you want `string` to mean, ‘one or more characters that aren't a "}"'</text>
  </message>
  <message>
    <ts>2017-07-11T21:21:14.661479</ts>
    <user>U153UK3FA</user>
    <text>is there any other limitation on what those characters can be?</text>
  </message>
  <message>
    <ts>2017-07-11T21:21:33.665201</ts>
    <user>U153UK3FA</user>
    <text>can they be white space?</text>
  </message>
  <message>
    <ts>2017-07-11T21:22:10.672099</ts>
    <user>U153UK3FA</user>
    <text>You're looking for &lt;http://package.elm-lang.org/packages/elm-tools/parser/2.0.1/Parser#keep&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T21:48:16.977059</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U153UK3FA&gt; -- yes one or more characters that are not "}" with whitespace allowed.</text>
  </message>
  <message>
    <ts>2017-07-11T22:11:51.243717</ts>
    <user>U1X5ZRJUX</user>
    <text>Hi there, I'm updating my app to 0.18 and I'm having issues with the new `Http.send` way of doing things without `Tasks`</text>
  </message>
  <message>
    <ts>2017-07-11T22:12:26.250369</ts>
    <user>U1X5ZRJUX</user>
    <text>I have the following update function with the `Msg` and a function passed to a `Http.send`</text>
  </message>
  <message>
    <ts>2017-07-11T22:12:31.251092</ts>
    <user>U1X5ZRJUX</user>
    <text>```
type Msg
    = FetchSucceed Model
    | FetchFail Http.Error


update : Msg -&amp;gt; Model -&amp;gt; ( Model, Cmd Msg )
update msg model =
    case msg of
        FetchSucceed bookmarks -&amp;gt;
            ( bookmarks, Cmd.none )

        FetchFail error -&amp;gt;
            ( model, Cmd.none )


processFetch : Result Http.Error Model -&amp;gt; Msg
processFetch result =
    case result of
        Ok bookmarks -&amp;gt;
            FetchSucceed bookmarks

        Err error -&amp;gt;
            FetchFail error
```</text>
  </message>
  <message>
    <ts>2017-07-11T22:12:57.256105</ts>
    <user>U1X5ZRJUX</user>
    <text>I understand I can now do without the `FetchFail` Msg but I'm not sure how</text>
  </message>
  <message>
    <ts>2017-07-11T22:15:17.281409</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U3LUC6SNS&gt; `|= keep oneOrMore \x -&amp;gt; x != '}'` should work</text>
  </message>
  <message>
    <ts>2017-07-11T22:15:31.283987</ts>
    <user>U1X5ZRJUX</user>
    <text>if I want to handle errors in my `processFetch` function I would have to have access to `model` in the function</text>
  </message>
  <message>
    <ts>2017-07-11T22:16:32.295296</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U1X5ZRJUX&gt; Look at the type definition for Http.send, `send : (Result Error a -&amp;gt; msg) -&amp;gt; Request a -&amp;gt; Cmd msg`</text>
  </message>
  <message>
    <ts>2017-07-11T22:16:57.299735</ts>
    <user>U153UK3FA</user>
    <text>`(Result Error a -&amp;gt; msg)` can be any function that produces any `Msg`</text>
  </message>
  <message>
    <ts>2017-07-11T22:17:58.310907</ts>
    <user>U153UK3FA</user>
    <text>the simplest way to do that is `type Msg = FeedResponse (Result Error String)`</text>
  </message>
  <message>
    <ts>2017-07-11T22:18:33.317177</ts>
    <user>U153UK3FA</user>
    <text>and just pass `FeedResponse` to http.send</text>
  </message>
  <message>
    <ts>2017-07-11T22:21:25.348072</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U153UK3FA&gt;, I think I am almost there.   I have this now:
```
type alias Environment =
    { env : String
    , body : String
    }


environment : Parser Environment
environment =
    succeed Environment
        |. symbol "\\"
        |. (keyword "begin")
        |. symbol "{"
        |= keep zeroOrMore (\c -&amp;gt; c /= '}')
        |. symbol "}"
        |= keep zeroOrMore (\c -&amp;gt; c /= '\\')
        |. symbol "\\"
        |. (keyword "end")
        |. symbol "{"
        |. keep zeroOrMore (\c -&amp;gt; c /= '}')
        |. symbol "}"
```
and I run
```
run XP.environment "\begin{foo}blah, blah\end{foo}"
```
but get the error 
```
-- SYNTAX PROBLEM -------------------------------------------- repl-temp-000.elm

(line 1, column 24): unexpected "e" expecting space, "&amp;amp;" or escape code

4|   run XP.environment "\begin{foo}blah, blah\end{foo}"
```
Do you see what I am doing wrong?</text>
  </message>
  <message>
    <ts>2017-07-11T22:21:27.348289</ts>
    <user>U601ELFEG</user>
    <text>is there a way to build the HTML doc for the modules that my project imports - and say have them somewhere inside `./elm-stuff` --- I'm going to be offline for a vacation, and want the library docs at hand</text>
  </message>
  <message>
    <ts>2017-07-11T22:22:07.355205</ts>
    <user>U1X5ZRJUX</user>
    <text>Thanks! &lt;@U153UK3FA&gt;  I'll give that a think</text>
  </message>
  <message>
    <ts>2017-07-11T22:23:09.366190</ts>
    <user>U601ELFEG</user>
    <text>in general, I'm wondering where documentation on how to use elm-make and elm-project live... the web site doesn't really point to anything</text>
  </message>
  <message>
    <ts>2017-07-11T22:28:47.427201</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U3LUC6SNS&gt; the ‘\' character in strings is used to escape the characters after it, eg "\"" is the way to make a string that has a `"` character, you'll need to do "\\begin{foo}blah, blah\\end{foo}"</text>
  </message>
  <message>
    <ts>2017-07-11T22:33:00.473002</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U153UK3FA&gt; Thanks - got it!  Works now.</text>
  </message>
  <message>
    <ts>2017-07-11T22:43:37.583231</ts>
    <user>U23SA861Y</user>
    <text>oh god, you're not trying to parse latex are you?</text>
  </message>
  <message>
    <ts>2017-07-11T22:47:07.618776</ts>
    <user>U1X5ZRJUX</user>
    <text>Stupid question now, just for the sake of trying, I have the following update function
```
type Msg
    = FeedResponse (Result Http.Error Model)


update : Msg -&amp;gt; Model -&amp;gt; ( Model, Cmd Msg )
update msg model =
    case msg of
        FeedResponse result -&amp;gt;
            processFetch(result)


processFetch : Model -&amp;gt; Result Http.Error Model -&amp;gt; ( Model, Cmd Msg )
processFetch model result =
    case result of
        Ok bookmarks -&amp;gt;
            ( bookmarks, Cmd.none )

        Err error -&amp;gt;
            ( model, Cmd.none )

```</text>
  </message>
  <message>
    <ts>2017-07-11T22:48:06.628941</ts>
    <user>U1X5ZRJUX</user>
    <text>the compiler doesn't like the `processFetch(result)`</text>
  </message>
  <message>
    <ts>2017-07-11T22:48:22.631682</ts>
    <user>U1X5ZRJUX</user>
    <text>```
The type annotation for `update` says it always returns:

    ( Model, Cmd Msg )

But the returned value (shown above) is a:

    Result Http.Error Model -&amp;gt; ( Model, Cmd Msg )
```</text>
  </message>
  <message>
    <ts>2017-07-11T22:48:42.635109</ts>
    <user>U23SA861Y</user>
    <text>well it should be `processFetch model result`</text>
  </message>
  <message>
    <ts>2017-07-11T22:48:58.637716</ts>
    <user>U4JT89FGB</user>
    <text>what is the rest of the error message? i think the hint should say it may be missing a parameter</text>
  </message>
  <message>
    <ts>2017-07-11T22:49:09.639603</ts>
    <user>U1X5ZRJUX</user>
    <text>meh stupid me</text>
  </message>
  <message>
    <ts>2017-07-11T22:49:28.642758</ts>
    <user>U4JT89FGB</user>
    <text>i try to outsmart the compiler error messages all the time and every time end up facepalming</text>
  </message>
  <message>
    <ts>2017-07-11T22:49:30.642994</ts>
    <user>U23SA861Y</user>
    <text>no brackets for function application</text>
  </message>
  <message>
    <ts>2017-07-11T22:49:38.644418</ts>
    <user>U1X5ZRJUX</user>
    <text>and yes the error message was telling me exactly this</text>
  </message>
  <message>
    <ts>2017-07-11T22:49:58.647716</ts>
    <user>U1X5ZRJUX</user>
    <text>&lt;@U4JT89FGB&gt; :facepalm:</text>
  </message>
  <message>
    <ts>2017-07-11T22:50:03.648692</ts>
    <user>U4JT89FGB</user>
    <text>:smile:</text>
  </message>
  <message>
    <ts>2017-07-11T22:50:04.648795</ts>
    <user>U1X5ZRJUX</user>
    <text>thanks guys</text>
  </message>
  <message>
    <ts>2017-07-11T22:50:11.650197</ts>
    <user>U1X5ZRJUX</user>
    <text>thanks peeps</text>
  </message>
  <message>
    <ts>2017-07-11T22:50:20.651745</ts>
    <user>U23SA861Y</user>
    <text>:bow: my pleasure</text>
  </message>
  <message>
    <ts>2017-07-11T22:55:11.704154</ts>
    <user>U1X5ZRJUX</user>
    <text>Interested by your opinion: my Model is a list of stuffs. In order to handle the loading delay of those stuff (and display an animation), I made my Model be a `Maybe (List Stuff)`, that way I can return a `Nothing` to my `init` function</text>
  </message>
  <message>
    <ts>2017-07-11T22:55:49.711165</ts>
    <user>U1X5ZRJUX</user>
    <text>then in the view I can deal with what to display depending on the `Nothing`, empty list or populated list</text>
  </message>
  <message>
    <ts>2017-07-11T22:55:51.711577</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U1X5ZRJUX&gt; Take a look at `RemoteData`. It is a nicer way to handle this situation</text>
  </message>
  <message>
    <ts>2017-07-11T22:56:00.713125</ts>
    <user>U23SA861Y</user>
    <text>going to suggest</text>
  </message>
  <message>
    <ts>2017-07-11T22:56:01.713479</ts>
    <user>U0FP80EKB</user>
    <text>&lt;http://package.elm-lang.org/packages/krisajenkins/remotedata/latest&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T22:56:22.717468</ts>
    <user>U0FP80EKB</user>
    <text>Here's a good post explaining it &lt;http://blog.jenkster.com/2016/06/how-elm-slays-a-ui-antipattern.html&gt;</text>
  </message>
  <message>
    <ts>2017-07-11T22:56:26.718018</ts>
    <user>U23SA861Y</user>
    <text>It's a little more descriptive of the possible states which unloaded data can be in</text>
  </message>
  <message>
    <ts>2017-07-11T22:56:42.720959</ts>
    <user>U1X5ZRJUX</user>
    <text>ah cool thanks, It's working ok and it's even more elegant compares to my previous solution, but I end up having to deal with `Maybe` values everywhere</text>
  </message>
  <message>
    <ts>2017-07-11T22:56:57.723820</ts>
    <user>U23SA861Y</user>
    <text>well maybe is alright</text>
  </message>
  <message>
    <ts>2017-07-11T22:57:05.725259</ts>
    <user>U0FP80EKB</user>
    <text>Yeah, that's no fun. It makes it confusing (to me) about whether it is loaded, or not, whether there was an error, etc.</text>
  </message>
  <message>
    <ts>2017-07-11T22:57:18.727635</ts>
    <user>U0FP80EKB</user>
    <text>I tend to not use `Maybe` hardly at all. It often masks what is going on.</text>
  </message>
  <message>
    <ts>2017-07-11T22:57:36.730895</ts>
    <user>U23SA861Y</user>
    <text>you will have to do the same with `RemoteData` but you need to leverage the functions available</text>
  </message>
  <message>
    <ts>2017-07-11T22:57:38.731252</ts>
    <user>U0FP80EKB</user>
    <text>I try to build more types that describe the situation, like `RemoteData`</text>
  </message>
  <message>
    <ts>2017-07-11T22:57:43.732073</ts>
    <user>U23SA861Y</user>
    <text>such as map and andThen</text>
  </message>
  <message>
    <ts>2017-07-11T22:57:56.734136</ts>
    <user>U26LR8F4H</user>
    <text>I'm trying to figure out how to chain a task.  I'm basically using this: &lt;https://github.com/rtfeldman/elm-spa-example/blob/master/src/Main.elm#L245&gt; and I can't seem to figure out how to add a Task.andThen (Dom.Scroll.toTop "body")</text>
  </message>
  <message>
    <ts>2017-07-11T22:58:11.737073</ts>
    <user>U1X5ZRJUX</user>
    <text>right, cool I'll give that a read then</text>
  </message>
  <message>
    <ts>2017-07-11T22:58:16.737896</ts>
    <user>U23SA861Y</user>
    <text>speaking of `andThen`</text>
  </message>
  <message>
    <ts>2017-07-11T23:00:02.756585</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U26LR8F4H&gt; `andThen : (a -&amp;gt; Task x b) -&amp;gt; Task x a -&amp;gt; Task x b` so you need to pass `andThen` a function that produces a Task</text>
  </message>
  <message>
    <ts>2017-07-11T23:00:27.761898</ts>
    <user>U153UK3FA</user>
    <text>`(Dom.Scroll.toTop "body")` isn't a function, it's a Task</text>
  </message>
  <message>
    <ts>2017-07-11T23:00:36.763811</ts>
    <user>U26LR8F4H</user>
    <text>```scrollToTop : Task x ()
scrollToTop =
    Dom.Scroll.toTop "body"
        |&amp;gt; Task.onError (\_ -&amp;gt; Task.succeed ())
```</text>
  </message>
  <message>
    <ts>2017-07-11T23:01:25.773205</ts>
    <user>U153UK3FA</user>
    <text>you want `Task.andThen \_-&amp;gt; Dom.Scroll.toTop "body"`</text>
  </message>
  <message>
    <ts>2017-07-11T23:01:36.775424</ts>
    <user>U23SA861Y</user>
    <text>is suspect you want to transistion the page `andThen` scroll to the top?</text>
  </message>
  <message>
    <ts>2017-07-11T23:02:40.786438</ts>
    <user>U26LR8F4H</user>
    <text>Yeah, basically make an http request for content and then scroll to the top once it's completed.</text>
  </message>
  <message>
    <ts>2017-07-11T23:03:21.793369</ts>
    <user>U23SA861Y</user>
    <text>in which case you probably want something more like
```
Task.andThen (\x -&amp;gt; Task.map (\_-&amp;gt; x) (Dom.Scroll.toTop "body"))
```</text>
  </message>
  <message>
    <ts>2017-07-11T23:03:59.799919</ts>
    <user>U23SA861Y</user>
    <text>or something of that ilk</text>
  </message>
  <message>
    <ts>2017-07-11T23:04:49.808383</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U26LR8F4H&gt; do you want to re-render before scrolling to the top?</text>
  </message>
  <message>
    <ts>2017-07-11T23:05:14.812576</ts>
    <user>U26LR8F4H</user>
    <text>that would be a nice touch :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-11T23:05:23.814073</ts>
    <user>U23SA861Y</user>
    <text>mm, also a good question. It might make sense to bounce through an update</text>
  </message>
  <message>
    <ts>2017-07-11T23:05:37.816517</ts>
    <user>U23SA861Y</user>
    <text>and just have a `Pageupdate` message</text>
  </message>
  <message>
    <ts>2017-07-11T23:05:42.817346</ts>
    <user>U23SA861Y</user>
    <text>which then issues a scroll</text>
  </message>
  <message>
    <ts>2017-07-11T23:09:03.850893</ts>
    <user>U26LR8F4H</user>
    <text>thanks, i think  i have some fiddling todo.</text>
  </message>
  <message>
    <ts>2017-07-11T23:10:00.860020</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U26LR8F4H&gt; if you want to re-render then you need to go through `update` which you can't do by chaining Tasks</text>
  </message>
  <message>
    <ts>2017-07-11T23:11:03.870991</ts>
    <user>U26LR8F4H</user>
    <text>So the first task issues an http request then the andThen will run before the update function is called?</text>
  </message>
  <message>
    <ts>2017-07-11T23:12:33.886906</ts>
    <user>U23SA861Y</user>
    <text>yes, when you chain with `andThen` the tasks are carried out in sequence behind the scene</text>
  </message>
  <message>
    <ts>2017-07-11T23:14:21.904368</ts>
    <user>U23SA861Y</user>
    <text>only dispatching a message when the chain is complete and returning early if any issues an error</text>
  </message>
  <message>
    <ts>2017-07-11T23:16:57.929655</ts>
    <user>U26LR8F4H</user>
    <text>hmm, in my update function the task doesn't seem to run ```            ( IndexLoaded (Ok index), _ ) -&amp;gt;
                ( { model | pageState = Loaded (Index index) }, Task.perform (\_ -&amp;gt; Noop) scrollToTop )
```</text>
  </message>
  <message>
    <ts>2017-07-11T23:17:23.933689</ts>
    <user>U26LR8F4H</user>
    <text>it runs when the first update i called though, i shoved a console.log in the native module to check it :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-11T23:17:54.938767</ts>
    <user>U23SA861Y</user>
    <text>it should be issued for every IndexLoaded message</text>
  </message>
  <message>
    <ts>2017-07-11T23:18:08.941049</ts>
    <user>U23SA861Y</user>
    <text>as you have written it there any who</text>
  </message>
  <message>
    <ts>2017-07-11T23:28:22.038770</ts>
    <user>U26LR8F4H</user>
    <text>well, if I use a port then all is well.  I'm not sure if this is an elm bug or my bug.  I'm going to guess it's mine somehow :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-11T23:30:08.055802</ts>
    <user>U23SA861Y</user>
    <text>I have yet to encounter an elm bug, short of a known compiler error</text>
  </message>
  <message>
    <ts>2017-07-11T23:32:04.075034</ts>
    <user>U26LR8F4H</user>
    <text>hmmm strange ```scrollToTop : Task x ()
scrollToTop =
    let
        _ =
            Debug.log "scrollToTop" "called"
    in
        Dom.Scroll.toTop "body"
            |&amp;gt; Task.onError (\_ -&amp;gt; Task.succeed ())
```</text>
  </message>
  <message>
    <ts>2017-07-11T23:32:17.077107</ts>
    <user>U26LR8F4H</user>
    <text>that is getting called even after i removed the task from the update</text>
  </message>
  <message>
    <ts>2017-07-11T23:36:07.113248</ts>
    <user>U23SA861Y</user>
    <text>yeah it would get called on load</text>
  </message>
  <message>
    <ts>2017-07-11T23:36:17.114827</ts>
    <user>U23SA861Y</user>
    <text>elm is eager</text>
  </message>
  <message>
    <ts>2017-07-11T23:36:36.117737</ts>
    <user>U23SA861Y</user>
    <text>so it will be called when the let is evaluated and thats when the program loads</text>
  </message>
  <message>
    <ts>2017-07-11T23:36:36.117741</ts>
    <user>U26LR8F4H</user>
    <text>oh, interesting</text>
  </message>
  <message>
    <ts>2017-07-11T23:36:56.120796</ts>
    <user>U23SA861Y</user>
    <text>scrollToTop is  a value not  a function</text>
  </message>
  <message>
    <ts>2017-07-11T23:37:10.122838</ts>
    <user>U23SA861Y</user>
    <text>it gets constructed on program start</text>
  </message>
  <message>
    <ts>2017-07-11T23:37:45.127925</ts>
    <user>U26LR8F4H</user>
    <text>well, that is super helpful to know, thank you.</text>
  </message>
  <message>
    <ts>2017-07-12T01:28:26.189883</ts>
    <user>U3SJEDR96</user>
    <text>This sounds remarkably close to what I did with elm-demystifyin-decoders :grin: excited to see what you come up with!</text>
  </message>
  <message>
    <ts>2017-07-12T02:50:42.177052</ts>
    <user>U623QK78C</user>
    <text>What is the best way map a `Maybe String` to the an attribute value of an input?</text>
  </message>
  <message>
    <ts>2017-07-12T02:51:01.181730</ts>
    <user>U623QK78C</user>
    <text>Currently I have: ```([ class "mdc-textfield__input"
                     , id "message-input"
                     , rows 2
                     , cols 40
                     , placeholder "Your message here..."
                     ]
                        ++ case message of
                            Just t -&amp;gt;
                                [ value t ]

                            Nothing -&amp;gt;
                                []
                    )```</text>
  </message>
  <message>
    <ts>2017-07-12T02:51:39.190600</ts>
    <user>U623QK78C</user>
    <text>But I was wondering if there was a better way.</text>
  </message>
  <message>
    <ts>2017-07-12T03:44:43.074097</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U623QK78C&gt; Are you trying to "get the string out of" a `Maybe String`?</text>
  </message>
  <message>
    <ts>2017-07-12T03:45:40.092018</ts>
    <user>U57KYFW67</user>
    <text>Ahhh I see. You are trying to embed your maybe into a list.... hmm</text>
  </message>
  <message>
    <ts>2017-07-12T03:46:58.116795</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U623QK78C&gt; This is the function you're looking for: &lt;http://package.elm-lang.org/packages/elm-community/maybe-extra/4.0.0/Maybe-Extra#toList&gt;</text>
  </message>
  <message>
    <ts>2017-07-12T03:47:27.126497</ts>
    <user>U57KYFW67</user>
    <text>It's in maybe-extra, though, so depending on how you feel about extra dependencies, what you have is completely sufficient.</text>
  </message>
  <message>
    <ts>2017-07-12T03:47:58.136531</ts>
    <user>U57KYFW67</user>
    <text>It might be worthwhile to float it into a `let` statement earlier in the code. That's what I like to do, at least, when I have an ugly `case` statement sitting in the middle of an expression.</text>
  </message>
  <message>
    <ts>2017-07-12T04:00:32.382461</ts>
    <user>U623QK78C</user>
    <text>Thanks, Maybe-extra.toList looks nice.</text>
  </message>
  <message>
    <ts>2017-07-12T04:31:09.010037</ts>
    <user>U158457NK</user>
    <text>is it possible to download a file using elm.http, a link wont do as I need to add an authorization header, but the resource, which is an xlsx file keeps being treated as data as opposed to downloading</text>
  </message>
  <message>
    <ts>2017-07-12T05:14:27.954399</ts>
    <user>U5P4FLYLE</user>
    <text>Hi all, with what would you replace Cmd.none in order to realize side effect that calls Linux command or invoke script and takes what is generated in stdout as String?</text>
  </message>
  <message>
    <ts>2017-07-12T05:15:43.982798</ts>
    <user>U3LUC6SNS</user>
    <text>`re: elm-tools/parser`  I now have several parsers, e.g. `macro1` for input like `\\foo{bar} `, `macro2` for `\\foo{bar}{baz} `, `environment` for `\\begin{ENV} BODY \\end{ENV}`.  I would like to combine them in a parser `latex` which looks at its input and tries each of the above parsers until it either succeeds or runs out of parses to try and then fails. 

I know there is some way to do this but couldn;t find it by reading the source and searching it for `combine`.</text>
  </message>
  <message>
    <ts>2017-07-12T05:16:10.992621</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5P4FLYLE&gt; I'd generally do that with two `port`s, with the actual side-effect happening on the JS side</text>
  </message>
  <message>
    <ts>2017-07-12T05:16:13.994001</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U3LUC6SNS&gt; `oneOf`</text>
  </message>
  <message>
    <ts>2017-07-12T05:16:28.999433</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt; Thanks!</text>
  </message>
  <message>
    <ts>2017-07-12T05:22:00.120497</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U158457NK&gt; I don't know if there's a great way to do that even in plain old JS with ajax. I think you _could_, potentially, download it as data and have it as a href for a link or something vaguely along those lines, but I'm not sure, to be honest</text>
  </message>
  <message>
    <ts>2017-07-12T05:28:12.255646</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, I am trying this:
```
type Latex
    = Macro1
    | Macro2
    | Environment


latex : Parser Latex
latex =
    oneOf
        [ Macro1
        , Macro2
        , Environment
        ]
```
but then get lots of error messages like
```
-- DUPLICATE DEFINITION -------------------------------------- ./src/XParser.elm

Naming multiple top-level values `Macro2` makes things ambiguous. When you say
`Macro2` which one do you want?

51|&amp;gt;type alias Macro2 =
52|&amp;gt;    { name : String
53|&amp;gt;    , arg1 : String
54|&amp;gt;    , arg2 : String
55|&amp;gt;    }
```</text>
  </message>
  <message>
    <ts>2017-07-12T05:37:43.461036</ts>
    <user>U1ZFF0E5P</user>
    <text>when you define a type alias, it also gives you a constructor for free. so with your type alias you can call `Macro2 "string1" "string2" "string3"` to build a record</text>
  </message>
  <message>
    <ts>2017-07-12T05:38:22.474378</ts>
    <user>U1ZFF0E5P</user>
    <text>when you define a union type, the "options" are also constructors to build the actual type</text>
  </message>
  <message>
    <ts>2017-07-12T05:38:39.480383</ts>
    <user>U1ZFF0E5P</user>
    <text>so you can't have a union type and a type constructor with the same name in the module</text>
  </message>
  <message>
    <ts>2017-07-12T05:39:32.499333</ts>
    <user>U1ZFF0E5P</user>
    <text>you can move one or the other to another module and call it with the whole name</text>
  </message>
  <message>
    <ts>2017-07-12T05:40:02.509741</ts>
    <user>U1ZFF0E5P</user>
    <text>&lt;@U3LUC6SNS&gt; ^</text>
  </message>
  <message>
    <ts>2017-07-12T05:41:13.535416</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U3LUC6SNS&gt; you'll need something like `oneOf [ parser1, parser2, parser3 ]`, so in your case `oneOf [ macro1, macro2, environment ]` etc</text>
  </message>
  <message>
    <ts>2017-07-12T05:41:45.546404</ts>
    <user>U3LUC6SNS</user>
    <text>Thanks &lt;@U3SJEDR96&gt;, thanks &lt;@U1ZFF0E5P&gt; !</text>
  </message>
  <message>
    <ts>2017-07-12T05:42:13.556148</ts>
    <user>U3SJEDR96</user>
    <text>assuming that `macro1 : Parser Latex` etc</text>
  </message>
  <message>
    <ts>2017-07-12T05:47:03.658442</ts>
    <user>U3LUC6SNS</user>
    <text>Got it!</text>
  </message>
  <message>
    <ts>2017-07-12T05:50:58.741073</ts>
    <user>U3LUC6SNS</user>
    <text>Oops, I guess I don't understand --  if I define `type Latex` in a module A importing the module B where `Macro1` etc  are defined, then the `Latex` will be undefined  in module B.  No?</text>
  </message>
  <message>
    <ts>2017-07-12T06:03:21.005679</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U3LUC6SNS&gt; oh, alright, so you have a `macro1 : Parser Macro1`, and you'd like to create a union type `Latex` and a `latex : Parser Latex`?
```
module Parsers.Macro exposing (Macro1, macro1)

type alias Macro1 = {...}
macro1 : Parser Mactor1
macro1 = ...

---

module Parsers.Latex exposing (..)
import Parsers.Macro exposing (Macro1, macro1)
import Parser exposing (Parser, map, oneOf)

type Latex = M1 Macro1 | M2 Macro2 | Env Environment

latex : Parser Latex
latex =
  oneOf [ map M1 macro1, map M2 macro2, map Env environment ]
```
```</text>
  </message>
  <message>
    <ts>2017-07-12T06:03:24.006567</ts>
    <user>U3SJEDR96</user>
    <text>something like that</text>
  </message>
  <message>
    <ts>2017-07-12T06:19:30.322586</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, that works just great.  I want to think about your use of `M1`, `map M1` etc. so as to understand it .. may be back with some questions after I have done my homework</text>
  </message>
  <message>
    <ts>2017-07-12T06:20:24.339707</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, they're not the best names, to be honest. The thing is you need a way to distinguish between the tag for the union type, and the actual data-definition</text>
  </message>
  <message>
    <ts>2017-07-12T06:21:51.367421</ts>
    <user>U3SJEDR96</user>
    <text>as for `map` that's basically just "wrapping" it in that tag - much like you do with decoders, url-parsers, etc. `map : (a -&amp;gt; b) -&amp;gt; Parser a -&amp;gt; Parser b`</text>
  </message>
  <message>
    <ts>2017-07-12T06:24:37.419173</ts>
    <user>U3LUC6SNS</user>
    <text>That makes sense ... I can fiddle with the names so that they look good in the final output.</text>
  </message>
  <message>
    <ts>2017-07-12T06:42:44.751090</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, there is still a problem with `oneOf` -- see session below.  Would you mind taking a look when you have the chance?

The code is at &lt;https://github.com/jxxcarlson/koko_elm_client/blob/master/src/LatexParser/Parser.elm&gt;

```
&amp;gt; import LatexParser.Latex
&amp;gt; import LatexParser.Latex exposing(..)
&amp;gt; import LatexParser.Parser exposing(..)
&amp;gt; import Parser exposing(run)

&amp;gt; run latex "\\foo{bar} "
Ok (Macro1 { name = "foo", arg = "bar" })
    : Result.Result Parser.Error LatexParser.Parser.Latex

&amp;gt; run latex "\\foo{bar}{baz} "
Err { row = 1, col = 10, source = "\\foo{bar}{baz} ", problem = BadRepeat, context = [] }
    : Result.Result Parser.Error LatexParser.Parser.Latex

&amp;gt; run latex "\\begin{foo}Blah, blah!\\end{foo} "
Err { row = 1, col = 12, source = "\\begin{foo}Blah, blah!\\end{foo} ", problem = BadRepeat, context = [] }
    : Result.Result Parser.Error LatexParser.Parser.Latex
```</text>
  </message>
  <message>
    <ts>2017-07-12T06:47:00.827802</ts>
    <user>U3SJEDR96</user>
    <text>(you can use `inContext "macro1" &amp;lt;| succeed Macro1 |= something |. something else` to add contextual information to your parsers, btw)</text>
  </message>
  <message>
    <ts>2017-07-12T06:47:24.835131</ts>
    <user>U3SJEDR96</user>
    <text>so error messages allow you to track how and where things went wrong</text>
  </message>
  <message>
    <ts>2017-07-12T06:47:27.835931</ts>
    <user>U3LUC6SNS</user>
    <text>Ah .. to have good error messages?</text>
  </message>
  <message>
    <ts>2017-07-12T06:47:33.837672</ts>
    <user>U3LUC6SNS</user>
    <text>Yay!</text>
  </message>
  <message>
    <ts>2017-07-12T06:50:23.888435</ts>
    <user>U3SJEDR96</user>
    <text>my guess it's committing to stuff before bailing out. You'd need to delay that commit - &lt;https://github.com/elm-tools/parser/blob/master/README.md#delayed-commits&gt;</text>
  </message>
  <message>
    <ts>2017-07-12T06:53:03.936026</ts>
    <user>U3LUC6SNS</user>
    <text>That sounds right and is consistent with the information given about the column of the error.  I'll read up on delayed commits.  Thanks!</text>
  </message>
  <message>
    <ts>2017-07-12T06:58:13.029129</ts>
    <user>U3LUC6SNS</user>
    <text>And using context to provide better error messages I can confirm that premature commit is the problem.</text>
  </message>
  <message>
    <ts>2017-07-12T07:00:18.067278</ts>
    <user>U3SJEDR96</user>
    <text>in your case, on those statements, you could consider using something like mentioned here: &lt;https://github.com/elm-tools/parser/blob/2f9c3370fe82211b5b4a37166f795face6801326/comparison.md#expressiveness&gt;</text>
  </message>
  <message>
    <ts>2017-07-12T07:10:47.252598</ts>
    <user>U3CUFAX4H</user>
    <text>Is there a package for generating the ordinal value of a char? (like ruby's String::ord method)</text>
  </message>
  <message>
    <ts>2017-07-12T07:11:10.259470</ts>
    <user>U3CUFAX4H</user>
    <text>elm-ordinal just gives the th/st/nd suffix</text>
  </message>
  <message>
    <ts>2017-07-12T07:12:38.284775</ts>
    <user>U3CUFAX4H</user>
    <text>elm-char-codepoint does almost the correct thing.</text>
  </message>
  <message>
    <ts>2017-07-12T07:12:48.287991</ts>
    <user>U3SJEDR96</user>
    <text>`Char.toCode`</text>
  </message>
  <message>
    <ts>2017-07-12T07:13:36.301511</ts>
    <user>U3CUFAX4H</user>
    <text>keyCodes are three digit?</text>
  </message>
  <message>
    <ts>2017-07-12T07:14:32.317708</ts>
    <user>U3CUFAX4H</user>
    <text>no, but neither are ordinals</text>
  </message>
  <message>
    <ts>2017-07-12T07:14:46.321886</ts>
    <user>U3SJEDR96</user>
    <text>I'm a little unsure what you're really after, tbh</text>
  </message>
  <message>
    <ts>2017-07-12T07:14:59.325368</ts>
    <user>U3CUFAX4H</user>
    <text>will test, thanks &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-12T07:15:10.328764</ts>
    <user>U3CUFAX4H</user>
    <text>I'll give it a test and get back to you</text>
  </message>
  <message>
    <ts>2017-07-12T07:15:15.330035</ts>
    <user>U3SJEDR96</user>
    <text>`toCode` gives the UTF-16 code unit as a decimal</text>
  </message>
  <message>
    <ts>2017-07-12T07:15:38.337649</ts>
    <user>U3CUFAX4H</user>
    <text>I need a replicatable key in elm and in rails so that I don't have top pass keys around</text>
  </message>
  <message>
    <ts>2017-07-12T07:15:51.341902</ts>
    <user>U3CUFAX4H</user>
    <text>perfect</text>
  </message>
  <message>
    <ts>2017-07-12T07:16:03.345477</ts>
    <user>U3SJEDR96</user>
    <text>`elm-char-codepoint` gives that as a utf-32 decimal, basically</text>
  </message>
  <message>
    <ts>2017-07-12T07:17:12.365652</ts>
    <user>U3SJEDR96</user>
    <text>(oddly, I just implemented `utf-16 &amp;lt;-&amp;gt; utf-8` which involves a side-step through utf-32. In elm. It was painful.)</text>
  </message>
  <message>
    <ts>2017-07-12T07:17:24.369326</ts>
    <user>U3CUFAX4H</user>
    <text>your pointer is perfect for my use, thank you. I wasn't aware the keyCodes were exactly the same operation that I was looking for.</text>
  </message>
  <message>
    <ts>2017-07-12T07:20:39.424074</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, Yes, `delayedCommit` works quite nicely!  Thanks again.</text>
  </message>
  <message>
    <ts>2017-07-12T08:07:51.275065</ts>
    <user>U5P4FLYLE</user>
    <text>Hi, I have two components: innerCard and outerCard. In outerCard I have:
```
type Msg = InnerCardMsg InnerCard.Msg
| SomeMsg```
And I call in outerCard :
``` somefunctionToHtml outerCard
      |&amp;gt; Html.map InnerCardMsg```
The problem: innerCard has of course its own events, but outerCard has one represented by SomeMsg. If I delegate through `somefunctionToHtml` I have compile error that I am expecting Html InnerCard.Msg but received Html Msg (from outerCard). How to solve this kind of problem?
Ie. Allow within innerCard not only eject its own InnerCard.Msg messages but also the ones from outerCard?</text>
  </message>
  <message>
    <ts>2017-07-12T08:10:00.318398</ts>
    <user>U3LUC6SNS</user>
    <text>re Parsing again.  I currently have
```
type alias ARG =
    { value : String }


arg : Parser ARG
arg =
    succeed ARG
        |. symbol "{"
        |= keep zeroOrMore (\c -&amp;gt; c /= '}')
        |. symbol "}"
```
I'd prefer to have 
```
type alias ARG = String
```
However, this gives an error:
```
-- NAMING ERROR ------------------------------------ ./src/LatexParser/Latex.elm
Cannot find variable `ARG`
87|     succeed ARG
```
Is there a way to have `String`?</text>
  </message>
  <message>
    <ts>2017-07-12T08:12:28.369297</ts>
    <user>U3SJEDR96</user>
    <text>You lose the constructor function when not using a record</text>
  </message>
  <message>
    <ts>2017-07-12T08:12:32.370588</ts>
    <user>U3SJEDR96</user>
    <text>however, you sure can</text>
  </message>
  <message>
    <ts>2017-07-12T08:12:37.372353</ts>
    <user>U3SJEDR96</user>
    <text>`succeed identity`</text>
  </message>
  <message>
    <ts>2017-07-12T08:13:25.388457</ts>
    <user>U3SJEDR96</user>
    <text>i.e. `Arg` is a `String -&amp;gt; Arg` function, and you'd rather have a `String -&amp;gt; String` function so you end up with a `String`</text>
  </message>
  <message>
    <ts>2017-07-12T08:13:32.390479</ts>
    <user>U3SJEDR96</user>
    <text>`identity` fits the bill :wink:</text>
  </message>
  <message>
    <ts>2017-07-12T08:17:36.474675</ts>
    <user>U663M2MB7</user>
    <text>is there any syntax for { model | x = y } with nested models? I guess the Focus library is one, but is there anything I am missing here?</text>
  </message>
  <message>
    <ts>2017-07-12T08:19:02.504184</ts>
    <user>U0JL9RPC4</user>
    <text>I'm afraid not</text>
  </message>
  <message>
    <ts>2017-07-12T08:25:31.638789</ts>
    <user>U0FP80EKB</user>
    <text>I've generally found that when I need to update nested models, I'm looking at some sort of abstraction that wants to come out with some helper functions around it. Not always, but a good indication. In a way, you can look at updating nested records as a good time to think about how the law of demeter applies in your case.</text>
  </message>
  <message>
    <ts>2017-07-12T08:33:28.816478</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, thanks again!  Got it working like I want with `identity`</text>
  </message>
  <message>
    <ts>2017-07-12T08:41:32.002890</ts>
    <user>U663M2MB7</user>
    <text>Okay, thank you guys. So nesting is not a recommended representation of data in Elm?</text>
  </message>
  <message>
    <ts>2017-07-12T09:08:17.709186</ts>
    <user>U0CLDU8UB</user>
    <text>Nested records are fine as long as the data isn't updated often.</text>
  </message>
  <message>
    <ts>2017-07-12T09:10:31.771369</ts>
    <user>U0CLDU8UB</user>
    <text>When you do want to update a nested record, it's nice to make that into a function: `{ model | favoriteCat = updateCat "meow" model.favoriteCat }`</text>
  </message>
  <message>
    <ts>2017-07-12T09:44:43.839802</ts>
    <user>U663M2MB7</user>
    <text>Right, this is data that is updated pretty much constantly though.</text>
  </message>
  <message>
    <ts>2017-07-12T09:45:38.871509</ts>
    <user>U663M2MB7</user>
    <text>But only certain parts of it, so I guess a function that updates the stuff I want to update, makes sense</text>
  </message>
  <message>
    <ts>2017-07-12T09:50:19.031672</ts>
    <user>U604S603Y</user>
    <text>are different cases of a discriminated union interchangeable, like base class and derived class in OOP?</text>
  </message>
  <message>
    <ts>2017-07-12T09:52:22.102680</ts>
    <user>U604S603Y</user>
    <text>I'm trying to have only one field in the top-level model of my SPA which then "contains" the page data of the currently active page. So I tried making a DU with all the different page data types I have, one case for every page. But then I have problems calling the different pages' update functions, because they expect the correct data and not the top-level DU</text>
  </message>
  <message>
    <ts>2017-07-12T09:53:01.125478</ts>
    <user>U604S603Y</user>
    <text>Then I tried pattern matching on the DU and only calling the update function when the case is the right one - but that results in problems with the overall return value of the top-level update function branch</text>
  </message>
  <message>
    <ts>2017-07-12T09:53:24.138562</ts>
    <user>U3SJEDR96</user>
    <text>you'd need to "rewrap" that return value with the correct tag</text>
  </message>
  <message>
    <ts>2017-07-12T09:54:29.177252</ts>
    <user>U3SJEDR96</user>
    <text>```
LoginModel model -&amp;gt;
  (Login.update model msg) |&amp;gt; Tuple.mapFirst LoginModel |&amp;gt; Tuple.mapSecond (Cmd.map LoginMsg)
```</text>
  </message>
  <message>
    <ts>2017-07-12T09:54:34.179814</ts>
    <user>U3SJEDR96</user>
    <text>or something along those lines</text>
  </message>
  <message>
    <ts>2017-07-12T10:00:12.384084</ts>
    <user>U604S603Y</user>
    <text>now there's only one error left.
The code is:
``` SchnellcheckMsgs msg -&amp;gt;
            let
                ( schnellcheckViewModel, cmd ) =
                    case model.subpageData of
                        SchnellcheckModel sm -&amp;gt;
                            (Schnellcheck.Update.update msg sm)
                                |&amp;gt; Tuple.mapFirst SchnellcheckModel
                                |&amp;gt; Tuple.mapSecond (Cmd.map SchnellcheckMsgs)

                        _ -&amp;gt;
                            ( None, Cmd.map SchnellcheckMsgs Schnellcheck.Types.NoOp )
            in
                ( { model | subpageData = schnellcheckViewModel }
                , Cmd.map SchnellcheckMsgs cmd
                )```
where `None` is a case of the DU stored in `model.subpageData` and `NoOp` is a case of the same Message DU stored in `SchnellcheckMsgs`.
The error is in the `( None, Cmd.map SchnellcheckMsgs Schnellcheck.Types.NoOp )` line: 
```The 2nd argument to function `map` is causing a mismatch. - Function `map` is expecting the 2nd argument to be:

    Cmd Schnellcheck.Types.SchnellcheckMsg

But it is:

    Schnellcheck.Types.SchnellcheckMsg```</text>
  </message>
  <message>
    <ts>2017-07-12T10:00:58.413751</ts>
    <user>U604S603Y</user>
    <text>the code resides in the top-level update function in my Main.elm</text>
  </message>
  <message>
    <ts>2017-07-12T10:02:39.476362</ts>
    <user>U3SJEDR96</user>
    <text>How about `Cmd.none` instead? :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-12T10:05:31.582263</ts>
    <user>U604S603Y</user>
    <text>BLACK MAGIC</text>
  </message>
  <message>
    <ts>2017-07-12T10:05:52.595547</ts>
    <user>U604S603Y</user>
    <text>it's working now! thanks &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-12T10:28:52.438544</ts>
    <user>U62PV9CPN</user>
    <text>in elm-html is there a way to get the `&amp;lt;em&amp;gt;` tag to evaluate in this example:

```
span [] [ text "Some &amp;lt;em&amp;gt;emphasized&amp;lt;/em&amp;gt; text" ]
```</text>
  </message>
  <message>
    <ts>2017-07-12T10:35:44.702455</ts>
    <user>U3SJEDR96</user>
    <text>The proper way would be `span [] [ em [] [ text "emphasized" ] ]`</text>
  </message>
  <message>
    <ts>2017-07-12T10:36:16.722306</ts>
    <user>U3SJEDR96</user>
    <text>2 workarounds exists; using elm-markdown on the string or using an unsafe hack</text>
  </message>
  <message>
    <ts>2017-07-12T10:38:13.795831</ts>
    <user>U180KMGRE</user>
    <text>```
span 
    [] 
    [ text "some "
    , em [] [ text "emphasized" ]
    , text " text"
    ] 
```</text>
  </message>
  <message>
    <ts>2017-07-12T10:39:10.831020</ts>
    <user>U180KMGRE</user>
    <text>unsafe hack way: 
```
span [ property "innerHTML" (string "Some &amp;lt;em&amp;gt;emphasized&amp;lt;/em&amp;gt; text") ] []
```</text>
  </message>
  <message>
    <ts>2017-07-12T10:39:27.841965</ts>
    <user>U180KMGRE</user>
    <text>Where `string` is `Json.Encode.string`</text>
  </message>
  <message>
    <ts>2017-07-12T11:02:07.730673</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, another parser question.  I keep getting parser errors from the code below, the purpose of which is to parse a sequence of words into a list of strings.  Should be really easy ... ahem ...  Below there is (1) code, (2) error message.

```
word : Parser String
word =
    inContext "word" &amp;lt;|
        succeed identity
            |. spaces
            |= keep zeroOrMore (\c -&amp;gt; c /= ' ' || c /= '\n' || c /= '\\')


type alias Words =
    { value : List String
    }


words : Parser Words
words =
    inContext "words" &amp;lt;|
        succeed Words
            |. spaces
            |= repeat oneOrMore word
            |. symbol "\n"
```
The error message:

```
&amp;gt; run words "a b \n"
Err { row = 2, col = 1, source = "a b \n", problem = BadRepeat, context = [{ row = 1, col = 1, description = "words" }] }
    : Result.Result Parser.Error LatexParser.Latex.Words
```</text>
  </message>
  <message>
    <ts>2017-07-12T11:04:18.816945</ts>
    <user>U3SJEDR96</user>
    <text>how is `spaces` defined?</text>
  </message>
  <message>
    <ts>2017-07-12T11:05:35.868222</ts>
    <user>U0J1M0F32</user>
    <text>Shouldn't that be `"a b \\n"` :thinking_face: err. I mean. This seems like an escaping issue?</text>
  </message>
  <message>
    <ts>2017-07-12T11:06:20.896646</ts>
    <user>U3SJEDR96</user>
    <text>no, `\n` can be used like that</text>
  </message>
  <message>
    <ts>2017-07-12T11:06:54.918819</ts>
    <user>U3SJEDR96</user>
    <text>my guess is that `spaces` also is a `zeroOrMore`; which means `word` would _always_  match, and since it's ina repeat, it would keep on going without progressing</text>
  </message>
  <message>
    <ts>2017-07-12T11:06:57.921022</ts>
    <user>U3SJEDR96</user>
    <text>hence, a badrepeat</text>
  </message>
  <message>
    <ts>2017-07-12T11:11:16.085596</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, that (keep on going) sounds right.  I will give it more thought.</text>
  </message>
  <message>
    <ts>2017-07-12T11:11:42.102240</ts>
    <user>U3LUC6SNS</user>
    <text>Thought on the word parser.</text>
  </message>
  <message>
    <ts>2017-07-12T11:13:21.163923</ts>
    <user>U3SJEDR96</user>
    <text>so basically, I'd say a word cannot be empty, but `words` can have an empty list of words</text>
  </message>
  <message>
    <ts>2017-07-12T11:13:31.170254</ts>
    <user>U3SJEDR96</user>
    <text>i.e. flip the `orMore`'s around</text>
  </message>
  <message>
    <ts>2017-07-12T11:19:29.406139</ts>
    <user>U3SJEDR96</user>
    <text>also, &lt;@U3LUC6SNS&gt; - check that condition - either `not (c == ' ' || c == '\n' || c == '\\')` or `c /= ' ' &amp;amp;&amp;amp; c /= '\n' &amp;amp;&amp;amp; c/= '\\'`, methinks</text>
  </message>
  <message>
    <ts>2017-07-12T11:21:45.494153</ts>
    <user>U0FP80EKB</user>
    <text>joyous demorgan's laws :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-12T11:28:49.770754</ts>
    <user>U5H8JJP24</user>
    <text>I was wondering if there is any reason why commands send via ports are excluded from the time travel debugger and interaction with the interface of web-components is not. If I am right, the current explanation for excluding ports is that Elm is not aware of the JavaScript that is executed outside the Elm-world. But doesn't this exact reason also apply to web-components?</text>
  </message>
  <message>
    <ts>2017-07-12T11:30:06.820771</ts>
    <user>U3SJEDR96</user>
    <text>I'm not sure I follow? Incoming messages appear in the time-travel debugger, outgoing messages don't</text>
  </message>
  <message>
    <ts>2017-07-12T11:30:12.825029</ts>
    <user>U3SJEDR96</user>
    <text>or rather, outgoing commands</text>
  </message>
  <message>
    <ts>2017-07-12T11:31:31.878173</ts>
    <user>U3SJEDR96</user>
    <text>So by my understanding, it's not that ports are excluded, it's simply that they don't get special treatment and hence, commands being sent to ports don't appear, just like outgoing webrequests or tasks being performed don't appear</text>
  </message>
  <message>
    <ts>2017-07-12T11:31:39.882898</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, this works with my current tests -- but I will look at your remarks above to see that it REALLY works. 
```
word : Parser String
word =
    inContext "word" &amp;lt;|
        succeed identity
            |. spaces
            |= keep oneOrMore (\c -&amp;gt; c /= ' ')


type alias Words_ =
    { value : List String
    }


words : Parser Words_
words =
    inContext "words" &amp;lt;|
        succeed Words_
            |= repeat zeroOrMore word
```</text>
  </message>
  <message>
    <ts>2017-07-12T11:32:07.901159</ts>
    <user>U3SJEDR96</user>
    <text>That looks like it should work, yes :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-12T11:32:55.932726</ts>
    <user>U5H8JJP24</user>
    <text>&lt;@U3SJEDR96&gt; okay that makes sense</text>
  </message>
  <message>
    <ts>2017-07-12T11:35:18.025197</ts>
    <user>U3SJEDR96</user>
    <text>so if you have a `port incoming : (String -&amp;gt; msg) -&amp;gt; Sub msg` and had this as part of your `subscriptions = incoming Foo`, doing `app.ports.incoming.send("Go!")` should result in that message appearing in the debugger</text>
  </message>
  <message>
    <ts>2017-07-12T11:36:06.055091</ts>
    <user>U5H8JJP24</user>
    <text>By listening to the talk of Richard I got the impression that they did it on purpose just for commands sent over ports</text>
  </message>
  <message>
    <ts>2017-07-12T11:44:12.361077</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, indeed your boolean condition is the one to use!</text>
  </message>
  <message>
    <ts>2017-07-12T11:45:21.404836</ts>
    <user>U3SJEDR96</user>
    <text>I actually haven't watched Richard's talk on web-components; might have to do that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-12T12:02:48.059371</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U3SJEDR96&gt; I'm just using CodeTidbit to make the tutorials, I'll be making a lot more tutorials, this won't be decoder-specific, you can already take a look at what the first few tutorials are like :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-12T12:03:30.085952</ts>
    <user>U2GPAEU1L</user>
    <text>BTW, I like your demystify-decoders, having interaction is great (and a future goal of CodeTidbit, but because it's language-agnostic, that'd be hard to do right now)</text>
  </message>
  <message>
    <ts>2017-07-12T12:09:39.307127</ts>
    <user>U4H406NET</user>
    <text>I would like to confirm my current (very recently arrived at :slightly_smiling_face:) understanding of the elm architecture.  Is it true that the only function that modifies the model is the update function?  And therefore commands always wind up calling update with the Msg value passed to it and (optionally) arguments derived from the code executed by the command?</text>
  </message>
  <message>
    <ts>2017-07-12T12:10:20.331108</ts>
    <user>U0J1M0F32</user>
    <text>So far so good.</text>
  </message>
  <message>
    <ts>2017-07-12T12:10:28.336074</ts>
    <user>U4H406NET</user>
    <text>This would seem to be implied but not directly stated by the introduction to elm documentation.</text>
  </message>
  <message>
    <ts>2017-07-12T12:11:11.361385</ts>
    <user>U4H406NET</user>
    <text>That would also imply that the only function that needs the Model definition is Main.</text>
  </message>
  <message>
    <ts>2017-07-12T12:16:25.541862</ts>
    <user>U4H406NET</user>
    <text>Is it a good structure to move the commands into a different module, or should they be in Main to have easy access to the definition of Msg?</text>
  </message>
  <message>
    <ts>2017-07-12T12:18:17.606409</ts>
    <user>U3SJEDR96</user>
    <text>ooh, codetidbit itself is Elm? cool!</text>
  </message>
  <message>
    <ts>2017-07-12T12:19:44.656124</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U3LUC6SNS&gt; parsing latex seems like it may be more suitable to a backend</text>
  </message>
  <message>
    <ts>2017-07-12T12:27:08.903833</ts>
    <user>U0J1M0F32</user>
    <text>&lt;@U4H406NET&gt; I rarely, feel the need to move the commands out to their own module until the application has reached sufficient size.</text>
  </message>
  <message>
    <ts>2017-07-12T12:27:34.918338</ts>
    <user>U4H406NET</user>
    <text>I keep failing the YAGNI test</text>
  </message>
  <message>
    <ts>2017-07-12T12:37:17.249993</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U23SA861Y&gt;, you are no doubt correct, but I am running Elixir on the backend, and it seems that Elm, with its Haskell DNA, has better parser tools.  

My plan is to parse only the non-math parts of latex (like I did with my LaTeX extension to Asciidoctor) and let MathJax handle the rest.  By the non math parts I mean things like `\section{..}`, `\begin{equation} EQ_BODY \end{equation}`, `\begin{theorem} THEOREM_BODY \end{theorem}`.  Things like EQ_BODY are handled by MathJax.

I may be way off-base on this, so I'd be happy to hear more from you.</text>
  </message>
  <message>
    <ts>2017-07-12T12:38:47.299453</ts>
    <user>U23SA861Y</user>
    <text>It really depends on what you intend on doing with this, but writing parsers correctly can be a real tricky business.</text>
  </message>
  <message>
    <ts>2017-07-12T12:39:12.313216</ts>
    <user>U23SA861Y</user>
    <text>They tend do devolve into these cargo cult regex piles if it isn't correctly structured from the top down.</text>
  </message>
  <message>
    <ts>2017-07-12T12:39:31.324212</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U23SA861Y&gt; Yes indeed!  But despite my noobiness, I'm game to try.</text>
  </message>
  <message>
    <ts>2017-07-12T12:39:32.324677</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U3SJEDR96&gt; CodeTidbit is elm? CodeTidbit's web-client is written completely in Elm yes :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-12T12:40:07.344462</ts>
    <user>U2GPAEU1L</user>
    <text>It's a platform I'm working on for sharing coding knowledge, the tutorials will be language-agnostic, but the platform itself is written in Elm, because let's be honest, Elm is fkn awesome :smile:</text>
  </message>
  <message>
    <ts>2017-07-12T12:41:07.378102</ts>
    <user>U3LUC6SNS</user>
    <text>I know very well the `regex pile` syndrome, having written several of them (ugh) myself.  That is one reason why I am working on this parser.  Also a clever set of regexes can never do the job quite right (in my experience).</text>
  </message>
  <message>
    <ts>2017-07-12T12:42:06.410534</ts>
    <user>U4H406NET</user>
    <text>&lt;@U3LUC6SNS&gt; I would recommend looking at recursive descent parsers.  They are relatively easy, fast, and lead you away from regex hell.</text>
  </message>
  <message>
    <ts>2017-07-12T12:42:09.411838</ts>
    <user>U23SA861Y</user>
    <text>no, the regexes alone can't do it. you need to follow your tokenizer with the AST generator. Regexes don't allow for normal grammars</text>
  </message>
  <message>
    <ts>2017-07-12T12:43:37.459979</ts>
    <user>U23SA861Y</user>
    <text>I am not sure what kind of cross language linking that elixir can do but I'm pretty sure there are precanned open source latex parsing libraries.</text>
  </message>
  <message>
    <ts>2017-07-12T12:44:04.474849</ts>
    <user>U23SA861Y</user>
    <text>then again if this is more of a hobby/side project then learn away</text>
  </message>
  <message>
    <ts>2017-07-12T12:46:03.539833</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U4H406NET&gt;, I'll do that.  I have written these by hand before,  but they are hard to maintain, no?</text>
  </message>
  <message>
    <ts>2017-07-12T12:47:20.581309</ts>
    <user>U23SA861Y</user>
    <text>parser combinator libraries are pretty nice as well</text>
  </message>
  <message>
    <ts>2017-07-12T12:47:29.586312</ts>
    <user>U23SA861Y</user>
    <text>I don't know if elm has one</text>
  </message>
  <message>
    <ts>2017-07-12T12:49:27.650293</ts>
    <user>U4H406NET</user>
    <text>They are not normally declarative.  Which is the easiest maintenance structure.  How stable is your language (LaTex? been around a while) and your application?  But yes, think about that.</text>
  </message>
  <message>
    <ts>2017-07-12T12:51:11.708012</ts>
    <user>U2SR9DL7Q</user>
    <text>Has anyone here ever used Elm for a desktop application, with something like electron?</text>
  </message>
  <message>
    <ts>2017-07-12T12:51:47.727882</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U23SA861Y&gt; I'll take a look and see what is out there. One thing I found when I looked at this a while back is that there is no context free grammar for TeX: &lt;https://tex.stackexchange.com/questions/4201/is-there-a-bnf-grammar-of-the-tex-language&gt; .

That is one reason that I am delegating the biggest part of the work of typesetting LaTeX to MathJax.  That is, everything that sits inside of a $ .. $  or $$ .. $$ construct is handled by the MathJax.js library.</text>
  </message>
  <message>
    <ts>2017-07-12T12:52:39.756260</ts>
    <user>U23SA861Y</user>
    <text>That is liable to make it much harder, but not unexpected</text>
  </message>
  <message>
    <ts>2017-07-12T12:53:05.769918</ts>
    <user>U23SA861Y</user>
    <text>it allows free form text without escaping so....</text>
  </message>
  <message>
    <ts>2017-07-12T12:53:49.794977</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U4H406NET&gt; LaTeX is very stable, but note the remarks above about not having a CFG.</text>
  </message>
  <message>
    <ts>2017-07-12T12:56:00.868541</ts>
    <user>U3SJEDR96</user>
    <text>Several, and elm-tools/parser is a great one ;)</text>
  </message>
  <message>
    <ts>2017-07-12T12:56:01.869328</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U23SA861Y&gt; Yes, there is a parser combinator library, e.g., &lt;http://package.elm-lang.org/packages/Bogdanp/elm-combine/latest&gt;  and elm-tools/parser.

I am going to see how far I get with elm-tools/parser for now.</text>
  </message>
  <message>
    <ts>2017-07-12T13:00:55.042631</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, how do the two parsers compare? I've started out with elm-tools/parser, so will probably stay with that unless I hit a wall.  I really like the way you can build  informative error messages into parsers constructed with elm-tools. (PS.  Thanks for all the help today and   before.  It is invaluable)</text>
  </message>
  <message>
    <ts>2017-07-12T13:06:46.242116</ts>
    <user>U3HQVHERX</user>
    <text>How do you send 2 values from js to elm in a subscription? whats the port type signature?</text>
  </message>
  <message>
    <ts>2017-07-12T13:07:04.251704</ts>
    <user>U3HQVHERX</user>
    <text>`(( Int, Bool ) -&amp;gt; Msg) -&amp;gt; Sub Msg` ?</text>
  </message>
  <message>
    <ts>2017-07-12T13:08:05.286158</ts>
    <user>U604S603Y</user>
    <text>I'm struggling again with something: this time it's the UrlParser module.
I have the following line in matchers:
`, map Registrierung (s "registrierung" &amp;lt;?&amp;gt; stringParam "fromPage")`
The url `&lt;http://localhost:3000/#registrierung&gt;` matches, but not `&lt;http://localhost:3000/#registrierung?fromPage=abc&gt;`
I'm kinda at a loss why this is not working...</text>
  </message>
  <message>
    <ts>2017-07-12T13:11:05.383837</ts>
    <user>U604S603Y</user>
    <text>well it looks like the `search` part of the `Location` is empty</text>
  </message>
  <message>
    <ts>2017-07-12T13:12:29.429891</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U3HQVHERX&gt; I believe you need to send it back as a record</text>
  </message>
  <message>
    <ts>2017-07-12T13:12:58.446042</ts>
    <user>U0CQ254F5</user>
    <text>&lt;@U3HQVHERX&gt; &lt;https://guide.elm-lang.org/interop/javascript.html&gt; (Customs and Border Protection section) might be useful</text>
  </message>
  <message>
    <ts>2017-07-12T13:13:17.456311</ts>
    <user>U23SA861Y</user>
    <text>ahh yes</text>
  </message>
  <message>
    <ts>2017-07-12T13:13:33.464592</ts>
    <user>U0CQ254F5</user>
    <text>`Tuples – correspond to fixed-length, mixed-type JS arrays` for example</text>
  </message>
  <message>
    <ts>2017-07-12T13:13:41.468735</ts>
    <user>U23SA861Y</user>
    <text>a tuple would not be two params but an array</text>
  </message>
  <message>
    <ts>2017-07-12T13:15:22.524208</ts>
    <user>U604S603Y</user>
    <text>okay, my problem is a known problem according to &lt;https://groups.google.com/forum/#!topic/elm-discuss/yYYNzUao9aw&gt; so I'll use the solutions presented there</text>
  </message>
  <message>
    <ts>2017-07-12T13:16:08.549508</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, it's annoying and the docs are misleading - `?foo=bar#/abc` would work </text>
  </message>
  <message>
    <ts>2017-07-12T13:16:42.568150</ts>
    <user>U0JFFPRHP</user>
    <text>in the latest version you can do that with `--` comments (it will start a new section within the list or record)</text>
  </message>
  <message>
    <ts>2017-07-12T13:18:41.633208</ts>
    <user>U3SJEDR96</user>
    <text>They're very similar, but I like the naming in elm-tools/parser better. Also, the operators. I do miss a `Bounded Int Int`. `parser-combinators` uses regex and backtracking, this one uses native and delayed commits. </text>
  </message>
  <message>
    <ts>2017-07-12T13:30:24.023888</ts>
    <user>U2U94G0QG</user>
    <text>&lt;@U2SR9DL7Q&gt; I've built a few fun little projects using Elm+Webpack+Electron. Are you just looking to get started or did you have some specific Q?</text>
  </message>
  <message>
    <ts>2017-07-12T13:37:47.274909</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U2U94G0QG&gt; i just wanted to know if anyone had tried it, and if they were successful. I've done desktop apps before using python but since moving into web dev with elm, I thought would make sense to just be consistent about my UI design across platforms. I'd heard some folk poo-poo-ing electron for app size and performance, so I wanted to hear from someone who actually used it.</text>
  </message>
  <message>
    <ts>2017-07-12T13:46:57.579902</ts>
    <user>U2U94G0QG</user>
    <text>Well, my projects with Elm/Electron aren't production scale/quality and I never made a prod build of any of them - but we just released a React/Redux/Electron app and I feel pretty good about it</text>
  </message>
  <message>
    <ts>2017-07-12T13:48:09.619830</ts>
    <user>U2SR9DL7Q</user>
    <text>sounds good</text>
  </message>
  <message>
    <ts>2017-07-12T13:48:38.636250</ts>
    <user>U2U94G0QG</user>
    <text>I found this to be useful &lt;https://github.com/johnomarkid/elm-electron-webpack&gt;</text>
  </message>
  <message>
    <ts>2017-07-12T13:48:48.641703</ts>
    <user>U2U94G0QG</user>
    <text>for getting started</text>
  </message>
  <message>
    <ts>2017-07-12T13:49:00.648630</ts>
    <user>U2U94G0QG</user>
    <text>It's not a boilerplate</text>
  </message>
  <message>
    <ts>2017-07-12T13:51:39.739745</ts>
    <user>U2SR9DL7Q</user>
    <text>this is awesome</text>
  </message>
  <message>
    <ts>2017-07-12T13:51:50.746070</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U2U94G0QG&gt; thanks!</text>
  </message>
  <message>
    <ts>2017-07-12T13:52:04.753882</ts>
    <user>U2U94G0QG</user>
    <text>yvw</text>
  </message>
  <message>
    <ts>2017-07-12T14:01:52.098017</ts>
    <user>U5ABF3BH7</user>
    <text>Hi!  I am writing a Json.Encode function to create an object in the back end, in my database.  I have a Kase. ```type alias kase =  { name : String, organization : Maybe Organization.Model, ...} ```. The field organization is a Maybe.  If there is no organization entered, I don't want that field passed in my Json object.  as it will give me some validation errors. How can I do that?  I can only think of doing List.append. This is how the code looks like if an organization exists</text>
  </message>
  <message>
    <ts>2017-07-12T14:01:56.100224</ts>
    <user>U5ABF3BH7</user>
    <text>```Json.object 
  [ ("name" , Json.string model.name)
   , ( "organization_attributes", Json.string model.organization)
]```</text>
  </message>
  <message>
    <ts>2017-07-12T14:02:03.105019</ts>
    <user>U5ABF3BH7</user>
    <text>any advice</text>
  </message>
  <message>
    <ts>2017-07-12T14:02:06.106628</ts>
    <user>U5ABF3BH7</user>
    <text>?</text>
  </message>
  <message>
    <ts>2017-07-12T14:02:41.126774</ts>
    <user>U5ABF3BH7</user>
    <text>but if there is not organization, I only want</text>
  </message>
  <message>
    <ts>2017-07-12T14:02:58.136541</ts>
    <user>U5ABF3BH7</user>
    <text>```Json.object 
  [ ("name" , Json.string model.name)]```</text>
  </message>
  <message>
    <ts>2017-07-12T14:03:05.140102</ts>
    <user>U5ABF3BH7</user>
    <text>(this is a simplified version)</text>
  </message>
  <message>
    <ts>2017-07-12T14:25:58.910803</ts>
    <user>U3DQT3ZGC</user>
    <text>Hi All! Is there a way to detect if an image is loaded in Elm like this? ```const tempImage = new Image(500, 500);
tempImage.addEventListener('load', doSomething);

tempImage.src = url;
```</text>
  </message>
  <message>
    <ts>2017-07-12T14:27:46.971932</ts>
    <user>U0K92QFST</user>
    <text>&lt;@U3DQT3ZGC&gt; Elm allows you to define custom event handlers for any HTML tag: &lt;http://package.elm-lang.org/packages/evancz/elm-html/4.0.0/Html-Events#on&gt;</text>
  </message>
  <message>
    <ts>2017-07-12T14:29:42.038689</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5ABF3BH7&gt; There are a few ways of doing it. One might be:
```
Json.object (List.filterMap identity [Just ("name", Json.String model.name), Maybe.map (\org -&amp;gt; ("organization_attributes", Json.String org))])
```</text>
  </message>
  <message>
    <ts>2017-07-12T14:30:15.057921</ts>
    <user>U0K92QFST</user>
    <text>&lt;@U5ABF3BH7&gt; &lt;@U48AEBJQ3&gt; here's what I came up with:
```
let 
  nameField = ("name", Json.string model.name)
in
  case model.organization of
    Just org -&amp;gt;
      nameField :: [("organization_attributes", Json.string org)]
    Nothing -&amp;gt;
      [nameField]
```</text>
  </message>
  <message>
    <ts>2017-07-12T14:30:46.075988</ts>
    <user>U48AEBJQ3</user>
    <text>And there is another :simple_smile:.</text>
  </message>
  <message>
    <ts>2017-07-12T14:31:43.109351</ts>
    <user>U0FP80EKB</user>
    <text>This
```
 nameField :: [("organization_attributes", Json.string org)]```
can just be
```
 [nameField, ("organization_attributes", Json.string org)]
```</text>
  </message>
  <message>
    <ts>2017-07-12T14:33:10.158689</ts>
    <user>U3DQT3ZGC</user>
    <text>So this this should work ? `Html.img [ on "load" (Json.succeed message), src "image.jpg" ] []`</text>
  </message>
  <message>
    <ts>2017-07-12T14:34:08.190679</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U48AEBJQ3&gt; &lt;@U0K92QFST&gt;  &lt;@U0FP80EKB&gt;  Thanks a lot!</text>
  </message>
  <message>
    <ts>2017-07-12T14:35:27.234561</ts>
    <user>U0K92QFST</user>
    <text>&lt;@U3DQT3ZGC&gt; if the load event listener works as I suspect, then yes, it should work.</text>
  </message>
  <message>
    <ts>2017-07-12T14:35:39.240882</ts>
    <user>U3DQT3ZGC</user>
    <text>Ok, I'll try it, thanks!</text>
  </message>
  <message>
    <ts>2017-07-12T14:38:57.349903</ts>
    <user>U3DQT3ZGC</user>
    <text>It's interesting, I want to load 25 images and know when they're all loaded. And in JS I did this by the use of Promises. Any idea on how to do this in Elm without counting the times I get the `load` event?</text>
  </message>
  <message>
    <ts>2017-07-12T14:39:44.376034</ts>
    <user>U3DQT3ZGC</user>
    <text>I guess if the code above works, thats probably the way to keep track..</text>
  </message>
  <message>
    <ts>2017-07-12T14:40:05.387637</ts>
    <user>U3DQT3ZGC</user>
    <text>But feels a bit hacky</text>
  </message>
  <message>
    <ts>2017-07-12T14:51:41.778266</ts>
    <user>U0K92QFST</user>
    <text>&lt;@U3DQT3ZGC&gt; if each image has some sort of unique identifier, you could add it as a tag to the message that represents an image being loaded</text>
  </message>
  <message>
    <ts>2017-07-12T14:51:59.787920</ts>
    <user>U0K92QFST</user>
    <text>then in your model you can track which images have been loaded</text>
  </message>
  <message>
    <ts>2017-07-12T14:52:43.812322</ts>
    <user>U3SJEDR96</user>
    <text>note though that `load` doesn't always trigger, afaik</text>
  </message>
  <message>
    <ts>2017-07-12T14:58:10.998216</ts>
    <user>U3DQT3ZGC</user>
    <text>&lt;@U0K92QFST&gt; Ah that's nice as well</text>
  </message>
  <message>
    <ts>2017-07-12T14:58:40.015964</ts>
    <user>U3DQT3ZGC</user>
    <text>&lt;@U3SJEDR96&gt; Ah ok, is that the same in JS or specific to Elm?</text>
  </message>
  <message>
    <ts>2017-07-12T15:05:00.231488</ts>
    <user>U3DQT3ZGC</user>
    <text>Ok it does work indeed, now I wonder how reliable it is</text>
  </message>
  <message>
    <ts>2017-07-12T15:20:40.713377</ts>
    <user>U6602MZ9Q</user>
    <text>Hi there, I was trying to define a function where you can pass in the field of the record that you want to update</text>
  </message>
  <message>
    <ts>2017-07-12T15:21:03.724993</ts>
    <user>U6602MZ9Q</user>
    <text>Firstly, is that possible?</text>
  </message>
  <message>
    <ts>2017-07-12T15:21:16.731855</ts>
    <user>U6602MZ9Q</user>
    <text>Secondly, what is this type saying:
```
alterRecord : { b | b : a } -&amp;gt; c -&amp;gt; d -&amp;gt; { b | b : d }
alterRecord record b a = {record | b = a}
```</text>
  </message>
  <message>
    <ts>2017-07-12T15:22:11.759770</ts>
    <user>U6602MZ9Q</user>
    <text>It looks like an extendable record that contains itself? It's really weird whatever it is</text>
  </message>
  <message>
    <ts>2017-07-12T15:25:09.851994</ts>
    <user>U3SJEDR96</user>
    <text>that type is saying "I take a record (let's call it `b`) which has a field named `b` (not related to what we called the record) of type `a`, a `c` and a `d` and I'll return a new record (let's call it `b`) which will still have a field `b` but now with a value of type `d`"</text>
  </message>
  <message>
    <ts>2017-07-12T15:26:02.879340</ts>
    <user>U3SJEDR96</user>
    <text>note also that that function wouldn't actually work, since that parameter `b` (of type `c`) isn't the name of that field, as you can't actually express that in elm</text>
  </message>
  <message>
    <ts>2017-07-12T15:26:14.885270</ts>
    <user>U6602MZ9Q</user>
    <text>Ah ok</text>
  </message>
  <message>
    <ts>2017-07-12T15:26:23.890428</ts>
    <user>U6602MZ9Q</user>
    <text>So my `b` parameter is just thrown away?</text>
  </message>
  <message>
    <ts>2017-07-12T15:26:33.895231</ts>
    <user>U3SJEDR96</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-12T15:26:47.902910</ts>
    <user>U6602MZ9Q</user>
    <text>Thanks, that's pretty interesting</text>
  </message>
  <message>
    <ts>2017-07-12T15:27:18.918802</ts>
    <user>U6602MZ9Q</user>
    <text>I was suprised that it compiled then that type popped up and I was so thinking this can't be right</text>
  </message>
  <message>
    <ts>2017-07-12T15:28:26.953571</ts>
    <user>U3SJEDR96</user>
    <text>it's not that different to `let foo = "bar" in { record | foo = foo }` which would work on a record that has a field named "foo", returning a new record with the value `"bar"` for the field `foo`</text>
  </message>
  <message>
    <ts>2017-07-12T15:29:22.982167</ts>
    <user>U6602MZ9Q</user>
    <text>Yeah that makes a lot of sense</text>
  </message>
  <message>
    <ts>2017-07-12T15:34:14.131928</ts>
    <user>U5WS7CJLV</user>
    <text>so I'm looking around at the docs - where is the documentation for the "|" in { someRecord | property = "newValue" } ?</text>
  </message>
  <message>
    <ts>2017-07-12T15:35:58.184201</ts>
    <user>U0JFXEUCT</user>
    <text>&lt;https://guide.elm-lang.org/core_language.html&gt;</text>
  </message>
  <message>
    <ts>2017-07-12T15:36:12.191615</ts>
    <user>U0JFXEUCT</user>
    <text>though that's the guide, not the elm-package docs</text>
  </message>
  <message>
    <ts>2017-07-12T15:36:58.215210</ts>
    <user>U5WS7CJLV</user>
    <text>yeah, I know how to use the guy.  Just curious what the more documentation-y explanation is.</text>
  </message>
  <message>
    <ts>2017-07-12T15:37:02.217146</ts>
    <user>U5WS7CJLV</user>
    <text>he's an operator, yes?</text>
  </message>
  <message>
    <ts>2017-07-12T15:37:14.223089</ts>
    <user>U663M2MB7</user>
    <text>it's just a syntax, right? as in haskell, where it literally means *nothing*</text>
  </message>
  <message>
    <ts>2017-07-12T15:38:26.259287</ts>
    <user>U3SJEDR96</user>
    <text>&lt;http://elm-lang.org/docs/records#updating-records&gt;</text>
  </message>
  <message>
    <ts>2017-07-12T15:38:41.267060</ts>
    <user>U3SJEDR96</user>
    <text>it's not an operator, it's part of the language syntax</text>
  </message>
  <message>
    <ts>2017-07-12T15:39:01.277236</ts>
    <user>U3SJEDR96</user>
    <text>similar to how `[ a, b ]` isn't an operator; but rather compiler-supported syntax :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-12T15:39:19.286372</ts>
    <user>U5WS7CJLV</user>
    <text>syntax - got it.</text>
  </message>
  <message>
    <ts>2017-07-12T15:39:46.299771</ts>
    <user>U5WS7CJLV</user>
    <text>it's intuitive syntax, which kinda makes it look like an operator</text>
  </message>
  <message>
    <ts>2017-07-12T15:39:55.304201</ts>
    <user>U5WS7CJLV</user>
    <text>I think of pipes as being operator-y anyways</text>
  </message>
  <message>
    <ts>2017-07-12T15:40:03.308380</ts>
    <user>U5WS7CJLV</user>
    <text>|&amp;gt;</text>
  </message>
  <message>
    <ts>2017-07-12T15:40:15.314003</ts>
    <user>U3SJEDR96</user>
    <text>that actually is an operator, though :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-12T15:40:24.318829</ts>
    <user>U5WS7CJLV</user>
    <text>right</text>
  </message>
  <message>
    <ts>2017-07-12T15:40:29.321601</ts>
    <user>U5WS7CJLV</user>
    <text>an operator that looks like syntax</text>
  </message>
  <message>
    <ts>2017-07-12T15:40:32.323147</ts>
    <user>U5WS7CJLV</user>
    <text>:smile:</text>
  </message>
  <message>
    <ts>2017-07-12T15:40:57.336292</ts>
    <user>U3SJEDR96</user>
    <text>(even though it secretly also _has_ compiler support, though that's an implementation detail and only there for performance)</text>
  </message>
  <message>
    <ts>2017-07-12T15:47:00.520205</ts>
    <user>U4JT89FGB</user>
    <text>is there an equivalent to setTimeout with 0 as the amount of time? looking to draw an opaque element to fade-in and i need the virtualdom to put it on the page before i change the opacity</text>
  </message>
  <message>
    <ts>2017-07-12T15:54:45.762975</ts>
    <user>U14Q8S4EM</user>
    <text>I believe so &lt;@U4JT89FGB&gt;. I mean, on the face of it it seems like you might have a better option. There are lots of animation options, like &lt;@U0JFXEUCT&gt; ‘s animation library.</text>
  </message>
  <message>
    <ts>2017-07-12T15:55:09.775660</ts>
    <user>U14Q8S4EM</user>
    <text>But answering your question directly, I believe there is a delay function in core, and that its based on setTimeout.</text>
  </message>
  <message>
    <ts>2017-07-12T15:55:21.782008</ts>
    <user>U14Q8S4EM</user>
    <text>Ive never used it myself, but thats what I know.</text>
  </message>
  <message>
    <ts>2017-07-12T17:01:49.856775</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U4JT89FGB&gt; I use this technique (my ‘Animation' module) to coordinate drawing for css-based animations &lt;https://gist.github.com/coreyhaines/963029ef49f088e41e1b3485e1c794c3&gt;</text>
  </message>
  <message>
    <ts>2017-07-12T17:02:11.868123</ts>
    <user>U0FP80EKB</user>
    <text>It does a "draw first" then "set the class to start the animation" then "remove animation class"</text>
  </message>
  <message>
    <ts>2017-07-12T17:02:29.877332</ts>
    <user>U0FP80EKB</user>
    <text>I also gave a talk on it at a previous elm remote meetup</text>
  </message>
  <message>
    <ts>2017-07-12T17:02:44.885114</ts>
    <user>U0FP80EKB</user>
    <text>We use this for all our css-based animations</text>
  </message>
  <message>
    <ts>2017-07-12T17:03:13.899754</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U0FP80EKB&gt; Is the talk available on Youtube or somewhere public? I would like to listen to it.</text>
  </message>
  <message>
    <ts>2017-07-12T17:04:42.944868</ts>
    <user>U0FP80EKB</user>
    <text>Yeah. I think it was #4. &lt;@U2GPAEU1L&gt; is managing the meetups now. I think he'd know how to find it.</text>
  </message>
  <message>
    <ts>2017-07-12T17:05:29.968315</ts>
    <user>U0FP80EKB</user>
    <text>or &lt;@U0S6BNVNY&gt; might know.</text>
  </message>
  <message>
    <ts>2017-07-12T17:05:54.980882</ts>
    <user>U0FP80EKB</user>
    <text>Here we go</text>
  </message>
  <message>
    <ts>2017-07-12T17:05:55.981153</ts>
    <user>U0FP80EKB</user>
    <text>&lt;https://www.bigmarker.com/remote-meetup/Elm-Remote-Meetup-5&gt;</text>
  </message>
  <message>
    <ts>2017-07-12T17:05:57.982076</ts>
    <user>U0FP80EKB</user>
    <text>Number 5</text>
  </message>
  <message>
    <ts>2017-07-12T17:06:42.003803</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U2SR9DL7Q&gt; I think I come in around 1:03:00</text>
  </message>
  <message>
    <ts>2017-07-12T17:06:43.004609</ts>
    <user>U0FP80EKB</user>
    <text>or so</text>
  </message>
  <message>
    <ts>2017-07-12T17:06:48.007157</ts>
    <user>U0FP80EKB</user>
    <text>Wow, I still have long hair there. haha</text>
  </message>
  <message>
    <ts>2017-07-12T17:24:47.499974</ts>
    <user>U17P7CBFB</user>
    <text>I have `type alias T = Set Y` and I'm trying to use `Set.empty` where it expects `T`, but it doesn't type check. Is it hidden somewhere among the other errors, or did I miss something about how types work?</text>
  </message>
  <message>
    <ts>2017-07-12T17:25:15.512295</ts>
    <user>U17P7CBFB</user>
    <text>It's claiming it needed a `T`, but got a `Set a`</text>
  </message>
  <message>
    <ts>2017-07-12T17:25:41.524511</ts>
    <user>U17P7CBFB</user>
    <text>but it's empty, so there's no `a` yet, so why doesn't it just make that `a` into a `T`?</text>
  </message>
  <message>
    <ts>2017-07-12T17:29:51.636371</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U17P7CBFB&gt; There seems to be something else going on here.</text>
  </message>
  <message>
    <ts>2017-07-12T17:30:42.659747</ts>
    <user>U17P7CBFB</user>
    <text>ok, I'll try to fix the other errors first</text>
  </message>
  <message>
    <ts>2017-07-12T17:31:29.680463</ts>
    <user>U68RXKS5D</user>
    <text>Is there a way to define a subscription port that doesn't have input. I'm thinking of it more as a "command" from the JS side. Does that make sense?</text>
  </message>
  <message>
    <ts>2017-07-12T17:31:57.692439</ts>
    <user>U68RXKS5D</user>
    <text>e.g. `app.ports.doAThing.send()`</text>
  </message>
  <message>
    <ts>2017-07-12T17:32:34.708458</ts>
    <user>U0J1M0F32</user>
    <text>Yah, that makes sense, but I'm not sure I've ever done it. :thinking_face:</text>
  </message>
  <message>
    <ts>2017-07-12T17:32:58.718975</ts>
    <user>U68RXKS5D</user>
    <text>i ended up sending along an empty string, but that feels pretty icky</text>
  </message>
  <message>
    <ts>2017-07-12T17:33:16.726733</ts>
    <user>U68RXKS5D</user>
    <text>tried things like `port doAThing : (Nothing -&amp;gt; msg) -&amp;gt; Sub msg` but that's not even valid</text>
  </message>
  <message>
    <ts>2017-07-12T17:33:32.733153</ts>
    <user>U23SA861Y</user>
    <text>typically no data would be a unit type</text>
  </message>
  <message>
    <ts>2017-07-12T17:34:24.755228</ts>
    <user>U23SA861Y</user>
    <text>```
port doAThingWrap : ( () -&amp;gt; msg) -&amp;gt; Sub msg
doAThing : msg -&amp;gt; Sub msg 
doAThing msg = doAThingWrap (\_ -&amp;gt; msg)
```</text>
  </message>
  <message>
    <ts>2017-07-12T17:34:38.761197</ts>
    <user>U68RXKS5D</user>
    <text>ah hah, i'll try!</text>
  </message>
  <message>
    <ts>2017-07-12T17:36:32.809777</ts>
    <user>U68RXKS5D</user>
    <text>that made the compiler happy! still had to do something icky to make the subscriptions compile. thoughts on this?

```
subscriptions model = doAThing (\() -&amp;gt; AnMessage)
```</text>
  </message>
  <message>
    <ts>2017-07-12T17:36:53.818692</ts>
    <user>U23SA861Y</user>
    <text>see wrapper above</text>
  </message>
  <message>
    <ts>2017-07-12T17:37:59.845440</ts>
    <user>U68RXKS5D</user>
    <text>ah hah, funky (and sorry i missed that reply). not sure how i feel about that. are my alarm bells valid?</text>
  </message>
  <message>
    <ts>2017-07-12T17:39:29.881631</ts>
    <user>U23SA861Y</user>
    <text>it's not that ugly</text>
  </message>
  <message>
    <ts>2017-07-12T17:39:30.881853</ts>
    <user>U68RXKS5D</user>
    <text>w/ that wrapper, i'd still access it on the JS side by the wrapped name, correct? `app.ports.doAThingWrap.send()`</text>
  </message>
  <message>
    <ts>2017-07-12T17:39:47.888869</ts>
    <user>U23SA861Y</user>
    <text>yeah</text>
  </message>
  <message>
    <ts>2017-07-12T17:39:51.890329</ts>
    <user>U23SA861Y</user>
    <text>might have to work on the names</text>
  </message>
  <message>
    <ts>2017-07-12T17:40:13.899383</ts>
    <user>U68RXKS5D</user>
    <text>cool. thanks for helping clear that up for me! helps unblock my brain :smile:</text>
  </message>
  <message>
    <ts>2017-07-12T17:40:19.902102</ts>
    <user>U68RXKS5D</user>
    <text>&lt;@U23SA861Y&gt;++ :heart:</text>
  </message>
  <message>
    <ts>2017-07-12T17:41:04.920578</ts>
    <user>U68RXKS5D</user>
    <text>this unit type is a new idea on me. either i missed it in reading or it's not covered well. here's a thing i found to read if others are interested &lt;https://gist.github.com/sporto/401afc781341a55fbfa7&gt;</text>
  </message>
  <message>
    <ts>2017-07-12T17:41:21.927559</ts>
    <user>U23SA861Y</user>
    <text>it's the base case of the tuple</text>
  </message>
  <message>
    <ts>2017-07-12T17:41:56.941393</ts>
    <user>U23SA861Y</user>
    <text>It basically just says there exists a tuple with no values, there is an equivalent one for records `{}`</text>
  </message>
  <message>
    <ts>2017-07-12T17:42:07.945423</ts>
    <user>U23SA861Y</user>
    <text>although unit `()` is more common</text>
  </message>
  <message>
    <ts>2017-07-12T17:42:14.948209</ts>
    <user>U68RXKS5D</user>
    <text>makes sense :+1:</text>
  </message>
  <message>
    <ts>2017-07-12T17:44:37.004746</ts>
    <user>U68RXKS5D</user>
    <text>haha this is a bummer :laughing: 
```
&amp;gt; app.ports.onSubmit.send()
Error: Trying to send an unexpected type of value through port `onSubmit`:
Expecting null but instead got: undefined
&amp;gt; app.ports.onSubmit.send(null)
undefined
&amp;gt; lolwat: []
```

Apparently `null` is nothing, not `undefined` :facepalm:</text>
  </message>
  <message>
    <ts>2017-07-12T17:53:10.206073</ts>
    <user>U4JT89FGB</user>
    <text>thanks &lt;@U0FP80EKB&gt; re: animations</text>
  </message>
  <message>
    <ts>2017-07-12T17:53:59.225666</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U68RXKS5D&gt; 

`null != undefined`…actually that's a lie, freaking javascript, rather `null !== undefined`.

Null and undefined are different, what's the bummer?</text>
  </message>
  <message>
    <ts>2017-07-12T17:54:44.243177</ts>
    <user>U68RXKS5D</user>
    <text>just a bummer that you have to explicitly pass along `null` to send that message</text>
  </message>
  <message>
    <ts>2017-07-12T17:54:53.246488</ts>
    <user>U68RXKS5D</user>
    <text>not calling it wrong by any means</text>
  </message>
  <message>
    <ts>2017-07-12T17:55:36.264055</ts>
    <user>U2GPAEU1L</user>
    <text>Well is the Elm on the other side expecting `null`?</text>
  </message>
  <message>
    <ts>2017-07-12T17:56:01.273790</ts>
    <user>U68RXKS5D</user>
    <text>unclear, see above. the port is defined w/ a unit type</text>
  </message>
  <message>
    <ts>2017-07-12T17:56:24.282870</ts>
    <user>U2GPAEU1L</user>
    <text>How are you decoding?</text>
  </message>
  <message>
    <ts>2017-07-12T17:56:29.284940</ts>
    <user>U68RXKS5D</user>
    <text>so i guess it's technically expecting `()`?</text>
  </message>
  <message>
    <ts>2017-07-12T17:56:34.286967</ts>
    <user>U68RXKS5D</user>
    <text>not sure what you mean exactly</text>
  </message>
  <message>
    <ts>2017-07-12T17:56:35.287693</ts>
    <user>U2GPAEU1L</user>
    <text>Oh it's being decoded automatically</text>
  </message>
  <message>
    <ts>2017-07-12T17:56:41.289948</ts>
    <user>U2GPAEU1L</user>
    <text>nvm, my bad</text>
  </message>
  <message>
    <ts>2017-07-12T17:56:46.291842</ts>
    <user>U68RXKS5D</user>
    <text>no worries :heart:</text>
  </message>
  <message>
    <ts>2017-07-12T17:57:53.318443</ts>
    <user>U17P7CBFB</user>
    <text>God, when are we getting custom comparable types?</text>
  </message>
  <message>
    <ts>2017-07-12T18:01:18.399122</ts>
    <user>U17P7CBFB</user>
    <text>aarrrgghh, it bit me twice in a row!</text>
  </message>
  <message>
    <ts>2017-07-12T18:07:09.529535</ts>
    <user>U2GPAEU1L</user>
    <text>Probably not for a long time :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-12T18:07:53.545188</ts>
    <user>U17P7CBFB</user>
    <text>:disappointed:</text>
  </message>
  <message>
    <ts>2017-07-12T18:08:43.563611</ts>
    <user>U17P7CBFB</user>
    <text>If most of the things in core were comparable, that'd go most of the way there</text>
  </message>
  <message>
    <ts>2017-07-12T18:45:06.249242</ts>
    <user>U23SA861Y</user>
    <text>they are, at least most of the base types anyway</text>
  </message>
  <message>
    <ts>2017-07-12T18:45:24.254543</ts>
    <user>U23SA861Y</user>
    <text>ADT to so much</text>
  </message>
  <message>
    <ts>2017-07-12T19:05:12.604317</ts>
    <user>U663M2MB7</user>
    <text>&lt;@U17P7CBFB&gt; as `deriving Eq` in Haskell?</text>
  </message>
  <message>
    <ts>2017-07-12T19:11:44.709287</ts>
    <user>U663M2MB7</user>
    <text>I guess that would not be entirely accurate, but my understanding of Elm and where it differs from Haskell is limited.</text>
  </message>
  <message>
    <ts>2017-07-12T19:16:15.779548</ts>
    <user>U3LUC6SNS</user>
    <text>I want to start writing tests for the parser I'm working on.  What are the recommended packages and practices for this?</text>
  </message>
  <message>
    <ts>2017-07-12T19:17:39.801318</ts>
    <user>U23SA861Y</user>
    <text>there is an elm-test package I believe, but I couldn't tell you anything more than that as I haven't used it</text>
  </message>
  <message>
    <ts>2017-07-12T19:24:12.900863</ts>
    <user>U2GPAEU1L</user>
    <text>Hey everyone, if you're curious how you would go about writing encoders/decoders for recursive data types, I just made a tutorial here where I encode/decode a binary tree: &lt;http://codetidbit.com/#view/snipbit/5966ae6a7890d775c05191ef/introduction&gt;

Additionally you can check out the entire series on elm encoders/decoders here: &lt;http://codetidbit.com/#view/story/58f7ac012bdce7111285c2ea&gt;

I cover concepts all the way from the basics of working with the decode pipeline all the way to more complex things such as working with tagged unions and recursive data structures.

Cheers :smile:</text>
  </message>
  <message>
    <ts>2017-07-12T20:00:17.434003</ts>
    <user>U300LJUAK</user>
    <text>Neat little tutorial &lt;@U2GPAEU1L&gt;. Never had to decode such structures, but it's sure nice to see how it's done.</text>
  </message>
  <message>
    <ts>2017-07-12T20:09:24.563739</ts>
    <user>U663M2MB7</user>
    <text>Has anyone used &lt;https://github.com/rtfeldman/elm-css&gt; without having it create an external css file? I would like to use it in my code, and have it style my elements when running `elm-reactor` but I am confused as to whether this is an possible.</text>
  </message>
  <message>
    <ts>2017-07-12T20:19:50.700539</ts>
    <user>U46JV6X3K</user>
    <text>What's the best way to encode a record to a JS object?</text>
  </message>
  <message>
    <ts>2017-07-12T20:23:11.742746</ts>
    <user>U68RXKS5D</user>
    <text>Check out Json.Encode</text>
  </message>
  <message>
    <ts>2017-07-12T20:23:32.746792</ts>
    <user>U68RXKS5D</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Json-Encode&gt;</text>
  </message>
  <message>
    <ts>2017-07-12T20:24:11.754450</ts>
    <user>U0CL0AS3V</user>
    <text>&lt;@U663M2MB7&gt; definitely doable - ask in &lt;#C0HJVT881|elm-css&gt; and folks can help!</text>
  </message>
  <message>
    <ts>2017-07-12T20:24:14.755117</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U46JV6X3K&gt; Presuming you want to make a JS object:
```
type alias MyRecord =
    { foo : Int
    , bar : String
    }

encodeMyRecord : MyRecord -&amp;gt; Encode.Value
encodeMyRecord myRecord =
    Encode.object
        [ ("foo", &lt;http://Encode.int|Encode.int&gt; myRecord.foo)
        , ("bar", Encode.string myRecord.bar)
        ]
```</text>
  </message>
  <message>
    <ts>2017-07-12T20:25:27.769558</ts>
    <user>U663M2MB7</user>
    <text>&lt;@U0CL0AS3V&gt; thanks man, will do! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-12T20:29:50.822980</ts>
    <user>U65B9414J</user>
    <text>Folks posted my first blog on Elm. This was an issue for me and my team members while understanding Elm. It's very basic stuff. &lt;https://blog.bigbinary.com/2017/07/12/difference-between-type-and-type-alias-in-elm.html&gt; . If anyone has any feedback then let me know. Thanks everyone and keep on Elming.</text>
  </message>
  <message>
    <ts>2017-07-12T20:35:00.887027</ts>
    <user>U3LUC6SNS</user>
    <text>I need to frequently to the below after starting `elm-repl`.  Is there a way of putting this in a script or something to avoid repetitious typing?

```
&amp;gt; import LatexParser.Latex exposing(..)
&amp;gt; import LatexParser.Parser exposing(..)
&amp;gt; import Parser exposing(run)
```</text>
  </message>
  <message>
    <ts>2017-07-12T20:46:04.022765</ts>
    <user>U494Y62N7</user>
    <text>huh, i guess it would be nice to do something like `elm-repl YourCode.elm`</text>
  </message>
  <message>
    <ts>2017-07-12T20:58:33.174058</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U494Y62N7&gt; I tried this:
```
jxxmbp:koko_client carlson$ elm-repl start.elm
Unhandled argument, none expected: start.elm
```</text>
  </message>
  <message>
    <ts>2017-07-12T20:59:12.181765</ts>
    <user>U494Y62N7</user>
    <text>Yea, I was thinking that would be nice. F# has the ability where you can just highlight code &amp;amp; send it to the repl.</text>
  </message>
  <message>
    <ts>2017-07-12T20:59:40.187379</ts>
    <user>U494Y62N7</user>
    <text>Clojure does as well.</text>
  </message>
  <message>
    <ts>2017-07-12T20:59:52.189738</ts>
    <user>U494Y62N7</user>
    <text>I guess it's time to start learning Haskell :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-12T21:01:58.217094</ts>
    <user>U3LUC6SNS</user>
    <text>Another question.  In the `elm-repl` I do the following:
```
 r = run latexList "a b c\nx y z\n"
Ok { value = [Words { value = ["a","b","c"] },Words { value = ["x","y","z"] }] }
    : Result.Result Parser.Error LatexParser.Parser.LatexList
```
Is there an easy way to extract the part after the `Ok`?  Working with multi-line code in the repl is a pain.</text>
  </message>
  <message>
    <ts>2017-07-12T21:05:45.265011</ts>
    <user>U494Y62N7</user>
    <text>The only thing I can think of is to write a function with `Result.withDefault` and then have the `value` just be an empty array if it fails</text>
  </message>
  <message>
    <ts>2017-07-12T21:06:07.269522</ts>
    <user>U494Y62N7</user>
    <text>Sorry :disappointed:</text>
  </message>
  <message>
    <ts>2017-07-12T21:24:25.488584</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U3LUC6SNS&gt; `Result.withDefault` is what you want. But you might just want `Result.map` if you're planning on using that value for something</text>
  </message>
  <message>
    <ts>2017-07-12T23:11:18.661902</ts>
    <user>U2GPAEU1L</user>
    <text>If you want a tutorial on it:

&lt;http://codetidbit.com/#view/story/58f7ac012bdce7111285c2ea&gt;


These 5 mini-tutorials take you through everything you need to know about encoding and decoding in Elm</text>
  </message>
  <message>
    <ts>2017-07-13T00:34:59.463871</ts>
    <user>U2U94G0QG</user>
    <text>&lt;@U3SJEDR96&gt; My attempts at `at : List String -&amp;gt; Decoder a -&amp;gt; Decoder a` :</text>
  </message>
  <message>
    <ts>2017-07-13T00:35:21.467517</ts>
    <user>U2U94G0QG</user>
    <text>```
 -- Haha, what a fool I am... But it works!
at : List String -&amp;gt; Decoder a -&amp;gt; Decoder a
at location decoder =
    let
        reorder =
            List.reverse location
    in
        case reorder of
            thing :: [] -&amp;gt;
                field thing decoder

            thing :: moreThings -&amp;gt;
                at (List.reverse moreThings) decoder
                    |&amp;gt; field thing

            _ -&amp;gt;
                fail "I don't understand that location."


 -- That's better... Say! This looks like a fold...
at : List String -&amp;gt; Decoder a -&amp;gt; Decoder a
at location decoder =
    case location of
        thing :: [] -&amp;gt;
            field thing decoder

        thing :: moreThings -&amp;gt;
            field thing decoder
                |&amp;gt; at moreThings

        _ -&amp;gt;
            fail "I don't understand that location."


 -- So pretty... This is how it's done in Json.Decode
at : List String -&amp;gt; Decoder a -&amp;gt; Decoder a
at location decoder =
    List.foldr field decoder location
```</text>
  </message>
  <message>
    <ts>2017-07-13T00:51:54.625826</ts>
    <user>U5P1BDUM8</user>
    <text>Is there any way to hide some sort of warnings on `elm-make --warn foobar.elm` like `fno-warn-*` pragmas of Haskell?
I do not want to show following warnings on specific files.

```
Top-level value `foobar` does not have a type annotation.
```</text>
  </message>
  <message>
    <ts>2017-07-13T00:52:27.631073</ts>
    <user>U2U94G0QG</user>
    <text>leave off the `--warn` part</text>
  </message>
  <message>
    <ts>2017-07-13T00:52:51.634855</ts>
    <user>U5P1BDUM8</user>
    <text>I want to show other sorts of warnings...</text>
  </message>
  <message>
    <ts>2017-07-13T00:53:21.639356</ts>
    <user>U2U94G0QG</user>
    <text>oic now :sweat_smile: I don't think so</text>
  </message>
  <message>
    <ts>2017-07-13T02:06:46.362990</ts>
    <user>U31FGNWCT</user>
    <text>Hi everyone! Has anyone ever run into debugger not synchronizing it's changes with the actual view? I mean, I do things at my page and state indeed changes, but when I travel through it (in a separate debugger history window) it doesn't change view accordingly - it's like view is reflecting the last change made to the state. Is there a chance that it is a webpack problem? Or, maybe, something about programWithFlags that I don't know?</text>
  </message>
  <message>
    <ts>2017-07-13T02:11:11.413194</ts>
    <user>U5AEH3L05</user>
    <text>Hmm, are you using JS?</text>
  </message>
  <message>
    <ts>2017-07-13T02:11:24.415908</ts>
    <user>U5AEH3L05</user>
    <text>If you're doing anything outside of elm (ports, commands), those things won't get brought along</text>
  </message>
  <message>
    <ts>2017-07-13T02:17:08.482281</ts>
    <user>U31FGNWCT</user>
    <text>As for now, I'm only using flags.</text>
  </message>
  <message>
    <ts>2017-07-13T02:20:14.518611</ts>
    <user>U31FGNWCT</user>
    <text>Is there a way to debug debugger? :thinking_face:</text>
  </message>
  <message>
    <ts>2017-07-13T03:00:30.061120</ts>
    <user>U2G22DQE7</user>
    <text>&lt;@U5P1BDUM8&gt; all I can think of is to ignore them or  put in the type annotations</text>
  </message>
  <message>
    <ts>2017-07-13T03:08:58.190529</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U31FGNWCT&gt; what type of things are you doing and what is not changing? There are a couple of scenario's I can think of where this would be expected, like an `input` without a `value` or a `checkbox` without a `checked`, but to help you better, more info would be useful, and actual code on &lt;http://ellie-app.com|ellie-app.com&gt; would be perfect :wink:</text>
  </message>
  <message>
    <ts>2017-07-13T03:11:18.227872</ts>
    <user>U31FGNWCT</user>
    <text>&lt;@U3SJEDR96&gt; Unfortunately it's a relatively big chunk of production code, so I can't share a part of it.</text>
  </message>
  <message>
    <ts>2017-07-13T03:12:38.249376</ts>
    <user>U3SJEDR96</user>
    <text>The only thing I can think of, then, is that it's part of your view that relies on state that isn't part of your model - uncontrolled inputs first and foremost</text>
  </message>
  <message>
    <ts>2017-07-13T03:12:46.251472</ts>
    <user>U31FGNWCT</user>
    <text>It happens on a simple login form, login &amp;amp;&amp;amp; password inputs with a submit button. Nothing extraordinary.</text>
  </message>
  <message>
    <ts>2017-07-13T03:13:50.268441</ts>
    <user>U3SJEDR96</user>
    <text>can you verify that on those fields, there is a `value` attribute in  Elm, and not _only_ an `onInput`?</text>
  </message>
  <message>
    <ts>2017-07-13T03:14:56.285738</ts>
    <user>U31FGNWCT</user>
    <text>Aha!</text>
  </message>
  <message>
    <ts>2017-07-13T03:15:01.286990</ts>
    <user>U31FGNWCT</user>
    <text>That's it!</text>
  </message>
  <message>
    <ts>2017-07-13T03:15:10.289667</ts>
    <user>U31FGNWCT</user>
    <text>Thank you very much!</text>
  </message>
  <message>
    <ts>2017-07-13T03:15:28.294512</ts>
    <user>U3SJEDR96</user>
    <text>The debugger renders your view with the given state, but of course that only does something if the view represents _only_ that state :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-13T03:16:14.307554</ts>
    <user>U31FGNWCT</user>
    <text>I didn't understand you well when you had mentioned it earlier, sorry</text>
  </message>
  <message>
    <ts>2017-07-13T03:16:38.314222</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, that's alright, it's hard to explain because intuitively, what you see is a reflection of your state :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-13T03:23:44.431805</ts>
    <user>U5W5F6QGP</user>
    <text>I'm rewritting a react/redux production app in Elm atm and have some cognitive dissonance about my approach

The main subject is a `List Assessment`, where an Assessment has ~200 points of data (varying types) that are entered

My gut says to go with the obvious approach and have a giant `Assessment` record with `Maybe` values, and for updating I was thinking of a generic `UpdateAssessment String a` that targets a specific record member and performances a merge. This is almost a 1-to-1 with the current redux implementation.

I am slightly nervous about how that would play out in practice though, any advice for big records?</text>
  </message>
  <message>
    <ts>2017-07-13T03:25:12.456590</ts>
    <user>U3SJEDR96</user>
    <text>I'd go for a `Dict String Data`, I think</text>
  </message>
  <message>
    <ts>2017-07-13T03:25:55.469418</ts>
    <user>U3SJEDR96</user>
    <text>though you'll probably have some keys where some data doesn't make sense for</text>
  </message>
  <message>
    <ts>2017-07-13T03:25:58.470281</ts>
    <user>U3SJEDR96</user>
    <text>:thinking_face:</text>
  </message>
  <message>
    <ts>2017-07-13T03:26:30.479771</ts>
    <user>U5W5F6QGP</user>
    <text>I COULD subdivide data by ~5 (they're laid out into fairly loose categories)
The nesting seems like it would introduce more complexity though</text>
  </message>
  <message>
    <ts>2017-07-13T03:26:36.481534</ts>
    <user>U57KYFW67</user>
    <text>If the values vary, and you know all the possible things it could be, you want to use a union type most likely.</text>
  </message>
  <message>
    <ts>2017-07-13T03:26:48.485202</ts>
    <user>U57KYFW67</user>
    <text>rather than lots of maybe values</text>
  </message>
  <message>
    <ts>2017-07-13T03:26:51.486031</ts>
    <user>U3SJEDR96</user>
    <text>possibly, a mix of a record with some strongly typed keys, and a `Dict String Data` for the "freeform" stuff</text>
  </message>
  <message>
    <ts>2017-07-13T03:28:49.519561</ts>
    <user>U5W5F6QGP</user>
    <text>It's one of those things where it's TextField/Checkbox/Multi-checkbox/Dropdown/Textarea
Always going to be annoying to model out data like that I guess

Thanks y'all! I'll trial a couple of small scale things and see how they play out</text>
  </message>
  <message>
    <ts>2017-07-13T03:40:47.729974</ts>
    <user>U3CUFAX4H</user>
    <text>is there a sugar syntax for:
```
case thingThatReturnsResult of
  Ok thing -&amp;gt;
    thing
  Err _ -&amp;gt;
    handleErrCaseThatCanNeverOccur
```</text>
  </message>
  <message>
    <ts>2017-07-13T03:40:54.732149</ts>
    <user>U3CUFAX4H</user>
    <text>?</text>
  </message>
  <message>
    <ts>2017-07-13T03:43:16.775468</ts>
    <user>U3SJEDR96</user>
    <text>_never_ is a big word. If it is truly impossible, either return a default (`thingThatReturnsResult |&amp;gt; Result.withDefault "fallback"`) or crash.</text>
  </message>
  <message>
    <ts>2017-07-13T03:43:43.783919</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U3CUFAX4H&gt; I wish there was a nicer way to handle that kind of thing, but you can consider it a bit of a feature that there isn't.</text>
  </message>
  <message>
    <ts>2017-07-13T03:44:13.792579</ts>
    <user>U57KYFW67</user>
    <text>What you have is an ugly solution, but it also signals that there IS that possibility (or at least you haven't disprove it in the type system)</text>
  </message>
  <message>
    <ts>2017-07-13T03:44:17.793915</ts>
    <user>U0CLDU8UB</user>
    <text>Yeah, I was going to ask what sort of sugar you're referring to in Elm?</text>
  </message>
  <message>
    <ts>2017-07-13T03:45:01.806952</ts>
    <user>U57KYFW67</user>
    <text>I often pepper in `Debug.crash "IMPOSSIBLE"` in that kind of situation, though.</text>
  </message>
  <message>
    <ts>2017-07-13T03:45:06.808806</ts>
    <user>U0CLDU8UB</user>
    <text>Since in my opinion Maybe doesn't have any sugar either.</text>
  </message>
  <message>
    <ts>2017-07-13T03:45:17.812065</ts>
    <user>U3CUFAX4H</user>
    <text>syntactic sugar, I understand that potentially handling error cases is important for the type system in this case but I am generating the string list that is being parsed so no error can occur (if the code is correct, of course)</text>
  </message>
  <message>
    <ts>2017-07-13T03:46:41.837887</ts>
    <user>U57KYFW67</user>
    <text>You could do</text>
  </message>
  <message>
    <ts>2017-07-13T03:46:44.838741</ts>
    <user>U4872964V</user>
    <text>why are you generating a string list to parse?</text>
  </message>
  <message>
    <ts>2017-07-13T03:47:11.846880</ts>
    <user>U3CUFAX4H</user>
    <text>why do you always need to know what I'm doing with code I want to write? hahaha :smile:</text>
  </message>
  <message>
    <ts>2017-07-13T03:47:11.847045</ts>
    <user>U57KYFW67</user>
    <text>`Result.withDefault (Debug.crash "IMPOSSIBLE") thingThatReturnsResult` as well</text>
  </message>
  <message>
    <ts>2017-07-13T03:47:24.851333</ts>
    <user>U4872964V</user>
    <text>because therein often lies the solution :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-13T03:47:29.852866</ts>
    <user>U57KYFW67</user>
    <text>(tbh, I wish there was a crash that didn't require passing a `String` message...)</text>
  </message>
  <message>
    <ts>2017-07-13T03:47:41.856728</ts>
    <user>U0CLDU8UB</user>
    <text>Right. So I would maybe try incorporating the generation and the parsing (why do you need to make that into a String in the meantime?) into a single function so that you can never call the function with a non-working string.</text>
  </message>
  <message>
    <ts>2017-07-13T03:47:58.861713</ts>
    <user>U0CLDU8UB</user>
    <text>Then use Debug.crash and write fuzz tests.</text>
  </message>
  <message>
    <ts>2017-07-13T03:48:45.876089</ts>
    <user>U3CUFAX4H</user>
    <text>Sometimes code is written just because for me....</text>
  </message>
  <message>
    <ts>2017-07-13T03:49:21.887638</ts>
    <user>U0CLDU8UB</user>
    <text>in that case you'd still have to pass `()` or similar</text>
  </message>
  <message>
    <ts>2017-07-13T03:49:40.893732</ts>
    <user>U3SJEDR96</user>
    <text>makes me wonder how many `crash`'s you have in your code o_O</text>
  </message>
  <message>
    <ts>2017-07-13T03:49:53.897526</ts>
    <user>U0CLDU8UB</user>
    <text>true.</text>
  </message>
  <message>
    <ts>2017-07-13T03:49:58.899287</ts>
    <user>U3CUFAX4H</user>
    <text>@tic-tacs, right?! I really wanted to get a custom return for handling decoder errors and spent two day fidling with that, unfortunately I am not as good a programmer as I'd like yet.</text>
  </message>
  <message>
    <ts>2017-07-13T03:50:30.909774</ts>
    <user>U3SJEDR96</user>
    <text>What do you mean by that, exactly?</text>
  </message>
  <message>
    <ts>2017-07-13T03:50:45.914576</ts>
    <user>U0CLDU8UB</user>
    <text>There is one in my hobby game project, and none in the three real world customer projects I've worked on.</text>
  </message>
  <message>
    <ts>2017-07-13T03:50:47.915209</ts>
    <user>U3CUFAX4H</user>
    <text>decoders are a great use case for not having a string return</text>
  </message>
  <message>
    <ts>2017-07-13T03:51:09.922224</ts>
    <user>U4872964V</user>
    <text>There is always `""` if you are so inclined</text>
  </message>
  <message>
    <ts>2017-07-13T03:51:19.925420</ts>
    <user>U3CUFAX4H</user>
    <text>the underlying java script that handle the Result Error case</text>
  </message>
  <message>
    <ts>2017-07-13T03:51:27.928329</ts>
    <user>U3CUFAX4H</user>
    <text>but my JS is poor</text>
  </message>
  <message>
    <ts>2017-07-13T03:51:48.934893</ts>
    <user>U3SJEDR96</user>
    <text>I mean, what's the goal? Stronger error types? Or...?</text>
  </message>
  <message>
    <ts>2017-07-13T03:52:28.947725</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U3SJEDR96&gt; At least Elm doesn't allow Haskell's one-case pattern matching lets....</text>
  </message>
  <message>
    <ts>2017-07-13T03:52:48.953832</ts>
    <user>U57KYFW67</user>
    <text>I have some old code for my IRC bot which, if another human ever laid eyes on it, I would never be allowed to program ever again....</text>
  </message>
  <message>
    <ts>2017-07-13T03:54:06.978274</ts>
    <user>U3CUFAX4H</user>
    <text>Passing which ever err type you want to return to the function type declaration and having that be returned, in the same way that you should provide the string in case of an err:
```
case thingy thing of
  Ok properGood -&amp;gt;
    do some processing returning 'Ok whatever'
  Err msg -&amp;gt;
    Err (TypeToReturnAsErr contentOfErrorThing)
```</text>
  </message>
  <message>
    <ts>2017-07-13T03:54:49.991776</ts>
    <user>U3SJEDR96</user>
    <text>this is out of curiosity, really :slightly_smiling_face: I've played around with decoders a lot, and experimented with stronger error types (&lt;http://package.elm-lang.org/packages/zwilias/json-decode-exploration/3.0.0/Json-Decode-Exploration&gt;) and a simpler version of that is also coming to Elm in 0.19</text>
  </message>
  <message>
    <ts>2017-07-13T03:54:56.993693</ts>
    <user>U57KYFW67</user>
    <text>That looks like you could probably make use of `Result.map`</text>
  </message>
  <message>
    <ts>2017-07-13T03:55:23.002561</ts>
    <user>U3SJEDR96</user>
    <text>Oh, right. I could actually add a `failWith : Error -&amp;gt; Decoder a` option :thinking_face:</text>
  </message>
  <message>
    <ts>2017-07-13T03:55:27.003846</ts>
    <user>U57KYFW67</user>
    <text>`Result.map` allows you to transform data contained inside a result.... if there is any.... otherwise, it keeps the error the same</text>
  </message>
  <message>
    <ts>2017-07-13T03:55:50.011334</ts>
    <user>U0CLDU8UB</user>
    <text>&lt;https://github.com/ohanhi/ohanhi.com/blob/master/site.hs#L105-L110&gt; :grimacing:</text>
  </message>
  <message>
    <ts>2017-07-13T03:57:21.040577</ts>
    <user>U3CUFAX4H</user>
    <text>&lt;@U3SJEDR96&gt;, isn't that what the null decoder does?</text>
  </message>
  <message>
    <ts>2017-07-13T03:57:30.043408</ts>
    <user>U3CUFAX4H</user>
    <text>(kinda)</text>
  </message>
  <message>
    <ts>2017-07-13T03:58:10.056362</ts>
    <user>U3SJEDR96</user>
    <text>If you're using `null ERROR` and checking on `Ok ERROR`... Maybe? But... Ew :scream:</text>
  </message>
  <message>
    <ts>2017-07-13T03:58:38.065745</ts>
    <user>U3SJEDR96</user>
    <text>considering that sends cold shivers down my spine</text>
  </message>
  <message>
    <ts>2017-07-13T03:58:49.069389</ts>
    <user>U3CUFAX4H</user>
    <text>well, no, I was only remarking on your type sig.</text>
  </message>
  <message>
    <ts>2017-07-13T03:59:14.077403</ts>
    <user>U57KYFW67</user>
    <text>I haven't touched Haskell in a while. I should learn the new Stackage package manager so I can hack on the elm compiler.</text>
  </message>
  <message>
    <ts>2017-07-13T03:59:26.081967</ts>
    <user>U3CUFAX4H</user>
    <text>null decoder `find this or if err then find this ...` if you chain it together.</text>
  </message>
  <message>
    <ts>2017-07-13T04:00:26.103036</ts>
    <user>U3SJEDR96</user>
    <text>I have a feeling we're talking about completely different things, here</text>
  </message>
  <message>
    <ts>2017-07-13T04:03:07.157762</ts>
    <user>U4872964V</user>
    <text>&lt;@U3SJEDR96&gt; maybe have `ErrorType s = ... | Custom s` too :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-13T04:03:41.169203</ts>
    <user>U4872964V</user>
    <text>when we're going all custom on the errors</text>
  </message>
  <message>
    <ts>2017-07-13T04:04:11.178261</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, was considering that, too. `Decoder e a` seems like it could work, actually</text>
  </message>
  <message>
    <ts>2017-07-13T04:05:43.209916</ts>
    <user>U4872964V</user>
    <text>Now I'm sort of thinking about how to have extensible union types</text>
  </message>
  <message>
    <ts>2017-07-13T04:07:14.242268</ts>
    <user>U57KYFW67</user>
    <text>boo hiss at extensible union types! The goodness of having a fixed set of constructors is that our `case` statements can be complete.</text>
  </message>
  <message>
    <ts>2017-07-13T04:08:44.274226</ts>
    <user>U4872964V</user>
    <text>well, maybe this is not for &lt;#C192T0Q1E|beginners&gt; :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-13T05:37:13.188266</ts>
    <user>U641LDZFU</user>
    <text>Morning everyone :slightly_smiling_face: I'm looking for a function that groups a list of records based on a field value i.e. ```[{id= 1}, {id= 2}, {id=1}] should output [[{id=1}, {id=1}], [id=2]]```</text>
  </message>
  <message>
    <ts>2017-07-13T05:38:03.205912</ts>
    <user>U641LDZFU</user>
    <text>I have had a wee look at the docs for list, and list.extra</text>
  </message>
  <message>
    <ts>2017-07-13T05:38:10.208513</ts>
    <user>U641LDZFU</user>
    <text>but nothing jumped out</text>
  </message>
  <message>
    <ts>2017-07-13T05:38:15.210478</ts>
    <user>U1NME8MS8</user>
    <text>Did someone tried to implement lazy loading images before in elm? I fear I need some JS for that</text>
  </message>
  <message>
    <ts>2017-07-13T05:40:47.264315</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U641LDZFU&gt; I think you want this: &lt;http://package.elm-lang.org/packages/elm-community/list-extra/6.1.0/List-Extra#groupWhile&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T05:41:45.284615</ts>
    <user>U641LDZFU</user>
    <text>Thanks &lt;@U57KYFW67&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T05:41:47.285234</ts>
    <user>U641LDZFU</user>
    <text>List.Extra.groupWhile (\a b-&amp;gt; a.id == b.id) [{id= 1}, {id= 2}, {id=1}]
[[{ id = 1 }],[{ id = 2 }],[{ id = 1 }]] : List (List { id : number })</text>
  </message>
  <message>
    <ts>2017-07-13T05:42:07.292237</ts>
    <user>U641LDZFU</user>
    <text>So I would have to sort the list based on the id first for this to be effective?</text>
  </message>
  <message>
    <ts>2017-07-13T05:42:54.307871</ts>
    <user>U57KYFW67</user>
    <text>I'm actually looking at that.... the name makes it sound like it....</text>
  </message>
  <message>
    <ts>2017-07-13T05:43:05.311817</ts>
    <user>U57KYFW67</user>
    <text>In Haskell, the function is called `groupBy` and I don't think it requires sorting</text>
  </message>
  <message>
    <ts>2017-07-13T05:43:21.317574</ts>
    <user>U57KYFW67</user>
    <text>I'm wondering if that's why the name is different</text>
  </message>
  <message>
    <ts>2017-07-13T05:43:21.317609</ts>
    <user>U641LDZFU</user>
    <text>There was a nice discussion &lt;https://github.com/elm-community/elm-list-extra/issues/38&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T05:45:13.357411</ts>
    <user>U3SJEDR96</user>
    <text>There is a `groupBy` that gives you a dict in `dict-extra`. Doing `values` on that should give you what you need.. `yourList |&amp;gt; Dict.Extra.groupBy .id |&amp;gt; Dict.values`</text>
  </message>
  <message>
    <ts>2017-07-13T05:46:08.376718</ts>
    <user>U57KYFW67</user>
    <text>Hmm. Interesting discussion. I'm too tired to dig into the details right now, but I can imagine Haskell doesn't do this kind of thing right :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-13T05:46:58.394769</ts>
    <user>U641LDZFU</user>
    <text>I will have a go with that, thanks &lt;@U3SJEDR96&gt; !</text>
  </message>
  <message>
    <ts>2017-07-13T05:50:15.462719</ts>
    <user>U641LDZFU</user>
    <text>```[{id= 1}, {id=2}, {id=1}] |&amp;gt; Dict.Extra.groupBy .id |&amp;gt; Dict.values
[[{ id = 1 },{ id = 1 }],[{ id = 2 }]] : List (List { id : number })
```</text>
  </message>
  <message>
    <ts>2017-07-13T05:50:22.465432</ts>
    <user>U57KYFW67</user>
    <text>I found a typo in a docstring. I corrected it, but I want to make a link. Is there a way to do that?</text>
  </message>
  <message>
    <ts>2017-07-13T05:50:22.465458</ts>
    <user>U641LDZFU</user>
    <text>Magic, thanks again!</text>
  </message>
  <message>
    <ts>2017-07-13T05:50:46.473742</ts>
    <user>U57KYFW67</user>
    <text>It's a technical term, and it deserves a link to Wikipedia, I think</text>
  </message>
  <message>
    <ts>2017-07-13T05:55:32.575411</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U57KYFW67&gt; `[name of link](url)`</text>
  </message>
  <message>
    <ts>2017-07-13T05:56:10.589291</ts>
    <user>U3SJEDR96</user>
    <text>alternatively, `[name of link][]` and at the bottom, `[name of link]: url` (i.e. a sort of reference that is inlined while rendering)</text>
  </message>
  <message>
    <ts>2017-07-13T05:59:02.650762</ts>
    <user>U57KYFW67</user>
    <text>yeah. Thanks :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-13T06:00:56.693263</ts>
    <user>U57KYFW67</user>
    <text>the name `groupWhileTransitively` is bad :disappointed: lol</text>
  </message>
  <message>
    <ts>2017-07-13T06:14:04.953832</ts>
    <user>U57KYFW67</user>
    <text>Yeah. I'm not a fan of how these functions look. I'm not sure it could be improved, though.</text>
  </message>
  <message>
    <ts>2017-07-13T06:53:57.678594</ts>
    <user>U64MK7215</user>
    <text>is there any sample json request code built in elm?</text>
  </message>
  <message>
    <ts>2017-07-13T07:02:51.835850</ts>
    <user>U4872964V</user>
    <text>&lt;@U64MK7215&gt; json request code?</text>
  </message>
  <message>
    <ts>2017-07-13T07:08:29.933498</ts>
    <user>U64MK7215</user>
    <text>Yes. I want the complete elm program</text>
  </message>
  <message>
    <ts>2017-07-13T07:09:53.958045</ts>
    <user>U3SJEDR96</user>
    <text>&lt;http://elm-lang.org/examples/http&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T07:11:11.981095</ts>
    <user>U4872964V</user>
    <text>are you talking about the JSONRequest object or just general HTTP requests?</text>
  </message>
  <message>
    <ts>2017-07-13T07:12:53.010151</ts>
    <user>U4872964V</user>
    <text>&lt;https://guide.elm-lang.org/architecture/effects/http.html&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T07:13:27.019663</ts>
    <user>U64MK7215</user>
    <text>Json request object. 
I want an exmaple of an elm program,not just a code snippet</text>
  </message>
  <message>
    <ts>2017-07-13T07:15:15.049661</ts>
    <user>U4872964V</user>
    <text>&lt;https://github.com/rtfeldman/elm-spa-example&gt; perhaps?</text>
  </message>
  <message>
    <ts>2017-07-13T07:15:29.053482</ts>
    <user>U4872964V</user>
    <text>not sure what you are after actually</text>
  </message>
  <message>
    <ts>2017-07-13T07:15:42.057071</ts>
    <user>U4872964V</user>
    <text>almost all Elm programs use http requests</text>
  </message>
  <message>
    <ts>2017-07-13T07:19:01.112691</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U64MK7215&gt; ^that's an example. Perhaps you could clarify what you're looking for, and why :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-13T07:38:14.439726</ts>
    <user>U3LUC6SNS</user>
    <text>I get the following structure as the result of parsing:
```
&amp;gt; m = run latex "\\emph{foo} " |&amp;gt; latexGet 
Macro { name = "emph", args = ["foo"] } : LatexParser.Parser.Latex
```
Here `latex` is a parser and `latexGet` is the code
```
latexGet r =
    r |&amp;gt; Result.withDefault defaultLatex
```
I would like to be able to say `m.name`, `m.args`, but this does not work because of a type problem:
```
&amp;gt; m.name
-- TYPE MISMATCH ----------
`m` does not have a field named `name`.
6|   m.name
     ^^^^^^
The type of `m` is:
    Latex
Which does not contain a field named `name`.
```
Makes sense.  But `Latex` is a union type with `Macro` as a member:
```
type Latex
    = Macro Macro_
    | Environment Environment_
    | InlineMath InlineMath_
    | DisplayMath DisplayMath_
    | Words Words_
```
where
```
type alias Macro_ =
    { name : String
    , args : List String
    }
```
What should I be doing?</text>
  </message>
  <message>
    <ts>2017-07-13T07:39:43.464634</ts>
    <user>U4872964V</user>
    <text>you should do `case` on your value first, I suppose</text>
  </message>
  <message>
    <ts>2017-07-13T07:40:18.474473</ts>
    <user>U4872964V</user>
    <text>you have to handle all types of Latex</text>
  </message>
  <message>
    <ts>2017-07-13T07:40:23.475923</ts>
    <user>U57KYFW67</user>
    <text>Yep. Your `Latex` object may (or may no) be a macro. Maybe it's an `Environment`. If it is, the environment doesn't have a "name"</text>
  </message>
  <message>
    <ts>2017-07-13T07:40:26.476854</ts>
    <user>U3LUC6SNS</user>
    <text>OK, that makes sense</text>
  </message>
  <message>
    <ts>2017-07-13T07:41:05.488424</ts>
    <user>U3LUC6SNS</user>
    <text>Thanks &lt;@U4872964V&gt; and &lt;@U57KYFW67&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T07:51:37.668876</ts>
    <user>U3LUC6SNS</user>
    <text>Oops, a difficulty:  I tried this
```
latexGetValue result =
    let
        r =
            latexGet result
    in
        case r of
            Macro v -&amp;gt;
                v

            Environment v -&amp;gt;
                v
           etc.
```
but it does not work because in for `Macro`, `v` is a `Macro_`, for `Environment`, `v` is an `Environment_`, etc.  A case statement requires the values for each alternative to be of the same type.</text>
  </message>
  <message>
    <ts>2017-07-13T07:53:04.694403</ts>
    <user>U3LUC6SNS</user>
    <text>I'd like, if possible, to have one function that when applied to a parser result, gives me a `Macro_`, an `Environment_`, etc. as the case may be.</text>
  </message>
  <message>
    <ts>2017-07-13T07:53:42.705788</ts>
    <user>U4872964V</user>
    <text>well, that's not how the type system works in Elm. A value can only have one type, if you want to represent multiple types you make a union type, like the `Latex` type</text>
  </message>
  <message>
    <ts>2017-07-13T07:54:11.714492</ts>
    <user>U4872964V</user>
    <text>so, instead, you do the stuff you want to do inside the `case` statement</text>
  </message>
  <message>
    <ts>2017-07-13T07:54:50.726033</ts>
    <user>U3LUC6SNS</user>
    <text>OK, I'll think about how to proceed -- thanks!</text>
  </message>
  <message>
    <ts>2017-07-13T07:55:04.730144</ts>
    <user>U4872964V</user>
    <text>first question, what do you want to do with the value you have?</text>
  </message>
  <message>
    <ts>2017-07-13T07:55:58.745952</ts>
    <user>U3LUC6SNS</user>
    <text>My first goal is to write tests to make sure that as I change and add things, I haven't broken what is already built.  To do that I have to get into the inner structure of the parse results.</text>
  </message>
  <message>
    <ts>2017-07-13T07:56:20.752611</ts>
    <user>U3LUC6SNS</user>
    <text>Eventually I will use parse results to produce html</text>
  </message>
  <message>
    <ts>2017-07-13T07:56:37.757451</ts>
    <user>U4872964V</user>
    <text>so, you are writing a test, where you parse a given value and want to check if it parses correctly?</text>
  </message>
  <message>
    <ts>2017-07-13T07:56:42.759113</ts>
    <user>U3LUC6SNS</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-13T07:57:03.765358</ts>
    <user>U3LUC6SNS</user>
    <text>I guess I will have to take a case-by-case approach</text>
  </message>
  <message>
    <ts>2017-07-13T07:57:16.769181</ts>
    <user>U4872964V</user>
    <text>yes, so then you make a `case` statement where you do that check for the value you are supposed to get. All other cases will be failed tests.</text>
  </message>
  <message>
    <ts>2017-07-13T07:57:31.773787</ts>
    <user>U3LUC6SNS</user>
    <text>OK, thanks, I will try that</text>
  </message>
  <message>
    <ts>2017-07-13T08:00:39.832959</ts>
    <user>U4872964V</user>
    <text>something like this
```
case r of
    Macro v -&amp;gt;
        Expect.equal "emph" v.name
    _ -&amp;gt;
        Expect.fail "wrong type"
```</text>
  </message>
  <message>
    <ts>2017-07-13T08:03:29.887565</ts>
    <user>U64MK7215</user>
    <text>I want to replicate ajax code in elm</text>
  </message>
  <message>
    <ts>2017-07-13T08:04:08.900324</ts>
    <user>U3SJEDR96</user>
    <text>Or even `Expect.equal (Macro { name = "foo", args = [] })`</text>
  </message>
  <message>
    <ts>2017-07-13T08:05:12.921980</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U64MK7215&gt; - Right. So that example I posted makes HTTP requests, receives JSON, and uses that JSON to drive the application state.</text>
  </message>
  <message>
    <ts>2017-07-13T08:05:37.930696</ts>
    <user>U64MK7215</user>
    <text>$(document).ready(function () {
        hidebody();
        $.ajax({
            type: 'POST',
            url: "/load",
            contentType: false,
            data: null,
            processData: false,
            success: function (data) {
                $("#loader").hide();
                showbody();
            },
            error: function (data) {
                console.log(data);
            }
        });</text>
  </message>
  <message>
    <ts>2017-07-13T08:05:59.938006</ts>
    <user>U4872964V</user>
    <text>&lt;@U3SJEDR96&gt; yes, for the special case of checking full equality, that works too :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-13T08:07:09.960567</ts>
    <user>U3SJEDR96</user>
    <text>Exactly. Just make sure we cover all bases and don't miss the "obvious" :wink:</text>
  </message>
  <message>
    <ts>2017-07-13T08:08:37.989179</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U4872964V&gt;, &lt;@U3SJEDR96&gt;, thankou!!! I have my first test working, so should be able to do what I need.</text>
  </message>
  <message>
    <ts>2017-07-13T08:18:00.175648</ts>
    <user>U29JSAR9S</user>
    <text>I'm trying to make the following function point free and can't figure out why I'm getting an error when I do so:
```
whoAteThePies : List Int -&amp;gt; List Int -&amp;gt; ( Int, Int )
whoAteThePies a b =
    List.map2 (,) a b
        |&amp;gt; List.indexedMap flipFlopSort
        |&amp;gt; List.map (mapTuple evenToZero)
        |&amp;gt; List.foldr sumTuples ( 0, 0 )
```
Anyone have any ideas?</text>
  </message>
  <message>
    <ts>2017-07-13T08:18:54.194435</ts>
    <user>U4872964V</user>
    <text>well, you should look at what the error says :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-13T08:19:26.205855</ts>
    <user>U4872964V</user>
    <text>hard to say without knowing what those other functions are</text>
  </message>
  <message>
    <ts>2017-07-13T08:20:44.231990</ts>
    <user>U29JSAR9S</user>
    <text>```
whoAteThePies : List Int -&amp;gt; List Int -&amp;gt; ( Int, Int )
whoAteThePies =
    List.map2 (,)
        |&amp;gt; List.indexedMap flipFlopSort
        |&amp;gt; List.map (mapTuple evenToZero)
        |&amp;gt; List.foldr sumTuples ( 0, 0 )
```
gives me
```
The right side of (|&amp;gt;) is causing a type mismatch.

8|     List.map2 (,)
9|&amp;gt;        |&amp;gt; List.indexedMap flipFlopSort

(|&amp;gt;) is expecting the right side to be a:

    (List Int -&amp;gt; List Int -&amp;gt; List ( Int, Int )) -&amp;gt; a

But the right side is:

    (List ( Int, Int )) -&amp;gt; List ( Int, Int )
```

and 

```
whoAteThePies : List Int -&amp;gt; List Int -&amp;gt; ( Int, Int )
whoAteThePies =
    List.map2 (,)
        &amp;gt;&amp;gt; List.indexedMap flipFlopSort
        &amp;gt;&amp;gt; List.map (mapTuple evenToZero)
        &amp;gt;&amp;gt; List.foldr sumTuples ( 0, 0 )
```

gives me

```
The right side of (&amp;gt;&amp;gt;) is causing a type mismatch.

8|     List.map2 (,)
9|&amp;gt;        &amp;gt;&amp;gt; List.indexedMap flipFlopSort

(&amp;gt;&amp;gt;) is expecting the right side to be a:

    (List Int -&amp;gt; List ( Int, Int )) -&amp;gt; c

But the right side is:

    (List ( Int, Int )) -&amp;gt; List ( Int, Int )
```</text>
  </message>
  <message>
    <ts>2017-07-13T08:21:51.254956</ts>
    <user>U29JSAR9S</user>
    <text>mainly I think I'm misunderstanding something because I thought

```
whoAteThePies a b =
    List.map2 (,) a b
```

was essentially the same as

```
whoAteThePies =
    List.map2 (,)
```</text>
  </message>
  <message>
    <ts>2017-07-13T08:22:33.269741</ts>
    <user>U4872964V</user>
    <text>it is, but not if you put stuff after it</text>
  </message>
  <message>
    <ts>2017-07-13T08:23:28.288351</ts>
    <user>U4872964V</user>
    <text>you can't do "point free style" with two arguments though</text>
  </message>
  <message>
    <ts>2017-07-13T08:23:47.294706</ts>
    <user>U29JSAR9S</user>
    <text>if I'm piping things onwards you mean?</text>
  </message>
  <message>
    <ts>2017-07-13T08:23:50.296005</ts>
    <user>U4872964V</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-13T08:24:00.299206</ts>
    <user>U29JSAR9S</user>
    <text>ah, ok</text>
  </message>
  <message>
    <ts>2017-07-13T08:24:09.302280</ts>
    <user>U4872964V</user>
    <text>you can only `|&amp;gt;` and `&amp;gt;&amp;gt;` one value</text>
  </message>
  <message>
    <ts>2017-07-13T08:24:19.306087</ts>
    <user>U29JSAR9S</user>
    <text>right, ok - that makes sense</text>
  </message>
  <message>
    <ts>2017-07-13T08:25:28.330323</ts>
    <user>U3SJEDR96</user>
    <text>you could make a `&amp;gt;&amp;gt;&amp;gt;` but that seems symbol-heavy and won't get the special treatment `&amp;gt;&amp;gt;` and `|&amp;gt;` do :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-13T08:25:45.336112</ts>
    <user>U4872964V</user>
    <text>it would also induce headache</text>
  </message>
  <message>
    <ts>2017-07-13T08:26:02.342053</ts>
    <user>U29JSAR9S</user>
    <text>yeah, I'm not so attached to point free that I'd do that</text>
  </message>
  <message>
    <ts>2017-07-13T08:26:12.345611</ts>
    <user>U29JSAR9S</user>
    <text>mostly I wanted to understand why it wasn't working</text>
  </message>
  <message>
    <ts>2017-07-13T08:29:02.405208</ts>
    <user>U4872964V</user>
    <text>I never write named functions point-free, I only use it for one-off small functions that I pass to `map` etc</text>
  </message>
  <message>
    <ts>2017-07-13T08:29:34.416505</ts>
    <user>U4872964V</user>
    <text>much easier just to write out the arguments</text>
  </message>
  <message>
    <ts>2017-07-13T08:41:11.679993</ts>
    <user>U5WD40ZA9</user>
    <text>Anyone know a data picker package where you can set available dates? Or set an interval of what dates are ok to pick?</text>
  </message>
  <message>
    <ts>2017-07-13T08:48:40.859219</ts>
    <user>U3LUC6SNS</user>
    <text>I can report that `elm-test` works very well.  I had a bit of a rough start getting the first test to work, but with the help of the community here I was up and running in under 20 min.</text>
  </message>
  <message>
    <ts>2017-07-13T08:54:38.008612</ts>
    <user>U4872964V</user>
    <text>&lt;@U5WD40ZA9&gt; &lt;http://package.elm-lang.org/packages/elm-community/elm-datepicker/latest&gt; has an `isDisabled` setting</text>
  </message>
  <message>
    <ts>2017-07-13T08:55:31.031055</ts>
    <user>U5WS7CJLV</user>
    <text>I want to toString a float representing money.  Elegant way to round my money string to 2 decimal places?</text>
  </message>
  <message>
    <ts>2017-07-13T08:55:36.033031</ts>
    <user>U4872964V</user>
    <text>&lt;@U5WD40ZA9&gt; &lt;https://ellie-app.com/pwFvvCqBgYa1/0&gt; doesn't let you pick saturdays or sundays for instance</text>
  </message>
  <message>
    <ts>2017-07-13T08:55:53.040931</ts>
    <user>U4872964V</user>
    <text>&lt;@U5WS7CJLV&gt; I always use ints for money</text>
  </message>
  <message>
    <ts>2017-07-13T08:56:11.048600</ts>
    <user>U5WS7CJLV</user>
    <text>separate int for the decimal bit?</text>
  </message>
  <message>
    <ts>2017-07-13T08:56:15.050725</ts>
    <user>U4872964V</user>
    <text>no, times 100</text>
  </message>
  <message>
    <ts>2017-07-13T08:56:22.053501</ts>
    <user>U5WD40ZA9</user>
    <text>&lt;@U4872964V&gt; thx!</text>
  </message>
  <message>
    <ts>2017-07-13T08:56:59.069429</ts>
    <user>U5WS7CJLV</user>
    <text>so you toString your int, then insert a decimal?</text>
  </message>
  <message>
    <ts>2017-07-13T08:57:06.072751</ts>
    <user>U4872964V</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-13T08:57:43.088794</ts>
    <user>U4872964V</user>
    <text>but there are packages for rounding too, but since money is a very special kind of value it's best to use ints</text>
  </message>
  <message>
    <ts>2017-07-13T08:58:02.096859</ts>
    <user>U5WS7CJLV</user>
    <text>will run with that, thanks norpan!</text>
  </message>
  <message>
    <ts>2017-07-13T08:58:43.115136</ts>
    <user>U3LUC6SNS</user>
    <text>I have the following code 
```
macro : Parser Macro_
macro =
    inContext "macro" &amp;lt;|
        succeed Macro_
            |. symbol "\\"
            |= keep zeroOrMore (\c -&amp;gt; c /= '{')
            |= repeat zeroOrMore arg
            |. ignore (Exactly 1) (\c -&amp;gt; c == ' ' || c == '\n')
```
and would like to modify it to handle the case when there is no more input, i.e., no more characters to be consumed by the parser.  Is there some kind of defaullt character that the parser uses to signal end of input?  Or should I just append a space or a `\n` to the end of input to guarantee good behavior?</text>
  </message>
  <message>
    <ts>2017-07-13T09:00:21.161882</ts>
    <user>U4872964V</user>
    <text>&lt;@U3LUC6SNS&gt; i'd handle spaces outside of the parser for macro</text>
  </message>
  <message>
    <ts>2017-07-13T09:00:54.177679</ts>
    <user>U4872964V</user>
    <text>or is the space part of the macro definition?</text>
  </message>
  <message>
    <ts>2017-07-13T09:03:54.258342</ts>
    <user>U3LUC6SNS</user>
    <text>Hmm. At the moment I use space or `\n` to signal the end of the macro definition.  I could do it in a better way except for macros with no arguments: zero: `\foo`, one: `\foo{bar}`, two: `\foo{bar}{baz}` ...</text>
  </message>
  <message>
    <ts>2017-07-13T09:07:04.343912</ts>
    <user>U3SJEDR96</user>
    <text>there is `Parser.end` which succeeds with `()` if the parser reached the end of your input</text>
  </message>
  <message>
    <ts>2017-07-13T09:07:42.361433</ts>
    <user>U3SJEDR96</user>
    <text>so you'd do something like `|. oneOf [ ignore (Exactly 1) (\c -&amp;gt; c == ' ' || c == '\n'), Parser.end ]` I think</text>
  </message>
  <message>
    <ts>2017-07-13T09:08:09.373988</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt; I will give that  a try.  Thanks! -- Works!! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-13T09:17:16.633857</ts>
    <user>U641LDZFU</user>
    <text>If I have a list in my model, and I am updating the first element (which changes often) of it all the time, is the best way to use List.drop 1 and then re - prepend my updated list item with :: ?</text>
  </message>
  <message>
    <ts>2017-07-13T09:18:07.659931</ts>
    <user>U3SJEDR96</user>
    <text>if it truly changes that much, you could consider `type alias NonEmpty a = ( a, List a )`</text>
  </message>
  <message>
    <ts>2017-07-13T09:18:53.683129</ts>
    <user>U641LDZFU</user>
    <text>a tuple?</text>
  </message>
  <message>
    <ts>2017-07-13T09:19:11.692262</ts>
    <user>U641LDZFU</user>
    <text>with the "head" item and the "tail" items?</text>
  </message>
  <message>
    <ts>2017-07-13T09:19:59.716362</ts>
    <user>U3SJEDR96</user>
    <text>yep</text>
  </message>
  <message>
    <ts>2017-07-13T09:20:04.718699</ts>
    <user>U641LDZFU</user>
    <text>wow!</text>
  </message>
  <message>
    <ts>2017-07-13T09:20:25.729524</ts>
    <user>U3SJEDR96</user>
    <text>or wrapped in a type: &lt;http://package.elm-lang.org/packages/mgold/elm-nonempty-list/latest/List-Nonempty&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T09:20:37.734479</ts>
    <user>U641LDZFU</user>
    <text>B.T.W if you are ever thirsty and in Berlin, I owe you a beer / gingerbeer!</text>
  </message>
  <message>
    <ts>2017-07-13T09:20:53.743203</ts>
    <user>U4872964V</user>
    <text>or rethink your use of list completely, perhaps a record type instead</text>
  </message>
  <message>
    <ts>2017-07-13T09:21:34.763541</ts>
    <user>U641LDZFU</user>
    <text>it's a list of records :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-13T09:21:43.768166</ts>
    <user>U641LDZFU</user>
    <text>they kinda stream in</text>
  </message>
  <message>
    <ts>2017-07-13T09:21:51.771890</ts>
    <user>U641LDZFU</user>
    <text>it's called visitedNodes</text>
  </message>
  <message>
    <ts>2017-07-13T09:26:11.902167</ts>
    <user>U4872964V</user>
    <text>so if they stream in, why do you update them?</text>
  </message>
  <message>
    <ts>2017-07-13T09:27:22.937695</ts>
    <user>U641LDZFU</user>
    <text>the head of the list has some state which needs to go from pending to sent for display</text>
  </message>
  <message>
    <ts>2017-07-13T09:27:28.941165</ts>
    <user>U641LDZFU</user>
    <text>with a little delay</text>
  </message>
  <message>
    <ts>2017-07-13T09:27:36.945498</ts>
    <user>U641LDZFU</user>
    <text>think ... is typing</text>
  </message>
  <message>
    <ts>2017-07-13T09:28:18.967234</ts>
    <user>U4872964V</user>
    <text>what happens if a new thing streams in while it's pending?</text>
  </message>
  <message>
    <ts>2017-07-13T09:28:52.985066</ts>
    <user>U641LDZFU</user>
    <text>it won't, it's a very controlled stream :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-13T09:28:56.987281</ts>
    <user>U641LDZFU</user>
    <text>i.e. clicks</text>
  </message>
  <message>
    <ts>2017-07-13T09:29:15.997251</ts>
    <user>U641LDZFU</user>
    <text>and things are unclickable when the state is pending</text>
  </message>
  <message>
    <ts>2017-07-13T09:29:39.009467</ts>
    <user>U641LDZFU</user>
    <text>(its not really a stream at all is it?)</text>
  </message>
  <message>
    <ts>2017-07-13T09:29:46.012816</ts>
    <user>U4872964V</user>
    <text>:slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-13T09:42:40.424602</ts>
    <user>U3LUC6SNS</user>
    <text>I'd like to do something like this:
```
|. oneOf [ symbol "\n", symbol "\\" ]
```
but where in place of `symbol "\\"` there is `foo "\\"` which accepts `"\\"` but does not consume it.  That is, `"\\"` remains in the input stream to be parsed.</text>
  </message>
  <message>
    <ts>2017-07-13T09:46:22.546080</ts>
    <user>U3SJEDR96</user>
    <text>I wonder if you could use `delayedCommit (fail "") (symbol "\\")` :thinking_face:</text>
  </message>
  <message>
    <ts>2017-07-13T09:47:14.574067</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, I will try that</text>
  </message>
  <message>
    <ts>2017-07-13T09:48:01.598862</ts>
    <user>U3SJEDR96</user>
    <text>I'm not sure, really, but who knows.. There probably is a better way to express that than some sort of `peek`</text>
  </message>
  <message>
    <ts>2017-07-13T11:03:00.315212</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, re `peek` etc., I couldn't get that to work -- will come back to it after I fix some other things.  

Is there a way to display the unparsed part of input?  For example, in 
```
&amp;gt; run word "ab cd"
Ok "ab" : Result.Result Parser.Error String
```
I'd like to see the "remainder", which is `cd` or ` cd`.  I think most of my problems are one-character mistakes resulting from my lack of understanding of this.</text>
  </message>
  <message>
    <ts>2017-07-13T13:02:01.556161</ts>
    <user>U5DU3L996</user>
    <text>Hello people, I have a doubt about elm 0.18 hot reloading. I work mainly with clojurescript and figwheel, where when I change the ui behavior, figwheel reload only the new behavior without restarting the application state. I checked out elm-like with the Counter (buttons) example, and everytime I save the Main.elm with UI changes, the application state is restarted. It is pretty annoying :disappointed:  Is there another hot reloading environment for elm without webpack or something like that? Thanks!</text>
  </message>
  <message>
    <ts>2017-07-13T13:27:28.380788</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U5DU3L996&gt; That's the difference between live reloading and hot reloading.</text>
  </message>
  <message>
    <ts>2017-07-13T13:41:38.854276</ts>
    <user>U5DU3L996</user>
    <text>Ok, so, live reloading is reloading the browser, but just automated, and hot reloading is the nicer thing where the app behavior changes without changing the state? :upside_down_face:</text>
  </message>
  <message>
    <ts>2017-07-13T13:42:22.879322</ts>
    <user>U2M4VPZ9D</user>
    <text>&lt;@U5DU3L996&gt; did you take a look at &lt;https://www.npmjs.com/package/create-elm-app&gt;? It has support for hot reloading.</text>
  </message>
  <message>
    <ts>2017-07-13T13:47:45.058846</ts>
    <user>U5DU3L996</user>
    <text>Thanks &lt;@U2M4VPZ9D&gt;. create-elm-app use webpack and for some reason I don't like it too much :disappointed_relieved: but, if there are not other way ... :thinking_face:</text>
  </message>
  <message>
    <ts>2017-07-13T13:48:13.073743</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U5DU3L996&gt; The problem you mention is also one that users face when they accidentally or deliberately reload the browser.  I've addressed one tiny part of this problem by saving the user's time-limited login token to local storage and then reading that back in if the user is not logged in.  

This saves me from having to log in again each time I update the app, which is still in development.  One could do the same with the entire model, but for now I am waiting for a solution by someone who really knows what they are doing.  I know that Evan CZ was working on something along these lines.</text>
  </message>
  <message>
    <ts>2017-07-13T13:54:44.293722</ts>
    <user>U5DU3L996</user>
    <text>Thanks &lt;@U3LUC6SNS&gt;. I use hot reloading with clojurescript during development. The other issue you mention I think is related to the SPA's nature of the app. I think your solution is pretty valid along with push state and other tricks.</text>
  </message>
  <message>
    <ts>2017-07-13T13:58:40.426702</ts>
    <user>U5DU3L996</user>
    <text>Using local storage for the elm debugger log with auto-reloading during the app loading could mimic hot reloading.</text>
  </message>
  <message>
    <ts>2017-07-13T13:59:40.460930</ts>
    <user>U2GPAEU1L</user>
    <text>Caching in localStorage + live-reloading pretty much gets you to hot-reloading</text>
  </message>
  <message>
    <ts>2017-07-13T13:59:46.464480</ts>
    <user>U2GPAEU1L</user>
    <text>(I do that)</text>
  </message>
  <message>
    <ts>2017-07-13T14:02:43.565221</ts>
    <user>U5DU3L996</user>
    <text>Thanks for the confirmation &lt;@U2GPAEU1L&gt; . I'm going to try those ideas. Saludos!</text>
  </message>
  <message>
    <ts>2017-07-13T14:15:46.992933</ts>
    <user>U4872964V</user>
    <text>caching state or messages? or both?</text>
  </message>
  <message>
    <ts>2017-07-13T14:16:40.022422</ts>
    <user>U4872964V</user>
    <text>i see a case for both</text>
  </message>
  <message>
    <ts>2017-07-13T14:16:48.026971</ts>
    <user>U2GPAEU1L</user>
    <text>I was talking about state</text>
  </message>
  <message>
    <ts>2017-07-13T14:17:50.061308</ts>
    <user>U4872964V</user>
    <text>type of state changed =&amp;gt; use messages
type of messages changed =&amp;gt; use state</text>
  </message>
  <message>
    <ts>2017-07-13T14:18:47.093423</ts>
    <user>U4872964V</user>
    <text>bug in update function =&amp;gt; use messages</text>
  </message>
  <message>
    <ts>2017-07-13T14:30:49.495675</ts>
    <user>U601ELFEG</user>
    <text>Looking for some help on a `port` pattern: I have a piece of JS that does something, and calls back via a `Sub`</text>
  </message>
  <message>
    <ts>2017-07-13T14:31:32.520077</ts>
    <user>U601ELFEG</user>
    <text>Now, I want to invoke that JS (via `Cmd`) from three or four places in my code base... and then those different places need get their answer via the `Sub`</text>
  </message>
  <message>
    <ts>2017-07-13T14:32:26.550556</ts>
    <user>U601ELFEG</user>
    <text>so, it is like I somehow want to pass the `a -&amp;gt; Msg` function to the JS via the `Cmd`, and have it call back the `Sub` in a way the the right `Msg` gets returned to `update`</text>
  </message>
  <message>
    <ts>2017-07-13T14:33:01.570538</ts>
    <user>U601ELFEG</user>
    <text>all I can think of is to pass a `String` to out `port` and have it back with the sub.</text>
  </message>
  <message>
    <ts>2017-07-13T14:33:04.572532</ts>
    <user>U601ELFEG</user>
    <text>which is ick</text>
  </message>
  <message>
    <ts>2017-07-13T14:33:24.583608</ts>
    <user>U601ELFEG</user>
    <text>concretely, imagine my JS reads `localstorage`</text>
  </message>
  <message>
    <ts>2017-07-13T14:34:04.606232</ts>
    <user>U601ELFEG</user>
    <text>so I want     `port readLocalStorage : String -&amp;gt; Cmd msg`</text>
  </message>
  <message>
    <ts>2017-07-13T14:34:29.619710</ts>
    <user>U601ELFEG</user>
    <text>and  `port localStorageResult : (String -&amp;gt; Msg) -&amp;gt; Sub msg`</text>
  </message>
  <message>
    <ts>2017-07-13T14:34:38.624767</ts>
    <user>U3SQ42JJW</user>
    <text>Time for another Json.Decode Question anyone?</text>
  </message>
  <message>
    <ts>2017-07-13T14:34:39.625545</ts>
    <user>U23SA861Y</user>
    <text>might want to ask why so many modules are trying to read and write to local storage</text>
  </message>
  <message>
    <ts>2017-07-13T14:35:26.651630</ts>
    <user>U601ELFEG</user>
    <text>well - imagine for the moment that they are very compartmentalized: one module is storing view preferences, another is storing usage history, etc.</text>
  </message>
  <message>
    <ts>2017-07-13T14:35:29.652748</ts>
    <user>U601ELFEG</user>
    <text>they are not related</text>
  </message>
  <message>
    <ts>2017-07-13T14:35:51.664616</ts>
    <user>U23SA861Y</user>
    <text>sure they are, they are related in that you need to store them</text>
  </message>
  <message>
    <ts>2017-07-13T14:35:55.666787</ts>
    <user>U601ELFEG</user>
    <text>but I don't want to have to make `readLocalViewPrefs` and `localViewPrefsResult` --- for each</text>
  </message>
  <message>
    <ts>2017-07-13T14:36:25.683265</ts>
    <user>U601ELFEG</user>
    <text>assuming that I don't want to read them all at once - then</text>
  </message>
  <message>
    <ts>2017-07-13T14:36:36.689295</ts>
    <user>U601ELFEG</user>
    <text>I'm trying to not have lots of ports - and therefore lots of JS</text>
  </message>
  <message>
    <ts>2017-07-13T14:36:52.697832</ts>
    <user>U601ELFEG</user>
    <text>What I wish I could do is</text>
  </message>
  <message>
    <ts>2017-07-13T14:37:13.709126</ts>
    <user>U23SA861Y</user>
    <text>put the saveing and loading in one place with a ADT to select what you want to save or load from the model</text>
  </message>
  <message>
    <ts>2017-07-13T14:37:20.712735</ts>
    <user>U601ELFEG</user>
    <text>`port readlLocalStorage : (String, String -&amp;gt; Msg) -&amp;gt; Cmd msg`</text>
  </message>
  <message>
    <ts>2017-07-13T14:37:53.730745</ts>
    <user>U601ELFEG</user>
    <text>and `port localStorageResult : ((String, String -&amp;gt; Msg) -&amp;gt; Msg) -&amp;gt; Sub msg`</text>
  </message>
  <message>
    <ts>2017-07-13T14:38:17.744044</ts>
    <user>U601ELFEG</user>
    <text>where that 2nd element of the tuple is passed through JS</text>
  </message>
  <message>
    <ts>2017-07-13T14:38:26.748951</ts>
    <user>U601ELFEG</user>
    <text>but I suspect I can't do that</text>
  </message>
  <message>
    <ts>2017-07-13T14:39:02.768281</ts>
    <user>U601ELFEG</user>
    <text>but within that ADT</text>
  </message>
  <message>
    <ts>2017-07-13T14:39:11.772613</ts>
    <user>U601ELFEG</user>
    <text>to JS aren't I'm going to have to pass a string and get a string</text>
  </message>
  <message>
    <ts>2017-07-13T14:39:17.776150</ts>
    <user>U601ELFEG</user>
    <text>because I've got only one `Sub`, right?</text>
  </message>
  <message>
    <ts>2017-07-13T14:39:32.783898</ts>
    <user>U601ELFEG</user>
    <text>(only one `port`)</text>
  </message>
  <message>
    <ts>2017-07-13T14:40:33.816940</ts>
    <user>U601ELFEG</user>
    <text>`readUserPrefs : Cmd Msg`   and `readUserPrefs = readLocalStorage "userPrefs"`</text>
  </message>
  <message>
    <ts>2017-07-13T14:40:38.819816</ts>
    <user>U601ELFEG</user>
    <text>but then</text>
  </message>
  <message>
    <ts>2017-07-13T14:43:34.915345</ts>
    <user>U23SA861Y</user>
    <text>hmm this is the sort of thing that should be a task</text>
  </message>
  <message>
    <ts>2017-07-13T14:44:27.943898</ts>
    <user>U23SA861Y</user>
    <text>you should be able to blindly pass an ADT through JS without too much trouble</text>
  </message>
  <message>
    <ts>2017-07-13T14:44:35.948140</ts>
    <user>U23SA861Y</user>
    <text>I believe anyway</text>
  </message>
  <message>
    <ts>2017-07-13T14:45:34.980752</ts>
    <user>U23SA861Y</user>
    <text>hmm</text>
  </message>
  <message>
    <ts>2017-07-13T14:47:23.040564</ts>
    <user>U601ELFEG</user>
    <text>But - is Task the right way to go with this?</text>
  </message>
  <message>
    <ts>2017-07-13T14:47:45.052288</ts>
    <user>U601ELFEG</user>
    <text>or if I can pass an ADT, I could do that rather than the `String`</text>
  </message>
  <message>
    <ts>2017-07-13T14:47:51.055524</ts>
    <user>U23SA861Y</user>
    <text>as in, there should be a task library that allows for saving</text>
  </message>
  <message>
    <ts>2017-07-13T14:51:50.186869</ts>
    <user>U601ELFEG</user>
    <text>but I imagine I can't have that `a` in the `port` defs ....?</text>
  </message>
  <message>
    <ts>2017-07-13T14:52:09.197554</ts>
    <user>U601ELFEG</user>
    <text>maybe it has to be `StorageType`</text>
  </message>
  <message>
    <ts>2017-07-13T14:52:19.203380</ts>
    <user>U23SA861Y</user>
    <text>:confused:</text>
  </message>
  <message>
    <ts>2017-07-13T14:52:47.218857</ts>
    <user>U23SA861Y</user>
    <text>could just be verbose about it with one port/sub per stored category</text>
  </message>
  <message>
    <ts>2017-07-13T14:52:52.221460</ts>
    <user>U2LAL86AY</user>
    <text>Json.Encode.Value</text>
  </message>
  <message>
    <ts>2017-07-13T14:53:10.231415</ts>
    <user>U601ELFEG</user>
    <text>I want "Dear JS, do your thing with the nice String argument, and when the result is done, send it back through a subscription tagged with this ADT thing"</text>
  </message>
  <message>
    <ts>2017-07-13T14:54:24.272162</ts>
    <user>U601ELFEG</user>
    <text>one port/sub per is clear - but super sad since the JS it totally boilerplate</text>
  </message>
  <message>
    <ts>2017-07-13T14:55:08.295889</ts>
    <user>U23SA861Y</user>
    <text>yeah, then again ports kinda should be painful</text>
  </message>
  <message>
    <ts>2017-07-13T14:55:16.300507</ts>
    <user>U2LAL86AY</user>
    <text>i think what you want is to decode this ADT. YOu want many things done trough only 2 ports - one to js - one from js.</text>
  </message>
  <message>
    <ts>2017-07-13T14:55:18.302376</ts>
    <user>U601ELFEG</user>
    <text>which is why I want so few of them</text>
  </message>
  <message>
    <ts>2017-07-13T14:55:28.308255</ts>
    <user>U2LAL86AY</user>
    <text>yes you want only 2</text>
  </message>
  <message>
    <ts>2017-07-13T14:55:59.324776</ts>
    <user>U2LAL86AY</user>
    <text>you can have 2 ports - but you need a separate message for each of thouse actions</text>
  </message>
  <message>
    <ts>2017-07-13T14:56:02.326131</ts>
    <user>U601ELFEG</user>
    <text>hmmm.... okay, so send the 'marker' though as `Json.Value` - and then get it back...</text>
  </message>
  <message>
    <ts>2017-07-13T14:56:17.334847</ts>
    <user>U2LAL86AY</user>
    <text>&lt;https://ellie-app.com/3zkrBCHtz39a1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T14:56:29.341400</ts>
    <user>U2LAL86AY</user>
    <text>here a ADT is decoded back form js</text>
  </message>
  <message>
    <ts>2017-07-13T14:56:34.343639</ts>
    <user>U601ELFEG</user>
    <text>that's good - then the ports of generic - "Dear JS, do this thing, and when you pass the result back via subscription, hand me back this Json blob"</text>
  </message>
  <message>
    <ts>2017-07-13T14:56:38.346193</ts>
    <user>U601ELFEG</user>
    <text>good - I like this</text>
  </message>
  <message>
    <ts>2017-07-13T14:57:40.380623</ts>
    <user>U23SA861Y</user>
    <text>I presume this is being written to file?</text>
  </message>
  <message>
    <ts>2017-07-13T14:58:11.397353</ts>
    <user>U601ELFEG</user>
    <text>I have two such "generic" JS facilties: One is read/write local files - the other is read/write `localStorage`</text>
  </message>
  <message>
    <ts>2017-07-13T14:58:41.414177</ts>
    <user>U601ELFEG</user>
    <text>I will have a third..... read/write MIDI device    :wink: :notes:</text>
  </message>
  <message>
    <ts>2017-07-13T15:17:59.019770</ts>
    <user>U3LUC6SNS</user>
    <text>What is the meaning of `|-` in &lt;https://github.com/elm-tools/parser/blob/2.0.1/src/Parser/LanguageKit.elm#L252&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T15:19:09.054540</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U601ELFEG&gt; could you share code on your `localStorage` facility?</text>
  </message>
  <message>
    <ts>2017-07-13T15:22:19.150818</ts>
    <user>U4872964V</user>
    <text>&lt;@U3LUC6SNS&gt; seems to be an internal function</text>
  </message>
  <message>
    <ts>2017-07-13T15:24:54.227912</ts>
    <user>U2LAL86AY</user>
    <text>actually before i made a mistake - when js comes back inside subscriptions - there can only be 2 messages not more. - one is for when the decoder fails - and another for when it succeeds.

But this Succeed message will not carry just a simple value. 
It will carry an ADT - and inside, you can place whatever info you need from js.</text>
  </message>
  <message>
    <ts>2017-07-13T15:37:22.602473</ts>
    <user>U65GZU4MR</user>
    <text>Hi folks, AFAIK there is a shortcut function to get property:
```
.prop
-- the same as:
\a -&amp;gt; a.prop
```

Is there a shortcut to write property? Something like this:
```
\a b -&amp;gt; { b | prop = a }
```</text>
  </message>
  <message>
    <ts>2017-07-13T15:39:11.656284</ts>
    <user>U4872964V</user>
    <text>&lt;@U65GZU4MR&gt; no there is no such shortcut</text>
  </message>
  <message>
    <ts>2017-07-13T15:46:17.867159</ts>
    <user>U5XC2FJ1Y</user>
    <text>&lt;@U3LUC6SNS&gt; looks like it's defined a few lines further down</text>
  </message>
  <message>
    <ts>2017-07-13T15:47:04.891297</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U5XC2FJ1Y&gt; thanks, should have been more observant!</text>
  </message>
  <message>
    <ts>2017-07-13T15:48:17.927660</ts>
    <user>U3LUC6SNS</user>
    <text>Is there an Elm function for determining whether a character is either in a given string or a given list of characters?</text>
  </message>
  <message>
    <ts>2017-07-13T15:49:32.964844</ts>
    <user>U4872964V</user>
    <text>&lt;@U3LUC6SNS&gt; there is `String.contains` and there is also the `Regex` module for more advanced stuff</text>
  </message>
  <message>
    <ts>2017-07-13T16:07:35.521512</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U4872964V&gt; I tried 
```
String.contains (toString '.') ".abc"
False : Bool
```
Unfortunately I need to check whether a character is in a string (or, alternatively, an array of characters)</text>
  </message>
  <message>
    <ts>2017-07-13T16:09:29.577975</ts>
    <user>U4872964V</user>
    <text>use `String.fromChar` instead of `toString`</text>
  </message>
  <message>
    <ts>2017-07-13T16:10:30.607704</ts>
    <user>U4872964V</user>
    <text>`toString '.'` will give you the string `"'.'"`</text>
  </message>
  <message>
    <ts>2017-07-13T16:11:20.632192</ts>
    <user>U4872964V</user>
    <text>…many quotes there… :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-13T16:26:24.077898</ts>
    <user>U3LUC6SNS</user>
    <text>Oi vey!  Still having parser issues after many changes.  I am getting this error:
```
&amp;gt; run latexList "a b\nc d"
Err { row = 1, col = 4, source = "a b\nc d", problem = BadRepeat, context = [{ row = 1, col = 1, description = "latexList" }] }
    : Result.Result Parser.Error LatexParser.Parser.LatexList
```
Note the `BadRepeat` at column 4, which is `\n`.  Relevant abbreviated code is
```
latexList : Parser LatexList
latexList =
    inContext "latexList" &amp;lt;|
        succeed LatexList
            |= repeat zeroOrMore latex
```
where
```
latex : Parser Latex
latex =
    inContext "latex" &amp;lt;|
        oneOf
            [ map Environment environment
            , map Macro macro
            , map DisplayMath displayMath
            , map InlineMath inlineMath
            , map Words words
            ]
```
The components of the `latexList` parser have been tested, e.g.,
```
&amp;gt; run latex "a b\nc d"
Ok (Words { value = ["a","b"] })
    : Result.Result Parser.Error LatexParser.Parser.Latex
```</text>
  </message>
  <message>
    <ts>2017-07-13T16:28:05.129460</ts>
    <user>U3LUC6SNS</user>
    <text>I am assuming (but don't know) that the parser has consumed the `\n` and so should be ready to repeat and parse some more `words`.</text>
  </message>
  <message>
    <ts>2017-07-13T16:28:22.138387</ts>
    <user>U3LUC6SNS</user>
    <text>However, this issue: at `\n` could be what I am not understanding.</text>
  </message>
  <message>
    <ts>2017-07-13T16:33:54.309617</ts>
    <user>U62UFEG4D</user>
    <text>Hello Elm people, can someone please explain me the meaning of `(,)` in `map2 (,) genA genB` ?</text>
  </message>
  <message>
    <ts>2017-07-13T16:34:24.324822</ts>
    <user>U23SA861Y</user>
    <text>what are the types of genA and genB</text>
  </message>
  <message>
    <ts>2017-07-13T16:34:40.333144</ts>
    <user>U62UFEG4D</user>
    <text>&lt;http://Random.int|Random.int&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T16:35:08.346366</ts>
    <user>U23SA861Y</user>
    <text>so map two is constructing a random tuples of ints</text>
  </message>
  <message>
    <ts>2017-07-13T16:36:10.377520</ts>
    <user>U62UFEG4D</user>
    <text>why is `map3 (,) genA genB genC` not working then ?</text>
  </message>
  <message>
    <ts>2017-07-13T16:36:21.383181</ts>
    <user>U23SA861Y</user>
    <text>because (,) takes two parameters</text>
  </message>
  <message>
    <ts>2017-07-13T16:36:24.384637</ts>
    <user>U23SA861Y</user>
    <text>you want (,,)</text>
  </message>
  <message>
    <ts>2017-07-13T16:37:01.403184</ts>
    <user>U62UFEG4D</user>
    <text>ah.. got it... i think</text>
  </message>
  <message>
    <ts>2017-07-13T16:37:19.411952</ts>
    <user>U62UFEG4D</user>
    <text>thanks a lot &lt;@U23SA861Y&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T16:39:27.474972</ts>
    <user>U68N7EGVB</user>
    <text>Got a question. The example at &lt;https://github.com/evancz/url-parser&gt; repo is awesome, but whenever you try to access a page via URL it throws 404.

Question: is deep-linking something that should be handled on the application level (ie. somewhere in `init`) or will it work when being served from behind some actual HTTP server?</text>
  </message>
  <message>
    <ts>2017-07-13T16:47:04.701565</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U68N7EGVB&gt; yeah, that example actually requires serve-side configuration to route everything to your index.html</text>
  </message>
  <message>
    <ts>2017-07-13T16:48:33.745746</ts>
    <user>U3SJEDR96</user>
    <text>it could be modified to work with `parsePath` instead by 1) using `parsePath` and 2) changing the urls to `[ "#/", "#/blog/", "#/blog/42", "#/blog/37", "?search=cats#/blog/" ]`</text>
  </message>
  <message>
    <ts>2017-07-13T16:49:11.764161</ts>
    <user>U3SJEDR96</user>
    <text>that way, you should be able to refresh and whatnot</text>
  </message>
  <message>
    <ts>2017-07-13T16:50:09.792785</ts>
    <user>U3SJEDR96</user>
    <text>to answer your actual question: it's both - `init` when using `Navigation.program` receives the  `Location` on pageload so you can set the correct state, and your HTTP server needs to route everything to your entrypoint</text>
  </message>
  <message>
    <ts>2017-07-13T16:50:38.807162</ts>
    <user>U67MRTLBD</user>
    <text>I have several questions about [the Forms
tutorial](&lt;https://guide.elm-lang.org/architecture/user_input/forms.html&gt;)

My first question has to do with the `Html Msg` aspect of this type
signature: `view : Model -&amp;gt; Html Msg` ... I do not understand what
`Html Msg` means because it is a compound term. I have encountered
`List Int` earlier which means "a list in which each element is of
type `Int` but what does `Html Msg` mean? An HTML fragment in which
each node of the dom tree is a message? That doesnt make sense.

Next, why is `msg` lowercase in the viewValidation signature:
`viewValidation : Model -&amp;gt; Html msg`? How does `msg` vary from 'Msg'?

Finally, I understand that `onInput` is what leads to the model being
updated as soon as there is a keypress in any of those fields but I
dont understand what triggers the `viewValidation` function to compare
the two password fields on each keypress.</text>
  </message>
  <message>
    <ts>2017-07-13T16:51:47.840935</ts>
    <user>U23SA861Y</user>
    <text>an `Html Msg` is an Html value which will produce messages of type Msg</text>
  </message>
  <message>
    <ts>2017-07-13T16:52:38.866079</ts>
    <user>U23SA861Y</user>
    <text>the lower case `msg` is a type variable, given that there is nothing corresponding the constraint on the input parameters it means that the output Html cannot emit messages</text>
  </message>
  <message>
    <ts>2017-07-13T16:53:59.906931</ts>
    <user>U68N7EGVB</user>
    <text>Ah. Thanks a lot, I will serve it from behind Express.

I have to wonder though - for development - would it work with `elm-webpack-loader` and `webpack-dev-server` (historyApiFallback)?

Would the time-travelling debugger work with webpack's server?</text>
  </message>
  <message>
    <ts>2017-07-13T16:55:05.939227</ts>
    <user>U23SA861Y</user>
    <text>oninput takes a function of signature `String -&amp;gt; Msg` and tells the Html how to construct `Msg`  when it received and onInput event</text>
  </message>
  <message>
    <ts>2017-07-13T16:55:17.945325</ts>
    <user>U23SA861Y</user>
    <text>this is then dispatched by the runtime to update</text>
  </message>
  <message>
    <ts>2017-07-13T16:56:26.979070</ts>
    <user>U3SJEDR96</user>
    <text>Yes to both. Debugger can be enabled by passing `?debug=true` to the loader, iirc</text>
  </message>
  <message>
    <ts>2017-07-13T16:56:47.989551</ts>
    <user>U68N7EGVB</user>
    <text>Sounds awesome, thanks. I will look into it.</text>
  </message>
  <message>
    <ts>2017-07-13T16:58:53.051677</ts>
    <user>U67MRTLBD</user>
    <text>&lt;@U23SA861Y&gt; - this last comment does not answer my last question: """I
dont understand what triggers the `viewValidation` function to compare
the two password fields on each keypress."""</text>
  </message>
  <message>
    <ts>2017-07-13T16:59:22.066041</ts>
    <user>U23SA861Y</user>
    <text>view validation get's called whenever view is called</text>
  </message>
  <message>
    <ts>2017-07-13T16:59:29.069398</ts>
    <user>U23SA861Y</user>
    <text>it's the bottom function in the div</text>
  </message>
  <message>
    <ts>2017-07-13T17:00:39.105721</ts>
    <user>U67MRTLBD</user>
    <text>OK, I think that makes enough sense for now. I went and looked at the type signature for `onInput` and it blew my mind.</text>
  </message>
  <message>
    <ts>2017-07-13T17:00:46.109489</ts>
    <user>U67MRTLBD</user>
    <text>thank you &lt;@U23SA861Y&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T17:11:14.403725</ts>
    <user>U2SR9DL7Q</user>
    <text>hola folks. I have a pretty basic question. I have a div that may or may not appear on the screen depending on a value from the model. I'm trying to figure out the best way to represent that. &lt;https://ellie-app.com/3Kw6DQKfzKPa1/0&gt;  A crude example is in that ellie.</text>
  </message>
  <message>
    <ts>2017-07-13T17:12:48.446123</ts>
    <user>U2SR9DL7Q</user>
    <text>I'm not sure how to say, "include this div if model.blahblah is true."</text>
  </message>
  <message>
    <ts>2017-07-13T17:13:52.474705</ts>
    <user>U23SA861Y</user>
    <text>well you need to be explict with what happens in each case</text>
  </message>
  <message>
    <ts>2017-07-13T17:14:47.498344</ts>
    <user>U23SA861Y</user>
    <text>&lt;https://ellie-app.com/3KwcVmNZ8X5a1/1&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T17:15:20.513199</ts>
    <user>U23SA861Y</user>
    <text>&lt;https://ellie-app.com/3KwcVmNZ8X5a1/2&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T17:15:29.517110</ts>
    <user>U0FP80EKB</user>
    <text>YOu can do this &lt;https://ellie-app.com/3Kw6DQKfzKPa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T17:15:39.521568</ts>
    <user>U0FP80EKB</user>
    <text>Use `text ""` to not render</text>
  </message>
  <message>
    <ts>2017-07-13T17:15:50.526798</ts>
    <user>U0FP80EKB</user>
    <text>oh, my link didn't work</text>
  </message>
  <message>
    <ts>2017-07-13T17:16:18.539041</ts>
    <user>U0FP80EKB</user>
    <text>&lt;https://ellie-app.com/3Kwf735ngRWa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T17:16:20.539983</ts>
    <user>U23SA861Y</user>
    <text>*cough* fork *cough*</text>
  </message>
  <message>
    <ts>2017-07-13T17:16:21.540081</ts>
    <user>U0FP80EKB</user>
    <text>Here we go</text>
  </message>
  <message>
    <ts>2017-07-13T17:16:35.546376</ts>
    <user>U0FP80EKB</user>
    <text>:slightly_smiling_face: I haven't used ellie much</text>
  </message>
  <message>
    <ts>2017-07-13T17:16:47.551706</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U2SR9DL7Q&gt; using `text ""` is a placeholder for nothing &lt;https://ellie-app.com/3Kwf735ngRWa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T17:16:49.552641</ts>
    <user>U2SR9DL7Q</user>
    <text>those look good. 
The original code is
```
iewBoardCanvas : Model -&amp;gt; Html Msg
viewBoardCanvas model = 
    let canvas =
        Options.div [] [] if model.game == Nothing else 
    Options.div []
        [ if model.game == Nothing then Options.div [] [] else &amp;lt;| text "I'm a canvas!"
        , Button.render Mdl
            [ 0 ]
            model.mdl
            []
            [ text "Start Game" ]
        ]
```</text>
  </message>
  <message>
    <ts>2017-07-13T17:16:52.553685</ts>
    <user>U23SA861Y</user>
    <text>yeah, I'm used to the go playground flow</text>
  </message>
  <message>
    <ts>2017-07-13T17:17:16.564355</ts>
    <user>U2SR9DL7Q</user>
    <text>essentially, the user should click start game, and the game board should appear.</text>
  </message>
  <message>
    <ts>2017-07-13T17:17:54.580576</ts>
    <user>U23SA861Y</user>
    <text>in that case you should have some sort of state variable `type State = Pregame | Playing | Results`</text>
  </message>
  <message>
    <ts>2017-07-13T17:18:02.583928</ts>
    <user>U2SR9DL7Q</user>
    <text>Button onclick will eventually do the necessary updates</text>
  </message>
  <message>
    <ts>2017-07-13T17:18:03.584625</ts>
    <user>U23SA861Y</user>
    <text>or something and have the view conditional on that</text>
  </message>
  <message>
    <ts>2017-07-13T17:18:38.600088</ts>
    <user>U23SA861Y</user>
    <text>rather than just an explicit `showBoard: Bool`</text>
  </message>
  <message>
    <ts>2017-07-13T17:19:16.616974</ts>
    <user>U2SR9DL7Q</user>
    <text>game is a `Maybe Game` type so the button triggers to update function that sets up the required state</text>
  </message>
  <message>
    <ts>2017-07-13T17:19:35.625320</ts>
    <user>U23SA861Y</user>
    <text>right so you would use a case instead then</text>
  </message>
  <message>
    <ts>2017-07-13T17:19:42.627964</ts>
    <user>U23SA861Y</user>
    <text>and do a pattern match</text>
  </message>
  <message>
    <ts>2017-07-13T17:20:29.648616</ts>
    <user>U2SR9DL7Q</user>
    <text>I considered case... but I've never used it with a list element... since the only thing changing is one item in the main div's list of Html</text>
  </message>
  <message>
    <ts>2017-07-13T17:21:00.662212</ts>
    <user>U23SA861Y</user>
    <text>```
viewBoardCanvas model =
case model of
   Nothing-&amp;gt;
      renderStartGame
  Just game -&amp;gt;
    renderGameBoard game
```</text>
  </message>
  <message>
    <ts>2017-07-13T17:21:24.673239</ts>
    <user>U23SA861Y</user>
    <text>case just returns the branches</text>
  </message>
  <message>
    <ts>2017-07-13T17:21:41.680492</ts>
    <user>U23SA861Y</user>
    <text>it could be any value even a list</text>
  </message>
  <message>
    <ts>2017-07-13T17:21:45.682174</ts>
    <user>U2SR9DL7Q</user>
    <text>Interesting. So Just make them two entirely different view functions</text>
  </message>
  <message>
    <ts>2017-07-13T17:22:10.692869</ts>
    <user>U23SA861Y</user>
    <text>sure, the screens are probably going to look pretty different</text>
  </message>
  <message>
    <ts>2017-07-13T17:22:15.695063</ts>
    <user>U2SR9DL7Q</user>
    <text>Yes but, can you put a case statement _inside_ a list?</text>
  </message>
  <message>
    <ts>2017-07-13T17:22:46.708293</ts>
    <user>U23SA861Y</user>
    <text>you can, but you can also use a let</text>
  </message>
  <message>
    <ts>2017-07-13T17:22:59.713895</ts>
    <user>U23SA861Y</user>
    <text>but I would suggest some helper functions, more clear</text>
  </message>
  <message>
    <ts>2017-07-13T17:24:15.745672</ts>
    <user>U23SA861Y</user>
    <text>you can also have the case return a list</text>
  </message>
  <message>
    <ts>2017-07-13T17:25:33.778191</ts>
    <user>U3SJEDR96</user>
    <text>you can put a case expression just about anywhere, for Elm, in the end, it's just another expression</text>
  </message>
  <message>
    <ts>2017-07-13T17:25:50.785768</ts>
    <user>U3SJEDR96</user>
    <text>for your own sanity, it might be worthwhile _not_ putting it just about anywhere :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-13T17:27:30.827982</ts>
    <user>U2SR9DL7Q</user>
    <text>This was my original concern? Part of it was just not knowing the correct syntax. But the other part is while it's simple now, the button will become part of it's own div. So Imagine two divs on the page. The one with the buttons  that always exists. And the one with the game that only exists after the button is clicked. I say 'pages' but this is an SPA</text>
  </message>
  <message>
    <ts>2017-07-13T17:28:11.845606</ts>
    <user>U23SA861Y</user>
    <text>umm, why would start game always exist?</text>
  </message>
  <message>
    <ts>2017-07-13T17:28:20.849611</ts>
    <user>U2SR9DL7Q</user>
    <text>So I was wondering as to what collection of case statements, lets and ifs could produce something... sensible.</text>
  </message>
  <message>
    <ts>2017-07-13T17:28:43.859002</ts>
    <user>U2SR9DL7Q</user>
    <text>Not start game specifically, but there'll be a row of buttons that's always there.</text>
  </message>
  <message>
    <ts>2017-07-13T17:29:03.867286</ts>
    <user>U23SA861Y</user>
    <text>this is why game state might be a better abstraction</text>
  </message>
  <message>
    <ts>2017-07-13T17:29:29.877900</ts>
    <user>U23SA861Y</user>
    <text>because then you can have something like `header : State -&amp;gt; Html Msg`</text>
  </message>
  <message>
    <ts>2017-07-13T17:32:17.947613</ts>
    <user>U23SA861Y</user>
    <text>think about how you want everything to be laid out in each case, what do you want it to look like?</text>
  </message>
  <message>
    <ts>2017-07-13T17:34:03.990055</ts>
    <user>U2SR9DL7Q</user>
    <text>... When the user clicks on the tab to get to page they're shown either a prompt to start a game, *or* if there's already a game in progress, that game is brought up.</text>
  </message>
  <message>
    <ts>2017-07-13T17:34:42.006632</ts>
    <user>U23SA861Y</user>
    <text>ok so 
```
case game of 
   Nothing -&amp;gt;
     renderStartGame
   Just game -&amp;gt;
     renderGame game
```</text>
  </message>
  <message>
    <ts>2017-07-13T17:35:44.033659</ts>
    <user>U23SA861Y</user>
    <text>startgame returns a div with a button in it, render Game returns the game board</text>
  </message>
  <message>
    <ts>2017-07-13T17:36:04.043431</ts>
    <user>U2SR9DL7Q</user>
    <text>I was about to ask another question, but I _think_ I just answered it for myself.</text>
  </message>
  <message>
    <ts>2017-07-13T17:37:52.091405</ts>
    <user>U2SR9DL7Q</user>
    <text>I was going to ask what if I did just want a small piece of a page to show up or not. But I realized that a helper function just makes that this scenario again.</text>
  </message>
  <message>
    <ts>2017-07-13T17:38:55.118936</ts>
    <user>U2SR9DL7Q</user>
    <text>And putting a case in a list is exactly the situation where I'd want to abstract with a helper</text>
  </message>
  <message>
    <ts>2017-07-13T17:39:16.127388</ts>
    <user>U23SA861Y</user>
    <text>you always need to choose between one or more things</text>
  </message>
  <message>
    <ts>2017-07-13T17:39:27.131738</ts>
    <user>U23SA861Y</user>
    <text>you don't get the option of a case/if returning nothing</text>
  </message>
  <message>
    <ts>2017-07-13T17:39:52.141254</ts>
    <user>U23SA861Y</user>
    <text>what they return could be an empty `div` or a `text ""`, but it has to be something</text>
  </message>
  <message>
    <ts>2017-07-13T17:40:41.161033</ts>
    <user>U2SR9DL7Q</user>
    <text>spoiled for choice</text>
  </message>
  <message>
    <ts>2017-07-13T17:41:48.186993</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U23SA861Y&gt; thank you *very* much, and &lt;@U0FP80EKB&gt;_  as well</text>
  </message>
  <message>
    <ts>2017-07-13T17:45:56.281931</ts>
    <user>U64M3DF1B</user>
    <text>&lt;#C12KMAYJX|elm-mdl&gt; I'm on elm 0.18 and using debois/elm-mdl - and this piece will not agree with me at all :cry: 

```
menuItemView : AppState -&amp;gt; String -&amp;gt; Html Msg
menuItemView appstate name =
    &lt;http://List.li|List.li&gt;
        []
        [
            List.content
                [
                    Options.css "cursor" "pointer"
                ,   Options.attribute &amp;lt;| Options.onClick (ShowMenuItemPane name)
                ]
                [
                    text name
                ]
        ]

```

I have the imports, the `type Msg = ... | ShowMenuItemPane` - but she tells me: 

```
The right side of (&amp;lt;|) is causing a type mismatch.

167|                     Options.attribute &amp;lt;| (Options.onClick (ShowMenuItem name)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(&amp;lt;|) is expecting the right side to be a:

    Attribute m

But the right side is:

    Options.Property c Msg
```</text>
  </message>
  <message>
    <ts>2017-07-13T17:47:35.319763</ts>
    <user>U23SA861Y</user>
    <text>do you even need the `Options.attribute &amp;lt;|`</text>
  </message>
  <message>
    <ts>2017-07-13T17:48:07.331505</ts>
    <user>U64M3DF1B</user>
    <text>? perhaps no! I'll tell you in 2sec :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-13T17:49:08.356447</ts>
    <user>U2SR9DL7Q</user>
    <text>depending on the mdl element, I've had to use Options.attribute... since mdl expect a `Style a` type</text>
  </message>
  <message>
    <ts>2017-07-13T17:49:08.356531</ts>
    <user>U64M3DF1B</user>
    <text>:partyparrot3: you're amazing! thx!</text>
  </message>
  <message>
    <ts>2017-07-13T17:50:15.383278</ts>
    <user>U64M3DF1B</user>
    <text>for reference - this is what works (thx to &lt;@U23SA861Y&gt;)
```
            List.content
                [
                    Options.css "cursor" "pointer"
                ,   Options.onClick (ShowMenuItem name)
                ]
                [
                    text name
                ]

```</text>
  </message>
  <message>
    <ts>2017-07-13T17:50:57.401562</ts>
    <user>U64M3DF1B</user>
    <text>that - at least - is NOT obvious if you scout the package documentation :slightly_smiling_face:

(well - perhaps it is obvious and I'm just not totally converted to reading the Elm way of typing and spec'ing the syntax)</text>
  </message>
  <message>
    <ts>2017-07-13T17:54:28.482068</ts>
    <user>U5ABF3BH7</user>
    <text>Hello! Does anyone have a very basic example in Elm of an app with new page, edit page, index page, etc.. (ruby on Rails platform with controllers, etc..). I am getting a bit lost in the complexity of the examples I see.</text>
  </message>
  <message>
    <ts>2017-07-13T18:02:49.671588</ts>
    <user>U5ABF3BH7</user>
    <text>I have all the data from the backend, that I decode into my Model.  I want to use the view of my FirstCallNew, I don't know how to enter that in</text>
  </message>
  <message>
    <ts>2017-07-13T18:02:56.674208</ts>
    <user>U5ABF3BH7</user>
    <text>```main =
    Html.programWithFlags
        { init = init
        , view = FirstCallNew.view
        , update = FirstCallNew.update
        , subscriptions = FirstCallNew.subscriptions
        }```</text>
  </message>
  <message>
    <ts>2017-07-13T18:05:17.724771</ts>
    <user>U5ABF3BH7</user>
    <text>Can I do something like  ```view = FirstCallNew.view Model.initwithParams(case_id)``` or something like that. The case_id being the params that help me retrieve my data</text>
  </message>
  <message>
    <ts>2017-07-13T18:05:20.725910</ts>
    <user>U5ABF3BH7</user>
    <text>?</text>
  </message>
  <message>
    <ts>2017-07-13T18:11:09.846191</ts>
    <user>U23SA861Y</user>
    <text>so, the way you handle the initial render is you appropriately set init you init state such that view renders correctly with that data</text>
  </message>
  <message>
    <ts>2017-07-13T18:13:58.901189</ts>
    <user>U5ABF3BH7</user>
    <text>Let's say I have my record with all the fields with the values from extracting them with decoding. Is there a simpler way then having to write</text>
  </message>
  <message>
    <ts>2017-07-13T18:15:46.935676</ts>
    <user>U5ABF3BH7</user>
    <text>all the values. I must be stuck on something stupid.</text>
  </message>
  <message>
    <ts>2017-07-13T18:16:31.950260</ts>
    <user>U23SA861Y</user>
    <text>I don't follow you, you need to be explict about how your data maps to your view</text>
  </message>
  <message>
    <ts>2017-07-13T18:17:04.960669</ts>
    <user>U5ABF3BH7</user>
    <text>can I write something like init = FirstCallNew.view.init model (where model is what I got from decoding)?</text>
  </message>
  <message>
    <ts>2017-07-13T18:17:20.965591</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U23SA861Y&gt; let me try again</text>
  </message>
  <message>
    <ts>2017-07-13T18:17:56.977170</ts>
    <user>U23SA861Y</user>
    <text>no, your code hasn't even run by that point so how have you decoded anything</text>
  </message>
  <message>
    <ts>2017-07-13T18:20:27.024870</ts>
    <user>U23SA861Y</user>
    <text>init isn't the intial view, it's the initial model and the initial command</text>
  </message>
  <message>
    <ts>2017-07-13T18:20:48.032081</ts>
    <user>U23SA861Y</user>
    <text>also why are all your TEA functions in a module called `FirstCallNew`?</text>
  </message>
  <message>
    <ts>2017-07-13T18:28:19.174099</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U23SA861Y&gt;. I already have a module FirstCallNew,  we started with the new page (how to create a new case). Now I want to create the edit page for a case, which is pretty similar to the new page but with info pulled from the database.</text>
  </message>
  <message>
    <ts>2017-07-13T18:29:53.202912</ts>
    <user>U5ABF3BH7</user>
    <text>I have a FirstCallNew view with init, main, update, subscriptions.
I want to reuse that module, but now my Model, is not initiated for new data, but using the data a pulled from the decoder. 
If I have for example type Model =
           {firstName : String, 
           , location : Location.Model, 
           , address1 : string
           …
           }

From decoding via an api, I know how build my model with id 235. I haven't decoded yet, I am not sure how to start it
so I have model235 = { firstName = "Alfred", location ={ organizationName = "BellaOrg", type_ = "Resident Facility}, address1 = "204 Grant"}
I want it so that when the user goes to the url  ```frontend/cases/edit/235```
Then my FirstCallView is filled with the data I got, so my init model is supposed to be model235

Should I use 
main =    Html.programWithFlags
        { init = init
        , view = view
        , update = update
        , subscriptions = subscriptions
        }
then I don't know how to initialize my model on that page
It should be something rather simple, but I don't know how to link my new view to the Elm new view.</text>
  </message>
  <message>
    <ts>2017-07-13T18:30:12.208834</ts>
    <user>U5ABF3BH7</user>
    <text>My explanation is a bit long... Sorry</text>
  </message>
  <message>
    <ts>2017-07-13T18:30:14.209453</ts>
    <user>U23SA861Y</user>
    <text>are you doing serverside routing or client side?</text>
  </message>
  <message>
    <ts>2017-07-13T18:30:31.215079</ts>
    <user>U5ABF3BH7</user>
    <text>I am using rails</text>
  </message>
  <message>
    <ts>2017-07-13T18:30:48.220406</ts>
    <user>U5ABF3BH7</user>
    <text>I get the data from the database</text>
  </message>
  <message>
    <ts>2017-07-13T18:31:11.227349</ts>
    <user>U23SA861Y</user>
    <text>typically what you'll have is some manner of restful endpoint to retrieve and update records via web request and then the app pulls it down and decodes it when it wants to use it</text>
  </message>
  <message>
    <ts>2017-07-13T18:31:13.228281</ts>
    <user>U5ABF3BH7</user>
    <text>I am doing server side for now, hoping to do client side later.</text>
  </message>
  <message>
    <ts>2017-07-13T18:31:43.237924</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U23SA861Y&gt; Do you have any simple examples?</text>
  </message>
  <message>
    <ts>2017-07-13T18:32:52.259373</ts>
    <user>U23SA861Y</user>
    <text>not off hand no.... at least nothing I can release</text>
  </message>
  <message>
    <ts>2017-07-13T18:34:57.295637</ts>
    <user>U5ABF3BH7</user>
    <text>Ok, thanks anyways.</text>
  </message>
  <message>
    <ts>2017-07-13T19:03:33.782989</ts>
    <user>U63LX5HFY</user>
    <text>Hola &lt;@U23SA861Y&gt; ! Hope you're well. I'm new to Elm and i really love it! How can i limit the result of a List.map? Say i just want 50 results out of 200?</text>
  </message>
  <message>
    <ts>2017-07-13T19:04:20.795607</ts>
    <user>U23SA861Y</user>
    <text>well List.map with operate on the whole list, but you can List.take to grab up to a certain number of elements</text>
  </message>
  <message>
    <ts>2017-07-13T19:04:43.801906</ts>
    <user>U23SA861Y</user>
    <text>`someList |&amp;gt; List.take 50 |&amp;gt; List.map myFunc`</text>
  </message>
  <message>
    <ts>2017-07-13T19:06:13.825887</ts>
    <user>U23SA861Y</user>
    <text>this will take only 50 items from the list and then call map on them</text>
  </message>
  <message>
    <ts>2017-07-13T19:28:28.166137</ts>
    <user>U63LX5HFY</user>
    <text>Thanks a lot &lt;@U23SA861Y&gt;. List.take, noted!</text>
  </message>
  <message>
    <ts>2017-07-13T19:48:08.446693</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;https://ellie-app.com/3KyxztC5J2pa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T19:52:44.511580</ts>
    <user>U2SR9DL7Q</user>
    <text>does anyone know why the compiler isn't recognizing this type alias?
```
viewBoardCanvas : Model -&amp;gt; Html Msg
viewBoardCanvas model =
    case model.game of
        Nothing -&amp;gt;
            Options.div [] [ Button.render Mdl [ 0 ] model.mdl [] [ text "Start Game" ] ]

        Just Game -&amp;gt;
            text "I'm a game!"
```
It says it can't find pattern game, but in my _Types.elm_ file I have.
```
type alias Game =
    { board : Html Msg
    , players : List Player
    }

type alias Model =
    { resume : List ResumeSections
    , mdl : Material.Model
    , route : Route
    , game : Maybe Game
    }
```</text>
  </message>
  <message>
    <ts>2017-07-13T19:55:13.545431</ts>
    <user>U48AEBJQ3</user>
    <text>When you pattern match, you need to give the game a regular variable name, not the name of its type or constructor. `Just game -&amp;gt;`</text>
  </message>
  <message>
    <ts>2017-07-13T19:56:17.560297</ts>
    <user>U2SR9DL7Q</user>
    <text>bless your heart kind sir.</text>
  </message>
  <message>
    <ts>2017-07-13T20:00:16.617801</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U2SR9DL7Q&gt; Where my family comes from, that phrase means something *totally* different, but I take it as intended. :wink:</text>
  </message>
  <message>
    <ts>2017-07-13T20:24:38.933138</ts>
    <user>U48AEBJQ3</user>
    <text>Oh, I don't know if this sent a notification or not &lt;@U5ABF3BH7&gt; My apologies if you had already seen it.</text>
  </message>
  <message>
    <ts>2017-07-13T20:26:11.951891</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U48AEBJQ3&gt; Thanks you so much. I hadn't seen your message. Really appreciate it!</text>
  </message>
  <message>
    <ts>2017-07-13T20:31:28.016478</ts>
    <user>U2SR9DL7Q</user>
    <text>... oh dear.</text>
  </message>
  <message>
    <ts>2017-07-13T20:33:41.043316</ts>
    <user>U2SR9DL7Q</user>
    <text>I had to google alternate meanings after you said that... didnt realize so many people used it to be... not nice.</text>
  </message>
  <message>
    <ts>2017-07-13T22:47:22.528796</ts>
    <user>U4H406NET</user>
    <text>Are there any complete examples of sending HTTP headers?  I do not understand the custom request documentation.</text>
  </message>
  <message>
    <ts>2017-07-13T22:50:21.558137</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U4H406NET&gt; &lt;http://package.elm-lang.org/packages/elm-lang/http/1.0.0/Http#request&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T22:50:45.562403</ts>
    <user>U153UK3FA</user>
    <text>The `headers` field has the type `List Header`</text>
  </message>
  <message>
    <ts>2017-07-13T22:51:01.564917</ts>
    <user>U153UK3FA</user>
    <text>and you create a header by calling &lt;http://package.elm-lang.org/packages/elm-lang/http/1.0.0/Http#header&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T22:52:05.575175</ts>
    <user>U153UK3FA</user>
    <text>once you've created your `Http.Request` you pass it to &lt;http://package.elm-lang.org/packages/elm-lang/http/1.0.0/Http#send&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T23:00:07.653193</ts>
    <user>U4H406NET</user>
    <text>The cited docs do not show the complete sequence.  I am trying to do as you describe but keep getting errors I do not understand.</text>
  </message>
  <message>
    <ts>2017-07-13T23:01:06.664193</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U4H406NET&gt; post the errors and I'll help</text>
  </message>
  <message>
    <ts>2017-07-13T23:02:27.678771</ts>
    <user>U153UK3FA</user>
    <text>the `expect` field passed to `request` is the one that confuses people the most, but most commonly you'll just want to use &lt;http://package.elm-lang.org/packages/elm-lang/http/1.0.0/Http#expectJson&gt;</text>
  </message>
  <message>
    <ts>2017-07-13T23:04:08.695515</ts>
    <user>U4H406NET</user>
    <text>Haven't even got there.</text>
  </message>
  <message>
    <ts>2017-07-13T23:04:16.696770</ts>
    <user>U4H406NET</user>
    <text>This is one try</text>
  </message>
  <message>
    <ts>2017-07-13T23:04:20.697383</ts>
    <user>U4H406NET</user>
    <text>req =   Http.request
            { method = "GET"
            , headers = header
            , url = url
            , body = Http.emptyBody
            , expect = Http.expectStringResponse (\_ -&amp;gt; Ok ())
            , timeout = Nothing
            , withCredentials = False
            }        
    in
        Http.send LoginResult req</text>
  </message>
  <message>
    <ts>2017-07-13T23:05:11.706221</ts>
    <user>U4H406NET</user>
    <text>REsults in</text>
  </message>
  <message>
    <ts>2017-07-13T23:05:14.706628</ts>
    <user>U4H406NET</user>
    <text>The 2nd argument to function `send` is causing a mismatch. 101|         Http.send LoginResult req                                    ^^^ Function `send` is expecting the 2nd argument to be:     Http.Request String But it is:     Http.Request ()</text>
  </message>
  <message>
    <ts>2017-07-13T23:07:27.729390</ts>
    <user>U4H406NET</user>
    <text>What is the meaning of the String that it is expecting as a second argument?</text>
  </message>
  <message>
    <ts>2017-07-13T23:08:12.736771</ts>
    <user>U153UK3FA</user>
    <text>In `expect = Http.expectStringResponse (\_ -&amp;gt; Ok ())` you said the result of the request would be the value `()` which is of type `()`</text>
  </message>
  <message>
    <ts>2017-07-13T23:08:55.743891</ts>
    <user>U153UK3FA</user>
    <text>But you actually want it to be a `String` since `LoginResult` is a function that takes a `String`</text>
  </message>
  <message>
    <ts>2017-07-13T23:09:33.749909</ts>
    <user>U153UK3FA</user>
    <text>what is the actual response you're expecting to get?</text>
  </message>
  <message>
    <ts>2017-07-13T23:10:24.758060</ts>
    <user>U4H406NET</user>
    <text>Eventually json, at this point I am just trying to get an HTTP request to run to see how the headers work</text>
  </message>
  <message>
    <ts>2017-07-13T23:11:01.764630</ts>
    <user>U153UK3FA</user>
    <text>Changing `expect = Http.expectStringResponse (\_ -&amp;gt; Ok ())` to be `  , expect = Http.expectStringResponse (\_ -&amp;gt; Ok "pizza")` will make the result always be "pizza" ignoring the actual response</text>
  </message>
  <message>
    <ts>2017-07-13T23:14:51.800509</ts>
    <user>U4H406NET</user>
    <text>Thank you, it compiled and matched the error case in the update function.</text>
  </message>
  <message>
    <ts>2017-07-14T02:58:43.058087</ts>
    <user>U68471J6P</user>
    <text>I'm thinking of building my first "real" Elm website with Elixir for the back-end. Which part should I build first, the front-end or the back-end?</text>
  </message>
  <message>
    <ts>2017-07-14T03:31:23.551197</ts>
    <user>U0CLDU8UB</user>
    <text>I'd say either way you will be building them side by side</text>
  </message>
  <message>
    <ts>2017-07-14T03:32:20.565577</ts>
    <user>U0CLDU8UB</user>
    <text>Building the frontend makes you realize the API needs to be changed, so then you switch to the backend side</text>
  </message>
  <message>
    <ts>2017-07-14T08:45:59.062557</ts>
    <user>U5P4FLYLE</user>
    <text>Hi, I have the following compilation error:
```The definition of `rangeFrameHintDot` does not match its type annotation. 
100| rangeFrameHintDot : Maybe Point -&amp;gt; Float -&amp;gt; Float  -&amp;gt; DataPoint Msg 
101| rangeFrameHintDot hinted x y = 
102|&amp;gt;  { view = Just (myCircle x y) 
103|&amp;gt;  , viewHint = Nothing 
104|&amp;gt;  , x = x 
105|&amp;gt;  , xLine = Maybe.andThen (flashyLine x y) hinted 
106|&amp;gt;  , xTick = Just (simpleTick x) 
107|&amp;gt;  , y = y 
108|&amp;gt;  , yLine = Maybe.andThen (flashyLine x y) hinted 
109|&amp;gt;  , yTick = Just (simpleTick y) 
110|&amp;gt;  } 
The type annotation for `rangeFrameHintDot` says it always returns:     DataPoint Msg 
But the returned value (shown above) is a:     
{ view : Maybe (Svg Msg)     
, viewHint : Maybe a     
, x : Float     
, xLine : Maybe (AxisSummary -&amp;gt; LineCustomizations)     
, xTick : Maybe TickCustomizations     
, y : Float     
, yLine : Maybe (AxisSummary -&amp;gt; LineCustomizations)     
, yTick : Maybe TickCustomizations     
} 
Hint: The record fields do not match up. Maybe you made one of these typos?             x &amp;lt;-&amp;gt; y     xLine &amp;lt;-&amp;gt; yLine     xTick &amp;lt;-&amp;gt; yTick         y &amp;lt;-&amp;gt; x     yLine &amp;lt;-&amp;gt; xLine     yTick &amp;lt;-&amp;gt; xTick```
I look above and see the same thing...Do you know how to proceed in such a case?</text>
  </message>
  <message>
    <ts>2017-07-14T08:47:12.087254</ts>
    <user>U3SJEDR96</user>
    <text>could you show the definition of `DataPoint`?</text>
  </message>
  <message>
    <ts>2017-07-14T08:48:10.106857</ts>
    <user>U3SJEDR96</user>
    <text>oh, there &lt;http://package.elm-lang.org/packages/terezka/elm-plot/latest/Plot#DataPoint&gt;</text>
  </message>
  <message>
    <ts>2017-07-14T08:48:33.114891</ts>
    <user>U3SJEDR96</user>
    <text>you have `viewHint` rather than `hint`</text>
  </message>
  <message>
    <ts>2017-07-14T08:52:59.207563</ts>
    <user>U5P4FLYLE</user>
    <text>&lt;@U3SJEDR96&gt;  yes it should be `hint`. Thanks!!!</text>
  </message>
  <message>
    <ts>2017-07-14T08:59:28.348532</ts>
    <user>U666LA9NK</user>
    <text>Hi, I am very new to elm. I have questions regarding good practices of updating internal intermediate status. If I have the case of 
```
type alias Model = 
  { number : Int
  , numberIsTooLarge: Bool
  }
```
I want `numberIsTooLarge` to be automatically be updated along with `number`. What is the best practice to do this? Shall I include the code to update `numberIsTooLarge` when handling all the cases that `number` is updated, or is there a better way to do that in elm?</text>
  </message>
  <message>
    <ts>2017-07-14T09:00:34.376959</ts>
    <user>U2XRG0UKA</user>
    <text>When does you use `numberIsTooLarge`? Do you reference it once in the view to display an error message?</text>
  </message>
  <message>
    <ts>2017-07-14T09:01:33.400625</ts>
    <user>U153UK3FA</user>
    <text>don't store what you can calculate</text>
  </message>
  <message>
    <ts>2017-07-14T09:02:58.434224</ts>
    <user>U2FL3ARLG</user>
    <text>right, I'd say you don't need `numberIsTooLarge` in your model, but a function `numberIsTooLarge : Model -&amp;gt; Bool` that you can use anywhere</text>
  </message>
  <message>
    <ts>2017-07-14T09:09:42.593878</ts>
    <user>U666LA9NK</user>
    <text>&lt;@U2XRG0UKA&gt; I use it in multiple places in view and when update some other messages.</text>
  </message>
  <message>
    <ts>2017-07-14T09:12:55.671930</ts>
    <user>U666LA9NK</user>
    <text>&lt;@U2FL3ARLG&gt; yeah you are right. I did not think of that. Thanks~</text>
  </message>
  <message>
    <ts>2017-07-14T09:47:30.617570</ts>
    <user>U2SR9DL7Q</user>
    <text>who likes a good math challenge?</text>
  </message>
  <message>
    <ts>2017-07-14T09:57:52.931519</ts>
    <user>U4872964V</user>
    <text>who doesn't? :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-14T09:58:20.945767</ts>
    <user>U0FP80EKB</user>
    <text>They're all good math challenges, Brent</text>
  </message>
  <message>
    <ts>2017-07-14T09:59:54.995207</ts>
    <user>U2SR9DL7Q</user>
    <text>I'm trying to implement something in elm. A function  is passed a positive integer, and returns a list of tuples that represent unique pairings of all non-negative integers up to and including the one passed.</text>
  </message>
  <message>
    <ts>2017-07-14T10:00:31.016887</ts>
    <user>U2SR9DL7Q</user>
    <text>so `func 2` returns `[ (0,0), (0, 1), (0,2), (1,1), (1,2), (2,2) ]`</text>
  </message>
  <message>
    <ts>2017-07-14T10:01:23.045725</ts>
    <user>U57KYFW67</user>
    <text>You'll probably want `concatMap` for that</text>
  </message>
  <message>
    <ts>2017-07-14T10:01:24.045992</ts>
    <user>U2SR9DL7Q</user>
    <text>It would not return _both_ (1,2) and (2,1).</text>
  </message>
  <message>
    <ts>2017-07-14T10:01:32.050325</ts>
    <user>U57KYFW67</user>
    <text>oh</text>
  </message>
  <message>
    <ts>2017-07-14T10:01:48.058878</ts>
    <user>U2SR9DL7Q</user>
    <text>I'm been tinkering with concatMap....</text>
  </message>
  <message>
    <ts>2017-07-14T10:02:22.077215</ts>
    <user>U57KYFW67</user>
    <text>Yeah, still. This should be possible with `concatMap` and then the equivalent of filtering. I know how you'd do it in 4 lines of Haskell... but Elm doesn't have the same ease of working with lists-as-monads</text>
  </message>
  <message>
    <ts>2017-07-14T10:02:52.092403</ts>
    <user>U681TBBUP</user>
    <text>Did you miss `(0,2)`??</text>
  </message>
  <message>
    <ts>2017-07-14T10:03:01.097437</ts>
    <user>U4872964V</user>
    <text>&lt;@U2SR9DL7Q&gt; probably easiest to generate all and then filter out those that are in reverse order</text>
  </message>
  <message>
    <ts>2017-07-14T10:03:09.101356</ts>
    <user>U57KYFW67</user>
    <text>Start by asking how you'd create the tuples for a fixed first element</text>
  </message>
  <message>
    <ts>2017-07-14T10:03:11.102327</ts>
    <user>U2SR9DL7Q</user>
    <text>yes i did miss (0,2)</text>
  </message>
  <message>
    <ts>2017-07-14T10:03:35.114972</ts>
    <user>U0FP80EKB</user>
    <text>Generate, then use something like `List.Extra.uniqueBy` where the function considers the flipped tuples the same</text>
  </message>
  <message>
    <ts>2017-07-14T10:04:23.139968</ts>
    <user>U681TBBUP</user>
    <text>It really does seem like something you can accomplish via recursion</text>
  </message>
  <message>
    <ts>2017-07-14T10:04:55.156594</ts>
    <user>U57KYFW67</user>
    <text>If you use the functions in `List`, you can avoid any explicit recursion. But maybe the recursive solution is clearer.</text>
  </message>
  <message>
    <ts>2017-07-14T10:05:04.161217</ts>
    <user>U2SR9DL7Q</user>
    <text>I tried downloading the list-extra package, but it said it was incompatible with my current elm version. I've just been re-implementing the funcs I need though from the source code.</text>
  </message>
  <message>
    <ts>2017-07-14T10:06:55.217326</ts>
    <user>U2SR9DL7Q</user>
    <text>from the docs I thought `(List.range 0 highest) andThen \x -&amp;gt; (List.range 0 highest) andThen \y -&amp;gt; [(x, y)]` could give me the list of all the pairs, and then I would pass through it with `uniqueBy`</text>
  </message>
  <message>
    <ts>2017-07-14T10:07:35.237558</ts>
    <user>U2SR9DL7Q</user>
    <text>But there's a syntax error in this somewhere...</text>
  </message>
  <message>
    <ts>2017-07-14T10:09:23.292591</ts>
    <user>U2SR9DL7Q</user>
    <text>`andThen` from the list-extra package functioning as `flip concatMap`</text>
  </message>
  <message>
    <ts>2017-07-14T10:11:11.348384</ts>
    <user>U4872964V</user>
    <text>you don't need `uniqueBy`, just remove all pairs that have the elements in the wrong order</text>
  </message>
  <message>
    <ts>2017-07-14T10:14:28.449949</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U4872964V&gt; you think that would be easier?</text>
  </message>
  <message>
    <ts>2017-07-14T10:15:06.470065</ts>
    <user>U4872964V</user>
    <text>`filter (\(x,y) -&amp;gt; x &amp;lt;= y)`</text>
  </message>
  <message>
    <ts>2017-07-14T10:15:30.483114</ts>
    <user>U3SJEDR96</user>
    <text>it'll definitely be (much) faster, and doesn't require any -extra stuff</text>
  </message>
  <message>
    <ts>2017-07-14T10:17:40.552632</ts>
    <user>U681TBBUP</user>
    <text>&lt;http://rosettacode.org/wiki/Combinations#Haskell&gt;</text>
  </message>
  <message>
    <ts>2017-07-14T10:18:21.574751</ts>
    <user>U2SR9DL7Q</user>
    <text>Coolness. I still can't get the first function to work though. It's been awhile since I did these functional combinations.</text>
  </message>
  <message>
    <ts>2017-07-14T10:19:10.600903</ts>
    <user>U604S603Y</user>
    <text>on dealing with Ports: Do I need to subscribe to them in Elm even when I'm only sending data to Javascript (in my case: setting the page title)?</text>
  </message>
  <message>
    <ts>2017-07-14T10:19:28.610709</ts>
    <user>U604S603Y</user>
    <text>because I call the Port in Elm, I don't get an error but it never gets called in Javascript land</text>
  </message>
  <message>
    <ts>2017-07-14T10:20:30.643125</ts>
    <user>U4872964V</user>
    <text>no you don't need to subscribe to the port to send to it (how would you do that, anyway)</text>
  </message>
  <message>
    <ts>2017-07-14T10:21:06.661981</ts>
    <user>U4872964V</user>
    <text>you need to subscribe to it in javascript, though</text>
  </message>
  <message>
    <ts>2017-07-14T10:21:15.667013</ts>
    <user>U681TBBUP</user>
    <text>Generating all permutations and filtering them is a bad idea because there are you are dealing with `n choose 2` vs `2^n`</text>
  </message>
  <message>
    <ts>2017-07-14T10:21:21.669962</ts>
    <user>U604S603Y</user>
    <text>on closer inspection of my code and the signature - the Port emits a `Cmd` after being called, so I need to "forward" that to the Elm runtime again in my `update` function?</text>
  </message>
  <message>
    <ts>2017-07-14T10:21:43.681563</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U604S603Y&gt; can you show some code?</text>
  </message>
  <message>
    <ts>2017-07-14T10:22:06.694338</ts>
    <user>U4872964V</user>
    <text>&lt;@U681TBBUP&gt;, it's only slightly slightly less than double the elements, no biggie :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-14T10:22:57.721564</ts>
    <user>U4872964V</user>
    <text>&lt;@U604S603Y&gt;, no, you return the `Cmd` from your update function</text>
  </message>
  <message>
    <ts>2017-07-14T10:23:33.740941</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U681TBBUP&gt; &lt;@U4872964V&gt; fortunately, the highest number will likely never exceed 9</text>
  </message>
  <message>
    <ts>2017-07-14T10:23:55.752777</ts>
    <user>U604S603Y</user>
    <text>yeah, I explicitly ignored the Cmd - no wonder Elm never did anything with it...</text>
  </message>
  <message>
    <ts>2017-07-14T10:24:11.761199</ts>
    <user>U604S603Y</user>
    <text>thanks &lt;@U4872964V&gt; &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-14T10:24:32.772877</ts>
    <user>U681TBBUP</user>
    <text>Ah well then it really doesn't matter what approach you take. If you wanted scalability though dynamic programming would be the way to go</text>
  </message>
  <message>
    <ts>2017-07-14T10:25:44.811970</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U604S603Y&gt; Elm has managed side-effects; which means that side-effects can only happen in the runtime. You create "commands" for the runtime to tell it to do something, but then of course, you have to hand them to the runtime for it to actually do something :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-14T10:35:05.121650</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U2SR9DL7Q&gt; Are you just trying to write `List.map2 (List.map &amp;lt;&amp;lt; (,)) xs (tails xs) |&amp;gt; List.concat`?</text>
  </message>
  <message>
    <ts>2017-07-14T10:37:25.197683</ts>
    <user>U2SR9DL7Q</user>
    <text>Okay, so we're almost there. I have
```
createDominoes : Int -&amp;gt; List Domino
createDominoes highest =
    List.map (\x -&amp;gt; List.map (\y -&amp;gt; Domino x y &amp;lt;| List.range x highest) ) &amp;lt;| List.range 0 highest
``` 
The `Domino` here is just a type defined by two integers.

But I've messed it up in the inner function so the compiler is yelling 
```
a -&amp;gt; Domino

But the left argument is:

Domino
```</text>
  </message>
  <message>
    <ts>2017-07-14T10:40:03.283269</ts>
    <user>U2SR9DL7Q</user>
    <text>I just added a new comment in beginner channel that adds more clarity. But you're speaking in haskellian right now, and I haven't done that in _awhile_. It's honestly going to take me a few minutes to parse that statement and then I can tell you.</text>
  </message>
  <message>
    <ts>2017-07-14T10:41:29.330455</ts>
    <user>U3SJEDR96</user>
    <text>I think you wnt to move that `)`: `List.map (\x -&amp;gt; List.map (\y -&amp;gt; Domino x y) &amp;lt;| List.range x highest ) &amp;lt;| List.range 0 highest`</text>
  </message>
  <message>
    <ts>2017-07-14T10:42:59.378561</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;https://ellie-app.com/3KQ5Rq7VdHNa1/0&gt; ?</text>
  </message>
  <message>
    <ts>2017-07-14T10:43:03.380933</ts>
    <user>U2SR9DL7Q</user>
    <text>That... worked? It says I've created a list of a list of dominoes. But If I can just flatten that, I should be fine.</text>
  </message>
  <message>
    <ts>2017-07-14T10:43:19.389759</ts>
    <user>U3SJEDR96</user>
    <text>`concatMap` to the rescue</text>
  </message>
  <message>
    <ts>2017-07-14T10:44:49.438625</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U48AEBJQ3&gt; your solution is probably the more clever, FP way to do it, but I'll have to sit and study it.</text>
  </message>
  <message>
    <ts>2017-07-14T10:44:51.439896</ts>
    <user>U3SJEDR96</user>
    <text>or what &lt;@U48AEBJQ3&gt; did, which is nice :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-14T10:45:44.469561</ts>
    <user>U3SJEDR96</user>
    <text>the observation that for every element in the range, you only want to make combinations of the element and everything that follows is clever :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-14T10:47:20.521623</ts>
    <user>U2SR9DL7Q</user>
    <text>Yes, but it's very imperative thinking. I've just made the elmy equivalent of 
```
for i in range(0, num):
    for j in range(i, num):
```</text>
  </message>
  <message>
    <ts>2017-07-14T10:49:29.591838</ts>
    <user>U3SJEDR96</user>
    <text>yeah, and &lt;@U48AEBJQ3&gt; uses the same _idea_ in their implementation. I was actually remarking on his code, even though you'd done the same thing (but I hadn't realized it because I was trying to spot the bad code, rather than understand it)</text>
  </message>
  <message>
    <ts>2017-07-14T10:52:59.708288</ts>
    <user>U48AEBJQ3</user>
    <text>I guess the function-fu of `List.map &amp;lt;&amp;lt; (,)` is probably a bit much for learning. You can read it as:
```
\x ys -&amp;gt;
    List.map (\y -&amp;gt; (x, y)) ys
```</text>
  </message>
  <message>
    <ts>2017-07-14T10:54:12.749339</ts>
    <user>U57KYFW67</user>
    <text>```
[1,2,3,4,5] |&amp;gt; andThen (\x -&amp;gt; [1,2,3,4,5] |&amp;gt; andThen (\y -&amp;gt; if x &amp;lt; y then [(x, y)] else []))
[(1,2),(1,3),(1,4),(1,5),(2,3),(2,4),(2,5),(3,4),(3,5),(4,5)]
    : List ( number, number )
```</text>
  </message>
  <message>
    <ts>2017-07-14T10:54:22.754928</ts>
    <user>U57KYFW67</user>
    <text>(how do I do code blocks in Slack??)</text>
  </message>
  <message>
    <ts>2017-07-14T10:54:34.761364</ts>
    <user>U48AEBJQ3</user>
    <text>triple backtick on its own line before and after the block</text>
  </message>
  <message>
    <ts>2017-07-14T10:55:00.776202</ts>
    <user>U57KYFW67</user>
    <text>tyty</text>
  </message>
  <message>
    <ts>2017-07-14T10:55:02.777224</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U48AEBJQ3&gt; that makes it all much clearer. Unfortunately I never did enough haskell to get comfortable with all the inline functions. I'll remember this one now though.</text>
  </message>
  <message>
    <ts>2017-07-14T10:56:16.819532</ts>
    <user>U57KYFW67</user>
    <text>That code I posted does what the OP wanted. There's only two tricks to know: `andThen` allows you do iterate in a way a bit analogous to a for loop and the `if x &amp;lt; y` condition will either append `(x,y)` or else it will append nothing.</text>
  </message>
  <message>
    <ts>2017-07-14T10:56:26.825515</ts>
    <user>U57KYFW67</user>
    <text>(to be reallllly handwavy)</text>
  </message>
  <message>
    <ts>2017-07-14T10:58:17.888145</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U57KYFW67&gt; you got it to work! that's what I tried initially, but the exact nature of what `andThen` is (binding operation for Lists that are monad typeclasses) makes me wary of using it too much.</text>
  </message>
  <message>
    <ts>2017-07-14T10:59:21.924093</ts>
    <user>U57KYFW67</user>
    <text>`andThen` is pretty neat, but the name doesn't make much sense.</text>
  </message>
  <message>
    <ts>2017-07-14T10:59:41.935001</ts>
    <user>U57KYFW67</user>
    <text>It will evaluate the lambda for each element in the list, then collects the results together.</text>
  </message>
  <message>
    <ts>2017-07-14T11:00:05.949676</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U48AEBJQ3&gt; &lt;@U3SJEDR96&gt; &lt;@U57KYFW67&gt; This is quite a fun thing. Thank you for all the assistance.</text>
  </message>
  <message>
    <ts>2017-07-14T11:01:12.989652</ts>
    <user>U57KYFW67</user>
    <text>Here, it's a bit tricky because we do it twice in a nested way. But if you just think of the inner block, with `x` as a constant, it might make more sense: `[1,2,3,4,5] |&amp;gt; andThen (\y -&amp;gt; if x &amp;lt; y then [(x, y)] else [])` goes through each of 1,2,3,4,5. At each iteration, the current value is called `y`. We compare `y` against the (constant) `x` and then decide if we want to append it or not.</text>
  </message>
  <message>
    <ts>2017-07-14T11:01:17.992817</ts>
    <user>U57KYFW67</user>
    <text>np np</text>
  </message>
  <message>
    <ts>2017-07-14T11:02:19.028217</ts>
    <user>U57KYFW67</user>
    <text>Haskell's do notation is actually really nice, and I miss it. It ends up looking like a sql query:  (this is more honest to what it looks like in Haskell)
```
do 
    x &amp;lt;- [1,2,3,4,5]
    y &amp;lt;- [1,2,3,4,5]
    guard (x &amp;lt; y)
    return (x, y)
```</text>
  </message>
  <message>
    <ts>2017-07-14T11:04:57.117383</ts>
    <user>U2SR9DL7Q</user>
    <text>guards... that's nostalgic.</text>
  </message>
  <message>
    <ts>2017-07-14T12:36:40.054048</ts>
    <user>U5W86UED6</user>
    <text>I have a question about "filtering" keyboard events &lt;https://ellie-app.com/3KRNszj47Lca1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-14T12:37:01.064703</ts>
    <user>U5W86UED6</user>
    <text>though I suppose it relates to all kinds of subscriptions</text>
  </message>
  <message>
    <ts>2017-07-14T12:39:33.135759</ts>
    <user>U5W86UED6</user>
    <text>essentially, I'm interested in only two keyboard events, but I'd rather not trigger the update function for any other keypress</text>
  </message>
  <message>
    <ts>2017-07-14T12:42:24.218522</ts>
    <user>U3SJEDR96</user>
    <text>That's not possible, at the moment, &lt;@U5W86UED6&gt; - it's a bit of an all-or-nothing situation</text>
  </message>
  <message>
    <ts>2017-07-14T12:43:20.245224</ts>
    <user>U5W86UED6</user>
    <text>&lt;@U3SJEDR96&gt; I realize the performance penalty isn't too bad, but it's more about filtering out information in the debugger</text>
  </message>
  <message>
    <ts>2017-07-14T12:43:50.259654</ts>
    <user>U5W86UED6</user>
    <text>do you have any more context about why it's an all-or-nothing situation? the design decision behind it?</text>
  </message>
  <message>
    <ts>2017-07-14T12:44:26.276605</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5W86UED6&gt; - it's ok to have that conversation in the channel rather than in a thread :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-14T12:46:30.337615</ts>
    <user>U3SJEDR96</user>
    <text>as for the `why` - basically you'd need the ability to do something like `(a -&amp;gt; Sub b) -&amp;gt; Sub a -&amp;gt; Sub b` so you could return `Sub.none` to filter them out, but that would have some non-obvious effects, such as the ability to suddenly "add" subscriptions from within a subscription</text>
  </message>
  <message>
    <ts>2017-07-14T12:48:40.401138</ts>
    <user>U5W86UED6</user>
    <text>would that be considered a side effect?</text>
  </message>
  <message>
    <ts>2017-07-14T12:51:08.473838</ts>
    <user>U3SJEDR96</user>
    <text>No, it would just be pretty hard to grasp what it would _actually_ do. A subscription is basically just saying "when this happens, execute this function and give the result to `update`". If a subscription could bail out, so to speak, that would make things much more complicated, both in terms of implementation as well as cognitive load for developers</text>
  </message>
  <message>
    <ts>2017-07-14T12:51:49.493599</ts>
    <user>U5WD40ZA9</user>
    <text>Is this possible in elm somehow: &lt;https://stackoverflow.com/questions/29715655/html-5-input-type-date-disable-keyboard-input&gt;    ???</text>
  </message>
  <message>
    <ts>2017-07-14T12:52:59.527890</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5WD40ZA9&gt; yes; you can do this using `onWithOptions` from `Html.Events`, though you will need a `NoOp` message</text>
  </message>
  <message>
    <ts>2017-07-14T12:54:08.561807</ts>
    <user>U3SJEDR96</user>
    <text>`onWithOptions "keydown" { stopPropagation = True, preventDefault = True } (Json.Decode.succeed NoOp)`</text>
  </message>
  <message>
    <ts>2017-07-14T12:54:21.568090</ts>
    <user>U3SJEDR96</user>
    <text>Gotta go now, hope you figure things out :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-14T12:54:33.574364</ts>
    <user>U5WD40ZA9</user>
    <text>&lt;@U3SJEDR96&gt; thanks!</text>
  </message>
  <message>
    <ts>2017-07-14T12:59:20.718750</ts>
    <user>U5W86UED6</user>
    <text>I found some additional information about this on the mailing list, for those interested &lt;https://groups.google.com/forum/#!topic/elm-discuss/u-6aCwaJezo&gt;</text>
  </message>
  <message>
    <ts>2017-07-14T13:38:13.882012</ts>
    <user>U2SR9DL7Q</user>
    <text>If I convert a list to a set in elm, will order be maintained? If not, will order be *not* maintained in the same way if passed the same list?</text>
  </message>
  <message>
    <ts>2017-07-14T13:39:34.922066</ts>
    <user>U48AEBJQ3</user>
    <text>Sets don't maintain list order. IIRC, they are implemented as search trees, so they should always produce sorted lists.</text>
  </message>
  <message>
    <ts>2017-07-14T13:40:55.961571</ts>
    <user>U23SA861Y</user>
    <text>umm you shouldn't count on a set ever maintaining order</text>
  </message>
  <message>
    <ts>2017-07-14T13:41:03.966103</ts>
    <user>U23SA861Y</user>
    <text>it may, but thats an implementation detail</text>
  </message>
  <message>
    <ts>2017-07-14T13:41:31.979310</ts>
    <user>U4872964V</user>
    <text>No, it's documented</text>
  </message>
  <message>
    <ts>2017-07-14T13:41:46.986395</ts>
    <user>U4872964V</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Set#toList&gt;</text>
  </message>
  <message>
    <ts>2017-07-14T13:42:29.006906</ts>
    <user>U23SA861Y</user>
    <text>that says nothing about the set, only that the implementation of toList guarantees sorting.</text>
  </message>
  <message>
    <ts>2017-07-14T13:42:54.019220</ts>
    <user>U4872964V</user>
    <text>what does it mean for a set to be sorted if not that?</text>
  </message>
  <message>
    <ts>2017-07-14T13:43:07.025551</ts>
    <user>U2SR9DL7Q</user>
    <text>So if I have list [0,1,2] and that becomes set (2,0,1)... if I called set.fromList on [0,1,2] again, would it have a different order?</text>
  </message>
  <message>
    <ts>2017-07-14T13:43:41.042652</ts>
    <user>U2SR9DL7Q</user>
    <text>Because it feels like that breaks statelessness </text>
  </message>
  <message>
    <ts>2017-07-14T13:43:50.047075</ts>
    <user>U23SA861Y</user>
    <text>the function `toList` guarantees the the output will be sorted</text>
  </message>
  <message>
    <ts>2017-07-14T13:44:08.055985</ts>
    <user>U4872964V</user>
    <text>&lt;@U2SR9DL7Q&gt; Elm sets are sorted, all functions that iterate through them do it in sorted order</text>
  </message>
  <message>
    <ts>2017-07-14T13:45:24.094453</ts>
    <user>U23SA861Y</user>
    <text>they do seem to provide that guarantee in their api</text>
  </message>
  <message>
    <ts>2017-07-14T13:45:48.107028</ts>
    <user>U4872964V</user>
    <text>but the underying tree implementing the set may look different, have different branching, but that's nothing you can see</text>
  </message>
  <message>
    <ts>2017-07-14T13:46:04.114300</ts>
    <user>U2SR9DL7Q</user>
    <text>Ahhh </text>
  </message>
  <message>
    <ts>2017-07-14T13:46:10.117030</ts>
    <user>U2SR9DL7Q</user>
    <text>Curious. </text>
  </message>
  <message>
    <ts>2017-07-14T13:47:21.152992</ts>
    <user>U48AEBJQ3</user>
    <text>I think it is safe to think of a `Set` is equivalent to a sorted, unique list and should that change it would be documented in the change notes.</text>
  </message>
  <message>
    <ts>2017-07-14T13:47:23.154092</ts>
    <user>U4872964V</user>
    <text>The same goes for Dicts, for the keys.</text>
  </message>
  <message>
    <ts>2017-07-14T13:48:17.181323</ts>
    <user>U23SA861Y</user>
    <text>well I would say the api guarantees sorted order access, I wouldn't make any assumptions about how it's implemented (not that you can do anything with those assumptions anyway)</text>
  </message>
  <message>
    <ts>2017-07-14T13:48:39.192490</ts>
    <user>U48AEBJQ3</user>
    <text>Sure, but for a first-pass conceptual understanding, I think it is fine.</text>
  </message>
  <message>
    <ts>2017-07-14T13:48:55.200362</ts>
    <user>U2SR9DL7Q</user>
    <text>Sets and dicts are sorted at the the level that I interact with them. That... makes sense, in elm. </text>
  </message>
  <message>
    <ts>2017-07-14T13:49:54.230388</ts>
    <user>U2SR9DL7Q</user>
    <text>The docs just didn't make it clear, and it made me wonder. </text>
  </message>
  <message>
    <ts>2017-07-14T13:50:20.243801</ts>
    <user>U4872964V</user>
    <text>well, you have to look at the documentation for the individual function that you use</text>
  </message>
  <message>
    <ts>2017-07-14T13:51:17.273602</ts>
    <user>U2SR9DL7Q</user>
    <text>FromList doesn't mention sorted or not. Unlike toList </text>
  </message>
  <message>
    <ts>2017-07-14T13:51:22.276052</ts>
    <user>U23SA861Y</user>
    <text>a set by definition is not ordered</text>
  </message>
  <message>
    <ts>2017-07-14T13:51:42.286987</ts>
    <user>U23SA861Y</user>
    <text>it may use it as an implementation detail</text>
  </message>
  <message>
    <ts>2017-07-14T13:51:47.289156</ts>
    <user>U4872964V</user>
    <text>&lt;@U2SR9DL7Q&gt;, sure, but how do you get the values from the set?</text>
  </message>
  <message>
    <ts>2017-07-14T13:51:52.291781</ts>
    <user>U23SA861Y</user>
    <text>but a set is a collection of distinct objects</text>
  </message>
  <message>
    <ts>2017-07-14T13:52:50.322130</ts>
    <user>U23SA861Y</user>
    <text>in fact some sets (with hash table backing) are going to be extremely disorderd</text>
  </message>
  <message>
    <ts>2017-07-14T13:53:08.331727</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U4872964V&gt; you mean from the list? I have a list of values that a becoming a set. But from prior experience, sets aren't necessarily ordered. </text>
  </message>
  <message>
    <ts>2017-07-14T13:53:49.353441</ts>
    <user>U4872964V</user>
    <text>&lt;@U2SR9DL7Q&gt; but what does it mean for you for a set to be ordered or unordered, that's the question. i think this is just a semantic question. Elm sets are ordered in every way that you can use them.</text>
  </message>
  <message>
    <ts>2017-07-14T13:55:02.391364</ts>
    <user>U48AEBJQ3</user>
    <text>Right now, `Set.foldl` will give you the set elements in order. This is *unlikely* to change, but it might.</text>
  </message>
  <message>
    <ts>2017-07-14T13:55:28.404857</ts>
    <user>U4872964V</user>
    <text>and yes, `Set.fromList [1,2,3] == Set.fromList [3,2,1]` and so on</text>
  </message>
  <message>
    <ts>2017-07-14T13:57:14.460225</ts>
    <user>U48AEBJQ3</user>
    <text>Perhaps more importantly `Set.fromList [1, 2, 3] == Set.fromList [3, 1] |&amp;gt; Set.insert 2`. For this to hold, either the data structures need to be identical or `Set` would need a special implementation of `==`, which I don't see Elm doing any time soon.</text>
  </message>
  <message>
    <ts>2017-07-14T13:57:15.460801</ts>
    <user>U2SR9DL7Q</user>
    <text>That was my concern. I don't care what the sets actually are, only how they're returned using `fromList`. The documentation doesn't mention ordering, but it seems like they are, which is fine.</text>
  </message>
  <message>
    <ts>2017-07-14T13:58:08.488962</ts>
    <user>U23SA861Y</user>
    <text>fromList doesn't and can never have an ordering</text>
  </message>
  <message>
    <ts>2017-07-14T13:58:14.492166</ts>
    <user>U23SA861Y</user>
    <text>because the set itself is not ordered</text>
  </message>
  <message>
    <ts>2017-07-14T13:58:34.502217</ts>
    <user>U4872964V</user>
    <text>&lt;@U48AEBJQ3&gt; `Set` does have a special implementation of `==`: &lt;https://github.com/elm-lang/core/blob/5.1.1/src/Native/Utils.js#L74&gt;</text>
  </message>
  <message>
    <ts>2017-07-14T13:58:35.502838</ts>
    <user>U23SA861Y</user>
    <text>foldl foldr and toList can</text>
  </message>
  <message>
    <ts>2017-07-14T13:59:34.533176</ts>
    <user>U23SA861Y</user>
    <text>a set can be implemented in such as way so that when you traverse it, it is in a given order, but the concept of a set is not ordered</text>
  </message>
  <message>
    <ts>2017-07-14T14:02:49.638055</ts>
    <user>U2SR9DL7Q</user>
    <text>sets don't inherently possess order. but a set returned from `Set.fromList [Some List]` is ordered, no?</text>
  </message>
  <message>
    <ts>2017-07-14T14:03:20.654056</ts>
    <user>U2SR9DL7Q</user>
    <text>I'm trying to write a test in Ellie to check</text>
  </message>
  <message>
    <ts>2017-07-14T14:03:31.659700</ts>
    <user>U4872964V</user>
    <text>you can't test that</text>
  </message>
  <message>
    <ts>2017-07-14T14:04:08.678340</ts>
    <user>U4872964V</user>
    <text>as &lt;@U23SA861Y&gt; says, that's not a testable concept for Sets, you can only test the serialization functions</text>
  </message>
  <message>
    <ts>2017-07-14T14:05:12.710691</ts>
    <user>U4872964V</user>
    <text>you can look at the javascript and see that it's implemented as a search tree</text>
  </message>
  <message>
    <ts>2017-07-14T14:06:29.749688</ts>
    <user>U4872964V</user>
    <text>a red-black tree to be precise</text>
  </message>
  <message>
    <ts>2017-07-14T14:10:30.869895</ts>
    <user>U2SR9DL7Q</user>
    <text>Alright, I think I get, but one last question. Say I wanted to output the contents of a set, either as Html or a string or in the repl... would I have to convert it to a list first?</text>
  </message>
  <message>
    <ts>2017-07-14T14:11:27.900147</ts>
    <user>U4872964V</user>
    <text>yes, most functions only accept lists of things, not sets</text>
  </message>
  <message>
    <ts>2017-07-14T14:11:46.910370</ts>
    <user>U23SA861Y</user>
    <text>techinically you could call one of the folds directly</text>
  </message>
  <message>
    <ts>2017-07-14T14:12:15.926040</ts>
    <user>U4872964V</user>
    <text>the repl calls toString on it to show it I think</text>
  </message>
  <message>
    <ts>2017-07-14T14:12:19.928381</ts>
    <user>U23SA861Y</user>
    <text>in either case the traversal order is guaranteed to be sorted</text>
  </message>
  <message>
    <ts>2017-07-14T14:12:55.946537</ts>
    <user>U2SR9DL7Q</user>
    <text>This was the missing piece.</text>
  </message>
  <message>
    <ts>2017-07-14T14:13:20.958535</ts>
    <user>U4872964V</user>
    <text>Elm is a typed language, so you have to provide data that are of the right type to the functions you use.</text>
  </message>
  <message>
    <ts>2017-07-14T14:13:49.972911</ts>
    <user>U4872964V</user>
    <text>much can be understood just by looking at the types of the functions</text>
  </message>
  <message>
    <ts>2017-07-14T14:14:50.003226</ts>
    <user>U2SR9DL7Q</user>
    <text>I couldn't understand why you were saying I couldn't see whether the set was sorted, not considering that the implementation to view the contents of the set presents sorted elements</text>
  </message>
  <message>
    <ts>2017-07-14T14:15:55.036891</ts>
    <user>U4872964V</user>
    <text>well, to view something it has to be serialized in some way</text>
  </message>
  <message>
    <ts>2017-07-14T14:18:49.123293</ts>
    <user>U2SR9DL7Q</user>
    <text>It's my python background I suppose. The way sets are implemented there, you can view them without ordering. I know why that wouldn't make sense for elm though. I just had to be sure.</text>
  </message>
  <message>
    <ts>2017-07-14T14:20:37.177295</ts>
    <user>U23SA861Y</user>
    <text>so there is no concept of hidden in python</text>
  </message>
  <message>
    <ts>2017-07-14T14:21:15.196198</ts>
    <user>U4872964V</user>
    <text>python sets are implemented using a hash table</text>
  </message>
  <message>
    <ts>2017-07-14T14:23:08.252743</ts>
    <user>U4872964V</user>
    <text>however, hash tables are not suitable for pure functional languages, because they are not good at being persistent so they are not used in Elm</text>
  </message>
  <message>
    <ts>2017-07-14T14:24:13.285193</ts>
    <user>U23SA861Y</user>
    <text>well, you could have a search tree on the hash and that would have similar behaviour with unordered traversal</text>
  </message>
  <message>
    <ts>2017-07-14T14:24:25.291729</ts>
    <user>U4872964V</user>
    <text>yes, hash trees are sometimes useful</text>
  </message>
  <message>
    <ts>2017-07-14T14:24:40.299148</ts>
    <user>U23SA861Y</user>
    <text>but either way, it all comes down to the api</text>
  </message>
  <message>
    <ts>2017-07-14T14:25:18.318391</ts>
    <user>U23SA861Y</user>
    <text>python guarantees unordered traversal while elm guarantees sorted, the underlying implementation doesn't matter</text>
  </message>
  <message>
    <ts>2017-07-14T14:26:27.354409</ts>
    <user>U4872964V</user>
    <text>unordered traversal sounds like an interesting "guarantee" :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-14T14:27:27.385224</ts>
    <user>U2SR9DL7Q</user>
    <text>I'm glad we had this talk. If nothing else, this slack has made me better at saying what I _actually mean_. Question parameters should be explicit, rather than implicit, or something like that...</text>
  </message>
  <message>
    <ts>2017-07-14T14:29:12.438503</ts>
    <user>U4872964V</user>
    <text>yes, &lt;http://mywiki.wooledge.org/XyProblem&gt;</text>
  </message>
  <message>
    <ts>2017-07-14T14:32:37.541948</ts>
    <user>U23SA861Y</user>
    <text>some situations require guaranteed randomness, scheduling comes to mind</text>
  </message>
  <message>
    <ts>2017-07-14T14:35:12.619358</ts>
    <user>U4872964V</user>
    <text>yeah, but it's not guaranteed to be unordered, just to be random :slightly_smiling_face: nitpicking</text>
  </message>
  <message>
    <ts>2017-07-14T14:36:17.651427</ts>
    <user>U4872964V</user>
    <text>anyway, not for this channel</text>
  </message>
  <message>
    <ts>2017-07-14T15:19:15.873546</ts>
    <user>U5WS7CJLV</user>
    <text>&lt;@U4872964V&gt; I'm glad you're here!  You may not remember, but yesterday I asked you about formatting a money float to a string.</text>
  </message>
  <message>
    <ts>2017-07-14T15:19:22.876840</ts>
    <user>U5WS7CJLV</user>
    <text>And you suggested using an int instead of a float</text>
  </message>
  <message>
    <ts>2017-07-14T15:19:28.879477</ts>
    <user>U4872964V</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-14T15:19:45.886589</ts>
    <user>U5WS7CJLV</user>
    <text>so I thought I'd create a Pennies type, so I did, but I don't think it was necessary</text>
  </message>
  <message>
    <ts>2017-07-14T15:19:47.887541</ts>
    <user>U23SA861Y</user>
    <text>mmm yes floats for money, bad</text>
  </message>
  <message>
    <ts>2017-07-14T15:20:03.894451</ts>
    <user>U5WS7CJLV</user>
    <text>because I had named it "Pennies", I was thinking in terms of little copper discs</text>
  </message>
  <message>
    <ts>2017-07-14T15:20:13.898436</ts>
    <user>U5WS7CJLV</user>
    <text>and you can't have a negative amount of little copper disks</text>
  </message>
  <message>
    <ts>2017-07-14T15:20:16.900200</ts>
    <user>U5WS7CJLV</user>
    <text>so I tried to model that</text>
  </message>
  <message>
    <ts>2017-07-14T15:20:23.903056</ts>
    <user>U5WS7CJLV</user>
    <text>&lt;https://github.com/jordanwilcken/commerce-dotcom/blob/master/commerce_dotcom/elm/Pennies.elm&gt;</text>
  </message>
  <message>
    <ts>2017-07-14T15:20:34.908042</ts>
    <user>U5WS7CJLV</user>
    <text>most important stuff is right up top</text>
  </message>
  <message>
    <ts>2017-07-14T15:20:52.915761</ts>
    <user>U5WS7CJLV</user>
    <text>probly I want to think in terms of cents and not pennies when dealing with money</text>
  </message>
  <message>
    <ts>2017-07-14T15:21:01.919770</ts>
    <user>U5WS7CJLV</user>
    <text>and money amounts can be negative - happens all the time</text>
  </message>
  <message>
    <ts>2017-07-14T15:21:19.927412</ts>
    <user>U5WS7CJLV</user>
    <text>but I did want to get your input (or anybody's) on what I done to model not-being-negative</text>
  </message>
  <message>
    <ts>2017-07-14T15:21:47.939154</ts>
    <user>U4872964V</user>
    <text>yes, well, that looks ok, you don't need the Zero I suppose</text>
  </message>
  <message>
    <ts>2017-07-14T15:21:58.943964</ts>
    <user>U5WS7CJLV</user>
    <text>no, I was thinking that too</text>
  </message>
  <message>
    <ts>2017-07-14T15:22:21.953335</ts>
    <user>U4872964V</user>
    <text>and you should probably give some error, with `Result` if you try to make negative pennies</text>
  </message>
  <message>
    <ts>2017-07-14T15:22:47.964342</ts>
    <user>U5WS7CJLV</user>
    <text>yeah, I was thinking that, but then I got stuck when I tried to use Pennies in my model</text>
  </message>
  <message>
    <ts>2017-07-14T15:22:56.968037</ts>
    <user>U5WS7CJLV</user>
    <text>because my model wants pennies and not Results</text>
  </message>
  <message>
    <ts>2017-07-14T15:23:30.981963</ts>
    <user>U5WS7CJLV</user>
    <text>&lt;https://github.com/jordanwilcken/commerce-dotcom/blob/master/commerce_dotcom/elm/Financial.elm&gt;</text>
  </message>
  <message>
    <ts>2017-07-14T15:23:37.984607</ts>
    <user>U5WS7CJLV</user>
    <text>look at the FinancialData type</text>
  </message>
  <message>
    <ts>2017-07-14T15:24:29.007211</ts>
    <user>U5WS7CJLV</user>
    <text>my model won't ever do something as silly as trying to make negative pennies</text>
  </message>
  <message>
    <ts>2017-07-14T15:24:45.014313</ts>
    <user>U4872964V</user>
    <text>well in that case it's probably ok to have 0 then</text>
  </message>
  <message>
    <ts>2017-07-14T15:25:04.023021</ts>
    <user>U5WS7CJLV</user>
    <text>yeah, that's where I ended up</text>
  </message>
  <message>
    <ts>2017-07-14T15:25:35.036699</ts>
    <user>U5WS7CJLV</user>
    <text>trying to make it clear that if you do something silly like pass a negative int you end up with a MinimumZero that is Zero</text>
  </message>
  <message>
    <ts>2017-07-14T15:26:31.061382</ts>
    <user>U5WS7CJLV</user>
    <text>I think I started modeling too quickly.  I recall somebody on this Slack talking about "the urge" to model things.</text>
  </message>
  <message>
    <ts>2017-07-14T15:26:47.068562</ts>
    <user>U5WS7CJLV</user>
    <text>and I think that's what I did before questioning my assumption that pennies couldn't be negative</text>
  </message>
  <message>
    <ts>2017-07-14T15:27:03.075583</ts>
    <user>U4872964V</user>
    <text>nothing wrong with modelling early, you can just refactor :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-14T15:27:11.079483</ts>
    <user>U5WS7CJLV</user>
    <text>yes, that is one of the joys of Elm</text>
  </message>
  <message>
    <ts>2017-07-14T15:27:36.090225</ts>
    <user>U4872964V</user>
    <text>Most of the time I model something complicated and then after a while almost every complexity goes away</text>
  </message>
  <message>
    <ts>2017-07-14T15:27:38.091044</ts>
    <user>U5WS7CJLV</user>
    <text>but you do lose time.  Although it can lead you down interesting paths as this did.</text>
  </message>
  <message>
    <ts>2017-07-14T15:28:15.107544</ts>
    <user>U4872964V</user>
    <text>when you start writing functions you realize that your model could be improved and then functions become easier, and everything is better</text>
  </message>
  <message>
    <ts>2017-07-14T15:28:22.110575</ts>
    <user>U57KYFW67</user>
    <text>What &lt;@U4872964V&gt; for sure. I think it's a common misconception that because you're working in a "statically typed" language, that you can't change your types (they're "static", right?)..... but in fact, static types allow you to *change* your types more freely than in dynamic languages, since it will catch most of the places where changes are needed.</text>
  </message>
  <message>
    <ts>2017-07-14T15:29:25.137529</ts>
    <user>U4872964V</user>
    <text>something that really steals time is generalizing too much though, like making a big pennies library when all you want to do is adding some ints :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-14T15:29:55.150548</ts>
    <user>U23SA861Y</user>
    <text>`type Money = Money Int Int` is probably all you need to get started</text>
  </message>
  <message>
    <ts>2017-07-14T15:29:56.151009</ts>
    <user>U5WS7CJLV</user>
    <text>yeah, it was "the urge"</text>
  </message>
  <message>
    <ts>2017-07-14T15:30:13.158906</ts>
    <user>U23SA861Y</user>
    <text>hell even `(Int,Int)`</text>
  </message>
  <message>
    <ts>2017-07-14T15:30:16.160199</ts>
    <user>U5WS7CJLV</user>
    <text>once I start modeling it's hard to stop</text>
  </message>
  <message>
    <ts>2017-07-14T15:30:19.161428</ts>
    <user>U4872964V</user>
    <text>`type Money = Money Int` I use</text>
  </message>
  <message>
    <ts>2017-07-14T15:30:25.164321</ts>
    <user>U5WS7CJLV</user>
    <text>The "what if's" just jump right into my mind</text>
  </message>
  <message>
    <ts>2017-07-14T15:30:36.169399</ts>
    <user>U23SA861Y</user>
    <text>program what you need</text>
  </message>
  <message>
    <ts>2017-07-14T15:30:41.171512</ts>
    <user>U4872964V</user>
    <text>just cents or whatever the lowest unit of money is</text>
  </message>
  <message>
    <ts>2017-07-14T15:30:41.171538</ts>
    <user>U23SA861Y</user>
    <text>not what you will need</text>
  </message>
  <message>
    <ts>2017-07-14T15:31:05.182801</ts>
    <user>U23SA861Y</user>
    <text>look at your domain and describe how it is, change it later if you need to</text>
  </message>
  <message>
    <ts>2017-07-14T15:31:14.186497</ts>
    <user>U5WS7CJLV</user>
    <text>&lt;@U23SA861Y&gt; (Int, Int) would have been a good one</text>
  </message>
  <message>
    <ts>2017-07-14T15:31:17.187895</ts>
    <user>U5WS7CJLV</user>
    <text>real simple that</text>
  </message>
  <message>
    <ts>2017-07-14T15:31:31.193774</ts>
    <user>U4872964V</user>
    <text>why two ints?</text>
  </message>
  <message>
    <ts>2017-07-14T15:31:37.196530</ts>
    <user>U5WS7CJLV</user>
    <text>lets you stay in dollars and cents, which I think is more natural</text>
  </message>
  <message>
    <ts>2017-07-14T15:31:53.203382</ts>
    <user>U4872964V</user>
    <text>gives you a lot of problems when adding etc, too complex :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-14T15:32:02.207062</ts>
    <user>U5WS7CJLV</user>
    <text>tha's true</text>
  </message>
  <message>
    <ts>2017-07-14T15:32:20.214419</ts>
    <user>U5WS7CJLV</user>
    <text>but then you can write a slick function for that! #theUrge</text>
  </message>
  <message>
    <ts>2017-07-14T15:32:20.214555</ts>
    <user>U23SA861Y</user>
    <text>yeah, if you just use a unit for the quatization thats good too</text>
  </message>
  <message>
    <ts>2017-07-14T15:33:11.236623</ts>
    <user>U4872964V</user>
    <text>I've built a shopping cart for instance, it's very easy just to use ints for Money, no problem with strange rounding for discounts etc</text>
  </message>
  <message>
    <ts>2017-07-14T15:34:00.257385</ts>
    <user>U5WS7CJLV</user>
    <text>yeah, you don't have to worry about negative where monies are concerned.  I believe that's what led me far afield.</text>
  </message>
  <message>
    <ts>2017-07-14T15:34:20.266034</ts>
    <user>U4872964V</user>
    <text>well, as you say, they can often be negative. discounts are, for instance :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-14T15:34:40.274772</ts>
    <user>U5WS7CJLV</user>
    <text>yep</text>
  </message>
  <message>
    <ts>2017-07-14T15:35:07.285946</ts>
    <user>U4872964V</user>
    <text>anyway, it's great practice to write those data types so keep it up!</text>
  </message>
  <message>
    <ts>2017-07-14T15:36:29.321519</ts>
    <user>U5WS7CJLV</user>
    <text>you fellows have day jobs?  I am just curious.  My secret identity is that of a work-a-day C# dev.  Native applications.  All of my Elming is purely for fun.</text>
  </message>
  <message>
    <ts>2017-07-14T15:37:30.346530</ts>
    <user>U23SA861Y</user>
    <text>Yeah, I've just got slack open all day</text>
  </message>
  <message>
    <ts>2017-07-14T15:37:35.348386</ts>
    <user>U4872964V</user>
    <text>yes, i work mostly with business systems but do some frontend work too</text>
  </message>
  <message>
    <ts>2017-07-14T15:38:05.361265</ts>
    <user>U1AN4JRFV</user>
    <text>Right there with ya'll. But pushing it as hard as possible.</text>
  </message>
  <message>
    <ts>2017-07-14T15:38:52.380849</ts>
    <user>U4872964V</user>
    <text>we are in the process of making some frontends for our system and I'm pushing Elm</text>
  </message>
  <message>
    <ts>2017-07-14T15:39:48.404168</ts>
    <user>U5WS7CJLV</user>
    <text>I hope you win.  I hope Elm wins.</text>
  </message>
  <message>
    <ts>2017-07-14T15:39:53.406243</ts>
    <user>U4872964V</user>
    <text>oh it will</text>
  </message>
  <message>
    <ts>2017-07-14T15:40:12.414744</ts>
    <user>U5WS7CJLV</user>
    <text>If I ever do escape native applications I want Elm to be there waiting for me</text>
  </message>
  <message>
    <ts>2017-07-14T15:40:35.424288</ts>
    <user>U4872964V</user>
    <text>yeah, well, Elm for native applications is not such a bad idea either</text>
  </message>
  <message>
    <ts>2017-07-14T15:40:52.431940</ts>
    <user>U5WS7CJLV</user>
    <text>here here!</text>
  </message>
  <message>
    <ts>2017-07-14T15:41:00.435206</ts>
    <user>U5WS7CJLV</user>
    <text>Elm :allthethings:</text>
  </message>
  <message>
    <ts>2017-07-14T15:43:46.504998</ts>
    <user>U653NCEEA</user>
    <text>Is there some way of getting the message and status code behind `NetworkError`?</text>
  </message>
  <message>
    <ts>2017-07-14T15:50:31.675709</ts>
    <user>U4872964V</user>
    <text>"means the user turned off their wifi, went in a cave, etc." :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-14T15:51:17.695711</ts>
    <user>U4872964V</user>
    <text>status codes you can get from `BadStatus` error</text>
  </message>
  <message>
    <ts>2017-07-14T15:51:21.697273</ts>
    <user>U653NCEEA</user>
    <text>Hehe, jupp…</text>
  </message>
  <message>
    <ts>2017-07-14T15:52:28.726009</ts>
    <user>U653NCEEA</user>
    <text>Okay, so i would be able to get, to say, a 401 from `BadStatus`?</text>
  </message>
  <message>
    <ts>2017-07-14T15:53:39.757078</ts>
    <user>U4872964V</user>
    <text>yes, the `Response` contains a `status` field with `code`and `message`:  &lt;http://package.elm-lang.org/packages/elm-lang/http/latest/Http#Response&gt;</text>
  </message>
  <message>
    <ts>2017-07-14T15:56:06.822133</ts>
    <user>U653NCEEA</user>
    <text>Perfect! Thanks a lot!</text>
  </message>
  <message>
    <ts>2017-07-14T15:57:12.851359</ts>
    <user>U4E8RTDPF</user>
    <text>Hey, I have two Commands that I am batching.

```
Cmd.batch
  [ one
  , two
  ]
```</text>
  </message>
  <message>
    <ts>2017-07-14T15:57:46.866631</ts>
    <user>U4E8RTDPF</user>
    <text>as I realized</text>
  </message>
  <message>
    <ts>2017-07-14T15:57:50.868701</ts>
    <user>U4E8RTDPF</user>
    <text>this is not happening sequentially</text>
  </message>
  <message>
    <ts>2017-07-14T15:58:19.881179</ts>
    <user>U4E8RTDPF</user>
    <text>how to make it sequential?</text>
  </message>
  <message>
    <ts>2017-07-14T15:59:10.903748</ts>
    <user>U4872964V</user>
    <text>well, there are several answers to that, what are the commands more exactly and why do you want them sequentially?</text>
  </message>
  <message>
    <ts>2017-07-14T16:02:19.989015</ts>
    <user>U4E8RTDPF</user>
    <text>&lt;@U4872964V&gt; they are http requests and one depends on another</text>
  </message>
  <message>
    <ts>2017-07-14T16:05:02.056885</ts>
    <user>U4872964V</user>
    <text>&lt;@U4E8RTDPF&gt;, so, if they depend on each other then maybe you should send the other one after you get the result from the first one, in your update function</text>
  </message>
  <message>
    <ts>2017-07-14T16:09:05.159170</ts>
    <user>U3FJSB596</user>
    <text>&lt;@U4E8RTDPF&gt; How about Elm Core Tasks?
&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Task&gt;</text>
  </message>
  <message>
    <ts>2017-07-14T16:09:33.170700</ts>
    <user>U3FJSB596</user>
    <text>Combine several task into the same task and then make it into a command</text>
  </message>
  <message>
    <ts>2017-07-14T16:09:57.180730</ts>
    <user>U4872964V</user>
    <text>Yes, if you have Tasks you can do that, but the Http module does not return Tasks</text>
  </message>
  <message>
    <ts>2017-07-14T16:11:07.210232</ts>
    <user>U3FJSB596</user>
    <text>Am I looking at the wrong package?
&lt;http://package.elm-lang.org/packages/evancz/elm-http/3.0.1/Http&gt;</text>
  </message>
  <message>
    <ts>2017-07-14T16:11:12.212466</ts>
    <user>U3FJSB596</user>
    <text>It only return tasks</text>
  </message>
  <message>
    <ts>2017-07-14T16:11:28.218861</ts>
    <user>U4872964V</user>
    <text>yes, &lt;http://package.elm-lang.org/packages/elm-lang/http/1.0.0&gt; is the current</text>
  </message>
  <message>
    <ts>2017-07-14T16:11:44.225756</ts>
    <user>U4E8RTDPF</user>
    <text>&lt;@U3FJSB596&gt; it's old one.</text>
  </message>
  <message>
    <ts>2017-07-14T16:11:53.229167</ts>
    <user>U4E8RTDPF</user>
    <text>&lt;@U4872964V&gt; yes you are right</text>
  </message>
  <message>
    <ts>2017-07-14T16:11:58.231143</ts>
    <user>U4E8RTDPF</user>
    <text>I should do that in the update</text>
  </message>
  <message>
    <ts>2017-07-14T16:12:20.240619</ts>
    <user>U4E8RTDPF</user>
    <text>but I was just curious if I was able to do something like cmd1 |&amp;gt; andThen cmd2 thing...</text>
  </message>
  <message>
    <ts>2017-07-14T16:12:38.247774</ts>
    <user>U3WM55ZG8</user>
    <text>you can create tasks with elm-lang/http too</text>
  </message>
  <message>
    <ts>2017-07-14T16:12:39.248274</ts>
    <user>U3WM55ZG8</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/http/1.0.0/Http#toTask&gt;</text>
  </message>
  <message>
    <ts>2017-07-14T16:12:48.251707</ts>
    <user>U3FJSB596</user>
    <text>At the very bottom of the module is `toTask` that explicitly says that it can be use for chaining requests</text>
  </message>
  <message>
    <ts>2017-07-14T16:12:57.255416</ts>
    <user>U4872964V</user>
    <text>&lt;@U3WM55ZG8&gt; oh yes, you're right</text>
  </message>
  <message>
    <ts>2017-07-14T16:13:06.258967</ts>
    <user>U4872964V</user>
    <text>then that's another option</text>
  </message>
  <message>
    <ts>2017-07-14T16:13:12.261159</ts>
    <user>U3FJSB596</user>
    <text>&lt;@U4E8RTDPF&gt; There's no chaining of Commands</text>
  </message>
  <message>
    <ts>2017-07-14T16:13:40.272818</ts>
    <user>U4E8RTDPF</user>
    <text>`toTask` nice ! thanks &lt;@U4872964V&gt; &lt;@U3FJSB596&gt; :raised_hands:</text>
  </message>
  <message>
    <ts>2017-07-14T16:14:12.285713</ts>
    <user>U4872964V</user>
    <text>i guess it depends on why one depend on the other</text>
  </message>
  <message>
    <ts>2017-07-14T16:14:25.290722</ts>
    <user>U4E8RTDPF</user>
    <text>still, it's better to go with the update way..</text>
  </message>
  <message>
    <ts>2017-07-14T16:14:28.291923</ts>
    <user>U4872964V</user>
    <text>which method is more suitable</text>
  </message>
  <message>
    <ts>2017-07-14T16:22:37.493466</ts>
    <user>U3LUC6SNS</user>
    <text>Hi all.  I've made some changes (added a package) to my project, and now `elm-test` fails to run (the app compiles).  Here is the error message:
```
jxxmbp:koko_client carlson$ elm-test
I cannot find module 'LatexParser.Latex'.

Module 'LatexParserTest' is trying to import it.

Potential problems could be:
  * Misspelled the module name
  * Need to add a source directory or new dependency to elm-package.json
```
I diffed the regular `elm-package.json` with the one in `tests`.  They are identical. So I am baffled.</text>
  </message>
  <message>
    <ts>2017-07-14T16:30:50.702105</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U3LUC6SNS&gt; Do you need to have `..` in the src directories in `tests/elm-package.json`</text>
  </message>
  <message>
    <ts>2017-07-14T16:32:01.732928</ts>
    <user>U3LUC6SNS</user>
    <text>In elm-tools parse is there a way to parse (and keep) everything from `\\[` to `\\]`?  I've been using code like
```
arg =
    succeed identity
        |. symbol "{"
        |= keep zeroOrMore (\c -&amp;gt; c /= '}')
        |. symbol "}"
```
but the boolean function takes a Char as argument, not a String.</text>
  </message>
  <message>
    <ts>2017-07-14T16:32:41.750083</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U0FP80EKB&gt; I tried that, but alas, it doesn't work. (same error message)</text>
  </message>
  <message>
    <ts>2017-07-14T16:33:22.767623</ts>
    <user>U0FP80EKB</user>
    <text>Interesting. I think the src directories are relative pathed from the location of the elm-package.json, so I don't think they should be identical.</text>
  </message>
  <message>
    <ts>2017-07-14T16:33:31.771259</ts>
    <user>U0FP80EKB</user>
    <text>Can you paste the source directories part?</text>
  </message>
  <message>
    <ts>2017-07-14T16:34:06.785831</ts>
    <user>U3LUC6SNS</user>
    <text>Do you mean the elm-package.json?</text>
  </message>
  <message>
    <ts>2017-07-14T16:34:26.794657</ts>
    <user>U0FP80EKB</user>
    <text>yeah</text>
  </message>
  <message>
    <ts>2017-07-14T16:34:39.800123</ts>
    <user>U3LUC6SNS</user>
    <text>Here we go:
```
{
    "version": "1.0.0",
    "summary": "helpful summary of your project, less than 80 characters",
    "repository": "&lt;https://github.com/user/project.git&gt;",
    "license": "BSD3",
    "source-directories": [
        "../src"
    ],
    "exposed-modules": [],
    "native-modules": true,
    "dependencies": {
        "NoRedInk/elm-decode-pipeline": "3.0.0 &amp;lt;= v &amp;lt; 4.0.0",
        "elm-community/list-extra": "6.1.0 &amp;lt;= v &amp;lt; 7.0.0",
        "elm-community/string-extra": "1.4.0 &amp;lt;= v &amp;lt; 2.0.0",
        "elm-lang/core": "5.1.1 &amp;lt;= v &amp;lt; 6.0.0",
        "elm-lang/html": "2.0.0 &amp;lt;= v &amp;lt; 3.0.0",
        "elm-lang/http": "1.0.0 &amp;lt;= v &amp;lt; 2.0.0",
        "elm-lang/navigation": "2.0.0 &amp;lt;= v &amp;lt; 3.0.0",
        "elm-lang/websocket": "1.0.2 &amp;lt;= v &amp;lt; 2.0.0",
        "elm-lang/window": "1.0.0 &amp;lt;= v &amp;lt; 2.0.0",
        "elm-tools/parser": "2.0.1 &amp;lt;= v &amp;lt; 3.0.0",
        "evancz/url-parser": "2.0.1 &amp;lt;= v &amp;lt; 3.0.0",
        "fbonetti/elm-phoenix-socket": "2.0.0 &amp;lt;= v &amp;lt; 3.0.0",
        "jystic/elm-font-awesome": "2.0.1 &amp;lt;= v &amp;lt; 3.0.0",
        "krisajenkins/remotedata": "4.3.0 &amp;lt;= v &amp;lt; 5.0.0",
        "lukewestby/elm-http-builder": "5.1.0 &amp;lt;= v &amp;lt; 6.0.0",
        "mdgriffith/style-elements": "3.2.3 &amp;lt;= v &amp;lt; 4.0.0",
        "simonh1000/elm-jwt": "5.0.0 &amp;lt;= v &amp;lt; 6.0.0"
    },
    "elm-version": "0.18.0 &amp;lt;= v &amp;lt; 0.19.0"
}
```</text>
  </message>
  <message>
    <ts>2017-07-14T16:35:10.812788</ts>
    <user>U3LUC6SNS</user>
    <text>It still has the ../src that I tried.</text>
  </message>
  <message>
    <ts>2017-07-14T16:36:02.834005</ts>
    <user>U0FP80EKB</user>
    <text>This is the one in `tests` ?</text>
  </message>
  <message>
    <ts>2017-07-14T16:36:17.839857</ts>
    <user>U0FP80EKB</user>
    <text>I'm assuming that the modules are in `../src`</text>
  </message>
  <message>
    <ts>2017-07-14T16:36:36.847790</ts>
    <user>U0FP80EKB</user>
    <text>Can you paste the package json from the root? non-tests?</text>
  </message>
  <message>
    <ts>2017-07-14T16:37:13.862661</ts>
    <user>U3LUC6SNS</user>
    <text>Yes.  Normally it says 
```
"source-directories": [
        "src"
    ],
```
All of my Elm files except tests are in `src`</text>
  </message>
  <message>
    <ts>2017-07-14T16:37:34.871807</ts>
    <user>U3LUC6SNS</user>
    <text>And the app compiles, which is one check</text>
  </message>
  <message>
    <ts>2017-07-14T16:37:57.881529</ts>
    <user>U0FP80EKB</user>
    <text>Hmm…. And you are running `elm-test` from within `tests` (sorry for the basic questions)</text>
  </message>
  <message>
    <ts>2017-07-14T16:38:57.905856</ts>
    <user>U0FP80EKB</user>
    <text>(just going over some of the things I've accidentally done)</text>
  </message>
  <message>
    <ts>2017-07-14T16:40:27.942651</ts>
    <user>U3LUC6SNS</user>
    <text>Just to be sure: `jxxmbp:koko_client carlson$ diff elm-package.json tests/elm-package.json `

No problem about the questions.  I've always run tests from the root directory.  If I do so from `tests`, I get this:
```
jxxmbp:tests carlson$ elm-test
No tests found in the test/ (or tests/) directory.

NOTE: Make sure you're running elm-test from your project's root directory, where its elm-package.json lives.
```</text>
  </message>
  <message>
    <ts>2017-07-14T16:42:05.982771</ts>
    <user>U0FP80EKB</user>
    <text>oh, interesting. I wonder if I do, as well.</text>
  </message>
  <message>
    <ts>2017-07-14T16:44:22.038849</ts>
    <user>U3SQ42JJW</user>
    <text>Hey everyone. I try to figure out a way to achieve the following:
I have a List of Poll. And I want to convert it to a List of RawItem where every RawItem contains the elements of PollItem plus the tstamp of the parent Poll

```
type alias Poll =
    { tstamp : Int
    , questionnaire : List PollItem
    }


type alias PollItem =
    { questionType : String
    , question : String
    , answer : String
    }
```


into this:
```
type alias RawItem =
    { tstamp : Int
    , questionType : String
    , question : String
    , answer : String
    }
```</text>
  </message>
  <message>
    <ts>2017-07-14T16:44:34.043983</ts>
    <user>U3SQ42JJW</user>
    <text>any ideas ?</text>
  </message>
  <message>
    <ts>2017-07-14T16:45:24.065177</ts>
    <user>U0FP80EKB</user>
    <text>&lt;@U3LUC6SNS&gt; Hmm… I'm out of ideas. Sorry.</text>
  </message>
  <message>
    <ts>2017-07-14T16:45:51.076411</ts>
    <user>U3SQ42JJW</user>
    <text>I tried to achieve that with nested List.map … but couldnt find a way how to transfer the tstamp into the deeper List.map</text>
  </message>
  <message>
    <ts>2017-07-14T16:45:56.078599</ts>
    <user>U3LUC6SNS</user>
    <text>No problem -- I appreciate the effort.  Will sort it out tomorrow</text>
  </message>
  <message>
    <ts>2017-07-14T16:50:08.180467</ts>
    <user>U4872964V</user>
    <text>&lt;@U3SQ42JJW&gt; make a function like this:
```
makeRawItem : Int -&amp;gt; PollItem -&amp;gt; RawItem
```
and then
```
List.map (makeRawItem poll.tstamp) poll.questionnaire
```</text>
  </message>
  <message>
    <ts>2017-07-14T16:51:02.203199</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U3SQ42JJW&gt; break it up into two steps. Have one step that converts a single Poll to a list of RawItems. Then use concatMap or something like that to repeat that for all of them. </text>
  </message>
  <message>
    <ts>2017-07-14T16:54:43.293062</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U0FP80EKB&gt; I brought out the nuclear weapon: `elm-test init` in the root directory.  this fixed things (and did not nuke my test file). Go figure!</text>
  </message>
  <message>
    <ts>2017-07-14T16:55:04.301842</ts>
    <user>U0FP80EKB</user>
    <text>haha! That works.</text>
  </message>
  <message>
    <ts>2017-07-14T16:57:12.354027</ts>
    <user>U3LUC6SNS</user>
    <text>Ha ha indeed!  Like rebooting the computer to solve 99% of mysterious problems.</text>
  </message>
  <message>
    <ts>2017-07-14T17:01:28.458494</ts>
    <user>U3SQ42JJW</user>
    <text>:smile: Thanks &lt;@U4F64AKQV&gt; &lt;@U4872964V&gt; and &lt;@U3FJSB596&gt; … ah I am still not functional… a partial applicated function like Martin showed did solve that. … Still have to learn… :wink:</text>
  </message>
  <message>
    <ts>2017-07-14T17:03:06.497135</ts>
    <user>U4F64AKQV</user>
    <text>It takes some time to get used to, but once you start to recognize the patterns it becomes really easy (even easier than imperative in my opinion)</text>
  </message>
  <message>
    <ts>2017-07-14T17:04:19.524827</ts>
    <user>U601ELFEG</user>
    <text>anyone got a good example of a module that needs to do several round trips through a `Cmd` and a `Sub` to get something done... and then offers essentially a `Cmd` and `Sub` like interface back to other (higher up) client modules?</text>
  </message>
  <message>
    <ts>2017-07-14T17:05:05.542339</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U3SQ42JJW&gt; I just made a tutorial on what it means to have a language use currying by default: &lt;http://codetidbit.com/#view/snipbit/596930d17890d775c05191f3/introduction&gt;

If anyone else is *struggling with currying*, perhaps that tutorial will help you!

Cheers :smile:</text>
  </message>
  <message>
    <ts>2017-07-14T17:05:52.560908</ts>
    <user>U3SQ42JJW</user>
    <text>amilner42: Thanks :smile:</text>
  </message>
  <message>
    <ts>2017-07-14T17:28:02.028392</ts>
    <user>U3LUC6SNS</user>
    <text>I have the following problem in the math/physics CMS that I am working on.  A snippet of a document in the editor looks like this:
```
% Test file
\emph{Pythagoras} said: \[ a^2 + b^2 = c^2 \] % basic geometry
Some physics: \begin{equation}
   E = mc^2
\end{equation}
```
That is, the user writes this, e.g., `\emph` and that is also what the user sees.  However, my latex parser needs this instead:
```
% Test file
\\emph{Pythagoras} said: \\[ a^2 + b^2 = c^2 \\] % basic geometry
Some physics: \\begin{equation}
   E = mc^2
\\end{equation}
```
That is, a backslash is escaped as `\\`.  How do I feed the parser what it needs from   what the user types in???</text>
  </message>
  <message>
    <ts>2017-07-14T17:28:40.040973</ts>
    <user>U3LUC6SNS</user>
    <text>(Ugh!)</text>
  </message>
  <message>
    <ts>2017-07-14T17:46:18.372854</ts>
    <user>U236M9FH9</user>
    <text>&lt;@U3LUC6SNS&gt; My simple solution would to search &amp;amp; replace w/ regex.</text>
  </message>
  <message>
    <ts>2017-07-14T17:46:36.378217</ts>
    <user>U236M9FH9</user>
    <text>Are you writing the parser? If so, why require double slashes instead of singles?</text>
  </message>
  <message>
    <ts>2017-07-14T17:58:54.592968</ts>
    <user>U23SA861Y</user>
    <text>the user shouldn't have to escape their file, that should only be for the regex's and such</text>
  </message>
  <message>
    <ts>2017-07-14T18:57:16.439923</ts>
    <user>U2GPAEU1L</user>
    <text>Hey everyone, I just made _yet another tutorial_, this one focusses on parameter order, *how to order your parameters to take advantage of currying*.

It's a short tutorial and is helpful for both beginners but also more experienced programmers.

&lt;http://codetidbit.com/#view/snipbit/59694b017890d775c05191f4/introduction&gt;

Cheers :smile:</text>
  </message>
  <message>
    <ts>2017-07-14T20:05:47.156509</ts>
    <user>U1ZFF0E5P</user>
    <text>I really wish that they swapped Dict.get as well in 0.18</text>
  </message>
  <message>
    <ts>2017-07-14T20:06:08.159330</ts>
    <user>U1ZFF0E5P</user>
    <text>I end up writing a flipped version in each project</text>
  </message>
  <message>
    <ts>2017-07-14T21:56:09.833889</ts>
    <user>U3HQVHERX</user>
    <text>any exercism users out there care to comment? &lt;http://exercism.io/nqthqn&gt; i'll return the favor :wink:</text>
  </message>
  <message>
    <ts>2017-07-14T23:17:34.185491</ts>
    <user>U2GPAEU1L</user>
    <text>I rarely partially apply `Dict.get`, but I see your point, if you're constantly accessing a dictionary, it'd save some dup code</text>
  </message>
  <message>
    <ts>2017-07-15T01:22:33.649638</ts>
    <user>U2UGVS24E</user>
    <text>Is using `toString` in real code something that should be avoided?</text>
  </message>
  <message>
    <ts>2017-07-15T01:22:56.650846</ts>
    <user>U2UGVS24E</user>
    <text>Say I have an `Int` and want to pass it into `Html.text`... how would I convert it to a string so that it can be displayed?</text>
  </message>
  <message>
    <ts>2017-07-15T01:37:38.699543</ts>
    <user>U14Q8S4EM</user>
    <text>I dont think there is anything wrong with that &lt;@U2UGVS24E&gt;</text>
  </message>
  <message>
    <ts>2017-07-15T01:37:58.700614</ts>
    <user>U2UGVS24E</user>
    <text>Looking at 0.19 notes, `Basics.toString` is being moved to `Debug.toString`</text>
  </message>
  <message>
    <ts>2017-07-15T01:38:05.700948</ts>
    <user>U2UGVS24E</user>
    <text>&lt;https://groups.google.com/forum/#!topic/elm-dev/hO-2DBq_h-U&gt;</text>
  </message>
  <message>
    <ts>2017-07-15T01:38:11.701264</ts>
    <user>U14Q8S4EM</user>
    <text>Oh really? Weird. I wonder why.</text>
  </message>
  <message>
    <ts>2017-07-15T01:40:31.708384</ts>
    <user>U14Q8S4EM</user>
    <text>"..providing String.fromInt and String.fromFloat for use in production code"</text>
  </message>
  <message>
    <ts>2017-07-15T01:41:05.710431</ts>
    <user>U2UGVS24E</user>
    <text>Ah......</text>
  </message>
  <message>
    <ts>2017-07-15T01:41:17.711124</ts>
    <user>U2UGVS24E</user>
    <text>Now that you pasted it, my brain interpreted it correctly</text>
  </message>
  <message>
    <ts>2017-07-15T01:41:25.711479</ts>
    <user>U2UGVS24E</user>
    <text>I read those as "toFloat" and "toInt" functions</text>
  </message>
  <message>
    <ts>2017-07-15T01:41:29.711702</ts>
    <user>U2UGVS24E</user>
    <text>I guess that makes sense</text>
  </message>
  <message>
    <ts>2017-07-15T01:42:25.714618</ts>
    <user>U14Q8S4EM</user>
    <text>Thats cool that they are keeping toString functions, I wonder what reasons they have for getting rid of the general purpose one.</text>
  </message>
  <message>
    <ts>2017-07-15T01:42:37.715219</ts>
    <user>U14Q8S4EM</user>
    <text>Like, from time to time, I like converting custom types to strings.</text>
  </message>
  <message>
    <ts>2017-07-15T01:42:38.715238</ts>
    <user>U2UGVS24E</user>
    <text>I suppose numbers are the only place where you should have to do this type of conversion in production code</text>
  </message>
  <message>
    <ts>2017-07-15T01:43:06.716628</ts>
    <user>U2UGVS24E</user>
    <text>I do that as well, but mainly during debugging</text>
  </message>
  <message>
    <ts>2017-07-15T01:43:49.718815</ts>
    <user>U4WH8STNX</user>
    <text>I guess separation of concerns, for now it might be that the same `toString` is being used but on another platform this implementation detail might change</text>
  </message>
  <message>
    <ts>2017-07-15T01:44:00.719284</ts>
    <user>U14Q8S4EM</user>
    <text>It doesnt always work, but Ive done a thing where if I have a custom type, and I need a css style to correspond to that custom type, I will make a class with the same name and then do `class (toString CustomType)`</text>
  </message>
  <message>
    <ts>2017-07-15T01:44:31.720853</ts>
    <user>U4WH8STNX</user>
    <text>&lt;@U14Q8S4EM&gt; maybe `rtfeldman/elm-css` would be a better option?</text>
  </message>
  <message>
    <ts>2017-07-15T01:45:04.722614</ts>
    <user>U14Q8S4EM</user>
    <text>Maybe. Yeah I havent used `rtfeldman/elm-css` yet.</text>
  </message>
  <message>
    <ts>2017-07-15T01:45:07.722763</ts>
    <user>U14Q8S4EM</user>
    <text>It does that kind of thing?</text>
  </message>
  <message>
    <ts>2017-07-15T01:45:16.723290</ts>
    <user>U4WH8STNX</user>
    <text>It is much better :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-15T01:46:04.726028</ts>
    <user>U4WH8STNX</user>
    <text>the basic case is that you don't wield any strings at all, you only define your union types and `Css.class` does the lifting</text>
  </message>
  <message>
    <ts>2017-07-15T01:48:02.732004</ts>
    <user>U4WH8STNX</user>
    <text>but if you only do this one `toString` that might be overkill, it's CSS though so that is not very likely to stay that clean</text>
  </message>
  <message>
    <ts>2017-07-15T01:54:55.753003</ts>
    <user>U153UK3FA</user>
    <text>`toString` is magic function, it breaks the type system</text>
  </message>
  <message>
    <ts>2017-07-15T01:57:33.761032</ts>
    <user>U2UGVS24E</user>
    <text>So outside of the new `String.fromInt` and `String.fromFloat`, there's no place where you should have to do such conversions... in theory?</text>
  </message>
  <message>
    <ts>2017-07-15T02:48:08.932624</ts>
    <user>U4872964V</user>
    <text>In &lt;#C4F9NBLR1|style-elements&gt; for instance, `toString` is used to make css class names based on the constructor names of a union type provided by the user</text>
  </message>
  <message>
    <ts>2017-07-15T02:48:37.934355</ts>
    <user>U4872964V</user>
    <text>but that may be something that is not the best choice anyway</text>
  </message>
  <message>
    <ts>2017-07-15T03:27:41.071939</ts>
    <user>U66RFDZ8F</user>
    <text>I just came across this in a tutorial, `on "change" (JD.succeed ImageSelected)`. 
I understand what it's doing, but my question is, why? </text>
  </message>
  <message>
    <ts>2017-07-15T03:29:12.077102</ts>
    <user>U3SJEDR96</user>
    <text>which part are you curious about?</text>
  </message>
  <message>
    <ts>2017-07-15T03:29:33.078340</ts>
    <user>U66RFDZ8F</user>
    <text>The JD.succeed part mostly </text>
  </message>
  <message>
    <ts>2017-07-15T03:29:48.079151</ts>
    <user>U66RFDZ8F</user>
    <text>And also why not just a simple `change` function? </text>
  </message>
  <message>
    <ts>2017-07-15T03:31:36.085955</ts>
    <user>U3SJEDR96</user>
    <text>Oh, right, so all the `onSomething` events are implemented this way; and it's the decoder receives a JS Event and uses that to decode into an Elm datastructure. For example with `onInput Foo`, it will do something like `JD.map Foo (&lt;http://JD.at|JD.at&gt; ["target", "value"] JD.string)` to extract the current state of the field that triggered the event</text>
  </message>
  <message>
    <ts>2017-07-15T03:31:51.086766</ts>
    <user>U3SJEDR96</user>
    <text>since `Html.Events` doesn't have an `onChange`, this is essentially how you'd write it</text>
  </message>
  <message>
    <ts>2017-07-15T03:32:27.088808</ts>
    <user>U3SJEDR96</user>
    <text>or you could abstract it to something like:
```
onChange : msg -&amp;gt; Attribute msg
onChange tagger =
  on "change" &amp;lt;| JD.succeed tagger
```</text>
  </message>
  <message>
    <ts>2017-07-15T03:33:40.093208</ts>
    <user>U4872964V</user>
    <text>you would probably want to get the target.value there too</text>
  </message>
  <message>
    <ts>2017-07-15T03:34:15.095335</ts>
    <user>U3SJEDR96</user>
    <text>True. `JD.map tagger Html.Events.targetValue` it is :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-15T03:36:07.101841</ts>
    <user>U66RFDZ8F</user>
    <text>I see </text>
  </message>
  <message>
    <ts>2017-07-15T03:37:09.105478</ts>
    <user>U66RFDZ8F</user>
    <text>So `succeed` was used because it didn't care about the contents of the event per sey</text>
  </message>
  <message>
    <ts>2017-07-15T03:37:26.106521</ts>
    <user>U4872964V</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-15T03:37:36.107054</ts>
    <user>U66RFDZ8F</user>
    <text>Just that makes so much sense now </text>
  </message>
  <message>
    <ts>2017-07-15T03:37:41.107336</ts>
    <user>U66RFDZ8F</user>
    <text>Thanks a bunch </text>
  </message>
  <message>
    <ts>2017-07-15T03:38:40.110395</ts>
    <user>U4872964V</user>
    <text>on the other hand, you know the target value for the select, so maybe you don't need to parse it from the event :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-15T03:39:08.111918</ts>
    <user>U66RFDZ8F</user>
    <text>Yeah</text>
  </message>
  <message>
    <ts>2017-07-15T03:39:08.111958</ts>
    <user>U4872964V</user>
    <text>or wait</text>
  </message>
  <message>
    <ts>2017-07-15T03:39:11.112079</ts>
    <user>U4872964V</user>
    <text>anyway</text>
  </message>
  <message>
    <ts>2017-07-15T03:39:26.112972</ts>
    <user>U66RFDZ8F</user>
    <text>In this tutorial, it just uses the event to call a port </text>
  </message>
  <message>
    <ts>2017-07-15T03:39:30.113194</ts>
    <user>U4872964V</user>
    <text>it's pretty low level, you need to know the DOM events etc</text>
  </message>
  <message>
    <ts>2017-07-15T03:39:41.113807</ts>
    <user>U66RFDZ8F</user>
    <text>&lt;https://www.paramander.com/blog/using-ports-to-deal-with-files-in-elm-0-17&gt;</text>
  </message>
  <message>
    <ts>2017-07-15T03:41:04.118805</ts>
    <user>U3SJEDR96</user>
    <text>ah, right. I've done something vaguely similar, though I did decode the `target` in Elm to a `Value` so I'd have the `files` accessible: &lt;https://ellie-app.com/3qpgdbQFFfqa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-15T03:41:44.121193</ts>
    <user>U3SJEDR96</user>
    <text>(and with a small change, it can also display the image: &lt;https://ellie-app.com/3qpgdbQFFfqa1/1&gt; )</text>
  </message>
  <message>
    <ts>2017-07-15T03:46:30.137250</ts>
    <user>U66RFDZ8F</user>
    <text>Much clearer IMO </text>
  </message>
  <message>
    <ts>2017-07-15T03:46:34.137434</ts>
    <user>U66RFDZ8F</user>
    <text>Thanks for the help </text>
  </message>
  <message>
    <ts>2017-07-15T03:47:31.140558</ts>
    <user>U4872964V</user>
    <text>it's interesting that "change" is the event for file inputs, not "input"</text>
  </message>
  <message>
    <ts>2017-07-15T03:47:48.141442</ts>
    <user>U4872964V</user>
    <text>but it sort of makes sense</text>
  </message>
  <message>
    <ts>2017-07-15T03:53:06.159064</ts>
    <user>U66RFDZ8F</user>
    <text>But still inconsistent</text>
  </message>
  <message>
    <ts>2017-07-15T03:55:38.167287</ts>
    <user>U4872964V</user>
    <text>well, change is emitted from the other field also, when they lose focus for instance, so maybe not so inconsistent</text>
  </message>
  <message>
    <ts>2017-07-15T03:57:00.171810</ts>
    <user>U66RFDZ8F</user>
    <text> But technically, the file input received some input right? </text>
  </message>
  <message>
    <ts>2017-07-15T03:59:06.178916</ts>
    <user>U4872964V</user>
    <text>yes, it sure did</text>
  </message>
  <message>
    <ts>2017-07-15T04:01:34.188892</ts>
    <user>U4872964V</user>
    <text>but the file input doesn't have the usual kind of value attribute that the others have</text>
  </message>
  <message>
    <ts>2017-07-15T04:02:48.193471</ts>
    <user>U4872964V</user>
    <text>it contains the file name, but generally you are after the file contents as well</text>
  </message>
  <message>
    <ts>2017-07-15T04:13:07.229609</ts>
    <user>U66RFDZ8F</user>
    <text>That makes sense also </text>
  </message>
  <message>
    <ts>2017-07-15T04:25:22.271695</ts>
    <user>U31FGNWCT</user>
    <text>Hello everyone! I'm trying to make an infix function like this:
```
import Html exposing (text)

(--&amp;gt;) : Float -&amp;gt; Float -&amp;gt; String 
(--&amp;gt;) num1 num2 =
   toString num2 - num1
     |&amp;gt; (++) "+"

main =
  text &amp;lt;| 2.0 --&amp;gt; 5.0
```
But I'm gettin' this:
```
Detected errors in 1 module.


-- SYNTAX PROBLEM --------------------------------------------------------------

I need whitespace, but got stuck on what looks like a new declaration. You are
either missing some stuff in the declaration above or just need to add some
spaces here:

5| (--&amp;gt;) num1 num2 =
   ^
I am looking for one of the following things:

    whitespace
```
What's wrong with it?</text>
  </message>
  <message>
    <ts>2017-07-15T04:28:18.281609</ts>
    <user>U3SJEDR96</user>
    <text>`--` is probably reserved as starting a comment</text>
  </message>
  <message>
    <ts>2017-07-15T04:28:33.282463</ts>
    <user>U4872964V</user>
    <text>yes, - starts a comment</text>
  </message>
  <message>
    <ts>2017-07-15T04:29:13.284637</ts>
    <user>U3SJEDR96</user>
    <text>(also you need braces around `num2 - num1` but that's a different matter)</text>
  </message>
  <message>
    <ts>2017-07-15T04:29:16.284779</ts>
    <user>U31FGNWCT</user>
    <text>Ah. As always you're right. Thank you!</text>
  </message>
  <message>
    <ts>2017-07-15T04:30:03.287319</ts>
    <user>U31FGNWCT</user>
    <text>Yeah. I removed braces right before posting it here, because I was trying to figure it out. Thanks!</text>
  </message>
  <message>
    <ts>2017-07-15T04:31:12.291585</ts>
    <user>U31FGNWCT</user>
    <text>Probably, reserved-word-cases deserve their own general compiler message, though</text>
  </message>
  <message>
    <ts>2017-07-15T04:33:42.300359</ts>
    <user>U66RFDZ8F</user>
    <text>Do you mind wrapping the self invoking function in parentheses? 
I missed the ending `() ` which confused me for a while. 
I'm referring to the `globalReader` assignment </text>
  </message>
  <message>
    <ts>2017-07-15T04:35:06.305289</ts>
    <user>U31FGNWCT</user>
    <text>Because it neither misses anything nor needs a whitespace before</text>
  </message>
  <message>
    <ts>2017-07-15T04:36:39.310853</ts>
    <user>U4872964V</user>
    <text>well, it actually starts a comment there</text>
  </message>
  <message>
    <ts>2017-07-15T04:36:45.311173</ts>
    <user>U3SJEDR96</user>
    <text>I'm not sure if I agree. The error you get is pretty bad, but `--` starts a comment everywhere except within a string-literal. Since you can put comments anywhere and they're basically considered whitespace... I don't know if that's really worth the effort</text>
  </message>
  <message>
    <ts>2017-07-15T04:37:51.314940</ts>
    <user>U4872964V</user>
    <text>especially since you normally shouldn't define infix operators</text>
  </message>
  <message>
    <ts>2017-07-15T04:37:55.315180</ts>
    <user>U31FGNWCT</user>
    <text>Hm. Indeed it should start a comment. In which case it's syntax highlighter problem</text>
  </message>
  <message>
    <ts>2017-07-15T04:38:01.315484</ts>
    <user>U3SJEDR96</user>
    <text>Oh, right. Good point. I can't actually edit that ellie anymore, though, that's from a month or 2 ago, but I'll keep it in mind next time I link it, thanks!</text>
  </message>
  <message>
    <ts>2017-07-15T04:39:07.319475</ts>
    <user>U31FGNWCT</user>
    <text>It's awesome, why shouldn't I? In scala it's considered to be a good practice.</text>
  </message>
  <message>
    <ts>2017-07-15T04:40:14.323204</ts>
    <user>U4872964V</user>
    <text>in some cases they are great, but normally you'd just make a function. operators have a global namespace (bug in Elm?) and they are not self-explanatory the way function names are</text>
  </message>
  <message>
    <ts>2017-07-15T04:40:38.324715</ts>
    <user>U4872964V</user>
    <text>also, there is the issue with precedence</text>
  </message>
  <message>
    <ts>2017-07-15T04:41:56.329344</ts>
    <user>U4872964V</user>
    <text>and elm-format does not know how to handle them</text>
  </message>
  <message>
    <ts>2017-07-15T04:44:31.338307</ts>
    <user>U31FGNWCT</user>
    <text>Do you mean &lt;https://github.com/elm-lang/core/issues/638&gt; ?</text>
  </message>
  <message>
    <ts>2017-07-15T04:45:33.342250</ts>
    <user>U4872964V</user>
    <text>yes, things like that. Elm is dropping more and more operators (! and =&amp;gt;). It makes sense to keep the traditional mathematical operators though</text>
  </message>
  <message>
    <ts>2017-07-15T04:46:49.346351</ts>
    <user>U31FGNWCT</user>
    <text>That's sad. Thank you for the information!</text>
  </message>
  <message>
    <ts>2017-07-15T04:47:04.347180</ts>
    <user>U66RFDZ8F</user>
    <text>Sad? No</text>
  </message>
  <message>
    <ts>2017-07-15T04:47:10.347510</ts>
    <user>U66RFDZ8F</user>
    <text>Actually very good </text>
  </message>
  <message>
    <ts>2017-07-15T04:47:22.348085</ts>
    <user>U66RFDZ8F</user>
    <text>It's easier to understand what's going on </text>
  </message>
  <message>
    <ts>2017-07-15T04:47:45.349425</ts>
    <user>U66RFDZ8F</user>
    <text>Giving that searching for infixes on Google is damn hard </text>
  </message>
  <message>
    <ts>2017-07-15T04:47:58.350117</ts>
    <user>U66RFDZ8F</user>
    <text>Fancy search solves that but still... </text>
  </message>
  <message>
    <ts>2017-07-15T04:48:48.352687</ts>
    <user>U4872964V</user>
    <text>People have different preferences here, but Elm (Evan) is quite opinionated :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-15T04:52:37.365138</ts>
    <user>U66RFDZ8F</user>
    <text>And not in a bad way I feel </text>
  </message>
  <message>
    <ts>2017-07-15T04:53:21.367613</ts>
    <user>U31FGNWCT</user>
    <text>BDFL, as they say in python community</text>
  </message>
  <message>
    <ts>2017-07-15T04:53:55.369237</ts>
    <user>U4872964V</user>
    <text>But feel free to use them in your code though, just beware of the drawbacks.</text>
  </message>
  <message>
    <ts>2017-07-15T04:55:27.374362</ts>
    <user>U31FGNWCT</user>
    <text>I understand. If there is a risk of deprecation, I don't think It's a good idea to use them in a production codebase, in my case at least.</text>
  </message>
  <message>
    <ts>2017-07-15T04:55:52.375817</ts>
    <user>U4872964V</user>
    <text>well, upgrading them will be automatic in most cases though</text>
  </message>
  <message>
    <ts>2017-07-15T04:56:25.377720</ts>
    <user>U4872964V</user>
    <text>just one more thing to do when moving to the next version</text>
  </message>
  <message>
    <ts>2017-07-15T04:57:34.381520</ts>
    <user>U31FGNWCT</user>
    <text>never did an authomatic upgrade, but sounds frightening from js perspective</text>
  </message>
  <message>
    <ts>2017-07-15T04:57:55.382580</ts>
    <user>U4872964V</user>
    <text>indeed, but from an Elm perspective it's not :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-15T04:58:04.383014</ts>
    <user>U31FGNWCT</user>
    <text>I guess as always it's a delight in elm</text>
  </message>
  <message>
    <ts>2017-07-15T04:58:07.383212</ts>
    <user>U31FGNWCT</user>
    <text>yeah</text>
  </message>
  <message>
    <ts>2017-07-15T04:58:13.383513</ts>
    <user>U31FGNWCT</user>
    <text>Thank you!</text>
  </message>
  <message>
    <ts>2017-07-15T04:58:20.383827</ts>
    <user>U31FGNWCT</user>
    <text>Have a nice day.</text>
  </message>
  <message>
    <ts>2017-07-15T06:04:56.611982</ts>
    <user>U68471J6P</user>
    <text>Is it possible to have inline custom types in record definitions or do i have to define the custom type before using it in the record?</text>
  </message>
  <message>
    <ts>2017-07-15T06:07:56.622585</ts>
    <user>U3SJEDR96</user>
    <text>you mean in a type alias that describes a record? You need to define the type before you can use it in an alias :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-15T06:08:19.623961</ts>
    <user>U68471J6P</user>
    <text>That's what I thought :+1:</text>
  </message>
  <message>
    <ts>2017-07-15T06:08:29.624476</ts>
    <user>U3SJEDR96</user>
    <text>an alias is nothing more than "I have this shape and I want to refer to it by a shorter name". In the case of records, you also get a free constructor function for that shape.</text>
  </message>
  <message>
    <ts>2017-07-15T06:09:21.627594</ts>
    <user>U68471J6P</user>
    <text>Thank you for the help :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-15T07:55:48.988674</ts>
    <user>U30J8RTKJ</user>
    <text>Hi, I have some nested data structure. I'm traversing this structure and I'm building view. My question is how to add unique id to each created html element?</text>
  </message>
  <message>
    <ts>2017-07-15T08:00:10.004212</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U30J8RTKJ&gt; what would you be you using the unique id for?</text>
  </message>
  <message>
    <ts>2017-07-15T08:07:31.031162</ts>
    <user>U30J8RTKJ</user>
    <text>&lt;@U153UK3FA&gt; styling</text>
  </message>
  <message>
    <ts>2017-07-15T08:07:59.032639</ts>
    <user>U4872964V</user>
    <text>so how would you know what id to style?</text>
  </message>
  <message>
    <ts>2017-07-15T08:13:32.052760</ts>
    <user>U30J8RTKJ</user>
    <text>well, it looks like this approach doesn't make sense in elm ..., i have to think this through ...</text>
  </message>
  <message>
    <ts>2017-07-15T08:16:03.062257</ts>
    <user>U4872964V</user>
    <text>what do you actually want to do?</text>
  </message>
  <message>
    <ts>2017-07-15T08:16:29.063691</ts>
    <user>U30J8RTKJ</user>
    <text>I've just realized that when I've asked question</text>
  </message>
  <message>
    <ts>2017-07-15T08:19:21.073931</ts>
    <user>U30J8RTKJ</user>
    <text>I have some nested json which describes board game, in the view function I'm traversing this structure, I have just relized that I have to convert this json to some record and just modify this record to update the view ....</text>
  </message>
  <message>
    <ts>2017-07-15T08:19:52.075625</ts>
    <user>U30J8RTKJ</user>
    <text>and I have to use this record in the view function</text>
  </message>
  <message>
    <ts>2017-07-15T08:22:27.084871</ts>
    <user>U4872964V</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-15T08:54:59.204758</ts>
    <user>U494Y62N7</user>
    <text>what is the difference between `number` and `int` and how can i cast one to the other?</text>
  </message>
  <message>
    <ts>2017-07-15T08:55:32.206820</ts>
    <user>U494Y62N7</user>
    <text>and is there anywhere in documentation that has this listed?</text>
  </message>
  <message>
    <ts>2017-07-15T08:55:59.208730</ts>
    <user>U4872964V</user>
    <text>`number` is a pseudo-type which could be both `Int` and `Float`</text>
  </message>
  <message>
    <ts>2017-07-15T08:56:20.210069</ts>
    <user>U4872964V</user>
    <text>you can't have an actual value of type `number` you can only have `Int` or `Float`</text>
  </message>
  <message>
    <ts>2017-07-15T08:56:47.211591</ts>
    <user>U3SJEDR96</user>
    <text>except a literal number (`1 : number`)</text>
  </message>
  <message>
    <ts>2017-07-15T08:56:53.211978</ts>
    <user>U494Y62N7</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-15T08:56:56.212147</ts>
    <user>U494Y62N7</user>
    <text>that's what's happening to me</text>
  </message>
  <message>
    <ts>2017-07-15T08:57:13.213219</ts>
    <user>U494Y62N7</user>
    <text>i have defaults that i create</text>
  </message>
  <message>
    <ts>2017-07-15T08:57:20.213736</ts>
    <user>U494Y62N7</user>
    <text>and the compiler thinks they're numbers instead of ints</text>
  </message>
  <message>
    <ts>2017-07-15T08:57:37.214859</ts>
    <user>U3SJEDR96</user>
    <text>You generally want to use `Int` rather than `number`, if you're dealing with integers</text>
  </message>
  <message>
    <ts>2017-07-15T08:57:44.215327</ts>
    <user>U3SJEDR96</user>
    <text>and `Float` when dealing floats</text>
  </message>
  <message>
    <ts>2017-07-15T08:57:48.215588</ts>
    <user>U4872964V</user>
    <text>&lt;@U494Y62N7&gt; add a type signature</text>
  </message>
  <message>
    <ts>2017-07-15T08:57:50.215748</ts>
    <user>U3SJEDR96</user>
    <text>Can you show the code and the error?</text>
  </message>
  <message>
    <ts>2017-07-15T08:58:06.216828</ts>
    <user>U494Y62N7</user>
    <text>sure</text>
  </message>
  <message>
    <ts>2017-07-15T09:00:33.227670</ts>
    <user>U4872964V</user>
    <text>Oh, `Cmd Int`</text>
  </message>
  <message>
    <ts>2017-07-15T09:00:33.227706</ts>
    <user>U3SJEDR96</user>
    <text>Okay, so that's actually a completely different error - you can't just "make" a `Cmd` like that</text>
  </message>
  <message>
    <ts>2017-07-15T09:00:52.229248</ts>
    <user>U494Y62N7</user>
    <text>ah</text>
  </message>
  <message>
    <ts>2017-07-15T09:01:09.230502</ts>
    <user>U494Y62N7</user>
    <text>any hints on how i should go about making the command?</text>
  </message>
  <message>
    <ts>2017-07-15T09:01:21.231389</ts>
    <user>U494Y62N7</user>
    <text>i see this `!` operator everywhere, i just don't know how to properly use it</text>
  </message>
  <message>
    <ts>2017-07-15T09:01:48.233210</ts>
    <user>U3SJEDR96</user>
    <text>most likely, you actually don't want to do that - rather, you want to take the logic that is executed in response to that command, and execute _that logic_</text>
  </message>
  <message>
    <ts>2017-07-15T09:01:48.233247</ts>
    <user>U4872964V</user>
    <text>you don't need a Cmd, just call the function to generate the colors directly in your `init`</text>
  </message>
  <message>
    <ts>2017-07-15T09:02:37.236767</ts>
    <user>U4872964V</user>
    <text>or, if it's a random generator, put that Cmd there</text>
  </message>
  <message>
    <ts>2017-07-15T09:02:47.237482</ts>
    <user>U494Y62N7</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-15T11:58:21.046284</ts>
    <user>U1NME8MS8</user>
    <text>Hi!</text>
  </message>
  <message>
    <ts>2017-07-15T11:58:55.049134</ts>
    <user>U1NME8MS8</user>
    <text>How would you store colors in a library? rgb(1, 2, 3) or triples/quadruples etc.?</text>
  </message>
  <message>
    <ts>2017-07-15T12:04:02.077476</ts>
    <user>U4872964V</user>
    <text>there is a `Color` type in Elm if that is sufficient</text>
  </message>
  <message>
    <ts>2017-07-15T12:06:15.089148</ts>
    <user>U4872964V</user>
    <text>but if there weren't I'd probably make a triple/quadruple or a corresponding single constructor union type</text>
  </message>
  <message>
    <ts>2017-07-15T12:06:20.089491</ts>
    <user>U4872964V</user>
    <text>or a record</text>
  </message>
  <message>
    <ts>2017-07-15T12:06:58.092569</ts>
    <user>U3SJEDR96</user>
    <text>It depends on what you need them for and what you plan to do with them, really</text>
  </message>
  <message>
    <ts>2017-07-15T12:12:45.121831</ts>
    <user>U1NME8MS8</user>
    <text>&lt;@U3SJEDR96&gt; personally I think the usecase would be css or SVG</text>
  </message>
  <message>
    <ts>2017-07-15T12:14:51.132230</ts>
    <user>U3SJEDR96</user>
    <text>There are quite a few libraries that deal with that already, though. &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Color&gt; in core, &lt;http://package.elm-lang.org/packages/eskimoblood/elm-color-extra/5.0.0/Color-Convert&gt; for blending, transforming, converting, manipulating, &lt;http://package.elm-lang.org/packages/mdgriffith/elm-color-mixing/latest&gt; for mixing and whatnot, ...</text>
  </message>
  <message>
    <ts>2017-07-15T12:16:21.139987</ts>
    <user>U67HJ10TX</user>
    <text>Hi, i'm tinkering with Elm and I wrote this simple opinion poll, just wondering if the "if..else..." in the Update function is idiomatic Elm
```
module Main exposing (..)

import Html exposing (Html, div, fieldset, input, label, text)
import Html.Attributes exposing (name, style, type_)
import Html.Events exposing (onClick)


-- MODEL


type alias Model =
    { question : String
    , choiceOne : Int
    , choiceTwo : Int
    }


type Party
    = Jubilee
    | NASA
    | Wareva


type Msg
    = NoOp
    | Vote Party


initModel : Model
initModel =
    { question = ""
    , choiceOne = 0
    , choiceTwo = 0
    }



-- UPDATE


update : Msg -&amp;gt; Model -&amp;gt; Model
update msg model =
    case msg of
        NoOp -&amp;gt;
            model

        Vote party -&amp;gt;
            let
                partyName =
                    toString party
            in
                if partyName == "Jubilee" then
                    { model | choiceOne = model.choiceOne + 1 }
                else if partyName == "NASA" then
                    { model | choiceTwo = model.choiceTwo + 1 }
                else
                    model



-- VIEW


view : Model -&amp;gt; Html Msg
view model =
    div []
        [ fieldset []
            [ radio "Jubilee" (Vote Jubilee)
            , radio "NASA" (Vote NASA)
            , radio "Wareva!!" (Vote Wareva)
            ]
        ]


radio : String -&amp;gt; msg -&amp;gt; Html msg
radio value msg =
    label
        [ style [ ( "padding", "20px" ) ] ]
        [ input [ type_ "radio", name "font-size", onClick msg ] []
        , text value
        ]


main =
    Html.beginnerProgram { model = initModel, view = view, update = update }
```</text>
  </message>
  <message>
    <ts>2017-07-15T12:24:29.182185</ts>
    <user>U1NME8MS8</user>
    <text>&lt;@U3SJEDR96&gt; I try to provide a package which integrates the colorbrewer colors</text>
  </message>
  <message>
    <ts>2017-07-15T12:28:07.200152</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U67HJ10TX&gt; you should use a `case..of` block for that</text>
  </message>
  <message>
    <ts>2017-07-15T12:35:35.239092</ts>
    <user>U1NME8MS8</user>
    <text>&lt;@U3SJEDR96&gt; I went with examples like ```set23 : List (Int, Int, Int)
set23 = [(102, 194, 165), (252, 141, 98), (141, 160, 203)]``` now</text>
  </message>
  <message>
    <ts>2017-07-15T12:48:37.302792</ts>
    <user>U4872964V</user>
    <text>&lt;@U67HJ10TX&gt; `if then else` or `case` are both fine here.</text>
  </message>
  <message>
    <ts>2017-07-15T13:02:35.372847</ts>
    <user>U4872964V</user>
    <text>oh i missed that part, how about just `case` matching on the actual `Party` type?</text>
  </message>
  <message>
    <ts>2017-07-15T13:02:50.374097</ts>
    <user>U4872964V</user>
    <text>that's the idiomatic Elm in this case, for sure</text>
  </message>
  <message>
    <ts>2017-07-15T13:33:24.522486</ts>
    <user>U663M2MB7</user>
    <text>Is there a way to make elm-format not ruining my comments? It treats every comment as standard ones from the elm architecture. I want my comments to sit on top of the functions I write, not with two new lines in between them.</text>
  </message>
  <message>
    <ts>2017-07-15T13:38:25.547164</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U663M2MB7&gt; the philosophy to elm-format is that elm-format formats your code how it wants and you get used to reading code formatted as elm-format formats it.</text>
  </message>
  <message>
    <ts>2017-07-15T13:39:34.552594</ts>
    <user>U663M2MB7</user>
    <text>I get that, but having comments three lines above the actual function? Surely I cannot be the only one who feels that is pretty awkward?</text>
  </message>
  <message>
    <ts>2017-07-15T13:44:29.576355</ts>
    <user>U153UK3FA</user>
    <text>ah, that doesn't sound right.</text>
  </message>
  <message>
    <ts>2017-07-15T13:44:37.576875</ts>
    <user>U153UK3FA</user>
    <text>can you give an example of the code?</text>
  </message>
  <message>
    <ts>2017-07-15T13:44:56.578329</ts>
    <user>U663M2MB7</user>
    <text>Well, it does it pretty much when ever I put in a comment, but sure</text>
  </message>
  <message>
    <ts>2017-07-15T13:45:24.580715</ts>
    <user>U3SJEDR96</user>
    <text>try using `{-` and `-}` to delimit your comments for functions</text>
  </message>
  <message>
    <ts>2017-07-15T13:45:35.581637</ts>
    <user>U3SJEDR96</user>
    <text>or `{-|` and `-}` to create doc-comments</text>
  </message>
  <message>
    <ts>2017-07-15T13:46:12.584747</ts>
    <user>U3SJEDR96</user>
    <text>`-- foo` at the top-level is interpreted as a "section" delimiter, or that's how I think of it anyway</text>
  </message>
  <message>
    <ts>2017-07-15T13:46:57.588431</ts>
    <user>U153UK3FA</user>
    <text>&lt;https://github.com/avh4/elm-format/blob/master/Style%20Guide/Sections.md&gt;</text>
  </message>
  <message>
    <ts>2017-07-15T13:47:16.589874</ts>
    <user>U153UK3FA</user>
    <text>&lt;https://github.com/avh4/elm-format/blob/master/Style%20Guide/Declarations.md&gt;</text>
  </message>
  <message>
    <ts>2017-07-15T13:47:22.590380</ts>
    <user>U663M2MB7</user>
    <text>&lt;@U3SJEDR96&gt; that has the same result though</text>
  </message>
  <message>
    <ts>2017-07-15T13:48:12.594329</ts>
    <user>U3SJEDR96</user>
    <text>ah, indeed, it needs to be a doc-comment</text>
  </message>
  <message>
    <ts>2017-07-15T13:48:46.597046</ts>
    <user>U663M2MB7</user>
    <text>&lt;@U153UK3FA&gt; guess you don't need that code example after all</text>
  </message>
  <message>
    <ts>2017-07-15T13:49:16.599441</ts>
    <user>U663M2MB7</user>
    <text>But okay, so `--` is strictly for sections then.</text>
  </message>
  <message>
    <ts>2017-07-15T13:49:57.602694</ts>
    <user>U663M2MB7</user>
    <text>Opening a comment with `{-|` is good :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-15T13:50:45.606628</ts>
    <user>U3SJEDR96</user>
    <text>note, also, that those comments are also used to generate documentation for packages</text>
  </message>
  <message>
    <ts>2017-07-15T13:51:48.611888</ts>
    <user>U663M2MB7</user>
    <text>I see. It stills feel kinda awkward though,  having two new lines inserted when ever you do simple `--` on a comment though. I guess I will just get used to it.</text>
  </message>
  <message>
    <ts>2017-07-15T14:06:27.683005</ts>
    <user>U4872964V</user>
    <text>Just use the doc-comments, i suppose you are documenting your functions, right?</text>
  </message>
  <message>
    <ts>2017-07-15T14:07:32.688504</ts>
    <user>U2D07QZN3</user>
    <text>I need to use csv data.  I see elm-csv for parsing, but can someone point me to an example of getting the data from a server?</text>
  </message>
  <message>
    <ts>2017-07-15T14:08:51.694925</ts>
    <user>U4872964V</user>
    <text>&lt;@U2D07QZN3&gt; is it the basics of getting data from a server you're after, or specifically how to treat it as CSV?</text>
  </message>
  <message>
    <ts>2017-07-15T14:09:31.698189</ts>
    <user>U4872964V</user>
    <text>the parser expects a `String`, so `Http.getString` should do the job</text>
  </message>
  <message>
    <ts>2017-07-15T14:10:26.702615</ts>
    <user>U4872964V</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/http/1.0.0/Http#send&gt;</text>
  </message>
  <message>
    <ts>2017-07-15T14:12:57.715367</ts>
    <user>U2D07QZN3</user>
    <text>Thanks, that should to it (I'm very new at this_)</text>
  </message>
  <message>
    <ts>2017-07-15T14:55:38.918519</ts>
    <user>U4TG1J2KA</user>
    <text>hey, I'm trying to encode a Maybe Int to send to the back end. It's easy to decode a field that may be nullable, using something like Json.Decode.nullable or Json.Decode.oneOf, but I don't see any similar function on the encoding side. What's the best practice way of doing this?</text>
  </message>
  <message>
    <ts>2017-07-15T14:56:34.922704</ts>
    <user>U1UGYHGCA</user>
    <text>```
maybeInt
|&amp;gt; Maybe.map &lt;http://Json.Encode.int|Json.Encode.int&gt;
|&amp;gt; Maybe.withDefault Json.Encode.null
```</text>
  </message>
  <message>
    <ts>2017-07-15T14:57:24.926467</ts>
    <user>U2SR9DL7Q</user>
    <text>say you've defined a type `FunType = type FunType Int Int`. How would you extract just the `Ints` later? Or would you just do `type alias FunType = { firstInt : Int, secondInt: Int }` ?</text>
  </message>
  <message>
    <ts>2017-07-15T14:58:03.929441</ts>
    <user>U1UGYHGCA</user>
    <text>Pattern matching</text>
  </message>
  <message>
    <ts>2017-07-15T14:59:06.934735</ts>
    <user>U1UGYHGCA</user>
    <text>```
extractor: FunType -&amp;gt; (Int, Int)
extractor value =
  case value of
    FunType i1 i2 -&amp;gt; (i1, i2)
```</text>
  </message>
  <message>
    <ts>2017-07-15T14:59:16.935598</ts>
    <user>U1UGYHGCA</user>
    <text>Or maybe even</text>
  </message>
  <message>
    <ts>2017-07-15T14:59:41.937736</ts>
    <user>U1UGYHGCA</user>
    <text>```
extractor FunType -&amp;gt; (Int, Int)
extractor (FunType i1 i2) =
  (i1, i2)
```</text>
  </message>
  <message>
    <ts>2017-07-15T15:00:01.939489</ts>
    <user>U1UGYHGCA</user>
    <text>Since your type can only have one value</text>
  </message>
  <message>
    <ts>2017-07-15T15:02:08.951560</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U1UGYHGCA&gt; brilliant. Thanks. I'm thinking the type alias with the named fields might be better for this example then. Avoids a whole new function on my end.</text>
  </message>
  <message>
    <ts>2017-07-15T15:03:02.956085</ts>
    <user>U1UGYHGCA</user>
    <text>That was just an example, you would do the pattern matching directly when using the type, you wouldn't need such function in real code</text>
  </message>
  <message>
    <ts>2017-07-15T15:03:29.958265</ts>
    <user>U1UGYHGCA</user>
    <text>But yeah, depends on your need, the type alias might be more readable if you assign names to both int</text>
  </message>
  <message>
    <ts>2017-07-15T15:04:03.961237</ts>
    <user>U1UGYHGCA</user>
    <text>You can do the same pattern matching directly inside the function args</text>
  </message>
  <message>
    <ts>2017-07-15T15:04:43.964305</ts>
    <user>U1UGYHGCA</user>
    <text>```
extractor FunType -&amp;gt; (Int, Int)
extractor { firstInt, secondInt } =
  (firstInt, secondInt)
```</text>
  </message>
  <message>
    <ts>2017-07-15T15:06:03.970909</ts>
    <user>U2SR9DL7Q</user>
    <text>I'll try both, and see which looks better</text>
  </message>
  <message>
    <ts>2017-07-15T15:59:21.218097</ts>
    <user>U39DE7RQ9</user>
    <text>I need help. Im creating a SPA and using a butchered version of rtfeldmans SPA example. Now my pages does not load unless I click enter in the url. So the URL is updated when I click a link (a href...) but there is nothing listening for OnLocationChange. Anybody?</text>
  </message>
  <message>
    <ts>2017-07-15T16:03:02.236291</ts>
    <user>U39DE7RQ9</user>
    <text>In &lt;@U0CL0AS3V&gt; code he does not use the OnLocationChange message like in the elm tutorial. The update function is triggered though but not the SetRoute function that should be called for the page to be changed. I cannot find the code that I am missing.</text>
  </message>
  <message>
    <ts>2017-07-15T16:03:31.238346</ts>
    <user>U1UGYHGCA</user>
    <text>&lt;https://github.com/rtfeldman/elm-spa-example/blob/master/src/Main.elm#L478&gt;</text>
  </message>
  <message>
    <ts>2017-07-15T16:03:47.239549</ts>
    <user>U1UGYHGCA</user>
    <text>That's the line which will send a `SetRoute` msg every time the location change</text>
  </message>
  <message>
    <ts>2017-07-15T16:04:40.243478</ts>
    <user>U1UGYHGCA</user>
    <text>It uses &lt;https://github.com/elm-lang/navigation&gt;</text>
  </message>
  <message>
    <ts>2017-07-15T16:05:26.247220</ts>
    <user>U39DE7RQ9</user>
    <text>&lt;@U1UGYHGCA&gt; OK, that makes sense but I must be missing something else. I have that code but SetRoute is not run</text>
  </message>
  <message>
    <ts>2017-07-15T16:06:20.251242</ts>
    <user>U39DE7RQ9</user>
    <text>Should the init function run each time the location updates?</text>
  </message>
  <message>
    <ts>2017-07-15T16:06:33.252323</ts>
    <user>U39DE7RQ9</user>
    <text>In my case it does not, can that be a hint?</text>
  </message>
  <message>
    <ts>2017-07-15T16:06:40.252905</ts>
    <user>U1UGYHGCA</user>
    <text>Nope, the init function is only ran once ever</text>
  </message>
  <message>
    <ts>2017-07-15T16:06:50.253607</ts>
    <user>U39DE7RQ9</user>
    <text>OK</text>
  </message>
  <message>
    <ts>2017-07-15T16:08:46.262066</ts>
    <user>U39DE7RQ9</user>
    <text>Found it!! I was missing the SetRoute case in my UpdatePage function.</text>
  </message>
  <message>
    <ts>2017-07-15T16:09:10.263907</ts>
    <user>U1UGYHGCA</user>
    <text>Compilation should have failed</text>
  </message>
  <message>
    <ts>2017-07-15T16:09:28.265122</ts>
    <user>U39DE7RQ9</user>
    <text>Seems like I usualy find my errors my self only after I have asked for help. Thanks anyway &lt;@U1UGYHGCA&gt;</text>
  </message>
  <message>
    <ts>2017-07-15T16:09:39.265884</ts>
    <user>U1UGYHGCA</user>
    <text>Np</text>
  </message>
  <message>
    <ts>2017-07-15T16:10:28.269480</ts>
    <user>U39DE7RQ9</user>
    <text>I had this case at the bottom:  ( _, _ )</text>
  </message>
  <message>
    <ts>2017-07-15T16:10:30.269721</ts>
    <user>U4872964V</user>
    <text>yes, he seems to have a catch-all there</text>
  </message>
  <message>
    <ts>2017-07-15T16:10:43.270872</ts>
    <user>U39DE7RQ9</user>
    <text>Yepp</text>
  </message>
  <message>
    <ts>2017-07-15T16:10:44.271010</ts>
    <user>U4872964V</user>
    <text>should really be a catch all per page I think</text>
  </message>
  <message>
    <ts>2017-07-15T16:11:18.273725</ts>
    <user>U4872964V</user>
    <text>like the NotFound case, but for each page</text>
  </message>
  <message>
    <ts>2017-07-15T16:11:23.274064</ts>
    <user>U39DE7RQ9</user>
    <text>&lt;@U4872964V&gt; make a pull request ?</text>
  </message>
  <message>
    <ts>2017-07-15T16:11:36.275095</ts>
    <user>U1UGYHGCA</user>
    <text>Yeah, having catch-all is never good for compilation</text>
  </message>
  <message>
    <ts>2017-07-15T16:12:18.278408</ts>
    <user>U4872964V</user>
    <text>not sure how you would handle it here actually</text>
  </message>
  <message>
    <ts>2017-07-15T16:12:56.281197</ts>
    <user>U4872964V</user>
    <text>catch-all for the message with _ for page I think</text>
  </message>
  <message>
    <ts>2017-07-15T16:14:34.287724</ts>
    <user>U4872964V</user>
    <text>i'll make an issue</text>
  </message>
  <message>
    <ts>2017-07-15T16:17:27.300152</ts>
    <user>U4872964V</user>
    <text>&lt;https://github.com/rtfeldman/elm-spa-example/issues/27&gt;</text>
  </message>
  <message>
    <ts>2017-07-15T16:34:05.374187</ts>
    <user>U39DE7RQ9</user>
    <text>:+1:</text>
  </message>
  <message>
    <ts>2017-07-15T16:52:36.452758</ts>
    <user>U69D8R59S</user>
    <text>Is there a way to get a property off a record if it's in a `Maybe`?

My array looks like `[ { score: 1 }, {score: 2} ]`

I thought I could do something like `Maybe.withDefault 20 (get 1 array).score`, but it looks like I'm misunderstanding `Maybe`s.</text>
  </message>
  <message>
    <ts>2017-07-15T16:53:16.455678</ts>
    <user>U1UGYHGCA</user>
    <text>```
get 1 array
|&amp;gt; Maybe.map .score
|&amp;gt; Maybe.withDefault 20
```</text>
  </message>
  <message>
    <ts>2017-07-15T16:53:18.455796</ts>
    <user>U3SJEDR96</user>
    <text>`get 1 array |&amp;gt; Maybe.map .score |&amp;gt; Maybe.withDefault 20`</text>
  </message>
  <message>
    <ts>2017-07-15T16:53:21.455989</ts>
    <user>U3SJEDR96</user>
    <text>:smile:</text>
  </message>
  <message>
    <ts>2017-07-15T16:54:00.458698</ts>
    <user>U69D8R59S</user>
    <text>Wow. You all are fast and awesome. Thank you!</text>
  </message>
  <message>
    <ts>2017-07-15T17:04:06.503199</ts>
    <user>U2D07QZN3</user>
    <text>Http.getString returns HttpRequest String  How do I take that apart to get the string?</text>
  </message>
  <message>
    <ts>2017-07-15T17:04:56.506933</ts>
    <user>U4872964V</user>
    <text>you use `Http.send` to create a command that you return from your update function</text>
  </message>
  <message>
    <ts>2017-07-15T17:05:44.510989</ts>
    <user>U62UFEG4D</user>
    <text>Hello happy Elm people, hope you are all doing amazing today :slightly_smiling_face: !
I am trying to apply a function to a list of tuples.
I intuition I need to unpack (_uncurry?_) the tuples, but so far I have miserably failed.
Here is an example to give an idea:

```
points =
    (List.map2
        (,)
        (arrayX |&amp;gt; Array.toList)
        (arrayY |&amp;gt; Array.toList)
    )
        |&amp;gt; List.map Geometry.Point
```
any help appreciated ! Thanks,</text>
  </message>
  <message>
    <ts>2017-07-15T17:05:50.511517</ts>
    <user>U4872964V</user>
    <text>&lt;@U2D07QZN3&gt; &lt;https://guide.elm-lang.org/architecture/effects/http.html&gt;</text>
  </message>
  <message>
    <ts>2017-07-15T17:08:37.523536</ts>
    <user>U4872964V</user>
    <text>&lt;@U62UFEG4D&gt; well, you uncurry the function to make it work on tuples, so
```
List.map (uncurry Geometry.point)  yourListOfTuples
```
if I understand your request</text>
  </message>
  <message>
    <ts>2017-07-15T17:10:40.532520</ts>
    <user>U4872964V</user>
    <text>but from your description it sounds like you have to Arrays that you want to apply the function to</text>
  </message>
  <message>
    <ts>2017-07-15T17:11:30.536394</ts>
    <user>U62UFEG4D</user>
    <text>Awesome, it works &lt;@U4872964V&gt;!</text>
  </message>
  <message>
    <ts>2017-07-15T17:12:12.539496</ts>
    <user>U62UFEG4D</user>
    <text>I did not get that uncurry applied to a function... not to arguments</text>
  </message>
  <message>
    <ts>2017-07-15T17:12:24.540320</ts>
    <user>U62UFEG4D</user>
    <text>thanks!</text>
  </message>
  <message>
    <ts>2017-07-15T17:16:53.559541</ts>
    <user>U4872964V</user>
    <text>&lt;@U62UFEG4D&gt; you don't have to make intermediate tuples though, you should be able to apply your function directly
```
points =
    List.map2 Geometry.Point
        (arrayX |&amp;gt; Array.toList)
        (arrayY |&amp;gt; Array.toList)
```</text>
  </message>
  <message>
    <ts>2017-07-15T17:19:00.568007</ts>
    <user>U62UFEG4D</user>
    <text>oh wow!</text>
  </message>
  <message>
    <ts>2017-07-15T17:19:39.570848</ts>
    <user>U62UFEG4D</user>
    <text>makes totally sense, thank a lot &lt;@U4872964V&gt;!</text>
  </message>
  <message>
    <ts>2017-07-15T17:20:01.572261</ts>
    <user>U4872964V</user>
    <text>but now you got to learn uncurry so it's all good :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-15T17:20:23.573770</ts>
    <user>U62UFEG4D</user>
    <text>exactly hehe!</text>
  </message>
  <message>
    <ts>2017-07-15T17:23:23.585585</ts>
    <user>U0FP80EKB</user>
    <text>Don't need to pipeline (personal style, though)
```
points =
    List.map2 Geometry.Point
        (Array.toList arrayX)
        (Array.toList arrayY)
```</text>
  </message>
  <message>
    <ts>2017-07-15T17:25:54.595230</ts>
    <user>U4872964V</user>
    <text>yes, that's personal style, I sort of like the "actual" argument being first so that it's visible</text>
  </message>
  <message>
    <ts>2017-07-15T17:34:25.628578</ts>
    <user>U0FP80EKB</user>
    <text>Definitely</text>
  </message>
  <message>
    <ts>2017-07-15T21:58:26.564012</ts>
    <user>U5AEH3L05</user>
    <text>Okay, this seems like this should be straightforward: `event.target.value` gives me a float value encoded as a string, so `value : "100"`. How do I decode that into a float?</text>
  </message>
  <message>
    <ts>2017-07-15T21:58:47.565026</ts>
    <user>U5AEH3L05</user>
    <text>If I do that as `Json.Decode.float`, it chokes because of the quotation marks</text>
  </message>
  <message>
    <ts>2017-07-15T22:08:27.596917</ts>
    <user>U5AEH3L05</user>
    <text>My current best approach is ```    on "input" &amp;lt;|
        Json.map tagger &amp;lt;|
            Json.andThen
                (\value -&amp;gt;
                    case String.toFloat value of
                        Ok float -&amp;gt;
                            Json.succeed float

                        Err err -&amp;gt;
                            Json.fail err
                )
                targetValue
```</text>
  </message>
  <message>
    <ts>2017-07-15T22:08:31.597118</ts>
    <user>U236M9FH9</user>
    <text>Decode as a string &amp;amp; use `String.toFloat` with `andThen`, with `fail` as the error case &amp;amp; `succeed` with the success case</text>
  </message>
  <message>
    <ts>2017-07-15T22:08:33.597219</ts>
    <user>U5AEH3L05</user>
    <text>Which seems wildly verbose</text>
  </message>
  <message>
    <ts>2017-07-15T22:08:52.598213</ts>
    <user>U5AEH3L05</user>
    <text>Haha, good timing lysergia :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-15T22:10:53.604938</ts>
    <user>U236M9FH9</user>
    <text>You can use `fromResult` from `json-extra`: &lt;http://package.elm-lang.org/packages/elm-community/json-extra/2.3.0/Json-Decode-Extra#fromResult&gt;</text>
  </message>
  <message>
    <ts>2017-07-15T22:11:27.606869</ts>
    <user>U5AEH3L05</user>
    <text>Oh neat, that's certainly terser</text>
  </message>
  <message>
    <ts>2017-07-15T22:11:55.608495</ts>
    <user>U5AEH3L05</user>
    <text>It also looks like parseFloat would work as well</text>
  </message>
  <message>
    <ts>2017-07-15T22:12:13.609686</ts>
    <user>U236M9FH9</user>
    <text>Ah yep, just scrolled down a little :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-15T22:13:44.614318</ts>
    <user>U5AEH3L05</user>
    <text>works a charm! thanks &lt;@U236M9FH9&gt;</text>
  </message>
  <message>
    <ts>2017-07-16T01:54:21.260623</ts>
    <user>U30J8RTKJ</user>
    <text>Lets say I have a function that accepts 3 arguments, is there a way to partially apply only second argument?</text>
  </message>
  <message>
    <ts>2017-07-16T01:58:49.271959</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U30J8RTKJ&gt; the most readable version is to just wrap it in an anonymous function</text>
  </message>
  <message>
    <ts>2017-07-16T01:59:18.273279</ts>
    <user>U153UK3FA</user>
    <text>eg `\x y -&amp;gt; yourFunction x 5 y`</text>
  </message>
  <message>
    <ts>2017-07-16T02:01:39.281464</ts>
    <user>U153UK3FA</user>
    <text>by convention function args are ordered so that this is a rare thing to need to do</text>
  </message>
  <message>
    <ts>2017-07-16T04:08:26.659567</ts>
    <user>U0CLDU8UB</user>
    <text>In the case of the second argument, you could also use flip: `(flip yourFunction) 5` switches the first and the second argument around and then applies `5`.</text>
  </message>
  <message>
    <ts>2017-07-16T04:09:03.661325</ts>
    <user>U0CLDU8UB</user>
    <text>But I do agree that the anonymous function is much more readable.</text>
  </message>
  <message>
    <ts>2017-07-16T04:10:21.665583</ts>
    <user>U4872964V</user>
    <text>Another option still is to make a helper function with the arguments reversed. If you name stuff well, then this is a very good option.</text>
  </message>
  <message>
    <ts>2017-07-16T04:11:33.670036</ts>
    <user>U4872964V</user>
    <text>If it's your own function, maybe changing the order of arguments in the original funciton is a way to go too.</text>
  </message>
  <message>
    <ts>2017-07-16T08:53:15.600182</ts>
    <user>U2DF486HL</user>
    <text>Hello, I need to submit a form, but its action is an external POST url.
do i need my own Msg and send the Http.request or is there simple way to just call form.submit() ?
examples?</text>
  </message>
  <message>
    <ts>2017-07-16T08:57:50.617293</ts>
    <user>U4872964V</user>
    <text>&lt;@U2DF486HL&gt; do you want to be redirected to the POST response page or do you want to still be in your Elm app?</text>
  </message>
  <message>
    <ts>2017-07-16T08:58:34.619987</ts>
    <user>U2DF486HL</user>
    <text>&lt;@U4872964V&gt; exactly, it redirects to the new POST response page..</text>
  </message>
  <message>
    <ts>2017-07-16T09:03:01.639075</ts>
    <user>U4872964V</user>
    <text>I usually keep track of the fields in my model, and have no `form` element at all, but if you have a `form` element you need to stop propagation of the "submit" event by doing something like
```
[ onWithOptions
    "submit"
    { stopPropagation = True, preventDefault = True }
    (Json.Decode.succeed YourSubmitMessage)
]
```

Then the form will instead send `YourSubmitMessage` to your update function, from which you can then issue the post request.</text>
  </message>
  <message>
    <ts>2017-07-16T09:05:01.646949</ts>
    <user>U4872964V</user>
    <text>something like this: &lt;https://stackoverflow.com/questions/36387409/how-to-submit-a-form-in-elm&gt;</text>
  </message>
  <message>
    <ts>2017-07-16T09:06:45.654380</ts>
    <user>U4872964V</user>
    <text>(the last answer there)</text>
  </message>
  <message>
    <ts>2017-07-16T09:09:10.663428</ts>
    <user>U4872964V</user>
    <text>If you don't have a `form` element, you just bind your message to the `onClick` event on the submit button</text>
  </message>
  <message>
    <ts>2017-07-16T09:09:18.663854</ts>
    <user>U2DF486HL</user>
    <text>I saw this link before but I thought that it would not help to solve my issue.. 
because i've to send the form data to the external url, and just that, redirect to its page</text>
  </message>
  <message>
    <ts>2017-07-16T09:09:35.664883</ts>
    <user>U4872964V</user>
    <text>oh, you _want_ to redirect?</text>
  </message>
  <message>
    <ts>2017-07-16T09:10:00.666360</ts>
    <user>U2DF486HL</user>
    <text>send the form data to the external action url, and move to there site..</text>
  </message>
  <message>
    <ts>2017-07-16T09:10:19.667644</ts>
    <user>U4872964V</user>
    <text>then you can just use a normal html form, no need for anything else</text>
  </message>
  <message>
    <ts>2017-07-16T09:10:35.668853</ts>
    <user>U2DF486HL</user>
    <text>i usually did (without elm) with just a submit button and the action attrb with its link</text>
  </message>
  <message>
    <ts>2017-07-16T09:22:30.715881</ts>
    <user>U2DF486HL</user>
    <text>&lt;@U4872964V&gt; and in the OnSubmit? Right now I have some thing like this:
            Html.form
                [ id "theForm"
                , action "&lt;http://external.url/submit&gt;"
                , method "POST"
                , onSubmit ConfirmPayment
                ]
but ConfirmPayment is Msg with no modifications in my Model</text>
  </message>
  <message>
    <ts>2017-07-16T09:22:53.717379</ts>
    <user>U4872964V</user>
    <text>If you want to redirect, you don't need a onSubmit</text>
  </message>
  <message>
    <ts>2017-07-16T09:23:34.720292</ts>
    <user>U4872964V</user>
    <text>but it sounds a bit like you want to redirect _and_ stay in your application</text>
  </message>
  <message>
    <ts>2017-07-16T09:25:10.726711</ts>
    <user>U4872964V</user>
    <text>if you want to redirect to a new tab/window you can use `attribute "target" "_blank"` I think</text>
  </message>
  <message>
    <ts>2017-07-16T09:26:04.730524</ts>
    <user>U2DF486HL</user>
    <text>great, good point..</text>
  </message>
  <message>
    <ts>2017-07-16T09:26:40.732844</ts>
    <user>U4872964V</user>
    <text>but it's a bit tricky this form submit business i Elm, for sure</text>
  </message>
  <message>
    <ts>2017-07-16T09:34:48.766725</ts>
    <user>U2DF486HL</user>
    <text>i know, with my staff I try to use my Models and Msg, but in this moving this special form must to keep this way by now</text>
  </message>
  <message>
    <ts>2017-07-16T11:18:33.222830</ts>
    <user>U3LUC6SNS</user>
    <text>Any recommendations for file uploads via Elm?</text>
  </message>
  <message>
    <ts>2017-07-16T11:23:19.244022</ts>
    <user>U4872964V</user>
    <text>the current recommendation is ports, something like this: &lt;https://github.com/phylor/elm-image-upload&gt;

Elm doesn't have a binary type, so, it's a bit tricky to do in Elm</text>
  </message>
  <message>
    <ts>2017-07-16T11:24:02.247268</ts>
    <user>U4872964V</user>
    <text>but there is also &lt;https://github.com/simonh1000/file-reader&gt; which you could try I suppose</text>
  </message>
  <message>
    <ts>2017-07-16T12:16:38.499634</ts>
    <user>U3584SW4R</user>
    <text>Hey!

I'm building an app in elm and there is one particular view which needs d3 for showing a DAG.
I tried looking for d3 + elm  libraries but couldn't find any (except for one which is very old).
What options do I have?</text>
  </message>
  <message>
    <ts>2017-07-16T12:23:46.533975</ts>
    <user>U5XC2FJ1Y</user>
    <text>you probably don't need everything d3 exposes, right? i'm a little unclear on what exactly your use case is</text>
  </message>
  <message>
    <ts>2017-07-16T12:24:36.537772</ts>
    <user>U5XC2FJ1Y</user>
    <text>if you're just trying to draw a DAG you might be able to roll your own solution with `elm-lang/svg` and `elm-community/graph`</text>
  </message>
  <message>
    <ts>2017-07-16T12:25:38.542797</ts>
    <user>U5XC2FJ1Y</user>
    <text>if you're trying to make a Sankey diagram or something like that, that's different</text>
  </message>
  <message>
    <ts>2017-07-16T12:45:07.635287</ts>
    <user>U4JT89FGB</user>
    <text>&lt;@U3LUC6SNS&gt; I just did this yesterday. I can write up a gist if you're still interested</text>
  </message>
  <message>
    <ts>2017-07-16T12:45:43.638105</ts>
    <user>U6AHD8Q95</user>
    <text>Hi, i'm learning elm and I'm stuck in the challenge to add an int input field to a form</text>
  </message>
  <message>
    <ts>2017-07-16T12:46:42.642774</ts>
    <user>U4JT89FGB</user>
    <text>Mine is similar to the examples that exist, but it uses xhr in the port JavaScript since the examples seem to favor base64 and I didn't want to mess with the server side I was dealing with</text>
  </message>
  <message>
    <ts>2017-07-16T12:47:10.644774</ts>
    <user>U6AHD8Q95</user>
    <text>And this is the code - &lt;https://runelm.io/c/95y&gt;</text>
  </message>
  <message>
    <ts>2017-07-16T12:51:23.664229</ts>
    <user>U6AHD8Q95</user>
    <text>Any idea what i'm doing wrong?</text>
  </message>
  <message>
    <ts>2017-07-16T12:53:48.675192</ts>
    <user>U4872964V</user>
    <text>&lt;@U6AHD8Q95&gt; just as the message says, onInput will give your function a `String` but you want it to give you an `Int`</text>
  </message>
  <message>
    <ts>2017-07-16T12:54:19.677649</ts>
    <user>U4872964V</user>
    <text>input fields, even of type "number" can contain arbitrary strings</text>
  </message>
  <message>
    <ts>2017-07-16T12:54:41.679154</ts>
    <user>U6AHD8Q95</user>
    <text>So I defined a property of a record as an int</text>
  </message>
  <message>
    <ts>2017-07-16T12:55:18.681741</ts>
    <user>U4872964V</user>
    <text>yes, but the easiest is probably to have the message take a `String` and then convert it in your update function</text>
  </message>
  <message>
    <ts>2017-07-16T12:55:39.683130</ts>
    <user>U6AHD8Q95</user>
    <text>`String.toInt`?</text>
  </message>
  <message>
    <ts>2017-07-16T12:56:12.685804</ts>
    <user>U4872964V</user>
    <text>yes, `toInt` and then you have to handle the error, if any</text>
  </message>
  <message>
    <ts>2017-07-16T12:56:32.687427</ts>
    <user>U4872964V</user>
    <text>I see you have validation already, so you could add it to that</text>
  </message>
  <message>
    <ts>2017-07-16T12:57:12.690264</ts>
    <user>U4872964V</user>
    <text>Or just keep the 0 if the int value is invalid in the field</text>
  </message>
  <message>
    <ts>2017-07-16T13:03:33.722450</ts>
    <user>U6AHD8Q95</user>
    <text>Hmm… I'm proably missing something</text>
  </message>
  <message>
    <ts>2017-07-16T13:03:42.723203</ts>
    <user>U6AHD8Q95</user>
    <text>```
    Age age -&amp;gt;
      { model | age = String.toInt age }

```</text>
  </message>
  <message>
    <ts>2017-07-16T13:03:54.724357</ts>
    <user>U6AHD8Q95</user>
    <text>Shouldn't that handle the problem?</text>
  </message>
  <message>
    <ts>2017-07-16T13:06:59.739075</ts>
    <user>U6AHD8Q95</user>
    <text>&lt;https://runelm.io/c/ohc&gt; this is the code</text>
  </message>
  <message>
    <ts>2017-07-16T13:07:28.741416</ts>
    <user>U0CLDU8UB</user>
    <text>Nope, `String.toInt` returns a `Result String Int`, which means it is a Result that can either be a success (and contain an Int) or a failure (and contain a String)</text>
  </message>
  <message>
    <ts>2017-07-16T13:08:15.745047</ts>
    <user>U4872964V</user>
    <text>well, you need to decide what to do if the string cannot be converted to an int</text>
  </message>
  <message>
    <ts>2017-07-16T13:08:46.747277</ts>
    <user>U4872964V</user>
    <text>or just keep it as a string always</text>
  </message>
  <message>
    <ts>2017-07-16T13:08:53.747842</ts>
    <user>U4872964V</user>
    <text>it really depends on what it's used for</text>
  </message>
  <message>
    <ts>2017-07-16T13:09:02.748483</ts>
    <user>U6AHD8Q95</user>
    <text>But the excersize say different</text>
  </message>
  <message>
    <ts>2017-07-16T13:09:14.749545</ts>
    <user>U6AHD8Q95</user>
    <text>`Add an additional field for age and check that it is a number.`</text>
  </message>
  <message>
    <ts>2017-07-16T13:09:20.749955</ts>
    <user>U6AHD8Q95</user>
    <text>Hmmm… Got it…</text>
  </message>
  <message>
    <ts>2017-07-16T13:09:33.751030</ts>
    <user>U0CLDU8UB</user>
    <text>Actually, in your model age is still `String`</text>
  </message>
  <message>
    <ts>2017-07-16T13:09:44.751897</ts>
    <user>U6AHD8Q95</user>
    <text>It can be a string but need to make sure it's a number</text>
  </message>
  <message>
    <ts>2017-07-16T13:09:50.752368</ts>
    <user>U4872964V</user>
    <text>the `String.toInt` will do the checking for you</text>
  </message>
  <message>
    <ts>2017-07-16T13:10:03.753419</ts>
    <user>U4872964V</user>
    <text>but maybe there is some other meaning of "checking" here</text>
  </message>
  <message>
    <ts>2017-07-16T13:10:18.754590</ts>
    <user>U4872964V</user>
    <text>I don't know what exercise you are doing</text>
  </message>
  <message>
    <ts>2017-07-16T13:10:26.755337</ts>
    <user>U6AHD8Q95</user>
    <text>&lt;https://guide.elm-lang.org/architecture/user_input/forms.html&gt; from here</text>
  </message>
  <message>
    <ts>2017-07-16T13:10:36.756350</ts>
    <user>U6AHD8Q95</user>
    <text>at the end</text>
  </message>
  <message>
    <ts>2017-07-16T13:10:42.756821</ts>
    <user>U4872964V</user>
    <text>oh, i see</text>
  </message>
  <message>
    <ts>2017-07-16T13:10:54.758096</ts>
    <user>U6AHD8Q95</user>
    <text>why there is no solutions in the excersises?</text>
  </message>
  <message>
    <ts>2017-07-16T13:11:26.760525</ts>
    <user>U0CLDU8UB</user>
    <text>That's a good question.</text>
  </message>
  <message>
    <ts>2017-07-16T13:11:37.761409</ts>
    <user>U4872964V</user>
    <text>&lt;https://github.com/evancz/guide.elm-lang.org/issues/93&gt;</text>
  </message>
  <message>
    <ts>2017-07-16T13:12:00.763198</ts>
    <user>U4872964V</user>
    <text>&lt;https://gist.github.com/gabehollombe/45cb6f61ccb270931ded71f155ca37fe&gt;</text>
  </message>
  <message>
    <ts>2017-07-16T13:12:23.765084</ts>
    <user>U4872964V</user>
    <text>it really is a matter of interpretation</text>
  </message>
  <message>
    <ts>2017-07-16T13:12:56.767704</ts>
    <user>U6AHD8Q95</user>
    <text>But another question - Can I make an update function insteaf of the `onInput`?</text>
  </message>
  <message>
    <ts>2017-07-16T13:13:16.769207</ts>
    <user>U6AHD8Q95</user>
    <text>Something like:
`input [ type_ "number", placeholder "Age", customFunction Age ] [],`</text>
  </message>
  <message>
    <ts>2017-07-16T13:13:55.772151</ts>
    <user>U4872964V</user>
    <text>what would that mean? onInput means "when the user inputs something, send this message"</text>
  </message>
  <message>
    <ts>2017-07-16T13:14:22.774446</ts>
    <user>U6AHD8Q95</user>
    <text>Never mind</text>
  </message>
  <message>
    <ts>2017-07-16T13:14:30.775009</ts>
    <user>U6AHD8Q95</user>
    <text>thanks for the help</text>
  </message>
  <message>
    <ts>2017-07-16T13:14:36.775505</ts>
    <user>U6AHD8Q95</user>
    <text>I'm off for dinner</text>
  </message>
  <message>
    <ts>2017-07-16T13:14:46.776218</ts>
    <user>U4872964V</user>
    <text>you're welcome!</text>
  </message>
  <message>
    <ts>2017-07-16T14:01:39.996826</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U4JT89FGB&gt; I'd be interested if you have the time - thanks!</text>
  </message>
  <message>
    <ts>2017-07-16T15:06:51.309187</ts>
    <user>U2DF486HL</user>
    <text>Is there a way to attach the onClick to a div containing the "a" element?</text>
  </message>
  <message>
    <ts>2017-07-16T15:19:05.367190</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U2DF486HL&gt; You have to specify event handlers when you create the `Html` objets.</text>
  </message>
  <message>
    <ts>2017-07-16T15:19:48.370634</ts>
    <user>U57KYFW67</user>
    <text>You can't reference a DOM node's parent in Elm programmatically. You constructed it, so you should have had the chance to make it how you like :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-16T15:22:43.384400</ts>
    <user>U2DF486HL</user>
    <text>&lt;@U57KYFW67&gt; ok, but I use the href to specify the next route.. div and its onClick event should take this arg to know the next route then right?</text>
  </message>
  <message>
    <ts>2017-07-16T15:22:49.384853</ts>
    <user>U2DF486HL</user>
    <text>maybe I'm confused</text>
  </message>
  <message>
    <ts>2017-07-16T15:23:22.387221</ts>
    <user>U57KYFW67</user>
    <text>I'd need to see the code to understand the situation better.</text>
  </message>
  <message>
    <ts>2017-07-16T15:44:23.486730</ts>
    <user>U3SJEDR96</user>
    <text>`onClick` takes a `Msg`; nothing stopping you from doing `onClick (GoTo "#/my-url)`</text>
  </message>
  <message>
    <ts>2017-07-16T15:46:02.494576</ts>
    <user>U2SR9DL7Q</user>
    <text>Can case statements be used in anonymous functions?</text>
  </message>
  <message>
    <ts>2017-07-16T15:46:42.498140</ts>
    <user>U2DF486HL</user>
    <text>&lt;@U57KYFW67&gt; &lt;@U3SJEDR96&gt; great.. I've just tried to attach onClick MyMsg to the div element and it worked.. thanks</text>
  </message>
  <message>
    <ts>2017-07-16T15:47:34.501990</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U2SR9DL7Q&gt; The nice thing about case statements is that they are expressions, just as anything else. You can use them anywhere you could use a value.</text>
  </message>
  <message>
    <ts>2017-07-16T15:49:45.511953</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U57KYFW67&gt; sweet. Python's lambdas are horribly gimped (the creator isn't a fan) and I got used to not having lots of flexibility with them.</text>
  </message>
  <message>
    <ts>2017-07-16T15:51:14.519299</ts>
    <user>U57KYFW67</user>
    <text>Yeah. Guido actually made an intentional call to cripple lambdas in Python. It's really obnoxious..</text>
  </message>
  <message>
    <ts>2017-07-16T15:52:08.523706</ts>
    <user>U2SR9DL7Q</user>
    <text>It's one of the issues with having a BDFL. But he's done more good than bad. We just have to hope Evan never goes rogue....</text>
  </message>
  <message>
    <ts>2017-07-16T15:52:30.525440</ts>
    <user>U3SJEDR96</user>
    <text>you could even do `λfoo -&amp;gt; [ case let a = [1, 2] |&amp;gt; List.sum in a of b -&amp;gt; b ]` and it would be legal in elm</text>
  </message>
  <message>
    <ts>2017-07-16T15:52:52.527450</ts>
    <user>U57KYFW67</user>
    <text>yep</text>
  </message>
  <message>
    <ts>2017-07-16T15:53:00.528094</ts>
    <user>U57KYFW67</user>
    <text>`let` statements enjoy the same flexibility as well</text>
  </message>
  <message>
    <ts>2017-07-16T15:54:07.533409</ts>
    <user>U57KYFW67</user>
    <text>I'm a monster some nights and I write things like `div [ ] (let mkchild label = ... in [mkchild "label1", mkchild "label2", ..., ])</text>
  </message>
  <message>
    <ts>2017-07-16T15:54:28.535018</ts>
    <user>U3SJEDR96</user>
    <text>(where `λ` is alternative syntax for `\`)</text>
  </message>
  <message>
    <ts>2017-07-16T15:54:33.535428</ts>
    <user>U57KYFW67</user>
    <text>it's often easy to just jam the `let` or `case` statement right in place, get it to work, and refactor after</text>
  </message>
  <message>
    <ts>2017-07-16T15:54:42.536135</ts>
    <user>U2SR9DL7Q</user>
    <text>Oddly enough that almost exactly what I wanted to do. I'm getting the head of a list, so now I have all these maybe values to handle. The way the code is written... there's no way they could be empty... but there's no way to tell List.head that...</text>
  </message>
  <message>
    <ts>2017-07-16T16:03:35.579908</ts>
    <user>U6602MZ9Q</user>
    <text>If they're really never empty there's a thing called a nonempty list</text>
  </message>
  <message>
    <ts>2017-07-16T16:03:53.581237</ts>
    <user>U6602MZ9Q</user>
    <text>&lt;http://package.elm-lang.org/packages/mgold/elm-nonempty-list/3.0.0/List-Nonempty&gt;</text>
  </message>
  <message>
    <ts>2017-07-16T16:07:24.598769</ts>
    <user>U2SR9DL7Q</user>
    <text>thats interesting</text>
  </message>
  <message>
    <ts>2017-07-16T16:26:35.685411</ts>
    <user>U66RFDZ8F</user>
    <text>Hello everyone</text>
  </message>
  <message>
    <ts>2017-07-16T16:26:51.686619</ts>
    <user>U66RFDZ8F</user>
    <text>I am facing a confusing problem</text>
  </message>
  <message>
    <ts>2017-07-16T16:27:02.687528</ts>
    <user>U66RFDZ8F</user>
    <text>So I wanted to use ports to abstract my file handling away</text>
  </message>
  <message>
    <ts>2017-07-16T16:27:16.688536</ts>
    <user>U66RFDZ8F</user>
    <text>So I have a module called `Lib.File`</text>
  </message>
  <message>
    <ts>2017-07-16T16:27:42.690299</ts>
    <user>U66RFDZ8F</user>
    <text>where I have defined 2 ports 
`port readFile : Value -&amp;gt; Cmd msg`
`port fileRead : (String -&amp;gt; msg) -&amp;gt; Sub msg`</text>
  </message>
  <message>
    <ts>2017-07-16T16:28:09.692244</ts>
    <user>U66RFDZ8F</user>
    <text>In `js` land, I am getting this error 
`Cannot read property 'subscribe' of undefined` when I try to do `app.ports.readImage.subscribe`</text>
  </message>
  <message>
    <ts>2017-07-16T16:29:32.698322</ts>
    <user>U663M2MB7</user>
    <text>Random is considered a side effect / IO in Elm, correct?</text>
  </message>
  <message>
    <ts>2017-07-16T16:30:31.702972</ts>
    <user>U5VH5PYD6</user>
    <text>I think you need to tell elm that the port exists, so in JavaScript, the Elm application object will have access to it:

E.g: &lt;https://github.com/rtfeldman/elm-spa-example/blob/master/src/Ports.elm&gt;</text>
  </message>
  <message>
    <ts>2017-07-16T16:30:58.705338</ts>
    <user>U66RFDZ8F</user>
    <text>This issue (&lt;https://github.com/elm-lang/core/issues/822&gt;) mentions to define it in Main</text>
  </message>
  <message>
    <ts>2017-07-16T16:31:44.708873</ts>
    <user>U66RFDZ8F</user>
    <text>but I can't import `Main` as it's a cyclical dependency</text>
  </message>
  <message>
    <ts>2017-07-16T16:32:08.710751</ts>
    <user>U66RFDZ8F</user>
    <text>&lt;@U5VH5PYD6&gt;, I have this `port module Lib.File exposing (fileRead, onFileSelected, readFile)`</text>
  </message>
  <message>
    <ts>2017-07-16T16:33:08.715491</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U663M2MB7&gt; yes. Anything that would require managing outside state. And a "random" event must keep track of the state of some random number genreator.</text>
  </message>
  <message>
    <ts>2017-07-16T16:34:51.723239</ts>
    <user>U66RFDZ8F</user>
    <text>I apologize, I changed the port names in my code</text>
  </message>
  <message>
    <ts>2017-07-16T16:35:04.724268</ts>
    <user>U66RFDZ8F</user>
    <text>But was reusing the same js from the example</text>
  </message>
  <message>
    <ts>2017-07-16T16:36:00.728762</ts>
    <user>U39DE7RQ9</user>
    <text>I need help. Im building a SPA and copy pasting from rtfeldmans SPA example. In one of my pages I need to use ports in the init function to retrieve data from firebase. The `transition` function in main-setRoute that is calling the page init function requires a return type of Task PageLoadError HomePage.Model but my port returns a Cmd Msg. How do I handle this? I guess ports only return Cmd and not Task?</text>
  </message>
  <message>
    <ts>2017-07-16T16:40:51.751685</ts>
    <user>U663M2MB7</user>
    <text>&lt;@U57KYFW67&gt; thanks. I have Haskell experience, so that makes sense. Just needed to know that quickly :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-16T16:41:25.754620</ts>
    <user>U663M2MB7</user>
    <text>Just trying to get to know how strict Elm is, but I assume all IO is treated the same as Haskell?</text>
  </message>
  <message>
    <ts>2017-07-16T16:41:55.756925</ts>
    <user>U663M2MB7</user>
    <text>I mean, that is after all basically just what you said :smile:</text>
  </message>
  <message>
    <ts>2017-07-16T16:47:19.781594</ts>
    <user>U39DE7RQ9</user>
    <text>Where does the function `transition` come from and can it be made to take Cmd instead?</text>
  </message>
  <message>
    <ts>2017-07-16T16:47:59.784473</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U39DE7RQ9&gt; I'm wracking my brain to see if there is something simpler, but all I can come up with is needing to hack together a slightly different interaction.

`transition` is defined in the `let` expression at &lt;https://github.com/rtfeldman/elm-spa-example/blob/master/src/Main.elm#L245&gt;</text>
  </message>
  <message>
    <ts>2017-07-16T16:48:27.786555</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U663M2MB7&gt; neat. IO is a little bit different in how it's handled, since there's no IO type. Everything gets routed through `Cmd`'s.</text>
  </message>
  <message>
    <ts>2017-07-16T16:49:02.789211</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U663M2MB7&gt; Elm is just like Haskell, where the only points where purity is breached are either buried in native packages or in `Debug.log`</text>
  </message>
  <message>
    <ts>2017-07-16T16:49:10.789814</ts>
    <user>U57KYFW67</user>
    <text>and everything else is side-effect-free</text>
  </message>
  <message>
    <ts>2017-07-16T16:50:54.798004</ts>
    <user>U39DE7RQ9</user>
    <text>&lt;@U48AEBJQ3&gt; thanks, at least now I know where the function resides. I will try to create something using Cmd. Ports only return Cmd right?</text>
  </message>
  <message>
    <ts>2017-07-16T16:53:34.811320</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U39DE7RQ9&gt; Yes.</text>
  </message>
  <message>
    <ts>2017-07-16T16:53:54.812711</ts>
    <user>U39DE7RQ9</user>
    <text>&lt;@U48AEBJQ3&gt; is there a Cmd equivalent to Task.attempt?</text>
  </message>
  <message>
    <ts>2017-07-16T16:55:35.820390</ts>
    <user>U48AEBJQ3</user>
    <text>No. What I would do is change all of my `init` functions from something like `init : Session -&amp;gt; Article.Slug -&amp;gt; Task PageLoadError Model` to something like `init : (Result PageLoadError Model -&amp;gt; msg) -&amp;gt; Session -&amp;gt; Article.Slug -&amp;gt; Cmd msg`</text>
  </message>
  <message>
    <ts>2017-07-16T16:58:08.831768</ts>
    <user>U48AEBJQ3</user>
    <text>Which would have you change `transition ArticleLoaded (Article.init model.session slug)` to `transition (Article.init ArticleLoaded model.session slug)`</text>
  </message>
  <message>
    <ts>2017-07-16T16:59:12.836327</ts>
    <user>U48AEBJQ3</user>
    <text>And `transition` would look like:

```
transition cmd =
    { model | pageState = TransitioningFrom (getPage model.pageState) }
        =&amp;gt; cmd
```</text>
  </message>
  <message>
    <ts>2017-07-16T16:59:47.838729</ts>
    <user>U39DE7RQ9</user>
    <text>&lt;@U48AEBJQ3&gt; thanks, I will try that!</text>
  </message>
  <message>
    <ts>2017-07-16T17:11:42.894702</ts>
    <user>U39DE7RQ9</user>
    <text>&lt;@U48AEBJQ3&gt;, now that code seems to compile. The next problem is that in my subscriptions I need to point to messages that resides in my HomePage module. The compiler says:
```
23:08:12 client.1   |  The type annotation for `subscriptions` says it always returns:
23:08:12 client.1   |      Sub Msg
23:08:12 client.1   |  But the returned value (shown above) is a:
23:08:12 client.1   |      Sub HomePage.Msg
```</text>
  </message>
  <message>
    <ts>2017-07-16T17:12:31.898270</ts>
    <user>U39DE7RQ9</user>
    <text>I know it is possible to map messages some how but I cant find how.</text>
  </message>
  <message>
    <ts>2017-07-16T17:15:05.909415</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U39DE7RQ9&gt; &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Platform-Sub#map&gt;</text>
  </message>
  <message>
    <ts>2017-07-16T17:15:46.912595</ts>
    <user>U48AEBJQ3</user>
    <text>You need something of `HomePage.Msg -&amp;gt; Msg`</text>
  </message>
  <message>
    <ts>2017-07-16T17:15:58.913495</ts>
    <user>U48AEBJQ3</user>
    <text>Usually a constructor of `Msg`</text>
  </message>
  <message>
    <ts>2017-07-16T17:18:16.923796</ts>
    <user>U39DE7RQ9</user>
    <text>&lt;@U48AEBJQ3&gt; a function that encapsulates HomePage.Msg in a Msg?</text>
  </message>
  <message>
    <ts>2017-07-16T17:19:01.927030</ts>
    <user>U48AEBJQ3</user>
    <text>Right, usually a tag of `Msg`

```
type Msg
   ...
   | SubscriptionEvent HomePage.Msg
```</text>
  </message>
  <message>
    <ts>2017-07-16T17:50:10.066933</ts>
    <user>U39DE7RQ9</user>
    <text>Im sorry &lt;@U48AEBJQ3&gt; but I cannot seem to puzzle this out by my self. I have added `SubscriptionEvent HomePage.Msg` message but my subscriptions look like this tight now and it does not compile.
```
subscriptions : Model -&amp;gt; Sub Msg
subscriptions model =
    Sub.batch
        [ gotAllPublicForms (SubscriptionEvent (HomePage.GotAllPublicFormsMsg &amp;lt;&amp;lt; decodeValue jsonFormListDecoder))
        , gotForm (SubscriptionEvent (HomePage.GotFormMsg &amp;lt;&amp;lt; decodeValue jsonFormDecoder))
        ]
```</text>
  </message>
  <message>
    <ts>2017-07-16T17:50:59.070662</ts>
    <user>U39DE7RQ9</user>
    <text>My ports look like this:
``` 
port getAllPublicForms : () -&amp;gt; Cmd msg
port gotAllPublicForms : (Json.Decode.Value -&amp;gt; msg) -&amp;gt; Sub msg
port getForm : FormId -&amp;gt; Cmd msg
port gotForm : (Json.Decode.Value -&amp;gt; msg) -&amp;gt; Sub msg
```</text>
  </message>
  <message>
    <ts>2017-07-16T17:52:34.077766</ts>
    <user>U39DE7RQ9</user>
    <text>The compiler says:
``` 
23:44:13 client.1   |  267|           gotAllPublicForms (SubscriptionEvent (HomePage.GotAllPublicFormsMsg &amp;lt;&amp;lt; decodeValue jsonFormListDecoder)
23:44:13 client.1   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
23:44:13 client.1   |  Function `gotAllPublicForms` is expecting the argument to be:
23:44:13 client.1   |      Value -&amp;gt; Msg
23:44:13 client.1   |  But it is:
23:44:13 client.1   |      Msg
```</text>
  </message>
  <message>
    <ts>2017-07-16T18:33:05.256110</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U39DE7RQ9&gt; There are different places to tackle this from. I think from how you are doing it here, you need `gotAllPublicForms (SubscriptionEvent &amp;lt;&amp;lt; HomePage.GotAllPublicFormsMsg &amp;lt;&amp;lt; decodeValue jsonFormListDecoder)`</text>
  </message>
  <message>
    <ts>2017-07-16T19:13:38.458181</ts>
    <user>U69D8R59S</user>
    <text>Good way to call a function N times? In my specific case, I'm trying to simulate a dice roll by updating my model with random values for a few seconds.</text>
  </message>
  <message>
    <ts>2017-07-16T19:21:04.496463</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U69D8R59S&gt; calling a function N times really depends on what you want to do with the N results</text>
  </message>
  <message>
    <ts>2017-07-16T19:21:23.498123</ts>
    <user>U153UK3FA</user>
    <text>do you want a list of these results?</text>
  </message>
  <message>
    <ts>2017-07-16T19:22:29.504011</ts>
    <user>U69D8R59S</user>
    <text>I want to replace a property on my model N times</text>
  </message>
  <message>
    <ts>2017-07-16T19:23:03.506754</ts>
    <user>U153UK3FA</user>
    <text>ah, wanting to animate a die face by having it transition between numbers?</text>
  </message>
  <message>
    <ts>2017-07-16T19:23:13.507672</ts>
    <user>U69D8R59S</user>
    <text>Yes, exactly! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-16T19:26:35.525651</ts>
    <user>U153UK3FA</user>
    <text>&lt;http://package.elm-lang.org/packages/mdgriffith/elm-style-animation/latest&gt; is nice for doing animation</text>
  </message>
  <message>
    <ts>2017-07-16T19:29:37.541025</ts>
    <user>U69D8R59S</user>
    <text>Thank you. I think I can see a way to use animation to fit my needs.

As a different challenge, what would be a good way to accomplish this without animation? Let's say my view was simply displaying a value from my model, and elsewhere in my application, that value was being updated N times every second or so.</text>
  </message>
  <message>
    <ts>2017-07-16T19:32:28.556506</ts>
    <user>U69D8R59S</user>
    <text>I can see a way in JavaScript: a loop with setTimeout. But the paradigm shift has been challenging for me. I'm mostly curious for the education.</text>
  </message>
  <message>
    <ts>2017-07-16T19:32:33.557013</ts>
    <user>U153UK3FA</user>
    <text>You'd likely have a subscription to `Time.every` and have a case in your `update` that produced a Cmd from `Random.generate` and a another case to update the model with the result of that Cmd</text>
  </message>
  <message>
    <ts>2017-07-16T19:33:07.560003</ts>
    <user>U153UK3FA</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Time#every&gt;</text>
  </message>
  <message>
    <ts>2017-07-16T19:33:08.560151</ts>
    <user>U153UK3FA</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Random#generate&gt;</text>
  </message>
  <message>
    <ts>2017-07-16T19:34:35.567820</ts>
    <user>U69D8R59S</user>
    <text>With that method, are you envisioning an additional property to track when N operations has been reached--since `Time.every` would run indefinitely</text>
  </message>
  <message>
    <ts>2017-07-16T19:34:50.568930</ts>
    <user>U153UK3FA</user>
    <text>yep</text>
  </message>
  <message>
    <ts>2017-07-16T19:35:18.571367</ts>
    <user>U153UK3FA</user>
    <text>and you just drop the subscription once you've reached that number</text>
  </message>
  <message>
    <ts>2017-07-16T19:35:31.572602</ts>
    <user>U69D8R59S</user>
    <text>Excellent. Thank you very much!</text>
  </message>
  <message>
    <ts>2017-07-16T19:48:58.643187</ts>
    <user>U1ZFF0E5P</user>
    <text>can someone explain to me the following: ```&amp;gt; (,)
&amp;lt;function&amp;gt; : a -&amp;gt; b -&amp;gt; ( a, b )
&amp;gt; (,,)
&amp;lt;function&amp;gt; : a -&amp;gt; b -&amp;gt; c -&amp;gt; ( a, b, c )
```
the `(,)` or `(,,)` part is special elm syntax right? or is it like say `map7` and has only a finite amount of them defined?</text>
  </message>
  <message>
    <ts>2017-07-16T19:50:32.651765</ts>
    <user>U1ZFF0E5P</user>
    <text>(can't seem to find anything in elm-core)</text>
  </message>
  <message>
    <ts>2017-07-16T19:54:56.675122</ts>
    <user>U153UK3FA</user>
    <text>there is a finite amount of them</text>
  </message>
  <message>
    <ts>2017-07-16T19:55:46.680143</ts>
    <user>U153UK3FA</user>
    <text>`(,,,,,,,,)` is the limit</text>
  </message>
  <message>
    <ts>2017-07-16T19:58:07.692483</ts>
    <user>U153UK3FA</user>
    <text>it's also special syntax and not a definable operator</text>
  </message>
  <message>
    <ts>2017-07-16T21:28:34.221898</ts>
    <user>U57KYFW67</user>
    <text>Are there any packages which expose access to local storage?</text>
  </message>
  <message>
    <ts>2017-07-16T21:32:00.244373</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U57KYFW67&gt; &lt;https://github.com/elm-lang/projects/blob/master/roadmap.md#where-is-the-localstorage-package&gt;</text>
  </message>
  <message>
    <ts>2017-07-16T21:32:36.248522</ts>
    <user>U57KYFW67</user>
    <text>tyty</text>
  </message>
  <message>
    <ts>2017-07-16T21:45:52.334711</ts>
    <user>U2DF486HL</user>
    <text>Hi, in my elm app I use this kind of Routes "/#/myroute". Can I start my app with one of this routes?
Bear in mind that my app entrypoint is a url like "/pathto/elmView/" in django, from where I take some flags for initialization</text>
  </message>
  <message>
    <ts>2017-07-16T21:50:29.364438</ts>
    <user>U1ZFF0E5P</user>
    <text>you want to use a program from the Navigation package</text>
  </message>
  <message>
    <ts>2017-07-16T21:50:36.365206</ts>
    <user>U1ZFF0E5P</user>
    <text>`import Navigation exposing (program)`</text>
  </message>
  <message>
    <ts>2017-07-16T21:51:20.370323</ts>
    <user>U1ZFF0E5P</user>
    <text>this way the "current" location is sent to your init: `init : Location -&amp;gt; (Model, Cmd Msg)`</text>
  </message>
  <message>
    <ts>2017-07-16T21:53:26.384434</ts>
    <user>U2DF486HL</user>
    <text>&lt;@U1ZFF0E5P&gt; I already using something like this
main : Program Flags Model Msg
main =
    Navigation.programWithFlags OnLocationChange
        { init = init
        , view = view
        , update = update
        , subscriptions = (\model -&amp;gt; Sub.none)
        }</text>
  </message>
  <message>
    <ts>2017-07-16T21:54:05.388582</ts>
    <user>U1ZFF0E5P</user>
    <text>I do this: ```init : Location -&amp;gt; (Model, Cmd Msg)
init location =

    update (UrlChange location) initialModel```</text>
  </message>
  <message>
    <ts>2017-07-16T21:54:09.389002</ts>
    <user>U2DF486HL</user>
    <text>and my init
init : Flags -&amp;gt; Location -&amp;gt; ( Model, Cmd Msg )
init flags location =</text>
  </message>
  <message>
    <ts>2017-07-16T21:55:06.395180</ts>
    <user>U2DF486HL</user>
    <text>But I think I'm not using in the right way the Location param then.</text>
  </message>
  <message>
    <ts>2017-07-16T21:56:49.407510</ts>
    <user>U1ZFF0E5P</user>
    <text>where exactly are you hitting an issue? it compiles but doesnt behave as expected?</text>
  </message>
  <message>
    <ts>2017-07-16T21:57:30.412095</ts>
    <user>U1ZFF0E5P</user>
    <text>what is the body of your init function?</text>
  </message>
  <message>
    <ts>2017-07-16T21:59:41.427524</ts>
    <user>U4JT89FGB</user>
    <text>&lt;@U3LUC6SNS&gt; &lt;https://gist.github.com/zgohr/265123ae03c909f466d1a8960958b890&gt; it's very paired back to the essentials. let me know if you have any q's!</text>
  </message>
  <message>
    <ts>2017-07-16T22:02:13.447765</ts>
    <user>U2DF486HL</user>
    <text>&lt;@U1ZFF0E5P&gt; yes, it compiles, but let me check because the initialModel always is taking the same page</text>
  </message>
  <message>
    <ts>2017-07-17T00:39:34.546985</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U4JT89FGB&gt; Thanks very much.  It looks quite clear - I will see if I can integrate this into my app this week.</text>
  </message>
  <message>
    <ts>2017-07-17T03:53:13.630448</ts>
    <user>U5WD40ZA9</user>
    <text>I just tried to make my first port which takes 3 arguments, this gives me a compile error but if I instead remove 2 of the parameters so there is only one it seems to compile. It also works making everything to a record, what am I missing?</text>
  </message>
  <message>
    <ts>2017-07-17T03:54:55.658953</ts>
    <user>U3SJEDR96</user>
    <text>You're not really missing anything; ports can only take a single parameter</text>
  </message>
  <message>
    <ts>2017-07-17T03:55:29.668622</ts>
    <user>U5WD40ZA9</user>
    <text>&lt;@U3SJEDR96&gt; So basicly the solution if I want to send more parameters is that I send a record?</text>
  </message>
  <message>
    <ts>2017-07-17T03:56:29.685274</ts>
    <user>U3SJEDR96</user>
    <text>Yep. Or you encode your data using `Json.Encode` functions to create a JS object, and make your port accept a `Json.Encode.Value`</text>
  </message>
  <message>
    <ts>2017-07-17T03:59:02.729555</ts>
    <user>U3SJEDR96</user>
    <text>btw, tuple should also work (and translates to an array on the JS side of things)</text>
  </message>
  <message>
    <ts>2017-07-17T03:59:49.743367</ts>
    <user>U3SJEDR96</user>
    <text>you can find an overview here: &lt;https://guide.elm-lang.org/interop/javascript.html#customs-and-border-protection&gt;</text>
  </message>
  <message>
    <ts>2017-07-17T04:12:43.975732</ts>
    <user>U5WD40ZA9</user>
    <text>&lt;@U3SJEDR96&gt; my hero! Thank you :happypanda:</text>
  </message>
  <message>
    <ts>2017-07-17T05:13:27.156734</ts>
    <user>U69JKF6EN</user>
    <text>Do you guys recommend ELM native UI for a production app?</text>
  </message>
  <message>
    <ts>2017-07-17T05:14:28.176953</ts>
    <user>U57KYFW67</user>
    <text>What a greeting ^^;;</text>
  </message>
  <message>
    <ts>2017-07-17T05:14:56.186240</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U69JKF6EN&gt; It depends on the details, I'd say.</text>
  </message>
  <message>
    <ts>2017-07-17T05:15:25.196764</ts>
    <user>U69JKF6EN</user>
    <text>A lite clone of Uber.</text>
  </message>
  <message>
    <ts>2017-07-17T05:17:08.231455</ts>
    <user>U57KYFW67</user>
    <text>Other people would know better, but it's robust enough to get the job done. But the language is not stable yet, so you might have to keep closer track of the changes to the language as it develops</text>
  </message>
  <message>
    <ts>2017-07-17T05:17:38.241446</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://robots.thoughtbot.com/elm-native-ui-in-production&gt;</text>
  </message>
  <message>
    <ts>2017-07-17T05:17:47.244389</ts>
    <user>U3SJEDR96</user>
    <text>they did it, might be interesting to read their opinion :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-17T05:19:03.270386</ts>
    <user>U69JKF6EN</user>
    <text>&lt;@U3SJEDR96&gt; I read that post. the elm-native-ui github page says it's not production ready. That's why I asked the question here.</text>
  </message>
  <message>
    <ts>2017-07-17T05:24:03.370026</ts>
    <user>U3SJEDR96</user>
    <text>I don't think anyone here is going to recommend using it in production, in the &lt;#C192T0Q1E|beginners&gt; channel, while the project itself states it is not ready for production :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-17T05:35:53.608177</ts>
    <user>U69JKF6EN</user>
    <text>Thank You &lt;@U3SJEDR96&gt; , &lt;@U57KYFW67&gt; and everyone!</text>
  </message>
  <message>
    <ts>2017-07-17T05:37:23.637194</ts>
    <user>U4872964V</user>
    <text>I would probably use react native still</text>
  </message>
  <message>
    <ts>2017-07-17T05:37:58.648367</ts>
    <user>U4872964V</user>
    <text>but it's interesting to experiment</text>
  </message>
  <message>
    <ts>2017-07-17T06:16:54.387946</ts>
    <user>U5R6L5MT4</user>
    <text>I am building a sudoku resolver</text>
  </message>
  <message>
    <ts>2017-07-17T06:17:18.395364</ts>
    <user>U5R6L5MT4</user>
    <text>And I have a 4 functions that handle an Array Cell of 9 cells</text>
  </message>
  <message>
    <ts>2017-07-17T06:17:42.402234</ts>
    <user>U5R6L5MT4</user>
    <text>isValid : Array Cell -&amp;gt; Bool</text>
  </message>
  <message>
    <ts>2017-07-17T06:18:08.409637</ts>
    <user>U5R6L5MT4</user>
    <text>getColumn : Int -&amp;gt; Sudoku -&amp;gt; Array Cell</text>
  </message>
  <message>
    <ts>2017-07-17T06:18:20.413004</ts>
    <user>U5R6L5MT4</user>
    <text>getSquare : Int -&amp;gt; Sudoku -&amp;gt; Array Cell</text>
  </message>
  <message>
    <ts>2017-07-17T06:18:28.415296</ts>
    <user>U5R6L5MT4</user>
    <text>getLine : Int -&amp;gt; Sudoku -&amp;gt; Array Cell</text>
  </message>
  <message>
    <ts>2017-07-17T06:18:37.417774</ts>
    <user>U5R6L5MT4</user>
    <text>How can I be more precise about the types</text>
  </message>
  <message>
    <ts>2017-07-17T06:18:52.422297</ts>
    <user>U5R6L5MT4</user>
    <text>And explcitely say that ArrayCell is a 9 cells array ?</text>
  </message>
  <message>
    <ts>2017-07-17T06:21:13.462984</ts>
    <user>U1P6FFJ64</user>
    <text>&lt;@U5R6L5MT4&gt;, you can create your own custom type that limits the amount of items of the array to 9. You will also have to reimplement some of the functions of the array module</text>
  </message>
  <message>
    <ts>2017-07-17T06:22:21.482090</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U5R6L5MT4&gt; There's no good way to enforce the size of an array or list in Elm.</text>
  </message>
  <message>
    <ts>2017-07-17T06:23:04.494241</ts>
    <user>U57KYFW67</user>
    <text>`Array (Array Int)` is probably the best way to do it.</text>
  </message>
  <message>
    <ts>2017-07-17T06:35:42.708726</ts>
    <user>U3SJEDR96</user>
    <text>hah, I also made a sudoku solver in Elm; it's fun.</text>
  </message>
  <message>
    <ts>2017-07-17T06:36:21.719387</ts>
    <user>U57KYFW67</user>
    <text>Solving a sudoku puzzle requires a backtracking algorithm, right?</text>
  </message>
  <message>
    <ts>2017-07-17T06:36:27.721126</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://github.com/zwilias/sudoku-solver&gt; if you want to compare how I went about it</text>
  </message>
  <message>
    <ts>2017-07-17T06:38:19.751065</ts>
    <user>U3SJEDR96</user>
    <text>The naive algos do, not sure if there is a way to do it without backtracking at all. I suppose you do be smart about it, and check for cells that can only have one possible input, and work your way through it that way.</text>
  </message>
  <message>
    <ts>2017-07-17T06:39:08.764261</ts>
    <user>U57KYFW67</user>
    <text>I remember I gave it a try once and it could solve simple puzzles only.</text>
  </message>
  <message>
    <ts>2017-07-17T06:39:30.770098</ts>
    <user>U57KYFW67</user>
    <text>It would explain my frustration whenever I try to do one :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-17T07:03:58.173041</ts>
    <user>U5WD40ZA9</user>
    <text>I want to use a javascript lib for rendering a graph. My thought was to create the div that the library needs to render itself within and then simple load the javascript library with data provided from elm, through a port. However, since the div changes and the content within changes elm obviously doesn't recognise this when I swap page back and forth. This results in me rendering another graph, and another graph and so on every time I swap page. What is the way to go here?</text>
  </message>
  <message>
    <ts>2017-07-17T07:13:01.318280</ts>
    <user>U4RR7KX45</user>
    <text>how can I `elm-format` automatically in `vim`?</text>
  </message>
  <message>
    <ts>2017-07-17T07:13:03.318984</ts>
    <user>U3SJEDR96</user>
    <text>You can use `Html.Keyed` to ensure the vdom-diffing doesn't attempt to re-use that div. That would only work if that div stays at a similar place in the tree, though</text>
  </message>
  <message>
    <ts>2017-07-17T07:13:10.320769</ts>
    <user>U4RR7KX45</user>
    <text>is there such thing at all?</text>
  </message>
  <message>
    <ts>2017-07-17T07:13:47.330362</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U4RR7KX45&gt; I use elm-format in vim. You've followed the install instructions already, I take it?</text>
  </message>
  <message>
    <ts>2017-07-17T07:13:49.330843</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://github.com/avh4/elm-format/#elm-vim-installation&gt; there is :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-17T07:14:00.333650</ts>
    <user>U4RR7KX45</user>
    <text>yes I have</text>
  </message>
  <message>
    <ts>2017-07-17T07:14:18.338385</ts>
    <user>U57KYFW67</user>
    <text>Is it not working? Or are you trying to configure it differently than the default?</text>
  </message>
  <message>
    <ts>2017-07-17T07:14:27.340642</ts>
    <user>U4RR7KX45</user>
    <text>does it have to be neovim or smth similar? I'm using vim8 at the moment</text>
  </message>
  <message>
    <ts>2017-07-17T07:14:45.345237</ts>
    <user>U57KYFW67</user>
    <text>Is vim8 the "default" vim?</text>
  </message>
  <message>
    <ts>2017-07-17T07:14:47.345883</ts>
    <user>U4RR7KX45</user>
    <text>yeah</text>
  </message>
  <message>
    <ts>2017-07-17T07:14:53.347325</ts>
    <user>U57KYFW67</user>
    <text>Yeah. I just use whatever ubuntu gave me</text>
  </message>
  <message>
    <ts>2017-07-17T07:15:07.350938</ts>
    <user>U4RR7KX45</user>
    <text>ok thanks, I'll try to uninstall plugins and re-install them</text>
  </message>
  <message>
    <ts>2017-07-17T07:15:18.354094</ts>
    <user>U57KYFW67</user>
    <text>```
call plug#begin('~/.vim/plugged')
  Plug 'elmcast/elm-vim'
call plug#end()
```</text>
  </message>
  <message>
    <ts>2017-07-17T07:15:23.355518</ts>
    <user>U57KYFW67</user>
    <text>This is all it took me</text>
  </message>
  <message>
    <ts>2017-07-17T07:15:35.358578</ts>
    <user>U57KYFW67</user>
    <text>which is just in the instructions on that github page, of course</text>
  </message>
  <message>
    <ts>2017-07-17T07:16:09.367695</ts>
    <user>U1P6FFJ64</user>
    <text>&lt;@U4RR7KX45&gt; there is a &lt;#C0SR8T090|vim&gt; channel too where you can ask</text>
  </message>
  <message>
    <ts>2017-07-17T07:16:26.372200</ts>
    <user>U57KYFW67</user>
    <text>Don't forget to run `:PlugInstall`</text>
  </message>
  <message>
    <ts>2017-07-17T07:16:34.374033</ts>
    <user>U4RR7KX45</user>
    <text>thanks guys :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-17T07:16:42.376253</ts>
    <user>U4RR7KX45</user>
    <text>thanks Elmers :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-17T07:16:44.376978</ts>
    <user>U4RR7KX45</user>
    <text>lol</text>
  </message>
  <message>
    <ts>2017-07-17T07:16:48.377814</ts>
    <user>U57KYFW67</user>
    <text>and to set the autosave flag: let g:elm_format_autosave = 1</text>
  </message>
  <message>
    <ts>2017-07-17T07:17:41.391879</ts>
    <user>U57KYFW67</user>
    <text>Although the autosave command started screwing with me when I was trying to make changes to other people's repos (which aren't yet formatted by elm-format). I bound a key to do the format for me</text>
  </message>
  <message>
    <ts>2017-07-17T07:22:15.464106</ts>
    <user>U4RR7KX45</user>
    <text>ok reinstalling it solved it. :slightly_smiling_face: thanks guys!</text>
  </message>
  <message>
    <ts>2017-07-17T07:22:18.465023</ts>
    <user>U4RR7KX45</user>
    <text>damn..</text>
  </message>
  <message>
    <ts>2017-07-17T07:22:31.468346</ts>
    <user>U4RR7KX45</user>
    <text>sorry &lt;@USLACKBOT&gt; I always forget</text>
  </message>
  <message>
    <ts>2017-07-17T08:38:14.846518</ts>
    <user>U5R6L5MT4</user>
    <text>Thanks, that will be really useful</text>
  </message>
  <message>
    <ts>2017-07-17T08:38:29.852263</ts>
    <user>U5R6L5MT4</user>
    <text>I didn't know it was possible to run Elm in the Terminal</text>
  </message>
  <message>
    <ts>2017-07-17T08:38:48.860183</ts>
    <user>U5R6L5MT4</user>
    <text>Right now as soon as I try to run my program it end up in a recursion error</text>
  </message>
  <message>
    <ts>2017-07-17T08:39:17.871860</ts>
    <user>U5R6L5MT4</user>
    <text>&lt;https://github.com/natim/elm-sudoku&gt;</text>
  </message>
  <message>
    <ts>2017-07-17T10:30:46.268149</ts>
    <user>U61FZV5EK</user>
    <text>Hey. I have a list of elements i want to tab through or click on. When tabbing, I want the element to have an outline, but not when I click on them. Is there some clever way to achieve this without messing with the model?</text>
  </message>
  <message>
    <ts>2017-07-17T10:34:58.418584</ts>
    <user>U4872964V</user>
    <text>a list of input fields?</text>
  </message>
  <message>
    <ts>2017-07-17T10:35:10.425741</ts>
    <user>U4872964V</user>
    <text>or normal elements?</text>
  </message>
  <message>
    <ts>2017-07-17T10:36:48.485356</ts>
    <user>U61FZV5EK</user>
    <text>Anchors.</text>
  </message>
  <message>
    <ts>2017-07-17T10:41:41.661588</ts>
    <user>U69D8R59S</user>
    <text>I'm having some trouble with solving this functionally inside my update function:

I have these two variables:

```
resultsFromCommand = [ 1 , 2 ]
somethingInModel = [ { value : Int, someOtherValue :  Int } ]
```

I want to loop through `resultsFromCommand` and do `somethingInModel[index].value = resultsFromCommand[index]`. 

How can I accomplish this succinctly?</text>
  </message>
  <message>
    <ts>2017-07-17T10:44:13.752406</ts>
    <user>U61FZV5EK</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/latest/List#map2&gt;</text>
  </message>
  <message>
    <ts>2017-07-17T10:44:19.756370</ts>
    <user>U61FZV5EK</user>
    <text>Have you looked at this?</text>
  </message>
  <message>
    <ts>2017-07-17T10:47:14.862234</ts>
    <user>U61FZV5EK</user>
    <text>map2 (\smt res -&amp;gt; smt.value = res ) somethingInModel resultsFromCommand</text>
  </message>
  <message>
    <ts>2017-07-17T10:52:38.060287</ts>
    <user>U69D8R59S</user>
    <text>Wow! Thank you. I haven't used map2 yet, but this looks like exactly what I am after.</text>
  </message>
  <message>
    <ts>2017-07-17T10:53:21.087213</ts>
    <user>U4872964V</user>
    <text>I guess `{ smt | smt.value = res }`</text>
  </message>
  <message>
    <ts>2017-07-17T10:54:04.113574</ts>
    <user>U4872964V</user>
    <text>or make an `updateSomething` function</text>
  </message>
  <message>
    <ts>2017-07-17T10:54:13.118959</ts>
    <user>U4872964V</user>
    <text>for readability</text>
  </message>
  <message>
    <ts>2017-07-17T11:30:40.451368</ts>
    <user>U4RR7KX45</user>
    <text>is it possible to dynamically update a value in Elm state? Something like this:
```
         UpdateValue key value -&amp;gt;
             { model | key = value }
```</text>
  </message>
  <message>
    <ts>2017-07-17T11:31:45.490972</ts>
    <user>U3SJEDR96</user>
    <text>nope</text>
  </message>
  <message>
    <ts>2017-07-17T11:32:25.514350</ts>
    <user>U4RR7KX45</user>
    <text>so it has to be explicit</text>
  </message>
  <message>
    <ts>2017-07-17T11:32:33.520415</ts>
    <user>U4RR7KX45</user>
    <text>yeah thought so</text>
  </message>
  <message>
    <ts>2017-07-17T11:34:31.590998</ts>
    <user>U3SJEDR96</user>
    <text>You can't prove at compile-time that your record will have a field with that name, and that changing the value will result in the correct record shape being returned</text>
  </message>
  <message>
    <ts>2017-07-17T11:34:59.607612</ts>
    <user>U4RR7KX45</user>
    <text>yeah makes sense elm-way :smile:</text>
  </message>
  <message>
    <ts>2017-07-17T11:35:08.613241</ts>
    <user>U4RR7KX45</user>
    <text>thank you</text>
  </message>
  <message>
    <ts>2017-07-17T11:43:42.924428</ts>
    <user>U4872964V</user>
    <text>If you have things like that, maybe a `Dict` is what you are after</text>
  </message>
  <message>
    <ts>2017-07-17T12:17:55.143657</ts>
    <user>U5E99RPK6</user>
    <text>If the order of keys in a record doesn't matter, how can `Model` be used as a constructor function [here](&lt;https://guide.elm-lang.org/architecture/user_input/forms.html&gt;)? How would it know which argument goes with which key?</text>
  </message>
  <message>
    <ts>2017-07-17T12:24:47.372621</ts>
    <user>U5R6L5MT4</user>
    <text>Thanks to you I know have a working version :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-17T12:25:24.393330</ts>
    <user>U5R6L5MT4</user>
    <text>Also it would benefit of some refactoring</text>
  </message>
  <message>
    <ts>2017-07-17T12:25:27.395552</ts>
    <user>U5R6L5MT4</user>
    <text>At least it works :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-17T12:37:33.791681</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U5E99RPK6&gt; 

The order doesn't matter if defining the alias with `{ }` syntax, so:

`{ a = 5, b= 6 }` or `{ b = 6, a = 5 }`

But once you define a type alias, such as:

```
type alias Model =
  { name : String
  , password : String
  , passwordAgain : String
  }
```

Elm automatically creates a constructor function for you that gives you *another way* to create a `Model`. This is a regular function it gives you, so it has to care about parameter order, and so it goes in the name the *direction of the properties in your type alias*. So here the type of `Model` is

```
Model : Name -&amp;gt; Password -&amp;gt; PasswordAgain -&amp;gt; Model
```</text>
  </message>
  <message>
    <ts>2017-07-17T12:38:04.807783</ts>
    <user>U2GPAEU1L</user>
    <text>(Where `Name` and everything else are `String`s, I just wanted to make it more clear than `String -&amp;gt; String -&amp;gt;...`</text>
  </message>
  <message>
    <ts>2017-07-17T12:43:25.977008</ts>
    <user>U5E99RPK6</user>
    <text>&lt;@U2GPAEU1L&gt; ah right, that makes sense. I was reading the `{}` part in the type alias as a record that was evaluated before being passed to `=`, but that's not record syntax (colon /= equals). so the whole type alias block is interpreted as one thing and the function is generated from it taking into account the order. thank you!</text>
  </message>
  <message>
    <ts>2017-07-17T12:46:04.060859</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U5E99RPK6&gt; Ya I get it, easy place to trip up (plus a lot of things have the same name which at first is confusing, but later you'll appreciate).</text>
  </message>
  <message>
    <ts>2017-07-17T13:12:55.943084</ts>
    <user>U3SJEDR96</user>
    <text>The positional encoding of magic constructor functions is pretty trippy :discoball:</text>
  </message>
  <message>
    <ts>2017-07-17T14:53:25.212305</ts>
    <user>U635MRFPY</user>
    <text>hi, I am trying to build a single page app bootstrapped with `elm-community/elm-webpack-starter` but I am having issues due to the injected js from webpack</text>
  </message>
  <message>
    <ts>2017-07-17T14:54:17.240737</ts>
    <user>U635MRFPY</user>
    <text>the problem is that the path to the main js is relative (src/static/main.js) and so if I e.g. have a nested route (like /accounts/recent) the js file can not be found</text>
  </message>
  <message>
    <ts>2017-07-17T14:54:29.247234</ts>
    <user>U635MRFPY</user>
    <text>any tips on how to tell webpack to use `/src/static/main.js`?</text>
  </message>
  <message>
    <ts>2017-07-17T15:00:43.451102</ts>
    <user>U635MRFPY</user>
    <text>got it, setting `output.public_path = '/'` seems to do the trick</text>
  </message>
  <message>
    <ts>2017-07-17T15:19:51.023309</ts>
    <user>U64FYS317</user>
    <text>Is there a way to apply a function to the result of a decoder? i.e. something like withDefault, turning `decoder (maybe (list string))` into `[]` if it was a `Nothing`?</text>
  </message>
  <message>
    <ts>2017-07-17T15:21:25.070448</ts>
    <user>U23SA861Y</user>
    <text>so you want to use `map` and I believe what you want is `Maybe.withDefault` to be the function you map</text>
  </message>
  <message>
    <ts>2017-07-17T15:21:50.082353</ts>
    <user>U23SA861Y</user>
    <text>`Json.Decoder.map (Maybe.withDefault []) otherdecoder`</text>
  </message>
  <message>
    <ts>2017-07-17T15:22:37.105406</ts>
    <user>U64FYS317</user>
    <text>thank you &lt;@U23SA861Y&gt;</text>
  </message>
  <message>
    <ts>2017-07-17T15:22:53.113688</ts>
    <user>U64FYS317</user>
    <text>That was rather simple :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-17T15:23:10.121861</ts>
    <user>U23SA861Y</user>
    <text>it's supposed to be :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-17T15:55:22.078044</ts>
    <user>U2SR9DL7Q</user>
    <text>Silly question but, can I send multiple commands in the same update function? On  a related note, is it good practice to have updates trigger other updates?</text>
  </message>
  <message>
    <ts>2017-07-17T15:56:08.101471</ts>
    <user>U0LPMPL2U</user>
    <text>in most cases, no</text>
  </message>
  <message>
    <ts>2017-07-17T15:56:18.106528</ts>
    <user>U0LPMPL2U</user>
    <text>if you're trying do DRY your code, extract functions</text>
  </message>
  <message>
    <ts>2017-07-17T15:56:36.115423</ts>
    <user>U0LPMPL2U</user>
    <text>`update` is for handling input from the outside world</text>
  </message>
  <message>
    <ts>2017-07-17T15:57:00.127760</ts>
    <user>U4872964V</user>
    <text>&lt;@U2SR9DL7Q&gt; yes, Cmd.batch and no, it's not good practice, just do the work directly instead</text>
  </message>
  <message>
    <ts>2017-07-17T15:58:38.178136</ts>
    <user>U0LPMPL2U</user>
    <text>for example:
```
Foo -&amp;gt; (setFieldOnModel model, Cmd.batch [cmd1, cmd2])
Bar -&amp;gt; (setFieldOnModel model, Cmd.none)
```</text>
  </message>
  <message>
    <ts>2017-07-17T15:58:58.188769</ts>
    <user>U0LPMPL2U</user>
    <text>the common model logic is extracted into the `setFieldOnModel` function and called from both branches of the `case`</text>
  </message>
  <message>
    <ts>2017-07-17T15:59:20.200667</ts>
    <user>U0LPMPL2U</user>
    <text>the `Foo` branch uses `Cmd.batch` to trigger multiple side effects with commands</text>
  </message>
  <message>
    <ts>2017-07-17T16:03:21.325406</ts>
    <user>U2SR9DL7Q</user>
    <text>hmmm... I had to use update so far because I needed random number generation. But now I have a sequence of operations and model changes that happen after that (for some game logic).</text>
  </message>
  <message>
    <ts>2017-07-17T16:03:45.337522</ts>
    <user>U2SR9DL7Q</user>
    <text>But I think I get what you're trying to say.</text>
  </message>
  <message>
    <ts>2017-07-17T16:04:25.357441</ts>
    <user>U0LPMPL2U</user>
    <text>can you post an example? It might be easier to give advice on a concrete scenario :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-17T16:07:11.439833</ts>
    <user>U0LPMPL2U</user>
    <text>when you're generating several random numbers at once, it's often better to combine the generators into into a single one that returns a tuple or record and only use a single command</text>
  </message>
  <message>
    <ts>2017-07-17T16:09:03.494815</ts>
    <user>U2SR9DL7Q</user>
    <text>Sure...
```
SetGame newSet firstplayer -&amp;gt;
            let
                players =
                    createPlayers newSet
            in
            ( { model | dominoes = newSet, game = Just &amp;lt;| Game [] players firstplayer }, Cmd.none )

        ShuffleList -&amp;gt;
            ( model, Random.generate SetFirstPlayer &amp;lt;| shuffle model.dominoes )

        SetFirstPlayer newSet -&amp;gt;
            ( model, Random.generate (SetGame newSet) (&lt;http://Random.int|Random.int&gt; 1 4) )
```
To explain, when the user clicks `Start Game`, `Shuffle List` is called and shuffles a set of domnioes. That's passed to `SetFirstPlayer` which also needs randomness to decide who goes first. That was passed to setGame to make the appropriate model updates.</text>
  </message>
  <message>
    <ts>2017-07-17T16:09:39.512707</ts>
    <user>U2SR9DL7Q</user>
    <text>`SetGame` should be at the same level of indentation as `ShuffleList`.</text>
  </message>
  <message>
    <ts>2017-07-17T16:10:16.530908</ts>
    <user>U0LPMPL2U</user>
    <text>Could all the randomness be done in one step? Shuffling dominoes and selecting the first player?</text>
  </message>
  <message>
    <ts>2017-07-17T16:10:29.537214</ts>
    <user>U2SR9DL7Q</user>
    <text>I now realize I could've just used one Msg for all the randomness.</text>
  </message>
  <message>
    <ts>2017-07-17T16:11:12.558811</ts>
    <user>U23SA861Y</user>
    <text>map is your friend</text>
  </message>
  <message>
    <ts>2017-07-17T16:11:59.581520</ts>
    <user>U2SR9DL7Q</user>
    <text>But now that the game is set, it automatically starts doing things... The first player must now select a domino from their hand and place it on the board, and pass the turn to the next player, etc. This is all tracked using the model.</text>
  </message>
  <message>
    <ts>2017-07-17T16:12:30.596527</ts>
    <user>U2SR9DL7Q</user>
    <text>So doesn't that mean update functions? This is what I meant by chaining updates.</text>
  </message>
  <message>
    <ts>2017-07-17T16:12:44.603859</ts>
    <user>U0LPMPL2U</user>
    <text>All the setup can be a single step</text>
  </message>
  <message>
    <ts>2017-07-17T16:13:10.616872</ts>
    <user>U23SA861Y</user>
    <text>but each one of those represents a state where the game must pause waiting for user input. You don't need that pause setting up the game state</text>
  </message>
  <message>
    <ts>2017-07-17T16:13:57.639774</ts>
    <user>U2SR9DL7Q</user>
    <text>There's no pause unless it's the human player. Sorry, wasn't clear. For now, 3 robo players and 1 human player.</text>
  </message>
  <message>
    <ts>2017-07-17T16:14:20.651317</ts>
    <user>U2SR9DL7Q</user>
    <text>But you're right. Until the human players turn, I guess I don't need another update.</text>
  </message>
  <message>
    <ts>2017-07-17T16:14:50.665448</ts>
    <user>U23SA861Y</user>
    <text>you do if you want the visual representation to change</text>
  </message>
  <message>
    <ts>2017-07-17T16:15:33.687030</ts>
    <user>U2SR9DL7Q</user>
    <text>I do. Each player, human or robot, selects a domino to go on the board, which has to be displayed on the screen.</text>
  </message>
  <message>
    <ts>2017-07-17T16:15:52.696284</ts>
    <user>U0LPMPL2U</user>
    <text>I'd probably have a `playAITurn` generator that does all the random choices for a single AI turn, triggers the update and sets the AI's choices on the model. This triggers a redraw of view.</text>
  </message>
  <message>
    <ts>2017-07-17T16:16:30.715105</ts>
    <user>U0LPMPL2U</user>
    <text>depending on who the next player is, either wait for the user to do something or `playAITurn` again</text>
  </message>
  <message>
    <ts>2017-07-17T16:16:47.723453</ts>
    <user>U0LPMPL2U</user>
    <text>possibly put a sleep in there if you don't want the AIs to play too fast</text>
  </message>
  <message>
    <ts>2017-07-17T16:17:08.733785</ts>
    <user>U2SR9DL7Q</user>
    <text>luckily, AI choice implmentation isnt random right now. AI plays a very low level, but methodical way.</text>
  </message>
  <message>
    <ts>2017-07-17T16:17:17.738512</ts>
    <user>U2SR9DL7Q</user>
    <text>yeah, I will need the sleep I suspect</text>
  </message>
  <message>
    <ts>2017-07-17T16:17:24.741544</ts>
    <user>U23SA861Y</user>
    <text>could be random too</text>
  </message>
  <message>
    <ts>2017-07-17T16:17:49.753975</ts>
    <user>U23SA861Y</user>
    <text>since you can't just issue a command it's actually useful to you to require a sleep or such</text>
  </message>
  <message>
    <ts>2017-07-17T16:18:47.781533</ts>
    <user>U2SR9DL7Q</user>
    <text>the random way is to have AI select a domino at random from its hand, and then check if it can be legally played. The other way is to iterate through the hand, and select the first domino that can be legally played.</text>
  </message>
  <message>
    <ts>2017-07-17T16:19:24.799812</ts>
    <user>U2SR9DL7Q</user>
    <text>since the initial hand is assigned at random, I'm not sure that it's any more random doing it the first way than the second.</text>
  </message>
  <message>
    <ts>2017-07-17T16:19:34.804760</ts>
    <user>U23SA861Y</user>
    <text>either way, to dispatch a message back you yourself you need to inject a sideeffect, such as sleep or random generation</text>
  </message>
  <message>
    <ts>2017-07-17T16:20:13.824132</ts>
    <user>U2SR9DL7Q</user>
    <text>Yup. I guess I'm just trying to wrap my head around the structure of the next sequence of events.</text>
  </message>
  <message>
    <ts>2017-07-17T16:20:29.832076</ts>
    <user>U2SR9DL7Q</user>
    <text>and where are the logical breakpoints that I need to send a message.</text>
  </message>
  <message>
    <ts>2017-07-17T16:20:53.844224</ts>
    <user>U2SR9DL7Q</user>
    <text>So far it seems  every time the view needs to change is a good start.</text>
  </message>
  <message>
    <ts>2017-07-17T16:21:57.876033</ts>
    <user>U23SA861Y</user>
    <text>well, update should return any time the view needs to change</text>
  </message>
  <message>
    <ts>2017-07-17T16:22:56.905016</ts>
    <user>U2SR9DL7Q</user>
    <text>I've made this game in python, but I was just using the command line there, so I really wanted to try making a proper UI in elm.</text>
  </message>
  <message>
    <ts>2017-07-17T16:23:21.917844</ts>
    <user>U2SR9DL7Q</user>
    <text>But translating it from OOP to FP has been... a fun challenge.</text>
  </message>
  <message>
    <ts>2017-07-17T16:23:40.927204</ts>
    <user>U23SA861Y</user>
    <text>well, it's a fundamentally different paradigm</text>
  </message>
  <message>
    <ts>2017-07-17T16:24:07.940593</ts>
    <user>U4WH8STNX</user>
    <text>I find it's not so different when you have really SOLID code in OOP</text>
  </message>
  <message>
    <ts>2017-07-17T16:24:49.961253</ts>
    <user>U4WH8STNX</user>
    <text>in my .NET code I tend to have role interfaces with one member and static classes with static methods, maybe that's just the Elm influence :smile:</text>
  </message>
  <message>
    <ts>2017-07-17T16:26:05.999826</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U4WH8STNX&gt; Yeah... to an extent, some parts are just separating my classes, with attributes being the model, and methods become functions that help those attributes.</text>
  </message>
  <message>
    <ts>2017-07-17T16:27:43.049367</ts>
    <user>U2SR9DL7Q</user>
    <text>but randomness becomes something that I now need to handle explicitly at the edge of my code</text>
  </message>
  <message>
    <ts>2017-07-17T16:28:39.077583</ts>
    <user>U4WH8STNX</user>
    <text>it's true that Elm makes you think of the side effects because you can't accidentally introduce them - heavens :unicorn_face:</text>
  </message>
  <message>
    <ts>2017-07-17T16:28:46.081836</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U0LPMPL2U&gt; &lt;@U23SA861Y&gt; &lt;@U4WH8STNX&gt; Thank you very much folks</text>
  </message>
  <message>
    <ts>2017-07-17T16:51:00.747107</ts>
    <user>U68N7EGVB</user>
    <text>I have a question about importing types. I have two files: `App.elm` and `Types.elm`.

`Types.elm`:

```
module Types exposing (Model, Msg)
...

type alias Model = { mdl: Material.Model }

type Msg = Mdl (Material.Msg Msg)
```

`App.elm`:

```
...
update : Msg -&amp;gt; Model -&amp;gt; ( Model, Cmd Msg )
...
case msg of
  Mdl msg_ -&amp;gt;
...
```

How to import `Msg` from `Types.elm` so that `Mdl` is visible in that pattern matching?</text>
  </message>
  <message>
    <ts>2017-07-17T16:51:25.759942</ts>
    <user>U57KYFW67</user>
    <text>`import ModuleName exposing (Msg(..))` I think</text>
  </message>
  <message>
    <ts>2017-07-17T16:51:59.776721</ts>
    <user>U68N7EGVB</user>
    <text>I tried `import  Types  exposing  (Model, Msg(..))`, but it still says that `cannot find pattern Mdl`.</text>
  </message>
  <message>
    <ts>2017-07-17T16:52:42.797458</ts>
    <user>U57KYFW67</user>
    <text>ah. hmm</text>
  </message>
  <message>
    <ts>2017-07-17T16:54:07.839129</ts>
    <user>U2SR9DL7Q</user>
    <text>I also use mdl, and also have a types module, with a similar set up. But I just use import Types exposing (..) and it all works &lt;@U68N7EGVB&gt;</text>
  </message>
  <message>
    <ts>2017-07-17T16:55:47.888529</ts>
    <user>U0LPMPL2U</user>
    <text>You want to `module Types exposing (Model, Msg(..))`</text>
  </message>
  <message>
    <ts>2017-07-17T16:56:03.896684</ts>
    <user>U0LPMPL2U</user>
    <text>otherwise only the `Msg` type gets exposed but not the constructor `Mdl`</text>
  </message>
  <message>
    <ts>2017-07-17T16:57:55.953567</ts>
    <user>U68N7EGVB</user>
    <text>Hm. That's what I'm trying to do, but it seems like there are always those three errors: 2x `Cannot find variable Mdl` and once  `Cannot find pattern Mdl`.

Importing `Model` works perfectly fine so the module is seen.</text>
  </message>
  <message>
    <ts>2017-07-17T16:58:26.969093</ts>
    <user>U68N7EGVB</user>
    <text>So it looks like it's just importing `Msg` and not `Mdl`, just like you are saying.</text>
  </message>
  <message>
    <ts>2017-07-17T17:00:56.046105</ts>
    <user>U57KYFW67</user>
    <text>ah yeah</text>
  </message>
  <message>
    <ts>2017-07-17T17:03:42.128419</ts>
    <user>U68N7EGVB</user>
    <text>Ok, reading is hard, it's time to go to sleep. I was doing `import Types exposing (Msg(..))` but not `module Types exposing (Msg(..))` as &lt;@U0LPMPL2U&gt; said. So I was trying to import everything while not exporting everything. 

My bad, thanks for the help everyone!</text>
  </message>
  <message>
    <ts>2017-07-17T17:45:08.186350</ts>
    <user>U2GPAEU1L</user>
    <text>Hey everyone, I see a lot of people trip-up / not properly understand extensible records, I made a tutorial explaining them and also explaining the common pitfalls, if you wanna learn about extensible records I recommend spending 5-10 minutes of your time going through this tutorial: 

&lt;http://codetidbit.com/#view/snipbit/596d2ebf7890d775c05191f7/introduction&gt;

Cheers :smile:</text>
  </message>
  <message>
    <ts>2017-07-17T17:45:58.205537</ts>
    <user>U2GPAEU1L</user>
    <text>(friendly for beginners - experts, anyone who doesn't understand extensible records)</text>
  </message>
  <message>
    <ts>2017-07-17T17:51:05.322301</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U2GPAEU1L&gt;  Thanks!</text>
  </message>
  <message>
    <ts>2017-07-17T18:32:07.150314</ts>
    <user>U5ABF3BH7</user>
    <text>Hi everyone, I am getting a mismatch error and I haven't been able to fix it! The error says I am missing one argument but I don't get it.  I am trying to wrap the address fields into an address model as it needs to be reusable. 
Could someone help me to figure out how to fix it? I have tried many things but it is not working. 
Here is my error
```
-- TYPE MISMATCH ------------------------------- ././Views/Sections/Location.elm

The argument to function `AddressMsg` is causing a mismatch.

271|                                                                                                                        AddressMsg Address.ChgCountry)
                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^
Function `AddressMsg` is expecting the argument to be:

    Address.Msg

But it is:

    String -&amp;gt; Address.Msg

Hint: It looks like a function needs 1 more argument.

Detected errors in 1 module.
```

I have a Location.Model where the address is a submodel
 `` type alias Model =
    { type_ : String
     address : Address.Model
 }``

in my Address module, Address has fields ;
```
 Address.Model =
    { id : Maybe Int
    , address1 : String
    , address2 : String
    , address3 : String
    , address4 : String
    , country : String
 }
```

 Address.Msg =
    ChgAddress1 String
  | ChgAddress2 String
  | ChgAddress3 String
  | ChgAddress4 String
  | ChgCountry String
}


In my view, I have a config that includes the Model (Location.Model)
```
type alias Config msg =
    { model : Model
    , toMsg : (String -&amp;gt; Msg) -&amp;gt; String -&amp;gt; msg
    , toClickMsg : Msg -&amp;gt; msg
    }
```

`` div [ class "col-xs-7" ]
    [ select [ class "select form-control", onInput (config.toMsg (AddressMsg Address.ChgCountry)), value config.model.address.country ]
        AddressHelper.countryOptions
    ]

```

```
| AddressMsg Address.Msg

```
AddressMsg submsg -&amp;gt;
     let
       updatedAddress = Address.update model.address submsg
     in
    { model | address =  updatedAddress}
```
Sorry for the long message, I am trying to give the context. So my question is, how can I wrap the AddressMsg Address.ChgCountry so that I don't get the error?</text>
  </message>
  <message>
    <ts>2017-07-17T18:33:52.181327</ts>
    <user>U3HQVHERX</user>
    <text>`Address.ChgCountry` is expecting a string because your Address modules Msg is: ` | ChgCountry String`</text>
  </message>
  <message>
    <ts>2017-07-17T18:34:40.195670</ts>
    <user>U5ABF3BH7</user>
    <text>My location msg used to have the field country, and the message ``onInput (config.toMsg ChgCountry)`` worked fine. Now that I am trying to wrap it, I get the error mentioned</text>
  </message>
  <message>
    <ts>2017-07-17T18:34:56.200095</ts>
    <user>U5ABF3BH7</user>
    <text>sorry not msg but model</text>
  </message>
  <message>
    <ts>2017-07-17T18:36:48.231928</ts>
    <user>U3HQVHERX</user>
    <text>what is `submsg`?</text>
  </message>
  <message>
    <ts>2017-07-17T18:37:52.250691</ts>
    <user>U5ABF3BH7</user>
    <text>I think submsg is (ChgCountry str)</text>
  </message>
  <message>
    <ts>2017-07-17T18:38:46.266340</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U3HQVHERX&gt; The following code provides a string already</text>
  </message>
  <message>
    <ts>2017-07-17T18:38:49.267233</ts>
    <user>U5ABF3BH7</user>
    <text>```div [ class "col-xs-7" ]
   [ select [ class "select form-control", onInput (config.toMsg (AddressMsg Address.ChgCountry)), value config.model.address.country ]
       AddressHelper.countryOptions
   ]```</text>
  </message>
  <message>
    <ts>2017-07-17T18:38:56.269232</ts>
    <user>U5ABF3BH7</user>
    <text>since it is a select</text>
  </message>
  <message>
    <ts>2017-07-17T18:53:57.526032</ts>
    <user>U3HQVHERX</user>
    <text>what about `onInput (config.toMsg (AddressMsg Address.ChgCountry))` --&amp;gt; `onInput Address.ChgCountry` and change type to `Html msg`</text>
  </message>
  <message>
    <ts>2017-07-17T19:01:18.651249</ts>
    <user>U57KYFW67</user>
    <text>Ack. What is the command to genreate a new elm-package.json file?</text>
  </message>
  <message>
    <ts>2017-07-17T19:01:24.652885</ts>
    <user>U5ABF3BH7</user>
    <text>It doesn't work either, it needs to be wrapped.</text>
  </message>
  <message>
    <ts>2017-07-17T19:02:29.670813</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U57KYFW67&gt; `elm-repl` will make one incidentally i think</text>
  </message>
  <message>
    <ts>2017-07-17T19:04:41.706581</ts>
    <user>U57KYFW67</user>
    <text>oh, I had an elm-stuff directory!</text>
  </message>
  <message>
    <ts>2017-07-17T19:08:01.759964</ts>
    <user>U3HQVHERX</user>
    <text>i'll test this out and see what I find :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-17T19:16:53.896676</ts>
    <user>U3HQVHERX</user>
    <text>&lt;https://gist.github.com/nqthqn/5843404710c279427203a582a1bef488&gt;</text>
  </message>
  <message>
    <ts>2017-07-17T19:19:50.941121</ts>
    <user>U3HQVHERX</user>
    <text>So if you have a module `Foo` that exposes `Msg` and `update` you can do this in the place you are using the module

```
type Msg
    = Bar
    | FooMsg Foo.Msg
```

then pattern match just as you are doing.

And in the view:

`button [ onClick (FooMsg Foo.Uno) ] [ text "Foo.Uno" ]`</text>
  </message>
  <message>
    <ts>2017-07-17T19:22:09.976607</ts>
    <user>U3HQVHERX</user>
    <text>oh wait, you have a string</text>
  </message>
  <message>
    <ts>2017-07-17T19:22:10.976852</ts>
    <user>U3HQVHERX</user>
    <text>my bad</text>
  </message>
  <message>
    <ts>2017-07-17T19:24:34.012701</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U5ABF3BH7&gt; try: `onInput (\s -&amp;gt; AddressMsg (Address.ChgCountry s) )`</text>
  </message>
  <message>
    <ts>2017-07-17T20:01:04.537487</ts>
    <user>U57KYFW67</user>
    <text>Why is `@docs` required at the top of a file for an exported binding?</text>
  </message>
  <message>
    <ts>2017-07-17T20:01:39.546320</ts>
    <user>U57KYFW67</user>
    <text>What does `@docs` do that simply annotating the name with a `{-| ... -}` style comment not?</text>
  </message>
  <message>
    <ts>2017-07-17T20:14:19.710459</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U3HQVHERX&gt; Ah! I didn't think of doing that way!</text>
  </message>
  <message>
    <ts>2017-07-17T20:14:23.711172</ts>
    <user>U5ABF3BH7</user>
    <text>Thanks</text>
  </message>
  <message>
    <ts>2017-07-17T20:30:15.904873</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U57KYFW67&gt; &lt;http://package.elm-lang.org/help/documentation-format&gt;</text>
  </message>
  <message>
    <ts>2017-07-17T20:31:16.917584</ts>
    <user>U57KYFW67</user>
    <text>Does that let you control the ordering and grouping of the docs then?</text>
  </message>
  <message>
    <ts>2017-07-17T20:32:52.936703</ts>
    <user>U153UK3FA</user>
    <text>yep</text>
  </message>
  <message>
    <ts>2017-07-17T20:32:58.938014</ts>
    <user>U57KYFW67</user>
    <text>gotcha</text>
  </message>
  <message>
    <ts>2017-07-17T20:34:09.951527</ts>
    <user>U57KYFW67</user>
    <text>And the answer to this is probably "no", but is there any way in Elm reactor to pass a JSON object for a `Program` that requires `Flag`s?</text>
  </message>
  <message>
    <ts>2017-07-17T20:37:55.995007</ts>
    <user>U153UK3FA</user>
    <text>there isn't</text>
  </message>
  <message>
    <ts>2017-07-17T22:05:22.988574</ts>
    <user>U635238TG</user>
    <text>has anyone done the two Elm tutorials by James Moore on knowthen? I'm going to start the elm for beginners course tomorrow. I'm wondering if this and the Elm Beyond the Basics are going to be good for someone not just new to Elm but actually mostly new to programming in general.</text>
  </message>
  <message>
    <ts>2017-07-17T22:23:09.182421</ts>
    <user>U20K0C2G4</user>
    <text>&lt;@U635238TG&gt; they're good</text>
  </message>
  <message>
    <ts>2017-07-17T22:24:48.199515</ts>
    <user>U20K0C2G4</user>
    <text>you've made a good choice choosing elm to start programming, although most of the benefits that elm provides may not be as relevant, you'll get to a working application much quicker than with anything in the JavaScript world</text>
  </message>
  <message>
    <ts>2017-07-17T22:27:30.228562</ts>
    <user>U635238TG</user>
    <text>thank you! I'm excited. $45 is a little rich in my present circumstances but there is just not that many Elm learning resources out there. I also just got the Elm in Action book by Richard Feldman. I'm just straight into this thing.</text>
  </message>
  <message>
    <ts>2017-07-17T22:28:14.236217</ts>
    <user>U20K0C2G4</user>
    <text>yea Richard Feldman's resources are great too</text>
  </message>
  <message>
    <ts>2017-07-17T22:28:35.239723</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U635238TG&gt; If you have no programming experience, you may be at a small kind of advantage, too, over some other programmers.</text>
  </message>
  <message>
    <ts>2017-07-17T22:29:31.249633</ts>
    <user>U57KYFW67</user>
    <text>Elm is very different than most languages (being what we call a pure functional language). And old hat programmers spend a lot of time having to unlearn a lot of what they expect when coming into such a language.</text>
  </message>
  <message>
    <ts>2017-07-17T22:30:40.263099</ts>
    <user>U20K0C2G4</user>
    <text>honestly I'm curious, &lt;@U635238TG&gt; how did you find Elm?</text>
  </message>
  <message>
    <ts>2017-07-17T22:30:47.264367</ts>
    <user>U635238TG</user>
    <text>yeah, i kind of got that sense too. i did a little javascript stuff but I don't think enough to come away with any habits or modes of thinking yet.</text>
  </message>
  <message>
    <ts>2017-07-17T22:31:45.275310</ts>
    <user>U635238TG</user>
    <text>i basically wanted to explore web development but quickly grew to dislike this whole javascript landscape. all the criticisms people were saying made sense to me and then Elm just popped up as kind of solving all these in a neat package.</text>
  </message>
  <message>
    <ts>2017-07-17T22:32:31.283316</ts>
    <user>U57KYFW67</user>
    <text>That sounds like a good situation to try using Elm, I'd say</text>
  </message>
  <message>
    <ts>2017-07-17T22:34:58.308858</ts>
    <user>U635238TG</user>
    <text>i figure it is a great language to learn good, safe habits of programming now and will make it easier going forward if I want to bring the functional programming mindset to other languages. the compiler is like my little robot buddy helping me along the way!</text>
  </message>
  <message>
    <ts>2017-07-17T22:39:53.360626</ts>
    <user>U635238TG</user>
    <text>i hope others find decent runarounds for using it on the server side by the time I get to that point so I can just keep getting better in this language before having to branch out. haskell seems way intimidating but I'm drinking the fp approach kool-aid. maybe elixir. the timeline talks on elm development make it seem like it might be years down the road before it is an official capability.  I totally buy into the slow, thought out development approach of the language though</text>
  </message>
  <message>
    <ts>2017-07-17T22:46:03.426177</ts>
    <user>U57KYFW67</user>
    <text>There's lots of relatively easy server-side technologies you can use for Elm.</text>
  </message>
  <message>
    <ts>2017-07-17T22:46:22.429545</ts>
    <user>U57KYFW67</user>
    <text>Elm can host simple pages on its own with Elm Reactor</text>
  </message>
  <message>
    <ts>2017-07-17T22:46:48.434122</ts>
    <user>U57KYFW67</user>
    <text>The default output of elm make is just .html or .js files, so you could statically host them with, say, nginx or any other webserver</text>
  </message>
  <message>
    <ts>2017-07-17T22:47:15.438832</ts>
    <user>U57KYFW67</user>
    <text>Or you can try out a simple framework like Python's Flask, and that would give you more than enough to get started.</text>
  </message>
  <message>
    <ts>2017-07-17T22:47:33.441891</ts>
    <user>U635238TG</user>
    <text>i was actually hoping there would be smaller use case simple solutions like that. i'm not even that far in my learning yet so that is good to hear.</text>
  </message>
  <message>
    <ts>2017-07-17T22:47:51.444906</ts>
    <user>U57KYFW67</user>
    <text>(If you like the coolaid, I think there are also some simple Haskell web frameworks)</text>
  </message>
  <message>
    <ts>2017-07-17T22:48:55.456163</ts>
    <user>U635238TG</user>
    <text>and elm is supposed to be a great intro to fp so maybe i could do that. i think the one recommended is called scotty</text>
  </message>
  <message>
    <ts>2017-07-17T22:49:23.460943</ts>
    <user>U20K0C2G4</user>
    <text>I'm doing F# with Azure Functions on the server</text>
  </message>
  <message>
    <ts>2017-07-17T22:49:26.461524</ts>
    <user>U57KYFW67</user>
    <text>Yeah. Scotty is the one.</text>
  </message>
  <message>
    <ts>2017-07-17T22:49:26.461586</ts>
    <user>U635238TG</user>
    <text>i think it will be a lot of fun to grow with this language.</text>
  </message>
  <message>
    <ts>2017-07-17T22:49:37.463434</ts>
    <user>U20K0C2G4</user>
    <text>but I'm coming from a .net work environment</text>
  </message>
  <message>
    <ts>2017-07-17T22:51:35.484688</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U20K0C2G4&gt; What seems to be the issue?</text>
  </message>
  <message>
    <ts>2017-07-17T22:52:11.490935</ts>
    <user>U20K0C2G4</user>
    <text>I'm just chiming in, thought you were talking about server side technologies</text>
  </message>
  <message>
    <ts>2017-07-17T22:52:37.495446</ts>
    <user>U57KYFW67</user>
    <text>ahh, sorry. I misread.</text>
  </message>
  <message>
    <ts>2017-07-17T22:53:29.504570</ts>
    <user>U20K0C2G4</user>
    <text>as far as Elm though, I've started investigating style-elements package</text>
  </message>
  <message>
    <ts>2017-07-17T22:53:44.506990</ts>
    <user>U20K0C2G4</user>
    <text>I think they are on to something</text>
  </message>
  <message>
    <ts>2017-07-17T22:54:02.510096</ts>
    <user>U20K0C2G4</user>
    <text>I just don't fully understand it yet</text>
  </message>
  <message>
    <ts>2017-07-17T22:54:24.513876</ts>
    <user>U20K0C2G4</user>
    <text>&lt;@U57KYFW67&gt; have you looked into it?</text>
  </message>
  <message>
    <ts>2017-07-17T22:54:33.515387</ts>
    <user>U57KYFW67</user>
    <text>It's on my todo list.</text>
  </message>
  <message>
    <ts>2017-07-17T22:56:55.540309</ts>
    <user>U635238TG</user>
    <text>i am curious on why since Elm transpiles to js you can't use it to write code as node.js?</text>
  </message>
  <message>
    <ts>2017-07-17T22:58:45.558932</ts>
    <user>U57KYFW67</user>
    <text>A long term goal of Elm is to develop it as its own platform. Even though it compiles to JS today, eventually, it might compile to something else.</text>
  </message>
  <message>
    <ts>2017-07-17T22:59:00.561621</ts>
    <user>U57KYFW67</user>
    <text>So the problem isn't that it's not possible</text>
  </message>
  <message>
    <ts>2017-07-17T22:59:13.563964</ts>
    <user>U57KYFW67</user>
    <text>In fact, the elm-node package does pretty much exactly that</text>
  </message>
  <message>
    <ts>2017-07-17T22:59:47.569744</ts>
    <user>U57KYFW67</user>
    <text>But it does not meet the quality standards to be considered "part of Elm" quite yet.</text>
  </message>
  <message>
    <ts>2017-07-17T23:00:32.578919</ts>
    <user>U635238TG</user>
    <text>ahh. i was just coming at it with a mindset that if node is just js then you could just use Elm for everything you could use js for.</text>
  </message>
  <message>
    <ts>2017-07-17T23:01:18.587364</ts>
    <user>U635238TG</user>
    <text>also curious why someone can't take the js generated from Elm and edit it as if it was originally written in js and no one is the wiser.</text>
  </message>
  <message>
    <ts>2017-07-17T23:01:22.588118</ts>
    <user>U57KYFW67</user>
    <text>The code generation is the easy part. The libraries are the tricky part.  :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-17T23:01:42.591748</ts>
    <user>U57KYFW67</user>
    <text>You very well could. But machine-generated code is usually very hard to work with.</text>
  </message>
  <message>
    <ts>2017-07-17T23:02:06.596084</ts>
    <user>U57KYFW67</user>
    <text>and once you change it, you might as well delete the Elm code, because recompiling will overwrite your changes</text>
  </message>
  <message>
    <ts>2017-07-17T23:03:34.611056</ts>
    <user>U635238TG</user>
    <text>thanks for the patient answers! i'm going to be talking you folks' ears off as I learn all this. all the beginner programmers I know are pretty much going the js or python route</text>
  </message>
  <message>
    <ts>2017-07-17T23:03:45.612835</ts>
    <user>U0ZRNV5M3</user>
    <text>i think the "elm as its own platform" scenario is a really big deal</text>
  </message>
  <message>
    <ts>2017-07-17T23:04:22.618679</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U0ZRNV5M3&gt; It's an ideal lots of languages have tried. It's just a matter of sticking to your guns :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-17T23:05:00.624974</ts>
    <user>U0ZRNV5M3</user>
    <text>exactly. a lot of the most exciting aspects of using elm werent features people were clamoring for necessarily</text>
  </message>
  <message>
    <ts>2017-07-17T23:05:23.628844</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U635238TG&gt; It's not a bad idea to know Javascript or Python. Javascript is central to web development, as it's currently the only language browsers universally understand. (And Python is just merciful for a language for beginners).</text>
  </message>
  <message>
    <ts>2017-07-17T23:05:40.631663</ts>
    <user>U0ZRNV5M3</user>
    <text>i think evan's hope isnt to build a better way to write javascript, but a better way to create stuff</text>
  </message>
  <message>
    <ts>2017-07-17T23:08:02.655531</ts>
    <user>U635238TG</user>
    <text>i figure i will learn some javascript as needed while i progress along. i'm set on getting a solid foundation in Elm as my first language and focus on that first and foremost as I do believe in the approach and think it will make me a stronger developer at the foundation level over the long run.</text>
  </message>
  <message>
    <ts>2017-07-17T23:08:15.657615</ts>
    <user>U635238TG</user>
    <text>also taking html/css tutorials to get that down too</text>
  </message>
  <message>
    <ts>2017-07-18T01:08:07.794468</ts>
    <user>U3SJEDR96</user>
    <text>Yes, actually. It requires some fiddling, tho - I wrote about it. &lt;https://blog.ilias.xyz&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T01:24:37.948566</ts>
    <user>U57KYFW67</user>
    <text>Thanks. I'll take a look.</text>
  </message>
  <message>
    <ts>2017-07-18T02:43:49.842462</ts>
    <user>U61FZV5EK</user>
    <text>Hey. I have a list of anchors i want to tab through or click on. When tabbing, I want the element to have an outline, but not when I click on them. Is there some clever way to achieve this without messing with the model?</text>
  </message>
  <message>
    <ts>2017-07-18T02:48:37.907013</ts>
    <user>U2W8CSAQ7</user>
    <text>What's the easiest way to add copy-to-clipboard functionality in an Elm app these days?</text>
  </message>
  <message>
    <ts>2017-07-18T02:57:14.028093</ts>
    <user>U57KYFW67</user>
    <text>afaik, I think you probably need a port and delegate it to JS, &lt;@U2W8CSAQ7&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T02:58:13.042450</ts>
    <user>U153UK3FA</user>
    <text>I think there might be an issue with doing it like that due to browser restrictions</text>
  </message>
  <message>
    <ts>2017-07-18T02:58:48.051169</ts>
    <user>U57KYFW67</user>
    <text>You mean an issue using a port?</text>
  </message>
  <message>
    <ts>2017-07-18T03:00:50.084508</ts>
    <user>U153UK3FA</user>
    <text>oh, I mean you'll need to use that port to attach an event handler to a DOM element before the user clicks it</text>
  </message>
  <message>
    <ts>2017-07-18T03:01:44.099234</ts>
    <user>U153UK3FA</user>
    <text>I think interacting with the clipboard can only be done while handling an event</text>
  </message>
  <message>
    <ts>2017-07-18T03:04:54.149210</ts>
    <user>U3SJEDR96</user>
    <text>yeah, it can't happen asynchronously, which is how ports work due to the scheduler getting involved</text>
  </message>
  <message>
    <ts>2017-07-18T03:06:55.181178</ts>
    <user>U57KYFW67</user>
    <text>ah, yeah</text>
  </message>
  <message>
    <ts>2017-07-18T03:08:38.207857</ts>
    <user>U6A6Z5LMT</user>
    <text>Anyone know How to declare a record type with optional keys see &lt;https://www.reddit.com/r/elm/comments/6nwg53/record_type_with_optional_keys/&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T03:12:37.270481</ts>
    <user>U3SJEDR96</user>
    <text>I think Evan's answer there is one of read carefully. The key point is that a type alias for a record describes a certain shape, and only that shape. If you want to be able to access those fields type-safely, they need to be in the record, with a given type.</text>
  </message>
  <message>
    <ts>2017-07-18T03:13:23.282217</ts>
    <user>U3SJEDR96</user>
    <text>A datastructure that _may_ have a value of a certain type for a given key is also offered, and that would be a Dict or an Array (Array Foo)</text>
  </message>
  <message>
    <ts>2017-07-18T03:15:10.310307</ts>
    <user>U604S603Y</user>
    <text>I'm still having a brain knot in working with one part of The Elm Architecture:
I'm storing my `Session` in the top-level model of my Elm app so I can pass it in to all the functions that need to run authenticated against the server.
I have a `Login` submodule I'm using at different locations in my app.
After logging in successfully I want to emit a (top level) Message in the `Login` submodule along the lines of `SetSession newSession` which I then want to handle in the top-level `update` function.
But I have no idea how to "emit" a simple message I just constructed wrapped in a `Cmd` from my submodule's `update` function.
Is this even possible in Elm? Is it advised? Are there better patterns for that?</text>
  </message>
  <message>
    <ts>2017-07-18T03:18:05.357686</ts>
    <user>U3SJEDR96</user>
    <text>So basically, when you call `Login.update`, you wish to know something extra: did this action log me in or not. Right?</text>
  </message>
  <message>
    <ts>2017-07-18T03:18:26.363576</ts>
    <user>U604S603Y</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-18T03:19:27.380538</ts>
    <user>U3SJEDR96</user>
    <text>Right, so when you wish to get back some extra piece of info from a function, what would you normally do? (try to think of it as _just_ a function - `update` isn't special, and especially if it's in a sub-module, its signature doesn't need to conform to anything)</text>
  </message>
  <message>
    <ts>2017-07-18T03:20:27.397639</ts>
    <user>U604S603Y</user>
    <text>I was thinking of returning the `Session` data as another part of the `Tuple` of Login's `update`.  But then I have to return it from every branch of the update function in some way or another</text>
  </message>
  <message>
    <ts>2017-07-18T03:21:22.413046</ts>
    <user>U604S603Y</user>
    <text>which would result in a lot of branches with Nothing for the Maybe Session part of it</text>
  </message>
  <message>
    <ts>2017-07-18T03:21:28.414807</ts>
    <user>U3SJEDR96</user>
    <text>true, but you also return `Cmd.none` from all the branches that don't happen to create side-effects. Adding a third piece of info, which could just be a `Bool`, shouldn't be that bad?</text>
  </message>
  <message>
    <ts>2017-07-18T03:21:55.422059</ts>
    <user>U604S603Y</user>
    <text>true</text>
  </message>
  <message>
    <ts>2017-07-18T03:22:10.426271</ts>
    <user>U2W8CSAQ7</user>
    <text>Thanks! I tried &lt;https://claytonflesher.github.io/2016/11/01/copy-to-clipboard.html&gt; now, and it seems to work allright though.</text>
  </message>
  <message>
    <ts>2017-07-18T03:22:26.430791</ts>
    <user>U604S603Y</user>
    <text>but there's a second challenge I face going in the same direction:
wanting to update the page's title from every page - I have a `ChangePageTitle String` message for that already, which I'd like to emit from all other pages. I could call the Port for that directly but then I'd duplicate the Port call to everywhere which I don't really want.</text>
  </message>
  <message>
    <ts>2017-07-18T03:22:43.435844</ts>
    <user>U3SJEDR96</user>
    <text>Alternatively, you could change the structure alltogether and return a `{ model : Model, effects : Cmd Msg, loggedIn : Bool }`, and have functions to create that record from just a model, or a model and effects, or a model, effects and a bool</text>
  </message>
  <message>
    <ts>2017-07-18T03:23:37.451316</ts>
    <user>U3SJEDR96</user>
    <text>do the titles change within a single page, or is it "1 page -&amp;gt; 1 title"?</text>
  </message>
  <message>
    <ts>2017-07-18T03:24:03.458946</ts>
    <user>U57KYFW67</user>
    <text>cool cool :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T03:24:09.460356</ts>
    <user>U3SJEDR96</user>
    <text>in the second case, you can have a `title : String` function in every page module, and call that when switching to that page</text>
  </message>
  <message>
    <ts>2017-07-18T03:24:57.474368</ts>
    <user>U3SJEDR96</user>
    <text>though personally, I feel like the page-title is part of the top-level state, rather than sometihng to be decided by the individual pages. I'm not sure, actually, I could see it going both ways.. :thinking_face:</text>
  </message>
  <message>
    <ts>2017-07-18T03:30:30.573521</ts>
    <user>U604S603Y</user>
    <text>problem is: I only know the page title after the page has loaded its data from the server - because I want something like 'Element XYZ @ MyCoolTool' as title - but the name of the element comes from the server</text>
  </message>
  <message>
    <ts>2017-07-18T03:32:09.601867</ts>
    <user>U604S603Y</user>
    <text>so at the moment I have a pattern matching on all the pages where I return the page's initial `Cmd` (either a `RemoteData.Http` call or `Cmd.none`) which is then returned as the "Command to run" in the UrlChanged message handler</text>
  </message>
  <message>
    <ts>2017-07-18T03:37:51.701158</ts>
    <user>U3SJEDR96</user>
    <text>Right. Richard handled that type of thing using an `init` that returns a `Task` for the data-initialization, which was pretty neat. Thinking about this some more; I think this is how I would handle this:
1. have a single `emit : Json.Value -&amp;gt; Cmd msg` port
2. create a `setPageTitle : String -&amp;gt; Cmd msg` function, which adds the standard suffix to the title, json encodes it into an object like `{ "action" = "setTitle", "title" = "foo @ bar" }`
3. have a single subscription to that port on the JS side, which  has a good ol `switch` case on `msg.action`
4. call that `setPageTitle` function wherever you want to change the title</text>
  </message>
  <message>
    <ts>2017-07-18T03:39:15.725822</ts>
    <user>U604S603Y</user>
    <text>but wouldn't that spread the Port call throughout all my code? I still feel Ports are dirty and wanted to have the call only at one place in my code</text>
  </message>
  <message>
    <ts>2017-07-18T03:40:28.748208</ts>
    <user>U604S603Y</user>
    <text>your solution is nice and pragmatic (and I will probably do it that way)</text>
  </message>
  <message>
    <ts>2017-07-18T03:40:30.748732</ts>
    <user>U3SJEDR96</user>
    <text>ports are an excellent way to consider JS a remote API. If you can have http requests in multiple places, you can have port calls in multiple places. Minimizing the API surface by using a single outbound port tends to ensure you have a clear code-path, and using a helper-function to get the data in the correct format ensures correctness</text>
  </message>
  <message>
    <ts>2017-07-18T03:41:30.767491</ts>
    <user>U3SJEDR96</user>
    <text>`setPageTitle input = Json.object [ ( "action", Json.string "setTitle" ), ( "title", Json.string (input ++ " @ MyCoolTool") ) ] |&amp;gt; emit`</text>
  </message>
  <message>
    <ts>2017-07-18T03:42:42.789581</ts>
    <user>U3SJEDR96</user>
    <text>I think you could put that into a separate module together with `emit`, and simply not expose `emit`</text>
  </message>
  <message>
    <ts>2017-07-18T03:43:16.800014</ts>
    <user>U3SJEDR96</user>
    <text>(if only to prevent yourself from calling `emit` directly somewhere down the line)</text>
  </message>
  <message>
    <ts>2017-07-18T03:43:38.806662</ts>
    <user>U5R6L5MT4</user>
    <text>What can I do to solve a RangeError: Maximum call stack size exceeded</text>
  </message>
  <message>
    <ts>2017-07-18T03:43:45.808891</ts>
    <user>U5R6L5MT4</user>
    <text>It happens at execution time</text>
  </message>
  <message>
    <ts>2017-07-18T03:44:02.814015</ts>
    <user>U604S603Y</user>
    <text>I will do that. Thanks a lot &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T03:44:33.823361</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5R6L5MT4&gt;: sudoku? I can have a look at it</text>
  </message>
  <message>
    <ts>2017-07-18T03:45:14.836196</ts>
    <user>U5R6L5MT4</user>
    <text>Yes</text>
  </message>
  <message>
    <ts>2017-07-18T03:45:21.838180</ts>
    <user>U5R6L5MT4</user>
    <text>In this repository: &lt;https://github.com/Natim/elm-sudoku/compare/broken-one?expand=1&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T03:45:31.841410</ts>
    <user>U5R6L5MT4</user>
    <text>The main works (with the same Sudoku as your example)</text>
  </message>
  <message>
    <ts>2017-07-18T03:45:47.846444</ts>
    <user>U5R6L5MT4</user>
    <text>But then with the one I configured in broken-one it fails with the RangeError</text>
  </message>
  <message>
    <ts>2017-07-18T03:46:07.852668</ts>
    <user>U5R6L5MT4</user>
    <text>s/main/master</text>
  </message>
  <message>
    <ts>2017-07-18T03:46:26.858580</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, it's probably a recursion issue - recursing too deep can result in that, especially if each stack-frame adds quite a bit of data</text>
  </message>
  <message>
    <ts>2017-07-18T03:47:32.879314</ts>
    <user>U5R6L5MT4</user>
    <text>Yes it is probably that then</text>
  </message>
  <message>
    <ts>2017-07-18T03:47:52.885656</ts>
    <user>U5R6L5MT4</user>
    <text>But recursion is what we want for functional languages :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T03:48:25.895888</ts>
    <user>U3SJEDR96</user>
    <text>sure, but more importantly, you want tail call elimination, so it can compile to a `while` :wink:</text>
  </message>
  <message>
    <ts>2017-07-18T03:48:28.896681</ts>
    <user>U5R6L5MT4</user>
    <text>Should I change some of the recursion to use &lt;http://package.elm-lang.org/packages/Chadtech/elm-loop/latest&gt; instead?</text>
  </message>
  <message>
    <ts>2017-07-18T03:48:39.899980</ts>
    <user>U3SJEDR96</user>
    <text>no.</text>
  </message>
  <message>
    <ts>2017-07-18T03:49:15.911143</ts>
    <user>U5R6L5MT4</user>
    <text>How shall I do to compilte to a while?</text>
  </message>
  <message>
    <ts>2017-07-18T03:49:45.920597</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://evancz.gitbooks.io/functional-programming-in-elm/recursion/tail-call-elimination.html&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T03:50:22.932876</ts>
    <user>U4872964V</user>
    <text>a reason could be that you have a bug that makes your recursion be infinite too</text>
  </message>
  <message>
    <ts>2017-07-18T04:01:04.139201</ts>
    <user>U4872964V</user>
    <text>if you look at the stack trace for the exception there may be a clue there</text>
  </message>
  <message>
    <ts>2017-07-18T04:01:13.142680</ts>
    <user>U5R6L5MT4</user>
    <text>&lt;@U4872964V&gt; In that case I don't think so because other sudoku do solve themselves</text>
  </message>
  <message>
    <ts>2017-07-18T04:04:18.204294</ts>
    <user>U5R6L5MT4</user>
    <text>&lt;@U3SJEDR96&gt; so basically it is about using case list of first :: rest -&amp;gt; and then using foldr?</text>
  </message>
  <message>
    <ts>2017-07-18T04:06:56.257772</ts>
    <user>U14Q8S4EM</user>
    <text>Yeah dont use my package. It wont help you.</text>
  </message>
  <message>
    <ts>2017-07-18T04:11:57.359176</ts>
    <user>U4872964V</user>
    <text>&lt;@U5R6L5MT4&gt; maybe so but the stack trace might give a clue anyway. The big may be a special case for a certain board</text>
  </message>
  <message>
    <ts>2017-07-18T04:12:35.371868</ts>
    <user>U5R6L5MT4</user>
    <text>&lt;@U4872964V&gt; Do you mean the stacktrace of the exception?</text>
  </message>
  <message>
    <ts>2017-07-18T04:13:29.389321</ts>
    <user>U5R6L5MT4</user>
    <text>RangeError: Maximum call stack size exceeded
    at sudoku/elm.js:7:40
    at up (sudoku/elm.js:2997:16)
    at up (sudoku/elm.js:3057:18)
    at up (sudoku/elm.js:3032:18)
    at up (sudoku/elm.js:3032:18)
    at up (sudoku/elm.js:3032:18)
    at Function.func (sudoku/elm.js:3084:14)
    at A3 (sudoku/elm.js:98:11)
    at Function.func (sudoku/elm.js:3099:10)
    at A3 (sudoku/elm.js:98:11)
    at Function.func (sudoku/elm.js:3242:4)</text>
  </message>
  <message>
    <ts>2017-07-18T04:16:46.456231</ts>
    <user>U4872964V</user>
    <text>Well it doesn't look like a simple case of that anyway. Recursion is tricky that way though</text>
  </message>
  <message>
    <ts>2017-07-18T04:20:40.534897</ts>
    <user>U3SJEDR96</user>
    <text>brute_force -&amp;gt; resolveSudoku -&amp;gt; increment_sudoku -&amp;gt; brute_force -&amp;gt; ...</text>
  </message>
  <message>
    <ts>2017-07-18T04:40:29.952551</ts>
    <user>U5V5B3F9N</user>
    <text>Hi all :wave: a silly question perhaps, but I can't find the answer: does record update syntax `{ model | key = updated_value }` exist for *opaque* types `type MyType = MyType { key1 : String, key2 : Bool }`? I'd like to update the latter with something like `MyType { myType | key2 = True }` but I can't find a shorthand way to update my opaque type other than destructuring it in its entirety and then restructuring it.</text>
  </message>
  <message>
    <ts>2017-07-18T04:46:33.083186</ts>
    <user>U3SJEDR96</user>
    <text>You have to destructure and restructure, though you can do so in a few ways that make it _not that painful_: &lt;https://ellie-app.com/3MvVD38RbyDa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T04:55:34.278903</ts>
    <user>U5V5B3F9N</user>
    <text>Ah, the trick is in the additional `alias` declaration &lt;@U3SJEDR96&gt;? Many thanks!</text>
  </message>
  <message>
    <ts>2017-07-18T04:58:30.343925</ts>
    <user>U3SJEDR96</user>
    <text>oh, no, the alias isn't relevant</text>
  </message>
  <message>
    <ts>2017-07-18T04:58:39.347004</ts>
    <user>U3SJEDR96</user>
    <text>the trick is in destructuring :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-18T04:59:23.363112</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://ellie-app.com/3MvVD38RbyDa1/1&gt; &amp;lt;- getting rid of the type alias for that record doesn't change anything :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T04:59:54.374920</ts>
    <user>U3SJEDR96</user>
    <text>pattern matching on `(MyType variableForTheContent)` is the trick</text>
  </message>
  <message>
    <ts>2017-07-18T05:04:03.467626</ts>
    <user>U5V5B3F9N</user>
    <text>Aha, I would have sworn I tried that syntax, buy apparently not :slightly_smiling_face: I like the Ellie editor by the way; hadn't come across that before</text>
  </message>
  <message>
    <ts>2017-07-18T05:15:53.719344</ts>
    <user>U2M4VPZ9D</user>
    <text>Hi &lt;@U69EMCAKA&gt; !!!</text>
  </message>
  <message>
    <ts>2017-07-18T05:20:30.817614</ts>
    <user>U2D07QZN3</user>
    <text>If I have a list of widgets, should I call them "widgits" or "widgetList"?</text>
  </message>
  <message>
    <ts>2017-07-18T05:20:48.824201</ts>
    <user>U4872964V</user>
    <text>widgets</text>
  </message>
  <message>
    <ts>2017-07-18T05:21:19.835136</ts>
    <user>U4872964V</user>
    <text>(totally my own opinion of course)</text>
  </message>
  <message>
    <ts>2017-07-18T05:33:10.088698</ts>
    <user>U2D07QZN3</user>
    <text>Thanks.  Do you think that is the common way?</text>
  </message>
  <message>
    <ts>2017-07-18T05:35:17.133513</ts>
    <user>U57KYFW67</user>
    <text>I think either way is just as well</text>
  </message>
  <message>
    <ts>2017-07-18T05:35:50.144814</ts>
    <user>U57KYFW67</user>
    <text>widgets is shorter. go with that.</text>
  </message>
  <message>
    <ts>2017-07-18T05:39:18.215996</ts>
    <user>U4872964V</user>
    <text>if you don't like the names, it's super easy to change them later, I do that all the time</text>
  </message>
  <message>
    <ts>2017-07-18T06:41:38.451693</ts>
    <user>U30J8RTKJ</user>
    <text>Hi, I'm working on simple board game, what is the best elm package for complex drag and drop stuff? I've found few but I'm not sure which one to pick, any hints?</text>
  </message>
  <message>
    <ts>2017-07-18T07:30:48.318391</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5R6L5MT4&gt; looking at it a little closer; you'll want to get rid of `brute_force` and `resolveSudoku`, and integrate their logic into `increment_sudoku`. It's running now, but certainly takes a while :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T07:40:42.491056</ts>
    <user>U3SJEDR96</user>
    <text>(±136 seconds, apparently)</text>
  </message>
  <message>
    <ts>2017-07-18T07:48:51.636312</ts>
    <user>U3SJEDR96</user>
    <text>fwiw, my published solver does it in 9, and I have an alternate solver (I should commit and push that, really) does it in &amp;lt;1s</text>
  </message>
  <message>
    <ts>2017-07-18T07:51:44.687284</ts>
    <user>U5R6L5MT4</user>
    <text>Nice</text>
  </message>
  <message>
    <ts>2017-07-18T07:51:53.690020</ts>
    <user>U5R6L5MT4</user>
    <text>136 seconds it is quite a while</text>
  </message>
  <message>
    <ts>2017-07-18T07:54:20.734154</ts>
    <user>U3SJEDR96</user>
    <text>yeah, though that sudoku is a degenerate case that required a _lot_ of backtracking :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T07:56:00.763956</ts>
    <user>U5R6L5MT4</user>
    <text>I actually found it in a book</text>
  </message>
  <message>
    <ts>2017-07-18T07:57:14.786441</ts>
    <user>U5WD40ZA9</user>
    <text>Is it possible to run a command after the view function has run?</text>
  </message>
  <message>
    <ts>2017-07-18T08:10:16.039815</ts>
    <user>U6ASZU4EB</user>
    <text>if I have the following method declaration:
checkboxConditional : List (Form ValidationError a, Html Msg) -&amp;gt; String -&amp;gt; String -&amp;gt; Form ValidationError a -&amp;gt; Html Msg
checkboxConditional elements title name form 

How can I output "elements" inside of a div? I've tried "div [] elements" but the compiler says:
Function `div` is expecting the 2nd argument to be:
List (Html msg)
But it is:List ( Form ValidationError a, Html Msg )</text>
  </message>
  <message>
    <ts>2017-07-18T08:10:26.042953</ts>
    <user>U4GU5J9JR</user>
    <text>I've got this knot in my head. I am thinking that it should be possible to _resolve_ a list of maybes into a list containing only the values. If the initial list contains only Nothings then the output is the empty list. So I am thinking that it is possible to write a function of type `resolve : List (Maybe GreatStuffType) -&amp;gt; List GreatStuffType`, but is it? I haven't yet found a solution in the stdlib and I am not able to get the compiler to accept that I have actually resolved by excluding Nothings.</text>
  </message>
  <message>
    <ts>2017-07-18T08:11:19.060700</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U4GU5J9JR&gt; it's definitely possible :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T08:13:15.098331</ts>
    <user>U3SJEDR96</user>
    <text>so, there is a function `List.filterMap : (a -&amp;gt; Maybe b) -&amp;gt; List a -&amp;gt; List b` that applies a function, and only keeps the ones that result in a `Just`, discarding `Nothing`'s. Now, in your case, you already have a `List (Maybe a)`, so you need a function `Maybe a -&amp;gt; Maybe a`.. or even more general, a function `a -&amp;gt; a`, which happens to exist and be called `identity`.</text>
  </message>
  <message>
    <ts>2017-07-18T08:13:27.102397</ts>
    <user>U3SJEDR96</user>
    <text>so you can implement resolve like this: `resolve = List.filterMap identity`</text>
  </message>
  <message>
    <ts>2017-07-18T08:14:15.118683</ts>
    <user>U4GU5J9JR</user>
    <text>I am thinking: `div [] &amp;lt;| List.map second elements`</text>
  </message>
  <message>
    <ts>2017-07-18T08:17:26.183881</ts>
    <user>U4GU5J9JR</user>
    <text>greatstuff indeed, &lt;@U3SJEDR96&gt; thank you!</text>
  </message>
  <message>
    <ts>2017-07-18T08:23:50.318621</ts>
    <user>U3SJEDR96</user>
    <text>There are some other options, too; for example &lt;https://ellie-app.com/3MzcYwh9rRVa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T08:47:27.858354</ts>
    <user>U0JBSEGHY</user>
    <text>is anyone familiar with create-elm-app??</text>
  </message>
  <message>
    <ts>2017-07-18T08:47:53.869128</ts>
    <user>U0JBSEGHY</user>
    <text>Or just webpack in general?</text>
  </message>
  <message>
    <ts>2017-07-18T08:48:27.882817</ts>
    <user>U681TBBUP</user>
    <text>I believe create-elm-app is deprecated</text>
  </message>
  <message>
    <ts>2017-07-18T08:48:36.886536</ts>
    <user>U0JBSEGHY</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-18T08:48:40.888477</ts>
    <user>U3SJEDR96</user>
    <text>what? why would it be?</text>
  </message>
  <message>
    <ts>2017-07-18T08:48:43.889817</ts>
    <user>U0JBSEGHY</user>
    <text>whats the best way to create elm apps?</text>
  </message>
  <message>
    <ts>2017-07-18T08:49:17.903742</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U10P4FNMD&gt; is still actively developing, maintaining and supporting `create-elm-app`</text>
  </message>
  <message>
    <ts>2017-07-18T08:49:17.903787</ts>
    <user>U0JBSEGHY</user>
    <text>Man I hate webpack lol</text>
  </message>
  <message>
    <ts>2017-07-18T08:49:39.912687</ts>
    <user>U681TBBUP</user>
    <text>&lt;@U0JBSEGHY&gt; yeah I lied I thought I read that somewhere</text>
  </message>
  <message>
    <ts>2017-07-18T08:49:51.917284</ts>
    <user>U3SJEDR96</user>
    <text>Personally, I tend to just use `elm-reactor`, and occasionally go for `elm-live`</text>
  </message>
  <message>
    <ts>2017-07-18T08:50:24.931381</ts>
    <user>U0JBSEGHY</user>
    <text>it</text>
  </message>
  <message>
    <ts>2017-07-18T08:50:33.935215</ts>
    <user>U0JBSEGHY</user>
    <text>it just seems to be way more hassle than it is worth</text>
  </message>
  <message>
    <ts>2017-07-18T08:50:55.944882</ts>
    <user>U0JBSEGHY</user>
    <text>I really hope Evan creates some dope tooling so webpack isn't necessary</text>
  </message>
  <message>
    <ts>2017-07-18T08:51:25.957722</ts>
    <user>U3SJEDR96</user>
    <text>What do you currently need webpack for?</text>
  </message>
  <message>
    <ts>2017-07-18T08:51:31.960637</ts>
    <user>U3SJEDR96</user>
    <text>I wouldn't call it necessary by a long shot :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-18T08:51:53.970021</ts>
    <user>U0JBSEGHY</user>
    <text>I'm building something with Twilio.</text>
  </message>
  <message>
    <ts>2017-07-18T08:52:03.974076</ts>
    <user>U2LC0U8JY</user>
    <text>I am not sure if evan can keep up with the progress of webpack or whatever comes next :wink:</text>
  </message>
  <message>
    <ts>2017-07-18T08:52:11.977392</ts>
    <user>U0JBSEGHY</user>
    <text>So the hot module replacement is super handy. And it needs to work with ports.</text>
  </message>
  <message>
    <ts>2017-07-18T08:52:11.977532</ts>
    <user>U2LC0U8JY</user>
    <text>so its good to have these options</text>
  </message>
  <message>
    <ts>2017-07-18T08:52:24.983144</ts>
    <user>U0JBSEGHY</user>
    <text>Because twilio is useless and has a poorly designed client sdk</text>
  </message>
  <message>
    <ts>2017-07-18T08:52:57.997030</ts>
    <user>U0JBSEGHY</user>
    <text>I shouldn't be so harsh haha</text>
  </message>
  <message>
    <ts>2017-07-18T08:53:18.006026</ts>
    <user>U0JBSEGHY</user>
    <text>I'll rephrase that to the Twilio client is painful</text>
  </message>
  <message>
    <ts>2017-07-18T08:54:17.030853</ts>
    <user>U0JBSEGHY</user>
    <text>I'm basically confused by the generated index.js of `create-elm-app`</text>
  </message>
  <message>
    <ts>2017-07-18T08:54:52.045501</ts>
    <user>U0JBSEGHY</user>
    <text>This is the file 
```
require('./main.css');
var logoPath = require('./logo.svg');
var Elm = require('./Main.elm');

var root = document.getElementById('root');

Elm.Main.embed(root, logoPath);
```
Any variables of functions I define I can't get access to in the console on the browser</text>
  </message>
  <message>
    <ts>2017-07-18T08:55:44.068204</ts>
    <user>U0JBSEGHY</user>
    <text>I'm not quite sure how the magic works and am concerned about having to learn many hours of webpack for something so simple lol</text>
  </message>
  <message>
    <ts>2017-07-18T08:57:12.107108</ts>
    <user>U5R6L5MT4</user>
    <text>&lt;@U3SJEDR96&gt; do you have your patch at hand?</text>
  </message>
  <message>
    <ts>2017-07-18T08:57:22.111255</ts>
    <user>U5R6L5MT4</user>
    <text>The one merging everything in incrementSudoku</text>
  </message>
  <message>
    <ts>2017-07-18T09:01:31.225997</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://github.com/zwilias/elm-sudoku/commit/a8d490451f12d9329e34f10bd4dd9f5e62367139&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T09:01:45.232419</ts>
    <user>U5WD40ZA9</user>
    <text>Is there anyway to run a command after elm is done with running the view function?</text>
  </message>
  <message>
    <ts>2017-07-18T09:01:49.234305</ts>
    <user>U3SJEDR96</user>
    <text>you'll have to ignore the whitespace changes for that to make sense :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T09:02:02.240510</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5WD40ZA9&gt; what's your use-case?</text>
  </message>
  <message>
    <ts>2017-07-18T09:02:10.243911</ts>
    <user>U3SJEDR96</user>
    <text>this feels a little like an xy-problem :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T09:04:23.306600</ts>
    <user>U5WD40ZA9</user>
    <text>&lt;@U3SJEDR96&gt; I want to insert a chart with the help of javascript. This requires that the element already exists in the dom before I try to insert the graph.</text>
  </message>
  <message>
    <ts>2017-07-18T09:06:18.358364</ts>
    <user>U3SJEDR96</user>
    <text>ah, so you're using a port, right?</text>
  </message>
  <message>
    <ts>2017-07-18T09:06:34.365416</ts>
    <user>U3SJEDR96</user>
    <text>in your port, defer the actual code using `requestAnimationFrame` :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T09:06:48.371509</ts>
    <user>U5WD40ZA9</user>
    <text>&lt;@U3SJEDR96&gt; Currently I've been using ports to provide javascript with some data from elm. The problem is that the command I run executes the javascript function before the view is actually rendered.</text>
  </message>
  <message>
    <ts>2017-07-18T09:08:04.406943</ts>
    <user>U3SJEDR96</user>
    <text>yeah, so something like `app.ports.addChar.subscribe(function (chartData) { window.requestAnimationFrame(function () { *add your chart* }); });`</text>
  </message>
  <message>
    <ts>2017-07-18T09:12:30.529170</ts>
    <user>U10P4FNMD</user>
    <text>&lt;@U681TBBUP&gt; Create Elm App project is not deprecated, I'm maintaining it with &lt;@U1083HNSF&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T09:14:32.586733</ts>
    <user>U5WD40ZA9</user>
    <text>&lt;@U3SJEDR96&gt; Thank you very much!</text>
  </message>
  <message>
    <ts>2017-07-18T09:18:46.707973</ts>
    <user>U681TBBUP</user>
    <text>&lt;@U10P4FNMD&gt; my apologies I was incorrectly referring to this &lt;https://github.com/evancz/start-app&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T09:19:42.735385</ts>
    <user>U10P4FNMD</user>
    <text>&lt;@U0JBSEGHY&gt; could you please give me an example of what is not working? Please feel free to hit me with a PM if I could help you in any way :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T09:20:07.747441</ts>
    <user>U10P4FNMD</user>
    <text>No probs! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T09:38:53.342329</ts>
    <user>U31FGNWCT</user>
    <text>Hi everyone! Has anyone ever used gulp-elm? I'm having an issue with multiple elm files. Can't import one from another, specifically.
There is rather big gulpfile in my project, so I'll just show you my elm-task:
```
gulp.task('elm', function() {
   return gulp.src(appSrc.elm)
       .pipe(plumber())
       .pipe(elm({debug: true}))
       .pipe(gulp.dest('someProjectDest'));
});
```</text>
  </message>
  <message>
    <ts>2017-07-18T09:40:36.398298</ts>
    <user>U31FGNWCT</user>
    <text>My elm folder currently is pretty simple:
```
elm/
----Main.elm
----Ports.elm
```</text>
  </message>
  <message>
    <ts>2017-07-18T09:45:09.549349</ts>
    <user>U3SJEDR96</user>
    <text>Where is your elm-package.json located and what is its source-directories defined as?</text>
  </message>
  <message>
    <ts>2017-07-18T09:47:11.619417</ts>
    <user>U31FGNWCT</user>
    <text>As far as I know, gulp-elm handles everything on it's own (and successfully compiles Main.elm, when there are no imports).</text>
  </message>
  <message>
    <ts>2017-07-18T09:51:34.770474</ts>
    <user>U3SJEDR96</user>
    <text>so you don't have an `elm-package.json` anywhere?</text>
  </message>
  <message>
    <ts>2017-07-18T09:52:10.791777</ts>
    <user>U31FGNWCT</user>
    <text>it is in example folder of gulp-elm (in node_modules)</text>
  </message>
  <message>
    <ts>2017-07-18T09:52:22.798322</ts>
    <user>U31FGNWCT</user>
    <text>confusing</text>
  </message>
  <message>
    <ts>2017-07-18T09:52:30.803313</ts>
    <user>U3SJEDR96</user>
    <text>oh. so in your project root, do `elm-package install --yes`</text>
  </message>
  <message>
    <ts>2017-07-18T09:53:05.823394</ts>
    <user>U3SJEDR96</user>
    <text>then open that file, and set the `"source-directories": [ "elm" ]`</text>
  </message>
  <message>
    <ts>2017-07-18T09:53:15.828962</ts>
    <user>U3SJEDR96</user>
    <text>and then try your gulp thing again :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T09:54:35.875362</ts>
    <user>U4872964V</user>
    <text>&lt;@U30J8RTKJ&gt; did you get an answer about drag and drop?</text>
  </message>
  <message>
    <ts>2017-07-18T10:03:53.215100</ts>
    <user>U31FGNWCT</user>
    <text>I have a huge legacy angularjs code base, with dependency injections and stuff like that (there are multiple separate angular modules). Build process is based on gulp. 
Can you think of a situation when it can compile Main.elm if there is no elm-package.json? I think it's not the case if it can compile one file.</text>
  </message>
  <message>
    <ts>2017-07-18T10:05:45.283879</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, but with just one file, it doesn't need to know how to lookup the files you `import`</text>
  </message>
  <message>
    <ts>2017-07-18T10:06:07.297043</ts>
    <user>U3SJEDR96</user>
    <text>so it's possible that you can get away with not having an `elm-package.json` in that case, though it still sounds weird to me</text>
  </message>
  <message>
    <ts>2017-07-18T10:09:59.436459</ts>
    <user>U30J8RTKJ</user>
    <text>&lt;@U4872964V&gt; no, I didn't</text>
  </message>
  <message>
    <ts>2017-07-18T10:12:58.543185</ts>
    <user>U4872964V</user>
    <text>&lt;@U30J8RTKJ&gt; so, what are your requirements? The reason there are multiple options is because there are different requirements</text>
  </message>
  <message>
    <ts>2017-07-18T10:13:14.552110</ts>
    <user>U6ASZU4EB</user>
    <text>thank you!</text>
  </message>
  <message>
    <ts>2017-07-18T10:13:59.578685</ts>
    <user>U31FGNWCT</user>
    <text>Thank you. I'll try to add elm-package somewhere and point gulp elm to it.</text>
  </message>
  <message>
    <ts>2017-07-18T10:18:03.724002</ts>
    <user>U4872964V</user>
    <text>&lt;@U30J8RTKJ&gt; I made &lt;http://package.elm-lang.org/packages/norpan/elm-html5-drag-drop/latest&gt; for myself and because there was some tricky business there i decided to make a package so that others didn't have to do the tricky stuff. But html5 draggable may not be enough for what you need</text>
  </message>
  <message>
    <ts>2017-07-18T10:18:24.736620</ts>
    <user>U30J8RTKJ</user>
    <text>&lt;@U4872964V&gt; you have to be able to drag and drop some elements depending on the current turn, and element status (has it been moved already?), so for example when it's player1 turn you can 'pick' only his pawns, you can drop pawns only on some slots (depending also on turn, slot status which might change during the game etc)</text>
  </message>
  <message>
    <ts>2017-07-18T10:19:33.779149</ts>
    <user>U30J8RTKJ</user>
    <text>imo the main idea here is that dnd behaviour is very dpendend on current state/model</text>
  </message>
  <message>
    <ts>2017-07-18T10:19:46.787250</ts>
    <user>U4872964V</user>
    <text>Yes, that's completely possible with my package. You specify which elements should be draggable and droppable by adding attributes in your view function.</text>
  </message>
  <message>
    <ts>2017-07-18T11:01:36.383648</ts>
    <user>U69EMCAKA</user>
    <text>&lt;@U2M4VPZ9D&gt; o/</text>
  </message>
  <message>
    <ts>2017-07-18T11:52:11.317240</ts>
    <user>U6BCVBN9M</user>
    <text>hey everyone</text>
  </message>
  <message>
    <ts>2017-07-18T12:02:48.720622</ts>
    <user>U2M4VPZ9D</user>
    <text>Hello &lt;@U6BCVBN9M&gt; </text>
  </message>
  <message>
    <ts>2017-07-18T12:39:09.967849</ts>
    <user>U1G51S63S</user>
    <text>What is the best way from you experience to organize files with sub-components (model/view/update triplets) to avoid circular dependency and allow to return `Cmd` from each triplet?</text>
  </message>
  <message>
    <ts>2017-07-18T13:07:18.915807</ts>
    <user>U23SA861Y</user>
    <text>by not having sub-components :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-18T13:08:13.945761</ts>
    <user>U23SA861Y</user>
    <text>if you have an spa with a bunch of pages you can take a look at &lt;https://github.com/rtfeldman/elm-spa-example&gt; to give you a feel, but if it's just items on the page. Use functions not components</text>
  </message>
  <message>
    <ts>2017-07-18T13:08:38.959524</ts>
    <user>U1G51S63S</user>
    <text>so something like `update` with &amp;gt; 1k messages are fine then?</text>
  </message>
  <message>
    <ts>2017-07-18T13:09:33.989156</ts>
    <user>U23SA861Y</user>
    <text>I'm not sure how you could conceviably have a single page with 1k message and not so overwhelm the user that it be unnavigatable</text>
  </message>
  <message>
    <ts>2017-07-18T13:10:07.008310</ts>
    <user>U1G51S63S</user>
    <text>it's not a single page of course, it's an app with 50k loc</text>
  </message>
  <message>
    <ts>2017-07-18T13:10:30.021495</ts>
    <user>U1G51S63S</user>
    <text>in this example from rtfeldman there is the same triplets but within single file :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T13:12:58.101964</ts>
    <user>U1G51S63S</user>
    <text>&lt;https://github.com/rtfeldman/elm-spa-example/blob/master/src/Page/Login.elm&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T13:13:14.110495</ts>
    <user>U1G51S63S</user>
    <text>thats what I have, but just model/msg/views/update are split</text>
  </message>
  <message>
    <ts>2017-07-18T13:14:13.142197</ts>
    <user>U1G51S63S</user>
    <text>because views can be pretty large and I want to split them into different files. so msg/model/types should be shared.</text>
  </message>
  <message>
    <ts>2017-07-18T13:14:37.155313</ts>
    <user>U23SA861Y</user>
    <text>becareful as to what you call "very large"</text>
  </message>
  <message>
    <ts>2017-07-18T13:14:38.155780</ts>
    <user>U23SA861Y</user>
    <text>&lt;https://www.youtube.com/watch?v=2ihTgEYiKpI&amp;amp;feature=youtu.be&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T13:14:52.163449</ts>
    <user>U23SA861Y</user>
    <text>it's different for functional programming than for OO</text>
  </message>
  <message>
    <ts>2017-07-18T13:15:09.172401</ts>
    <user>U1G51S63S</user>
    <text>for now I am fixed it  by splitting types into Types.elm and Msgs.elm but just curious maybe there is a better way or well-known file structures, etc.</text>
  </message>
  <message>
    <ts>2017-07-18T13:16:34.218883</ts>
    <user>U1G51S63S</user>
    <text>I didn't call it "very large" :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-18T13:17:19.243389</ts>
    <user>U23SA861Y</user>
    <text>you called it large enough to split</text>
  </message>
  <message>
    <ts>2017-07-18T13:17:33.251014</ts>
    <user>U23SA861Y</user>
    <text>that can be thousands of lines in an FP language</text>
  </message>
  <message>
    <ts>2017-07-18T13:18:01.266569</ts>
    <user>U23SA861Y</user>
    <text>OO languages keep files to like a couple hundred lines because of state and interactions</text>
  </message>
  <message>
    <ts>2017-07-18T13:18:27.280706</ts>
    <user>U1G51S63S</user>
    <text>hmmm, 50k lines is not enough to split?</text>
  </message>
  <message>
    <ts>2017-07-18T13:18:38.286446</ts>
    <user>U23SA861Y</user>
    <text>then split on the page boundries</text>
  </message>
  <message>
    <ts>2017-07-18T13:18:55.295599</ts>
    <user>U23SA861Y</user>
    <text>modules are for resuability more than anything</text>
  </message>
  <message>
    <ts>2017-07-18T13:20:22.343235</ts>
    <user>U1G51S63S</user>
    <text>so it's split by page now. and you want to say it's a bad thing to have it's own model/msg/update for different pages?</text>
  </message>
  <message>
    <ts>2017-07-18T13:20:48.358025</ts>
    <user>U23SA861Y</user>
    <text>read what I said</text>
  </message>
  <message>
    <ts>2017-07-18T13:20:57.362942</ts>
    <user>U23SA861Y</user>
    <text>please, because thats not it</text>
  </message>
  <message>
    <ts>2017-07-18T13:22:31.414786</ts>
    <user>U1G51S63S</user>
    <text>I just can't get what you want to say then =/ yes, it's split not for reusability - just to keep things clear. not sure why I should not do it</text>
  </message>
  <message>
    <ts>2017-07-18T13:23:13.437916</ts>
    <user>U1G51S63S</user>
    <text>you are started from "not to have sub-components" and then pointed me to  rtfeldman example with same triplets :smile:</text>
  </message>
  <message>
    <ts>2017-07-18T13:23:25.444270</ts>
    <user>U158457NK</user>
    <text>anyone using graphql with Elm?</text>
  </message>
  <message>
    <ts>2017-07-18T13:23:39.452118</ts>
    <user>U1G51S63S</user>
    <text>I am mentioned that it's a triplets in first message just to say "it's not reusable"</text>
  </message>
  <message>
    <ts>2017-07-18T13:23:47.456275</ts>
    <user>U23SA861Y</user>
    <text>I pointed you there with the statement "if you have an spa with a bunch of pages you can take a look"</text>
  </message>
  <message>
    <ts>2017-07-18T13:24:06.466975</ts>
    <user>U23SA861Y</user>
    <text>a page isn't a component, its a whole page</text>
  </message>
  <message>
    <ts>2017-07-18T13:24:32.481121</ts>
    <user>U1G51S63S</user>
    <text>yeah, thats what I have. about 30 triplets for different pages :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T13:24:53.492430</ts>
    <user>U1G51S63S</user>
    <text>there is 4-10 modules within each triplet (page)</text>
  </message>
  <message>
    <ts>2017-07-18T13:24:56.493909</ts>
    <user>U23SA861Y</user>
    <text>it doesn't need to communicate with other pages, it is completely independant</text>
  </message>
  <message>
    <ts>2017-07-18T13:25:25.509999</ts>
    <user>U23SA861Y</user>
    <text>so independant to the point where you could conceivably compile them into seperate html files</text>
  </message>
  <message>
    <ts>2017-07-18T13:25:41.518818</ts>
    <user>U1G51S63S</user>
    <text>yep, they are need to communicate with parent only some times (I am using taco-style pattern &lt;https://github.com/ohanhi/elm-taco&gt; )</text>
  </message>
  <message>
    <ts>2017-07-18T13:25:44.519979</ts>
    <user>U23SA861Y</user>
    <text>the only reason you don't is to give a nicer user experience when switching between them</text>
  </message>
  <message>
    <ts>2017-07-18T13:26:18.539607</ts>
    <user>U1G51S63S</user>
    <text>so what you really talking about? :smile:</text>
  </message>
  <message>
    <ts>2017-07-18T13:27:34.582146</ts>
    <user>U1G51S63S</user>
    <text>I have it, because I don't want to have single with 50k lines of code. there is no sub-components if be clear - it's just a different kind of messages which I am mapping, nested record for each page, etc. so I think it's not related to my original question at all :disappointed:</text>
  </message>
  <message>
    <ts>2017-07-18T13:27:40.585902</ts>
    <user>U23SA861Y</user>
    <text>you asked for sub-components. When people say that, they are usually referring to drop downs, or date pickers or things of that nature</text>
  </message>
  <message>
    <ts>2017-07-18T13:28:57.628971</ts>
    <user>U1G51S63S</user>
    <text>I saw what I mean about 5 times already. yeah, 'sub-components' is not good term to use here</text>
  </message>
  <message>
    <ts>2017-07-18T13:29:58.663853</ts>
    <user>U1G51S63S</user>
    <text>I have only few (and it's dropdowns, datepicker :smile: ) but rest of the things are just some kind of "encapsulation" (really it isn't, just for me) on per-page basis</text>
  </message>
  <message>
    <ts>2017-07-18T13:31:00.699287</ts>
    <user>U23SA861Y</user>
    <text>when you use this spa style thing, it should be right at the very top level to the point where it pretty much maps 1 to 1 with your navbar and url</text>
  </message>
  <message>
    <ts>2017-07-18T13:31:35.719254</ts>
    <user>U1G51S63S</user>
    <text>thats a typical page file structure</text>
  </message>
  <message>
    <ts>2017-07-18T13:33:14.774781</ts>
    <user>U23SA861Y</user>
    <text>so ports there is worry some, you can have some strangeness if you have more than one ports module</text>
  </message>
  <message>
    <ts>2017-07-18T13:33:43.791334</ts>
    <user>U1G51S63S</user>
    <text>why? (I am naming them with page prefix)</text>
  </message>
  <message>
    <ts>2017-07-18T13:34:12.807433</ts>
    <user>U23SA861Y</user>
    <text>if you stick to a global naming scheme you'll be alright</text>
  </message>
  <message>
    <ts>2017-07-18T13:34:39.822735</ts>
    <user>U1G51S63S</user>
    <text>yep, I am just have really a lot of ports to work with google maps :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T13:34:52.829684</ts>
    <user>U23SA861Y</user>
    <text>umm, so there might be a better way to do that</text>
  </message>
  <message>
    <ts>2017-07-18T13:35:35.853077</ts>
    <user>U23SA861Y</user>
    <text>&lt;https://www.youtube.com/watch?v=ar3TakwE8o0&amp;amp;t=722s&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T13:35:38.854791</ts>
    <user>U1G51S63S</user>
    <text>so do you think just splitting Msgs/Types is enough? Types is really not only `type` but aliases. just everything which should be moved here to avoid circular dependencies</text>
  </message>
  <message>
    <ts>2017-07-18T13:36:20.878373</ts>
    <user>U23SA861Y</user>
    <text>is this the entire project?</text>
  </message>
  <message>
    <ts>2017-07-18T13:38:15.941871</ts>
    <user>U1G51S63S</user>
    <text>looks interesting, thank you :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T13:38:24.946748</ts>
    <user>U1G51S63S</user>
    <text>in some places only</text>
  </message>
  <message>
    <ts>2017-07-18T14:00:29.696554</ts>
    <user>U601ELFEG</user>
    <text>I now have a ~2k line elm app. It has a main Model/Msg/update/view module, and several sub Model/Msg/update/view modules --- and for the most part things fit together nicely</text>
  </message>
  <message>
    <ts>2017-07-18T14:01:25.730789</ts>
    <user>U601ELFEG</user>
    <text>However, I keep running into the situation where something like a dialog module after processing it's own messages, in the end wants to essentially fire a Msg on some other sibling Model module....</text>
  </message>
  <message>
    <ts>2017-07-18T14:02:15.760053</ts>
    <user>U601ELFEG</user>
    <text>If the operation is just a single button - then I put that at the "top" of the app, and it manipulates the right sub-model....</text>
  </message>
  <message>
    <ts>2017-07-18T14:03:05.788631</ts>
    <user>U601ELFEG</user>
    <text>but if it is more complex (a dialog with lots of controls and state) - then I don't want to put that at "top"... but nor does it really seem to belong to sub-model...</text>
  </message>
  <message>
    <ts>2017-07-18T14:03:18.796046</ts>
    <user>U601ELFEG</user>
    <text>Wondering how people approach this kind of structure</text>
  </message>
  <message>
    <ts>2017-07-18T14:04:00.820277</ts>
    <user>U601ELFEG</user>
    <text>Do I just need to make the dialog module's `update` function  `: Msg -&amp;gt; Model -&amp;gt; (Model, Cmd Msg, Maybe FinalThingToDo)`   ??</text>
  </message>
  <message>
    <ts>2017-07-18T14:04:34.838906</ts>
    <user>U601ELFEG</user>
    <text>er - `Result` was a bad choice, edited...</text>
  </message>
  <message>
    <ts>2017-07-18T14:04:39.841638</ts>
    <user>U3SJEDR96</user>
    <text>yeah. Or a `{ model : Model, effects : Cmd Msg, someOtherTing : Foo }`</text>
  </message>
  <message>
    <ts>2017-07-18T14:04:46.845824</ts>
    <user>U0J1M0F32</user>
    <text>I've found the sub module structure to not scale very well, leading to some cumbersome update functions. I try to not nest the Model/Update/View triplet more than once or maybe twice, if I can work around it.</text>
  </message>
  <message>
    <ts>2017-07-18T14:05:11.859337</ts>
    <user>U3SJEDR96</user>
    <text>that `update` is just a function that doesn't need to conform to any particular convention or signature</text>
  </message>
  <message>
    <ts>2017-07-18T14:06:19.897104</ts>
    <user>U601ELFEG</user>
    <text>I have a few  `Task.process SomeExportedMsgType &amp;lt;| Task.succeed resultOfTheDialog`  --- but that has a pretty bad code smell</text>
  </message>
  <message>
    <ts>2017-07-18T14:06:52.915270</ts>
    <user>U3SJEDR96</user>
    <text>But yeah, keeping things flat is generally nice. Passing in functions for giving reusable views a proper way to interact with your code is also a pretty neat "pattern"</text>
  </message>
  <message>
    <ts>2017-07-18T14:08:20.963574</ts>
    <user>U3SJEDR96</user>
    <text>and yeah, using tasks to force a round-trip through the runtime is a pretty smelly thing indeed; generally splitting of whatever functionality you need and just calling that function tends to work out much more nicely :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T18:05:48.119223</ts>
    <user>U64FYS317</user>
    <text>I'm looking for a syntax to get around this problem: 
```
update : Msg -&amp;gt; Model
update msg =
    case msg of
        FirstType -&amp;gt; msg
        -- throws: subUpdate is expecting `UnionType`, but it is `Msg`
        UnionType -&amp;gt; subUpdate msg

```</text>
  </message>
  <message>
    <ts>2017-07-18T18:08:37.180019</ts>
    <user>U64FYS317</user>
    <text>where UnionType would be something like `type UnionType = A String | B | C`</text>
  </message>
  <message>
    <ts>2017-07-18T18:08:55.186375</ts>
    <user>U2LAL86AY</user>
    <text>&lt;@U64FYS317&gt; is very strange to name your constructors UnionType  - because a union Type by definition contains one or more constructors. But anyway - that will not work because you pass in `msg` to `subUpdate` and msg is of type `Msg` not of type `UnionType`</text>
  </message>
  <message>
    <ts>2017-07-18T18:09:24.196378</ts>
    <user>U2LAL86AY</user>
    <text>ah i see.</text>
  </message>
  <message>
    <ts>2017-07-18T18:10:04.210639</ts>
    <user>U64FYS317</user>
    <text>&lt;@U2LAL86AY&gt; It's just been adapted to a short example. Is there a way to hint at the compiler type that it IS necessarily a UnionType, considering it's already in that branch of the case statement?</text>
  </message>
  <message>
    <ts>2017-07-18T18:10:43.224559</ts>
    <user>U2LAL86AY</user>
    <text>yes but you need to do something like this</text>
  </message>
  <message>
    <ts>2017-07-18T18:13:23.279635</ts>
    <user>U2LAL86AY</user>
    <text>```
type Msg = 
   Click
   | OnEnter
   | MsgFor_DatePicker   DatePickerMsg  -- or whatever you have
```
then your datepicker is that union type you want.
```
type DatePickerMsg = 
      Select  
      | Hover 
      | DoStuff 
```</text>
  </message>
  <message>
    <ts>2017-07-18T18:13:47.287554</ts>
    <user>U2LAL86AY</user>
    <text>and in your  main update case statement you hace</text>
  </message>
  <message>
    <ts>2017-07-18T18:14:37.304737</ts>
    <user>U2LAL86AY</user>
    <text>```
case msg of 
  Click -&amp;gt; -- do stuff. 
  OnEnter -&amp;gt;  --do stuff 
  MsgFor_DatePicker  datePickerMsg -&amp;gt; 
           subUpdate datePickerMsg 
```</text>
  </message>
  <message>
    <ts>2017-07-18T18:16:22.339828</ts>
    <user>U2LAL86AY</user>
    <text>so for your case - you can leave your `type UnionType = A String | B | C` alone -&amp;gt; he will be like the `DatePickerMsg `</text>
  </message>
  <message>
    <ts>2017-07-18T18:16:32.342695</ts>
    <user>U2LAL86AY</user>
    <text>but you need to build another tag for it</text>
  </message>
  <message>
    <ts>2017-07-18T18:16:35.343870</ts>
    <user>U64FYS317</user>
    <text>thank you.</text>
  </message>
  <message>
    <ts>2017-07-18T18:17:00.352046</ts>
    <user>U64FYS317</user>
    <text>exactly what i was looking for. I had my types like:
type Msg = A | B | UnionType</text>
  </message>
  <message>
    <ts>2017-07-18T18:17:14.356870</ts>
    <user>U64FYS317</user>
    <text>but I needed A | B | UnionType UnionType</text>
  </message>
  <message>
    <ts>2017-07-18T18:17:40.365368</ts>
    <user>U64FYS317</user>
    <text>I guess I'm not as comfortable with the idea of tagging as I hoped</text>
  </message>
  <message>
    <ts>2017-07-18T18:17:50.368793</ts>
    <user>U2LAL86AY</user>
    <text>it's not possible to do it without this.yes but just a trick that i use -&amp;gt; i always use `MsgFor_` and whatever follows -&amp;gt; this way i know this i need to delegate</text>
  </message>
  <message>
    <ts>2017-07-18T18:18:13.376442</ts>
    <user>U64FYS317</user>
    <text>oh, that's a nice little convention</text>
  </message>
  <message>
    <ts>2017-07-18T18:18:25.380439</ts>
    <user>U64FYS317</user>
    <text>tyvm</text>
  </message>
  <message>
    <ts>2017-07-18T18:18:36.384193</ts>
    <user>U2LAL86AY</user>
    <text>:bananadance:</text>
  </message>
  <message>
    <ts>2017-07-18T18:18:52.389427</ts>
    <user>U64FYS317</user>
    <text>I think one of the hardest parts has been scaling elm</text>
  </message>
  <message>
    <ts>2017-07-18T18:19:04.393089</ts>
    <user>U64FYS317</user>
    <text>a lot of the tutorials have great little toy examples</text>
  </message>
  <message>
    <ts>2017-07-18T18:19:23.399501</ts>
    <user>U64FYS317</user>
    <text>but I've spent a lot of time researching &amp;amp; trying different methods scaling out the codebase</text>
  </message>
  <message>
    <ts>2017-07-18T18:21:08.433760</ts>
    <user>U2LAL86AY</user>
    <text>the truth is - is hard to scale elm if you don't underestand very well a lot of stuff - the basic stuff first - what's possible what not - but more than that. A holistic underestanding i mean. Once you got that it makes much more sense and is easy actually. Watch this:</text>
  </message>
  <message>
    <ts>2017-07-18T18:22:01.451727</ts>
    <user>U2LAL86AY</user>
    <text>&lt;https://www.youtube.com/watch?v=DoA4Txr4GUs&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T18:23:28.479813</ts>
    <user>U2LAL86AY</user>
    <text>&lt;https://www.youtube.com/watch?v=2ihTgEYiKpI&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T18:28:52.583779</ts>
    <user>U2LAL86AY</user>
    <text>`but I've spent a lot of time researching &amp;amp; trying different methods scaling out the codebase` i think the best way to get confortable with this is to just write a lot of elm code / the more projects the better. Then you find form experience what works and what not. Or else you can't judge  which article makes sense and which doesn't  :simple_smile:</text>
  </message>
  <message>
    <ts>2017-07-18T19:11:04.322157</ts>
    <user>U64FYS317</user>
    <text>&lt;@U2LAL86AY&gt; Thanks for the tutoring. The learning curve has been a bit steep, but I am enjoying it &amp;amp; becoming more productive every day</text>
  </message>
  <message>
    <ts>2017-07-18T19:14:48.378496</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U64FYS317&gt; Out of curiosity, what about Elm have you found the most difficult to grok?</text>
  </message>
  <message>
    <ts>2017-07-18T19:15:05.382745</ts>
    <user>U57KYFW67</user>
    <text>Patterns for scaling and... anything else?</text>
  </message>
  <message>
    <ts>2017-07-18T19:17:54.424675</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U57KYFW67&gt; Mind if I chime in?</text>
  </message>
  <message>
    <ts>2017-07-18T19:17:59.425856</ts>
    <user>U57KYFW67</user>
    <text>sure</text>
  </message>
  <message>
    <ts>2017-07-18T19:21:12.475963</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U64FYS317&gt; and &lt;@U2LAL86AY&gt; bring up good points. I'm at that point right where my app is going past beginner implementation, and it's rough (but this slack helps immensely). 

The *other* main thing at this point that happens is, I frequently run into syntax questions that exist beyond the scope of online resources like the elm tutorial. I keep asking myself _"Can I write that?"_ once my situation becomes more complex than simple lists or flat data structures.</text>
  </message>
  <message>
    <ts>2017-07-18T19:24:03.518908</ts>
    <user>U2SR9DL7Q</user>
    <text>Because I'm not certain how I can express myself, my code feels  bit clunkier, although that just comes with being new. I'm hoping eventually to do some write ups on deep dives into the elm syntax. Like _"everything you can do with let's"_ or _"updating complex models"_</text>
  </message>
  <message>
    <ts>2017-07-18T19:29:14.597779</ts>
    <user>U57KYFW67</user>
    <text>"Can I write that?" in what sense? :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T19:31:53.638732</ts>
    <user>U2SR9DL7Q</user>
    <text>I've give a more concrete example. Yesterday, I had a question about my `Type Thing = Thing Int Int`. I'd made it earlier on... I'd read that I should say `Thing Int Int` vs `Int Int` so the constructor would held avoid ambiguity, but I realized afterwards I didn't know how to get the two `Ints` back out of the type</text>
  </message>
  <message>
    <ts>2017-07-18T19:32:34.649022</ts>
    <user>U23SA861Y</user>
    <text>but you knew how to get one int back?</text>
  </message>
  <message>
    <ts>2017-07-18T19:32:39.650106</ts>
    <user>U2SR9DL7Q</user>
    <text>Somehow here kindly explained that pattern matching would do the trick, which _immediately_ makes sense as you hear it</text>
  </message>
  <message>
    <ts>2017-07-18T19:33:19.660203</ts>
    <user>U57KYFW67</user>
    <text>heh, indeed!</text>
  </message>
  <message>
    <ts>2017-07-18T19:33:23.661459</ts>
    <user>U64FYS317</user>
    <text>yes :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T19:33:35.664330</ts>
    <user>U2SR9DL7Q</user>
    <text>But somehow during every explanation about Defining a data type like that, I'm not sure that I saw an example of someone pulling the values _back_</text>
  </message>
  <message>
    <ts>2017-07-18T19:33:52.668513</ts>
    <user>U57KYFW67</user>
    <text>the `case` statement might as well be called the "destructor" because it is the opposite of a constructor. Constructors build data and `case` rips it apart.</text>
  </message>
  <message>
    <ts>2017-07-18T19:34:05.671816</ts>
    <user>U2LAL86AY</user>
    <text>maybe this is a little too easy but take a look: &lt;https://github.com/izdi/elm-cheat-sheet&gt;
and also this is better if you don't know some of this: 

&lt;https://gist.github.com/druzn3k/d1ce5eda51a5398e0e93&gt;

I can't find my best cheat sheets. I rely need to do some order in my bookmarks :simple_smile:</text>
  </message>
  <message>
    <ts>2017-07-18T19:36:49.711284</ts>
    <user>U2SR9DL7Q</user>
    <text>An even more concrete problem right now is I need to update a value nested pretty deeply within my model... if I hadn't seen this conversation I would've asked about it. My model is (as per usual) a record, which itself has another record, which has a List of values. How would update a value in that list?</text>
  </message>
  <message>
    <ts>2017-07-18T19:37:48.725590</ts>
    <user>U23SA861Y</user>
    <text>so this one is more a flow problem, does it actually make sense to nest so deep</text>
  </message>
  <message>
    <ts>2017-07-18T19:38:00.728526</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U2LAL86AY&gt; bookmaking that gist.</text>
  </message>
  <message>
    <ts>2017-07-18T19:40:38.767290</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U23SA861Y&gt; honestly... I don't know. My model contains a record called `game` which has `players` which is a list of players. It seemed like sensible nesting at the time.</text>
  </message>
  <message>
    <ts>2017-07-18T19:42:23.793068</ts>
    <user>U2SR9DL7Q</user>
    <text>the game stuff alone is as much code and as complex as the rest of the SPA combined. So I didn't want to scatter everything it needed through the rest of the model, because it made it hard to keep track of what data was for what.</text>
  </message>
  <message>
    <ts>2017-07-18T19:43:06.803384</ts>
    <user>U57KYFW67</user>
    <text>Forgive my ignorance, but what does SPA stand for?</text>
  </message>
  <message>
    <ts>2017-07-18T19:43:25.807838</ts>
    <user>U23SA861Y</user>
    <text>single-page-application</text>
  </message>
  <message>
    <ts>2017-07-18T19:44:00.816144</ts>
    <user>U23SA861Y</user>
    <text>it refers to the fact that your browser only needs to do one round trip to get what it needs (minus the api calls it's doing)</text>
  </message>
  <message>
    <ts>2017-07-18T19:44:17.820130</ts>
    <user>U57KYFW67</user>
    <text>ahh</text>
  </message>
  <message>
    <ts>2017-07-18T19:44:21.821012</ts>
    <user>U57KYFW67</user>
    <text>as opposed to page refreshes</text>
  </message>
  <message>
    <ts>2017-07-18T19:44:23.821421</ts>
    <user>U57KYFW67</user>
    <text>right?</text>
  </message>
  <message>
    <ts>2017-07-18T19:44:27.822265</ts>
    <user>U23SA861Y</user>
    <text>correct</text>
  </message>
  <message>
    <ts>2017-07-18T19:44:33.823607</ts>
    <user>U57KYFW67</user>
    <text>gotcha. tyty.</text>
  </message>
  <message>
    <ts>2017-07-18T19:46:18.849309</ts>
    <user>U23SA861Y</user>
    <text>so there are a couple ways to handle this game stuff. If it really does make sense that a list of players part of the game it would make sense for you to have some functions for adding and removing players from a game</text>
  </message>
  <message>
    <ts>2017-07-18T19:46:41.854744</ts>
    <user>U2SR9DL7Q</user>
    <text>Yeah, I realized I'd never seen a model update of nested records. So I did wonder if that just means I shouldn't do it, but then I wondered what the alternative was.</text>
  </message>
  <message>
    <ts>2017-07-18T19:47:03.860041</ts>
    <user>U23SA861Y</user>
    <text>in which case updating the model is more like {model | game = addplayer AIPlayer game}</text>
  </message>
  <message>
    <ts>2017-07-18T19:47:07.860869</ts>
    <user>U23SA861Y</user>
    <text>or something like that</text>
  </message>
  <message>
    <ts>2017-07-18T19:47:30.866128</ts>
    <user>U23SA861Y</user>
    <text>it might also make sense to pull the players out, if they are somehow distinct from the game</text>
  </message>
  <message>
    <ts>2017-07-18T19:47:59.872936</ts>
    <user>U2SR9DL7Q</user>
    <text>and _addplayer_ is another update Msg?</text>
  </message>
  <message>
    <ts>2017-07-18T19:48:13.876271</ts>
    <user>U23SA861Y</user>
    <text>no, it's just a regular function in this case</text>
  </message>
  <message>
    <ts>2017-07-18T19:48:14.876463</ts>
    <user>U2SR9DL7Q</user>
    <text>wait, no, nevermind.</text>
  </message>
  <message>
    <ts>2017-07-18T19:48:47.884055</ts>
    <user>U2SR9DL7Q</user>
    <text>it's a function that returns a new game with the changed player value</text>
  </message>
  <message>
    <ts>2017-07-18T19:49:48.898081</ts>
    <user>U23SA861Y</user>
    <text>if it makes sense to bundle a bunch of stuff up into a record, it probably also makes sense that you'll have some common operations you want to take on that record</text>
  </message>
  <message>
    <ts>2017-07-18T19:49:55.899785</ts>
    <user>U23SA861Y</user>
    <text>such as adding and removing players</text>
  </message>
  <message>
    <ts>2017-07-18T19:49:58.900412</ts>
    <user>U23SA861Y</user>
    <text>or taking turns</text>
  </message>
  <message>
    <ts>2017-07-18T19:50:53.913846</ts>
    <user>U2SR9DL7Q</user>
    <text>Yup. I have one file that deals specifically with functions pertaining to the game.</text>
  </message>
  <message>
    <ts>2017-07-18T20:01:21.063487</ts>
    <user>U2SR9DL7Q</user>
    <text>A final question about `let .... in` . If I make a value x in a let block, can I use it in the construction of value y, in the same let?
```
let 
   x = val
   y = x
in 
z (x, y)
```
or must they all be independent of each other?</text>
  </message>
  <message>
    <ts>2017-07-18T20:02:04.074210</ts>
    <user>U23SA861Y</user>
    <text>yes, you can use it in following statement</text>
  </message>
  <message>
    <ts>2017-07-18T20:02:13.076610</ts>
    <user>U23SA861Y</user>
    <text>you just can't reassign it</text>
  </message>
  <message>
    <ts>2017-07-18T20:02:55.086761</ts>
    <user>U2SR9DL7Q</user>
    <text>but would it work if I reversed the order of definiion of x and y?</text>
  </message>
  <message>
    <ts>2017-07-18T20:03:21.092928</ts>
    <user>U14Q8S4EM</user>
    <text>Yeah</text>
  </message>
  <message>
    <ts>2017-07-18T20:04:09.104056</ts>
    <user>U14Q8S4EM</user>
    <text>None of them have any order, just like the functions you declare in the highest scope.</text>
  </message>
  <message>
    <ts>2017-07-18T20:05:25.122106</ts>
    <user>U23SA861Y</user>
    <text>&lt;https://ellie-app.com/3MMQc5fy8bca1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T20:05:38.125110</ts>
    <user>U2SR9DL7Q</user>
    <text>cool. I spend a lot of time testing stuff like this in the repl, but every day there's always a new "Can I do this?" moment.</text>
  </message>
  <message>
    <ts>2017-07-18T20:07:53.156249</ts>
    <user>U23SA861Y</user>
    <text>&lt;https://ellie-app.com/3MMQc5fy8bca1/1&gt; this also works</text>
  </message>
  <message>
    <ts>2017-07-18T20:08:50.168873</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U23SA861Y&gt; I just did the same thing to the first one you sent :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-18T20:09:48.182013</ts>
    <user>U23SA861Y</user>
    <text>a let is basically like, there is an entirely new file that now exists between let and in with is imported just for what follows</text>
  </message>
  <message>
    <ts>2017-07-18T20:10:17.188712</ts>
    <user>U23SA861Y</user>
    <text>well with regards to declaring things anyway</text>
  </message>
  <message>
    <ts>2017-07-18T20:13:22.231029</ts>
    <user>U2SR9DL7Q</user>
    <text>That makes a lot of sense.</text>
  </message>
  <message>
    <ts>2017-07-18T20:17:14.280690</ts>
    <user>U2SR9DL7Q</user>
    <text>well, tonight has been an education, as per usual. &lt;@U23SA861Y&gt; &lt;@U2LAL86AY&gt; &lt;@U57KYFW67&gt; &lt;@U3QF7RFK9&gt;  cheers. :pray:</text>
  </message>
  <message>
    <ts>2017-07-18T20:32:57.477419</ts>
    <user>U2LAL86AY</user>
    <text>i think FP is all about having `the right analogies`. If things look and feel very complicated is because you did not yet encounter the right analogy - an analogy that fits right with you. 

`The tricky part is realizing that this is a thing you should do very actively`. Notice the patterns !

I've seen this at people more experienced then me - they have a very systematic way to approach a problem / a language concept  - whatever it is. They educated they brain to see things in a certain way - a way that as a beginner it's very hard to discover by yourself without a lot of exercise. It's either a lot of exercise  - or a very good tutorial - but the second is not easy to find. Because people are at different levels - and what is good for me is not good for you.


But if you pay attention to the patterns - force yourself too see them  - in a short amount of time you start noticing them everywhere.  So then all of a sudden intuition becomes very valuable. You `start seeing the things you can do and the things you can't`. It's not random. It's the most NON random system that i've encountered. Its very very precise. This is why once you get it productivity sky rockets compared with OO. Very few concepts , very very powerful concepts.


For example: when looking to this: `foo: Int -&amp;gt; Int -&amp;gt; String` , a beginner can't see this `foo: Int -&amp;gt; | Stop and return another function of type : Int -&amp;gt; String` Partial application takes some time to getting used to. You can say it like this: i have a function foo: it accept an int - and gives me back another function of type : Int -&amp;gt; String - that means a function that accepts another int that gives me back  a value of type string - etc..

the wrong way to say it is: 
`I have a function, foo: it accepts 2 arguments  an int and another int and gives me back a string`. 

Forget about 2 arguments at a time.

That is exactly what it does,  and later you can say that - but in the beginning just force yourself to see partial application everywhere. Because it rely is everywhere.

Also a useful idea that appears everywhere is a BOX. You can think of everything as being a box - All the types are Boxes - all we do is - we put values into boxes &amp;gt; then put boxes into other boxes - and so on - we basically just packaging our data in nice boxes, and boxes of boxes :smile: 

It's like every functional programmer is working at FedEx :smile: 

Now that doesn't make sense right away - but this is how you make sense of destructuring, maping, casing, map2, map3.. is a useful analogy for me. Maybe makes sense for you.


Everyone coming form Javascript, knows how to map over a list. 

But your brain starts melting first time you hear about maping a Maybe, or a Decoder--&amp;gt; but then you sometimes see a mapping operation over a Player, a User, or a Chat, or whatever :smile: 


But if you think of everything as being boxes -&amp;gt; Maybe is a Box, Decoder is a box -&amp;gt; then the mapping just becomes -&amp;gt; opening the box, grabbing what's inside -&amp;gt; shave that into a function -&amp;gt; and whatever you get back -&amp;gt; you put back in the box -&amp;gt; then you close the box. And you are ready for the next step -&amp;gt; opening the box .. 
Result is a more complicated box than a Maybe - it has two places inside. 

`casing` is all about opening the box. 

the `in` part from `let in` is all about putting togheter back a nicely backaged box.

This is where you forget `SomeTag { filed: OfSomeRecord }` and you only return `{ filed: OfSomeRecord }` You forget the put that record back in the box. 

Anyway - i think for me i've gotten this sooner - FP would have been much easier. Much less mysterious.

And are a ton of other concepts. But focus on the few - and start building from there.</text>
  </message>
  <message>
    <ts>2017-07-18T20:39:41.558906</ts>
    <user>U2LAL86AY</user>
    <text>&lt;@U2SR9DL7Q&gt; check out this long message when you have time, can be useful. &lt;@U64FYS317&gt; i think you too can benefit from reading it.</text>
  </message>
  <message>
    <ts>2017-07-18T20:45:42.630353</ts>
    <user>U2SR9DL7Q</user>
    <text>These are very good words, and very helpful. I shall take them to heart.</text>
  </message>
  <message>
    <ts>2017-07-18T20:50:10.682454</ts>
    <user>U64FYS317</user>
    <text>Yup, makes me very happy</text>
  </message>
  <message>
    <ts>2017-07-18T20:50:10.682608</ts>
    <user>U57KYFW67</user>
    <text>I think it really is hard to write to a general audience. And especially how Elm is being marketed, you're likely to see people at both ends of the FP spectrum. A lot of Haskell users (like me) come in knowing all the basics. But there's just as many Javascript users who knows more about the web development side than I ever will, but don't know a lot of FP.</text>
  </message>
  <message>
    <ts>2017-07-18T20:51:35.700311</ts>
    <user>U57KYFW67</user>
    <text>I can also see Elm marketing itself towards newbies to web dev as well. It will end up being very easy to get something started (especially with things like Ellie around), and that will be yet another group to address.</text>
  </message>
  <message>
    <ts>2017-07-18T20:53:29.722054</ts>
    <user>U64FYS317</user>
    <text>I'm fairly new to the strictly typed FP world. I've some experience with a few lisps, but the easiest transition was knowing some rust.</text>
  </message>
  <message>
    <ts>2017-07-18T20:54:01.727895</ts>
    <user>U64FYS317</user>
    <text>It's very cool to see all of the intersections of patterns and ideas in different languages</text>
  </message>
  <message>
    <ts>2017-07-18T20:54:15.730637</ts>
    <user>U64FYS317</user>
    <text>really makes you appreciate the history of languages, evolving &amp;amp; taking from others as they do</text>
  </message>
  <message>
    <ts>2017-07-18T20:54:39.735204</ts>
    <user>U64FYS317</user>
    <text>I wonder how easy haskell would be to pick up after spending a few more weeks with elm...</text>
  </message>
  <message>
    <ts>2017-07-18T20:56:02.751822</ts>
    <user>U57KYFW67</user>
    <text>Yeah. Dynamically-typed functional languages are very different.</text>
  </message>
  <message>
    <ts>2017-07-18T20:56:21.755674</ts>
    <user>U57KYFW67</user>
    <text>Haskell is a rabbit hole. If you know the basics of Elm, the basics of Haskell aren't so bad.</text>
  </message>
  <message>
    <ts>2017-07-18T20:56:35.758230</ts>
    <user>U2SR9DL7Q</user>
    <text>I'm not that new to FP, but I never got really into it (Haskelling). But I sincerely don't think it's hard. No harder than OOP. It's not a way of thinking you're exposed to before you encounter it. I would say FP could be as hard as initially learning about programming constructs was _but no harder_.</text>
  </message>
  <message>
    <ts>2017-07-18T20:56:37.758597</ts>
    <user>U57KYFW67</user>
    <text>But there's a lot of features. It's the C++ of functional languages.</text>
  </message>
  <message>
    <ts>2017-07-18T20:57:49.772274</ts>
    <user>U2SR9DL7Q</user>
    <text>But programming is a clicky thing. You can feel mental models snap into place when the mind adapts to a new concept. Good languages and good teachers know how to get those clicky snaps.</text>
  </message>
  <message>
    <ts>2017-07-18T20:58:33.780871</ts>
    <user>U57KYFW67</user>
    <text>Haskell's community is also kind of idiosyncratic. They are very helpful on IRC. But their priorities are all over the place sometimes. You end up with a lot of experimental packages in the ecosystem where people wanted to implement some weird math-y idea, but then that gets throw into a production-level package, and now you suddenly have to know the Data.Semigroups library....</text>
  </message>
  <message>
    <ts>2017-07-18T20:59:33.792944</ts>
    <user>U57KYFW67</user>
    <text>(Semigroups isn't actually a bad one, although I feel it's the wrong abstraction for reasons. Lenses are the S-tier example of "Wait, why do I care what a costate comonad is?")</text>
  </message>
  <message>
    <ts>2017-07-18T21:02:58.836533</ts>
    <user>U2SR9DL7Q</user>
    <text>I have no clue what you're saying, but I'm sure you're right.</text>
  </message>
  <message>
    <ts>2017-07-18T21:05:18.864399</ts>
    <user>U57KYFW67</user>
    <text>It's definitely worth toying around in. And definitely watch any talks you can find on YouTube by the former curator of GHC, Seymon Peyton Jones. He is an excellent educator.</text>
  </message>
  <message>
    <ts>2017-07-18T21:05:42.869127</ts>
    <user>U57KYFW67</user>
    <text>and a lot of what he says relates to Elm (or anyone doing things contrary to the established norms)</text>
  </message>
  <message>
    <ts>2017-07-18T21:27:57.122026</ts>
    <user>U3QF7RFK9</user>
    <text>I know you meant to thank &lt;@U14Q8S4EM&gt; instead of me, but I'll steal the glory anyway. You're welcome.</text>
  </message>
  <message>
    <ts>2017-07-18T21:28:59.133633</ts>
    <user>U3QF7RFK9</user>
    <text>&lt;https://media2.giphy.com/media/AxVvk3UlCVPiPxtGLK/giphy.gif&gt;</text>
  </message>
  <message>
    <ts>2017-07-18T21:49:49.368677</ts>
    <user>U2SR9DL7Q</user>
    <text>I guess this is as good a time as any to get back into reading that stuff. Is there a newsletter relating to FP but not necessarily to a specific language?</text>
  </message>
  <message>
    <ts>2017-07-18T21:56:28.445465</ts>
    <user>U2SR9DL7Q</user>
    <text>That gif was magnificent.</text>
  </message>
  <message>
    <ts>2017-07-19T02:48:48.204107</ts>
    <user>U57KYFW67</user>
    <text>I don't know of any.</text>
  </message>
  <message>
    <ts>2017-07-19T05:54:58.892597</ts>
    <user>U4K9J3NUC</user>
    <text>Helloouuu. I finally managed to get some time for reading the elm-lang guide. In a couple of the first code examples, some kind of shorthand for setting record values is used: &lt;https://github.com/evancz/elm-architecture-tutorial/blob/master/examples/03-form.elm#L27&gt; and &lt;https://github.com/evancz/elm-architecture-tutorial/blob/master/examples/04-random.elm#L27&gt; . What is this and where can I read more about it?</text>
  </message>
  <message>
    <ts>2017-07-19T06:06:35.134856</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U4K9J3NUC&gt; &lt;http://elm-lang.org/docs/records#updating-records&gt;</text>
  </message>
  <message>
    <ts>2017-07-19T06:07:14.147556</ts>
    <user>U153UK3FA</user>
    <text>Oh, that's actually just a function</text>
  </message>
  <message>
    <ts>2017-07-19T06:08:06.164799</ts>
    <user>U153UK3FA</user>
    <text>Declaring a type alias for a record type also defines a function to construct values of that type with the same name as the type alias</text>
  </message>
  <message>
    <ts>2017-07-19T06:09:11.185973</ts>
    <user>U4K9J3NUC</user>
    <text>And is the order of arguments same as in which those were declared? And is this documented somewhere?</text>
  </message>
  <message>
    <ts>2017-07-19T06:15:42.312959</ts>
    <user>U3SJEDR96</user>
    <text>It's the same order, indeed. I don't know if that is actually clearly stated somewhere, to be honest</text>
  </message>
  <message>
    <ts>2017-07-19T06:17:45.350999</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://guide.elm-lang.org/types/type_aliases.html&gt; there's an example there, but it doesn't specify that this is positional</text>
  </message>
  <message>
    <ts>2017-07-19T06:17:54.353579</ts>
    <user>U3SJEDR96</user>
    <text>oh, wait, it does</text>
  </message>
  <message>
    <ts>2017-07-19T06:18:01.355736</ts>
    <user>U3SJEDR96</user>
    <text>"The arguments are in the order they appear in the type alias declaration"</text>
  </message>
  <message>
    <ts>2017-07-19T06:21:19.417168</ts>
    <user>U4K9J3NUC</user>
    <text>OK, cool, it was there in the docs just waiting for me to reach that page :slightly_smiling_face: Thanx everyone</text>
  </message>
  <message>
    <ts>2017-07-19T06:22:06.431147</ts>
    <user>U3SJEDR96</user>
    <text>happy reading! :wink:</text>
  </message>
  <message>
    <ts>2017-07-19T07:32:38.662908</ts>
    <user>U3SJEDR96</user>
    <text>interestingly, that syntax has been around since 0.9 (&lt;http://elm-lang.org/blog/announce/0.9#record-constructors&gt;)</text>
  </message>
  <message>
    <ts>2017-07-19T08:35:43.891114</ts>
    <user>U31FGNWCT</user>
    <text>Hi everyone. What's wrong with the following webpack.config.js? Webpack says it can't find appropriate loader for Main.elm. I'm using webpack with gulp, btw. I did install elm-webpack-loader:
```
gulp.task('elm', function() {
   return gulp.src(paths.project.elmWebpack)
       .pipe(plumber())
       .pipe(webpack({
           entry: '../js/elm/entry.js',
           output: {
               filename: 'bundle.js'
           },
           module: {
               rules: [{
                   test: /\.elm$/,
                   exclude: [/elm-stuff/, /node_modules/],
                   loader: {
                       loader: 'elm-webpack-loader',
                       options: {debug: true, warn: true}
                   }
               }]
           }
       }))
       .pipe(gulp.dest(paths.toolkit.jsBase));
});
```
~So far embedding elm-make in the existing build process is painful, unproductive and very expensive. Just wanted to share my overall frustration with open source.~</text>
  </message>
  <message>
    <ts>2017-07-19T08:39:54.985182</ts>
    <user>U31FGNWCT</user>
    <text>Forgot to mention: paths.project.elmWebpack == ../js/elm/entry.js</text>
  </message>
  <message>
    <ts>2017-07-19T09:30:35.383798</ts>
    <user>U0JBSEGHY</user>
    <text>How do I decode a single string in Elm. All the examples use a full model as the structure for decoding. Completely stumped. :confused:</text>
  </message>
  <message>
    <ts>2017-07-19T09:36:48.581437</ts>
    <user>U0CLDU8UB</user>
    <text>What does your HTTP response look like?</text>
  </message>
  <message>
    <ts>2017-07-19T09:39:21.662387</ts>
    <user>U0JBSEGHY</user>
    <text>{"token":"XX_SECRET_TOKEN_XX"}</text>
  </message>
  <message>
    <ts>2017-07-19T09:39:46.675819</ts>
    <user>U180KMGRE</user>
    <text>You just want the token then?</text>
  </message>
  <message>
    <ts>2017-07-19T09:40:14.690377</ts>
    <user>U0JBSEGHY</user>
    <text>Yea I am literally just exposing some Json with the token. I'm still super new so trying to build up slowly</text>
  </message>
  <message>
    <ts>2017-07-19T09:41:00.716560</ts>
    <user>U0JBSEGHY</user>
    <text>I'm running a Phoenix server and trying to connect to an API point to get the token. Then will try and figure out the rest as I go along :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-19T09:41:38.737234</ts>
    <user>U0JBSEGHY</user>
    <text>I feel like I have gotten really close. I'll show the error that was tripping me up.</text>
  </message>
  <message>
    <ts>2017-07-19T09:42:26.762822</ts>
    <user>U3SJEDR96</user>
    <text>`field "token" string` is all you need</text>
  </message>
  <message>
    <ts>2017-07-19T09:42:48.775036</ts>
    <user>U3SJEDR96</user>
    <text>which decodes that JSON into simply the string `XX_SECRET_TOKEN_XX`</text>
  </message>
  <message>
    <ts>2017-07-19T09:43:30.798085</ts>
    <user>U0JBSEGHY</user>
    <text>```fetchToken =
    Http.send ReceiveToken (Http.get apiEndpoint tokenDecoder)


tokenDecoder =
    Decode.decodeString (Decode.field "token" Decode.string)```</text>
  </message>
  <message>
    <ts>2017-07-19T09:44:28.829476</ts>
    <user>U0JBSEGHY</user>
    <text>Says function `get` is expecting `Decode.Decode a` but is getting `String -&amp;gt; Result String String`</text>
  </message>
  <message>
    <ts>2017-07-19T09:44:47.839175</ts>
    <user>U180KMGRE</user>
    <text>You don't want the decodeString there</text>
  </message>
  <message>
    <ts>2017-07-19T09:46:16.889148</ts>
    <user>U180KMGRE</user>
    <text>decodeString is partially applied so it then wants a string to decode, but Http.get will run the decoder when it gets the response and so on, so it only needs the decoder to run</text>
  </message>
  <message>
    <ts>2017-07-19T09:47:22.925593</ts>
    <user>U0JBSEGHY</user>
    <text>sorry I am not sure I follow</text>
  </message>
  <message>
    <ts>2017-07-19T09:47:58.946020</ts>
    <user>U180KMGRE</user>
    <text>decodeString is trying to apply the decoder to a string - you don't need that to happen - you just want the decoder `Decode.field "token" Decode.string`</text>
  </message>
  <message>
    <ts>2017-07-19T09:48:00.946838</ts>
    <user>U0JBSEGHY</user>
    <text>Was following here and various other examples. Which had variants of the solution. &lt;http://package.elm-lang.org/packages/elm-lang/http/latest&gt;</text>
  </message>
  <message>
    <ts>2017-07-19T09:49:12.987627</ts>
    <user>U0JBSEGHY</user>
    <text>```The 2nd argument to function `send` is causing a mismatch.

86|     Http.send ReceiveToken (Http.get apiEndpoint tokenDecoder)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Function `send` is expecting the 2nd argument to be:

    Http.Request Model

But it is:

    Http.Request String```</text>
  </message>
  <message>
    <ts>2017-07-19T09:50:38.035845</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U0JBSEGHY&gt; ReceiveToken takes a Model not a String</text>
  </message>
  <message>
    <ts>2017-07-19T09:51:19.059429</ts>
    <user>U0JBSEGHY</user>
    <text>Yea this is where I keep tripping up in all the various ways I have tried</text>
  </message>
  <message>
    <ts>2017-07-19T09:51:29.065652</ts>
    <user>U153UK3FA</user>
    <text>You need to change ReceiveToken so it takes a String</text>
  </message>
  <message>
    <ts>2017-07-19T09:51:31.066192</ts>
    <user>U0JBSEGHY</user>
    <text>My model contains other stuff... which isn't in the Json response</text>
  </message>
  <message>
    <ts>2017-07-19T09:51:48.076230</ts>
    <user>U180KMGRE</user>
    <text>Can ReceiveToken take a string and then in your update you can update it in your model?</text>
  </message>
  <message>
    <ts>2017-07-19T09:51:54.079843</ts>
    <user>U0JBSEGHY</user>
    <text>OH!!</text>
  </message>
  <message>
    <ts>2017-07-19T09:52:13.090581</ts>
    <user>U0JBSEGHY</user>
    <text>Damn Types.... haha</text>
  </message>
  <message>
    <ts>2017-07-19T09:52:23.096165</ts>
    <user>U0JBSEGHY</user>
    <text>still getting used to it :sweat_smile:</text>
  </message>
  <message>
    <ts>2017-07-19T09:53:13.125527</ts>
    <user>U153UK3FA</user>
    <text>Look at the type of Http.send</text>
  </message>
  <message>
    <ts>2017-07-19T09:53:45.144894</ts>
    <user>U0JBSEGHY</user>
    <text>I had this `| ReceiveToken (Result Http.Error String)`  saying Model. Which I have now changed.</text>
  </message>
  <message>
    <ts>2017-07-19T09:58:06.301035</ts>
    <user>U0JBSEGHY</user>
    <text>Ok I'm getting an error / not getting anything back when I make the request :disappointed:</text>
  </message>
  <message>
    <ts>2017-07-19T10:02:29.461953</ts>
    <user>U3SJEDR96</user>
    <text>Try logging the `Err` case to the console using `Debug.log`, or inspecting the messages in the debugger</text>
  </message>
  <message>
    <ts>2017-07-19T10:06:47.617330</ts>
    <user>U0JBSEGHY</user>
    <text>Where would that fit into code like this? ```type Msg
    = Answer
    | HangUp
    | FetchToken
    | ReceiveToken (Result Http.Error String)
    | Err
    | NoOp


update : Msg -&amp;gt; Model -&amp;gt; ( Model, Cmd Msg )
update msg model =
    case msg of
        Answer -&amp;gt;
            ( { model | log = Connected }, Cmd.none )

        HangUp -&amp;gt;
            ( { model | log = Disconnected }, Cmd.none )

        FetchToken -&amp;gt;
            ( model
            , fetchToken
            )

        ReceiveToken (Ok newToken) -&amp;gt;
            ( { model | token = newToken }
            , Cmd.none
            )

        ReceiveToken (Err _) -&amp;gt;
            ( model
            , Cmd.none
            )

        Err errorMessage -&amp;gt;
            let
                _ =
                    Debug.log "Error in HTTP response: " errorMessage
            in
                NoOp

        NoOp -&amp;gt;
            ( model, Cmd.none )


fetchToken =
    Http.send ReceiveToken (Http.get apiEndpoint tokenDecoder)


tokenDecoder =
    Decode.field "token" Decode.string```</text>
  </message>
  <message>
    <ts>2017-07-19T10:11:23.782653</ts>
    <user>U0JBSEGHY</user>
    <text>yea I ended up with something similar.         ```ReceiveToken (Err errorMessage) -&amp;gt;
            let
                _ =
                    Debug.log "Error " errorMessage
            in
                ( model
                , Cmd.none
                )```
Says that `Err` has too many arguments.</text>
  </message>
  <message>
    <ts>2017-07-19T10:11:54.800951</ts>
    <user>U0JBSEGHY</user>
    <text>Ok think I got it compiling now</text>
  </message>
  <message>
    <ts>2017-07-19T10:12:01.804868</ts>
    <user>U3FJSB596</user>
    <text>Can you paste the log message?</text>
  </message>
  <message>
    <ts>2017-07-19T10:12:42.828857</ts>
    <user>U0JBSEGHY</user>
    <text>My beginner web programming experience is showing xD</text>
  </message>
  <message>
    <ts>2017-07-19T10:12:54.836455</ts>
    <user>U0JBSEGHY</user>
    <text>`XMLHttpRequest cannot load &lt;http://localhost:4000/api/twilio/token&gt;. No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin '&lt;http://localhost:3000&gt;' is therefore not allowed access.`</text>
  </message>
  <message>
    <ts>2017-07-19T10:13:05.842869</ts>
    <user>U3SJEDR96</user>
    <text>Ahh, good old CORS.</text>
  </message>
  <message>
    <ts>2017-07-19T10:13:46.867387</ts>
    <user>U0JBSEGHY</user>
    <text>On MDN now :laughing:</text>
  </message>
  <message>
    <ts>2017-07-19T10:18:08.026588</ts>
    <user>U3SJEDR96</user>
    <text>you'll have to configure your server to allow ajax requests from `localhost:3000`</text>
  </message>
  <message>
    <ts>2017-07-19T10:51:55.309347</ts>
    <user>U0JBSEGHY</user>
    <text>dope</text>
  </message>
  <message>
    <ts>2017-07-19T10:52:00.312409</ts>
    <user>U0JBSEGHY</user>
    <text>got it working now :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-19T10:52:36.335739</ts>
    <user>U0JBSEGHY</user>
    <text>Funny all these small things trip me up and the project I am working on seems like Everest compared to this stuff!</text>
  </message>
  <message>
    <ts>2017-07-19T13:16:23.558433</ts>
    <user>U68471J6P</user>
    <text>Is it possible to pass multiple values to transform in elm-css, just as you would in regular css? (i.e. "transform: translateY(4deg) rotateX(20%)" )</text>
  </message>
  <message>
    <ts>2017-07-19T13:25:53.872045</ts>
    <user>U3SJEDR96</user>
    <text>There is a `transforms` function for that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-19T13:25:55.872809</ts>
    <user>U3SJEDR96</user>
    <text>&lt;http://package.elm-lang.org/packages/rtfeldman/elm-css/9.1.0/Css#transforms&gt;</text>
  </message>
  <message>
    <ts>2017-07-19T13:28:28.959264</ts>
    <user>U68471J6P</user>
    <text>Read about it just a second before your message, but thanks for the help!</text>
  </message>
  <message>
    <ts>2017-07-19T14:31:49.121946</ts>
    <user>U2GPAEU1L</user>
    <text>Hey everyone, in case you're struggling with `type alias`, I just made a tutorial here that goes over everything you need to know - this is a tutorial targeting beginners.

&lt;http://codetidbit.com/#view/snipbit/596fa4497890d775c05191f9/introduction&gt;

Cheers :smile:

PS. I'll be making a tutorial on `type` shortly, so if that confuses you don't worry, I'll post the tutorial in this channel</text>
  </message>
  <message>
    <ts>2017-07-19T14:40:30.415687</ts>
    <user>U3SJEDR96</user>
    <text>amilner42: Not sure I'd call it common to type alias primitives :thinking_face:</text>
  </message>
  <message>
    <ts>2017-07-19T14:41:08.437608</ts>
    <user>U2GPAEU1L</user>
    <text>Perhaps not too common, I was just trying to explain to people _why_</text>
  </message>
  <message>
    <ts>2017-07-19T14:46:54.628570</ts>
    <user>U3SJEDR96</user>
    <text>Personally not a fan, it isn't more self-documenting than clear argument names, and requires me to keep in mind that `Name` is actually a `String` so I can use the correct functions to work on it. ¯\_(ツ)_/¯</text>
  </message>
  <message>
    <ts>2017-07-19T14:51:51.792763</ts>
    <user>U2GPAEU1L</user>
    <text>That's a fair opinion. There are spots in my code where I like it, and there are spots where I don't.

I wouldn't say it's the same as documentation. 
- For example you may have your types separate from your implementation. In that case you'd have to document right about the type annotation what the types are - at that point it seems to make more sense to just write it in one line, in the type itself.
- Documentation tends to go stale faster than code/type-annotations, people are more likely to remember to update it.
- My IDE only shows the types, so if I hover over something it'll only say "String -&amp;gt; String -&amp;gt; String -&amp;gt; Bool" if I don't use type aliases, it's nice to have it say "Name -&amp;gt; Bio -&amp;gt; etc etc…" directly in my IDE. Saves me time.

So I wouldn't say "you should never use type aliases for primitives", I'd say that it is situational</text>
  </message>
  <message>
    <ts>2017-07-19T14:52:41.820789</ts>
    <user>U3HQVHERX</user>
    <text>I agree with &lt;@U3SJEDR96&gt;. furthermore, aliasing the String is not needed since the name of the arguments make it clear what the "intention" of the strings are.

```
validNameAndBio : String -&amp;gt; String -&amp;gt; Bool
validNameAndBio name bio =
```</text>
  </message>
  <message>
    <ts>2017-07-19T14:53:09.836781</ts>
    <user>U3HQVHERX</user>
    <text>and if you have something like `String -&amp;gt; String -&amp;gt; String -&amp;gt; String` where the strings are related, maybe it's time to put them into a type aliased record anyway</text>
  </message>
  <message>
    <ts>2017-07-19T14:53:25.846247</ts>
    <user>U1J83SK9N</user>
    <text>is there an easy way to convert a .svg into some virtual svg dom?</text>
  </message>
  <message>
    <ts>2017-07-19T14:54:31.884197</ts>
    <user>U3HQVHERX</user>
    <text>great tutorial though!</text>
  </message>
  <message>
    <ts>2017-07-19T14:54:51.895067</ts>
    <user>U23SA861Y</user>
    <text>sry?</text>
  </message>
  <message>
    <ts>2017-07-19T14:55:12.906970</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://mbylstra.github.io/html-to-elm/&gt; might support that</text>
  </message>
  <message>
    <ts>2017-07-19T14:55:57.933200</ts>
    <user>U23SA861Y</user>
    <text>you can also embed the file with an object tag</text>
  </message>
  <message>
    <ts>2017-07-19T14:57:40.991598</ts>
    <user>U1J83SK9N</user>
    <text>well, I need the nodes for events and stuff.</text>
  </message>
  <message>
    <ts>2017-07-19T14:58:19.013832</ts>
    <user>U1J83SK9N</user>
    <text>ah, looks good! &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-19T15:09:06.367046</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U3HQVHERX&gt; &lt;@U2GPAEU1L&gt; let's take it out of the thread :slightly_smiling_face: I realize this is just a case of differing opinions, and you're free to use type aliases all you want; however in the context of a tutorial aimed at beginners, I'd be careful in expressing that opinion without labelling it as such. As for documentation and it going stale, so can a type alias, say `name : FirstName -&amp;gt; LastName -&amp;gt; String` and I refactor the implementation to be `name lastName firstName = ...`. Since they're type aliases, I'm just making your life more difficult, compared to if it had been `String -&amp;gt; String -&amp;gt; String` and you had to look at the argument names to figure out what they refer to.</text>
  </message>
  <message>
    <ts>2017-07-19T15:11:03.427141</ts>
    <user>U3SJEDR96</user>
    <text>My opinion: type aliases for primitives are unnecessary _at best_</text>
  </message>
  <message>
    <ts>2017-07-19T15:11:07.428940</ts>
    <user>U3HQVHERX</user>
    <text>There's also the matter of `String` being available everywhere whereas if you alias it you need to import it wherever it's being used, right?</text>
  </message>
  <message>
    <ts>2017-07-19T15:11:41.446861</ts>
    <user>U3SJEDR96</user>
    <text>No, there's no need to have that alias in scope to call a function which uses it :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-19T15:11:48.450131</ts>
    <user>U23SA861Y</user>
    <text>no, you can pass a regular string to something that takes and alias</text>
  </message>
  <message>
    <ts>2017-07-19T15:12:29.471584</ts>
    <user>U3HQVHERX</user>
    <text>I mean in the type annotation</text>
  </message>
  <message>
    <ts>2017-07-19T15:12:50.482274</ts>
    <user>U3SJEDR96</user>
    <text>That's kind of the point - it doesn't give extra safety, requires extra knowledge, and overall means more things to keep in mind, rather than less</text>
  </message>
  <message>
    <ts>2017-07-19T15:12:53.483814</ts>
    <user>U3SJEDR96</user>
    <text>ah, right.</text>
  </message>
  <message>
    <ts>2017-07-19T15:13:47.510489</ts>
    <user>U3HQVHERX</user>
    <text>`takeString : MeaningfulString -&amp;gt; String` if `MeaningfulString` is aliases in some other module you have to import it... seems like if one is going to the extra trouble of aliasing primitives these might be in a module of there own and used when applicable though?</text>
  </message>
  <message>
    <ts>2017-07-19T15:14:03.518512</ts>
    <user>U3SJEDR96</user>
    <text>to be clear, though, I *really* appreciate the time and effort you're putting into these tutorials, &lt;@U2GPAEU1L&gt;, and I think it's absolutely fantastic to have this type of material</text>
  </message>
  <message>
    <ts>2017-07-19T15:14:15.524233</ts>
    <user>U3SJEDR96</user>
    <text>I just want them to be the best they can be :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-19T15:14:25.529730</ts>
    <user>U3HQVHERX</user>
    <text>ditto</text>
  </message>
  <message>
    <ts>2017-07-19T15:15:43.568732</ts>
    <user>U0LPMPL2U</user>
    <text>you lose all the distinctiveness when you invoke the function: `takeString "aString" "aString"`</text>
  </message>
  <message>
    <ts>2017-07-19T15:17:24.619386</ts>
    <user>U0LPMPL2U</user>
    <text>I think showing that strings and other primitives can be aliased is important to explaining exactly _what_ a type alias is</text>
  </message>
  <message>
    <ts>2017-07-19T15:17:41.627986</ts>
    <user>U3HQVHERX</user>
    <text>i'm wondering why `type alias FavNum = Int` is allowed by the compiler? seems like there should be some kind of purpose judging from how nice and small Elm syntax is</text>
  </message>
  <message>
    <ts>2017-07-19T15:18:22.649458</ts>
    <user>U3HQVHERX</user>
    <text>yeah, it's easier to say `type alias Age = Int` than to start talking about records at the same time</text>
  </message>
  <message>
    <ts>2017-07-19T15:18:37.656875</ts>
    <user>U0LPMPL2U</user>
    <text>If the compiler didn't allow aliasing any type, you'd have to special case aliases to only work on certain types and I think that's more complicated and confusing</text>
  </message>
  <message>
    <ts>2017-07-19T15:19:17.676739</ts>
    <user>U3SJEDR96</user>
    <text>agreed. It's important to know it's possible, and to realize it's done in the core libraries, too (`type alias Time = Float` and `type alias Json.Decode.Value = Json.Encode.Value` come to mind)</text>
  </message>
  <message>
    <ts>2017-07-19T15:19:48.692656</ts>
    <user>U3SJEDR96</user>
    <text>oh, and `Task` for whatever reason</text>
  </message>
  <message>
    <ts>2017-07-19T15:19:57.697360</ts>
    <user>U3HQVHERX</user>
    <text>&amp;gt; `type alias Time = Float`
this actually confused me when i was starting out.</text>
  </message>
  <message>
    <ts>2017-07-19T15:20:03.700288</ts>
    <user>U3HQVHERX</user>
    <text>`Task`?</text>
  </message>
  <message>
    <ts>2017-07-19T15:21:12.736026</ts>
    <user>U3SJEDR96</user>
    <text>`Task.Task` is a type alias for `Platform.Task`, iirc</text>
  </message>
  <message>
    <ts>2017-07-19T15:21:53.757636</ts>
    <user>U23SA861Y</user>
    <text>at present it helps with docs a bit</text>
  </message>
  <message>
    <ts>2017-07-19T15:22:15.769369</ts>
    <user>U23SA861Y</user>
    <text>because you can document the alias, otherwise there is no reference in the docs to what type that is</text>
  </message>
  <message>
    <ts>2017-07-19T15:23:02.793932</ts>
    <user>U0LPMPL2U</user>
    <text>I think the real problem &lt;@U3SJEDR96&gt; was surfacing is the overuse of primitives. At first glance it _looks_ like type aliases fix that ("I'm using a `Time`, not a `Float` here") but they just give us shiny new names for the same old primitives.</text>
  </message>
  <message>
    <ts>2017-07-19T15:24:11.828808</ts>
    <user>U3SJEDR96</user>
    <text>The docs can't really have argument names, though; unless people want to give up the ability to do any pointfree programming at all :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-19T15:24:58.852269</ts>
    <user>U3SJEDR96</user>
    <text>Though really, docs should have examples, and examples should be verified by `elm-verify-examples`</text>
  </message>
  <message>
    <ts>2017-07-19T15:26:40.904798</ts>
    <user>U23SA861Y</user>
    <text>we just hit this question in general, someone was wondering where `Color` came from</text>
  </message>
  <message>
    <ts>2017-07-19T15:27:08.919021</ts>
    <user>U23SA861Y</user>
    <text>it wan't a type alias it just used the core Color and so there was no indication how to construct it</text>
  </message>
  <message>
    <ts>2017-07-19T15:27:37.934135</ts>
    <user>U23SA861Y</user>
    <text>even if you had an example it would be like `Color.color 255 0 0 |&amp;gt; otherfunc`</text>
  </message>
  <message>
    <ts>2017-07-19T15:27:48.939821</ts>
    <user>U3SJEDR96</user>
    <text>Isn't the main issue there that the docs don't do cross-package links?</text>
  </message>
  <message>
    <ts>2017-07-19T15:28:23.957988</ts>
    <user>U23SA861Y</user>
    <text>yes, this is probably the root of the issue</text>
  </message>
  <message>
    <ts>2017-07-19T15:46:06.495924</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U3HQVHERX&gt; Thanks :slightly_smiling_face: Always nice to hear that</text>
  </message>
  <message>
    <ts>2017-07-19T15:48:05.555926</ts>
    <user>U2GPAEU1L</user>
    <text>Thanks &lt;@U3SJEDR96&gt;, I had to go for lunch, that's why I disappeared. This cheered me up though, I appreciate it :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-19T15:50:40.634211</ts>
    <user>U2GPAEU1L</user>
    <text>I definitely still wanna include that you can do that, as mentioned further in the thread, it's done in core libraries, what if I just removed the one sentence saying "it's quite common" on this frame: &lt;http://codetidbit.com/#view/snipbit/596fa4497890d775c05191f9/frame/7&gt;</text>
  </message>
  <message>
    <ts>2017-07-19T15:50:45.636632</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U3SJEDR96&gt; ^</text>
  </message>
  <message>
    <ts>2017-07-19T15:52:56.702700</ts>
    <user>U3SJEDR96</user>
    <text>That would definitely help :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-19T15:56:43.821110</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U3SJEDR96&gt; Done. Perhaps later I'll add a frame or make another snipbit talking about over-type-aliasing…

As always, thanks for the feedback :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-19T15:57:22.842737</ts>
    <user>U2GPAEU1L</user>
    <text>Also, atm, I cache the last snipbit you opened, so you'll have to open another snipbit and then go back to this snipbit to get the updated snipbit.</text>
  </message>
  <message>
    <ts>2017-07-19T16:04:00.060608</ts>
    <user>U6AU4N1HR</user>
    <text>hello, i'm a complete beginner so this may be stupid but i can't figure out how to use JSON dict decoder to create my type aliased record fetched as JSON via REST API</text>
  </message>
  <message>
    <ts>2017-07-19T16:04:07.064200</ts>
    <user>U6AU4N1HR</user>
    <text>here's the code: &lt;http://lpaste.net/8489866380898729984&gt;</text>
  </message>
  <message>
    <ts>2017-07-19T16:04:23.072427</ts>
    <user>U6AU4N1HR</user>
    <text>i can't figure out how to write decodeUser</text>
  </message>
  <message>
    <ts>2017-07-19T16:05:38.111089</ts>
    <user>U23SA861Y</user>
    <text>this is a common issue, you aren't alone. Moving into a strongly typed world can be fairly abrupt</text>
  </message>
  <message>
    <ts>2017-07-19T16:06:04.125278</ts>
    <user>U23SA861Y</user>
    <text>what does the actual json look like</text>
  </message>
  <message>
    <ts>2017-07-19T16:06:06.126398</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U6AU4N1HR&gt; welcome to Elm :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-19T16:06:21.134325</ts>
    <user>U0LPMPL2U</user>
    <text>Your type alias is a _record_, not a dict</text>
  </message>
  <message>
    <ts>2017-07-19T16:06:26.136723</ts>
    <user>U6AU4N1HR</user>
    <text>exactly as the alias</text>
  </message>
  <message>
    <ts>2017-07-19T16:06:46.147223</ts>
    <user>U6AU4N1HR</user>
    <text>&lt;@U0LPMPL2U&gt; oh ok</text>
  </message>
  <message>
    <ts>2017-07-19T16:06:47.147750</ts>
    <user>U0LPMPL2U</user>
    <text>records have preset keys that are known at compile time</text>
  </message>
  <message>
    <ts>2017-07-19T16:07:04.156555</ts>
    <user>U0LPMPL2U</user>
    <text>when type aliasing records, Elm automatically creates a constructor function for you</text>
  </message>
  <message>
    <ts>2017-07-19T16:07:28.168519</ts>
    <user>U0LPMPL2U</user>
    <text>in your case: `User : Int -&amp;gt; String -&amp;gt; String -&amp;gt; User`</text>
  </message>
  <message>
    <ts>2017-07-19T16:07:28.168671</ts>
    <user>U23SA861Y</user>
    <text>`JD.map3 User (JD.field "id" &lt;http://JD.int|JD.int&gt;) (JD.field "name" JD.string) (JD.field "gender" JD.string)`</text>
  </message>
  <message>
    <ts>2017-07-19T16:07:46.178219</ts>
    <user>U23SA861Y</user>
    <text>with `import Json.Decode as JD`</text>
  </message>
  <message>
    <ts>2017-07-19T16:07:59.184675</ts>
    <user>U6AU4N1HR</user>
    <text>Ok</text>
  </message>
  <message>
    <ts>2017-07-19T16:08:24.197513</ts>
    <user>U6AU4N1HR</user>
    <text>I don't know why I tought record == dict</text>
  </message>
  <message>
    <ts>2017-07-19T16:08:30.200025</ts>
    <user>U6AU4N1HR</user>
    <text>Thank you guys</text>
  </message>
  <message>
    <ts>2017-07-19T16:08:35.202780</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U6AU4N1HR&gt;

Possibly helpful:
  - Understanding type aliases:  &lt;http://codetidbit.com/#view/snipbit/596fa4497890d775c05191f9/introduction&gt;
  - Understanding decoding/encoding (I break it down into 5 small tutorials): &lt;http://codetidbit.com/#view/story/58f7ac012bdce7111285c2ea&gt;</text>
  </message>
  <message>
    <ts>2017-07-19T16:08:57.213778</ts>
    <user>U23SA861Y</user>
    <text>#shamelessplug</text>
  </message>
  <message>
    <ts>2017-07-19T16:09:00.215215</ts>
    <user>U23SA861Y</user>
    <text>:stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-19T16:09:06.218008</ts>
    <user>U3HQVHERX</user>
    <text>haha</text>
  </message>
  <message>
    <ts>2017-07-19T16:09:14.222292</ts>
    <user>U2GPAEU1L</user>
    <text>well I make them _exactly_ for people asking :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-19T16:09:40.234493</ts>
    <user>U2GPAEU1L</user>
    <text>To try to avoid the number of times we answer the *same* question on Slack</text>
  </message>
  <message>
    <ts>2017-07-19T16:09:50.239570</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U6AU4N1HR&gt; also worth checking out: &lt;https://guide.elm-lang.org/interop/json.html&gt; what helped me was playing around int he repl decoding things</text>
  </message>
  <message>
    <ts>2017-07-19T16:10:06.247450</ts>
    <user>U6AU4N1HR</user>
    <text>&lt;@U2GPAEU1L&gt; i'll check it out</text>
  </message>
  <message>
    <ts>2017-07-19T16:10:07.248287</ts>
    <user>U3HQVHERX</user>
    <text>and docs, of course: &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Json-Decode#map3&gt;</text>
  </message>
  <message>
    <ts>2017-07-19T16:10:14.251405</ts>
    <user>U3HQVHERX</user>
    <text>resource overload. happy coding :wink:</text>
  </message>
  <message>
    <ts>2017-07-19T16:10:19.254351</ts>
    <user>U23SA861Y</user>
    <text>it makes me feel like I'm accomplishing something</text>
  </message>
  <message>
    <ts>2017-07-19T16:10:22.256065</ts>
    <user>U6AU4N1HR</user>
    <text>Thanks everyone for prompt help</text>
  </message>
  <message>
    <ts>2017-07-19T16:10:31.260333</ts>
    <user>U2GPAEU1L</user>
    <text>:smile: Happily, enjoy</text>
  </message>
  <message>
    <ts>2017-07-19T16:10:59.275356</ts>
    <user>U3HQVHERX</user>
    <text>yeah, i get endorphin hit every time i feel like i'm contributing to the discussion</text>
  </message>
  <message>
    <ts>2017-07-19T16:11:10.280799</ts>
    <user>U2GPAEU1L</user>
    <text>hahaha</text>
  </message>
  <message>
    <ts>2017-07-19T16:11:21.286492</ts>
    <user>U23SA861Y</user>
    <text>your stopping me from getting my fix man, geez</text>
  </message>
  <message>
    <ts>2017-07-19T16:11:27.289836</ts>
    <user>U3HQVHERX</user>
    <text>lol</text>
  </message>
  <message>
    <ts>2017-07-19T16:11:36.294118</ts>
    <user>U2GPAEU1L</user>
    <text>hahahaha, I'm sorry!</text>
  </message>
  <message>
    <ts>2017-07-19T16:12:24.319156</ts>
    <user>U5WS7CJLV</user>
    <text>It is well done.  Well written.</text>
  </message>
  <message>
    <ts>2017-07-19T16:14:31.382243</ts>
    <user>U0LPMPL2U</user>
    <text>The trick to decoding is to build up from the smallest pieces.
In &lt;@U23SA861Y&gt; 's solution, there are three layers of decoding:
1. Decode the primitive values such as strings and integers using the built-in decoders like `&lt;http://JD.int|JD.int&gt;`
2. Decode values at particular keys in the JSON using `JD.field` and one of the decoders from step 1
3. Combine the values decoded in step 2 into a single decoded User using `JD.map3`</text>
  </message>
  <message>
    <ts>2017-07-19T16:15:46.420908</ts>
    <user>U3HQVHERX</user>
    <text>4. Write a `List User` decoder by building on the `User` decoder. hint: `JD.list`</text>
  </message>
  <message>
    <ts>2017-07-19T16:16:27.441790</ts>
    <user>U3HQVHERX</user>
    <text>:slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-19T16:18:19.498094</ts>
    <user>U6AU4N1HR</user>
    <text>&lt;@U3HQVHERX&gt; yeah i'm gonna need that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-19T16:18:50.513909</ts>
    <user>U2GPAEU1L</user>
    <text>Thanks &lt;@U5WS7CJLV&gt;, appreciate the compliment :smile:</text>
  </message>
  <message>
    <ts>2017-07-19T16:19:02.519848</ts>
    <user>U5WS7CJLV</user>
    <text>This morning I was Result.map2-ing for the first time and I suddenly saw how consistent the Elm API was</text>
  </message>
  <message>
    <ts>2017-07-19T16:19:08.523179</ts>
    <user>U5WS7CJLV</user>
    <text>maybe the experience wasn't entirely rational</text>
  </message>
  <message>
    <ts>2017-07-19T16:19:17.527622</ts>
    <user>U5WS7CJLV</user>
    <text>but I'd been marching through decoding code</text>
  </message>
  <message>
    <ts>2017-07-19T16:19:28.532899</ts>
    <user>U5WS7CJLV</user>
    <text>following the pattern, but not really feeling it was intuitive</text>
  </message>
  <message>
    <ts>2017-07-19T16:19:39.538773</ts>
    <user>U5WS7CJLV</user>
    <text>but then I started mapping Results, and Decode felt like it made sense</text>
  </message>
  <message>
    <ts>2017-07-19T16:21:42.602334</ts>
    <user>U0LPMPL2U</user>
    <text>I had a similar breakthrough when learning to work with `Random`</text>
  </message>
  <message>
    <ts>2017-07-19T16:21:58.610449</ts>
    <user>U0LPMPL2U</user>
    <text>JSON decoding made complete sense afterwards</text>
  </message>
  <message>
    <ts>2017-07-19T16:24:34.688873</ts>
    <user>U5WS7CJLV</user>
    <text>can't decide if its a good or a bad thing that you get confronted with decoding so soon after you start Elming</text>
  </message>
  <message>
    <ts>2017-07-19T16:24:44.693826</ts>
    <user>U5WS7CJLV</user>
    <text>because you feel like "This JSON stuff is easy"</text>
  </message>
  <message>
    <ts>2017-07-19T16:24:49.696592</ts>
    <user>U5WS7CJLV</user>
    <text>and then decoding isn't trivial</text>
  </message>
  <message>
    <ts>2017-07-19T16:25:04.704424</ts>
    <user>U5WS7CJLV</user>
    <text>but I know there's a ton-o-value in mapping multiple Results or Maybes</text>
  </message>
  <message>
    <ts>2017-07-19T16:25:14.709320</ts>
    <user>U5WS7CJLV</user>
    <text>and I know that's not entirely intuitive when you start</text>
  </message>
  <message>
    <ts>2017-07-19T16:25:28.716842</ts>
    <user>U5WS7CJLV</user>
    <text>so I would be more patient about that</text>
  </message>
  <message>
    <ts>2017-07-19T16:25:37.721416</ts>
    <user>U5WS7CJLV</user>
    <text>I guess I just need to be more patient. Period.</text>
  </message>
  <message>
    <ts>2017-07-19T16:25:44.725225</ts>
    <user>U0LPMPL2U</user>
    <text>based on the experience, I wrote an article showing how to build up the same structures in the context of 4 different structures: `Maybe`, `List`, `Random.Generator`, and `Json.Decoder`: &lt;https://robots.thoughtbot.com/elms-universal-pattern&gt;</text>
  </message>
  <message>
    <ts>2017-07-19T16:28:54.824277</ts>
    <user>U0LPMPL2U</user>
    <text>Once you have that breakthrough, working on just about anything in Elm is so much easier. Combining Tasks, building Fuzzers, even working with custom types</text>
  </message>
  <message>
    <ts>2017-07-19T16:29:43.849445</ts>
    <user>U0LPMPL2U</user>
    <text>but you can't really teach the concept of `map` or `map2` in the abstract or in a top-down manner</text>
  </message>
  <message>
    <ts>2017-07-19T16:30:01.859564</ts>
    <user>U0LPMPL2U</user>
    <text>Most Haskell material tries that and it just ends up confusing people (myself especially)</text>
  </message>
  <message>
    <ts>2017-07-19T16:30:42.881124</ts>
    <user>U0LPMPL2U</user>
    <text>It's better learn to use `map2` with `Maybe`, learn to use `map2` with `Result`, and so on</text>
  </message>
  <message>
    <ts>2017-07-19T16:31:00.891199</ts>
    <user>U0LPMPL2U</user>
    <text>eventually you connect the dots and see the bigger pattern</text>
  </message>
  <message>
    <ts>2017-07-19T16:31:08.894996</ts>
    <user>U0LPMPL2U</user>
    <text>and the world makes so much sense!</text>
  </message>
  <message>
    <ts>2017-07-19T16:53:36.580080</ts>
    <user>U23SA861Y</user>
    <text>`map` is pretty intuitive for things like `List` and such, less so for the more abstract data containers. What really gets you looking at your monitor sideways is the signature of things like `andMap`</text>
  </message>
  <message>
    <ts>2017-07-19T16:57:48.706258</ts>
    <user>U3SQ42JJW</user>
    <text>Hi everyone. Im struggling with generating html from a DIct.
I have a dict and thought I could just map over it and the result is a List of html. But as Dict.map returns a Dict, it seems like iterating over Dicts in order to generate html is not possible… is this right? Do I have to convert data from my Dict to a List first in order to display it?</text>
  </message>
  <message>
    <ts>2017-07-19T16:58:15.719782</ts>
    <user>U23SA861Y</user>
    <text>so if you map over a dict you will get another dict</text>
  </message>
  <message>
    <ts>2017-07-19T16:58:46.735478</ts>
    <user>U23SA861Y</user>
    <text>you need to put it in some other html container, all of which accept lists</text>
  </message>
  <message>
    <ts>2017-07-19T16:59:07.745642</ts>
    <user>U23SA861Y</user>
    <text>so yes, using toList would be probably what you want</text>
  </message>
  <message>
    <ts>2017-07-19T17:00:04.774384</ts>
    <user>U3SQ42JJW</user>
    <text>Oh… it has a .toList function ? ups didnt see that… that makes it easy. Thanks Jonathan :smile:</text>
  </message>
  <message>
    <ts>2017-07-19T17:00:47.796807</ts>
    <user>U3SQ42JJW</user>
    <text>and thanks for making things clearer :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-19T17:02:27.846916</ts>
    <user>U23SA861Y</user>
    <text>my pleasure :smile:</text>
  </message>
  <message>
    <ts>2017-07-19T17:05:51.946401</ts>
    <user>U23SA861Y</user>
    <text>also, if it didn't have a toList function you could use fold to implement it</text>
  </message>
  <message>
    <ts>2017-07-19T17:06:57.977410</ts>
    <user>U23SA861Y</user>
    <text>`toList dict = Dict.foldr (\k v l -&amp;gt; (k,v)::l) [] dict`</text>
  </message>
  <message>
    <ts>2017-07-19T17:14:51.192335</ts>
    <user>U3SQ42JJW</user>
    <text>jonf: uh… I have to study this. I still lack of some functional concepts. Thanks so much…  I try to understand this foldr-thing :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-19T17:16:50.245363</ts>
    <user>U23SA861Y</user>
    <text>I think you should try, fold is the sort of the complement to map.</text>
  </message>
  <message>
    <ts>2017-07-19T17:21:54.379532</ts>
    <user>U5WS7CJLV</user>
    <text>&lt;@U0LPMPL2U&gt; I finally finished your universal pattern article - very nice!</text>
  </message>
  <message>
    <ts>2017-07-19T17:22:12.387675</ts>
    <user>U0LPMPL2U</user>
    <text>thanks!</text>
  </message>
  <message>
    <ts>2017-07-19T17:24:24.446985</ts>
    <user>U23SA861Y</user>
    <text>In fact with fold you can even implement map.
`map f in = Dict.foldr (\k v d -&amp;gt; Dict.insert k (f v) d) Dict.empty in`</text>
  </message>
  <message>
    <ts>2017-07-19T18:37:48.069440</ts>
    <user>U2LAL86AY</user>
    <text>&lt;@U3SQ42JJW&gt; if you want to prevent the traversing and convert directly - with a single iteration -&amp;gt; maybe this package helps. It's kind of hard for my brain - but i think with time i'll get used to. &lt;http://package.elm-lang.org/packages/avh4/elm-transducers/latest&gt;</text>
  </message>
  <message>
    <ts>2017-07-19T18:44:31.189506</ts>
    <user>U23SA861Y</user>
    <text>I thought the compiler had special optimization for pipe because of exactly this</text>
  </message>
  <message>
    <ts>2017-07-19T19:04:36.536806</ts>
    <user>U2LAL86AY</user>
    <text>you are saing that when doing `|&amp;gt;  |&amp;gt;  |&amp;gt;` the compiler will detect that and make it one single iteration? That would be cool :simple_smile:  seems like is not implemented yet - this wouldn't make sense otherwise : "
```
When using List.map, it is more efficient to compose multiple functions and then map the list with the composed function than to map the list with each function independently because the list will only be traversed once. 
```</text>
  </message>
  <message>
    <ts>2017-07-19T19:06:33.569264</ts>
    <user>U2LAL86AY</user>
    <text>&lt;@U0LPMPL2U&gt; that article is awesome :heart:</text>
  </message>
  <message>
    <ts>2017-07-19T19:11:49.654300</ts>
    <user>U2FJ2D6M7</user>
    <text>Hi! I'm playing around with `react-elm-components` and getting an Elm component embedded into a React app. I have followed the relevant blogs and correctly embedded the counter example by compiling by hand `elm-make Main.elm --output=index.js` and sourcing that in HTML. 

The next step would to make the developer experience better. We have hot reloading, etc, so I was thinking if `elm-reactor` could output JS or something so if the index.js gets updated, it will reload. But now that I'm asking, perhaps something non-elm related like inotify would be the proper tool. Any thoughts?

Update: my solution was to use `fswatch` and a script wrapper around `elm-make`.</text>
  </message>
  <message>
    <ts>2017-07-19T19:33:17.987245</ts>
    <user>U2FJ2D6M7</user>
    <text>not 100%, but close enough for now</text>
  </message>
  <message>
    <ts>2017-07-20T00:21:45.327039</ts>
    <user>U1ZFF0E5P</user>
    <text>I have a view that can fail of type `Result String (Html Msg)`, how do I send a `Cmd Msg` to handle logging it?</text>
  </message>
  <message>
    <ts>2017-07-20T00:22:13.331517</ts>
    <user>U1ZFF0E5P</user>
    <text>essentially how do I send a `Cmd Msg` from a view without using `onClick` or similar</text>
  </message>
  <message>
    <ts>2017-07-20T00:26:05.370581</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U1ZFF0E5P&gt; you can't</text>
  </message>
  <message>
    <ts>2017-07-20T00:26:50.377976</ts>
    <user>U153UK3FA</user>
    <text>the type of view is `(Model -&amp;gt; Html msg)`, it can't fail</text>
  </message>
  <message>
    <ts>2017-07-20T00:26:50.378114</ts>
    <user>U23SA861Y</user>
    <text>You should be able to render all states</text>
  </message>
  <message>
    <ts>2017-07-20T00:27:01.379859</ts>
    <user>U23SA861Y</user>
    <text>you need to deal with the failure in update</text>
  </message>
  <message>
    <ts>2017-07-20T00:28:57.399948</ts>
    <user>U1ZFF0E5P</user>
    <text>all our backend data is normalised and stored in `Dict`s</text>
  </message>
  <message>
    <ts>2017-07-20T00:29:33.406385</ts>
    <user>U1ZFF0E5P</user>
    <text>if an item can't be found in a `Dict` we do handle it in the view, but additionally we want to log it</text>
  </message>
  <message>
    <ts>2017-07-20T00:30:06.412035</ts>
    <user>U1ZFF0E5P</user>
    <text>so I need a way to send a `Msg` to my `update` function where I can send an `Http` request</text>
  </message>
  <message>
    <ts>2017-07-20T00:30:29.416384</ts>
    <user>U23SA861Y</user>
    <text>how are you selecting the item in the dict, presumably that key is in the model</text>
  </message>
  <message>
    <ts>2017-07-20T00:31:33.427886</ts>
    <user>U1ZFF0E5P</user>
    <text>yeah so I have the key for `StudentCourse`, which I can look up and send to my view</text>
  </message>
  <message>
    <ts>2017-07-20T00:31:53.431184</ts>
    <user>U1ZFF0E5P</user>
    <text>which has a List of keys of other entities (StudentCourseUnit), which I have to loop up again</text>
  </message>
  <message>
    <ts>2017-07-20T00:32:43.439708</ts>
    <user>U23SA861Y</user>
    <text>wait, you don't send it to your view</text>
  </message>
  <message>
    <ts>2017-07-20T00:32:50.440921</ts>
    <user>U23SA861Y</user>
    <text>your view renders your model</text>
  </message>
  <message>
    <ts>2017-07-20T00:32:54.441599</ts>
    <user>U23SA861Y</user>
    <text>nothing gets sent to it</text>
  </message>
  <message>
    <ts>2017-07-20T00:35:02.462973</ts>
    <user>U1ZFF0E5P</user>
    <text>this is my model: ```{
▾entities = {
▸apprenticeshipProviderFieldOfficers = Dict(0)
▸apprenticeshipProviderRegions = Dict(0)
▸apprenticeshipProviders = Dict(0)
▸changeOfSrtos = Dict(0)
▸courseDescriptors = Dict(0)
▸courseSchemeUnits = Dict(18)
▸courseSchemes = Dict(3)
▸courseUnits = Dict(13)
▸courses = Dict(1)
▸deliveryLocations = Dict(0)
▸employers = Dict(0)
▸fundingSchemes = Dict(0)
▸notifications = Dict(0)
▸referralSources = Dict(0)
▸registeredTrainingOrganisations = Dict(0)
▸studentCourseClasses = Dict(1)
▸studentCourseUnitTasks = Dict(0)
▸studentCourseUnits = Dict(0)
▸studentCourses = Dict(1)
▸tasks = Dict(0)
▸trainerRoles = Dict(1)
▸trainers = Dict(1)
▸trainingContractNumbers = Dict(0)
▸units = Dict(13)
}
error = Nothing
openedDatePicker = Nothing
route = TrainingPlan "dGYgQa"
settings = NotAsked
▾trainingPlan = Success {courseScheme…}
courseScheme = Nothing
▸courseSchemes = List(3)
date = &amp;lt;Wed Jul 19 2017 18:08:05 GMT+1000 (AEST)&amp;gt;
modal = Closed
selectedStudentCourseUnits = Nothing
studentCourse = "dGYgQa"
▸studentCourseForm = { comment = Nothing, endDate = Nothing, … }
trainer = "mbk5Xe"
}```</text>
  </message>
  <message>
    <ts>2017-07-20T00:36:04.473603</ts>
    <user>U1ZFF0E5P</user>
    <text>so my main view function is this:</text>
  </message>
  <message>
    <ts>2017-07-20T00:36:06.474018</ts>
    <user>U1ZFF0E5P</user>
    <text>```view : Model -&amp;gt; Html Msg
view model =
```</text>
  </message>
  <message>
    <ts>2017-07-20T00:36:27.477463</ts>
    <user>U1ZFF0E5P</user>
    <text>now if a key can't be found, I show an error</text>
  </message>
  <message>
    <ts>2017-07-20T00:36:31.478163</ts>
    <user>U23SA861Y</user>
    <text>ellie dude</text>
  </message>
  <message>
    <ts>2017-07-20T00:36:32.478351</ts>
    <user>U23SA861Y</user>
    <text>ellie</text>
  </message>
  <message>
    <ts>2017-07-20T00:36:35.478814</ts>
    <user>U1ZFF0E5P</user>
    <text>BUT I also want to log this</text>
  </message>
  <message>
    <ts>2017-07-20T00:47:28.585980</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U1ZFF0E5P&gt; Views can be shown or not shown depending on the state of your model. So you're view code would look like
```
view model = 
  case model.relevantThing of 
    everything there -&amp;gt; ViewIfWorking

    somethingMissing -&amp;gt; ViewIfNotWorking
```
`ViewIfNotWorking` may be some default or anything you like. 

Error logging would have nothing to do with the view however. It would be triggered or not when your app attempts to read the data from the `dicts` in your backend.</text>
  </message>
  <message>
    <ts>2017-07-20T00:47:36.587318</ts>
    <user>U23SA861Y</user>
    <text>You need to handle all of this in your update function when you get the message that changes the selection</text>
  </message>
  <message>
    <ts>2017-07-20T00:51:22.624040</ts>
    <user>U1ZFF0E5P</user>
    <text>we have relational data (8 layers deep) that we normalised and store in `Dict`s</text>
  </message>
  <message>
    <ts>2017-07-20T00:52:15.632486</ts>
    <user>U1ZFF0E5P</user>
    <text>we want to avoid having to query all dicts upfront to make sure everything is there, we'd rather let the view functions pick what they need</text>
  </message>
  <message>
    <ts>2017-07-20T00:52:41.636700</ts>
    <user>U23SA861Y</user>
    <text>but the view functions are picking what they need based on keys which are known to update</text>
  </message>
  <message>
    <ts>2017-07-20T00:53:28.644603</ts>
    <user>U1ZFF0E5P</user>
    <text>but it's a Dict, not a record, it may not be there</text>
  </message>
  <message>
    <ts>2017-07-20T00:53:36.646042</ts>
    <user>U1ZFF0E5P</user>
    <text>Dict.get returns a `Maybe a`</text>
  </message>
  <message>
    <ts>2017-07-20T00:54:07.651540</ts>
    <user>U23SA861Y</user>
    <text>But you can do that check in update</text>
  </message>
  <message>
    <ts>2017-07-20T00:54:18.653495</ts>
    <user>U1ZFF0E5P</user>
    <text>then I would need to write some sort of `guard` function</text>
  </message>
  <message>
    <ts>2017-07-20T00:54:54.659453</ts>
    <user>U1ZFF0E5P</user>
    <text>a function to look up everything upfront, replicating all of the view logic</text>
  </message>
  <message>
    <ts>2017-07-20T00:55:27.665160</ts>
    <user>U23SA861Y</user>
    <text>if you are replicating your lookup logic than perhaps it should be factored out</text>
  </message>
  <message>
    <ts>2017-07-20T00:56:47.677848</ts>
    <user>U23SA861Y</user>
    <text>but if you need to check whether new data need to be loaded that has to be done in update</text>
  </message>
  <message>
    <ts>2017-07-20T00:56:58.679503</ts>
    <user>U23SA861Y</user>
    <text>view is ONLY to take the data you have and display it</text>
  </message>
  <message>
    <ts>2017-07-20T00:57:07.680952</ts>
    <user>U23SA861Y</user>
    <text>no application logic</text>
  </message>
  <message>
    <ts>2017-07-20T01:02:10.730649</ts>
    <user>U23SA861Y</user>
    <text>it's not even the same logic</text>
  </message>
  <message>
    <ts>2017-07-20T01:02:27.733475</ts>
    <user>U23SA861Y</user>
    <text>the update function is doing things like if data present get data and log</text>
  </message>
  <message>
    <ts>2017-07-20T01:02:41.735687</ts>
    <user>U23SA861Y</user>
    <text>while view is going if data present render else render placeholder</text>
  </message>
  <message>
    <ts>2017-07-20T01:02:52.737424</ts>
    <user>U1ZFF0E5P</user>
    <text>essentially if something fails we show an error message, and QA asked to add a button "report error"</text>
  </message>
  <message>
    <ts>2017-07-20T01:03:08.739986</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U1ZFF0E5P&gt; You should take that function which returns the `Result String (Html Msg)` and break it up into two functions, the first of which takes all the same arguments and produces `Result String IntermediateDataStructure` and the other which is `IntermediateDataStructure -&amp;gt; Html Msg` where IntermediateDataStructure is whatever makes sense.</text>
  </message>
  <message>
    <ts>2017-07-20T01:03:13.740804</ts>
    <user>U1ZFF0E5P</user>
    <text>later they changed their minds and now want to always report the errors</text>
  </message>
  <message>
    <ts>2017-07-20T01:04:34.754159</ts>
    <user>U48AEBJQ3</user>
    <text>Once you have those functions, then it gets much easier to work with.</text>
  </message>
  <message>
    <ts>2017-07-20T01:05:38.764689</ts>
    <user>U23SA861Y</user>
    <text>You still need to render something in the error case, but the consistency check needs to be moved up to the update function</text>
  </message>
  <message>
    <ts>2017-07-20T01:06:52.776870</ts>
    <user>U1ZFF0E5P</user>
    <text>yeah I see where you're coming from, thanks for your help</text>
  </message>
  <message>
    <ts>2017-07-20T01:07:25.782261</ts>
    <user>U1ZFF0E5P</user>
    <text>we tried to avoid the "look up everything" approach and tried to let the views do it</text>
  </message>
  <message>
    <ts>2017-07-20T01:07:34.783544</ts>
    <user>U1ZFF0E5P</user>
    <text>a little bit like graphQL kinda</text>
  </message>
  <message>
    <ts>2017-07-20T01:07:54.786779</ts>
    <user>U1ZFF0E5P</user>
    <text>where each view function loads what it needs</text>
  </message>
  <message>
    <ts>2017-07-20T01:08:52.795637</ts>
    <user>U23SA861Y</user>
    <text>You can do lazy loading but it should be done on the message that brings the data into view, which is also where you check validity</text>
  </message>
  <message>
    <ts>2017-07-20T01:10:50.814065</ts>
    <user>U1ZFF0E5P</user>
    <text>essentially this is what we tried to avoid having to do (there is A LOT to be looked up)</text>
  </message>
  <message>
    <ts>2017-07-20T01:14:18.845537</ts>
    <user>U3SJEDR96</user>
    <text>(and in fact, that's how map for Dict is implemented)</text>
  </message>
  <message>
    <ts>2017-07-20T01:26:00.961350</ts>
    <user>U23SA861Y</user>
    <text>displaying 8 layers of data is going to potentally be quite messy</text>
  </message>
  <message>
    <ts>2017-07-20T01:28:00.980598</ts>
    <user>U23SA861Y</user>
    <text>presumably you are only displaying like 2 to 3 layers at a given time?</text>
  </message>
  <message>
    <ts>2017-07-20T01:37:26.071930</ts>
    <user>U153UK3FA</user>
    <text>GraphQL clients don't tend to do lookup in the render call either, they do it somewhere that has access to state like in React's `componentWillMount`</text>
  </message>
  <message>
    <ts>2017-07-20T02:33:41.701321</ts>
    <user>U1ZFF0E5P</user>
    <text>I think the root of our issue is that we tried to make our json decoders and "entities" re-usable across all pages of this elm SPA like this: &lt;https://gist.github.com/ryan-senn/df7157c5717429101a830ed3ab67f276&gt;</text>
  </message>
  <message>
    <ts>2017-07-20T02:34:20.709895</ts>
    <user>U1ZFF0E5P</user>
    <text>the key is the `Relationship` type, which is just a Maybe (we named it just for readability)</text>
  </message>
  <message>
    <ts>2017-07-20T02:34:50.716481</ts>
    <user>U1ZFF0E5P</user>
    <text>some API calls will return the student-course with student-course-units, some will not etc</text>
  </message>
  <message>
    <ts>2017-07-20T02:35:43.728289</ts>
    <user>U1ZFF0E5P</user>
    <text>so in our update function when the data comes back we can't really look it up and bundle it up nicely for the views</text>
  </message>
  <message>
    <ts>2017-07-20T02:36:34.739612</ts>
    <user>U1ZFF0E5P</user>
    <text>unless we write these decoders and type aliases for each page specifically, as each API call may or may not include some relationships</text>
  </message>
  <message>
    <ts>2017-07-20T02:37:46.754955</ts>
    <user>U1ZFF0E5P</user>
    <text>I guess this boils down to the fact that elm is a statically typed language</text>
  </message>
  <message>
    <ts>2017-07-20T03:03:57.131238</ts>
    <user>U0J8D9M2P</user>
    <text>Is that good practice to separate Phoenix server and Elm into two repos?</text>
  </message>
  <message>
    <ts>2017-07-20T03:07:59.193395</ts>
    <user>U4872964V</user>
    <text>We have them in the same repo. I think it depends more on how you work with them (if you release and tag them separately, for instance).</text>
  </message>
  <message>
    <ts>2017-07-20T03:08:34.202742</ts>
    <user>U3SJEDR96</user>
    <text>there are people who split every detail into a separate repo, and there are people who put _everything_ into one, huge, massive repo (cfr google and microsoft)</text>
  </message>
  <message>
    <ts>2017-07-20T05:49:06.438889</ts>
    <user>U6ASZU4EB</user>
    <text>Has anyone used elm-form? I'm trying to access a list index, but all I get is _all_ of the list indexes when doing 
`Form.getListIndexes "list" form`

The result is [0,1,2,3] but I'd like it to be the current index in the list</text>
  </message>
  <message>
    <ts>2017-07-20T05:53:21.527696</ts>
    <user>U3SJEDR96</user>
    <text>What do you mean by "current"?</text>
  </message>
  <message>
    <ts>2017-07-20T05:56:28.592163</ts>
    <user>U153UK3FA</user>
    <text>`getListIndexes ` "return a list of indexes so one can build qualified names of fields in list."</text>
  </message>
  <message>
    <ts>2017-07-20T05:56:38.595720</ts>
    <user>U153UK3FA</user>
    <text>what are you trying to use it for?</text>
  </message>
  <message>
    <ts>2017-07-20T05:57:39.617014</ts>
    <user>U6ASZU4EB</user>
    <text>Well it's inside of a custom "list" function that we have, which builds list elements. I need the index for a "remove" button which removes an item from that list</text>
  </message>
  <message>
    <ts>2017-07-20T07:12:19.976282</ts>
    <user>U3F7XFGCA</user>
    <text>Hello everyone, i have problem with autofocus attribute. Seems like it works only on elements that arent dynamically generated. Some advice how to solve it? I want have focus on input field when page is loaded. I was also thinking about using Dom.focus but i have no idea how to call it from view on element when is page loaded. Thank you in advance for any help :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-20T07:17:56.069522</ts>
    <user>U153UK3FA</user>
    <text>yep, autofocus only works on page load.  You'll need to call Dom.focus in your `update` or `init` function</text>
  </message>
  <message>
    <ts>2017-07-20T07:19:03.088199</ts>
    <user>U153UK3FA</user>
    <text>I think if the field you want to focus will be available after the first call to `view` then calling Dom.focus in `init` will still work.</text>
  </message>
  <message>
    <ts>2017-07-20T07:19:37.097273</ts>
    <user>U3F7XFGCA</user>
    <text>Okey thanks i will try it</text>
  </message>
  <message>
    <ts>2017-07-20T08:33:25.477865</ts>
    <user>U4SM7ECAG</user>
    <text>Is there a way I can enforce the compulsory commenting on all my elm modules? (i.e. like if I had put all my modules inside of `"exposed-modules"` in my `elm-package.json`)</text>
  </message>
  <message>
    <ts>2017-07-20T08:38:16.588159</ts>
    <user>U3SJEDR96</user>
    <text>Not really, doc-comments are only enforced for `exposed-modules`. You could expose all your modules, or do so as part of your CI (e.g. scrape modules -&amp;gt; put all in exposed-modules -&amp;gt; compile -&amp;gt; fail build on warnings)</text>
  </message>
  <message>
    <ts>2017-07-20T08:39:33.616744</ts>
    <user>U4SM7ECAG</user>
    <text>yeah I guess I'll try to do something like that but not right now then :smile:</text>
  </message>
  <message>
    <ts>2017-07-20T10:57:45.102971</ts>
    <user>U382GQ6KH</user>
    <text>Hello. How to escape backslash in `"{\"name\":\"Tom\"}"`? This string in produced by `Encode.encode 0 &amp;lt;| Encode.object [("name", Encode.string "Tom")]`. I've been trying using `String.replace "\\" "\\\\" &amp;lt;| Encode.encode 0 &amp;lt;| Encode.object [("name", Encode.string "Tom")]` but not works</text>
  </message>
  <message>
    <ts>2017-07-20T10:59:59.190081</ts>
    <user>U4872964V</user>
    <text>&lt;@U382GQ6KH&gt; what problem are you trying to solve?</text>
  </message>
  <message>
    <ts>2017-07-20T11:02:36.295828</ts>
    <user>U3SJEDR96</user>
    <text>`Encode.encode` doesn't add those backslashes; it's just escaping when printing it or calling `toString` on it</text>
  </message>
  <message>
    <ts>2017-07-20T11:02:43.300228</ts>
    <user>U3SJEDR96</user>
    <text>the actual string value won't contain that</text>
  </message>
  <message>
    <ts>2017-07-20T11:04:03.352618</ts>
    <user>U4872964V</user>
    <text>&lt;@U382GQ6KH&gt; i.e. what value do you have and what value do you want (and why)</text>
  </message>
  <message>
    <ts>2017-07-20T11:08:00.504937</ts>
    <user>U382GQ6KH</user>
    <text>&lt;@U4872964V&gt; Thank you for your reply. I'm trying to use Json.Encode to create arguments for graphql query. My json to send the request always resulted in `{query:"{students(filter:{"name":"Tom"}){id}"}` which is syntax error</text>
  </message>
  <message>
    <ts>2017-07-20T11:09:06.546306</ts>
    <user>U382GQ6KH</user>
    <text>&lt;@U3SJEDR96&gt; Thank your for your reply. But i want the string to contain that backslash</text>
  </message>
  <message>
    <ts>2017-07-20T11:09:26.559055</ts>
    <user>U3SJEDR96</user>
    <text>Oh, you want to _add_ them; that wasn't clear to me :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-20T11:09:31.561854</ts>
    <user>U4872964V</user>
    <text>you want just a plain string representation of your object as json? Or are you using a graphql package?</text>
  </message>
  <message>
    <ts>2017-07-20T11:10:02.581262</ts>
    <user>U3SJEDR96</user>
    <text>`String.replace "\"" "\\\"" foo`, possibly</text>
  </message>
  <message>
    <ts>2017-07-20T11:11:45.645265</ts>
    <user>U4872964V</user>
    <text>If it's a string representation as JSON you are after, I think a plain `toString` on the record that is your query should work</text>
  </message>
  <message>
    <ts>2017-07-20T11:14:40.754335</ts>
    <user>U4872964V</user>
    <text>but if you are going to work with graphQL, you should look at &lt;https://github.com/jahewson/elm-graphql&gt; which will generate specific types for your queries</text>
  </message>
  <message>
    <ts>2017-07-20T11:17:30.858760</ts>
    <user>U4872964V</user>
    <text>or &lt;https://github.com/jamesmacaulay/elm-graphql&gt; for another way to generate queries</text>
  </message>
  <message>
    <ts>2017-07-20T11:18:16.887161</ts>
    <user>U382GQ6KH</user>
    <text>&lt;@U3SJEDR96&gt; Thank you it works
&lt;@U4872964V&gt; Thank you much. Maybe I will look them later. Thank you</text>
  </message>
  <message>
    <ts>2017-07-20T11:18:30.895335</ts>
    <user>U6ASZU4EB</user>
    <text>I have the following function:
`
list : String -&amp;gt; String -&amp;gt; List (Field a) -&amp;gt; State a -&amp;gt; Html Msg
list title nameOfList fields state =
  let
    indexes = Form.getListIndexes (path nameOfList state) state.form
    state2 = State state.form (state.path ++ [nameOfList])
    item i = li [ attribute "data-row" (toString listIndex) ] [ group (toString i) fields state2 ]
  in
    fieldset [ ]
      [ ul [] (List.map item indexes)
      , button [ onClick (Form.Append nameOfList) ] [ text title ]
      ]
`


How can I make sure that the data-row attribute is an indexed variable? The listIndex variable is just a dummy name I put in there at the moment</text>
  </message>
  <message>
    <ts>2017-07-20T11:18:33.897046</ts>
    <user>U382GQ6KH</user>
    <text>*Thank you very much</text>
  </message>
  <message>
    <ts>2017-07-20T11:20:34.971735</ts>
    <user>U4872964V</user>
    <text>&lt;@U6ASZU4EB&gt; not sure I understand the question, attributes are just strings.</text>
  </message>
  <message>
    <ts>2017-07-20T11:22:17.036112</ts>
    <user>U6ASZU4EB</user>
    <text>yeah so here's the thing, I want the data-row attribute to be the length of (Form.getListIndexes (path nameOfList state)) which gets a list of ints. The problem is that when I do so; the data-row attribute is double bound, so all my LI elements get the data-row item [0], then [0, 1], then [0, 1, 2] and so on. I want them to only have an index variable as data-row</text>
  </message>
  <message>
    <ts>2017-07-20T11:22:51.057745</ts>
    <user>U6ASZU4EB</user>
    <text>"bi directional" is the term I'm looking for</text>
  </message>
  <message>
    <ts>2017-07-20T11:23:07.067983</ts>
    <user>U4872964V</user>
    <text>I'm totally at a loss, are you using some specific package or framework?</text>
  </message>
  <message>
    <ts>2017-07-20T11:25:46.169511</ts>
    <user>U4872964V</user>
    <text>ok, so to get the index you can use `List.indexedMap`, maybe that's what you are after?</text>
  </message>
  <message>
    <ts>2017-07-20T11:26:08.183143</ts>
    <user>U4872964V</user>
    <text>your item function will then be `item index i` instead</text>
  </message>
  <message>
    <ts>2017-07-20T11:26:49.208657</ts>
    <user>U4872964V</user>
    <text>not sure</text>
  </message>
  <message>
    <ts>2017-07-20T11:27:16.225741</ts>
    <user>U4872964V</user>
    <text>or just use `i`? seems like `i` is the index.</text>
  </message>
  <message>
    <ts>2017-07-20T11:44:52.884856</ts>
    <user>U6ASZU4EB</user>
    <text>Yeah it's just that the data-attribute is a live variable and keeps on updating as more LI:s are added. So instead of:
LI data-attribute=0
LI data-attribute=1

I get
LI data-attribute=1
LI data-attribute=1</text>
  </message>
  <message>
    <ts>2017-07-20T11:46:10.933692</ts>
    <user>U4872964V</user>
    <text>a live variable? What is this magic</text>
  </message>
  <message>
    <ts>2017-07-20T11:47:05.967855</ts>
    <user>U4872964V</user>
    <text>I think you should take a step back and think about what it is you actually want</text>
  </message>
  <message>
    <ts>2017-07-20T11:47:07.969053</ts>
    <user>U6ASZU4EB</user>
    <text>Haha I'm using elm-form and I'm also very new to Elm so I feel that this should be super easy to accomplish, but that I'm tripping myself up</text>
  </message>
  <message>
    <ts>2017-07-20T11:48:08.006071</ts>
    <user>U4872964V</user>
    <text>ok, never used that, seems like advanced usage if you are new :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-20T11:49:38.061731</ts>
    <user>U6ASZU4EB</user>
    <text>Btw this is off topic but we are looking for Elm developers (freelancers/consultants). I saw that you're Swedish, you don't happen to available for work? We're based in Stockholm</text>
  </message>
  <message>
    <ts>2017-07-20T11:50:58.111377</ts>
    <user>U3FJSB596</user>
    <text>&lt;@U6ASZU4EB&gt; We have a &lt;#C0LUAGWRK|jobs&gt; channel. You can try there?</text>
  </message>
  <message>
    <ts>2017-07-20T11:50:59.111674</ts>
    <user>U4872964V</user>
    <text>well, I am a consultant so it may be interesting, however I have plenty to do as it is right now</text>
  </message>
  <message>
    <ts>2017-07-20T11:52:05.152929</ts>
    <user>U4872964V</user>
    <text>check in &lt;#C0HQ1ST0F|sweden&gt; too</text>
  </message>
  <message>
    <ts>2017-07-20T11:53:06.190654</ts>
    <user>U6ASZU4EB</user>
    <text>Alright tack! I'll be in this channel trying to learn Elm all summer. Let me know if you have some time off spring/winter for consulting.</text>
  </message>
  <message>
    <ts>2017-07-20T12:12:02.877171</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U6ASZU4EB&gt; Let the journey begin! :smile: I remember that moment

It's been almost a year now, and I still love Elm. Great journey</text>
  </message>
  <message>
    <ts>2017-07-20T12:21:34.205910</ts>
    <user>U2SR9DL7Q</user>
    <text>Would anyone mind helping me understand the use of `andThen` ?
I have two update functions:
```
ShuffleList -&amp;gt;
            ( model, Random.generate SetFirstPlayer &amp;lt;| shuffle model.dominoes )

SetFirstPlayer newSet -&amp;gt;
           ( model, Random.generate (SetGame newSet) (&lt;http://Random.int|Random.int&gt; 1 4) )
```

A button in my view calls `ShuffleList` which generates a value, but I need a second random value so `SetFirstPlayer` is then called and that finally passes both randomly generated values to `SetGame` where additional logic is performed and the model is updated. 

I know there's a cleaner way to do this with `Cmd.batch` and I'm thinking `Random.andThen`, but I'm having trouble stringing it all together.</text>
  </message>
  <message>
    <ts>2017-07-20T12:29:09.460477</ts>
    <user>U2SR9DL7Q</user>
    <text>Alternatively, perhaps map may be more appropriate...</text>
  </message>
  <message>
    <ts>2017-07-20T12:29:28.471222</ts>
    <user>U5J0H2NS2</user>
    <text>Random.pair ?</text>
  </message>
  <message>
    <ts>2017-07-20T12:34:03.625998</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U5J0H2NS2&gt; Oh! I somehow skipped over that one. That could work, but then I need to unpack the tuple for the SetGame function right?</text>
  </message>
  <message>
    <ts>2017-07-20T12:36:28.704753</ts>
    <user>U5J0H2NS2</user>
    <text>Just deconstruct it when pattern matching in update I think</text>
  </message>
  <message>
    <ts>2017-07-20T12:38:35.773178</ts>
    <user>U2SR9DL7Q</user>
    <text>cool. Thanks!</text>
  </message>
  <message>
    <ts>2017-07-20T12:44:06.953446</ts>
    <user>U5J0H2NS2</user>
    <text>RandomGenerated (rnd1, rnd2) -&amp;gt;</text>
  </message>
  <message>
    <ts>2017-07-20T12:45:21.994366</ts>
    <user>U2SR9DL7Q</user>
    <text>I am readjusting to the flexibility of pattern matching in FP languages</text>
  </message>
  <message>
    <ts>2017-07-20T13:04:21.619248</ts>
    <user>U65B9414J</user>
    <text>Folks I'm a bit confused by 
nameGenerator : Generator String
nameGenerator =
  Random.Extra.sample ["Alice", "Bob", "Carole"]
    |&amp;gt; Random.map (Maybe.withDefault "Alice")</text>
  </message>
  <message>
    <ts>2017-07-20T13:04:44.631918</ts>
    <user>U65B9414J</user>
    <text>Here what is it that nameGenerator is returning.</text>
  </message>
  <message>
    <ts>2017-07-20T13:05:50.667103</ts>
    <user>U65B9414J</user>
    <text>I'm having trouble understanding type annotation of the function</text>
  </message>
  <message>
    <ts>2017-07-20T13:07:04.707549</ts>
    <user>U4872964V</user>
    <text>&lt;@U65B9414J&gt; what, the `Generator String` or something else?</text>
  </message>
  <message>
    <ts>2017-07-20T13:07:43.727964</ts>
    <user>U65B9414J</user>
    <text>yes what is `Generator String`. Is it returning Generator of type String</text>
  </message>
  <message>
    <ts>2017-07-20T13:07:59.736185</ts>
    <user>U65B9414J</user>
    <text>This is from reading of &lt;https://robots.thoughtbot.com/elms-universal-pattern&gt;</text>
  </message>
  <message>
    <ts>2017-07-20T13:08:13.743582</ts>
    <user>U4872964V</user>
    <text>It's an abstract data type, defined in &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Random&gt;</text>
  </message>
  <message>
    <ts>2017-07-20T13:08:41.758620</ts>
    <user>U65B9414J</user>
    <text>Ah that helps. Thanks a bunch.</text>
  </message>
  <message>
    <ts>2017-07-20T13:10:16.808175</ts>
    <user>U65B9414J</user>
    <text>By the way I searched for Generator at &lt;http://package.elm-lang.org/&gt; and did not find any hit. Is there any other way to search which scans across various packages.</text>
  </message>
  <message>
    <ts>2017-07-20T13:11:19.841928</ts>
    <user>U4872964V</user>
    <text>Hmm, not sure</text>
  </message>
  <message>
    <ts>2017-07-20T13:11:38.851305</ts>
    <user>U4872964V</user>
    <text>I guess that could be improved for sure</text>
  </message>
  <message>
    <ts>2017-07-20T14:23:25.250530</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U65B9414J&gt; on macOs, I use a combination of the Dash and Alfred apps to search documentation</text>
  </message>
  <message>
    <ts>2017-07-20T14:24:30.287488</ts>
    <user>U0LPMPL2U</user>
    <text>There's also &lt;https://klaftertief.github.io/elm-search/&gt; that allows searching by type signature</text>
  </message>
  <message>
    <ts>2017-07-20T14:24:59.303366</ts>
    <user>U4872964V</user>
    <text>&lt;@U0LPMPL2U&gt; yes, but not by data type</text>
  </message>
  <message>
    <ts>2017-07-20T14:25:31.321445</ts>
    <user>U4872964V</user>
    <text>which could be fixed I suppose</text>
  </message>
  <message>
    <ts>2017-07-20T14:25:59.336747</ts>
    <user>U0LPMPL2U</user>
    <text>it already allows searching for function names</text>
  </message>
  <message>
    <ts>2017-07-20T14:26:23.350145</ts>
    <user>U0LPMPL2U</user>
    <text>seems like searching for type definitions isn't too much of a jump</text>
  </message>
  <message>
    <ts>2017-07-20T14:28:17.414667</ts>
    <user>U4872964V</user>
    <text>it also allows things like "user:norpan" (reading the source code) :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-20T14:30:25.488102</ts>
    <user>U4872964V</user>
    <text>&lt;https://github.com/klaftertief/elm-search/issues/16&gt;</text>
  </message>
  <message>
    <ts>2017-07-20T14:46:44.031383</ts>
    <user>U0CK8CJ5D</user>
    <text>Regarding the elm-search… Yes, adding those features is not a problem. The exposed types and aliases are not contained in the index, though. I started a rewrite some time ago with a different focus and backlogged adding those features, and then I started a different pet project and backlogged working on elm-search. Maybe I should just hack in some features into the current version… Just for some context.</text>
  </message>
  <message>
    <ts>2017-07-20T15:13:35.917211</ts>
    <user>U39DE7RQ9</user>
    <text>I need help. Im using rtfeldmans SPA example to build my own SPA. Instead of using http requests im using ports against firebase. Now I have a problem in my update function where my subscription returns a list of forms (my own type Form) and should be convertet / mapped to a model for a sub page holding a list of forms.
```
subscriptions : Model -&amp;gt; Sub Msg
subscriptions model =
    let
        getAllFormsSub =
            Ports.gotAllPublicForms (Decode.decodeValue jsonFormListDecoder)
    in
        Sub.batch
            [ Sub.map HomeLoaded getAllFormsSub
            ]
```
And my update:
```
case ( msg, page ) of
( HomeLoaded (Ok subModel), _ ) -&amp;gt;
                { model | pageState = Loaded (Home subModel) } =&amp;gt; Cmd.none
```
And the compile error:
```
0:38:39 client.1   |  Function `Home` is expecting the argument to be:
20:38:39 client.1   |      HomePage.Model
20:38:39 client.1   |  But it is:
20:38:39 client.1   |      List Form
```
How do I map the list of forms to the model HomePage.Model and where?</text>
  </message>
  <message>
    <ts>2017-07-20T15:16:07.993696</ts>
    <user>U4872964V</user>
    <text>What does `HomePage.Model` look like</text>
  </message>
  <message>
    <ts>2017-07-20T15:17:35.038654</ts>
    <user>U39DE7RQ9</user>
    <text>```
type alias Model =
    { forms : List Form
    }
```</text>
  </message>
  <message>
    <ts>2017-07-20T15:18:13.058137</ts>
    <user>U4872964V</user>
    <text>Ok, so maybe `Loaded (Home { forms = subModel })`</text>
  </message>
  <message>
    <ts>2017-07-20T15:19:23.093969</ts>
    <user>U39DE7RQ9</user>
    <text>yay! Tanks &lt;@U4872964V&gt;</text>
  </message>
  <message>
    <ts>2017-07-20T15:30:06.421196</ts>
    <user>U6ASXAHUZ</user>
    <text>Hi there folks, first time here (:</text>
  </message>
  <message>
    <ts>2017-07-20T15:30:40.439161</ts>
    <user>U6ASXAHUZ</user>
    <text>I'm new to Elm, but I've worked a bit on some other functional langs</text>
  </message>
  <message>
    <ts>2017-07-20T15:31:20.459861</ts>
    <user>U6ASXAHUZ</user>
    <text>I've started reading a bit around how to use Protocols, like I'm used to do in closure, but I didn't get that far</text>
  </message>
  <message>
    <ts>2017-07-20T15:31:45.473220</ts>
    <user>U6ASXAHUZ</user>
    <text>I wonder how I could write the commented part of the code</text>
  </message>
  <message>
    <ts>2017-07-20T15:31:46.473929</ts>
    <user>U6ASXAHUZ</user>
    <text>&lt;https://ellie-app.com/3NxLPYhDn43a1/4&gt;</text>
  </message>
  <message>
    <ts>2017-07-20T15:33:14.518667</ts>
    <user>U4872964V</user>
    <text>Ellie will give you the signature if you hover over the function name</text>
  </message>
  <message>
    <ts>2017-07-20T15:33:32.528010</ts>
    <user>U4872964V</user>
    <text>or is it somewhere else?</text>
  </message>
  <message>
    <ts>2017-07-20T15:34:15.549963</ts>
    <user>U6ASXAHUZ</user>
    <text>oh, nice</text>
  </message>
  <message>
    <ts>2017-07-20T15:36:28.616714</ts>
    <user>U4872964V</user>
    <text>I'm not sure what you are trying to achieve here though</text>
  </message>
  <message>
    <ts>2017-07-20T15:37:15.639819</ts>
    <user>U4872964V</user>
    <text>Elm is not really suited for object orientation</text>
  </message>
  <message>
    <ts>2017-07-20T15:38:03.662730</ts>
    <user>U6ASXAHUZ</user>
    <text>I was looking more for extension points than OO</text>
  </message>
  <message>
    <ts>2017-07-20T15:38:26.674046</ts>
    <user>U6ASXAHUZ</user>
    <text>Given that a datastructure respond to comparable, I could use on my functions</text>
  </message>
  <message>
    <ts>2017-07-20T15:38:32.677196</ts>
    <user>U23SA861Y</user>
    <text>actually it looks more like typeclasses or something</text>
  </message>
  <message>
    <ts>2017-07-20T15:38:42.682023</ts>
    <user>U6ASXAHUZ</user>
    <text>yup, more like it</text>
  </message>
  <message>
    <ts>2017-07-20T15:38:52.686629</ts>
    <user>U23SA861Y</user>
    <text>which elm has complier support for a small set, but no support for user type classes</text>
  </message>
  <message>
    <ts>2017-07-20T15:38:55.687961</ts>
    <user>U4872964V</user>
    <text>yeah, well, same thing there :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-20T15:39:05.692912</ts>
    <user>U6ASXAHUZ</user>
    <text>I noticed there is coparables that I can't implement for my structs</text>
  </message>
  <message>
    <ts>2017-07-20T15:39:18.699776</ts>
    <user>U6ASXAHUZ</user>
    <text>And I tried instead to make a comparable that I can implement for any struct</text>
  </message>
  <message>
    <ts>2017-07-20T15:39:21.700897</ts>
    <user>U23SA861Y</user>
    <text>it is implemented for records but not ADTs</text>
  </message>
  <message>
    <ts>2017-07-20T15:39:51.715854</ts>
    <user>U4872964V</user>
    <text>so is there an actual problem you're trying to solve using these, or just toying around?</text>
  </message>
  <message>
    <ts>2017-07-20T15:39:54.717281</ts>
    <user>U23SA861Y</user>
    <text>err, hold on no</text>
  </message>
  <message>
    <ts>2017-07-20T15:40:07.723761</ts>
    <user>U6ASXAHUZ</user>
    <text>norpan: nope, just toying around</text>
  </message>
  <message>
    <ts>2017-07-20T15:40:32.736333</ts>
    <user>U4872964V</user>
    <text>ok, yes, well Elm does things differently :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-20T15:40:56.748084</ts>
    <user>U6ASXAHUZ</user>
    <text>I've read around all the discussions on typeclasses</text>
  </message>
  <message>
    <ts>2017-07-20T15:41:09.754477</ts>
    <user>U2Q5GJNTB</user>
    <text>hi. anybody using elm with webpack and hash asset names for the compiled bundle?</text>
  </message>
  <message>
    <ts>2017-07-20T15:41:17.758640</ts>
    <user>U6ASXAHUZ</user>
    <text>And I understand why, I've been through MonadT complexity haha</text>
  </message>
  <message>
    <ts>2017-07-20T15:41:43.771239</ts>
    <user>U6ASXAHUZ</user>
    <text>But I was wondering if it would be possible to implement comparable using the suggestions given around when people ask for typeclasses</text>
  </message>
  <message>
    <ts>2017-07-20T15:41:47.773166</ts>
    <user>U6ASXAHUZ</user>
    <text>which is records</text>
  </message>
  <message>
    <ts>2017-07-20T15:41:59.778875</ts>
    <user>U6ASXAHUZ</user>
    <text>Does it make sense?</text>
  </message>
  <message>
    <ts>2017-07-20T15:42:11.784593</ts>
    <user>U23SA861Y</user>
    <text>no, it's really something that needs to be implmented at the language level</text>
  </message>
  <message>
    <ts>2017-07-20T15:42:29.793371</ts>
    <user>U2Q5GJNTB</user>
    <text>&lt;@U6ASXAHUZ&gt; but then again, without any concept of abstract interfaces we create inconsistent ad hoc things. Like Task.sequence vs Result.Extra.combine , …</text>
  </message>
  <message>
    <ts>2017-07-20T15:42:32.794923</ts>
    <user>U4872964V</user>
    <text>well, records should be comparable, that's an "easy" fix</text>
  </message>
  <message>
    <ts>2017-07-20T15:43:35.825684</ts>
    <user>U62UFEG4D</user>
    <text>Dear Elm people, hope you are doing all great!
My question is the following, what  are the options to update a model without intervention of the user. I know I can use the Time package and subscribe to e.g. `Time.every second`.  But isn't there other options e.g. to get closer to cpu clock cycle ?</text>
  </message>
  <message>
    <ts>2017-07-20T15:44:18.846920</ts>
    <user>U4872964V</user>
    <text>&lt;@U62UFEG4D&gt;, the important cycle is animation frame: &lt;http://package.elm-lang.org/packages/elm-lang/animation-frame/latest&gt;</text>
  </message>
  <message>
    <ts>2017-07-20T15:45:03.869087</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U62UFEG4D&gt; are you trying to do animation or something else</text>
  </message>
  <message>
    <ts>2017-07-20T15:45:11.873132</ts>
    <user>U6ASXAHUZ</user>
    <text>jonf: does it need to be on the language level? All the recommendations I've heard propose to use records to solve the issue</text>
  </message>
  <message>
    <ts>2017-07-20T15:45:39.887195</ts>
    <user>U4872964V</user>
    <text>&lt;@U6ASXAHUZ&gt; the first question is what the issue _really_ is :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-20T15:45:42.888863</ts>
    <user>U6ASXAHUZ</user>
    <text>jonf: I'm just investiganting, but it got me to think if it would be possible to use the recomendation to all the current interfaces blessed by the compiler</text>
  </message>
  <message>
    <ts>2017-07-20T15:46:04.899955</ts>
    <user>U23SA861Y</user>
    <text>you can do partial record matching and have that record contain functions</text>
  </message>
  <message>
    <ts>2017-07-20T15:46:18.906590</ts>
    <user>U4872964V</user>
    <text>maybe this is less &lt;#C3K1L92FP|beginner&gt; and more &lt;#C2QPJLU2X|elm-discuss&gt;</text>
  </message>
  <message>
    <ts>2017-07-20T15:46:19.907218</ts>
    <user>U23SA861Y</user>
    <text>little bit cumbersome but you can do it.</text>
  </message>
  <message>
    <ts>2017-07-20T15:46:24.909579</ts>
    <user>U23SA861Y</user>
    <text>right</text>
  </message>
  <message>
    <ts>2017-07-20T15:46:38.916261</ts>
    <user>U6ASXAHUZ</user>
    <text>oh, ok</text>
  </message>
  <message>
    <ts>2017-07-20T15:47:17.935496</ts>
    <user>U3BTVEFQU</user>
    <text>hey elm community … what is the best way to communicate from parent to child "components"</text>
  </message>
  <message>
    <ts>2017-07-20T15:48:19.966319</ts>
    <user>U3BTVEFQU</user>
    <text>exposing a child msg and sending it via the childs update function or creating a dedicated child function for this?</text>
  </message>
  <message>
    <ts>2017-07-20T15:48:29.971412</ts>
    <user>U3BTVEFQU</user>
    <text>I created a gist to show my problem: &lt;https://gist.github.com/ream88/c076814d3936a8a70f89ff5eb120276f&gt;</text>
  </message>
  <message>
    <ts>2017-07-20T15:48:47.980083</ts>
    <user>U3BTVEFQU</user>
    <text>Child1 exposes the msg, Child2 a update function</text>
  </message>
  <message>
    <ts>2017-07-20T15:49:52.012048</ts>
    <user>U6ASXAHUZ</user>
    <text>thanks @jonf, @norpan, &lt;@U2Q5GJNTB&gt;</text>
  </message>
  <message>
    <ts>2017-07-20T15:51:52.072549</ts>
    <user>U62UFEG4D</user>
    <text>&lt;@U4872964V&gt; and &lt;@U23SA861Y&gt; thanks for the prompt reply! Animation is not really my use case, although that use case does involve refreshing the screen from time to time when certain conditions are met.  The calculation of the condition relies on random generator, that's why I need to know the best way to minimize the "Elm architecture Cycle"...</text>
  </message>
  <message>
    <ts>2017-07-20T15:52:21.086496</ts>
    <user>U23SA861Y</user>
    <text>so, on what condition is the screen refreshing</text>
  </message>
  <message>
    <ts>2017-07-20T15:53:16.113947</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U3BTVEFQU&gt; that architecture is ok at a very large scale but in general thinking about things as "components" can get you into trouble</text>
  </message>
  <message>
    <ts>2017-07-20T15:53:30.121310</ts>
    <user>U4872964V</user>
    <text>&lt;@U3BTVEFQU&gt; I'm not sure what the actual problem is though</text>
  </message>
  <message>
    <ts>2017-07-20T15:54:14.143902</ts>
    <user>U3BTVEFQU</user>
    <text>&lt;@U4872964V&gt; I'm not sure what's the proper way to do it</text>
  </message>
  <message>
    <ts>2017-07-20T15:54:22.147817</ts>
    <user>U4872964V</user>
    <text>any way that works :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-20T15:54:36.155263</ts>
    <user>U4872964V</user>
    <text>you can make whatever functions you like</text>
  </message>
  <message>
    <ts>2017-07-20T15:54:44.159300</ts>
    <user>U3BTVEFQU</user>
    <text>yeah :stuck_out_tongue_winking_eye: I figured out that part :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-20T15:54:59.167211</ts>
    <user>U3BTVEFQU</user>
    <text>but is the community doing, what feels "right"?</text>
  </message>
  <message>
    <ts>2017-07-20T15:55:01.167993</ts>
    <user>U4872964V</user>
    <text>If you have some pain, then that's a problem and we can certainly help suggest better ways to do things</text>
  </message>
  <message>
    <ts>2017-07-20T15:55:53.195627</ts>
    <user>U3BTVEFQU</user>
    <text>&lt;@U4872964V&gt; exposing and using a child msg feels kinda wrong</text>
  </message>
  <message>
    <ts>2017-07-20T15:56:14.206839</ts>
    <user>U3BTVEFQU</user>
    <text>however splitting the update function into multiple ones does it also</text>
  </message>
  <message>
    <ts>2017-07-20T15:56:15.207343</ts>
    <user>U4872964V</user>
    <text>Most people have "component pain" because they are locked into thinking that the `update` function for a "child" has to look a certain way</text>
  </message>
  <message>
    <ts>2017-07-20T15:56:31.216137</ts>
    <user>U4872964V</user>
    <text>but it really depends on the nature of the "child"</text>
  </message>
  <message>
    <ts>2017-07-20T15:56:41.221193</ts>
    <user>U23SA861Y</user>
    <text>often what is a component is really just a view</text>
  </message>
  <message>
    <ts>2017-07-20T15:57:37.250046</ts>
    <user>U23SA861Y</user>
    <text>but people get caught up with thinking that because there is this seperate thing in my view it should have seperate data</text>
  </message>
  <message>
    <ts>2017-07-20T15:58:09.266693</ts>
    <user>U4872964V</user>
    <text>A general tip is to consider data first. Data that only is used by a component does not need to be in a special model, it can be passed to the view function</text>
  </message>
  <message>
    <ts>2017-07-20T15:59:41.314497</ts>
    <user>U4872964V</user>
    <text>in your case, I think Child2 looks better, but the function can still be called `update`</text>
  </message>
  <message>
    <ts>2017-07-20T16:00:27.339946</ts>
    <user>U3BTVEFQU</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-20T16:00:30.341316</ts>
    <user>U3BTVEFQU</user>
    <text>thanks :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-20T16:01:13.364170</ts>
    <user>U3BTVEFQU</user>
    <text>coming from the react side of development (and not doing functional programming before) is sometimes hard I guess</text>
  </message>
  <message>
    <ts>2017-07-20T16:01:15.365086</ts>
    <user>U4872964V</user>
    <text>just as long as you don't have a fixed idea on how function should and must look you'll be fine, I think</text>
  </message>
  <message>
    <ts>2017-07-20T16:02:22.399215</ts>
    <user>U4872964V</user>
    <text>It's a bit hard coming from a "framework" that dictates these things as "components"</text>
  </message>
  <message>
    <ts>2017-07-20T16:07:49.561240</ts>
    <user>U4872964V</user>
    <text>I gather that there are more to your children, but right now, they are just `WebData` so they serve little purpose</text>
  </message>
  <message>
    <ts>2017-07-20T16:08:23.577189</ts>
    <user>U3BTVEFQU</user>
    <text>yeah, definitely more … and they are quite different in fact</text>
  </message>
  <message>
    <ts>2017-07-20T16:08:39.584786</ts>
    <user>U3BTVEFQU</user>
    <text>however they all share data from a remote api, fetched by the "parent"</text>
  </message>
  <message>
    <ts>2017-07-20T16:09:35.611344</ts>
    <user>U4872964V</user>
    <text>so probably that data only need to be passed to the view function</text>
  </message>
  <message>
    <ts>2017-07-20T17:27:22.847748</ts>
    <user>U2SR9DL7Q</user>
    <text>Hello all. Is there any way to tell a function "Expect a list of four values" in the type signature? Or rather, can I define a type as `SomeType = List  Int Int Int Int` where I'm saying it can only be a List containing 4 elements?</text>
  </message>
  <message>
    <ts>2017-07-20T17:28:22.874039</ts>
    <user>U0LPMPL2U</user>
    <text>You probably want a 4-tuple</text>
  </message>
  <message>
    <ts>2017-07-20T17:28:22.874048</ts>
    <user>U23SA861Y</user>
    <text>what are the 4 values</text>
  </message>
  <message>
    <ts>2017-07-20T17:28:35.879565</ts>
    <user>U23SA861Y</user>
    <text>you can have a tuple of 4 or just a function with 4 parameters</text>
  </message>
  <message>
    <ts>2017-07-20T17:28:51.886802</ts>
    <user>U2SR9DL7Q</user>
    <text>for context, I have a list of values that gets passed around to a few function, but I define the list in the init as having 4 values, and it could never not have four, but every time I need an element from it I'm forced to handle every case of list.</text>
  </message>
  <message>
    <ts>2017-07-20T17:29:08.894047</ts>
    <user>U23SA861Y</user>
    <text>what do they represent, are they all the same thing</text>
  </message>
  <message>
    <ts>2017-07-20T17:29:15.896865</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U23SA861Y&gt; I guess I could. Or just another type.</text>
  </message>
  <message>
    <ts>2017-07-20T17:29:20.899151</ts>
    <user>U23SA861Y</user>
    <text>given that they are exactly 4 I presume there is some structure to them</text>
  </message>
  <message>
    <ts>2017-07-20T17:30:10.920479</ts>
    <user>U2SR9DL7Q</user>
    <text>The list holds "players" which are a type alias of a few things.</text>
  </message>
  <message>
    <ts>2017-07-20T17:30:35.931873</ts>
    <user>U2SR9DL7Q</user>
    <text>but I guess I could just make `type Players = Player Player Player Player` ?</text>
  </message>
  <message>
    <ts>2017-07-20T17:30:53.939110</ts>
    <user>U23SA861Y</user>
    <text>ahh, can you play with only two players?</text>
  </message>
  <message>
    <ts>2017-07-20T17:31:03.943544</ts>
    <user>U2SR9DL7Q</user>
    <text>For now, no.</text>
  </message>
  <message>
    <ts>2017-07-20T17:31:56.966414</ts>
    <user>U0LPMPL2U</user>
    <text>Some ideas:
```
(Player, Player, Player, Player)

-- OR
{ player1 : Player, player2 : Player, player3 : Player, player4 : Player}

-- OR
type Players = FourPlayers Player Player Player Player
```</text>
  </message>
  <message>
    <ts>2017-07-20T17:33:51.014491</ts>
    <user>U2GPAEU1L</user>
    <text>I like `type Players = FourPlayers Player Player Player Player`, down the line if you support two players you could refactor easily</text>
  </message>
  <message>
    <ts>2017-07-20T17:34:08.021249</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U0LPMPL2U&gt; those could all work potentially.</text>
  </message>
  <message>
    <ts>2017-07-20T17:34:25.028052</ts>
    <user>U23SA861Y</user>
    <text>thats ok if you can only ever have a fixed set of numbers like 1,2,4 but if it's arbitrary then a list would be the correct structure</text>
  </message>
  <message>
    <ts>2017-07-20T17:35:26.052273</ts>
    <user>U2SR9DL7Q</user>
    <text>I have one function that essentially does `List.map2 (\x y -&amp;gt; Player x y) X_list Y_List`</text>
  </message>
  <message>
    <ts>2017-07-20T17:36:17.072340</ts>
    <user>U2SR9DL7Q</user>
    <text>This would no longer work now... is there a similar map function for records?</text>
  </message>
  <message>
    <ts>2017-07-20T17:36:50.085496</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U23SA861Y&gt; I don't plan on supporting arbitrary amounts of players anytime soon.</text>
  </message>
  <message>
    <ts>2017-07-20T17:38:37.126534</ts>
    <user>U2SR9DL7Q</user>
    <text>Technically there's nothing wrong with the Lists... but I keep on having to deal with Nothing moments that are impossible, and that seems like code smell.</text>
  </message>
  <message>
    <ts>2017-07-20T17:38:39.127256</ts>
    <user>U23SA861Y</user>
    <text>If you have a fixed structure for the render (ie each of the 4 sides of the screen) then the ADT would be probably pretty good</text>
  </message>
  <message>
    <ts>2017-07-20T17:39:09.138494</ts>
    <user>U23SA861Y</user>
    <text>then add support for 1,2, and 3 players later</text>
  </message>
  <message>
    <ts>2017-07-20T17:40:10.161901</ts>
    <user>U0LPMPL2U</user>
    <text>You could implement your own `map2` function for the `Players` type if you really wanted</text>
  </message>
  <message>
    <ts>2017-07-20T17:40:53.178705</ts>
    <user>U2GPAEU1L</user>
    <text>```
type Players = FourPlayers Player Player Player Player

playersMap : (Player -&amp;gt; Player) -&amp;gt; Players -&amp;gt; Players
playersMap playerFunc players =
    case players of
        FourPlayer player1 player2 player3 player4 -&amp;gt;
            FourPlayer (playerFunc player1) (playerFunc player2) (playerFunc player3) (playerFunc player4)
```</text>
  </message>
  <message>
    <ts>2017-07-20T17:41:01.181864</ts>
    <user>U2GPAEU1L</user>
    <text>Wrote that in slack, pardon syntax errors…</text>
  </message>
  <message>
    <ts>2017-07-20T17:41:43.198347</ts>
    <user>U2GPAEU1L</user>
    <text>And you could do similar for `map2` etc etc.</text>
  </message>
  <message>
    <ts>2017-07-20T17:45:37.288133</ts>
    <user>U2SR9DL7Q</user>
    <text>That could work. I also remember a package that let you say that a list was not empty</text>
  </message>
  <message>
    <ts>2017-07-20T17:45:55.295680</ts>
    <user>U23SA861Y</user>
    <text>maybe, but thats abusing lists</text>
  </message>
  <message>
    <ts>2017-07-20T17:46:01.297934</ts>
    <user>U2SR9DL7Q</user>
    <text>and things like `.head` would not return a maybe type</text>
  </message>
  <message>
    <ts>2017-07-20T17:46:08.300686</ts>
    <user>U2GPAEU1L</user>
    <text>Leave the lists alone aready, they've been through so much</text>
  </message>
  <message>
    <ts>2017-07-20T17:46:29.308674</ts>
    <user>U2SR9DL7Q</user>
    <text>They brought it on themselves.</text>
  </message>
  <message>
    <ts>2017-07-20T17:49:08.368018</ts>
    <user>U2SR9DL7Q</user>
    <text>Another situation is a List of "dominoes" I generate and then shuffle using the random library. It's always 28 dominoes, always. But there's no easy way of saying "this type is always these 28 things", and never less.</text>
  </message>
  <message>
    <ts>2017-07-20T17:51:27.421846</ts>
    <user>U23SA861Y</user>
    <text>That one probably should be a list, but there should be ways of dealing with that which doesn't pop a whole boat load of maybes</text>
  </message>
  <message>
    <ts>2017-07-20T17:52:35.448072</ts>
    <user>U23SA861Y</user>
    <text>well, list or array</text>
  </message>
  <message>
    <ts>2017-07-20T17:53:41.473513</ts>
    <user>U2SR9DL7Q</user>
    <text>I refactored something earlier to get rid of a _fake_ maybe, but that was just switching from a `Maybe Thing` to a type `Thing = On | Off`</text>
  </message>
  <message>
    <ts>2017-07-20T19:33:58.257042</ts>
    <user>U2GPAEU1L</user>
    <text>As promised yesterday, I finally got around to finishing that tutorial on tagged unions `type`. This tutorial took me a lot longer than anticipated…but I'm quite happy with the result, go over a *lot* of important concepts, especially for beginners. I highly recommend taking a look if you're still wrapping your head around `type` (and yes I am obviously super bias).

&lt;http://codetidbit.com/#view/snipbit/59713b757890d775c05191fa/introduction&gt;

Cheers :smile:</text>
  </message>
  <message>
    <ts>2017-07-20T21:15:48.511863</ts>
    <user>U65B9414J</user>
    <text>&lt;@U2GPAEU1L&gt; getting an error. Tried incognito and got same result. &lt;https://monosnap.com/file/NqB44VDBlxZNPCM92u2dCMQwqLmZ70&gt;</text>
  </message>
  <message>
    <ts>2017-07-20T21:15:54.513029</ts>
    <user>U2GPAEU1L</user>
    <text>Ya my bad, one sec</text>
  </message>
  <message>
    <ts>2017-07-20T21:15:57.513472</ts>
    <user>U2GPAEU1L</user>
    <text>fixing something…</text>
  </message>
  <message>
    <ts>2017-07-20T21:16:01.514341</ts>
    <user>U2GPAEU1L</user>
    <text>didn't mean to do that, give me a min</text>
  </message>
  <message>
    <ts>2017-07-20T21:16:11.516200</ts>
    <user>U65B9414J</user>
    <text>No worries</text>
  </message>
  <message>
    <ts>2017-07-20T21:22:23.585873</ts>
    <user>U2GPAEU1L</user>
    <text>Hey &lt;@U65B9414J&gt;…Sorry about that :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-20T21:22:36.588175</ts>
    <user>U2GPAEU1L</user>
    <text>Messing with things in production a bit too much…it's online now</text>
  </message>
  <message>
    <ts>2017-07-20T21:30:13.671456</ts>
    <user>U65B9414J</user>
    <text>&lt;@U2GPAEU1L&gt; it's working now. Thanks.</text>
  </message>
  <message>
    <ts>2017-07-20T21:30:26.673895</ts>
    <user>U2GPAEU1L</user>
    <text>Np… :sweat:</text>
  </message>
  <message>
    <ts>2017-07-20T21:32:17.695220</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U2GPAEU1L&gt; can you make those links in to actual links? I tried to open an article in another tab and was disappointed</text>
  </message>
  <message>
    <ts>2017-07-20T21:32:56.702281</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U153UK3FA&gt; Actual links?</text>
  </message>
  <message>
    <ts>2017-07-20T21:33:59.713595</ts>
    <user>U153UK3FA</user>
    <text>all your buttons and links to articles are `div` tags with onclick events instead of being `a` tags with `href` attributes</text>
  </message>
  <message>
    <ts>2017-07-20T21:35:36.731354</ts>
    <user>U2GPAEU1L</user>
    <text>Oh I thought you meant _in slack_</text>
  </message>
  <message>
    <ts>2017-07-20T21:58:56.987536</ts>
    <user>U601ELFEG</user>
    <text>If I want the value of a text `&amp;lt;input&amp;gt;` area only when the user clicks a `&amp;lt;button&amp;gt;` is there a good hack for that... or do I need to keep some state in my model for the current value of the `&amp;lt;input&amp;gt;` field?</text>
  </message>
  <message>
    <ts>2017-07-20T21:59:52.998358</ts>
    <user>U153UK3FA</user>
    <text>you'll need to keep the state of the input field in your model</text>
  </message>
  <message>
    <ts>2017-07-20T22:00:20.004371</ts>
    <user>U601ELFEG</user>
    <text>ah well.... Seems like there should be some fabulous way to do that... but okay</text>
  </message>
  <message>
    <ts>2017-07-20T22:00:40.008651</ts>
    <user>U601ELFEG</user>
    <text>(since I won't be reacting live to the search field)</text>
  </message>
  <message>
    <ts>2017-07-20T22:01:15.015426</ts>
    <user>U153UK3FA</user>
    <text>Elm largely tries to ignore the state of the DOM and treats it merely as a representation of the state of the model</text>
  </message>
  <message>
    <ts>2017-07-20T22:01:45.021052</ts>
    <user>U601ELFEG</user>
    <text>yup -</text>
  </message>
  <message>
    <ts>2017-07-21T01:39:50.186464</ts>
    <user>U4F64AKQV</user>
    <text>Any tricks for Json encoding Colors?</text>
  </message>
  <message>
    <ts>2017-07-21T01:43:50.224343</ts>
    <user>U4872964V</user>
    <text>&lt;@U4F64AKQV&gt; tricks? how do you want the result to look?</text>
  </message>
  <message>
    <ts>2017-07-21T01:45:37.241135</ts>
    <user>U4F64AKQV</user>
    <text>Good question. I'm thinking RGBA in either an object or list.</text>
  </message>
  <message>
    <ts>2017-07-21T01:46:47.252002</ts>
    <user>U4F64AKQV</user>
    <text>Maybe I'll just use Color.toRgb with Json.Encode.list</text>
  </message>
  <message>
    <ts>2017-07-21T01:46:53.253052</ts>
    <user>U4872964V</user>
    <text>So, what's the use case? I mean, somebody is going to read that json.</text>
  </message>
  <message>
    <ts>2017-07-21T01:47:58.263641</ts>
    <user>U4F64AKQV</user>
    <text>It's purely internal. I'm also writing the side that reads it, so I can choose the format.</text>
  </message>
  <message>
    <ts>2017-07-21T01:50:00.282349</ts>
    <user>U4872964V</user>
    <text>ok, then that sounds good</text>
  </message>
  <message>
    <ts>2017-07-21T03:07:40.223387</ts>
    <user>U61FZV5EK</user>
    <text>Is it best practice to pass the model down to functions and let them get the values, or just the values directly? When a function needs a couple of values, sending them individually is more verbose, but better documentation as well I guess. Any best practices?</text>
  </message>
  <message>
    <ts>2017-07-21T03:12:39.295572</ts>
    <user>U4872964V</user>
    <text>&lt;@U61FZV5EK&gt; yes, listing function parameters explicitly is better in my opinion. sending the whole model make the function more complex, because it needs to know the model now</text>
  </message>
  <message>
    <ts>2017-07-21T03:13:53.313099</ts>
    <user>U4872964V</user>
    <text>and with many parameters, I use a one-off record and deconstruct it in the function, like this:
```
function { param1, param2, param3 } = ...
```</text>
  </message>
  <message>
    <ts>2017-07-21T03:14:51.326924</ts>
    <user>U4872964V</user>
    <text>(if the model actually has those fields, then you _can_ send the model in that case, that's pretty neat too) :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-21T03:22:30.439842</ts>
    <user>U153UK3FA</user>
    <text>another option is to use ‘extensible record' types to declare a function's specific requirements and pass the model to it.</text>
  </message>
  <message>
    <ts>2017-07-21T03:22:43.443024</ts>
    <user>U153UK3FA</user>
    <text>Richard's talk explains this more &lt;https://www.youtube.com/watch?v=DoA4Txr4GUs&gt;</text>
  </message>
  <message>
    <ts>2017-07-21T03:24:42.473174</ts>
    <user>U4872964V</user>
    <text>yes, that's what I meant by if the model actually has those fields. however, you still tie your function to your model when you do that. Refactoring the model will lead to refactoring your function. Which is ok, by the way :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-21T03:27:23.518183</ts>
    <user>U4872964V</user>
    <text>depends on what function we are talking about i suppose</text>
  </message>
  <message>
    <ts>2017-07-21T03:27:37.522085</ts>
    <user>U153UK3FA</user>
    <text>yep, it can certainly be over used. You probably don't want to do it more than a few calls down</text>
  </message>
  <message>
    <ts>2017-07-21T03:27:37.522165</ts>
    <user>U2D07QZN3</user>
    <text>I have a list of records with a "name" field.  How do I filter get a new list, where name contain a string?</text>
  </message>
  <message>
    <ts>2017-07-21T03:28:17.533159</ts>
    <user>U153UK3FA</user>
    <text>`List.filter` is the function you want</text>
  </message>
  <message>
    <ts>2017-07-21T03:28:41.539454</ts>
    <user>U153UK3FA</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/List#filter&gt;</text>
  </message>
  <message>
    <ts>2017-07-21T03:28:53.542629</ts>
    <user>U3SJEDR96</user>
    <text>I think you actually want `List.map (\record -&amp;gt; record.name) records` or - shorter yet - `List.map .name records`</text>
  </message>
  <message>
    <ts>2017-07-21T03:29:35.554083</ts>
    <user>U3SJEDR96</user>
    <text>It's a little hard to make out what you're actually after. Perhaps you could give an example of the input and what you'd like the output to be?</text>
  </message>
  <message>
    <ts>2017-07-21T03:31:29.586922</ts>
    <user>U153UK3FA</user>
    <text>`List.filter (\record -&amp;gt; String.contains "pizza" record.name) records` will give you a list that only contains records with names that contain the word "pizza"</text>
  </message>
  <message>
    <ts>2017-07-21T03:43:54.790828</ts>
    <user>U2D07QZN3</user>
    <text>that's it, thanks!</text>
  </message>
  <message>
    <ts>2017-07-21T04:06:08.186225</ts>
    <user>U37HUSJ4R</user>
    <text>If I have a 

```type Status
    = Open Time
    | Closed

type alias Time =
    { open : Int
    , closed : Int
    , message : Maybe String
    }

data : List Status
```
and I want to update a `Status` record on `data` I have a function that gets me the record I want to update, but how do I then update a union type? obv `{ record | closed = 1 } ` is incorrect</text>
  </message>
  <message>
    <ts>2017-07-21T04:08:11.224308</ts>
    <user>U37HUSJ4R</user>
    <text>where `record` is a `Status`</text>
  </message>
  <message>
    <ts>2017-07-21T04:17:56.405388</ts>
    <user>U0ULRASLC</user>
    <text>&lt;@U37HUSJ4R&gt; Hm your question is a bit confusing. Is it correct that you want to change your definition of the Time-record to where `closed : Int` becomes `closed : Status`, and after doing so you wonder how to update that field in the record?</text>
  </message>
  <message>
    <ts>2017-07-21T04:22:33.492897</ts>
    <user>U0ULRASLC</user>
    <text>ah nvm. I see what you mean now I think. I miss read the code a bit</text>
  </message>
  <message>
    <ts>2017-07-21T04:27:33.591370</ts>
    <user>U0ULRASLC</user>
    <text>What is the difference if a Status is Closed and when a Status is Open but has a Time-record with closed  = 1 ? If they mean the same you could remove one of them</text>
  </message>
  <message>
    <ts>2017-07-21T04:37:40.793654</ts>
    <user>U0ULRASLC</user>
    <text>if you have a function that takes a Status and only updates the field closed if the Status is open you could write it like this
```
updateClosedFieldIfOpen : Status -&amp;gt; Int -&amp;gt; Status
updateClosedFieldIfOpen status newClosed =
  case status of
    Open time -&amp;gt;
      Open { time | closed = newClosed }
    Closed -&amp;gt;
      Closed
```
But then again I'm not sure I understand what you want to do :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-21T06:42:06.193367</ts>
    <user>U31FGNWCT</user>
    <text>Hi everyone! When you send JSON array of objects to elm does it convert it to something? I've got a runtime error like this (cut, it's a lot longer):
```
Expecting a String but instead got: [{"id":2,"name":"Administrator","code":"admin","description":"Administrator","permissions":["
```
Trying to decode it with this:
```
type alias Row =
    { code : String
    , description : String
    , id : Int
    , name : String
    , permissions : List String
    }

thatDecoder = Decode.map5 Row
                (Decode.field "code" Decode.string)
                (Decode.field "description" Decode.string)
                (Decode.field "id" &lt;http://Decode.int|Decode.int&gt;)
                (Decode.field "name" Decode.string)
                (Decode.field "permissions" &amp;lt;| Decode.list Decode.string)
thatListDecoder = Decode.list thatDecoder

main : Program String Model Msg
...
init = (\flags -&amp;gt; (Result.withDefault [] (Decode.decodeString thatListDecoder flags), Cmd.none))
...
```</text>
  </message>
  <message>
    <ts>2017-07-21T06:53:43.378768</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U31FGNWCT&gt; You don't actually need to decode that, Elm will do it for you</text>
  </message>
  <message>
    <ts>2017-07-21T06:54:05.384559</ts>
    <user>U153UK3FA</user>
    <text>&lt;https://guide.elm-lang.org/interop/javascript.html&gt;</text>
  </message>
  <message>
    <ts>2017-07-21T06:54:12.386257</ts>
    <user>U31FGNWCT</user>
    <text>So I just pass it as flags without decoding?</text>
  </message>
  <message>
    <ts>2017-07-21T06:54:17.387408</ts>
    <user>U153UK3FA</user>
    <text>yep</text>
  </message>
  <message>
    <ts>2017-07-21T06:55:00.398783</ts>
    <user>U31FGNWCT</user>
    <text>Well, that's pretty convenient!</text>
  </message>
  <message>
    <ts>2017-07-21T06:55:12.401710</ts>
    <user>U31FGNWCT</user>
    <text>Thank you, Ill try that.=)</text>
  </message>
  <message>
    <ts>2017-07-21T07:09:01.619008</ts>
    <user>U31FGNWCT</user>
    <text>Haha! Awesome! Thank you very much &lt;@U153UK3FA&gt;!</text>
  </message>
  <message>
    <ts>2017-07-21T07:21:50.812687</ts>
    <user>U601ELFEG</user>
    <text>Hmmm... In order to use Bootstrap tooltips, you have to do some JS initialization on the DOM elements after they are created. Does Elm have a JS hook after the DOM has been created or updated?</text>
  </message>
  <message>
    <ts>2017-07-21T07:31:33.961159</ts>
    <user>U0CLDU8UB</user>
    <text>No, Elm doesn't have lifecycle hooks</text>
  </message>
  <message>
    <ts>2017-07-21T07:52:48.292502</ts>
    <user>U601ELFEG</user>
    <text>:sad_panda: : - then I'm not sure one can make use of the nice declarative tooltips in Bootstrap</text>
  </message>
  <message>
    <ts>2017-07-21T08:15:58.685747</ts>
    <user>U0CLDU8UB</user>
    <text>I suppose you don't want to use elm-bootstrap?</text>
  </message>
  <message>
    <ts>2017-07-21T08:34:36.036448</ts>
    <user>U601ELFEG</user>
    <text>well.. I didn't think I needed all that... does that have _native magic_ to get around the tooltip issue?</text>
  </message>
  <message>
    <ts>2017-07-21T08:41:31.175545</ts>
    <user>U0CLDU8UB</user>
    <text>I have no idea, I've never used Bootstrap :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-21T08:44:42.241260</ts>
    <user>U1P6FFJ64</user>
    <text>&lt;@U601ELFEG&gt; I think the packages published on &lt;http://package.elm-lang.org|package.elm-lang.org&gt; are not allowed to have native code. Just pure Elm</text>
  </message>
  <message>
    <ts>2017-07-21T08:45:58.268678</ts>
    <user>U6CGHRFN2</user>
    <text>Hi, I'm having an issue with the Date.fromString 

It returns the day before, like this:
/Date.fromString "2017-07-20"
/Ok &amp;lt;Wed Jul 19 2017 21:00:00 GMT-0300 (BRT)&amp;gt;

But if I use slashs as a separator, it comes out right:
/Date.fromString "2017/07/20"
/Ok &amp;lt;Thu Jul 20 2017 00:00:00 GMT-0300 (BRT)&amp;gt;</text>
  </message>
  <message>
    <ts>2017-07-21T08:48:23.321122</ts>
    <user>U236M9FH9</user>
    <text>&lt;@U6CGHRFN2&gt; &lt;https://stackoverflow.com/a/22959559&gt;
&lt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse#ECMAScript_5_ISO-8601_format_support&gt;</text>
  </message>
  <message>
    <ts>2017-07-21T08:54:28.454726</ts>
    <user>U6CGHRFN2</user>
    <text>&lt;@U236M9FH9&gt; that answers my question. Thank you! :smile: </text>
  </message>
  <message>
    <ts>2017-07-21T09:09:19.816716</ts>
    <user>U6B7NBTLZ</user>
    <text>Hi</text>
  </message>
  <message>
    <ts>2017-07-21T09:09:21.817517</ts>
    <user>U6B7NBTLZ</user>
    <text>Random.map2 (\pos chance -&amp;gt; { position = pos, chance = chance }) spawnPosition spawnChance</text>
  </message>
  <message>
    <ts>2017-07-21T09:09:28.820273</ts>
    <user>U6B7NBTLZ</user>
    <text>what is \ ?</text>
  </message>
  <message>
    <ts>2017-07-21T09:09:31.821394</ts>
    <user>U6B7NBTLZ</user>
    <text>:-?</text>
  </message>
  <message>
    <ts>2017-07-21T09:09:42.825664</ts>
    <user>U6B7NBTLZ</user>
    <text>\pos</text>
  </message>
  <message>
    <ts>2017-07-21T09:10:07.836471</ts>
    <user>U1P6FFJ64</user>
    <text>&lt;@U6B7NBTLZ&gt; that's an anonymous function</text>
  </message>
  <message>
    <ts>2017-07-21T09:11:47.878668</ts>
    <user>U1P6FFJ64</user>
    <text>&lt;@U6B7NBTLZ&gt; basicaly it's creating something like:
```
functionName pos chance =
  { position = pos
  , chance = chance
  }
```</text>
  </message>
  <message>
    <ts>2017-07-21T09:12:51.905969</ts>
    <user>U1P6FFJ64</user>
    <text>&lt;@U6B7NBTLZ&gt; it's on the syntax page, just above the infix operators: &lt;http://elm-lang.org/docs/syntax#infix-operators&gt;</text>
  </message>
  <message>
    <ts>2017-07-21T09:23:40.191704</ts>
    <user>U6B7NBTLZ</user>
    <text>this is all the code</text>
  </message>
  <message>
    <ts>2017-07-21T09:24:45.221548</ts>
    <user>U6B7NBTLZ</user>
    <text>it a code for a snake game</text>
  </message>
  <message>
    <ts>2017-07-21T09:25:13.234896</ts>
    <user>U6B7NBTLZ</user>
    <text>and i still can t undestand what is with that \pos</text>
  </message>
  <message>
    <ts>2017-07-21T09:25:28.241888</ts>
    <user>U6B7NBTLZ</user>
    <text>i started learning elm now 3 days :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-21T09:32:50.450784</ts>
    <user>U1P6FFJ64</user>
    <text>With `\` you create anonymous functions. Basically what is between the `\` and the `=` are the variable names.</text>
  </message>
  <message>
    <ts>2017-07-21T09:33:55.481669</ts>
    <user>U1P6FFJ64</user>
    <text>For example:

`(\a b = a + b) 2 4` will return `6`. What is between the parenthesis is the function and the next two numbers are the arguments being passed to the function.</text>
  </message>
  <message>
    <ts>2017-07-21T09:43:53.774843</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U6B7NBTLZ&gt; For example, it would be equivalent to write this on lines 418-420.
```
let
    toPixelStr x =
        round x |&amp;gt; toString
    …
in
    …
```</text>
  </message>
  <message>
    <ts>2017-07-21T09:44:54.804975</ts>
    <user>U4F64AKQV</user>
    <text>Just to be clear, the ellipsis are not part of the code. Just using them to show that there is more there that doesn't matter.</text>
  </message>
  <message>
    <ts>2017-07-21T09:50:42.983128</ts>
    <user>U6B7NBTLZ</user>
    <text>so why is it used?</text>
  </message>
  <message>
    <ts>2017-07-21T09:51:02.993304</ts>
    <user>U6B7NBTLZ</user>
    <text>if u just can simply write round i |&amp;gt; toString</text>
  </message>
  <message>
    <ts>2017-07-21T09:51:12.998551</ts>
    <user>U6B7NBTLZ</user>
    <text>why? \i -&amp;gt; round i -&amp;gt; toString</text>
  </message>
  <message>
    <ts>2017-07-21T09:54:01.085903</ts>
    <user>U6B7NBTLZ</user>
    <text>and a quick recap</text>
  </message>
  <message>
    <ts>2017-07-21T09:54:32.101333</ts>
    <user>U6B7NBTLZ</user>
    <text>\i is the name of the function</text>
  </message>
  <message>
    <ts>2017-07-21T09:54:45.108496</ts>
    <user>U6B7NBTLZ</user>
    <text>round i is what has to do</text>
  </message>
  <message>
    <ts>2017-07-21T09:55:12.122384</ts>
    <user>U6B7NBTLZ</user>
    <text>and |&amp;gt; toString is function toString that gets aribute result of round</text>
  </message>
  <message>
    <ts>2017-07-21T09:55:50.142799</ts>
    <user>U153UK3FA</user>
    <text>the function has no name</text>
  </message>
  <message>
    <ts>2017-07-21T09:56:20.158519</ts>
    <user>U153UK3FA</user>
    <text>`i` is the name of the first parameter of the function</text>
  </message>
  <message>
    <ts>2017-07-21T09:56:32.165086</ts>
    <user>U6B7NBTLZ</user>
    <text>ohhh</text>
  </message>
  <message>
    <ts>2017-07-21T09:56:34.166593</ts>
    <user>U6B7NBTLZ</user>
    <text>undestood</text>
  </message>
  <message>
    <ts>2017-07-21T09:58:07.216621</ts>
    <user>U41NK9BM4</user>
    <text>Sometimes it's just more simple *not* to name a function</text>
  </message>
  <message>
    <ts>2017-07-21T09:58:11.218950</ts>
    <user>U153UK3FA</user>
    <text>anonymous functions are useful when you need to pass a function to a function but the function you're passing isn't useful elsewhere</text>
  </message>
  <message>
    <ts>2017-07-21T09:58:56.243205</ts>
    <user>U6B7NBTLZ</user>
    <text>Makes sense</text>
  </message>
  <message>
    <ts>2017-07-21T09:58:58.244742</ts>
    <user>U6B7NBTLZ</user>
    <text>:slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-21T10:00:55.311059</ts>
    <user>U0ULRASLC</user>
    <text>but it's usually kept simple, If the anonymous function is too big it can usually be more clear to declare a regular function but within the function scope (the function that calls your anon func)</text>
  </message>
  <message>
    <ts>2017-07-21T10:02:02.348676</ts>
    <user>U41NK9BM4</user>
    <text>Yes, move that on a let block, give it a meaningful name and your code is more clear :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-21T10:02:23.360859</ts>
    <user>U6B7NBTLZ</user>
    <text>thank you :smile:</text>
  </message>
  <message>
    <ts>2017-07-21T11:02:13.369440</ts>
    <user>U601ELFEG</user>
    <text>what happens if there are two subscriptions to the same `port`? When the JS sends a value, do both fire?</text>
  </message>
  <message>
    <ts>2017-07-21T11:04:33.450728</ts>
    <user>U3FJSB596</user>
    <text>How would you implement this?</text>
  </message>
  <message>
    <ts>2017-07-21T11:06:45.526703</ts>
    <user>U601ELFEG</user>
    <text>I don't know how the runtime ties Subscriptions to ports - so I can't answer this.... but it is not inconcievable that it could queue the Msg objects and cycle them through....</text>
  </message>
  <message>
    <ts>2017-07-21T11:07:20.546389</ts>
    <user>U601ELFEG</user>
    <text>I grant that that raises "issues" with what happens while processing the first Msg ... vs. the second</text>
  </message>
  <message>
    <ts>2017-07-21T11:08:03.570898</ts>
    <user>U601ELFEG</user>
    <text>Saddly, it is very hard to compose low level things made of ports - like I can build ports to read/write `localStorage` - but seems impossible to use it from more than one place.</text>
  </message>
  <message>
    <ts>2017-07-21T11:08:12.575226</ts>
    <user>U601ELFEG</user>
    <text>So, sigh, I build more `ports`</text>
  </message>
  <message>
    <ts>2017-07-21T11:09:04.605123</ts>
    <user>U4872964V</user>
    <text>sounds like something that's easy to try :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-21T11:10:12.643546</ts>
    <user>U4872964V</user>
    <text>Re: localstorage, the best way to handle this is to only have one subscription port that sends all localstorage data, tagged appropriately in the value object</text>
  </message>
  <message>
    <ts>2017-07-21T11:20:28.987587</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U601ELFEG&gt; yes both will fire</text>
  </message>
  <message>
    <ts>2017-07-21T11:20:38.993146</ts>
    <user>U0LPMPL2U</user>
    <text>I coded up an example: &lt;https://ellie-app.com/3NXjZdPrxyJa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-21T11:35:38.506013</ts>
    <user>U601ELFEG</user>
    <text>oh - thanks!</text>
  </message>
  <message>
    <ts>2017-07-21T16:05:26.464649</ts>
    <user>U6734UL1Z</user>
    <text>hey!   so i've been tinkering with elm a bit... and i wonder, what happens when the model gets huge and complica- er, sophisticated? is there advice on how to decompose a large model?</text>
  </message>
  <message>
    <ts>2017-07-21T16:06:49.499335</ts>
    <user>U23SA861Y</user>
    <text>depends on how the model is getting complex</text>
  </message>
  <message>
    <ts>2017-07-21T16:07:23.513649</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U6734UL1Z&gt; Check out elm-spa-example. &lt;https://github.com/rtfeldman/elm-spa-example&gt;</text>
  </message>
  <message>
    <ts>2017-07-21T16:08:51.549717</ts>
    <user>U23SA861Y</user>
    <text>thats for when you really are making an SPA. What sometimes happens though is that people see a model with 10 fields and think "oh no this is too big" as a sort of instinctive reaction.</text>
  </message>
  <message>
    <ts>2017-07-21T16:09:12.558304</ts>
    <user>U23SA861Y</user>
    <text>How big is your model getting?</text>
  </message>
  <message>
    <ts>2017-07-21T16:09:42.570497</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U6734UL1Z&gt; evan czaplicki has a great talk on growing an elm file. trying to find it now. Richard Feldman has a good one as well.

Richard's talk &lt;https://www.youtube.com/watch?v=DoA4Txr4GUs&amp;amp;t=2s&gt;</text>
  </message>
  <message>
    <ts>2017-07-21T16:10:08.581488</ts>
    <user>U23SA861Y</user>
    <text>I don't know if that is published on youtube yet, but there is a direct link in random somewhere</text>
  </message>
  <message>
    <ts>2017-07-21T16:12:38.643210</ts>
    <user>U2SR9DL7Q</user>
    <text>Yeah, I think it's still unlisted on Elm Europe.</text>
  </message>
  <message>
    <ts>2017-07-21T16:12:57.651307</ts>
    <user>U23SA861Y</user>
    <text>&lt;https://www.youtube.com/watch?v=2ihTgEYiKpI&gt;</text>
  </message>
  <message>
    <ts>2017-07-21T16:13:04.653930</ts>
    <user>U23SA861Y</user>
    <text>boo yeah</text>
  </message>
  <message>
    <ts>2017-07-21T16:13:52.673360</ts>
    <user>U2SR9DL7Q</user>
    <text>awww, I just got it.</text>
  </message>
  <message>
    <ts>2017-07-21T16:20:27.089125</ts>
    <user>U6734UL1Z</user>
    <text>thanks for the resources :slightly_smiling_face: i don't yet actually have a real model to worry about.  i was just following along with someone's youtube videos... and started imaginging the possible features i might add, and wondered at how the model might grow.</text>
  </message>
  <message>
    <ts>2017-07-21T16:25:27.210317</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U6734UL1Z&gt; the advice typically given is to not rush to compartmentalize your code. As you add more and more features, at some point it becomes apparent that you have a collection of related data and functions that interact with that data that would make sense as its own module. But the threshold for "large and unwieldy" will likely be much higher than what you're used to if you're coming from a non-functional background, because the type system makes it really easy to see what everything is doing.</text>
  </message>
  <message>
    <ts>2017-07-21T17:36:08.787057</ts>
    <user>U4872964V</user>
    <text>&lt;@U6734UL1Z&gt; number one advice, and hardest to follow, is: don't worry for now. If you run into trouble we'll help you :)</text>
  </message>
  <message>
    <ts>2017-07-21T20:11:37.762432</ts>
    <user>U635238TG</user>
    <text>just curious, are the folks that help create libraries and modules for Elm doing so using Elm or Haskell?</text>
  </message>
  <message>
    <ts>2017-07-21T20:12:47.771101</ts>
    <user>U635238TG</user>
    <text>total beginner (doing the Pragmatic Studio course btw and things are really finally starting to click!) and am wondering if you also have to learn Haskell before you can ever contribute</text>
  </message>
  <message>
    <ts>2017-07-21T20:20:28.827154</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U635238TG&gt; 

People who want to contribute by writing Elm *libraries* write them in Elm, 0 haskell involved.

People who want to contribute to the Elm *compiler* use Haskell, 0 elm involved.</text>
  </message>
  <message>
    <ts>2017-07-21T20:25:00.858546</ts>
    <user>U635238TG</user>
    <text>makes total sense. thank you. i see this place dies on a friday night while I'm just over here amped to be learning Elm (and vim, git, the command line, and html/css)</text>
  </message>
  <message>
    <ts>2017-07-21T20:30:17.895281</ts>
    <user>U23SA861Y</user>
    <text>Well it picks up with bad advice after everyone is nice and liquored.</text>
  </message>
  <message>
    <ts>2017-07-21T20:31:10.901665</ts>
    <user>U2SR9DL7Q</user>
    <text>The cool kids are still here. :neutral_face:</text>
  </message>
  <message>
    <ts>2017-07-21T20:32:40.911384</ts>
    <user>U23SA861Y</user>
    <text>:beers: I can do both</text>
  </message>
  <message>
    <ts>2017-07-21T20:33:02.913857</ts>
    <user>U2SR9DL7Q</user>
    <text>after an entire day... everything compiles.</text>
  </message>
  <message>
    <ts>2017-07-21T20:33:18.915630</ts>
    <user>U23SA861Y</user>
    <text>Ship it</text>
  </message>
  <message>
    <ts>2017-07-21T20:34:35.923641</ts>
    <user>U2SR9DL7Q</user>
    <text>I... don't know how to run this update message...</text>
  </message>
  <message>
    <ts>2017-07-21T20:36:34.936382</ts>
    <user>U23SA861Y</user>
    <text>What is it?</text>
  </message>
  <message>
    <ts>2017-07-21T20:38:44.949597</ts>
    <user>U2SR9DL7Q</user>
    <text>So I have these update messages...
```
ShuffleList -&amp;gt;
            ( model, Random.generate SetGame &amp;lt;| Random.pair (shuffle model.dominoes) (Random.int 1 4) )

        SetGame ( newSet, first_num ) -&amp;gt;
            let
                players =
                    mapDominoesToPlayers model.players newSet
            in
            ( { model | dominoes = newSet, game = ActiveGame, players = players, starter = first_num }, Cmd.none )

        RunGame start_num -&amp;gt;
            if start_num == 4 then
                ( model, Cmd.none )
            else
                let
                    activePlayer =
```
So a button in my view calls `ShuffleList` which calls `SetGame` ... Now `RunGame` is the driving logic for the robot players. So I need to get RunGame going... but Rungame also needs to call itself when it's done.</text>
  </message>
  <message>
    <ts>2017-07-21T20:39:45.956152</ts>
    <user>U23SA861Y</user>
    <text>If you want a delay, Task.sleep </text>
  </message>
  <message>
    <ts>2017-07-21T20:40:00.957588</ts>
    <user>U23SA861Y</user>
    <text>Sry Process.sleep</text>
  </message>
  <message>
    <ts>2017-07-21T20:40:50.963202</ts>
    <user>U2SR9DL7Q</user>
    <text>Is that command I can pass in `SetGame`? If I use commands in `SetGame`, do they take effect before or after the model is updated?</text>
  </message>
  <message>
    <ts>2017-07-21T20:41:40.968592</ts>
    <user>U23SA861Y</user>
    <text>The model 
updates when update returns</text>
  </message>
  <message>
    <ts>2017-07-21T20:44:17.983502</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U23SA861Y&gt; I'm guessing that means the model takes effect after commands? But to be sure, in the case of `Message -&amp;gt; ( { model | canChange = change }, DoAThing )` , the thing is done before the model is updated.</text>
  </message>
  <message>
    <ts>2017-07-21T20:47:11.000489</ts>
    <user>U23SA861Y</user>
    <text>After each msg</text>
  </message>
  <message>
    <ts>2017-07-21T20:52:31.031377</ts>
    <user>U23SA861Y</user>
    <text>No the model is updated immediate and do a thing gets queued up to happen</text>
  </message>
  <message>
    <ts>2017-07-21T20:57:05.058668</ts>
    <user>U2SR9DL7Q</user>
    <text>Oh. Good. I need to look up this Process.sleep</text>
  </message>
  <message>
    <ts>2017-07-21T20:58:28.066313</ts>
    <user>U2SR9DL7Q</user>
    <text>... And learn to use tasks</text>
  </message>
  <message>
    <ts>2017-07-21T21:02:29.090831</ts>
    <user>U57KYFW67</user>
    <text>I'm still not sure why there's a distinction between commands and tasks myself</text>
  </message>
  <message>
    <ts>2017-07-21T21:04:07.099879</ts>
    <user>U23SA861Y</user>
    <text>Tasks can fail and be chained</text>
  </message>
  <message>
    <ts>2017-07-21T21:04:32.102057</ts>
    <user>U23SA861Y</user>
    <text>They indicate a result as opposed to an event</text>
  </message>
  <message>
    <ts>2017-07-21T21:05:05.105287</ts>
    <user>U57KYFW67</user>
    <text>commands are the only things that can be sent to the runtime, right?</text>
  </message>
  <message>
    <ts>2017-07-21T21:05:17.106315</ts>
    <user>U57KYFW67</user>
    <text>and you need to "lift" a task into a command to actually run it?</text>
  </message>
  <message>
    <ts>2017-07-21T21:06:15.111593</ts>
    <user>U23SA861Y</user>
    <text>Yes it needs to be transformed by specifying what to do with both success and failure.</text>
  </message>
  <message>
    <ts>2017-07-21T21:07:09.116499</ts>
    <user>U57KYFW67</user>
    <text>It came up the other day in this or &lt;#C0CJ3SBBM|general&gt; but I didn't really follow the conversation so carefully. `Random` seems to issue commands directly rather than letting you chain them with `Task`, right?</text>
  </message>
  <message>
    <ts>2017-07-21T21:07:26.118084</ts>
    <user>U57KYFW67</user>
    <text>is there a reason for that or is the design still under consideration or something like that?</text>
  </message>
  <message>
    <ts>2017-07-21T21:08:02.121483</ts>
    <user>U57KYFW67</user>
    <text>I imagine randomness can't "fail" in any meaningful way, but my intuition says it should be something like a `Task Never`</text>
  </message>
  <message>
    <ts>2017-07-21T21:09:22.128368</ts>
    <user>U23SA861Y</user>
    <text>There seems to be some implementation details that restrict it. A task may make sense however. </text>
  </message>
  <message>
    <ts>2017-07-21T21:09:31.129105</ts>
    <user>U57KYFW67</user>
    <text>I gotcha</text>
  </message>
  <message>
    <ts>2017-07-21T21:09:47.130303</ts>
    <user>U57KYFW67</user>
    <text>But ideally, it would be a task if those details were resolved you think?</text>
  </message>
  <message>
    <ts>2017-07-21T21:09:59.131446</ts>
    <user>U23SA861Y</user>
    <text>Likely it would be like Time.now   Task x value</text>
  </message>
  <message>
    <ts>2017-07-21T21:13:26.150641</ts>
    <user>U57KYFW67</user>
    <text>ah, yeah, `Task x Time` is a little more direct, even though `Task Never Time` even though the latter is a bit more principled</text>
  </message>
  <message>
    <ts>2017-07-21T21:14:08.154259</ts>
    <user>U23SA861Y</user>
    <text>It's more direct but it causes chaining issues</text>
  </message>
  <message>
    <ts>2017-07-21T21:14:56.158432</ts>
    <user>U57KYFW67</user>
    <text>right. It would require a bit of plumbing</text>
  </message>
  <message>
    <ts>2017-07-21T21:49:40.332519</ts>
    <user>U57KYFW67</user>
    <text>Question about elm make. I got around to actually packaging my program properly, putting the elm files in `src/` and tailoring everything nicely. And it builds and it compiles my modules and puts the elmo and elmi files in the `elm-stuff/` directory. But I can't figure out where (if anywhere) it is putting the compiled JS files</text>
  </message>
  <message>
    <ts>2017-07-21T21:52:20.345818</ts>
    <user>U57KYFW67</user>
    <text>Oh, it looks like I still need to specify the .elm file.</text>
  </message>
  <message>
    <ts>2017-07-21T21:53:29.351317</ts>
    <user>U57KYFW67</user>
    <text>I wonder. Is there a way to specify the file to build in the elm-package.json?</text>
  </message>
  <message>
    <ts>2017-07-21T21:55:05.358962</ts>
    <user>U23SA861Y</user>
    <text>Not that I know of</text>
  </message>
  <message>
    <ts>2017-07-21T21:55:58.363256</ts>
    <user>U57KYFW67</user>
    <text>No worries.</text>
  </message>
  <message>
    <ts>2017-07-21T21:59:10.378378</ts>
    <user>U2SR9DL7Q</user>
    <text>I have a throwaway project I set up following the tutorial that works perfectly. Can't recreate it for my existing project though... I don't really mind manual but, I have to give it another try later.</text>
  </message>
  <message>
    <ts>2017-07-21T22:00:05.382905</ts>
    <user>U2SR9DL7Q</user>
    <text>everyone seems to use a different setup though...</text>
  </message>
  <message>
    <ts>2017-07-21T23:52:35.843694</ts>
    <user>U1ZCL9GAX</user>
    <text>hi, does anyone know how to display a string unquoted in elm-repl?</text>
  </message>
  <message>
    <ts>2017-07-21T23:53:53.848706</ts>
    <user>U1ZCL9GAX</user>
    <text>i have a function that generates a multiline formatted string (of GLSL), and I want to see what it looks like with actual linebreaks, not interspersed \n escapes</text>
  </message>
  <message>
    <ts>2017-07-22T00:43:17.040298</ts>
    <user>U57KYFW67</user>
    <text>&lt;@U1ZCL9GAX&gt; Unfortunately, there's no print function in Elm. I don't think there's a way to do it --- as odd as that sounds.</text>
  </message>
  <message>
    <ts>2017-07-22T00:52:33.072526</ts>
    <user>U1ZCL9GAX</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-22T02:40:04.426131</ts>
    <user>U3SJEDR96</user>
    <text>`print : String -&amp;gt; ()` with a definition like `print = flip Debug.log ()` might work. Not sure if that escapes things, but worth a try..</text>
  </message>
  <message>
    <ts>2017-07-22T02:40:58.429869</ts>
    <user>U57KYFW67</user>
    <text>oh, I guess `Debug.log` does work in the repl... interesting</text>
  </message>
  <message>
    <ts>2017-07-22T02:55:13.476095</ts>
    <user>U3SJEDR96</user>
    <text>Also, I seem to remember that `elm-make` looks for a module named `Main` if not explicitly passed a path to an entry point. That seems like it's worth a try</text>
  </message>
  <message>
    <ts>2017-07-22T03:11:07.532779</ts>
    <user>U5W5F6QGP</user>
    <text>Is it possible to update a record member with a dynamic key? I have a feeling I've barked up the wrong tree here

```
exampleFn record key value =
    { record | key = value } 
```

Basically the same as using the `object[variablekey]` syntax in JS</text>
  </message>
  <message>
    <ts>2017-07-22T03:53:34.675515</ts>
    <user>U3SJEDR96</user>
    <text>Nope; since you have no compile-time guarantees that this key exists. One option is using a Dict, another option is using a union type to represent the updatable keys, and use a `case..of` to write the appropriate update logic for each possibility</text>
  </message>
  <message>
    <ts>2017-07-22T03:55:41.682442</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U1ZCL9GAX&gt; my suggestion actually seems to work, even if it adds some extra cruft :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-22T03:59:46.695234</ts>
    <user>U4WH8STNX</user>
    <text>&lt;@U5W5F6QGP&gt; just wanted to point out that `object[variableKey]` is one of the reasons why Elm exists :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-22T04:02:46.707890</ts>
    <user>U5W5F6QGP</user>
    <text>Yeah that's fair, I was just trying to avoid having to be super verbose about updating 300 form values in a record
I tried the route with the case of method and I was still unhappy

I've been super stubborn about avoiding dicts, I think I'm just going to bite the bullet

Thanks! </text>
  </message>
  <message>
    <ts>2017-07-22T04:04:27.713789</ts>
    <user>U4WH8STNX</user>
    <text>That's a hell of an API call :aussie_revconga_parrot:, is your use case a big form that posts *all* of the data to the server?</text>
  </message>
  <message>
    <ts>2017-07-22T04:08:04.726489</ts>
    <user>U5W5F6QGP</user>
    <text>Yeah pretty much hahah, it's just the nature of the application
There is also multiple of those forms, all of which have to have data persisted to localstorage</text>
  </message>
  <message>
    <ts>2017-07-22T04:08:27.727640</ts>
    <user>U5W5F6QGP</user>
    <text>I picked a fun one to start converting to see what my CTO thinks of elm</text>
  </message>
  <message>
    <ts>2017-07-22T04:13:53.746122</ts>
    <user>U3SJEDR96</user>
    <text>I _think_ I would attempt to describe my Form as a sort of AST, and have the view and logic be built on top of that; so you final form becomes the result of representing your actual form as that AST</text>
  </message>
  <message>
    <ts>2017-07-22T04:16:47.755763</ts>
    <user>U5W5F6QGP</user>
    <text>Yeah, there is a lot of conditional regex and validation that causes interaction between fields so it's nice and hairy

I'm just incrementally chugging along in my 10% free time at work + some home time 

I may come to the same conclusion</text>
  </message>
  <message>
    <ts>2017-07-22T04:17:08.756946</ts>
    <user>U5W5F6QGP</user>
    <text>I learn through being terrible and ruining everything though, mistakes help me a lot </text>
  </message>
  <message>
    <ts>2017-07-22T04:17:22.757753</ts>
    <user>U5W5F6QGP</user>
    <text>I always try not to jump too far ahead of myself</text>
  </message>
  <message>
    <ts>2017-07-22T04:18:44.762197</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, that's a great way to learn :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-22T04:19:28.764545</ts>
    <user>U3SJEDR96</user>
    <text>No harm in discovering (the hard way) why something doesn't work out; and you may still come to different conclusions on a way to handle this that works for you</text>
  </message>
  <message>
    <ts>2017-07-22T04:20:37.768619</ts>
    <user>U5W5F6QGP</user>
    <text>Yup, it's still easier than jumping face-first into a complex solution that you might not have needed</text>
  </message>
  <message>
    <ts>2017-07-22T04:22:53.776794</ts>
    <user>U5W5F6QGP</user>
    <text>Is there an easy way to define multiple dictionary members at once upfront? Can't see anything in the docs</text>
  </message>
  <message>
    <ts>2017-07-22T04:24:55.783660</ts>
    <user>U4WH8STNX</user>
    <text>I've cobbled something together that maybe worth considering &lt;https://ellie-app.com/3PgPmqNtYRRa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-22T04:26:20.788783</ts>
    <user>U4WH8STNX</user>
    <text>The idea is to see a mutation to your giant record as a mutation that is modelled with a union type and you just build a log of mutations and then transform this log into a server request</text>
  </message>
  <message>
    <ts>2017-07-22T04:27:03.790935</ts>
    <user>U5W5F6QGP</user>
    <text>That is a very interesting and left-field way of thinking about this problem</text>
  </message>
  <message>
    <ts>2017-07-22T04:27:09.791212</ts>
    <user>U5W5F6QGP</user>
    <text>would never have considered that, hmmm</text>
  </message>
  <message>
    <ts>2017-07-22T04:28:52.796958</ts>
    <user>U4WH8STNX</user>
    <text>I've successfully used this approach in a tedious UI - I just pushed the mutations to the server as simple json and handled the gritty details there</text>
  </message>
  <message>
    <ts>2017-07-22T04:30:03.800939</ts>
    <user>U5W5F6QGP</user>
    <text>It definitely solves it generically, the stuff it doesn't account for is like:
WHEN: these 2 fields are these 2 values
THEN: these 2 fields are mandatory
AND: these 6 fields hide
AND: these other 6 fields show</text>
  </message>
  <message>
    <ts>2017-07-22T04:30:27.802764</ts>
    <user>U5W5F6QGP</user>
    <text>I do like this approach though, and it may be very relevant to an internal tool I will be making next week</text>
  </message>
  <message>
    <ts>2017-07-22T04:34:39.817675</ts>
    <user>U4WH8STNX</user>
    <text>true, if you need your current state you have to jump through some hoops. It is fun to think about, so basically what you would have is a "read-view" that holds the current state to your eventlog and that is being updated every time a mutation is registered and that you want to apply logic to... in that case the 300 explicit fields approach seems the only sane choice if you're not going to make a prototype only consisting of hacks *g*</text>
  </message>
  <message>
    <ts>2017-07-22T04:34:46.818000</ts>
    <user>U3SJEDR96</user>
    <text>re defining entries in a dict up-front - `Dict.fromList [ ( "key", "val" ), ( "other", "otherVal" ) ]`</text>
  </message>
  <message>
    <ts>2017-07-22T04:36:14.823045</ts>
    <user>U5W5F6QGP</user>
    <text>Thanks Ilias :pray:

That sounds like it would work, I think I'll try it out on that internal tool (smaller scale, less hoops, but still annoying) and see how it feels

I really appreciate you going above and beyond with that little ellie sample, thanks heaps!</text>
  </message>
  <message>
    <ts>2017-07-22T04:42:24.845340</ts>
    <user>U4WH8STNX</user>
    <text>In a run-off-the-mill eventsourced system your dependency logic would be expressed as a saga, you still would have to have a way of expressing "the current state" and somehow let that knowledge flow through the types. I'll meditate on that, sounds interesting</text>
  </message>
  <message>
    <ts>2017-07-22T06:25:29.200384</ts>
    <user>U5W5F6QGP</user>
    <text>There wouldn't happen to be any good way to pretty much 1-for-1 "json stringify" a section of my model would there?
The fight with encoders has pretty much broken my spirit for now</text>
  </message>
  <message>
    <ts>2017-07-22T06:27:10.206105</ts>
    <user>U57KYFW67</user>
    <text>I don't think there's currently any way to create a Json encoder or decoder automatically</text>
  </message>
  <message>
    <ts>2017-07-22T06:27:22.206786</ts>
    <user>U57KYFW67</user>
    <text>It's a feature that will surely show up..... eventually....</text>
  </message>
  <message>
    <ts>2017-07-22T06:27:26.207023</ts>
    <user>U2J1FUQTZ</user>
    <text>I need to write a little parser for Prolog terms, which parser package you suggest to use? There are too many :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-22T06:29:22.213507</ts>
    <user>U5W5F6QGP</user>
    <text>Yeah that's fair, I may have to wuss-out to javascript for this one in that case
the encoder would be absolutely massive</text>
  </message>
  <message>
    <ts>2017-07-22T06:29:43.214647</ts>
    <user>U5W5F6QGP</user>
    <text>it was going so well up until now :disappointed:</text>
  </message>
  <message>
    <ts>2017-07-22T06:30:09.216214</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U2J1FUQTZ&gt; I recommend `elm-tools/parser`</text>
  </message>
  <message>
    <ts>2017-07-22T06:32:04.223549</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5W5F6QGP&gt; writing encoders for records can be a little tedious, though it pays off when you represent your internal state differently from how the API needs it. Now, if you have a `Dict String String`, you could `Dict.toList |&amp;gt; List.map (Tuple.mapSecond Encode.string) |&amp;gt; Encode.object` :wink:</text>
  </message>
  <message>
    <ts>2017-07-22T06:32:39.225595</ts>
    <user>U5W5F6QGP</user>
    <text>I actually have an Array (Dict String String)</text>
  </message>
  <message>
    <ts>2017-07-22T06:32:53.226441</ts>
    <user>U3SJEDR96</user>
    <text>Oh. What seems to be the problem for writing the encoder, then?</text>
  </message>
  <message>
    <ts>2017-07-22T06:33:00.226816</ts>
    <user>U2J1FUQTZ</user>
    <text>thx &lt;@U3SJEDR96&gt; , it supports recursive parser?</text>
  </message>
  <message>
    <ts>2017-07-22T06:33:58.229890</ts>
    <user>U3SJEDR96</user>
    <text>Sure. It's a good old parser/combinator library that works on character-chomping with delayed commits, and has the regular "forced laziness" for defining recursive values.</text>
  </message>
  <message>
    <ts>2017-07-22T06:34:13.230747</ts>
    <user>U5W5F6QGP</user>
    <text>Well now I'm discovering the problem may be my own incompetence here</text>
  </message>
  <message>
    <ts>2017-07-22T06:34:22.231288</ts>
    <user>U5W5F6QGP</user>
    <text>I have hope again now</text>
  </message>
  <message>
    <ts>2017-07-22T06:35:04.233660</ts>
    <user>U2J1FUQTZ</user>
    <text>Ok perfect, thx again &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-22T06:44:12.265160</ts>
    <user>U5W5F6QGP</user>
    <text>hmm &lt;@U3SJEDR96&gt; I'm getting 
```
(Dict comparable String -&amp;gt; List ( comparable, String )) -&amp;gt; a

But the right side is:

(List ( comparable, String )) -&amp;gt; List ( comparable, Encode.Value )
```
I double-checked the docs for Tuple.mapSecond and everything there seems to make sense to me

Any ideas?</text>
  </message>
  <message>
    <ts>2017-07-22T06:45:39.269944</ts>
    <user>U3SJEDR96</user>
    <text>Hm, can you show the actual code? My example up there ^ is missing the actual `yourDict |&amp;gt; ` in front of it, so maybe that's it?</text>
  </message>
  <message>
    <ts>2017-07-22T06:47:03.274976</ts>
    <user>U5W5F6QGP</user>
    <text>nope, you were right, for some reason I assumed you could just assign that to a function and it would leave a pipeline waiting for an initial value</text>
  </message>
  <message>
    <ts>2017-07-22T06:47:38.277031</ts>
    <user>U3SJEDR96</user>
    <text>Oh, you can, if you replace `|&amp;gt;` with `&amp;gt;&amp;gt;` to compose the functions</text>
  </message>
  <message>
    <ts>2017-07-22T06:51:13.288997</ts>
    <user>U6D41LX7Y</user>
    <text>hello, I am new to elm and was wondering how stable to syntax is going to be moving forward?</text>
  </message>
  <message>
    <ts>2017-07-22T06:54:36.299361</ts>
    <user>U3SJEDR96</user>
    <text>Things aren't set in stone, but I don't expect _huge_ changes anytime soon. Good to know: new versions of the language usually come with tooling to convert old code; both in terms of syntax as well as the core libraries changing</text>
  </message>
  <message>
    <ts>2017-07-22T06:56:37.306016</ts>
    <user>U2Q5GJNTB</user>
    <text>I want to have html links and lists embedded in a string/text block and elm-markdown seems to be a solution. However it generates a &amp;lt;code&amp;gt;&amp;lt;pre&amp;gt; block around my text and unfortunately the marked native implementation is not understandable for me. Did anybody so something similar in the past and knows the reason? I just want to convert the text into regular html in a div or something similar.</text>
  </message>
  <message>
    <ts>2017-07-22T06:58:11.311225</ts>
    <user>U3SJEDR96</user>
    <text>Your string is probably indented by 3 or more spaces</text>
  </message>
  <message>
    <ts>2017-07-22T06:59:52.316654</ts>
    <user>U2Q5GJNTB</user>
    <text>I will check that, because for simple test string it worked as expected. Give me a sec</text>
  </message>
  <message>
    <ts>2017-07-22T07:00:38.320304</ts>
    <user>U2Q5GJNTB</user>
    <text>that would be a really shameful outcome …</text>
  </message>
  <message>
    <ts>2017-07-22T07:02:15.326581</ts>
    <user>U2Q5GJNTB</user>
    <text>&lt;@U3SJEDR96&gt; thanks that was it. Sorry, I should have considered that… However thanks for your help, I can continue now :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-22T07:03:47.331476</ts>
    <user>U3SJEDR96</user>
    <text>That's really nothing to feel ashamed or sorry over - it's easy to spot once you know what to look for; but knowing what to look for is not that obvious :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-22T07:23:46.398464</ts>
    <user>U1ZCL9GAX</user>
    <text>&lt;@U3SJEDR96&gt; your definition of ptint works perfectly, thanks!</text>
  </message>
  <message>
    <ts>2017-07-22T07:33:06.430950</ts>
    <user>U27KX9MEJ</user>
    <text>Hello! 
Can anyone help me with understanding of how to reduce boilerplate code of this 
 ```
changeLoadingState : WidgetState -&amp;gt; WidgetState
changeLoadingState widgetState =
    case widgetState of
        TableState rec -&amp;gt;
            TableState { rec | loadingState = Loading }

        ListState rec -&amp;gt;
            ListState { rec | loadingState = Loading }

        _ -&amp;gt;
            widgetState
 ```

I have a WidgetState union type that can be any type of widget, Any widget type contains its own state record. Some of widget records contains loadingState boolean. 
I want to change loadingState if it exists in the record without defining all of the types like condition
Can anyone help with this?  i have lots of widgets that contains loadingState and it seems such not as good solution to make definitions of changings loadingState for all of it</text>
  </message>
  <message>
    <ts>2017-07-22T07:37:26.446086</ts>
    <user>U27KX9MEJ</user>
    <text>i need to find a way to write something like this 
```
changeLoadingState :WidgetState -&amp;gt; WidgetState 
changeLoadingState widgetState = 
    case widgetState of 
        ANY_TYPE_OF_WIDGET {record | loadingState : Bool} -&amp;gt; ANY_TYPE_OF_WIDGET  {record |loadingState = Loading} 
        _ -&amp;gt; widgetState 
```</text>
  </message>
  <message>
    <ts>2017-07-22T07:41:13.459552</ts>
    <user>U0JBSEGHY</user>
    <text>Can someone show an example of how Dict.filter works? I can't get anything to compile.</text>
  </message>
  <message>
    <ts>2017-07-22T07:42:36.464414</ts>
    <user>U3SJEDR96</user>
    <text>`Dict.fromList [ ( "1", "pizza", ) ( "2", "beer" ) ] |&amp;gt; Dict.filter (\key value -&amp;gt; value == "pizza")`</text>
  </message>
  <message>
    <ts>2017-07-22T07:42:56.465508</ts>
    <user>U3SJEDR96</user>
    <text>(I didn't do anything with the `key` there, but the point is that you could</text>
  </message>
  <message>
    <ts>2017-07-22T07:43:50.468261</ts>
    <user>U27KX9MEJ</user>
    <text>For better understanding of my problem that is how i will solve my problem in JS way
```
function changeWidgetLoadingState(widgetState) {
    if (typeof widgetState.loadingState !== "undefined") {
        return widgetState.loadingState = true;
    }
    return widgetState;
}
```</text>
  </message>
  <message>
    <ts>2017-07-22T07:44:04.468927</ts>
    <user>U0JBSEGHY</user>
    <text>In particular I am trying to figure out how I can get the metas value here. I want the list from metas ```Dict.fromList [("Wade",{ metas = [{ phx_ref = "9/h8FB43bsE=", payload = { online_at = "1500723777", device = "browser" } }] })]```</text>
  </message>
  <message>
    <ts>2017-07-22T07:45:02.471950</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U27KX9MEJ&gt; so you have a union type where the "content" is always the same?</text>
  </message>
  <message>
    <ts>2017-07-22T07:45:41.474301</ts>
    <user>U27KX9MEJ</user>
    <text>no, some of my content records does not have "loadingState" bool</text>
  </message>
  <message>
    <ts>2017-07-22T07:46:23.476820</ts>
    <user>U3SJEDR96</user>
    <text>Ah. Then you'll need to be explicit about it :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-22T07:47:15.479753</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U0JBSEGHY&gt; and what do you have to _do_ with those metas?</text>
  </message>
  <message>
    <ts>2017-07-22T07:47:51.481811</ts>
    <user>U27KX9MEJ</user>
    <text>&lt;@U3SJEDR96&gt; Bad news because i have a large list of widget types ;(</text>
  </message>
  <message>
    <ts>2017-07-22T07:48:04.482512</ts>
    <user>U0JBSEGHY</user>
    <text>Well each one of those Dicts inside the Meta list has details I would like to extract and show</text>
  </message>
  <message>
    <ts>2017-07-22T07:48:40.484541</ts>
    <user>U0JBSEGHY</user>
    <text>But right now I just want to count how many there are. As each one is a presence state of a user. So they may have multiple presence states across different devices etc.</text>
  </message>
  <message>
    <ts>2017-07-22T07:49:15.486307</ts>
    <user>U0JBSEGHY</user>
    <text>Like count attached to meta</text>
  </message>
  <message>
    <ts>2017-07-22T07:49:17.486418</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U27KX9MEJ&gt; Right. I would try to see if you can't structure your data better..</text>
  </message>
  <message>
    <ts>2017-07-22T07:50:45.491914</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U0JBSEGHY&gt; gotcha. So you would actually use `map` rather than `filter` - `filter` is to remove entries for the dictionary that don't match a predicate; `map` is to transform values. You could do something like `Dict.map (\v -&amp;gt; List.length v.metas) yourDict` for example</text>
  </message>
  <message>
    <ts>2017-07-22T07:50:45.491995</ts>
    <user>U0JBSEGHY</user>
    <text>This is the package I am using.&lt;http://package.elm-lang.org/packages/fbonetti/elm-phoenix-socket/2.2.0/Phoenix-Presence&gt;</text>
  </message>
  <message>
    <ts>2017-07-22T07:52:17.497406</ts>
    <user>U0JBSEGHY</user>
    <text>At the bottom of the docs there is `listDefault` and `list` which gets me close to what I want. `listDefault` shows all the `metas` but I lost the name of the person. So I would like to somehow map over each person and count their `meta` lists.</text>
  </message>
  <message>
    <ts>2017-07-22T07:54:53.505857</ts>
    <user>U27KX9MEJ</user>
    <text>&lt;@U3SJEDR96&gt; Ok, but what if we suppose that content-records of my union type always have the same loadingState? (but ofcourse not exactly the same). Is there any way to pattern match this?</text>
  </message>
  <message>
    <ts>2017-07-22T07:56:24.511381</ts>
    <user>U3SJEDR96</user>
    <text>No, but they you'd be able to represent the whole thing differently - `type Widget = Widget { type_ : widgetType, loading : Bool, ... }`</text>
  </message>
  <message>
    <ts>2017-07-22T07:56:31.511755</ts>
    <user>U0JBSEGHY</user>
    <text>I was actually thinking like a `map` `filter` `listDefault` or something along those lines would get me the `metas` individually</text>
  </message>
  <message>
    <ts>2017-07-22T07:57:34.515055</ts>
    <user>U0JBSEGHY</user>
    <text>So I get the `keys` to the `Dict` then I do a `map` using the keys. Filter the `Dict` then use the listDefault to extract the metas.</text>
  </message>
  <message>
    <ts>2017-07-22T07:58:47.519032</ts>
    <user>U0JBSEGHY</user>
    <text>Actually that still wouldnt' get me it lol</text>
  </message>
  <message>
    <ts>2017-07-22T08:00:27.526131</ts>
    <user>U27KX9MEJ</user>
    <text>&lt;@U3SJEDR96&gt; thank you for help, but as far as i understand we can't use type as variable like this?
```
test : WidgetState -&amp;gt; WidgetState
test widgetState =
    case widgetState of
        widgetStateWithLoadingState { rec | loadingState : Bool} -&amp;gt;
            widgetStateWithLoadingState { rec | loadingState = True }
        _ -&amp;gt;
            widgetState
```</text>
  </message>
  <message>
    <ts>2017-07-22T08:01:34.531078</ts>
    <user>U3SJEDR96</user>
    <text>Correct - trying to that _usually_ means your data can be structured differently</text>
  </message>
  <message>
    <ts>2017-07-22T08:02:29.534646</ts>
    <user>U27KX9MEJ</user>
    <text>how can i share with you my structure for better understanding?</text>
  </message>
  <message>
    <ts>2017-07-22T08:03:25.538026</ts>
    <user>U27KX9MEJ</user>
    <text>what do you need to know about it?
```
type WidgetState
    = TabsState TabsStateRecord
    | SidebarState SidebarStateRecord
    | ComboboxState ComboboxStateRecord
    | FormState FormStateRecord
    | TableState TableStateRecord
    | FileManagerState FileManagerStateRecord
    | ListState ListStateRecord
   ...
```</text>
  </message>
  <message>
    <ts>2017-07-22T08:04:40.542395</ts>
    <user>U27KX9MEJ</user>
    <text>```
type alias TabsStateRecord =
    { active : String
    }
type alias TableStateRecord =
    { selector : Selector
    , options : Bool
    , minimizedGroups : List String
    , modals : Dict String ModalBoxRecord
    , selected : List String
    , loadingState : LoadingState
    }
```
That's example of state record with loadingState and witout it.</text>
  </message>
  <message>
    <ts>2017-07-22T08:08:59.558139</ts>
    <user>U0JBSEGHY</user>
    <text>&lt;@U3SJEDR96&gt; doesn't a map just transform what it maps over though?</text>
  </message>
  <message>
    <ts>2017-07-22T08:09:40.560550</ts>
    <user>U0JBSEGHY</user>
    <text>I really want to map over the Dict and cause a side effect</text>
  </message>
  <message>
    <ts>2017-07-22T08:10:13.562565</ts>
    <user>U3SJEDR96</user>
    <text>That's a pretty complex structure. One option is to create a `type Widget = Instant InstantWidgetState | Deferred Bool DeferredWidgetState` where those two `WidgetState` types are sub-sets of your current `WidgetState`. Then again, is it really that bad to define this one function? It seems like you're using pretty heavy encapsulation, and that leads to more code to reach into separate cases.</text>
  </message>
  <message>
    <ts>2017-07-22T08:10:33.564028</ts>
    <user>U0JBSEGHY</user>
    <text>The dot notation doesn't seem to help me either</text>
  </message>
  <message>
    <ts>2017-07-22T08:10:37.564370</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U0JBSEGHY&gt; - What side-effect are you trying to cause? I'm not sure I'm following?</text>
  </message>
  <message>
    <ts>2017-07-22T08:11:20.567171</ts>
    <user>U0JBSEGHY</user>
    <text>Given this ```Dict.fromList [("Jazz",{ metas = [{ phx_ref = "/cEkW0uji8g=", payload = { online_at = "1500725263", device = "browser" } }] }),("Wade",{ metas = [{ phx_ref = "mIHOmevHztc=", payload = { online_at = "1500725467", device = "browser" } },{ phx_ref = "pxEwxgqeucY=", payload = { online_at = "1500725252", device = "browser" } }] })]```</text>
  </message>
  <message>
    <ts>2017-07-22T08:11:36.568114</ts>
    <user>U0JBSEGHY</user>
    <text>I want to be able to count how many sessions each user has and show them.</text>
  </message>
  <message>
    <ts>2017-07-22T08:12:51.572544</ts>
    <user>U0JBSEGHY</user>
    <text>`listDefault` in the package provides me with this when I provide the `Dict` ```[{ metas = [{ phx_ref = "uKpvL9lGfw0=", payload = { online_at = "1500725539", device = "browser" } }] },{ metas = [{ phx_ref = "RW6kKhTyRRo=", payload = { online_at = "1500725535", device = "browser" } },{ phx_ref = "RqT4Wmqtw6A=", payload = { online_at = "1500725531", device = "browser" } }] }]```</text>
  </message>
  <message>
    <ts>2017-07-22T08:13:20.574203</ts>
    <user>U0JBSEGHY</user>
    <text>Maybe I am just looking at this the wrong way.</text>
  </message>
  <message>
    <ts>2017-07-22T08:13:25.574443</ts>
    <user>U3SJEDR96</user>
    <text>`yourDict |&amp;gt; Dict.map (.metas &amp;gt;&amp;gt; List.length) |&amp;gt;Dict.toList |&amp;gt; List.indexedMap (\(name, numberofMetas) -&amp;gt; Html.text &amp;lt;| name ++ " has " ++ toString numberofMetas ++ " metas")`</text>
  </message>
  <message>
    <ts>2017-07-22T08:13:57.576284</ts>
    <user>U3SJEDR96</user>
    <text>`listDefault` is really just `Dict.values`, apparently</text>
  </message>
  <message>
    <ts>2017-07-22T08:14:16.577339</ts>
    <user>U0JBSEGHY</user>
    <text>Oh true it is.</text>
  </message>
  <message>
    <ts>2017-07-22T08:14:19.577521</ts>
    <user>U27KX9MEJ</user>
    <text>&lt;@U3SJEDR96&gt;  yes, that's bad to define a way like this because i have a lots functions like makeWidgetLoad And every time when i want to add new widget i need to rewrite every function written this way;( I have pretty big app and wanted to make refactorring simplier. But thank you in advance i very appriciate Elm community. Elm really cool language</text>
  </message>
  <message>
    <ts>2017-07-22T08:16:10.584795</ts>
    <user>U27KX9MEJ</user>
    <text>&lt;@U3SJEDR96&gt; That would be a great feature if we can to do pattern matching with union types and if we will get ability to use types as variables in this patterns? :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-22T08:16:41.586653</ts>
    <user>U0JBSEGHY</user>
    <text>What does `&amp;gt;&amp;gt;` do?</text>
  </message>
  <message>
    <ts>2017-07-22T08:17:19.588963</ts>
    <user>U3SJEDR96</user>
    <text>`(\foo -&amp;gt; foo |&amp;gt; .metas |&amp;gt;  List.length)` == `.metas &amp;gt;&amp;gt; List.length`</text>
  </message>
  <message>
    <ts>2017-07-22T08:18:25.593157</ts>
    <user>U0JBSEGHY</user>
    <text>so its is like `foo.metas |&amp;gt; List.length`</text>
  </message>
  <message>
    <ts>2017-07-22T08:18:35.593835</ts>
    <user>U3SJEDR96</user>
    <text>yeah, exactly :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-22T08:19:32.597116</ts>
    <user>U3SJEDR96</user>
    <text>`foo.bar` is the same as `.bar foo`, where `.bar : { b | bar : a } -&amp;gt; b -&amp;gt; a`, in other words it just returns the value of a named field in a record</text>
  </message>
  <message>
    <ts>2017-07-22T08:20:15.599689</ts>
    <user>U0JBSEGHY</user>
    <text>This is what is tripping me up. Not sure what these types mean ```Function `map` is expecting the argument to be:

    comparable -&amp;gt; a -&amp;gt; b

But it is:

    { b | metas : List a } -&amp;gt; Int```</text>
  </message>
  <message>
    <ts>2017-07-22T08:21:35.604858</ts>
    <user>U3SJEDR96</user>
    <text>Ooh, right, I completely forgot that `Dict.map` takes the key, too :smile:</text>
  </message>
  <message>
    <ts>2017-07-22T08:22:05.606687</ts>
    <user>U3SJEDR96</user>
    <text>Try `Dict.map (\key val -&amp;gt; val.metas |&amp;gt; List.length)` instead</text>
  </message>
  <message>
    <ts>2017-07-22T08:22:46.609236</ts>
    <user>U0JBSEGHY</user>
    <text>Yea I did that earlier but was still being tripped up somewhere. I'll add those in.</text>
  </message>
  <message>
    <ts>2017-07-22T08:28:09.628911</ts>
    <user>U0JBSEGHY</user>
    <text>```The argument to function `indexedMap` is causing a mismatch.

203|                                        List.indexedMap (\( name, numberofMetas ) -&amp;gt; name ++ " has " ++ toString numberofMetas ++ " metas")
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Function `indexedMap` is expecting the argument to be:

    Int -&amp;gt; a -&amp;gt; b

But it is:

    ( String, a ) -&amp;gt; String```</text>
  </message>
  <message>
    <ts>2017-07-22T08:31:05.640785</ts>
    <user>U41NK9BM4</user>
    <text>`indexedMap` pass you a index, so I would try with `\(index (name, numberofMetas))`</text>
  </message>
  <message>
    <ts>2017-07-22T08:31:42.643215</ts>
    <user>U3SJEDR96</user>
    <text>oh, you don't need `indexedMap` there. -_-</text>
  </message>
  <message>
    <ts>2017-07-22T08:32:07.644670</ts>
    <user>U41NK9BM4</user>
    <text>Maybe he forgot to use the index? :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-22T08:32:28.645962</ts>
    <user>U41NK9BM4</user>
    <text>Anyway something is wrong…</text>
  </message>
  <message>
    <ts>2017-07-22T08:32:34.646266</ts>
    <user>U3SJEDR96</user>
    <text>nah, it's mapping of the a `Dict.toList` which gives a `(String, a)` so you already have "the index"</text>
  </message>
  <message>
    <ts>2017-07-22T08:32:46.646939</ts>
    <user>U0JBSEGHY</user>
    <text>Yea cool</text>
  </message>
  <message>
    <ts>2017-07-22T08:32:48.647092</ts>
    <user>U41NK9BM4</user>
    <text>That is, the string?</text>
  </message>
  <message>
    <ts>2017-07-22T08:33:07.648168</ts>
    <user>U0JBSEGHY</user>
    <text>I was trying to avoid Dict.toList earlier but that is obviously a mistake haha</text>
  </message>
  <message>
    <ts>2017-07-22T08:33:17.648760</ts>
    <user>U41NK9BM4</user>
    <text>makes sense</text>
  </message>
  <message>
    <ts>2017-07-22T08:35:44.657337</ts>
    <user>U41NK9BM4</user>
    <text>I've just used `Dict.foldl` for the first time: there must be some "Achievement unlocked" for this kind of things  :joy:</text>
  </message>
  <message>
    <ts>2017-07-22T08:37:11.662822</ts>
    <user>U0JBSEGHY</user>
    <text>We need Elm badges</text>
  </message>
  <message>
    <ts>2017-07-22T08:39:35.671702</ts>
    <user>U0JBSEGHY</user>
    <text>I feel like a mega noob haha. I'm literally recompiling heaps of different things in `Debug.log`</text>
  </message>
  <message>
    <ts>2017-07-22T11:17:37.362449</ts>
    <user>U4RR7KX45</user>
    <text>hello elmers. I'm trying to implement the following library in my elm app:
&lt;https://github.com/RubaXa/Sortable&gt;

And I can't figure out how to pass the dom element to it?

it accepts an element like so
```
new Sortable(el, options);
```</text>
  </message>
  <message>
    <ts>2017-07-22T11:18:39.367307</ts>
    <user>U4RR7KX45</user>
    <text>so I'm trying to pass an element to it via ports, but I just can't figure out how to get an actual dom element from Elm</text>
  </message>
  <message>
    <ts>2017-07-22T11:18:42.367605</ts>
    <user>U4RR7KX45</user>
    <text>is that even possible?</text>
  </message>
  <message>
    <ts>2017-07-22T11:22:37.387461</ts>
    <user>U3SJEDR96</user>
    <text>That's unlikely to play nice with Elm; since it changes the DOM in a way that Elm isn't aware of...</text>
  </message>
  <message>
    <ts>2017-07-22T11:23:44.392507</ts>
    <user>U3SJEDR96</user>
    <text>As for getting an element, you'd assign it an id and extract it from the document using `document.getElementById(..)`, but I suspect you'll see unexpected behaviour using this with Elm...</text>
  </message>
  <message>
    <ts>2017-07-22T12:12:35.647465</ts>
    <user>U2Q1KN06T</user>
    <text>how are larger SPA type applications handled in Elm? It seems to me that the `update msg model` function needs to know how to handle/dispatch every type of message that could be generated? Which doesn't seem to allow easy use of components?</text>
  </message>
  <message>
    <ts>2017-07-22T12:15:45.663888</ts>
    <user>U236M9FH9</user>
    <text>You can nest messages inside one another and dispatch submessages to their own update functions</text>
  </message>
  <message>
    <ts>2017-07-22T12:17:08.670950</ts>
    <user>U236M9FH9</user>
    <text>"components" are typically just messages and update/view functions, if they require internal state, they'll provide a type &amp;amp; the values for you to store somewhere in your model</text>
  </message>
  <message>
    <ts>2017-07-22T12:19:05.680658</ts>
    <user>U236M9FH9</user>
    <text>It's not as simple as `import antigravity` but I see it as an additional form of documentation</text>
  </message>
  <message>
    <ts>2017-07-22T12:19:25.682319</ts>
    <user>U2Q1KN06T</user>
    <text>&lt;@U236M9FH9&gt; OK.. I _think_ I understand… it does seem to me like there's a deliberate design decision to force you to think about this at the top-most `update msg model` point?</text>
  </message>
  <message>
    <ts>2017-07-22T12:20:09.685814</ts>
    <user>U2Q1KN06T</user>
    <text>in a larger SPA style application it feels like that function would attract a *lot* of code</text>
  </message>
  <message>
    <ts>2017-07-22T12:20:53.689780</ts>
    <user>U2Q1KN06T</user>
    <text>less so in a regular single page per URL scenario.</text>
  </message>
  <message>
    <ts>2017-07-22T12:22:33.698250</ts>
    <user>U236M9FH9</user>
    <text>At the top-most point, I'm usually just dispatching to other update functions</text>
  </message>
  <message>
    <ts>2017-07-22T12:24:07.705861</ts>
    <user>U2Q1KN06T</user>
    <text>ah,, I think this is falling into place..</text>
  </message>
  <message>
    <ts>2017-07-22T12:24:18.706813</ts>
    <user>U3SJEDR96</user>
    <text>When building an SPA in Elm, each page will typically have each of state, update and view; with the "main" program just dispatching messages and otherwise gluing things together. The important insight is that this abstraction boundary works great for pages, but less so for other, "smaller" components</text>
  </message>
  <message>
    <ts>2017-07-22T12:24:51.709373</ts>
    <user>U2Q1KN06T</user>
    <text>&lt;@U3SJEDR96&gt; Ah!</text>
  </message>
  <message>
    <ts>2017-07-22T12:25:06.710694</ts>
    <user>U2Q1KN06T</user>
    <text>:bulb:</text>
  </message>
  <message>
    <ts>2017-07-22T12:25:57.715046</ts>
    <user>U2SR9DL7Q</user>
    <text>noob question time ... 
I have this menu item in my view (I'm using elm-mdl) 
```
dominoToMenuItem : Domino -&amp;gt; Menu.Item Msg
dominoToMenuItem domino =
    Menu.Item [ Options.onClick PlayerResponse domino ]
        [ text &amp;lt;| "(" ++ toString ((\(Domino x _) -&amp;gt; x) domino)
```
This accepts a `Domino` and makes a menu button with it. When the menu button is clicked, it _should_ call the `PlayerResponse` update with the domino as a parameter.  

When I try though, it says either `onClick` expects a single parameter, or `PlayerResponse` is not a function, so shouldn't accept any arguments. 
`PlayerResponse` is implemented as 
```
type Msg
    = NoOp
    | Mdl (Material.Msg Msg)
    | OnLocationChange Navigation.Location
    | ChangeLocation String
    | SetGame ( List Domino, Int )
    | ShuffleList
    | RunGame
    | ResolveTurn Int
    | PlayerResponse Domino
```
and in my update function as 
```
        PlayerResponse domino -&amp;gt;
            ( model, Cmd.none )
```
If I remove the "domino" argument, then it compiles, which seems... odd.</text>
  </message>
  <message>
    <ts>2017-07-22T12:28:21.727142</ts>
    <user>U236M9FH9</user>
    <text>I dunno elm-mdl, but you probably want something like `Options.onClick &amp;lt;| PlayResponse domino`?</text>
  </message>
  <message>
    <ts>2017-07-22T12:28:32.727938</ts>
    <user>U3SJEDR96</user>
    <text>There used to be a time where "nesting TEA" (i.e. giving every piece its own state, messages, update and view) was the recommended approach. We've collectively changed our opinion, since, to find a nice balance. Is it a view? Make it a view, maybe pass in functions to construct messages to react to events. Does it need its own messages? Give it messages. Does it need encapsulated state? Add state :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-22T12:28:40.728540</ts>
    <user>U2Q1KN06T</user>
    <text>&lt;@U3SJEDR96&gt; &lt;@U236M9FH9&gt; Thanks :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-22T12:31:04.740486</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U236M9FH9&gt; that prompts the "PlayerResponse is not a function" complaint. `onClick` btw has the type signature `msg -&amp;gt; Property c msg` ... I've used it before for update messages _without_ parameters with no trouble.</text>
  </message>
  <message>
    <ts>2017-07-22T12:31:57.745365</ts>
    <user>U3SJEDR96</user>
    <text>then something else must be going wrong, since your `type Msg` indicates that `PlayerResponse` really is a function :confused:</text>
  </message>
  <message>
    <ts>2017-07-22T12:34:16.756814</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U3SJEDR96&gt; I've been working on this almost non-stop for a week now and this is the final step :neutral_face: ... I wonder if I need to maybe use a generic function that itself calls an update function? I shall test.</text>
  </message>
  <message>
    <ts>2017-07-22T12:35:15.761370</ts>
    <user>U236M9FH9</user>
    <text>&lt;@U2SR9DL7Q&gt; Yeah, so `onClick` takes one argument, but by saying `onClick PlayerResponse domino`, you are passing it two, `PlayerResponse` and `domino`. You need to apply domino to PlayerResponse first, then pass that to onClick, using parentheses `onClick (PlayerResponse domino)`</text>
  </message>
  <message>
    <ts>2017-07-22T12:36:06.765536</ts>
    <user>U236M9FH9</user>
    <text>and `onClick &amp;lt;| PlayerResponse domino` is the same as `onClick (PlayerResponse domino)` &amp;amp; `PlayerResponse domino |&amp;gt; onClick`.</text>
  </message>
  <message>
    <ts>2017-07-22T12:36:36.767990</ts>
    <user>U236M9FH9</user>
    <text>for PlayerResponse is not a function, check your message type to make sure you added `Domino` back in</text>
  </message>
  <message>
    <ts>2017-07-22T12:38:23.776505</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U236M9FH9&gt; I've tried that both ways unfortunately. Using parens or the '&amp;lt;|' operator procs the "not a function" error. Without any of those is the "too many args to onClick" error. I sent you the version without (PlayerResponse domino) but I've already added it back. The PlayerResponse type message has Domino set in place.</text>
  </message>
  <message>
    <ts>2017-07-22T12:41:32.792483</ts>
    <user>U236M9FH9</user>
    <text>Try this:
```
$ elm repl
&amp;gt; import Messages exposing (..)
&amp;gt; PlayerMessage
```</text>
  </message>
  <message>
    <ts>2017-07-22T12:42:28.797295</ts>
    <user>U236M9FH9</user>
    <text>Is it `Domino -&amp;gt; Msg`?</text>
  </message>
  <message>
    <ts>2017-07-22T12:46:18.815776</ts>
    <user>U2SR9DL7Q</user>
    <text>Cool! All my other messages requiring input are functions like that... but PlayerResponse just comes out as Msg</text>
  </message>
  <message>
    <ts>2017-07-22T12:46:43.817837</ts>
    <user>U2SR9DL7Q</user>
    <text>Like it's not recognizing Domino at all</text>
  </message>
  <message>
    <ts>2017-07-22T12:47:26.821430</ts>
    <user>U236M9FH9</user>
    <text>Huh... Try `rm -rf elm-stuff/` &amp;amp; re-compile?</text>
  </message>
  <message>
    <ts>2017-07-22T12:48:20.825712</ts>
    <user>U236M9FH9</user>
    <text>if `type Msg = ... | PlayerMessage Domino` then I'm out of ideas</text>
  </message>
  <message>
    <ts>2017-07-22T12:51:13.839848</ts>
    <user>U2SR9DL7Q</user>
    <text>If I change it to `type Msg ... | PlayerResponse Int` then it shows up as `Int -&amp;gt; Types.Msg`</text>
  </message>
  <message>
    <ts>2017-07-22T12:51:55.843418</ts>
    <user>U2SR9DL7Q</user>
    <text>weird... Domino is defined in the same types module as `type Domino = Domino Int Int`</text>
  </message>
  <message>
    <ts>2017-07-22T12:52:16.845023</ts>
    <user>U2SR9DL7Q</user>
    <text>Could the constructor be confusing it?</text>
  </message>
  <message>
    <ts>2017-07-22T13:00:35.887081</ts>
    <user>U236M9FH9</user>
    <text>Does `&amp;gt; Domino` in repl return anything?</text>
  </message>
  <message>
    <ts>2017-07-22T13:01:58.894487</ts>
    <user>U2SR9DL7Q</user>
    <text>Okay... so I fixed it. `type Msg = ... | PlayerResponse Response` where `type Response = Play Domino | Pass`</text>
  </message>
  <message>
    <ts>2017-07-22T13:02:39.897840</ts>
    <user>U2SR9DL7Q</user>
    <text>err Domino returns `Int -&amp;gt; Int -&amp;gt; Types.Domino`</text>
  </message>
  <message>
    <ts>2017-07-22T13:03:35.902433</ts>
    <user>U236M9FH9</user>
    <text>I have no idea why you can't just do `PlayerResponse Domino`, sorry :confused:</text>
  </message>
  <message>
    <ts>2017-07-22T13:03:46.903263</ts>
    <user>U2SR9DL7Q</user>
    <text>The response type isn't a hack because there really does need to be a pass command</text>
  </message>
  <message>
    <ts>2017-07-22T13:03:58.904234</ts>
    <user>U2SR9DL7Q</user>
    <text>yeah, it's super strange.</text>
  </message>
  <message>
    <ts>2017-07-22T13:04:23.906339</ts>
    <user>U2SR9DL7Q</user>
    <text>Domino is used everywhere in the code base...</text>
  </message>
  <message>
    <ts>2017-07-22T13:05:11.910255</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U236M9FH9&gt; Anyway, we got it to not complain ^^ . Thanks very much. That repl idea was great.</text>
  </message>
  <message>
    <ts>2017-07-22T13:06:27.917004</ts>
    <user>U236M9FH9</user>
    <text>Yup, REPL is an OK scratchpad, but an awesome type inspector :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-22T13:09:57.933653</ts>
    <user>U2SR9DL7Q</user>
    <text>I never thought to use it for that, but it makes a lot of sense.</text>
  </message>
  <message>
    <ts>2017-07-22T13:11:26.941293</ts>
    <user>U2SR9DL7Q</user>
    <text>Elm-mdl has been good but a bit strange at times. I need to try other elm styling libraries and see what I like best.</text>
  </message>
  <message>
    <ts>2017-07-22T14:06:42.211269</ts>
    <user>U635238TG</user>
    <text>can someone please give me an eli5 explanation of the Msg type? So it's a type like Int and String, etc right? But it's a special kind of Type or no?</text>
  </message>
  <message>
    <ts>2017-07-22T14:10:01.226845</ts>
    <user>U0J1M0F32</user>
    <text>A `Msg` type is really like any other user defined type within the system, but its one we use in the Elm Architecture to represent the very actions that take place in our application.</text>
  </message>
  <message>
    <ts>2017-07-22T14:10:49.231319</ts>
    <user>U0J1M0F32</user>
    <text>`type Msg = PreviousSlide | NextSlide | NoOp` could be used to represent the various "messages" of a basic slide deck elm app.</text>
  </message>
  <message>
    <ts>2017-07-22T14:10:49.231326</ts>
    <user>U635238TG</user>
    <text>user defined like when we make a Type alias using a record?</text>
  </message>
  <message>
    <ts>2017-07-22T14:10:59.232192</ts>
    <user>U0J1M0F32</user>
    <text>like when we use the `type` keyword.</text>
  </message>
  <message>
    <ts>2017-07-22T14:11:31.234765</ts>
    <user>U0J1M0F32</user>
    <text>If I was making a Tic Tac Toe game in Elm I might have a type for Piece:

```
type Piece = X | O | Empty
```</text>
  </message>
  <message>
    <ts>2017-07-22T14:11:44.235701</ts>
    <user>U635238TG</user>
    <text>ahhh!</text>
  </message>
  <message>
    <ts>2017-07-22T14:12:04.237224</ts>
    <user>U635238TG</user>
    <text>but instead of Piece, sometimes people just say Msg as an Elm common practice?</text>
  </message>
  <message>
    <ts>2017-07-22T14:12:47.240626</ts>
    <user>U0J1M0F32</user>
    <text>Kinda, so in an Elm app that was Tic Tac Toe. I may have that type Piece I just defined, but also have a Msg type like this:

```
type Msg = MakeMove Piece | EndTurn | GameOver | NoOp
```</text>
  </message>
  <message>
    <ts>2017-07-22T14:13:00.241648</ts>
    <user>U0J1M0F32</user>
    <text>but correct, using the word `Msg` is kind of an Elm community standard.</text>
  </message>
  <message>
    <ts>2017-07-22T14:13:11.242555</ts>
    <user>U0J1M0F32</user>
    <text>I remember when it used to be `Action` for awhile.</text>
  </message>
  <message>
    <ts>2017-07-22T14:13:52.245807</ts>
    <user>U635238TG</user>
    <text>this tic tac toe example really helped me wrap my head around some of this. thank you. some true eli5 right there! haha</text>
  </message>
  <message>
    <ts>2017-07-22T14:14:34.249108</ts>
    <user>U0J1M0F32</user>
    <text>I've had lots of practice :smile: (Taught at a code school for along time)</text>
  </message>
  <message>
    <ts>2017-07-22T14:28:44.314936</ts>
    <user>U6AU4N1HR</user>
    <text>hello, according to this &lt;http://package.elm-lang.org/packages/evancz/elm-http/3.0.1/Http&gt; theres a url function which can format url with query string, but when i try to use it I get "`Http` does not expose `url`." Any idea why?</text>
  </message>
  <message>
    <ts>2017-07-22T14:33:32.337562</ts>
    <user>U2Q5GJNTB</user>
    <text>&lt;@U6AU4N1HR&gt; might be a silly suggestion, but are you sure you you that version of http?</text>
  </message>
  <message>
    <ts>2017-07-22T14:34:03.339807</ts>
    <user>U2Q5GJNTB</user>
    <text>os evancz/elm-http an not elm-lang/http ?</text>
  </message>
  <message>
    <ts>2017-07-22T14:35:22.345679</ts>
    <user>U6AU4N1HR</user>
    <text>&lt;@U2Q5GJNTB&gt; actualy that's a good question :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-22T14:35:34.346567</ts>
    <user>U6AU4N1HR</user>
    <text>import Http</text>
  </message>
  <message>
    <ts>2017-07-22T14:35:45.347469</ts>
    <user>U6AU4N1HR</user>
    <text>meh</text>
  </message>
  <message>
    <ts>2017-07-22T14:35:59.348801</ts>
    <user>U2Q5GJNTB</user>
    <text>nice. can you check your elm-package.json?</text>
  </message>
  <message>
    <ts>2017-07-22T14:36:52.353498</ts>
    <user>U6AU4N1HR</user>
    <text>"elm-lang/http": "1.0.0 &amp;lt;= v &amp;lt; 2.0.0",</text>
  </message>
  <message>
    <ts>2017-07-22T14:37:49.357754</ts>
    <user>U2Q5GJNTB</user>
    <text>that might explain the issue. the docs should then be &lt;http://package.elm-lang.org/packages/elm-lang/http/1.0.0&gt;</text>
  </message>
  <message>
    <ts>2017-07-22T14:38:19.359930</ts>
    <user>U635238TG</user>
    <text>so is Html Msg one type or is it two, Html and Msg? so when we have 'view -&amp;gt; Model -&amp;gt; Html Msg' is it saying we are going to have a Model as input and then give us Html and Msg or just an Html Msg type?</text>
  </message>
  <message>
    <ts>2017-07-22T14:39:32.365237</ts>
    <user>U635238TG</user>
    <text>why didn't my single quotes format my code example?</text>
  </message>
  <message>
    <ts>2017-07-22T14:39:46.366291</ts>
    <user>U6AU4N1HR</user>
    <text>&lt;@U2Q5GJNTB&gt; thank you</text>
  </message>
  <message>
    <ts>2017-07-22T14:40:16.368662</ts>
    <user>U2Q5GJNTB</user>
    <text>&lt;@U6AU4N1HR&gt; there seems to be encodeUri  and an open PR &lt;https://github.com/elm-lang/http/issues/10&gt;</text>
  </message>
  <message>
    <ts>2017-07-22T15:45:17.680691</ts>
    <user>U39DE7RQ9</user>
    <text>Hello! Has anyone tried using Firebase authentication with Elm?</text>
  </message>
  <message>
    <ts>2017-07-22T15:47:17.689886</ts>
    <user>U39DE7RQ9</user>
    <text>A more specific question. Im trying to reach a plain html page I created in the root of my app next to index.html and index.js called auth.html but I get a 404 when opening localhost:3000/auth.html. Why is that and how can go around it?</text>
  </message>
  <message>
    <ts>2017-07-22T16:17:26.828021</ts>
    <user>U6AU4N1HR</user>
    <text>Can I use Http.send and send a command message containng additional data aside from result of the actual send?
In the example here: &lt;http://lpaste.net/357143&gt;, I need to send the user record in UserBooksFetched msg, but however i try, the compailer complaints</text>
  </message>
  <message>
    <ts>2017-07-22T16:20:16.839878</ts>
    <user>U6AU4N1HR</user>
    <text>I hope it at least makes sense</text>
  </message>
  <message>
    <ts>2017-07-22T16:26:19.866743</ts>
    <user>U4872964V</user>
    <text>Well, Elm does not really work that way. I know &lt;@U0L8LGP9U&gt; is working on a library to do this, and I put together this ugly beast over my html5 dragdrop library, but we are still figuring these things out unfortunately</text>
  </message>
  <message>
    <ts>2017-07-22T16:26:40.868219</ts>
    <user>U4872964V</user>
    <text>Check out &lt;https://ellie-app.com/KvQXcHVwGfa1/2&gt; for my attempt</text>
  </message>
  <message>
    <ts>2017-07-22T16:44:17.944915</ts>
    <user>U39DE7RQ9</user>
    <text>Webpack help anyone? I have copy and pasted the code in webpack.config.js from the Elm tutorial (&lt;https://www.elm-tutorial.org/en/04-starting/03-webpack-1.html&gt;) and now I need it to output some additional .html files. How do I do that? The files are placed in the src folder of my app</text>
  </message>
  <message>
    <ts>2017-07-22T16:48:48.965188</ts>
    <user>U236M9FH9</user>
    <text>&lt;@U39DE7RQ9&gt; Pretty sure you just run `webpack` instead of webpack-dev-server &amp;amp; it should be available in your `output.path`</text>
  </message>
  <message>
    <ts>2017-07-22T16:50:15.971592</ts>
    <user>U39DE7RQ9</user>
    <text>When i develop my app I run yarn start. So how do I just run webpack &lt;@U236M9FH9&gt; ?</text>
  </message>
  <message>
    <ts>2017-07-22T16:50:48.974234</ts>
    <user>U236M9FH9</user>
    <text>node_modules/.bin/webpack</text>
  </message>
  <message>
    <ts>2017-07-22T16:51:01.975189</ts>
    <user>U39DE7RQ9</user>
    <text>OK will try</text>
  </message>
  <message>
    <ts>2017-07-22T16:51:44.978401</ts>
    <user>U236M9FH9</user>
    <text>Usually I add add something like this to package.json:
```
"scripts": { "build": "webpack" } 
```
then just run `npm run build` or `yarn run build`</text>
  </message>
  <message>
    <ts>2017-07-22T16:54:14.989462</ts>
    <user>U39DE7RQ9</user>
    <text>Mine looks like this:
```
"scripts": {
    "build": "webpack",
    "client": "webpack-dev-server --port 3000",
    "start": "nf start"
  }
```</text>
  </message>
  <message>
    <ts>2017-07-22T16:55:10.993384</ts>
    <user>U39DE7RQ9</user>
    <text>When I run webpack it outputs the same as when I run the dev-server. I need it to include som extra files from the src folder. How do I do that?</text>
  </message>
  <message>
    <ts>2017-07-22T17:11:08.065634</ts>
    <user>U39DE7RQ9</user>
    <text>Shouldn't this copy all of my .html files to the output folder?
```
{
        test:    /\.html$/,
        exclude: /node_modules/,
        loader:  'file-loader?name=[name].[ext]',
      }
```</text>
  </message>
  <message>
    <ts>2017-07-22T17:20:32.106046</ts>
    <user>U236M9FH9</user>
    <text>I think only those that're imported by your `index.js`.</text>
  </message>
  <message>
    <ts>2017-07-22T17:21:12.109152</ts>
    <user>U236M9FH9</user>
    <text>You could use the copy webpack plugin: &lt;https://github.com/kevlened/copy-webpack-plugin&gt;</text>
  </message>
  <message>
    <ts>2017-07-22T17:33:01.157856</ts>
    <user>U39DE7RQ9</user>
    <text>OK, thanks!</text>
  </message>
  <message>
    <ts>2017-07-22T18:15:34.328602</ts>
    <user>U6AU4N1HR</user>
    <text>Hey, I'm doing Json.Decode.map5 over a JSON and creating record User. I want to add another field to that record, which is a list. The problem is, this list is not a part of JSON. I want to intiliaze record User with a empty list. Is it possible to somehow use empty list with Json.Decode.map6?</text>
  </message>
  <message>
    <ts>2017-07-22T18:17:38.336444</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U6AU4N1HR&gt; The record constructor is just a regular function. You could instead go `\a b c d e -&amp;gt; MyRecord a b c [] d e` You could also use `Json.Decode.succeed []` with the `map6`</text>
  </message>
  <message>
    <ts>2017-07-22T18:17:48.336980</ts>
    <user>U14Q8S4EM</user>
    <text>You can do `succeed list`</text>
  </message>
  <message>
    <ts>2017-07-22T18:18:03.337967</ts>
    <user>U14Q8S4EM</user>
    <text>`Json.Decode.succeed whateverListYouWanted`</text>
  </message>
  <message>
    <ts>2017-07-22T18:18:31.339636</ts>
    <user>U14Q8S4EM</user>
    <text>Yeah what &lt;@U48AEBJQ3&gt; said</text>
  </message>
  <message>
    <ts>2017-07-22T18:20:01.345112</ts>
    <user>U6AU4N1HR</user>
    <text>Thanks!</text>
  </message>
  <message>
    <ts>2017-07-22T18:20:15.346149</ts>
    <user>U6AU4N1HR</user>
    <text>Didn't see the succeed function</text>
  </message>
  <message>
    <ts>2017-07-22T18:30:18.383798</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U6AU4N1HR&gt; 

```
decodeUser : Decode.Decoder User
decodeUser =
    Decode.map5
        (\id userName firstName gender booksCount -&amp;gt;
            User id userName firstName gender booksCount [])
        (Decode.field "id" &lt;http://Decode.int|Decode.int&gt;)
        (Decode.field "username" Decode.string)
        (Decode.field "first_name" Decode.string)
        (&lt;http://Decode.at|Decode.at&gt; [ "profile", "gender" ] Decode.string)
        (Decode.field "books_count" &lt;http://Decode.int|Decode.int&gt;)
```

or, if you moved that field to the top of the record:

```
decodeUser : Decode.Decoder User
decodeUser =
    Decode.map5 (User [])
        (Decode.field "id" &lt;http://Decode.int|Decode.int&gt;)
        (Decode.field "username" Decode.string)
        (Decode.field "first_name" Decode.string)
        (&lt;http://Decode.at|Decode.at&gt; [ "profile", "gender" ] Decode.string)
        (Decode.field "books_count" &lt;http://Decode.int|Decode.int&gt;)
```</text>
  </message>
  <message>
    <ts>2017-07-22T18:31:24.388667</ts>
    <user>U6AU4N1HR</user>
    <text>&lt;@U48AEBJQ3&gt; ok i get it, thanks</text>
  </message>
  <message>
    <ts>2017-07-22T18:35:43.405090</ts>
    <user>U4RR7KX45</user>
    <text>```
type alias Year =
    Float


type alias Seconds =
    number


type alias Details =
    ( Year, Seconds )
```
what's wrong with this code?</text>
  </message>
  <message>
    <ts>2017-07-22T18:35:57.406257</ts>
    <user>U4RR7KX45</user>
    <text>gives me the following error
```
Type alias `Seconds` must declare its use of type variable number

21|&amp;gt;type alias Seconds =
22|&amp;gt;    number

You probably need to change the declaration like this:

type alias Seconds number = ...

```</text>
  </message>
  <message>
    <ts>2017-07-22T20:58:45.930450</ts>
    <user>U6CBXFWHG</user>
    <text>trying to setup my atom ide for elm, and I get a linter error

module Main exposing (..)

is all I have in the file, and the linter says "The system cannot find the path specified."

any ideas?</text>
  </message>
  <message>
    <ts>2017-07-22T20:59:28.932950</ts>
    <user>U6CBXFWHG</user>
    <text>Im trying to follow the elm tutorial on &lt;http://knowthen.com|knowthen.com&gt;</text>
  </message>
  <message>
    <ts>2017-07-22T21:04:48.952641</ts>
    <user>U635238TG</user>
    <text>is your file named Main.elm?</text>
  </message>
  <message>
    <ts>2017-07-22T21:05:32.955193</ts>
    <user>U635238TG</user>
    <text>I had something like that happen to me when I didn't have a Main.elm for it to pull in. I'm a total newb though</text>
  </message>
  <message>
    <ts>2017-07-22T21:05:37.955490</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U4RR7KX45&gt; that's not going to work, you need to specify what type of `number` will be in that type</text>
  </message>
  <message>
    <ts>2017-07-22T21:06:21.958193</ts>
    <user>U6CBXFWHG</user>
    <text>test.elm</text>
  </message>
  <message>
    <ts>2017-07-22T21:07:19.961566</ts>
    <user>U6CBXFWHG</user>
    <text>just renamed it and still have the same issue</text>
  </message>
  <message>
    <ts>2017-07-22T21:07:42.962977</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U4RR7KX45&gt; `number` isn't a type so you can't alias it, it's a compiler magic typeclass </text>
  </message>
  <message>
    <ts>2017-07-22T21:17:58.998482</ts>
    <user>U6CBXFWHG</user>
    <text>I'm using windows 7 and it was already a pain to get the path for the elm-format to work, I am open to downloading a different ide, I was using vscode and gave up to try atom...</text>
  </message>
  <message>
    <ts>2017-07-22T21:27:33.030855</ts>
    <user>U635238TG</user>
    <text>someone will be able to help ya on this for sure. I think it's just a saturday night so not too many people here.</text>
  </message>
  <message>
    <ts>2017-07-22T21:27:57.032065</ts>
    <user>U635238TG</user>
    <text>i'm about to start that knowthen tutorial too as soon as i finish this other one I'm doing.</text>
  </message>
  <message>
    <ts>2017-07-22T21:29:51.038086</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U6CBXFWHG&gt; Have you tried putting at least *something* in the body of the module? I think that it is a compiler error to have it empty and that might break the linter.</text>
  </message>
  <message>
    <ts>2017-07-23T00:13:47.566197</ts>
    <user>U3FFQ6DE3</user>
    <text>hi I think I have a 17 to 18 issue, from &lt;https://www.dailydrip.com/topics/elm/drips/elm-mdl-introduction&gt;</text>
  </message>
  <message>
    <ts>2017-07-23T00:15:21.571414</ts>
    <user>U3FFQ6DE3</user>
    <text>here is the error message:
I ran into something unexpected when parsing your code!

75|         Mdl msg' -&amp;gt;
                ^
I am looking for one of the following things:

    an arrow '-&amp;gt;'
    whitespace

Detected errors in 1 module.</text>
  </message>
  <message>
    <ts>2017-07-23T00:16:03.573710</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U3FFQ6DE3&gt; yep `'` can no longer be a character in an indentifier</text>
  </message>
  <message>
    <ts>2017-07-23T00:16:24.574794</ts>
    <user>U3FFQ6DE3</user>
    <text>how do I fix, just remove?</text>
  </message>
  <message>
    <ts>2017-07-23T00:16:43.575754</ts>
    <user>U153UK3FA</user>
    <text>call `msg'` something else</text>
  </message>
  <message>
    <ts>2017-07-23T00:17:04.576889</ts>
    <user>U153UK3FA</user>
    <text>`Mdl mdlmsg -&amp;gt;` would be fine</text>
  </message>
  <message>
    <ts>2017-07-23T00:18:03.580113</ts>
    <user>U3FFQ6DE3</user>
    <text>thanks, new error(progress :slightly_smiling_face: )</text>
  </message>
  <message>
    <ts>2017-07-23T02:33:24.962450</ts>
    <user>U6CBXFWHG</user>
    <text>&lt;@U48AEBJQ3&gt; yea the tutorial puts in an area function like 
area r =
     pie * r ^ 2

and they are expecting some errors with pie, but not with the boilerplate code that is added by elm-format, I get the same thing with or without it</text>
  </message>
  <message>
    <ts>2017-07-23T02:33:58.963874</ts>
    <user>U6CBXFWHG</user>
    <text>I can try setting up the same environment on my windows10 pc and see if it has the same problems...</text>
  </message>
  <message>
    <ts>2017-07-23T07:22:33.863103</ts>
    <user>U5ZC6V535</user>
    <text>Quick question: Say I have multiple Types and  views and I want to localise their update functions. How can i do so, such that the update function within (say..) Main doesn't get overload with all the different kinds of messages that are triggered around from other components?</text>
  </message>
  <message>
    <ts>2017-07-23T07:22:59.864511</ts>
    <user>U5ZC6V535</user>
    <text>…(i.e. I want to do something similar to combineReducers from Redux).</text>
  </message>
  <message>
    <ts>2017-07-23T07:33:40.899047</ts>
    <user>U3LUC6SNS</user>
    <text>I am planning to add navigation to the app I am working on.  Any advice on what to use?  I've been looking at &lt;https://github.com/rgrempel/elm-route-url&gt;, which seems interesting.</text>
  </message>
  <message>
    <ts>2017-07-23T07:34:42.902280</ts>
    <user>U3LUC6SNS</user>
    <text>PS. My update function has the usual signature: `update : Msg -&amp;gt; Model -&amp;gt; ( Model, Cmd Msg )` This is something I'd rather not change.</text>
  </message>
  <message>
    <ts>2017-07-23T07:35:19.904316</ts>
    <user>U3LUC6SNS</user>
    <text>And the program is `programWithFlags`</text>
  </message>
  <message>
    <ts>2017-07-23T08:40:13.138060</ts>
    <user>U4872964V</user>
    <text>&lt;@U5ZC6V535&gt; not so quick answer though :) it really depends on the structure of your app, but generally that kind of componentization works poorly in Elm (and is often not needed)</text>
  </message>
  <message>
    <ts>2017-07-23T08:42:00.146062</ts>
    <user>U5ZC6V535</user>
    <text>&lt;@U4872964V&gt; Hmm, why do you say its not often needed though? If you have a big app with several components then it because a bit cumbersome :disappointed: :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-23T08:49:27.175300</ts>
    <user>U4RR7KX45</user>
    <text>wow, that's awesome!</text>
  </message>
  <message>
    <ts>2017-07-23T08:49:48.176530</ts>
    <user>U4872964V</user>
    <text>&lt;@U5ZC6V535&gt; most of the time you don't have to make components but can keep the state and the update and the view separate and just refactor the types and make helper functions when your functions get to big.</text>
  </message>
  <message>
    <ts>2017-07-23T08:53:33.191298</ts>
    <user>U5ZC6V535</user>
    <text>&lt;@U4872964V&gt; Yeah that's ok, its what I do at the moment. The only nuisance with this is that the main update function will have a lot of "cases"</text>
  </message>
  <message>
    <ts>2017-07-23T08:54:35.195514</ts>
    <user>U4872964V</user>
    <text>There are a few packages that have different answers to how to handle the update function. Having a lot of cases is not really a problem in itself though.</text>
  </message>
  <message>
    <ts>2017-07-23T08:57:14.204756</ts>
    <user>U5ZC6V535</user>
    <text>Agreed, it is not really a problem but splitting them would have been nice in terms of organisation; splitting into separate functions, each managing independent parts of the state is really nice.</text>
  </message>
  <message>
    <ts>2017-07-23T08:58:16.208499</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5ZC6V535&gt; Richard has a good talk about this &lt;https://youtu.be/DoA4Txr4GUs&gt;</text>
  </message>
  <message>
    <ts>2017-07-23T08:58:57.211198</ts>
    <user>U5ZC6V535</user>
    <text>&lt;@U153UK3FA&gt; Thanks, I will watch that.</text>
  </message>
  <message>
    <ts>2017-07-23T09:46:51.405127</ts>
    <user>U4RR7KX45</user>
    <text>these types are such a pain sometimes :disappointed: can anyone shed some light, why am I getting an error here?
```
module RNATranscription exposing (..)

import Dict exposing (..)


mapping : Dict String String
mapping =
    [ ( "G", "C" )
    , ( "C", "G" )
    , ( "T", "A" )
    , ( "A", "U" )
    ]
        |&amp;gt; fromList


getMapping : Char -&amp;gt; Result String String -&amp;gt; Result Char String
getMapping x acc =
    case acc of
        Ok values -&amp;gt;
            case get x mapping of
                Just something -&amp;gt;
                    Ok (String.append values (String.fromChar something))

                Nothing -&amp;gt;
                    Err x

        _ -&amp;gt;
            acc


toRNA : String -&amp;gt; Result String String
toRNA str =
    String.foldl getMapping Ok ""
```

and the error:
```
-- TYPE MISMATCH ------------------------------------- ./../RNATranscription.elm

The 2nd argument to function `get` is causing a mismatch.

20|                  get x mapping
                           ^^^^^^^
Function `get` is expecting the 2nd argument to be:

    Dict Char v

But it is:

    Dict String String

Hint: I always figure out the type of arguments from left to right. If an
argument is acceptable when I check it, I assume it is "correct" in subsequent
checks. So the problem may actually be in how previous arguments interact with
the 2nd.
```</text>
  </message>
  <message>
    <ts>2017-07-23T09:47:41.408585</ts>
    <user>U4RR7KX45</user>
    <text>it doesn't work even when I change the type definition to 
```
Dict Char v
```</text>
  </message>
  <message>
    <ts>2017-07-23T09:49:10.414174</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U4RR7KX45&gt; `get (String.fromChar x) mapping` ?</text>
  </message>
  <message>
    <ts>2017-07-23T09:51:48.424833</ts>
    <user>U3SJEDR96</user>
    <text>(Yay exercism)</text>
  </message>
  <message>
    <ts>2017-07-23T09:52:08.426148</ts>
    <user>U4RR7KX45</user>
    <text>:smile: yeah. well that worked for that particular one</text>
  </message>
  <message>
    <ts>2017-07-23T09:52:20.426983</ts>
    <user>U4RR7KX45</user>
    <text>but now I have 2 more mismatches</text>
  </message>
  <message>
    <ts>2017-07-23T09:52:37.428086</ts>
    <user>U4RR7KX45</user>
    <text>is there a tool that automatically fixes these? :smile: haha</text>
  </message>
  <message>
    <ts>2017-07-23T09:52:42.428427</ts>
    <user>U4RR7KX45</user>
    <text>takes me half day sometimes</text>
  </message>
  <message>
    <ts>2017-07-23T09:54:38.435793</ts>
    <user>U3SJEDR96</user>
    <text>You'll get (much) better at it as you progress. Eventually, you'll start thinking about the types first, and then finding a function that matches those types :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-23T09:59:50.457783</ts>
    <user>U4RR7KX45</user>
    <text>hope so :smile:</text>
  </message>
  <message>
    <ts>2017-07-23T10:00:30.461705</ts>
    <user>U4RR7KX45</user>
    <text>how can I convert a string to character in dictionary key?
like here
```
mapping : Dict String String
mapping =
    [ ( "G", "C" )
    , ( "C", "G" )
    , ( "T", "A" )
    , ( "A", "U" )
    ]
        |&amp;gt; fromList
```

instead to have
```
mapping : Dict Char String
mapping =
    [ ( "G", "C" )
    , ( "C", "G" )
    , ( "T", "A" )
    , ( "A", "U" )
    ]
        |&amp;gt; fromList
```</text>
  </message>
  <message>
    <ts>2017-07-23T10:00:52.463505</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U4RR7KX45&gt; read the compiler output carefully and think about why it thinks the types are that way. Like, why does the compiler think it should be a `Dict Char v`?</text>
  </message>
  <message>
    <ts>2017-07-23T10:02:43.471598</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U4RR7KX45&gt; Char literals have single quotes eg `'G'`</text>
  </message>
  <message>
    <ts>2017-07-23T10:02:59.472716</ts>
    <user>U4RR7KX45</user>
    <text>hmm</text>
  </message>
  <message>
    <ts>2017-07-23T10:03:07.473246</ts>
    <user>U4RR7KX45</user>
    <text>didn't know, thank you :wink:</text>
  </message>
  <message>
    <ts>2017-07-23T10:03:14.473646</ts>
    <user>U4RR7KX45</user>
    <text>that makes sense now haha</text>
  </message>
  <message>
    <ts>2017-07-23T10:05:04.481167</ts>
    <user>U4RR7KX45</user>
    <text>that's it, works yaayy :smile:</text>
  </message>
  <message>
    <ts>2017-07-23T10:05:23.482654</ts>
    <user>U4RR7KX45</user>
    <text>thank you all</text>
  </message>
  <message>
    <ts>2017-07-23T10:11:28.509231</ts>
    <user>U6CHZ5PN1</user>
    <text>Hello, i'm new to elm and tried to follow &lt;https://www.elm-tutorial.org/en/04-starting/07-multiple-modules.html&gt;, but instead simply make different files to every modules, i also put them in separate folder</text>
  </message>
  <message>
    <ts>2017-07-23T10:12:00.511443</ts>
    <user>U6CHZ5PN1</user>
    <text>but then the files inside the folder somehow doesnt compiled</text>
  </message>
  <message>
    <ts>2017-07-23T10:12:08.512102</ts>
    <user>U6CHZ5PN1</user>
    <text>&lt;https://github.com/iamn00b/elm-tutorial&gt;</text>
  </message>
  <message>
    <ts>2017-07-23T10:12:24.513282</ts>
    <user>U6CHZ5PN1</user>
    <text>any ideas why?</text>
  </message>
  <message>
    <ts>2017-07-23T10:19:53.545206</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U6CHZ5PN1&gt;, If you have module `Bar` in file `Bar.elm` of folder`Foo`, the module name should actually be `Foo.Bar`</text>
  </message>
  <message>
    <ts>2017-07-23T10:21:41.553168</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U6CHZ5PN1&gt;  sorry about the typing errors</text>
  </message>
  <message>
    <ts>2017-07-23T10:23:12.559506</ts>
    <user>U6CHZ5PN1</user>
    <text>i've tried to change the name to `Type` or `Type.Type` but same error</text>
  </message>
  <message>
    <ts>2017-07-23T10:23:34.560944</ts>
    <user>U6CHZ5PN1</user>
    <text>it said that Main can't find the module</text>
  </message>
  <message>
    <ts>2017-07-23T10:24:33.564935</ts>
    <user>U6CHZ5PN1</user>
    <text>but if i change the source-directories to `['src', 'src/type']` it compiled</text>
  </message>
  <message>
    <ts>2017-07-23T10:25:26.569177</ts>
    <user>U4RR7KX45</user>
    <text>I've got a simple yeoman elm generator btw, if anyone wants to use it
&lt;https://github.com/Bravilogy/generator-elm&gt;</text>
  </message>
  <message>
    <ts>2017-07-23T10:25:39.570192</ts>
    <user>U4RR7KX45</user>
    <text>webpack + elm + sass</text>
  </message>
  <message>
    <ts>2017-07-23T10:25:50.571165</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U6CHZ5PN1&gt; try naming your folder `Type` rather than `type`</text>
  </message>
  <message>
    <ts>2017-07-23T10:29:34.587384</ts>
    <user>U6CHZ5PN1</user>
    <text>&lt;@U3SJEDR96&gt; ah it works if i also name it to `Type.Type`</text>
  </message>
  <message>
    <ts>2017-07-23T10:29:45.588083</ts>
    <user>U3SJEDR96</user>
    <text>There you go :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-23T10:30:19.590526</ts>
    <user>U6CHZ5PN1</user>
    <text>is in elm i should use capital for folder, or is this related to webpack/elm-webpack-loader?</text>
  </message>
  <message>
    <ts>2017-07-23T10:30:32.591602</ts>
    <user>U6CHZ5PN1</user>
    <text>also thanks! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-23T10:30:40.592259</ts>
    <user>U3SJEDR96</user>
    <text>Elm wants a 1-1 mapping of path &amp;lt;-&amp;gt; module</text>
  </message>
  <message>
    <ts>2017-07-23T10:31:52.597614</ts>
    <user>U4RR7KX45</user>
    <text>do I have to use Random.generate for Random module? Can I not just get a random value? Or is Msg needed because Random is impure?</text>
  </message>
  <message>
    <ts>2017-07-23T10:32:12.599043</ts>
    <user>U6CHZ5PN1</user>
    <text>is there a way to make module `Type` but it live on `Type` folder? like how index.js works</text>
  </message>
  <message>
    <ts>2017-07-23T10:32:16.599316</ts>
    <user>U4RR7KX45</user>
    <text>for example
```
(toString (&lt;http://Random.int|Random.int&gt; 1 10)) 
```</text>
  </message>
  <message>
    <ts>2017-07-23T10:39:11.629413</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U6CHZ5PN1&gt; no. You can name you file `Type.elm`, though - having a structure where you have a file named `Foo.elm` and a folder named `Foo` which contains "namedspaced" modules is a fairly common pattern</text>
  </message>
  <message>
    <ts>2017-07-23T10:39:58.632681</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U4RR7KX45&gt; correct, it's an impure thing. Though you can also use `Random.step`, provided you have a random seed and store the new seed after use :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-23T10:41:13.638611</ts>
    <user>U6CHZ5PN1</user>
    <text>&lt;@U3SJEDR96&gt; i see. thanks!</text>
  </message>
  <message>
    <ts>2017-07-23T10:52:27.687254</ts>
    <user>U6BTZ2NSV</user>
    <text>Hello. I am trying to understand Tasks. I am confused by the example for `perform` at &lt;http://package.elm-lang.org/packages/elm-lang/core/latest/Task&gt; `Task.perform NewTime Time.now` NewTime is a message, how does it represent `(a -&amp;gt; msg)`? Why do you not need to use `(\_ -&amp;gt; NewTime)`?</text>
  </message>
  <message>
    <ts>2017-07-23T10:53:58.693588</ts>
    <user>U3SJEDR96</user>
    <text>`type Msg = NewTime Time`</text>
  </message>
  <message>
    <ts>2017-07-23T10:55:03.698548</ts>
    <user>U3SJEDR96</user>
    <text>`NewTime` is a tag of `Msg`, and takes a single parameter, `Time`. The type of `NewTime` is `Time -&amp;gt; Msg`</text>
  </message>
  <message>
    <ts>2017-07-23T10:56:08.703548</ts>
    <user>U3SJEDR96</user>
    <text>It's the same as `type Msg = Input String` &amp;lt;-&amp;gt; `input [ onInput Input ] []`</text>
  </message>
  <message>
    <ts>2017-07-23T10:56:39.705818</ts>
    <user>U6BTZ2NSV</user>
    <text>&lt;@U3SJEDR96&gt; I see now. Thank you. If NewTime didn't take an extra parameter, you would need to use the lambda in order to type check, right?</text>
  </message>
  <message>
    <ts>2017-07-23T10:56:48.706556</ts>
    <user>U3SJEDR96</user>
    <text>Yep, correct</text>
  </message>
  <message>
    <ts>2017-07-23T10:57:01.707449</ts>
    <user>U3SJEDR96</user>
    <text>or `always : a -&amp;gt; b -&amp;gt; a`</text>
  </message>
  <message>
    <ts>2017-07-23T10:59:26.717752</ts>
    <user>U3SJEDR96</user>
    <text>i.e. `always NewTime` _means_ the same as `\_ -&amp;gt; NewTile`, though the lambda subtly different semantics - `always` evaluates its argument as soon as you pass it to `always`, whereas the lambda is only evaluated when it receives its argument</text>
  </message>
  <message>
    <ts>2017-07-23T11:07:32.756123</ts>
    <user>U5ZC6V535</user>
    <text>Hi, I am trying to generate a list of Types with random values. I am able to do so for a single type but I am having trouble generating a list and thus combining generators. Heres what I have so far: 

```
randomBoid : Float -&amp;gt; Float -&amp;gt; Float -&amp;gt; Boid
randomBoid x y angle = 
  Boid (x, y) angle

type Msg
    = BoidsGenerated Boid


boidGenerator : Generator Boid
boidGenerator = 
      (map3 randomBoid (float -250 250) (float -250 250) (float 0 360))

generateBoid =
    generate BoidsGenerated boidGenerator
```

The above works fine but I thought that in order to get a list i could have done ```generate BoidsGenerated (list 5 boidGenerator)```

Any ideas ?</text>
  </message>
  <message>
    <ts>2017-07-23T11:07:38.756603</ts>
    <user>U6BTZ2NSV</user>
    <text>Thanks again &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-23T11:09:13.763475</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5ZC6V535&gt; `list 5 boidGenerator` should work, if `BoidsGenerated` can take a `List Boid`</text>
  </message>
  <message>
    <ts>2017-07-23T11:10:15.768133</ts>
    <user>U5ZC6V535</user>
    <text>&lt;@U3SJEDR96&gt; That's what I thought but I am getting 

```
The 2nd argument to function `generate` is causing a mismatch.

25|     generate BoidsGenerated (list 5 boidGenerator)
                                 ^^^^^^^^^^^^^^^^^^^^
Function `generate` is expecting the 2nd argument to be:

    Generator List

But it is:

    Generator (List Boid)
```</text>
  </message>
  <message>
    <ts>2017-07-23T11:10:54.771363</ts>
    <user>U3SJEDR96</user>
    <text>Oh, you're probably missing parenthesis in your `Msg` declaration</text>
  </message>
  <message>
    <ts>2017-07-23T11:11:10.772701</ts>
    <user>U5ZC6V535</user>
    <text>Oh yes!</text>
  </message>
  <message>
    <ts>2017-07-23T11:11:11.772750</ts>
    <user>U3SJEDR96</user>
    <text>`BoidsGenerated List Boid` &amp;lt;-&amp;gt; `BoidsGenerated (List Boid)`</text>
  </message>
  <message>
    <ts>2017-07-23T11:11:40.774956</ts>
    <user>U5ZC6V535</user>
    <text>I spent half an hour + on this :disappointed: :stuck_out_tongue: Heh Thanks &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-23T11:12:09.777069</ts>
    <user>U5ZC6V535</user>
    <text>I started working on Elm a couple of days ago and i havent got used to the syntax fully yet</text>
  </message>
  <message>
    <ts>2017-07-23T11:12:51.780238</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, to be honest, it's a little surprising that `type alias Foo = List` is even valid, but we'll get there, eventually :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-23T11:13:41.783804</ts>
    <user>U5ZC6V535</user>
    <text>Yeap :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-23T11:19:15.809613</ts>
    <user>U5ZC6V535</user>
    <text>Is there a way to combine messages from different files? For instance I have a Seed file which includes a message ‘BoidsGenerated' and I want to include that as a case as part of my main ‘update' function in my Mail.elm file. I could of course defined it in the Main.elm file (or to a Messages.elm file).</text>
  </message>
  <message>
    <ts>2017-07-23T11:21:02.818556</ts>
    <user>U3SJEDR96</user>
    <text>`type Msg = BoidsMessage Boids.Msg`, though it might be easier to pass the message to use to `generateBoids : (List Boid -&amp;gt; msg) -&amp;gt; Cmd msg`</text>
  </message>
  <message>
    <ts>2017-07-23T11:21:28.820505</ts>
    <user>U3SJEDR96</user>
    <text>which would make `generateBoids tagger = generate tagger (list 5 boidGenerator)`</text>
  </message>
  <message>
    <ts>2017-07-23T11:25:54.840695</ts>
    <user>U5ZC6V535</user>
    <text>Yeah, but the second option means that I will have to define the msg type in say the Main.elm right?</text>
  </message>
  <message>
    <ts>2017-07-23T11:28:11.851269</ts>
    <user>U23SA861Y</user>
    <text>In all cases you will need a message type in Main.elm</text>
  </message>
  <message>
    <ts>2017-07-23T11:31:22.865728</ts>
    <user>U5ZC6V535</user>
    <text>Yes. So that means that in Main.elm you will generally have something like: 

```
type Msg =
  | ...
```

and that will have all the types for the whole application?</text>
  </message>
  <message>
    <ts>2017-07-23T11:31:43.867242</ts>
    <user>U4872964V</user>
    <text>In the Elm architecture, there is only one message type, the one that the update function from the `Html.program` accepts</text>
  </message>
  <message>
    <ts>2017-07-23T11:33:24.875071</ts>
    <user>U4872964V</user>
    <text>you may of course choose to subdivide that type in whatever way you like, but it's still only one type</text>
  </message>
  <message>
    <ts>2017-07-23T11:35:49.885526</ts>
    <user>U5ZC6V535</user>
    <text>&lt;@U4872964V&gt; Got it, so the main update function that retrieves the message and handles the different cases has all the cases of the application right?</text>
  </message>
  <message>
    <ts>2017-07-23T11:36:31.888682</ts>
    <user>U4872964V</user>
    <text>yes, the update function handles all messages, but the same applies here, you may subdivide it into smaller functions in any way you like</text>
  </message>
  <message>
    <ts>2017-07-23T11:37:45.894188</ts>
    <user>U5ZC6V535</user>
    <text>Yeap, its what I do now actually. What I was trying to do is somehow combine different messages from different files into the main update function. But that is not really possible.</text>
  </message>
  <message>
    <ts>2017-07-23T11:38:28.897086</ts>
    <user>U4872964V</user>
    <text>well, that's what you do when you make sub-types to the main Msg type</text>
  </message>
  <message>
    <ts>2017-07-23T11:39:26.900854</ts>
    <user>U4872964V</user>
    <text>but you are right that the `Main` module conceptually needs to know everything there is in your application</text>
  </message>
  <message>
    <ts>2017-07-23T11:40:08.903772</ts>
    <user>U5ZC6V535</user>
    <text>Yes, thanks for you help &lt;@U3SJEDR96&gt; &lt;@U4872964V&gt;</text>
  </message>
  <message>
    <ts>2017-07-23T12:14:21.067026</ts>
    <user>U2J1FUQTZ</user>
    <text>Probably another stupid question, trying to build a very stupi parser with elm-tools/parser that parse something like "(a12'?ds,rtye12*)" in ["a12'?ds","rtye12"] my code is  `semsall : Parser (List String)
semsall =
    inContext "semsall" &amp;lt;|
        Parser.sequence
            { start = "("
            , separator = ","
            , end = ")"
            , spaces = spaces
            , item = sem
            , trailing = Optional
            }


spaces : Parser ()
spaces =
    ignore zeroOrMore (\char -&amp;gt; char == ' ')


sem : Parser String
sem =
    inContext "sem" &amp;lt;|
        keep zeroOrMore isNotComma


isNotComma : Char -&amp;gt; Bool
isNotComma c =
    c /= ','`</text>
  </message>
  <message>
    <ts>2017-07-23T12:15:30.072893</ts>
    <user>U2J1FUQTZ</user>
    <text>I get this error `&amp;gt; run semsall  "(p,adsd23Aad)"
Err { row = 1, col = 14, source = "(p,adsd23Aad)", problem = BadOneOf ([ExpectingSymbol ",",ExpectingSymbol ")"]), context = [{ row = 1, col = 1, description = "semsall" }] }
    : Result.Result Parser.Error (List String)`</text>
  </message>
  <message>
    <ts>2017-07-23T12:16:46.079008</ts>
    <user>U2J1FUQTZ</user>
    <text>the terms beetween comma could be a string with any char except commas of course</text>
  </message>
  <message>
    <ts>2017-07-23T12:24:27.114859</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, that `sem` doesn't look correct; it's consuming the `)` at the end and then failing because it misses the end</text>
  </message>
  <message>
    <ts>2017-07-23T12:24:32.115178</ts>
    <user>U3SJEDR96</user>
    <text>try something like</text>
  </message>
  <message>
    <ts>2017-07-23T12:24:36.115419</ts>
    <user>U3SJEDR96</user>
    <text>```
sem : Parser String
sem =
    inContext "sem" &amp;lt;|
        keep zeroOrMore (not &amp;lt;&amp;lt; flip List.member [',', ')'])
```</text>
  </message>
  <message>
    <ts>2017-07-23T12:27:15.127913</ts>
    <user>U2J1FUQTZ</user>
    <text>Thx &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-23T13:00:19.287268</ts>
    <user>U2J1FUQTZ</user>
    <text>Anyone could be so kind to post an example of code showing how to use the function andThen of elm-tools/parser ?</text>
  </message>
  <message>
    <ts>2017-07-23T13:01:49.295019</ts>
    <user>U3SJEDR96</user>
    <text>Hm, it's hard to find a self-contained example</text>
  </message>
  <message>
    <ts>2017-07-23T13:04:26.307789</ts>
    <user>U3SJEDR96</user>
    <text>I've used it for recursive stuff where I build up a list of intermediary terms, though I think there's an example of that in the docs, too</text>
  </message>
  <message>
    <ts>2017-07-23T13:05:11.311642</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://github.com/elm-tools/parser/tree/2.0.1#delayed-commits&gt; specifically, in that part</text>
  </message>
  <message>
    <ts>2017-07-23T13:06:16.317492</ts>
    <user>U3SJEDR96</user>
    <text>it's not that different from `Json.Decode.andThen`, though the use-cases tend to be a little different</text>
  </message>
  <message>
    <ts>2017-07-23T13:06:36.319080</ts>
    <user>U3SJEDR96</user>
    <text>Is there a specific reason for why you need help with `andThen`?</text>
  </message>
  <message>
    <ts>2017-07-23T13:06:52.320314</ts>
    <user>U3SJEDR96</user>
    <text>It might be easier to walk you through your use-case and hope it "clicks".. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-23T13:10:18.336619</ts>
    <user>U2J1FUQTZ</user>
    <text>The terms between commas in the case I shown before could contain also "(" and ")" I'm trying to change the first and the last parenthesis to something else before using the parser</text>
  </message>
  <message>
    <ts>2017-07-23T13:11:41.343956</ts>
    <user>U2J1FUQTZ</user>
    <text>the pattern is; head(&amp;lt;everycharexceptcomma&amp;gt;,..)</text>
  </message>
  <message>
    <ts>2017-07-23T13:51:51.535588</ts>
    <user>U4872964V</user>
    <text>i'm going to look at that sortable library you tried to implement, perhaps we can make a super nice version in Elm</text>
  </message>
  <message>
    <ts>2017-07-23T14:39:55.770733</ts>
    <user>U2W28MK6K</user>
    <text>Hi all! I've been struggling with being able to send a request that returns a 204 No Content.

I've explored creating a low level request like so:

```
myRequest msg payload =
    let
        req =
            Http.request
                { method = "POST"
                , headers = []
                , url = "/my-url"
                , body =
                    (Http.jsonBody &amp;lt;|
                        Encode.object
                            [ ( "field1", Encode.string &amp;lt;| payload.field1 )
                            ]
                    )
                , expect = Http.expectStringResponse (\response -&amp;gt; Ok response.body)
                , timeout = Nothing
                , withCredentials = False
                }
    in
        Http.send msg req
```</text>
  </message>
  <message>
    <ts>2017-07-23T14:40:13.772078</ts>
    <user>U2W28MK6K</user>
    <text>i've also tried:

```
expect = Http.expectString
```
to no avail

and the result that I always get is an Error regarding not being able to parse invalid JSON</text>
  </message>
  <message>
    <ts>2017-07-23T15:04:20.886865</ts>
    <user>U68RLL9FF</user>
    <text>Hey guys, wondering im struggling with types annotation where the type is two seperate words, but i think it clicked...if i get this right...when we see `view: Model -&amp;gt; Html String` its basically shortHand for `view: Model -&amp;gt; { recordTypeA : Html, recordTypeB: String }`</text>
  </message>
  <message>
    <ts>2017-07-23T15:05:01.889838</ts>
    <user>U68RLL9FF</user>
    <text>If i'm wrong, i'd love to understand what is really happenning</text>
  </message>
  <message>
    <ts>2017-07-23T15:07:56.902862</ts>
    <user>U1UGYHGCA</user>
    <text>I think you're wrong</text>
  </message>
  <message>
    <ts>2017-07-23T15:09:01.907843</ts>
    <user>U1UGYHGCA</user>
    <text>The raw type is `Html a` where `a` can be anything at first. You will then say that, in your particular use case, it will be a `String` becoming a `Html String`</text>
  </message>
  <message>
    <ts>2017-07-23T15:09:25.909788</ts>
    <user>U1UGYHGCA</user>
    <text>For example, you have `Maybe a` using the same pattern where `a` will be the type of the value inside the `Maybe`</text>
  </message>
  <message>
    <ts>2017-07-23T15:09:38.910729</ts>
    <user>U1UGYHGCA</user>
    <text>If you have an `Int` inside it, it will be a `Maybe Int`</text>
  </message>
  <message>
    <ts>2017-07-23T15:11:39.920859</ts>
    <user>U1UGYHGCA</user>
    <text>For `Html`, the generic type `a` is the type of msg that the html can trigger</text>
  </message>
  <message>
    <ts>2017-07-23T15:49:23.099121</ts>
    <user>U68RLL9FF</user>
    <text>Thanks &lt;@U1UGYHGCA&gt; this makes much more sense than my initial though</text>
  </message>
  <message>
    <ts>2017-07-23T15:52:03.111719</ts>
    <user>U6CCW4KV1</user>
    <text>I already posted this in general, but I guess it's actually a newbie question :sweat_smile:</text>
  </message>
  <message>
    <ts>2017-07-23T15:52:23.113268</ts>
    <user>U6CCW4KV1</user>
    <text>Can somebody help me? :confused:</text>
  </message>
  <message>
    <ts>2017-07-23T16:03:14.164610</ts>
    <user>U6CGPE80L</user>
    <text>Hi everybody. What is the easiest way in elm to change dynamically style of some element?. I have button with Id and how can I choose and change its color? Should I try to use jQuery or actually exist some elm mechanism to do that?</text>
  </message>
  <message>
    <ts>2017-07-23T16:05:31.174623</ts>
    <user>U14Q8S4EM</user>
    <text>Yeah, you can do an inline style</text>
  </message>
  <message>
    <ts>2017-07-23T16:06:28.179045</ts>
    <user>U14Q8S4EM</user>
    <text>Like 
```
div
    [ class "cool-div" 
    , style
        [ ("color", model.coolDivsColor) ]
    ]
    []
```</text>
  </message>
  <message>
    <ts>2017-07-23T16:08:57.189789</ts>
    <user>U14Q8S4EM</user>
    <text>Style takes a `List (String, String)` where the first `String` is the key and the second `String` is the value for whatever style. So I do `("top", (toString model.position.y) ++ "px")` a lot, to control where something shows up, when I need highly dynamic positioning stuff going on.</text>
  </message>
  <message>
    <ts>2017-07-23T17:30:52.570596</ts>
    <user>U3F8KG1DE</user>
    <text>Hello, I would like to implement &lt;https://www.w3schools.com/howto/tryit.asp?filename=tryhow_js_accordion_animate&gt; in ELM</text>
  </message>
  <message>
    <ts>2017-07-23T17:31:58.575395</ts>
    <user>U3F8KG1DE</user>
    <text>What is missing is how to find out the size of the div to animate i.e. panel.scrollHeight</text>
  </message>
  <message>
    <ts>2017-07-23T17:41:44.617878</ts>
    <user>U3F8KG1DE</user>
    <text>Should I use port for this?</text>
  </message>
  <message>
    <ts>2017-07-23T18:10:59.751981</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U6CGPE80L&gt; You should devise a function whose value is the color you want.  No jQuery needed!</text>
  </message>
  <message>
    <ts>2017-07-23T19:14:55.053465</ts>
    <user>U6C09T8HX</user>
    <text>I've got a question: In the Http library the first definition is: "type alias Request a = Request a".  I thought type alias was used to give a name to an existing type so does this mean that "Request" is already defined?  If so where?...and why define it again?</text>
  </message>
  <message>
    <ts>2017-07-23T19:15:27.056316</ts>
    <user>U6C09T8HX</user>
    <text>...with the same name?</text>
  </message>
  <message>
    <ts>2017-07-23T19:16:30.061549</ts>
    <user>U0JFGGZS6</user>
    <text>&lt;@U3F8KG1DE&gt;  you may find this helpful for getting to the next sibling and its scrollHeight:  &lt;http://package.elm-lang.org/packages/debois/elm-dom/1.2.3/DOM&gt;</text>
  </message>
  <message>
    <ts>2017-07-23T19:16:42.062578</ts>
    <user>U0JFGGZS6</user>
    <text>without resorting to ports</text>
  </message>
  <message>
    <ts>2017-07-23T19:32:27.144264</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U6C09T8HX&gt; It is an alias for a type defined in another module. In this case, a module which is not exported from the package.</text>
  </message>
  <message>
    <ts>2017-07-23T19:35:29.159269</ts>
    <user>U6C09T8HX</user>
    <text>hmmm</text>
  </message>
  <message>
    <ts>2017-07-23T19:43:33.200711</ts>
    <user>U6C09T8HX</user>
    <text>Forgive my ignorance gilbert, but are you saying that the http package contains a module somewhere within it which defines the Request type but since it is not exported by that module we see this: "type alias Request a = Request a"?  So all I need to take away from that like is that something can be tagged as a request?</text>
  </message>
  <message>
    <ts>2017-07-23T19:47:30.221287</ts>
    <user>U48AEBJQ3</user>
    <text>It seems that there are two issues in your question. First is that there is no special way to reexport types and functions from a module and sometimes you end up having something in a module you don't want to export. Using this type alias is effectively exporting just this type from the other module.

Also, it is very common to *not* export the constructors of a data type. By leaving them hidden, the maintainer can change implementation details without changing the exposed API. It also helps to prevent people from creating bad states by forcing them to use controlled functions to get an instance of a type.</text>
  </message>
  <message>
    <ts>2017-07-23T19:49:45.232979</ts>
    <user>U3LUC6SNS</user>
    <text>Hello, I have two functions that I would like to run in sequence in the `update` function:

First is 
```
login2 : Model -&amp;gt; (Model, Cmd Msg)
login2 model =
  ( login model,  Request.User.loginUserCmd model Request.Api.loginUrl)
```
and second is
```
search : SearchDomain -&amp;gt; String -&amp;gt; Page -&amp;gt; Model -&amp;gt; ( Model, Cmd Msg )
search searchDomain query page model = ...
```
How would I go about doing this?</text>
  </message>
  <message>
    <ts>2017-07-23T19:51:16.241546</ts>
    <user>U6C09T8HX</user>
    <text>oThank you very much for taking the time to answer my question Gilbert!  It's very much appreciated.  How can I repay you?</text>
  </message>
  <message>
    <ts>2017-07-23T19:56:13.269830</ts>
    <user>U6C09T8HX</user>
    <text>...and what motiates you to hang out here and answer questions?</text>
  </message>
  <message>
    <ts>2017-07-23T20:17:50.400734</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U3LUC6SNS&gt; ```
let
  (model1, cmds1) = login2 model
  (model2, cmds2) = search searchdomain something somepage model1
in 
  (model2, Cmd.batch [cmds1, cmds2])
```</text>
  </message>
  <message>
    <ts>2017-07-23T20:20:06.414113</ts>
    <user>U153UK3FA</user>
    <text>&lt;http://package.elm-lang.org/packages/Fresheyeball/elm-return/latest&gt; is a package that can remove some of the boilerplate</text>
  </message>
  <message>
    <ts>2017-07-23T20:38:38.528615</ts>
    <user>U3LUC6SNS</user>
    <text>Thankyou &lt;@U153UK3FA&gt;!!</text>
  </message>
  <message>
    <ts>2017-07-23T20:40:22.540024</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U3LUC6SNS&gt; I wasn't sure if you wanted to sequence the Cmds (which you can't do)</text>
  </message>
  <message>
    <ts>2017-07-23T20:41:24.547323</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U153UK3FA&gt;, that works fine - actually, it works beautifully!</text>
  </message>
  <message>
    <ts>2017-07-23T20:43:11.559156</ts>
    <user>U153UK3FA</user>
    <text>just to be clear, there is no guarantee that your login will complete before your search request.</text>
  </message>
  <message>
    <ts>2017-07-23T20:45:00.571303</ts>
    <user>U153UK3FA</user>
    <text>if they depend that ordering (implicitly passing state through the model) then they'll likely fail under different network conditions</text>
  </message>
  <message>
    <ts>2017-07-23T21:01:11.683558</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U6C09T8HX&gt; Just try to be a decent person who makes the world a bit better. I don't have a rationalization for why I do this.</text>
  </message>
  <message>
    <ts>2017-07-23T21:45:17.031171</ts>
    <user>U6CEJALSF</user>
    <text>hey folks! new to elm and taking the knowthen course on elm beginners concepts.  I'm a JavaScript developer by day, which is a pretty natural progression into elm, I think.
(link to _free_ course: &lt;http://courses.knowthen.com/&gt;)</text>
  </message>
  <message>
    <ts>2017-07-23T21:49:24.063830</ts>
    <user>U6CEJALSF</user>
    <text>I hope to get to know Elm a lot better over the coming months, partly for self-enrichment, partly in order to convince my team that Elm is a big step in the right direction for web UIs.</text>
  </message>
  <message>
    <ts>2017-07-23T21:55:28.114110</ts>
    <user>U0JBSEGHY</user>
    <text>I've got this message. ```type Msg
    = Answer String
    | MakeCall String
    | IncomingCall Maybe String```</text>
  </message>
  <message>
    <ts>2017-07-23T21:55:49.116992</ts>
    <user>U0JBSEGHY</user>
    <text>My update is giving me this error ```Pattern Main.IncomingCall has too few arguments.

220|         IncomingCall caller -&amp;gt;
             ^^^^^^^^^^^^^^^^^^^
Expecting 2, but got 1.```</text>
  </message>
  <message>
    <ts>2017-07-23T21:56:20.121166</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U0JBSEGHY&gt; `IncomingCall (Maybe String)`</text>
  </message>
  <message>
    <ts>2017-07-23T21:56:22.121460</ts>
    <user>U0JBSEGHY</user>
    <text>I'm calling it from a subscription. ```subscriptions model =
    Sub.batch
        [ incomingCall IncomingCall ....```</text>
  </message>
  <message>
    <ts>2017-07-23T21:56:30.122658</ts>
    <user>U0JBSEGHY</user>
    <text>Oh</text>
  </message>
  <message>
    <ts>2017-07-23T21:56:58.126485</ts>
    <user>U0JBSEGHY</user>
    <text>```The argument to function `incomingCall` is causing a mismatch.

276|           incomingCall IncomingCall
                            ^^^^^^^^^^^^
Function `incomingCall` is expecting the argument to be:

    String -&amp;gt; msg

But it is:

    Maybe String -&amp;gt; Msg
```</text>
  </message>
  <message>
    <ts>2017-07-23T21:57:42.132851</ts>
    <user>U0JBSEGHY</user>
    <text>I just needed to add Maybe String to my port it seems</text>
  </message>
  <message>
    <ts>2017-07-23T21:57:50.133887</ts>
    <user>U0JBSEGHY</user>
    <text>slowly getting the hang of this Types thing :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-24T02:21:57.409264</ts>
    <user>U3F8KG1DE</user>
    <text>I thought so too but this way feels like a workaround. I mean perhaps there is another way to acheive the same goal i.e. to animate some div element?</text>
  </message>
  <message>
    <ts>2017-07-24T02:23:46.429131</ts>
    <user>U3F8KG1DE</user>
    <text>&lt;@U0JFGGZS6&gt; I thought so too but this way feels like a workaround. I mean perhaps there is another way to acheive the same goal i.e. to animate some div element?</text>
  </message>
  <message>
    <ts>2017-07-24T02:40:27.626775</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U3F8KG1DE&gt; it is a workaround, Elm treats the DOM as being essentially ‘write only' and doesn't provide ways to look at the state of the DOM. All attempts to look at the DOM require doing some kind of workaround.</text>
  </message>
  <message>
    <ts>2017-07-24T02:43:50.669400</ts>
    <user>U153UK3FA</user>
    <text>The simplest way to do what you want is to explicitly set the height so you already know it</text>
  </message>
  <message>
    <ts>2017-07-24T02:45:39.691909</ts>
    <user>U3F8KG1DE</user>
    <text>&lt;@U153UK3FA&gt; This is what I have actually done but this mean I will have to adjust this height every time I modify size of my div.</text>
  </message>
  <message>
    <ts>2017-07-24T02:46:10.698750</ts>
    <user>U153UK3FA</user>
    <text>Yep, you will</text>
  </message>
  <message>
    <ts>2017-07-24T02:47:40.717389</ts>
    <user>U3F8KG1DE</user>
    <text>I am still trying to find out a more ELM way to that. I mean CSS way is quite simple to use but not like really ELM way doing this</text>
  </message>
  <message>
    <ts>2017-07-24T02:48:06.722839</ts>
    <user>U153UK3FA</user>
    <text>The fact that the DOM keeps state itself that Elm can't set or calculate is a big pain</text>
  </message>
  <message>
    <ts>2017-07-24T02:48:24.726891</ts>
    <user>U153UK3FA</user>
    <text>Btw, it's just 'Elm' like the tree</text>
  </message>
  <message>
    <ts>2017-07-24T05:25:15.627787</ts>
    <user>U604S603Y</user>
    <text>is there a way to get "named arguments" in function signature when using auto-complete (Visual Studio Code with Elm plugin), e.g. via a certain type of comment?</text>
  </message>
  <message>
    <ts>2017-07-24T05:26:05.645921</ts>
    <user>U604S603Y</user>
    <text>for example I have `titleArea : String -&amp;gt; Html msg`, but I want it to display additional info to explain that the `String` is the title text</text>
  </message>
  <message>
    <ts>2017-07-24T05:35:15.839700</ts>
    <user>U3SJEDR96</user>
    <text>The issue here is that the argument might not even have a name; due to point-free programming</text>
  </message>
  <message>
    <ts>2017-07-24T05:35:28.843943</ts>
    <user>U3SJEDR96</user>
    <text>for example, that could be implemented as `titleArea = Html.text`</text>
  </message>
  <message>
    <ts>2017-07-24T05:37:29.885779</ts>
    <user>U1SF6G7PA</user>
    <text>you can use a record to get named arguments `titleArea : { title : String } -&amp;gt; Html msg`</text>
  </message>
  <message>
    <ts>2017-07-24T05:38:12.900409</ts>
    <user>U1SF6G7PA</user>
    <text>but i have no oppinion about whether this is a good idea :wink:</text>
  </message>
  <message>
    <ts>2017-07-24T05:39:46.932947</ts>
    <user>U604S603Y</user>
    <text>mh, a record... that would make some of my long function signatures easier to handle for sure</text>
  </message>
  <message>
    <ts>2017-07-24T08:03:42.538206</ts>
    <user>U4872964V</user>
    <text>Yes, a record would give you auto-complete in a competent editor/plugin. But it would be nice to get the names of the parameters too, as defined in the function definition (if not using points-free style, which I never do in function definitions because it's just confusing)</text>
  </message>
  <message>
    <ts>2017-07-24T10:05:02.767116</ts>
    <user>U329ZV5T8</user>
    <text>Anybody know how to install the elm-platform binaries on a by-project basis? I have one project using 0.17 and another using 0.18.</text>
  </message>
  <message>
    <ts>2017-07-24T10:08:24.883463</ts>
    <user>U4872964V</user>
    <text>&lt;@U329ZV5T8&gt; there are several tools, &lt;https://github.com/eirslett/elmvm&gt; or &lt;https://github.com/mattludwigs/elm-version-manager&gt; probably more</text>
  </message>
  <message>
    <ts>2017-07-24T10:09:15.912685</ts>
    <user>U329ZV5T8</user>
    <text>Thanks. I was hoping  NPM could just handle it all, but that'll do I suppose!</text>
  </message>
  <message>
    <ts>2017-07-24T10:29:44.631482</ts>
    <user>U3SJEDR96</user>
    <text>Pretty sure you _can_ also do it with npm/yarn; though you'll have to manually pass paths to stuff like `elm-test`</text>
  </message>
  <message>
    <ts>2017-07-24T11:00:21.749889</ts>
    <user>U6CQ51474</user>
    <text>I need help! I am using ContextMenu in a div but when I right click on custom caret it select the text! any solution :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-24T11:02:05.818562</ts>
    <user>U4872964V</user>
    <text>&lt;@U6CQ51474&gt; if you make an example in &lt;https://ellie-app.com/&gt; I'm sure somebody can help you</text>
  </message>
  <message>
    <ts>2017-07-24T11:42:20.300885</ts>
    <user>U6CQ51474</user>
    <text>It's a little difficult to write an example of this because there is a lot of code, it's an SVG rect where i write a text and so i use contextMenu to rightclick and display a menu on a custom caret position! So on right click it select the word between two spaces!</text>
  </message>
  <message>
    <ts>2017-07-24T11:45:40.417706</ts>
    <user>U4872964V</user>
    <text>But if it doesn't happen in a small example, then it's very hard to help, because it will be specific to your code</text>
  </message>
  <message>
    <ts>2017-07-24T12:22:47.706106</ts>
    <user>U3SARGL7Q</user>
    <text>hey can anyone recommend some good sample code on how to emit different message based on parsing incoming JSON in websocket?</text>
  </message>
  <message>
    <ts>2017-07-24T12:56:37.801674</ts>
    <user>U4872964V</user>
    <text>&lt;@U3SARGL7Q&gt; not sure exactly what you want, but you can certainly decode the JSON into different union type values and handle the different cases in your update function</text>
  </message>
  <message>
    <ts>2017-07-24T13:06:47.143052</ts>
    <user>U3SARGL7Q</user>
    <text>&lt;@U4872964V&gt; I am trying to conditionally parse JSON, I have JSON's delivered over WS such as `{"event" : "abc", params: {}}`, `{"event" : "def", params: {"someparam" :123}}`</text>
  </message>
  <message>
    <ts>2017-07-24T13:07:35.169274</ts>
    <user>U3SARGL7Q</user>
    <text>I want to write JSON decoder that outputs the Msg.Abc or Msg.Def, where parameters to these messages are different depending on the message that arrived</text>
  </message>
  <message>
    <ts>2017-07-24T13:19:33.551347</ts>
    <user>U2M4VPZ9D</user>
    <text>&lt;@U3SARGL7Q&gt; Can you maybe use andThen as in &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Json-Decode#andThen&gt; ?</text>
  </message>
  <message>
    <ts>2017-07-24T13:20:46.591056</ts>
    <user>U2M4VPZ9D</user>
    <text>Depending on what the event string is set to, you chain it the right decoder.</text>
  </message>
  <message>
    <ts>2017-07-24T13:20:46.591290</ts>
    <user>U3SARGL7Q</user>
    <text>&lt;@U2M4VPZ9D&gt; I already reached the point where I know that it is about andThen but I can't proceed</text>
  </message>
  <message>
    <ts>2017-07-24T13:20:51.594048</ts>
    <user>U3SARGL7Q</user>
    <text>here's my code</text>
  </message>
  <message>
    <ts>2017-07-24T13:20:56.596246</ts>
    <user>U3SARGL7Q</user>
    <text>```
module Subscriptions exposing 
  ( subscriptions
  )

import WebSocket
import Json.Decode as Decode

import Models exposing (Model)
import Msgs exposing (Msg)


{-| Listens on messages on the WebSocket channels to the backend.
-}
subscriptions : Model -&amp;gt; Sub Msg
subscriptions model =
  WebSocket.listen "&lt;ws://localhost:5000/api/player/v1.0/stream&gt;" playerMessageHandler



{-| Handles incoming messages that can be sent by the player.
-}
playerMessageHandler : String -&amp;gt; Msg
playerMessageHandler payload =
  case Decode.decodeString playerMessageDecoder payload of
    Err err -&amp;gt;
      Msgs.OnPlayerUnexpectedMessage err

    Ok msg -&amp;gt;
      msg



type alias PlayerEvent =
    { event : String
    , tracks: List }




{-| Decoder for incoming messages that can be sent by the player that is
converting JSON into message appropriate for the payload.
-}
playerMessageDecoder : Decode.Decoder Msg
playerMessageDecoder =
  Decode.field "event" Decode.string
  |&amp;gt; Decode.andThen interpretPlayerEvent



interpretPlayerEvent : String -&amp;gt; Decode.Decoder Msg
interpretPlayerEvent event =
  case event of 
    "snapshot" -&amp;gt;
      Decode.succeed Msgs.OnPlayerSnapshot

    "track-position" -&amp;gt;
      Decode.succeed Msgs.OnPlayerTrackPosition

    _ -&amp;gt;
      Decode.fail event
```</text>
  </message>
  <message>
    <ts>2017-07-24T13:23:32.678401</ts>
    <user>U3SARGL7Q</user>
    <text>but the thing is that the remaining JSON fields depend on what is in the "event" field and I struggle to find a way to do this</text>
  </message>
  <message>
    <ts>2017-07-24T13:32:43.977780</ts>
    <user>U2M4VPZ9D</user>
    <text>&lt;@U3SARGL7Q&gt; What does your snapshot structure look like? Did you write a decoder for that?</text>
  </message>
  <message>
    <ts>2017-07-24T13:33:31.004168</ts>
    <user>U3SARGL7Q</user>
    <text>there are two types of messages</text>
  </message>
  <message>
    <ts>2017-07-24T13:33:51.014665</ts>
    <user>U3SARGL7Q</user>
    <text>```
{"event":"snapshot","tracks":[{"state":"playing","position":82940,"track":{"rotation_id":"whatever2","kind":"auto","id":793,"file":{"name":"32 Hope.mp3","id":"dd8f2ff7-1ee0-45c5-b8d8-5be625acccb7","duration":93037},"fade_out_at":"2017-07-24T19:25:18.767898+02:00","fade_in_at":"2017-07-24T19:23:45.730898+02:00","cue_out_at":"2017-07-24T19:25:18.767898+02:00","cue_in_at":"2017-07-24T19:23:45.730898+02:00"}}]}
```

or

```
{"event":"track-position","track":{"rotation_id":"whatever2","kind":"auto","id":793,"file":{"name":"32 Hope.mp3","id":"dd8f2ff7-1ee0-45c5-b8d8-5be625acccb7","duration":93037},"fade_out_at":"2017-07-24T19:25:18.767898+02:00","fade_in_at":"2017-07-24T19:23:45.730898+02:00","cue_out_at":"2017-07-24T19:25:18.767898+02:00","cue_in_at":"2017-07-24T19:23:45.730898+02:00"},"position":84164}
```</text>
  </message>
  <message>
    <ts>2017-07-24T13:36:38.103848</ts>
    <user>U3SARGL7Q</user>
    <text>I know how to write decoder if the schema is always the same</text>
  </message>
  <message>
    <ts>2017-07-24T13:39:45.202856</ts>
    <user>U3SJEDR96</user>
    <text>`field "event" string |&amp;gt; andThen (\eventString -&amp;gt; case eventString of "snapshot" -&amp;gt; snapshotDecoder [...])`</text>
  </message>
  <message>
    <ts>2017-07-24T13:40:26.224375</ts>
    <user>U3SJEDR96</user>
    <text>oh, you already have that</text>
  </message>
  <message>
    <ts>2017-07-24T13:40:44.234647</ts>
    <user>U3SJEDR96</user>
    <text>well, sort of</text>
  </message>
  <message>
    <ts>2017-07-24T13:40:58.242083</ts>
    <user>U3SJEDR96</user>
    <text>currently you're just succeeding with a message, rather than decoding the data</text>
  </message>
  <message>
    <ts>2017-07-24T13:41:26.257185</ts>
    <user>U2M4VPZ9D</user>
    <text>Yes, I think you just need to write the decoder for the snapshot tracks and the decoder for the track-position track.</text>
  </message>
  <message>
    <ts>2017-07-24T13:41:28.257960</ts>
    <user>U3SJEDR96</user>
    <text>but you could do `Json.map Msgs.OnPlayerSnapshot playerSnapshotDecoder` instead</text>
  </message>
  <message>
    <ts>2017-07-24T13:41:33.260940</ts>
    <user>U3SJEDR96</user>
    <text>exactly</text>
  </message>
  <message>
    <ts>2017-07-24T13:41:49.269949</ts>
    <user>U2M4VPZ9D</user>
    <text>Sorry sorting out kids bath at the same time :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-24T13:43:53.336506</ts>
    <user>U3SARGL7Q</user>
    <text>But my exact problem is how to instruct elm to pick up the right decoder depending on the value of "event" field?</text>
  </message>
  <message>
    <ts>2017-07-24T13:45:41.393596</ts>
    <user>U3SARGL7Q</user>
    <text>andThen in &lt;@U3SJEDR96&gt; example does not have access to another top-level fields from the JSON</text>
  </message>
  <message>
    <ts>2017-07-24T13:49:06.504131</ts>
    <user>U3SJEDR96</user>
    <text>it does, depending on if you did `field "foo" (string |&amp;gt; andThen ..)` or  `field "foo" string |&amp;gt; andThen ..` - the first runs within `field "foo"`, the other runs at the same level as `field "foo"`. You can't go "up", but you can definitely stay in that same context</text>
  </message>
  <message>
    <ts>2017-07-24T13:52:23.612455</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://ellie-app.com/3Qm3MMZJFgba1/0&gt; for a _very_ q'n'd example</text>
  </message>
  <message>
    <ts>2017-07-24T13:52:54.629343</ts>
    <user>U3SJEDR96</user>
    <text>now you'd "simply" need to write proper decoders for snapshot and trackPosition, and you're all set</text>
  </message>
  <message>
    <ts>2017-07-24T13:54:12.672031</ts>
    <user>U3SARGL7Q</user>
    <text>hmm i'll check it now</text>
  </message>
  <message>
    <ts>2017-07-24T13:55:38.719805</ts>
    <user>U3SJEDR96</user>
    <text>Your solution is like 90% there, hence my being confused :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-24T14:07:26.114408</ts>
    <user>U3SARGL7Q</user>
    <text>hmm seems to work</text>
  </message>
  <message>
    <ts>2017-07-24T14:07:31.117024</ts>
    <user>U3SARGL7Q</user>
    <text>why that parentheses matter?</text>
  </message>
  <message>
    <ts>2017-07-24T14:07:35.119480</ts>
    <user>U3SARGL7Q</user>
    <text>in that particular case?</text>
  </message>
  <message>
    <ts>2017-07-24T14:08:52.159701</ts>
    <user>U3SARGL7Q</user>
    <text>guys i am programming for years but elm syntax is not readable at all at the beginning</text>
  </message>
  <message>
    <ts>2017-07-24T14:10:42.218148</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U3SARGL7Q&gt; In Elm, arguments are separated by spaces, not commas. Thus if you are nesting functions, you need to wrap the sub-functions in parens</text>
  </message>
  <message>
    <ts>2017-07-24T14:10:53.223990</ts>
    <user>U4WH8STNX</user>
    <text>&lt;@U3SARGL7Q&gt; it is just a matter of getting used to it.</text>
  </message>
  <message>
    <ts>2017-07-24T14:11:02.228565</ts>
    <user>U0LPMPL2U</user>
    <text>unlike C-style languages, parens go around both the function name _and_ the function arguments</text>
  </message>
  <message>
    <ts>2017-07-24T14:11:19.237725</ts>
    <user>U0LPMPL2U</user>
    <text>so `(sum 1 2)`, not `sum(1, 2)`</text>
  </message>
  <message>
    <ts>2017-07-24T14:11:45.251243</ts>
    <user>U3SARGL7Q</user>
    <text>anyway you're awesome, thanks for help!</text>
  </message>
  <message>
    <ts>2017-07-24T14:12:07.262880</ts>
    <user>U3SJEDR96</user>
    <text>You were really 90% there, just needed a nudge :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-24T14:16:01.386057</ts>
    <user>U3SARGL7Q</user>
    <text>Ok one more question: how to detect that websocket connection is down? :slightly_smiling_face: seems that it is hidden and there's no way to access it easily without using WebSocket.LowLevel?</text>
  </message>
  <message>
    <ts>2017-07-24T14:23:47.636688</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, it's a design decision that was made in that library that you can't actually know it. It implements incremental backoff and builds up a queue of outgoing messages, but you can't actually know whether you're connected. It's a little controversial, I think there are some github issues about it</text>
  </message>
  <message>
    <ts>2017-07-24T14:24:04.646155</ts>
    <user>U2SR9DL7Q</user>
    <text>I have a maybe odd question. I have a type made from four of the same type, like `type FunType = Other Other Other Other` I'm trying to create a map2 essentially for `FunType` where the function would look like `map2 : (Other -&amp;gt; a -&amp;gt; Other) -&amp;gt; FunType -&amp;gt; List a -&amp;gt; Funtype` ... it should essentially take the first four from any list, with a default if the list doesn't have at least four things.</text>
  </message>
  <message>
    <ts>2017-07-24T14:24:28.658741</ts>
    <user>U3SARGL7Q</user>
    <text>&lt;@U3SJEDR96&gt; I need to inform the user if the connection went down, so indeed I will consider this controversial.</text>
  </message>
  <message>
    <ts>2017-07-24T14:24:52.671818</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U2SR9DL7Q&gt; you can't use `Other` in a type signature. `Other` is a value / constructor, not a type :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-24T14:25:13.683095</ts>
    <user>U3SJEDR96</user>
    <text>It seems to be a type, too</text>
  </message>
  <message>
    <ts>2017-07-24T14:25:32.694239</ts>
    <user>U0LPMPL2U</user>
    <text>oh I see :smile:</text>
  </message>
  <message>
    <ts>2017-07-24T14:25:36.696043</ts>
    <user>U3SJEDR96</user>
    <text>though that type only has 3 `Other` values, and 1 serving as the tag :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-24T14:26:26.724030</ts>
    <user>U3SJEDR96</user>
    <text>so you can do `case list of a :: b :: c :: d :: _` to see if there are 4 entries _and_ get them out at the same time</text>
  </message>
  <message>
    <ts>2017-07-24T14:26:35.729110</ts>
    <user>U2SR9DL7Q</user>
    <text>sorry... I wanted unambiguous names for the example but it didn't work. In production, I have a `type Players = FourPlayers Player Player Player Player`</text>
  </message>
  <message>
    <ts>2017-07-24T14:26:36.729575</ts>
    <user>U3SJEDR96</user>
    <text>which I suppose is what you're actually asking :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-24T14:26:57.741186</ts>
    <user>U3SJEDR96</user>
    <text>That's still only 3 players, though :smile:</text>
  </message>
  <message>
    <ts>2017-07-24T14:27:23.754630</ts>
    <user>U3SJEDR96</user>
    <text>The first one is the tag of your type, the next 3 are the values it holds</text>
  </message>
  <message>
    <ts>2017-07-24T14:27:39.763735</ts>
    <user>U3SJEDR96</user>
    <text>like `type MyType = String String` can only hold a single `String`</text>
  </message>
  <message>
    <ts>2017-07-24T14:28:12.781435</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U3SJEDR96&gt; fixed it. it's really four. and that case statement solves the issue of more than four but not less than four in the list</text>
  </message>
  <message>
    <ts>2017-07-24T14:28:47.800446</ts>
    <user>U3SJEDR96</user>
    <text>well less than four is `_ -&amp;gt;` :wink:</text>
  </message>
  <message>
    <ts>2017-07-24T14:29:24.820783</ts>
    <user>U3SJEDR96</user>
    <text>or `a :: b :: c :: _` and so on if you want to be explicit about it. Or even `[ a, b, c]` so the order doesn't matter as much</text>
  </message>
  <message>
    <ts>2017-07-24T14:29:35.827028</ts>
    <user>U3SJEDR96</user>
    <text>(the order of your case-statements, that is)</text>
  </message>
  <message>
    <ts>2017-07-24T14:30:58.872470</ts>
    <user>U2SR9DL7Q</user>
    <text>Hmmm... so when you say `case list of a :: b :: c :: _`, elm interprets that as _"name as many values in this list as you can up to the first three values?"_</text>
  </message>
  <message>
    <ts>2017-07-24T14:32:49.931819</ts>
    <user>U3SJEDR96</user>
    <text>```
case yourList of
  a :: b :: c :: d :: _ -&amp;gt; "I have 4 or more values!"
  a :: b :: c :: _ -&amp;gt; "Exactly 3, because 4 or more is already matched"
  val1 :: val2 :: _ -&amp;gt; "other names work, too"
  _ -&amp;gt; "1 or 0, and I'm lazy to type them out"
```</text>
  </message>
  <message>
    <ts>2017-07-24T14:33:25.951339</ts>
    <user>U2SR9DL7Q</user>
    <text>Ahhh... okay, no spooky magic, just regular patterns matching.</text>
  </message>
  <message>
    <ts>2017-07-24T14:33:39.958811</ts>
    <user>U3SJEDR96</user>
    <text>So what's important here is that you can think of `[ 1, 2, 3 ]` as sugar for `1 :: 2 :: 3 :: []`</text>
  </message>
  <message>
    <ts>2017-07-24T14:33:47.963010</ts>
    <user>U3SJEDR96</user>
    <text>and then the whole thing becomes regular pattern matching :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-24T14:36:54.062504</ts>
    <user>U2SR9DL7Q</user>
    <text>That... can work. Permit me to expand scope one step further. I have this recurring problem with lists, where I keep dealing with handling edge cases in lists that don't exist. In this case, when constructing the players, each `Player` has an order, represented by an integer. I wanted a neat way to construct the players, some thing like `List.map (\x = Player x ) &amp;lt;| List.range 1 4` ... and this will work, but I'll need to do the pattern match as you suggest, which is _fine_.</text>
  </message>
  <message>
    <ts>2017-07-24T14:37:50.092467</ts>
    <user>U2SR9DL7Q</user>
    <text>But I feel strange handling cases that will never happen, and it makes me feel like I'm not writing this properly. There should be a way to structure the code so that isn't necessary is my intuition.</text>
  </message>
  <message>
    <ts>2017-07-24T14:38:43.120381</ts>
    <user>U2SR9DL7Q</user>
    <text>If my types make the compiler ask for cases that are impossible, I must have the wrong mental model of my types...</text>
  </message>
  <message>
    <ts>2017-07-24T14:39:24.142680</ts>
    <user>U3SJEDR96</user>
    <text>A list has an arbitrary number of entries, and it sounds like you need a type that has a stricter number; for example your `Players` type, or perhaps a record of 4-tuple..</text>
  </message>
  <message>
    <ts>2017-07-24T14:40:12.168456</ts>
    <user>U3SJEDR96</user>
    <text>You'll end up with somewhat less "neat" code, in the sense that it will be more explicit about what it does and how it works, but _neat_ comes at a cost, too</text>
  </message>
  <message>
    <ts>2017-07-24T14:40:38.182863</ts>
    <user>U2SR9DL7Q</user>
    <text>the `Players` type became a thing because List of Players was peppering maybes everywhere</text>
  </message>
  <message>
    <ts>2017-07-24T14:40:58.193543</ts>
    <user>U2SR9DL7Q</user>
    <text>and you're right, I have to write more boilerplate, but it feels better than before.</text>
  </message>
  <message>
    <ts>2017-07-24T14:41:01.195504</ts>
    <user>U3SJEDR96</user>
    <text>I'd say that a vast improvement!</text>
  </message>
  <message>
    <ts>2017-07-24T14:42:06.229618</ts>
    <user>U2SR9DL7Q</user>
    <text>I'm satisfied with the decision. Except that I sometimes wonder how I'd reimplement the useful container type functions, like map.</text>
  </message>
  <message>
    <ts>2017-07-24T14:43:15.266593</ts>
    <user>U2SR9DL7Q</user>
    <text>Well, map is okay. But map2 is strange.</text>
  </message>
  <message>
    <ts>2017-07-24T14:44:23.303659</ts>
    <user>U0LPMPL2U</user>
    <text>I think `map` an `map2` don't make as much sense now since your type is no longer parameterized</text>
  </message>
  <message>
    <ts>2017-07-24T14:44:57.322430</ts>
    <user>U0LPMPL2U</user>
    <text>The signature of list map is `List.map : (a -&amp;gt; b) -&amp;gt; List a -&amp;gt; List b`</text>
  </message>
  <message>
    <ts>2017-07-24T14:45:09.328753</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, I was trying to figure out what `map2` would actually do in this case :thinking_face:</text>
  </message>
  <message>
    <ts>2017-07-24T14:45:40.346008</ts>
    <user>U0LPMPL2U</user>
    <text>A four players map would have to look like `FourPlayers.map : (Player -&amp;gt; Player) -&amp;gt; FourPlayers -&amp;gt; FourPlayers`</text>
  </message>
  <message>
    <ts>2017-07-24T14:45:43.348019</ts>
    <user>U2SR9DL7Q</user>
    <text>map2 takes players and a list and applies function to each player with the corresponding value from each list</text>
  </message>
  <message>
    <ts>2017-07-24T14:45:55.354228</ts>
    <user>U0LPMPL2U</user>
    <text>which I guess could make sense if you're transforming players</text>
  </message>
  <message>
    <ts>2017-07-24T14:46:49.383722</ts>
    <user>U0LPMPL2U</user>
    <text>The problem is that the `map` and `map2` would only allow functions of type `Player -&amp;gt;Player` and `Player -&amp;gt; Player -&amp;gt; Player` respectively</text>
  </message>
  <message>
    <ts>2017-07-24T14:47:25.403183</ts>
    <user>U2SR9DL7Q</user>
    <text>Yeah, what I want isn't really map. It's a map-player humunculus monstrosity</text>
  </message>
  <message>
    <ts>2017-07-24T14:48:04.423710</ts>
    <user>U0LPMPL2U</user>
    <text>Perhaps you do want a parameterized type?</text>
  </message>
  <message>
    <ts>2017-07-24T14:48:13.428392</ts>
    <user>U2SR9DL7Q</user>
    <text>But really just a way to take 4 values from a list, andapply them to each player in players, which i think &lt;@U3SJEDR96&gt; solution would do.</text>
  </message>
  <message>
    <ts>2017-07-24T14:48:26.435618</ts>
    <user>U0LPMPL2U</user>
    <text>`type FourItems a = FourItems a a a a` ?</text>
  </message>
  <message>
    <ts>2017-07-24T14:48:45.445639</ts>
    <user>U0LPMPL2U</user>
    <text>Then it would make sense to have a function `FourItems.map2`</text>
  </message>
  <message>
    <ts>2017-07-24T14:49:01.454100</ts>
    <user>U3SJEDR96</user>
    <text>Perhaps it makes sense to be explicit about the arguments - `mapPlayer1and2 : (a -&amp;gt; Player -&amp;gt; Player) -&amp;gt; a -&amp;gt; a -&amp;gt; Players -&amp;gt; Players` something like that?</text>
  </message>
  <message>
    <ts>2017-07-24T14:49:16.462406</ts>
    <user>U3SJEDR96</user>
    <text>I.e. 2 `a`'s for 2 players?</text>
  </message>
  <message>
    <ts>2017-07-24T14:52:03.552194</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U0LPMPL2U&gt; That's more abstraction than I may need. It's always 4 players. Players functions like a fixed list of 4 things. Because it's not a list, I have to explicitly handle mapping functions that interact with it. I was hoping that I was missing a clever way to let it interact with lists. So if I have a list of four items, I could use it in a function with players and get a new Players back. Thats why it feels like map two functionality in my head.</text>
  </message>
  <message>
    <ts>2017-07-24T14:52:26.564303</ts>
    <user>U2SR9DL7Q</user>
    <text>I have this function
```
playerMap : (Player -&amp;gt; Player) -&amp;gt; Players -&amp;gt; Players
playerMap func players =
    let
        (FourPlayers p1 p2 p3 p4) =
            players
    in
    FourPlayers (func p1) (func p2) (func p3) (func p4)
```</text>
  </message>
  <message>
    <ts>2017-07-24T14:52:48.576186</ts>
    <user>U0LPMPL2U</user>
    <text>yup, that makes sense</text>
  </message>
  <message>
    <ts>2017-07-24T14:52:57.580507</ts>
    <user>U3SJEDR96</user>
    <text>(you can actually do that pattern in the declaration)</text>
  </message>
  <message>
    <ts>2017-07-24T14:53:34.600247</ts>
    <user>U3SJEDR96</user>
    <text>i.e. `playerMap func (FourPlayers p1 p2 p3 p4) = `...</text>
  </message>
  <message>
    <ts>2017-07-24T14:54:00.613937</ts>
    <user>U2SR9DL7Q</user>
    <text>which works just fine for transforming players. I just wanted to find the best solution for doing the same thing but with a list added 
`playerMap2 : (Player -&amp;gt; a -&amp;gt; Player) -&amp;gt; Players  -&amp;gt; List a -&amp;gt; Players`</text>
  </message>
  <message>
    <ts>2017-07-24T14:54:47.639173</ts>
    <user>U2SR9DL7Q</user>
    <text>so i could update all four players at once with a list of four values</text>
  </message>
  <message>
    <ts>2017-07-24T14:55:43.669620</ts>
    <user>U2SR9DL7Q</user>
    <text>So it's not a true map, because it's not two lists or two players. Its players and a list.</text>
  </message>
  <message>
    <ts>2017-07-24T14:56:50.705559</ts>
    <user>U3SJEDR96</user>
    <text>but why not `a -&amp;gt; a -&amp;gt; a -&amp;gt; a` or rather than a `List`? When you're calling it, I'm assuming you're not dealing with a list, but rather creating one for the purpose of sending it through?</text>
  </message>
  <message>
    <ts>2017-07-24T14:57:06.714012</ts>
    <user>U2SR9DL7Q</user>
    <text>I should also admit that the purpose for this isn't to get something to work (the logic works). But it's all very crude and clunky, and I'm trying to learn and use more FP design in function construction.</text>
  </message>
  <message>
    <ts>2017-07-24T14:58:28.758094</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U3SJEDR96&gt; that... could work if I'm constructing the list for this purpose :slightly_smiling_face: (which I almost always am)</text>
  </message>
  <message>
    <ts>2017-07-24T15:02:37.895958</ts>
    <user>U2SR9DL7Q</user>
    <text>This game app unfortunately has a lot of stuff passed around, and a lot of maybes and before I move on to the next step I want to refactor as best I can. All the examples I see have really simple functions with neat piping and clever usage of the core library and I'm _want_ that as well. I know it'll take time and effort though, before I can think in those sort've efficient chains of functions.</text>
  </message>
  <message>
    <ts>2017-07-24T15:08:04.061045</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U3SJEDR96&gt; &lt;@U0LPMPL2U&gt; thanks!
```
playerMap2 : (Player -&amp;gt; a -&amp;gt; Player) -&amp;gt; Players -&amp;gt; ( a, a, a, a ) -&amp;gt; Players
playerMap2 func (FourPlayers p1 p2 p3 p4) ( v1, v2, v3, v4 ) =
    FourPlayers (func p1 v1) (func p2 v2) (func p3 v3) (func p4 v4)
```</text>
  </message>
  <message>
    <ts>2017-07-24T15:19:06.388878</ts>
    <user>U0LPMPL2U</user>
    <text>nice use of a tuple there :thumbsup:</text>
  </message>
  <message>
    <ts>2017-07-24T15:23:39.522502</ts>
    <user>U6D3ERLA1</user>
    <text>teehee can I ask some noobish questions here?</text>
  </message>
  <message>
    <ts>2017-07-24T15:25:22.573087</ts>
    <user>U6D3ERLA1</user>
    <text>If I do:
`l2 = List.range 1 19999`
I can do:
`l3 = List.filter (\n -&amp;gt; n % 99 == 0) l2`
but not:
`l3 = l2.filter ...`</text>
  </message>
  <message>
    <ts>2017-07-24T15:25:32.577907</ts>
    <user>U6D3ERLA1</user>
    <text>Is there a syntactic equivalent to the dot syntax in js?</text>
  </message>
  <message>
    <ts>2017-07-24T15:26:00.591323</ts>
    <user>U1UGYHGCA</user>
    <text>Nope</text>
  </message>
  <message>
    <ts>2017-07-24T15:26:23.602517</ts>
    <user>U681TBBUP</user>
    <text>No there is not; having functions attached to data is an object oriented concept</text>
  </message>
  <message>
    <ts>2017-07-24T15:26:44.612738</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;https://elmlang.slack.com/archives/C192T0Q1E/p1500924219522502&gt;</text>
  </message>
  <message>
    <ts>2017-07-24T15:26:52.616597</ts>
    <user>U0LPMPL2U</user>
    <text>All beginner questions welcome here :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-24T15:27:30.635074</ts>
    <user>U0LPMPL2U</user>
    <text>You can get close to OO dot notation with the forward pipe operator</text>
  </message>
  <message>
    <ts>2017-07-24T15:27:32.635565</ts>
    <user>U5X2ZRFDF</user>
    <text>Having functions attached to data is perfectly fine in Elm. After all, functions are data. You just don't get the parent record as an implicit parameter to the function.</text>
  </message>
  <message>
    <ts>2017-07-24T15:27:36.637892</ts>
    <user>U6D3ERLA1</user>
    <text>aaah</text>
  </message>
  <message>
    <ts>2017-07-24T15:27:37.638158</ts>
    <user>U6D3ERLA1</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-24T15:27:44.641959</ts>
    <user>U0LPMPL2U</user>
    <text>`l3 = l2 |&amp;gt; List.filter ..`</text>
  </message>
  <message>
    <ts>2017-07-24T15:28:06.652376</ts>
    <user>U681TBBUP</user>
    <text>&lt;@U5X2ZRFDF&gt; that's a better way to put it</text>
  </message>
  <message>
    <ts>2017-07-24T15:28:43.670510</ts>
    <user>U6D3ERLA1</user>
    <text>`l3 = List.range 0 19999 |&amp;gt; List.filter (\n -&amp;gt; n % 99 == 0)`</text>
  </message>
  <message>
    <ts>2017-07-24T15:29:06.681918</ts>
    <user>U6D3ERLA1</user>
    <text>It's normal to always reference the library explicitly `List.foo`</text>
  </message>
  <message>
    <ts>2017-07-24T15:29:09.683207</ts>
    <user>U6D3ERLA1</user>
    <text>?</text>
  </message>
  <message>
    <ts>2017-07-24T15:29:12.684868</ts>
    <user>U0LPMPL2U</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-24T15:29:55.706010</ts>
    <user>U0LPMPL2U</user>
    <text>There are some functions like `map` and `andThen` that are defined in many different libraries</text>
  </message>
  <message>
    <ts>2017-07-24T15:30:32.724921</ts>
    <user>U4WH8STNX</user>
    <text>this way you see at a glance where the function is coming from</text>
  </message>
  <message>
    <ts>2017-07-24T15:30:44.731201</ts>
    <user>U4WH8STNX</user>
    <text>and there are no name collisions</text>
  </message>
  <message>
    <ts>2017-07-24T15:31:00.739861</ts>
    <user>U6D3ERLA1</user>
    <text>:nod:</text>
  </message>
  <message>
    <ts>2017-07-24T15:31:12.745518</ts>
    <user>U6D3ERLA1</user>
    <text>The syntax reminds* me vaguely of python</text>
  </message>
  <message>
    <ts>2017-07-24T15:31:49.764506</ts>
    <user>U0LPMPL2U</user>
    <text>You can import all the bare function if you want to but you want to be careful with that</text>
  </message>
  <message>
    <ts>2017-07-24T15:32:11.775558</ts>
    <user>U0LPMPL2U</user>
    <text>I commonly do it for Html `import Html exposing (..)` so I don't have to say `Html.div` all the time</text>
  </message>
  <message>
    <ts>2017-07-24T15:33:31.815500</ts>
    <user>U1UGYHGCA</user>
    <text>We have a linter preventing any `exposing (..)` at work, so the alternative we choose is `import Html as H` and then `H.div`</text>
  </message>
  <message>
    <ts>2017-07-24T15:35:41.878182</ts>
    <user>U4WH8STNX</user>
    <text>I usually do explicit exposings `exposing (div, span)` so you see at the top of the file where it comes from, it's a bit tedious but works well enough for me</text>
  </message>
  <message>
    <ts>2017-07-24T15:36:53.913634</ts>
    <user>U23SA861Y</user>
    <text>I find import as works fine, I generally won't do it for a single level package like `Html` but I will do it for a few layers down like `Json.Decoder`</text>
  </message>
  <message>
    <ts>2017-07-24T15:40:35.020666</ts>
    <user>U6D3ERLA1</user>
    <text>Do people use the Array data type or is that a novelty?</text>
  </message>
  <message>
    <ts>2017-07-24T15:41:58.061288</ts>
    <user>U0JFGGZS6</user>
    <text>yes quite a bit</text>
  </message>
  <message>
    <ts>2017-07-24T15:42:17.070589</ts>
    <user>U0JFGGZS6</user>
    <text>but looking forward to the fixed impl in 0.19....</text>
  </message>
  <message>
    <ts>2017-07-24T15:42:49.086683</ts>
    <user>U0CQ254F5</user>
    <text>&lt;@U6D3ERLA1&gt; i think its totally valid when needing to refer to an index and/or work within the set of data (i.e. not first or last…use `List`)</text>
  </message>
  <message>
    <ts>2017-07-24T15:43:34.109022</ts>
    <user>U0CQ254F5</user>
    <text>but i'd recommend using &lt;http://package.elm-lang.org/packages/Skinney/elm-array-exploration/latest&gt;</text>
  </message>
  <message>
    <ts>2017-07-24T15:43:45.114177</ts>
    <user>U0CQ254F5</user>
    <text>`import Array.Hamt as Array`</text>
  </message>
  <message>
    <ts>2017-07-24T15:44:00.121774</ts>
    <user>U0CQ254F5</user>
    <text>and use as you would Array from elm-lang core</text>
  </message>
  <message>
    <ts>2017-07-24T15:44:01.122042</ts>
    <user>U0LPMPL2U</user>
    <text>I have yet to work with data that has required numerical indexing. I end up using either List or Dict. But Array is legit (subject to &lt;@U0CQ254F5&gt;'s caveat)</text>
  </message>
  <message>
    <ts>2017-07-24T15:45:29.166587</ts>
    <user>U0CQ254F5</user>
    <text>and to &lt;@U0JFGGZS6&gt;'s point, I _believe_ that `Array.Hamt` (or something similar) will replace the current `Array` implementation in 0.19</text>
  </message>
  <message>
    <ts>2017-07-24T15:46:37.201236</ts>
    <user>U3SJEDR96</user>
    <text>correct</text>
  </message>
  <message>
    <ts>2017-07-24T16:40:36.832953</ts>
    <user>U2J1FUQTZ</user>
    <text>There is a way to declare a custom toString for a type like istances in Haskell?</text>
  </message>
  <message>
    <ts>2017-07-24T16:42:10.878907</ts>
    <user>U3SJEDR96</user>
    <text>nope. You can create a `MyModule.toString` function, though, and kindly request users to use that</text>
  </message>
  <message>
    <ts>2017-07-24T16:42:44.895784</ts>
    <user>U3SJEDR96</user>
    <text>note that `toString` is moving to the `Debug` module in 0.19; as it's really a debugging tool rather than a presentational tool</text>
  </message>
  <message>
    <ts>2017-07-24T16:43:51.928274</ts>
    <user>U2J1FUQTZ</user>
    <text>Ok thx</text>
  </message>
  <message>
    <ts>2017-07-24T16:47:25.033050</ts>
    <user>U6D3ERLA1</user>
    <text>What is `Result String a`</text>
  </message>
  <message>
    <ts>2017-07-24T16:47:32.036272</ts>
    <user>U6D3ERLA1</user>
    <text>`Result String Value`</text>
  </message>
  <message>
    <ts>2017-07-24T16:47:33.036868</ts>
    <user>U6D3ERLA1</user>
    <text>etc</text>
  </message>
  <message>
    <ts>2017-07-24T16:48:55.077007</ts>
    <user>U39DE7RQ9</user>
    <text>Question, I am trying to use Firebase authentication UI which is a helper lib in javascript that renders the login flow. It needs a div id and to load after the view has rendered. I created a port that runs the init function for the lib but it throws an error that the div id could not be found, ie the port is run before the view. How to run a javascript snippet after the view has rendered?</text>
  </message>
  <message>
    <ts>2017-07-24T16:49:42.100521</ts>
    <user>U4872964V</user>
    <text>&lt;@U39DE7RQ9&gt; I would use a MutationObserver</text>
  </message>
  <message>
    <ts>2017-07-24T16:49:43.100999</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U6D3ERLA1&gt; it's a union type that is either an `Err String` or an `Ok Value`, but it's like shrodingers cat and you don't know which it is until you open the box and look inside</text>
  </message>
  <message>
    <ts>2017-07-24T16:50:03.111290</ts>
    <user>U0LPMPL2U</user>
    <text>LOL, I like that shrodingers cat metaphor :smile:</text>
  </message>
  <message>
    <ts>2017-07-24T16:50:26.122724</ts>
    <user>U3SJEDR96</user>
    <text>(and working with a box is nicer than working with a dead cat, so we keep things in boxes like that)</text>
  </message>
  <message>
    <ts>2017-07-24T16:50:42.130703</ts>
    <user>U39DE7RQ9</user>
    <text>&lt;@U4872964V&gt; where do I find one of those?</text>
  </message>
  <message>
    <ts>2017-07-24T16:50:53.136283</ts>
    <user>U6D3ERLA1</user>
    <text>basically maybe it is a value maybe it is null/undefined ?</text>
  </message>
  <message>
    <ts>2017-07-24T16:51:12.145279</ts>
    <user>U3SJEDR96</user>
    <text>a compelling argument for not over-eagerly unwrapping results</text>
  </message>
  <message>
    <ts>2017-07-24T16:51:30.154973</ts>
    <user>U6D3ERLA1</user>
    <text>in js we say if (sCat) ...</text>
  </message>
  <message>
    <ts>2017-07-24T16:51:50.164677</ts>
    <user>U3SJEDR96</user>
    <text>well, it could be something else entirely, too; for example when you decode JSON, that JSON might be completely invalid, so it would be a error describing how it is invalid</text>
  </message>
  <message>
    <ts>2017-07-24T16:52:12.175867</ts>
    <user>U4872964V</user>
    <text>&lt;@U39DE7RQ9&gt; &lt;https://ellie-app.com/qyNKkTsrNRa1/2&gt;</text>
  </message>
  <message>
    <ts>2017-07-24T16:52:36.187956</ts>
    <user>U3SJEDR96</user>
    <text>or when making a network request, it could be a network error, or when converting a string to an integer, it could be an error describing why your string isn't a valid integer</text>
  </message>
  <message>
    <ts>2017-07-24T16:52:40.190153</ts>
    <user>U4872964V</user>
    <text>You could use the same technique</text>
  </message>
  <message>
    <ts>2017-07-24T16:53:12.206042</ts>
    <user>U0LPMPL2U</user>
    <text>`Maybe` is maybe you have a value or maybe it is null/undefined. `Result` is maybe you have a value or maybe you have an error.</text>
  </message>
  <message>
    <ts>2017-07-24T16:53:14.207397</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U6D3ERLA1&gt; yeah, but you can mistakenly use that `sCat` to cuddle with.</text>
  </message>
  <message>
    <ts>2017-07-24T16:53:26.212957</ts>
    <user>U6D3ERLA1</user>
    <text>lol</text>
  </message>
  <message>
    <ts>2017-07-24T16:53:47.223935</ts>
    <user>U3SJEDR96</user>
    <text>so in Elm you have to check first. We value hygiene, thank you very much.</text>
  </message>
  <message>
    <ts>2017-07-24T16:55:08.264555</ts>
    <user>U4872964V</user>
    <text>&lt;@U39DE7RQ9&gt; but a port should work too, if you use requestAnimationFrame i think</text>
  </message>
  <message>
    <ts>2017-07-24T16:55:15.267693</ts>
    <user>U5XC2FJ1Y</user>
    <text>(but you can do a lot of stuff to the `Maybe` or `Result` without checking)</text>
  </message>
  <message>
    <ts>2017-07-24T16:56:08.294564</ts>
    <user>U6D3ERLA1</user>
    <text>It creates a bit of type confusion - granted this is new to me...</text>
  </message>
  <message>
    <ts>2017-07-24T16:56:24.302636</ts>
    <user>U6D3ERLA1</user>
    <text>For instance, the type will be along the lines of Maybe if I don't know what's in the box...</text>
  </message>
  <message>
    <ts>2017-07-24T16:56:30.305790</ts>
    <user>U6D3ERLA1</user>
    <text>But I'm looking for something that is typed Cat</text>
  </message>
  <message>
    <ts>2017-07-24T16:56:31.306214</ts>
    <user>U3SJEDR96</user>
    <text>Ah, but that's because the functions that work on `Maybe` and on `Result` know to check first; they won't be piling food on your dead cat</text>
  </message>
  <message>
    <ts>2017-07-24T16:57:44.343472</ts>
    <user>U39DE7RQ9</user>
    <text>norpan: does requestAnimationFrame get me the ability to do stuff after the view has rendered?</text>
  </message>
  <message>
    <ts>2017-07-24T16:57:50.346263</ts>
    <user>U5XC2FJ1Y</user>
    <text>yes true, i guess it's more accurate to say that you can do a lot of stuff while hiding the checking behind an abstraction</text>
  </message>
  <message>
    <ts>2017-07-24T16:59:29.395547</ts>
    <user>U2J1FUQTZ</user>
    <text>Hiding is the keyword of the monad  world </text>
  </message>
  <message>
    <ts>2017-07-24T16:59:32.397038</ts>
    <user>U3SJEDR96</user>
    <text>Exactly. You can even make a box with 2 of your boxed cats, and that you won't end up with a dead cat together with an alive cat, using `Maybe.map2 (,) cat1 cat2`</text>
  </message>
  <message>
    <ts>2017-07-24T17:00:13.417301</ts>
    <user>U2J1FUQTZ</user>
    <text>Maybe and Result are one of the simplest monads</text>
  </message>
  <message>
    <ts>2017-07-24T17:00:30.425936</ts>
    <user>U3SJEDR96</user>
    <text>Sure, but they're immensely useful</text>
  </message>
  <message>
    <ts>2017-07-24T17:01:57.471217</ts>
    <user>U5XC2FJ1Y</user>
    <text>&lt;@U6D3ERLA1&gt; if you have a Maybe Cat there are two ways to get back a Cat</text>
  </message>
  <message>
    <ts>2017-07-24T17:02:12.478222</ts>
    <user>U5XC2FJ1Y</user>
    <text>really only one, actually</text>
  </message>
  <message>
    <ts>2017-07-24T17:02:16.480689</ts>
    <user>U6D3ERLA1</user>
    <text>:ear:</text>
  </message>
  <message>
    <ts>2017-07-24T17:02:18.481670</ts>
    <user>U5XC2FJ1Y</user>
    <text>and then some things that hide it</text>
  </message>
  <message>
    <ts>2017-07-24T17:02:49.497169</ts>
    <user>U3SJEDR96</user>
    <text>as an aside; it doesn't hurt to point out that they're monads, but involving category theory isn't necessary to understand how to use them</text>
  </message>
  <message>
    <ts>2017-07-24T17:03:53.528664</ts>
    <user>U0LPMPL2U</user>
    <text>Yeah, the monad-iness of `Maybe` and `Result` is not really relevant to how the types work</text>
  </message>
  <message>
    <ts>2017-07-24T17:04:32.548166</ts>
    <user>U6D3ERLA1</user>
    <text>(I'll p[ost a gist of what I'm working on - installing vim-gist a minor detour :blue_car: )</text>
  </message>
  <message>
    <ts>2017-07-24T17:05:41.581219</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;https://ellie-app.com/new&gt; is a great place to put live Elm snippets</text>
  </message>
  <message>
    <ts>2017-07-24T17:08:08.650312</ts>
    <user>U5E99RPK6</user>
    <text>is there an equivalent `rails new` for elm? like an officially-sanctioned way to bootstrap a new project w/ a directory structure and default files?</text>
  </message>
  <message>
    <ts>2017-07-24T17:09:16.681990</ts>
    <user>U5XC2FJ1Y</user>
    <text>a `Maybe` is either `Nothing` or `Just` a value, you use pattern matching to operate on it based on which it is (and extract the value if it has one)</text>
  </message>
  <message>
    <ts>2017-07-24T17:10:56.728533</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;https://gist.github.com/9d90524a44777979e9ba3c441711d998&gt;</text>
  </message>
  <message>
    <ts>2017-07-24T17:11:07.733869</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U5E99RPK6&gt; there isn't a single way to organize files / directories in an elm app</text>
  </message>
  <message>
    <ts>2017-07-24T17:11:40.749079</ts>
    <user>U0LPMPL2U</user>
    <text>I have used &lt;https://github.com/simonewebdesign/elm-new&gt; but it is very bare bones</text>
  </message>
  <message>
    <ts>2017-07-24T17:12:38.775710</ts>
    <user>U6D3ERLA1</user>
    <text>(Ignoring the typo, what I get here is)</text>
  </message>
  <message>
    <ts>2017-07-24T17:12:41.777322</ts>
    <user>U6D3ERLA1</user>
    <text>```
-- TYPE MISMATCH -------------------------------------- daily_programmer_xml.elm

The 2nd argument to function `tag` is causing a mismatch.

42|        Query.tag "lastName" string value)
                                ^^^^^^
Function `tag` is expecting the 2nd argument to be:

    Value -&amp;gt; Result String a

But it is:

    Decoder String
```</text>
  </message>
  <message>
    <ts>2017-07-24T17:13:22.796404</ts>
    <user>U6D3ERLA1</user>
    <text>I'm at the bottom of the learning curve regarding these more complex (?) types...</text>
  </message>
  <message>
    <ts>2017-07-24T17:13:54.811147</ts>
    <user>U0LPMPL2U</user>
    <text>no worries, we've all been there at some point :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-24T17:15:37.857805</ts>
    <user>U5E99RPK6</user>
    <text>&lt;@U0LPMPL2U&gt; that's unfortunate :confused: i found create-elm-app, now you mention elm-new... now there's one extra decision i wouldn't want to make as a beginner. do you know if this is something the core devs are concerned about? i mean, elixir went ahead and added `mix new` to the language itself, so for phoenix it's a simple `mix phoenix.new`. anyway, any i'll give both a try and see what i find, thanks!</text>
  </message>
  <message>
    <ts>2017-07-24T17:16:18.876195</ts>
    <user>U0LPMPL2U</user>
    <text>The thing is, Elm is a language, not a framework. So the equivalent of a start app is super minimal</text>
  </message>
  <message>
    <ts>2017-07-24T17:21:26.010391</ts>
    <user>U5E99RPK6</user>
    <text>why not have a bit of both? i assume elixir must also allow one to just do `elixir &amp;lt;file&amp;gt;` or something like that, but if you're starting something bigger, it has the tooling and, most importantly, the _conventions_ for it. even if it's optional, it would be nice to have a blessed official starter cli thing, imho :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-24T17:22:34.039081</ts>
    <user>U0LPMPL2U</user>
    <text>I think elm apps tend to vary more though. An SPA with routing is different from an embedded widget or a non-routed SPA</text>
  </message>
  <message>
    <ts>2017-07-24T17:23:09.053507</ts>
    <user>U0CQ254F5</user>
    <text>&lt;@U6D3ERLA1&gt; is the `string` function from the `Json.Decode` lib or from the `Xml.Query` lib?</text>
  </message>
  <message>
    <ts>2017-07-24T17:25:02.102340</ts>
    <user>U0CQ254F5</user>
    <text>it looks like &lt;http://package.elm-lang.org/packages/eeue56/elm-xml/2.2.2/Xml-Query#string&gt; would satisfy that particular type mismatch</text>
  </message>
  <message>
    <ts>2017-07-24T17:28:32.192079</ts>
    <user>U3SJEDR96</user>
    <text>Agreed on principle, but not in practice - I feel like the language and conventions are still a little too much in flux to present this type of "this is how to do it." The very very basics are there already, tho - `elm-package install` will create a package file and install minimal dependencies for an HTML app. Creating a `Main.elm` or whatever and starting elm-reactor is the bare minimal to get started.</text>
  </message>
  <message>
    <ts>2017-07-24T17:31:33.269683</ts>
    <user>U5E99RPK6</user>
    <text>that makes sense. i guess for now it's better to let the community come up with different and possibly overlapping generators and see which ones get traction. later the winning strategies can be adopted upstream.</text>
  </message>
  <message>
    <ts>2017-07-24T17:32:00.281217</ts>
    <user>U5E99RPK6</user>
    <text>also, i didn't know i could start a project with just `elm-package install` so thanks for that :grin:</text>
  </message>
  <message>
    <ts>2017-07-24T17:41:15.511642</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;@U0CQ254F5&gt; Indeed that fixes the type mismatch - thanks! What led you to that conclusion?</text>
  </message>
  <message>
    <ts>2017-07-24T17:41:51.526428</ts>
    <user>U0LPMPL2U</user>
    <text>`Decoder String` is a type from `Json.Decode`</text>
  </message>
  <message>
    <ts>2017-07-24T17:42:05.532049</ts>
    <user>U0CQ254F5</user>
    <text>following the compiler messages is super helpful…it's helped me out of a lot of pickles
```
Function `tag` is expecting the 2nd argument to be:

    Value -&amp;gt; Result String a

But it is:

    Decoder String
```</text>
  </message>
  <message>
    <ts>2017-07-24T17:43:50.573674</ts>
    <user>U0CQ254F5</user>
    <text>its saying that "Hey that `string` value you provided is of type `Decoder String`, but I expect a function of type `Value -&amp;gt; Result String a`</text>
  </message>
  <message>
    <ts>2017-07-24T17:45:06.604133</ts>
    <user>U0CQ254F5</user>
    <text>the more you work with Elm and it's compiler the more these messages will makes sense…don't get discouraged &lt;@U6D3ERLA1&gt;, it may seem over the top now (or too restrictive), but it'll be worth it once it clicks</text>
  </message>
  <message>
    <ts>2017-07-24T17:46:08.630082</ts>
    <user>U6D3ERLA1</user>
    <text>It's pretty foreign :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-24T17:46:14.632687</ts>
    <user>U0CQ254F5</user>
    <text>also, once you get more and more comfortable working with types and satisfying the compiler, &lt;https://klaftertief.github.io/elm-search/&gt; may prove to be a helpful tool</text>
  </message>
  <message>
    <ts>2017-07-24T17:46:40.642949</ts>
    <user>U0CQ254F5</user>
    <text>for example, i just plugged in `Value -&amp;gt; Result String a` and saw that there was a function in the `Xml.Query` lib</text>
  </message>
  <message>
    <ts>2017-07-24T17:46:48.645992</ts>
    <user>U6D3ERLA1</user>
    <text>aah</text>
  </message>
  <message>
    <ts>2017-07-24T17:47:01.650919</ts>
    <user>U5WD40ZA9</user>
    <text>I'm trying to create a binary tree in elm with an unknown amount of child nodes. The special thing about it is that I want to be able to handle onClicks on the elements and update that specific node, any guides or ideas on how you could possible do that?</text>
  </message>
  <message>
    <ts>2017-07-24T17:47:07.653467</ts>
    <user>U0CQ254F5</user>
    <text>&lt;@U6D3ERLA1&gt; i totally get it, hang in there, take it slow, go through the elm docs, even a few times if necessary</text>
  </message>
  <message>
    <ts>2017-07-24T17:47:56.672682</ts>
    <user>U0CQ254F5</user>
    <text>my guess is you'll really start to love working within the constraints that types provide</text>
  </message>
  <message>
    <ts>2017-07-24T17:49:06.700366</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U5WD40ZA9&gt; perhaps giving your nodes ids and updating them based on the id would work?</text>
  </message>
  <message>
    <ts>2017-07-24T17:51:39.760120</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;@U0CQ254F5&gt; tx for the help! Strong(er) types is definitely what I'm after - now I just need to learn/understand the type system!</text>
  </message>
  <message>
    <ts>2017-07-24T17:52:05.769549</ts>
    <user>U0CQ254F5</user>
    <text>&lt;@U6D3ERLA1&gt; awesome! it's fun when it starts to click, promise!</text>
  </message>
  <message>
    <ts>2017-07-24T17:53:21.798800</ts>
    <user>U0CQ254F5</user>
    <text>have you read / seen &lt;https://guide.elm-lang.org/&gt; &lt;@U6D3ERLA1&gt; ?</text>
  </message>
  <message>
    <ts>2017-07-24T17:53:58.812813</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;@U0CQ254F5&gt; Yes, I've familiarized myself - also trying to get some practical stuff working I tend to learn best by example</text>
  </message>
  <message>
    <ts>2017-07-24T18:04:13.042986</ts>
    <user>U6D3ERLA1</user>
    <text>So... my updated code works! I have imported an XML string and turned it into a `List Participant -&amp;gt; a`</text>
  </message>
  <message>
    <ts>2017-07-24T18:11:44.197193</ts>
    <user>U6D3ERLA1</user>
    <text>This gives me a return value (I think) of type `List Participant`</text>
  </message>
  <message>
    <ts>2017-07-24T18:12:01.203031</ts>
    <user>U6D3ERLA1</user>
    <text>However, there is no function in the world, I think, that accepts this type of paramater</text>
  </message>
  <message>
    <ts>2017-07-24T18:12:31.213015</ts>
    <user>U0CQ254F5</user>
    <text>right, you have to handle the `Result` manually…</text>
  </message>
  <message>
    <ts>2017-07-24T18:12:36.214562</ts>
    <user>U6D3ERLA1</user>
    <text>For instance if I am trying to encode this as JSON (I am) I need to make it into a List Value -&amp;gt; a type</text>
  </message>
  <message>
    <ts>2017-07-24T18:12:40.215886</ts>
    <user>U6D3ERLA1</user>
    <text>I think</text>
  </message>
  <message>
    <ts>2017-07-24T18:13:59.241235</ts>
    <user>U0CQ254F5</user>
    <text>so are you getting a return type of `Result error (List Participant)`?</text>
  </message>
  <message>
    <ts>2017-07-24T18:14:05.243468</ts>
    <user>U23SA861Y</user>
    <text>`List Value -&amp;gt; a` or anything to a variadic parameter should be impossible? because you can never construct `a`</text>
  </message>
  <message>
    <ts>2017-07-24T18:15:32.271691</ts>
    <user>U6D3ERLA1</user>
    <text>```
The type annotation for `participants` says it is a:

    List Participant

But the definition (shown above) is a:

    Int -&amp;gt; Json.Encode.Value -&amp;gt; String
```</text>
  </message>
  <message>
    <ts>2017-07-24T18:16:02.281242</ts>
    <user>U6D3ERLA1</user>
    <text>Basically, how do I get List Participant into Json.Encode</text>
  </message>
  <message>
    <ts>2017-07-24T18:16:27.289273</ts>
    <user>U23SA861Y</user>
    <text>so you want to write a Json encoder?</text>
  </message>
  <message>
    <ts>2017-07-24T18:16:56.298526</ts>
    <user>U6D3ERLA1</user>
    <text>If need to be, yes</text>
  </message>
  <message>
    <ts>2017-07-24T18:17:11.303063</ts>
    <user>U6D3ERLA1</user>
    <text>This `List Participant` thing looks to me a lot like a javascript object :smile:</text>
  </message>
  <message>
    <ts>2017-07-24T18:17:15.304555</ts>
    <user>U6D3ERLA1</user>
    <text>already</text>
  </message>
  <message>
    <ts>2017-07-24T18:17:37.311930</ts>
    <user>U23SA861Y</user>
    <text>you have a Participant encoder? `Participant -&amp;gt; Json.Encoder.Value`</text>
  </message>
  <message>
    <ts>2017-07-24T18:18:31.328774</ts>
    <user>U0CQ254F5</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Json-Encode#encode&gt;</text>
  </message>
  <message>
    <ts>2017-07-24T18:18:58.337462</ts>
    <user>U23SA861Y</user>
    <text>If you do then to create a function of `List Participant -&amp;gt; Json.Encode.Value` simply requires calling `Json.Encoder.list`</text>
  </message>
  <message>
    <ts>2017-07-24T18:19:53.355052</ts>
    <user>U6D3ERLA1</user>
    <text>I think this is the piece I am missing, if I have a type Participant, and a List Participant, I don't understand how to write the Json encoder to handle this custom type</text>
  </message>
  <message>
    <ts>2017-07-24T18:20:32.367593</ts>
    <user>U0CQ254F5</user>
    <text>do you mind pasting in the type you created for `Participant`?</text>
  </message>
  <message>
    <ts>2017-07-24T18:20:38.369819</ts>
    <user>U23SA861Y</user>
    <text>what does `Participant` look like</text>
  </message>
  <message>
    <ts>2017-07-24T18:23:22.420531</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;https://gist.github.com/starsinmypockets/9d90524a44777979e9ba3c441711d998&gt; &lt;@U23SA861Y&gt;</text>
  </message>
  <message>
    <ts>2017-07-24T18:24:57.449216</ts>
    <user>U23SA861Y</user>
    <text>```
participantEncode p = 
  JE.object [("first_name",JE.string p.firstName),("last_name",JE.string p.lastName)]
```</text>
  </message>
  <message>
    <ts>2017-07-24T18:25:10.453057</ts>
    <user>U23SA861Y</user>
    <text>will give you a `Participant -&amp;gt; Json.Encode.Value`</text>
  </message>
  <message>
    <ts>2017-07-24T18:25:25.457680</ts>
    <user>U23SA861Y</user>
    <text>sry one sec</text>
  </message>
  <message>
    <ts>2017-07-24T18:25:45.464024</ts>
    <user>U23SA861Y</user>
    <text>there fixed</text>
  </message>
  <message>
    <ts>2017-07-24T18:26:24.475807</ts>
    <user>U23SA861Y</user>
    <text>daily programmer... someone is a redditor</text>
  </message>
  <message>
    <ts>2017-07-24T18:26:37.479714</ts>
    <user>U0CQ254F5</user>
    <text>also, are you using `Json.Decode` lib? if not, you can delete that import</text>
  </message>
  <message>
    <ts>2017-07-24T18:27:26.494678</ts>
    <user>U0CQ254F5</user>
    <text>that's why `string` defaulted to `Json.Decode.string` instead of `Xml.Query.string` for example</text>
  </message>
  <message>
    <ts>2017-07-24T18:27:26.494715</ts>
    <user>U23SA861Y</user>
    <text>to make a list encoder `participantListEncoder pList = List.map participantEncoder pList |&amp;gt; JE.list`</text>
  </message>
  <message>
    <ts>2017-07-24T18:31:23.568877</ts>
    <user>U23SA861Y</user>
    <text>if I want to transform a List of some type into a list of another type you use `map`</text>
  </message>
  <message>
    <ts>2017-07-24T18:31:45.575707</ts>
    <user>U23SA861Y</user>
    <text>In this case you would have a list of participants and you want a list of values</text>
  </message>
  <message>
    <ts>2017-07-24T18:32:09.583206</ts>
    <user>U23SA861Y</user>
    <text>so you call `List.map` with a function that transforms a single participant into a `Json.Encode.Value`</text>
  </message>
  <message>
    <ts>2017-07-24T18:32:34.590956</ts>
    <user>U23SA861Y</user>
    <text>you can then pass that list of values to `Json.Encode.list` to construct a new value</text>
  </message>
  <message>
    <ts>2017-07-24T18:33:44.612319</ts>
    <user>U6D3ERLA1</user>
    <text>:bulb:</text>
  </message>
  <message>
    <ts>2017-07-24T18:33:49.613898</ts>
    <user>U6D3ERLA1</user>
    <text>that makes sense</text>
  </message>
  <message>
    <ts>2017-07-24T18:33:55.615741</ts>
    <user>U6D3ERLA1</user>
    <text>pipe it back to values</text>
  </message>
  <message>
    <ts>2017-07-24T18:49:25.885308</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;https://gist.github.com/254b044a54ec101c5ed7392eb8df5677&gt;</text>
  </message>
  <message>
    <ts>2017-07-24T18:49:57.894182</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;@U0CQ254F5&gt; &lt;@U23SA861Y&gt; Thanks for data pipeline 101 :train:</text>
  </message>
  <message>
    <ts>2017-07-24T19:28:13.510418</ts>
    <user>U1ZFF0E5P</user>
    <text>Hi, I'm trying to make the following decoder polymorphic instead of hard-coded to String for result, but I can't figure out how to do it
```type alias DictItem =
    { result : String
    , entities : Entities
    }

dictItemDecoder : Decoder DictItem
dictItemDecoder =
    decode DictItem
        |&amp;gt; required "result" string
        |&amp;gt; required "entities" entitiesDecoder```</text>
  </message>
  <message>
    <ts>2017-07-24T19:28:55.521243</ts>
    <user>U1ZFF0E5P</user>
    <text>so I changed the alias to this, but I'm stuck at the decoder level: ```type alias DictItem a =
    { result : a
    , entities : Entities
    }```</text>
  </message>
  <message>
    <ts>2017-07-24T19:30:15.541220</ts>
    <user>U1ZFF0E5P</user>
    <text>I tried this but it obviously doesnt work ```dictItemDecoder : Decoder (DictItem a)
dictItemDecoder =
    decode (DictItem a)
        |&amp;gt; required "result" a
        |&amp;gt; required "entities" entitiesDecoder```</text>
  </message>
  <message>
    <ts>2017-07-24T19:43:23.735238</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U1ZFF0E5P&gt; how do you expect the compiler to infer the type of `a`?</text>
  </message>
  <message>
    <ts>2017-07-24T19:43:59.743800</ts>
    <user>U1ZFF0E5P</user>
    <text>that is a very good question</text>
  </message>
  <message>
    <ts>2017-07-24T19:44:49.755418</ts>
    <user>U1ZFF0E5P</user>
    <text>essentially I'm moving all my ids from strings to wrapped types like so: ```type StudentCourseClassId
    = StudentCourseClassId String```</text>
  </message>
  <message>
    <ts>2017-07-24T19:47:03.788093</ts>
    <user>U1ZFF0E5P</user>
    <text>but yeah thinking about it there is no way for the compiler to guess that</text>
  </message>
  <message>
    <ts>2017-07-24T19:48:27.808117</ts>
    <user>U1ZFF0E5P</user>
    <text>so either I "duplicate" this decoder for each id type, or I can probably put them in a union type and use this</text>
  </message>
  <message>
    <ts>2017-07-24T19:49:29.822605</ts>
    <user>U23SA861Y</user>
    <text>ok so one thing about elm is that it's not polymorphic, if you want to make something type agnostic you will have to have a parameter which passes down how to deal with that type.</text>
  </message>
  <message>
    <ts>2017-07-24T19:50:17.833374</ts>
    <user>U1ZFF0E5P</user>
    <text>yeah, I'm still struggling to think this way (coming from dynamic languages)</text>
  </message>
  <message>
    <ts>2017-07-24T19:51:04.845057</ts>
    <user>U1ZFF0E5P</user>
    <text>is this where typeclasses would be useful? as in I can pass down "a" and define on it's typeclass level how to be decoded?</text>
  </message>
  <message>
    <ts>2017-07-24T19:51:13.846887</ts>
    <user>U1ZFF0E5P</user>
    <text>never used any of this stuff, just heard about it</text>
  </message>
  <message>
    <ts>2017-07-24T19:51:21.848922</ts>
    <user>U23SA861Y</user>
    <text>well there are typed languages can be polymorphic, elm just chose not to be</text>
  </message>
  <message>
    <ts>2017-07-24T19:52:01.857966</ts>
    <user>U23SA861Y</user>
    <text>yeah, you would have some thing like JSONEncodable or something</text>
  </message>
  <message>
    <ts>2017-07-24T19:52:31.864287</ts>
    <user>U23SA861Y</user>
    <text>here your dictItemDecoder would take a function</text>
  </message>
  <message>
    <ts>2017-07-24T19:52:49.868218</ts>
    <user>U23SA861Y</user>
    <text>sry not a function</text>
  </message>
  <message>
    <ts>2017-07-24T19:52:57.870009</ts>
    <user>U23SA861Y</user>
    <text>a value of type `Decoder a`</text>
  </message>
  <message>
    <ts>2017-07-24T19:53:31.877958</ts>
    <user>U1ZFF0E5P</user>
    <text>so essentially I can't attach this "behaviour" to `a`, so I need to pass it separatly</text>
  </message>
  <message>
    <ts>2017-07-24T19:54:07.886266</ts>
    <user>U23SA861Y</user>
    <text>yeah, behaviour doesn't switch on type</text>
  </message>
  <message>
    <ts>2017-07-24T19:54:17.888750</ts>
    <user>U23SA861Y</user>
    <text>it switches on value</text>
  </message>
  <message>
    <ts>2017-07-24T19:56:15.915711</ts>
    <user>U1ZFF0E5P</user>
    <text>yeah makes perfect sense, thanks folks</text>
  </message>
  <message>
    <ts>2017-07-24T19:56:19.916893</ts>
    <user>U5X2ZRFDF</user>
    <text>Elm is polymorphic. The type `Decoder a` is polymorphic in `a`. Polymorphic means that the same code can be used for different types. `Decode String` and `Decode Int` are different types, but we can write code that can handle both, as long as it doesn't care whether it's a `String` or `Int` that's being decoded. Elm supports this type of polymorphism, called parametric polymorphism, because the type `a` is a parameter to `Decoder`.</text>
  </message>
  <message>
    <ts>2017-07-24T19:56:55.924723</ts>
    <user>U5X2ZRFDF</user>
    <text>Elm does not support ad hoc polymorphism, whereby custom functions can be written to handle different possible type values, but called in the same way.</text>
  </message>
  <message>
    <ts>2017-07-24T19:57:40.935032</ts>
    <user>U5X2ZRFDF</user>
    <text>E.g. having a `map` function that works on both `List` and `Maybe` by determining which concrete function to call, depending on the type of the value passed in.</text>
  </message>
  <message>
    <ts>2017-07-24T19:58:10.941934</ts>
    <user>U5X2ZRFDF</user>
    <text>Nor does it support subtype polymorphism, as in object-oriented languages, because it has no subtyping.</text>
  </message>
  <message>
    <ts>2017-07-24T19:58:11.942046</ts>
    <user>U23SA861Y</user>
    <text>it's not polymorphic because it can't actually depend or switch on that type</text>
  </message>
  <message>
    <ts>2017-07-24T19:59:07.955818</ts>
    <user>U5X2ZRFDF</user>
    <text>The function `List.map` is polymorphic. It can accept a `List Int`, or it can accept a `List String`. It does the right thing no matter which type you pass in.</text>
  </message>
  <message>
    <ts>2017-07-24T19:59:30.961512</ts>
    <user>U1ZFF0E5P</user>
    <text>just out of curiosity, typeclasses in haskell is haskells way to support ad-hoc polymorphism?</text>
  </message>
  <message>
    <ts>2017-07-24T19:59:35.962692</ts>
    <user>U5X2ZRFDF</user>
    <text>Yes</text>
  </message>
  <message>
    <ts>2017-07-24T20:00:44.980998</ts>
    <user>U5X2ZRFDF</user>
    <text>Elm also has row polymorphism, which is where you use a type parameter in a record type, like `type alias Foo a = { a | someField: Int }`.</text>
  </message>
  <message>
    <ts>2017-07-24T20:01:24.991523</ts>
    <user>U5X2ZRFDF</user>
    <text>That looks a bit like subtype polymorphism, but is subtly different because the type is completely determined statically at the call point.</text>
  </message>
  <message>
    <ts>2017-07-24T20:02:09.002244</ts>
    <user>U1ZFF0E5P</user>
    <text>right</text>
  </message>
  <message>
    <ts>2017-07-24T20:02:22.005391</ts>
    <user>U1ZFF0E5P</user>
    <text>thanks for the detailed explanation</text>
  </message>
  <message>
    <ts>2017-07-24T20:02:44.010201</ts>
    <user>U5X2ZRFDF</user>
    <text>yw</text>
  </message>
  <message>
    <ts>2017-07-24T20:02:58.013473</ts>
    <user>U1ZFF0E5P</user>
    <text>I've seen people ask for ad-hoc polymorphism before in the form of typeclasses</text>
  </message>
  <message>
    <ts>2017-07-24T20:03:23.019106</ts>
    <user>U1ZFF0E5P</user>
    <text>but evan believes that there might be a better way to support ad-hoc polymorphism from what I've seen</text>
  </message>
  <message>
    <ts>2017-07-24T20:03:40.023158</ts>
    <user>U1ZFF0E5P</user>
    <text>(if at all)</text>
  </message>
  <message>
    <ts>2017-07-24T20:03:45.024177</ts>
    <user>U5X2ZRFDF</user>
    <text>There is some confusion because in OO languages, when people say "polymorphism", they are talking about subtype polymorphism. And in functional languages, they generally mean parametric polymorphism.</text>
  </message>
  <message>
    <ts>2017-07-24T20:04:00.027622</ts>
    <user>U23SA861Y</user>
    <text>"yw" for some reason my brain interpreted that as "yeah, whatever" as opposed to "you're welcome". I think I've been on the internet too long.</text>
  </message>
  <message>
    <ts>2017-07-24T20:06:15.058240</ts>
    <user>U5X2ZRFDF</user>
    <text>I'm a fan of typeclasses, having been a long-time Haskell programmer, but I've also seen how some clever solutions have been devised in Elm, such as with Json Decoders, that wouldn't have been devised if type classes were there. So it's interesting to see how far things can be pushed without having them. And to also consider alternatives.</text>
  </message>
  <message>
    <ts>2017-07-24T20:07:04.069150</ts>
    <user>U5X2ZRFDF</user>
    <text>I have certainly been confused by Haskell code where a type class method was called, and I had a hard time figuring out which instance was actually being invoked.</text>
  </message>
  <message>
    <ts>2017-07-24T20:07:51.080222</ts>
    <user>U5X2ZRFDF</user>
    <text>Especially when there's a nested call and it's actually a different instance on the nested call, such that it's not really recursive.</text>
  </message>
  <message>
    <ts>2017-07-24T20:10:32.118083</ts>
    <user>U1ZFF0E5P</user>
    <text>not elm related, but if you were to recommend a haskell web framework for someone with a bit of elm experience but no haskell experience, what would it be? I've looked at the options and spock looked pretty appealing</text>
  </message>
  <message>
    <ts>2017-07-24T20:11:01.124690</ts>
    <user>U5X2ZRFDF</user>
    <text>ML uses parameterized modules to achieve many of the same aims as type classes. So that's another way of doing it.</text>
  </message>
  <message>
    <ts>2017-07-24T20:12:04.139406</ts>
    <user>U5X2ZRFDF</user>
    <text>I have only used Snap, and that very little. So I can't give a proper recommendation. I get the impression Yesod is very popular, but I don't know how easy it is for a beginner.</text>
  </message>
  <message>
    <ts>2017-07-24T20:12:18.142488</ts>
    <user>U1ZFF0E5P</user>
    <text>interesting, I will look into it</text>
  </message>
  <message>
    <ts>2017-07-24T20:12:27.144624</ts>
    <user>U1ZFF0E5P</user>
    <text>when you say ML you mean standard ML right?</text>
  </message>
  <message>
    <ts>2017-07-24T20:12:50.149704</ts>
    <user>U5X2ZRFDF</user>
    <text>Seems to me Snap is better for web services, and Yesod is better for serving up pages.</text>
  </message>
  <message>
    <ts>2017-07-24T20:13:47.162434</ts>
    <user>U1ZFF0E5P</user>
    <text>yesod seems to use haskell template quite extensively, and some are saying that it's kinda "magic"</text>
  </message>
  <message>
    <ts>2017-07-24T20:13:55.164163</ts>
    <user>U5X2ZRFDF</user>
    <text>Well, I was hedging because I know Standard ML has these parameterized modules (called "functors", but that's another confusingly overloaded term), but I'm not sure how OCaml's system differs.</text>
  </message>
  <message>
    <ts>2017-07-24T20:14:13.167786</ts>
    <user>U1ZFF0E5P</user>
    <text>I'm looking at haskell mainly to get away from "magic" stuff, which is why I ruled it out initially</text>
  </message>
  <message>
    <ts>2017-07-24T20:14:33.171931</ts>
    <user>U5X2ZRFDF</user>
    <text>I have heard as such. I don't have any experience on which to base an opinion.</text>
  </message>
  <message>
    <ts>2017-07-24T20:14:58.177066</ts>
    <user>U23SA861Y</user>
    <text>Yeah dynamic languages on the back end... scary</text>
  </message>
  <message>
    <ts>2017-07-24T20:16:01.190794</ts>
    <user>U5X2ZRFDF</user>
    <text>Well, maybe try Snap. You can still create web templates using Heist.</text>
  </message>
  <message>
    <ts>2017-07-24T20:17:11.206155</ts>
    <user>U5X2ZRFDF</user>
    <text>Also Haskell is just getting parameterized modules in the upcoming GHC 8.2, so that will be interesting.</text>
  </message>
  <message>
    <ts>2017-07-24T20:19:01.229932</ts>
    <user>U5X2ZRFDF</user>
    <text>Hadn't even heard of Spock yet, could be good. I do share that feeling that no Haskell web framework ever seems right.</text>
  </message>
  <message>
    <ts>2017-07-24T20:19:33.236632</ts>
    <user>U5X2ZRFDF</user>
    <text>I saw someone give a talk on using ghcjs with React, and that was pretty impressive.</text>
  </message>
  <message>
    <ts>2017-07-24T20:19:48.239518</ts>
    <user>U5X2ZRFDF</user>
    <text>But that's front-end</text>
  </message>
  <message>
    <ts>2017-07-24T20:20:11.244297</ts>
    <user>U5X2ZRFDF</user>
    <text>I guess then on the back end you can just use an API and have the front end call it.</text>
  </message>
  <message>
    <ts>2017-07-24T20:20:22.246593</ts>
    <user>U23SA861Y</user>
    <text>well frameworks are inherently against good programming practices</text>
  </message>
  <message>
    <ts>2017-07-24T20:21:08.256459</ts>
    <user>U23SA861Y</user>
    <text>but, but why do they need them if they already have typeclasses????</text>
  </message>
  <message>
    <ts>2017-07-24T20:21:48.264548</ts>
    <user>U5X2ZRFDF</user>
    <text>I'm not sure that I can explain that. I'm still learning about it. But it has more to do with the packaging system.</text>
  </message>
  <message>
    <ts>2017-07-24T20:22:56.278451</ts>
    <user>U5X2ZRFDF</user>
    <text>&lt;http://plv.mpi-sws.org/backpack/&gt;</text>
  </message>
  <message>
    <ts>2017-07-24T20:27:46.337752</ts>
    <user>U2SR9DL7Q</user>
    <text>quick question. In the case of a series of piped updates where 
```
update msg model = 
    action1 -&amp;gt; 
        (modelchange1, cmd) 
        |&amp;gt; modelchange2 
```  
Will both the model updates occur before the cmd is executed?</text>
  </message>
  <message>
    <ts>2017-07-24T20:29:25.358107</ts>
    <user>U5X2ZRFDF</user>
    <text>I'm sort of an Elm beginner, but yes, I believe so.</text>
  </message>
  <message>
    <ts>2017-07-24T20:29:50.363416</ts>
    <user>U153UK3FA</user>
    <text>the Cmds won't be executed until after `update` returns</text>
  </message>
  <message>
    <ts>2017-07-24T20:30:47.376101</ts>
    <user>U5X2ZRFDF</user>
    <text>The commands are executed in the interim space between events</text>
  </message>
  <message>
    <ts>2017-07-24T20:31:05.379827</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U153UK3FA&gt; even if update2 just changes the model and passes along the original command?</text>
  </message>
  <message>
    <ts>2017-07-24T20:31:44.387998</ts>
    <user>U2SR9DL7Q</user>
    <text>```
updateBlockedMsg : BlockedMessage -&amp;gt; ( Model, Cmd Msg ) -&amp;gt; ( Model, Cmd Msg )
updateBlockedMsg bm ( model, cmd ) =
    case bm of
        Reset -&amp;gt;
            ( { model | blocked = 0 }, cmd )

        Increment -&amp;gt;
            ( { model | blocked = model.blocked + 1 }, cmd )
```
Here's one of my actual ones.</text>
  </message>
  <message>
    <ts>2017-07-24T20:31:56.390401</ts>
    <user>U153UK3FA</user>
    <text>`modelchange2` needs to be of the type `(Model, Cmd Msg) -&amp;gt; (Model, Cmd Msg)`</text>
  </message>
  <message>
    <ts>2017-07-24T20:34:17.420176</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U2SR9DL7Q&gt; The model is updated and the cmds are executed after `update` returns.</text>
  </message>
  <message>
    <ts>2017-07-24T20:35:08.430055</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U153UK3FA&gt; awesome. I was _almost_ sure that's how it works, but I figured I'd ask to be sure.</text>
  </message>
  <message>
    <ts>2017-07-24T20:36:22.444823</ts>
    <user>U2SR9DL7Q</user>
    <text>I've been piping thre commands through successfully already, but now I have a command that depends on a value changed in one of the pipes.</text>
  </message>
  <message>
    <ts>2017-07-24T20:37:26.457013</ts>
    <user>U153UK3FA</user>
    <text>Yep, all Elm functions are ‘stateless and side-effect free'</text>
  </message>
  <message>
    <ts>2017-07-24T20:38:24.468390</ts>
    <user>U2SR9DL7Q</user>
    <text>It's been a fun day refactoring.</text>
  </message>
  <message>
    <ts>2017-07-24T22:06:23.504955</ts>
    <user>U2SR9DL7Q</user>
    <text>_"elm-make.exe: type applications should start with a type atom"_ anyone ever seen this error before? For those using atom's linter</text>
  </message>
  <message>
    <ts>2017-07-25T02:00:14.781304</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U2SR9DL7Q&gt; hrm, double check your type annotations and definitions, and read through the issue logged on elm-compiler - i've seen that before but can't quite recall the cause</text>
  </message>
  <message>
    <ts>2017-07-25T02:05:58.847965</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U3SJEDR96&gt; i ended up just going back to my last commit (small and frequent commits save souls) but it's the second time I've seen. </text>
  </message>
  <message>
    <ts>2017-07-25T02:07:07.860832</ts>
    <user>U2SR9DL7Q</user>
    <text>I still don't know the cause. I call it the werebug. </text>
  </message>
  <message>
    <ts>2017-07-25T02:08:32.876475</ts>
    <user>U3SJEDR96</user>
    <text>It's something to do with a missing parameter or missing parens around a type, something like that. I think I've seen debug.crash make it happen more frequently, too</text>
  </message>
  <message>
    <ts>2017-07-25T02:22:07.033083</ts>
    <user>U1A0BJG7J</user>
    <text>I have a type with a tag that takes 2 parameters `type MyType = MyType arg1 arg2`. This tag is then given to a function, that takes care of calling it with the proper arguments `myFunction  MyType`. However, when I need to nest the type inside another type `MyWidget (MyType arg1 arg2)`, I cannot use `&amp;gt;&amp;gt;` like I would usually do when nesting types `myFunction (MyType &amp;gt;&amp;gt; MyWidget)`, as MyType takes 2 arguments, and function composition `&amp;gt;&amp;gt;` only deals with one parameter. 
What's the usual way to design this in an elegant way? I've tried with an anonymous function, but it's ugly. So far the best I could think of is to make the type take a tuple instead of 2 parameters `type MyType = MyType (arg1, arg2)`. Is there a more elegant way?</text>
  </message>
  <message>
    <ts>2017-07-25T02:36:20.212267</ts>
    <user>U4872964V</user>
    <text>&lt;@U1A0BJG7J&gt; well, I'm not sure exactly what the issue is, but if you have a tuple and want to pass it to a function taking two arguments, you can `uncurry` the function (or constructor, in this case)</text>
  </message>
  <message>
    <ts>2017-07-25T03:13:48.752011</ts>
    <user>U3SJEDR96</user>
    <text>You can do `MyType arg1 &amp;gt;&amp;gt; MyWidget` is partial application up-front is an option - which is usually is, since a function can't return more than 1 thing unless it's in a tuple, in which case `uncurry MyType &amp;gt;&amp;gt; MyWidget` would work</text>
  </message>
  <message>
    <ts>2017-07-25T03:16:40.797989</ts>
    <user>U3SJEDR96</user>
    <text>as a very last resort; defining `&amp;gt;&amp;gt;&amp;gt;` is also an option, though I'd advise against it, personally. It makes it much harder to grasp what is going on, imo</text>
  </message>
  <message>
    <ts>2017-07-25T04:14:17.864583</ts>
    <user>U1A0BJG7J</user>
    <text>no, partial application up-front is not an option. The option `uncurry MyType &amp;gt;&amp;gt; MyWidget` sounds valid and interesting, although I'm not sure what would be more elegant/correct. I guess I don't have a precise criteria on what is the essential meaning of the tuples, what they express when people see them. is `type MyType = MyType (arg1, arg2)` something frequently seen in Elm code?</text>
  </message>
  <message>
    <ts>2017-07-25T04:15:50.896876</ts>
    <user>U1A0BJG7J</user>
    <text>btw, here's the context of my question: &lt;https://github.com/arnauorriols/multitaskOS/blob/master/src/EditableElement.elm#L35&gt;</text>
  </message>
  <message>
    <ts>2017-07-25T04:17:26.930601</ts>
    <user>U1A0BJG7J</user>
    <text>and this is the client code where I need to use `&amp;gt;&amp;gt;` &lt;https://github.com/arnauorriols/multitaskOS/blob/master/src/Job.elm#L397&gt;</text>
  </message>
  <message>
    <ts>2017-07-25T04:21:29.015862</ts>
    <user>U153UK3FA</user>
    <text>`\arg1 arg2 -&amp;gt; MyWidget (MyType arg1 arg2)` is really simple</text>
  </message>
  <message>
    <ts>2017-07-25T04:27:14.137946</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U1A0BJG7J&gt; don't over think it, an anonymous function will be easier for you to read next week</text>
  </message>
  <message>
    <ts>2017-07-25T04:46:34.560744</ts>
    <user>U1A0BJG7J</user>
    <text>&lt;@U153UK3FA&gt; you are probably right</text>
  </message>
  <message>
    <ts>2017-07-25T05:58:48.136765</ts>
    <user>U604S603Y</user>
    <text>I'm struggling with `Json.Decode` again:
I receive JSON with a field containing a string and I want to decode said string into a Discriminated Union - I'd be totally fine with pattern matching "by hand" on the string to get the correct union case to work with it type safe afterwards - but I have no idea how to get that into the Json.Decode.Pipeline...
The DU:
```type CheckModus
    = Schnellcheck
    | Expertencheck```
In the JSON I then have 
```{ "modus": "Expertencheck"}```</text>
  </message>
  <message>
    <ts>2017-07-25T06:09:39.362071</ts>
    <user>U604S603Y</user>
    <text>I _think_ I worked it out - will report back later</text>
  </message>
  <message>
    <ts>2017-07-25T06:12:36.420405</ts>
    <user>U3SJEDR96</user>
    <text>You'd do something like `|&amp;gt; required "module" (string |&amp;gt; andThen decodeCheckModusFromString)`</text>
  </message>
  <message>
    <ts>2017-07-25T06:15:42.481067</ts>
    <user>U0CLDU8UB</user>
    <text>That, and you need to have branches like 

`"Expertencheck" -&amp;gt; Json.Decode.succeed Expertencheck` 
and e.g. 
`other -&amp;gt; Json.Decode.fail ("No modus called '" ++ other ++ "' exists")`</text>
  </message>
  <message>
    <ts>2017-07-25T06:30:56.767094</ts>
    <user>U604S603Y</user>
    <text>your solution looks a lot cleaner and easier to understand than mine. thanks &lt;@U3SJEDR96&gt; &lt;@U0CLDU8UB&gt;</text>
  </message>
  <message>
    <ts>2017-07-25T07:52:34.198019</ts>
    <user>U5E3DU81K</user>
    <text>Is it possible to display an asciidoc text file as html, on the fly?</text>
  </message>
  <message>
    <ts>2017-07-25T07:57:49.295776</ts>
    <user>U3SJEDR96</user>
    <text>I don't think anyone has written a parser in Elm for it, though it seems like that would be _largely_ possible. There are some things that would be considerably harder, tho, like passthrough blocks. Also, ping &lt;@U3LUC6SNS&gt; who is involved in asciidoctor iirc</text>
  </message>
  <message>
    <ts>2017-07-25T07:59:32.329585</ts>
    <user>U4872964V</user>
    <text>there is support for markdown, it looks similar: &lt;http://package.elm-lang.org/packages/evancz/elm-markdown/latest&gt;</text>
  </message>
  <message>
    <ts>2017-07-25T08:00:19.345581</ts>
    <user>U4872964V</user>
    <text>Or, &lt;http://package.elm-lang.org/packages/pablohirafuji/elm-markdown/latest&gt; maybe it can be modified to accept your format</text>
  </message>
  <message>
    <ts>2017-07-25T08:26:56.891482</ts>
    <user>U2J1FUQTZ</user>
    <text>There is a package that helps to write a JSON encoder aka transform an Elm structure in JSON code?</text>
  </message>
  <message>
    <ts>2017-07-25T08:30:31.968448</ts>
    <user>U3SJEDR96</user>
    <text>`Json.Encode` which is part of the core package</text>
  </message>
  <message>
    <ts>2017-07-25T08:53:15.503392</ts>
    <user>U6D3ERLA1</user>
    <text>Why no tab completion in repl? If I `import Json.Decode exposing (..)` sort of hoping typing de+tab will tab through imported decoders...?</text>
  </message>
  <message>
    <ts>2017-07-25T09:02:10.742118</ts>
    <user>U3SJEDR96</user>
    <text>The repl is fairly basic; indeed. I don't think there's a specific reason for it, other than "it hasn't been implemented yet"</text>
  </message>
  <message>
    <ts>2017-07-25T09:34:50.711296</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U5E3DU81K&gt;  I am working on an app that displays asciidoc.  My solution (imperfect) is to use ports.  I send the asciidoc file through a port to JS-land where it is rendered in a div by `Asciidoctor.js`.  Then comes the awkward, hacky part.  I position that div so that it l looks like it is part of the regular Elm app.  The code is at  &lt;https://github.com/jxxcarlson/koko_elm_client&gt;.  This is an Elm client that talks to a Phoenix server. The code for it is at &lt;https://github.com/jxxcarlson/koko&gt;.  


Feel free to discuss this with me.  The app is still alpha, but I will deploy it on Heroku for testing as soon as a get the time to do so.</text>
  </message>
  <message>
    <ts>2017-07-25T09:39:41.867101</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U5E3DU81K&gt;, &lt;@U3SJEDR96&gt;, I am investigating the possibility of writing a parser in Elm for asciidoc, but that is a way off. It is a big job and I need more study and some experiments.  One problem is that Asciidoc, like Latex has no formal grammar that I am aware of, and both languages are non-context free. (Yikes!)</text>
  </message>
  <message>
    <ts>2017-07-25T09:40:26.890546</ts>
    <user>U3LUC6SNS</user>
    <text>I believe there is an Elm parser for markdown, so it should be possible</text>
  </message>
  <message>
    <ts>2017-07-25T09:41:05.911926</ts>
    <user>U3SJEDR96</user>
    <text>There is, indeed; and I concur, it should be totally feasible; with the possible exception of the passthrough blocks</text>
  </message>
  <message>
    <ts>2017-07-25T09:41:16.917982</ts>
    <user>U3SJEDR96</user>
    <text>that's just a wrapper around marked.js tho</text>
  </message>
  <message>
    <ts>2017-07-25T09:41:29.924406</ts>
    <user>U3SJEDR96</user>
    <text>so let's not use that as a reference for a pure Elm solution :wink:</text>
  </message>
  <message>
    <ts>2017-07-25T09:41:41.930823</ts>
    <user>U3LUC6SNS</user>
    <text>Ah … ok.  Yes, passthroughs are a pain.</text>
  </message>
  <message>
    <ts>2017-07-25T09:55:47.400566</ts>
    <user>U5E3DU81K</user>
    <text>I was wondering about that markdown one - I wonder how asciidoc it might turn out to be without doing anything</text>
  </message>
  <message>
    <ts>2017-07-25T10:08:18.847054</ts>
    <user>U5E3DU81K</user>
    <text>I was looking at asciidoctor.js (having been using asciidoctor standalone, the ruby one, to manually shoehorn asciidoc into what I want). But being a beginner at this programming thing I wasn't quite sure where to start. So I've adopted a strategy of manually converting the asciidoc docs to html snippets manually ahead of time, as to be honest the content won't be changing that often. But, it'd be nice to see it work on the fly, one day.</text>
  </message>
  <message>
    <ts>2017-07-25T10:11:04.946447</ts>
    <user>U5E3DU81K</user>
    <text>I like asciidoc in preference to markdown because: asciidoc maps pretty tightly to docbook, and if converted to docbook and then through FOP, can give you a pdf option, if desired. Also, markdown has a ridiculous variation of implementation, there's pretty much only one asciidoc. I'd write a book in asciidoc but not attempt it in markdown. Markdown is fine for enabling styling of a web input field, but not much more.</text>
  </message>
  <message>
    <ts>2017-07-25T12:32:45.294227</ts>
    <user>U635238TG</user>
    <text>i'm doing a tutorial and the compiler doesn't like the arrow at line 67.</text>
  </message>
  <message>
    <ts>2017-07-25T12:32:57.301269</ts>
    <user>U635238TG</user>
    <text>but my code is matched with the tutorial example</text>
  </message>
  <message>
    <ts>2017-07-25T12:33:09.307997</ts>
    <user>U635238TG</user>
    <text>any help?</text>
  </message>
  <message>
    <ts>2017-07-25T12:33:11.309319</ts>
    <user>U0J1M0F32</user>
    <text>I think your indentation is off on line 65</text>
  </message>
  <message>
    <ts>2017-07-25T12:33:13.310460</ts>
    <user>U0J1M0F32</user>
    <text>and 72</text>
  </message>
  <message>
    <ts>2017-07-25T12:33:35.323046</ts>
    <user>U0J1M0F32</user>
    <text>it should be consistent with lines 62 and 69 respectively.</text>
  </message>
  <message>
    <ts>2017-07-25T12:33:55.334489</ts>
    <user>U635238TG</user>
    <text>funny you say that, i was just at &lt;#C4NU4FXDE|elm-format&gt; and ilias set me straight that it is actually an intended part of elm-format</text>
  </message>
  <message>
    <ts>2017-07-25T12:34:07.341096</ts>
    <user>U635238TG</user>
    <text>&lt;https://github.com/avh4/elm-format/issues/350&gt;</text>
  </message>
  <message>
    <ts>2017-07-25T12:34:24.351134</ts>
    <user>U635238TG</user>
    <text>so i don't think that is causing this error.</text>
  </message>
  <message>
    <ts>2017-07-25T12:34:42.361463</ts>
    <user>U635238TG</user>
    <text>Arrows are reserved for cases and anonymous functions. Maybe you want &amp;gt; or &amp;gt;=
instead?

67|          NewEntries (Err error) -&amp;gt;
                                    ^
Maybe &amp;lt;http://elm-lang.org/docs/syntax&amp;gt; can help you figure it out.</text>
  </message>
  <message>
    <ts>2017-07-25T12:35:16.380528</ts>
    <user>U0J1M0F32</user>
    <text>Can you drop a minimum version of this into ellie?</text>
  </message>
  <message>
    <ts>2017-07-25T12:36:06.408887</ts>
    <user>U635238TG</user>
    <text>i can sure try! something i should learn anyways.</text>
  </message>
  <message>
    <ts>2017-07-25T12:46:44.776825</ts>
    <user>U635238TG</user>
    <text>&lt;https://ellie-app.com/3QLRCGyQxRYa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-25T12:47:09.791330</ts>
    <user>U635238TG</user>
    <text>that is through my update portion. let me know if i should add more in there. the whole program is about 200 loc right now</text>
  </message>
  <message>
    <ts>2017-07-25T12:57:16.131806</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U635238TG&gt; Just 1 extra space :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-25T12:57:47.149359</ts>
    <user>U2GPAEU1L</user>
    <text>Backspace before* `NewEntries`</text>
  </message>
  <message>
    <ts>2017-07-25T12:58:22.168754</ts>
    <user>U0J1M0F32</user>
    <text>^^^</text>
  </message>
  <message>
    <ts>2017-07-25T12:58:34.175858</ts>
    <user>U0J1M0F32</user>
    <text>Just found it :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-25T12:58:38.178064</ts>
    <user>U3HQVHERX</user>
    <text>in the future: hit "format" at the top every once in a while</text>
  </message>
  <message>
    <ts>2017-07-25T12:58:42.179855</ts>
    <user>U2GPAEU1L</user>
    <text>Credit to &lt;@U0J1M0F32&gt; for calling it before he even saw the ellie* :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-25T12:59:27.205132</ts>
    <user>U635238TG</user>
    <text>d'oh! Thank you. That's what I get for playing around with vim's yank and paste function at the same time to get nice and lazy</text>
  </message>
  <message>
    <ts>2017-07-25T12:59:28.205770</ts>
    <user>U0J1M0F32</user>
    <text>I've had a few indentation errors in my day :wink:</text>
  </message>
  <message>
    <ts>2017-07-25T12:59:57.222496</ts>
    <user>U2GPAEU1L</user>
    <text>I dislike the way it's handled tbh, I think it could be done better.</text>
  </message>
  <message>
    <ts>2017-07-25T13:00:15.232551</ts>
    <user>U2GPAEU1L</user>
    <text>Haven't thought about a solution though, so I'll shut up :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-25T13:02:19.306628</ts>
    <user>U635238TG</user>
    <text>i think there is a way for vim to show the little lines showing indentations like i've seen on other text editor's in videos. that will probably help me</text>
  </message>
  <message>
    <ts>2017-07-25T13:04:33.384434</ts>
    <user>U3HQVHERX</user>
    <text>&lt;https://github.com/Yggdroot/indentLine&gt;</text>
  </message>
  <message>
    <ts>2017-07-25T13:08:16.505863</ts>
    <user>U635238TG</user>
    <text>thank you. this is how i end up taking an hour "break" from learning Elm. lol</text>
  </message>
  <message>
    <ts>2017-07-25T13:16:39.779521</ts>
    <user>U3LUC6SNS</user>
    <text>Is there a bug crawling around in &lt;http://eeue56.github.io/json-to-elm/&gt; ?? I've pasted the following in with the pipeline option selected.  But I get nonsense with type alias definitions interspersed with function definitions.

```
type alias Credentials = {
  signature: String,
  policy: String,
  key: String,
  acl: String
}

type alias CredentialsWrapper = {
  credentials: Credentials,
  url: String
}
```</text>
  </message>
  <message>
    <ts>2017-07-25T13:17:15.799038</ts>
    <user>U0EUHKVGB</user>
    <text>There are many</text>
  </message>
  <message>
    <ts>2017-07-25T13:17:33.808565</ts>
    <user>U0EUHKVGB</user>
    <text>But, what you've done is paste in two type aliases at once</text>
  </message>
  <message>
    <ts>2017-07-25T13:17:40.812766</ts>
    <user>U0EUHKVGB</user>
    <text>Right now it only supports one type alias at once</text>
  </message>
  <message>
    <ts>2017-07-25T13:17:52.819040</ts>
    <user>U3LUC6SNS</user>
    <text>Ah .. thanks!!!</text>
  </message>
  <message>
    <ts>2017-07-25T14:20:07.963267</ts>
    <user>U3FJSB596</user>
    <text>Hello everyone! I want to get last week's date (seven days ago). I need it for a URL. I'm able to get today's date using `Date.now` but I do not know how to substract seven days. Any help?</text>
  </message>
  <message>
    <ts>2017-07-25T14:21:07.997967</ts>
    <user>U23SA861Y</user>
    <text>how are you defining days...</text>
  </message>
  <message>
    <ts>2017-07-25T14:22:19.038767</ts>
    <user>U3FJSB596</user>
    <text>Today is July 25th and I want to get July 18th</text>
  </message>
  <message>
    <ts>2017-07-25T14:22:32.045712</ts>
    <user>U23SA861Y</user>
    <text>well I ask be cause time can be funny</text>
  </message>
  <message>
    <ts>2017-07-25T14:22:56.059676</ts>
    <user>U23SA861Y</user>
    <text>one way to do it is to convert to unix time and subtract 7 days worth of seconds</text>
  </message>
  <message>
    <ts>2017-07-25T14:23:11.068360</ts>
    <user>U23SA861Y</user>
    <text>which works if there isn't a leap second</text>
  </message>
  <message>
    <ts>2017-07-25T14:23:24.076384</ts>
    <user>U23SA861Y</user>
    <text>although given that it's a float representation.....</text>
  </message>
  <message>
    <ts>2017-07-25T14:25:17.140773</ts>
    <user>U23SA861Y</user>
    <text>if you are ok with an occastional 1 second glitch near midnight that might be ok</text>
  </message>
  <message>
    <ts>2017-07-25T14:25:51.160268</ts>
    <user>U23SA861Y</user>
    <text>I believe data-extra might have better handling if you need it to be robust</text>
  </message>
  <message>
    <ts>2017-07-25T14:29:34.290262</ts>
    <user>U23SA861Y</user>
    <text>date-extra has an `add` function which takes an interval and an integer</text>
  </message>
  <message>
    <ts>2017-07-25T14:29:42.294610</ts>
    <user>U23SA861Y</user>
    <text>you could also use this</text>
  </message>
  <message>
    <ts>2017-07-25T14:39:22.627004</ts>
    <user>U4WH8STNX</user>
    <text>I've been using Scotty, it's not that feature rich like Spock but it's quite easy to grasp</text>
  </message>
  <message>
    <ts>2017-07-25T14:39:55.645261</ts>
    <user>U3FJSB596</user>
    <text>How would that be used?</text>
  </message>
  <message>
    <ts>2017-07-25T14:58:32.328014</ts>
    <user>U3SJEDR96</user>
    <text>I'd suggest using `Date.Extra`. Time is a really weird thing. Time zones, leap seconds, DST, ...</text>
  </message>
  <message>
    <ts>2017-07-25T14:59:40.366632</ts>
    <user>U23SA861Y</user>
    <text>well you would import Date.Extra and then you would call `Extra.add Day -7`</text>
  </message>
  <message>
    <ts>2017-07-25T15:15:57.885808</ts>
    <user>U3FJSB596</user>
    <text>&lt;@U23SA861Y&gt; I didn't realize it was that easy</text>
  </message>
  <message>
    <ts>2017-07-25T15:15:59.887226</ts>
    <user>U3FJSB596</user>
    <text>Thanks</text>
  </message>
  <message>
    <ts>2017-07-25T15:45:02.774670</ts>
    <user>U3HQVHERX</user>
    <text>how would one model something like this in elm: &lt;https://www.w3schools.com/howto/howto_js_tabs.asp&gt;</text>
  </message>
  <message>
    <ts>2017-07-25T15:52:28.004405</ts>
    <user>U3SJEDR96</user>
    <text>A zipper would be pretty neat, there</text>
  </message>
  <message>
    <ts>2017-07-25T15:52:49.014843</ts>
    <user>U3HQVHERX</user>
    <text>a zipper?</text>
  </message>
  <message>
    <ts>2017-07-25T15:53:02.022037</ts>
    <user>U3HQVHERX</user>
    <text>&lt;http://package.elm-lang.org/packages/wernerdegroot/listzipper/latest/List-Zipper&gt;</text>
  </message>
  <message>
    <ts>2017-07-25T15:53:03.022486</ts>
    <user>U3HQVHERX</user>
    <text>?</text>
  </message>
  <message>
    <ts>2017-07-25T16:00:21.257097</ts>
    <user>U3FJSB596</user>
    <text>&lt;@U3HQVHERX&gt; Have you tried this?
&lt;http://package.elm-lang.org/packages/basti1302/elm-non-empty-array/latest&gt;</text>
  </message>
  <message>
    <ts>2017-07-25T16:14:06.685398</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://ellie-app.com/3QPZvjvp3yCa1/0&gt; I was thinking along these lines</text>
  </message>
  <message>
    <ts>2017-07-25T16:14:58.711211</ts>
    <user>U3HQVHERX</user>
    <text>I ended up with a union type</text>
  </message>
  <message>
    <ts>2017-07-25T17:30:10.941001</ts>
    <user>U635238TG</user>
    <text>so i'm learning how to pull in json information in this tutorial but also learning what json actually is at the same time. So it seems like it's data provided by a server and we need to decode it (right term?) to pull it into our Elm app so we can manipulate that data. So the tutorial provides a small server with json data, but in real life, where is that data going to come from? Is that what the back end programming on the server side produces? Am I thinking of this right?</text>
  </message>
  <message>
    <ts>2017-07-25T17:32:08.993885</ts>
    <user>U0J1M0F32</user>
    <text>Correct, your JSON in a real life app will come from whatever server you are requesting data from. It could be a 3rd party API or it could be from a custom app your team or some vendor has written to supply data.</text>
  </message>
  <message>
    <ts>2017-07-25T17:34:06.043777</ts>
    <user>U635238TG</user>
    <text>sounds good. so that api and/or data will come with documentation showing what fields it contains and in what order they come in. i do notice a lot of json questions throughout this slack so assume this is a huge part of the game</text>
  </message>
  <message>
    <ts>2017-07-25T17:34:38.056711</ts>
    <user>U0J1M0F32</user>
    <text>Yah, for a lot of applications, they can't exist without getting data from some outside source, thats going to mean dealing with JSON.</text>
  </message>
  <message>
    <ts>2017-07-25T17:35:17.073230</ts>
    <user>U0J1M0F32</user>
    <text>Where it becomes painful is how not every API is well documented, consistent, or reasonable in its structure, which can make writing a decoder for it a daunting task.</text>
  </message>
  <message>
    <ts>2017-07-25T17:36:02.091399</ts>
    <user>U23SA861Y</user>
    <text>do be fair, that pain is there whether you are in a typed language or not</text>
  </message>
  <message>
    <ts>2017-07-25T17:37:06.118063</ts>
    <user>U635238TG</user>
    <text>i'm still in the honeymoon phase so none of this is pain yet.  just all happy mistakes over here, bob ross style. except that damn one space indent issue.</text>
  </message>
  <message>
    <ts>2017-07-25T17:40:05.190457</ts>
    <user>U0J1M0F32</user>
    <text>Yah, I kinda just left that part out, in a non typed language, you don't write a decoder, so the daunting task is trusting your code for the rest of time.</text>
  </message>
  <message>
    <ts>2017-07-25T17:41:01.213719</ts>
    <user>U23SA861Y</user>
    <text>well you write the decoder, you just do it by checking rigorously for undefined or null all over the place</text>
  </message>
  <message>
    <ts>2017-07-25T17:41:13.218250</ts>
    <user>U23SA861Y</user>
    <text>also type checking</text>
  </message>
  <message>
    <ts>2017-07-25T17:41:37.228244</ts>
    <user>U23SA861Y</user>
    <text>and then you have to write a bunch of tests that the compiler would generate for you to handle those type issues</text>
  </message>
  <message>
    <ts>2017-07-25T17:48:20.388231</ts>
    <user>U635238TG</user>
    <text>this is why i'm not sure why web developers aren't coming over to the Elm side in droves. I'm sure there must be some benefits to the other styles but wouldn't learning it this way first lay a stronger foundation? that's what I'm betting on at least.</text>
  </message>
  <message>
    <ts>2017-07-25T17:49:11.408321</ts>
    <user>U23SA861Y</user>
    <text>I think its the "what do you mean I can't?" philosophy.</text>
  </message>
  <message>
    <ts>2017-07-25T17:53:09.504542</ts>
    <user>U635238TG</user>
    <text>so then do you think as a beginner it might be better for me to think of apps that would get data from well documented APIs and keep my own back end server as minimal as possible instead of trying to do the full back end with data stuff myself?</text>
  </message>
  <message>
    <ts>2017-07-25T17:53:14.506497</ts>
    <user>U635238TG</user>
    <text>i guess that is hard to answer until i know what i want the app to do and what data it will need huh.</text>
  </message>
  <message>
    <ts>2017-07-25T17:56:00.572047</ts>
    <user>U23SA861Y</user>
    <text>I'm saying sane and well documented APIs are useful whether you are in javascript or elm. To think that the over head of creating a decoder is somehow more of a burden is a fallacy.</text>
  </message>
  <message>
    <ts>2017-07-25T18:08:52.860585</ts>
    <user>U6DKZRQCC</user>
    <text>Sorry if this has been asked in the past, but I haven't found a ton of info online about it. Is it possible to compile Elm / use the tools on a Raspberry Pi 2 (ARMv7)? I got GHC to compile some Haskell by passing in some ARM flags, but I haven't been able to set up Elm yet. Curious if anyone else has gotten it working.</text>
  </message>
  <message>
    <ts>2017-07-25T18:16:50.022253</ts>
    <user>U6D3ERLA1</user>
    <text>Is there a go to library or method for inferring types?</text>
  </message>
  <message>
    <ts>2017-07-25T18:24:08.165728</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U6D3ERLA1&gt; i don't think self-reflectiveness is possible in Elm... the compiler can do type inference though (function annotations are optional) Maybe I don't understand the question....</text>
  </message>
  <message>
    <ts>2017-07-25T18:25:06.184990</ts>
    <user>U6D3ERLA1</user>
    <text>for instance consuming a json object that you don't know what it is, and trying to determine types of each field..</text>
  </message>
  <message>
    <ts>2017-07-25T18:30:50.295089</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U6D3ERLA1&gt; But then what would the type be in your code? If the type is decided at runtime, how do you do compile-time type-analysis</text>
  </message>
  <message>
    <ts>2017-07-25T18:31:38.310787</ts>
    <user>U6D3ERLA1</user>
    <text>Right. I guess this is what you give up in a strongly typed language. The use case, of course, is consuming data in the wild..</text>
  </message>
  <message>
    <ts>2017-07-25T18:41:25.492924</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U6D3ERLA1&gt; You definitely do _lose_ things in strongly typed languages. But I'm not sure on this front. Can you explain to me this better?

What do you mean consuming data in the wild? Data that you don't know _anything_ about the shape? What do you intend to do with the data?</text>
  </message>
  <message>
    <ts>2017-07-25T18:42:21.509784</ts>
    <user>U6B7NBTLZ</user>
    <text>hello</text>
  </message>
  <message>
    <ts>2017-07-25T18:42:35.514076</ts>
    <user>U6D3ERLA1</user>
    <text>It's actually a theoretical question, not related to an actual case, but - for instance, if the api was a mess and you determine what type a field of the json was...</text>
  </message>
  <message>
    <ts>2017-07-25T18:42:40.515489</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;@U2GPAEU1L&gt;</text>
  </message>
  <message>
    <ts>2017-07-25T18:42:42.516131</ts>
    <user>U6B7NBTLZ</user>
    <text>I just updated elixir to v 1.5</text>
  </message>
  <message>
    <ts>2017-07-25T18:42:48.517937</ts>
    <user>U6B7NBTLZ</user>
    <text>and now</text>
  </message>
  <message>
    <ts>2017-07-25T18:43:02.522099</ts>
    <user>U6B7NBTLZ</user>
    <text>when i use mix ecto.create for example</text>
  </message>
  <message>
    <ts>2017-07-25T18:43:03.522432</ts>
    <user>U153UK3FA</user>
    <text>Yep, dynamically typed languages are very useful for dealing with dynamically typed data</text>
  </message>
  <message>
    <ts>2017-07-25T18:43:14.525761</ts>
    <user>U6B7NBTLZ</user>
    <text>i get this error</text>
  </message>
  <message>
    <ts>2017-07-25T18:43:29.530101</ts>
    <user>U6B7NBTLZ</user>
    <text>could not compile dependency :postgrex, "mix compile" failed. You can recompile this dependency with "mix deps.compile postgrex", update it with "mix deps.update postgrex" or clean it with "mix deps.clean postgrex"</text>
  </message>
  <message>
    <ts>2017-07-25T18:44:09.542018</ts>
    <user>U2GPAEU1L</user>
    <text>&lt;@U6D3ERLA1&gt;  But if the API is a mess. And you don't know what it's giving you. How can you do anything useful with it. 

&lt;@U153UK3FA&gt; Ya for dynamically typed data that makes sense</text>
  </message>
  <message>
    <ts>2017-07-25T18:45:54.573439</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;@U2GPAEU1L&gt; &lt;@U153UK3FA&gt; yes sadly this is the world we are living in: VARCHAR</text>
  </message>
  <message>
    <ts>2017-07-25T18:47:14.596890</ts>
    <user>U153UK3FA</user>
    <text>most applications that people write (even in dynamically typed languages) tend to be largely statically typed with very few taking advantage of dynamically typed features</text>
  </message>
  <message>
    <ts>2017-07-25T18:47:43.605797</ts>
    <user>U6D3ERLA1</user>
    <text>"most" :wink:</text>
  </message>
  <message>
    <ts>2017-07-25T18:47:56.609500</ts>
    <user>U6D3ERLA1</user>
    <text>Maybe middleware is in order</text>
  </message>
  <message>
    <ts>2017-07-25T18:48:26.618127</ts>
    <user>U6D3ERLA1</user>
    <text>Do casting in a dynamic environment then send it to the core as typed and cleaned up data</text>
  </message>
  <message>
    <ts>2017-07-25T18:49:00.628024</ts>
    <user>U153UK3FA</user>
    <text>it's usually hard to deal with data that you don't know the type of, there is little you can do with it.</text>
  </message>
  <message>
    <ts>2017-07-25T18:50:56.662286</ts>
    <user>U153UK3FA</user>
    <text>if you can convert the data to be typed then you're just parsing and you still know what the types are, even if the representations vary</text>
  </message>
  <message>
    <ts>2017-07-25T18:51:40.675777</ts>
    <user>U153UK3FA</user>
    <text>`"1"` `1` `1.0` can all be parsed as `Int`, that's not dynamic typing. That's just parsing</text>
  </message>
  <message>
    <ts>2017-07-25T18:51:42.676205</ts>
    <user>U6D3ERLA1</user>
    <text>Believe me* I know that it is hard!!</text>
  </message>
  <message>
    <ts>2017-07-25T18:52:40.693334</ts>
    <user>U6D3ERLA1</user>
    <text>The case is that we have a lot of responsibility (too much) on the client side to do validation</text>
  </message>
  <message>
    <ts>2017-07-25T18:53:01.699474</ts>
    <user>U6B7NBTLZ</user>
    <text>some help please?</text>
  </message>
  <message>
    <ts>2017-07-25T18:53:27.707283</ts>
    <user>U6D3ERLA1</user>
    <text>Agreed that this should be happening at the API level - even before, when the data is being imported it should be typed and validated and not allow improperly typed fields in the data etc</text>
  </message>
  <message>
    <ts>2017-07-25T18:53:57.715964</ts>
    <user>U6D3ERLA1</user>
    <text>This just isn't the case currently, so we do a lot of `Number("xx")` or `if (foo)` etc</text>
  </message>
  <message>
    <ts>2017-07-25T18:54:09.719516</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U6B7NBTLZ&gt; : try the &lt;#C0H8V5YM7|elm-with-elixir&gt;  channel, or maybe the elixir-slack</text>
  </message>
  <message>
    <ts>2017-07-25T18:56:10.754735</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U6D3ERLA1&gt; that's still largely static typing. It's rather rare to have a program not have expectations of the type of a value</text>
  </message>
  <message>
    <ts>2017-07-25T18:56:27.759655</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;@U153UK3FA&gt;</text>
  </message>
  <message>
    <ts>2017-07-25T18:56:27.759737</ts>
    <user>U153UK3FA</user>
    <text>because if you don't know the type of a value you can't really use it</text>
  </message>
  <message>
    <ts>2017-07-25T18:57:02.769674</ts>
    <user>U6D3ERLA1</user>
    <text>What about errant values - we just use 'Value' &amp;amp; `toMaybe` to handle the exceptions?</text>
  </message>
  <message>
    <ts>2017-07-25T18:57:31.777990</ts>
    <user>U6D3ERLA1</user>
    <text>It's true for instance that we expect types, just that the api doesn't enforce them, so we are on our own</text>
  </message>
  <message>
    <ts>2017-07-25T18:57:40.780612</ts>
    <user>U6D3ERLA1</user>
    <text>dirty data</text>
  </message>
  <message>
    <ts>2017-07-25T18:57:50.783662</ts>
    <user>U153UK3FA</user>
    <text>yep, it's just parsing. The fact that they can be ‘errant value' indicates that there is an expectation of their type.</text>
  </message>
  <message>
    <ts>2017-07-25T18:59:03.805140</ts>
    <user>U153UK3FA</user>
    <text>Elm's Json.Decode provides lots of ways to handle parsing and decoding json and converting it to some static types</text>
  </message>
  <message>
    <ts>2017-07-25T19:05:24.917755</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U6D3ERLA1&gt; there is a `oneOf` decoder that allows you to decode data that is of one of a set number of types. You can also decode into a Dict for runtime detection (but of course you lose all that nice type checking your compiler is doing)</text>
  </message>
  <message>
    <ts>2017-07-25T19:05:58.927064</ts>
    <user>U23SA861Y</user>
    <text>long and the short of it is, the less you know about the data you are receiving, the less useful it is.</text>
  </message>
  <message>
    <ts>2017-07-25T19:08:10.962198</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;@U23SA861Y&gt; Yes -  definitely preferable to parsing with regex!</text>
  </message>
  <message>
    <ts>2017-07-25T19:10:48.005769</ts>
    <user>U6D3ERLA1</user>
    <text>From the docs:
```
Why would someone generate JSON like this? Questions like this are not good for your health.
```</text>
  </message>
  <message>
    <ts>2017-07-25T19:11:12.012632</ts>
    <user>U23SA861Y</user>
    <text>ahh yes, I see you've encountered my day job</text>
  </message>
  <message>
    <ts>2017-07-25T19:11:28.017060</ts>
    <user>U6D3ERLA1</user>
    <text>lol you wrote that?</text>
  </message>
  <message>
    <ts>2017-07-25T19:11:32.018082</ts>
    <user>U23SA861Y</user>
    <text>no</text>
  </message>
  <message>
    <ts>2017-07-25T19:11:39.019953</ts>
    <user>U23SA861Y</user>
    <text>just sounds very familiar</text>
  </message>
  <message>
    <ts>2017-07-25T19:11:43.021124</ts>
    <user>U6D3ERLA1</user>
    <text>OK, the struggle is real</text>
  </message>
  <message>
    <ts>2017-07-25T19:11:46.021960</ts>
    <user>U23SA861Y</user>
    <text>at least its in JSON</text>
  </message>
  <message>
    <ts>2017-07-25T19:12:13.029059</ts>
    <user>U23SA861Y</user>
    <text>all the data formats I need to parse are poorly specified and ad-hoc</text>
  </message>
  <message>
    <ts>2017-07-25T19:12:34.034940</ts>
    <user>U55890VFT</user>
    <text>does everyone here use a linter for elm? I am having problems for the second time just setting up linter-elm-make with atom, and its stopping me from getting into elm...</text>
  </message>
  <message>
    <ts>2017-07-25T19:13:05.043181</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;@U23SA861Y&gt; I think most of the internet and much software are poorly specified and ad hoc, but I'm a pessimist (read: realist)</text>
  </message>
  <message>
    <ts>2017-07-25T19:14:13.061610</ts>
    <user>U23SA861Y</user>
    <text>I was a realist, then I tried reading the C++ spec. Now I'm a nihilist.</text>
  </message>
  <message>
    <ts>2017-07-25T19:15:58.090176</ts>
    <user>U2GPAEU1L</user>
    <text>Hahahahahahahahahahhahahahaha</text>
  </message>
  <message>
    <ts>2017-07-25T19:16:19.096128</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U55890VFT&gt; : what kind of problems are you having? is elm-make in the path or specified in the settings of linter-elm-make?</text>
  </message>
  <message>
    <ts>2017-07-25T19:16:19.096139</ts>
    <user>U2GPAEU1L</user>
    <text>I will be quoting this</text>
  </message>
  <message>
    <ts>2017-07-25T19:17:03.108120</ts>
    <user>U55890VFT</user>
    <text>yea I have the correct path, basically my file has an error that it doesnt find</text>
  </message>
  <message>
    <ts>2017-07-25T19:17:28.114798</ts>
    <user>U55890VFT</user>
    <text>im following a tutorial and the linter finds this problem in the video</text>
  </message>
  <message>
    <ts>2017-07-25T19:17:54.121640</ts>
    <user>U1AN4JRFV</user>
    <text>do you have the elm-format package installed?</text>
  </message>
  <message>
    <ts>2017-07-25T19:18:04.124462</ts>
    <user>U55890VFT</user>
    <text>yea</text>
  </message>
  <message>
    <ts>2017-07-25T19:18:23.129482</ts>
    <user>U55890VFT</user>
    <text>thats got the path to elm-format.exe</text>
  </message>
  <message>
    <ts>2017-07-25T19:18:43.134891</ts>
    <user>U55890VFT</user>
    <text>maybe elm and windows dont mix?</text>
  </message>
  <message>
    <ts>2017-07-25T19:18:52.137082</ts>
    <user>U1AN4JRFV</user>
    <text>can you post the file you talk about as is?</text>
  </message>
  <message>
    <ts>2017-07-25T19:19:04.140598</ts>
    <user>U55890VFT</user>
    <text>module Main exposing (..)

import Html


add a b =
    a + b


result =
    add 2 5


main =
    Html.text result</text>
  </message>
  <message>
    <ts>2017-07-25T19:20:03.156327</ts>
    <user>U55890VFT</user>
    <text>in the browser it properly tells me that result needs to be a string</text>
  </message>
  <message>
    <ts>2017-07-25T19:21:36.181600</ts>
    <user>U1AN4JRFV</user>
    <text>yep, works here</text>
  </message>
  <message>
    <ts>2017-07-25T19:21:56.186767</ts>
    <user>U1AN4JRFV</user>
    <text>do you have an elm-package.json in that same folder?</text>
  </message>
  <message>
    <ts>2017-07-25T19:24:18.223099</ts>
    <user>U55890VFT</user>
    <text>awe I thought I could do an image inside a thread</text>
  </message>
  <message>
    <ts>2017-07-25T19:24:21.223752</ts>
    <user>U55890VFT</user>
    <text>but guess not</text>
  </message>
  <message>
    <ts>2017-07-25T19:26:34.258922</ts>
    <user>U1AN4JRFV</user>
    <text>here's a workaround: use vs code, it has good quite good support for elm too</text>
  </message>
  <message>
    <ts>2017-07-25T19:26:53.264085</ts>
    <user>U1AN4JRFV</user>
    <text>i need to go to sleep :wink:</text>
  </message>
  <message>
    <ts>2017-07-25T19:26:54.264286</ts>
    <user>U55890VFT</user>
    <text>okay, I was in vscode originally but some stuff wasn't working so I went to atom</text>
  </message>
  <message>
    <ts>2017-07-25T19:27:00.265911</ts>
    <user>U55890VFT</user>
    <text>I will give it another go</text>
  </message>
  <message>
    <ts>2017-07-25T19:27:06.267535</ts>
    <user>U55890VFT</user>
    <text>thanks for the help!</text>
  </message>
  <message>
    <ts>2017-07-25T19:27:52.279345</ts>
    <user>U1AN4JRFV</user>
    <text>that's unfortunate, but i am sure, it's just a small thing. good luck!</text>
  </message>
  <message>
    <ts>2017-07-26T06:22:59.498158</ts>
    <user>U5WD40ZA9</user>
    <text>Is there any way to log the model is a json object format that looks good in dev tools? It all seems to become such a mess…</text>
  </message>
  <message>
    <ts>2017-07-26T06:30:05.627242</ts>
    <user>U31FGNWCT</user>
    <text>&lt;@U5WD40ZA9&gt; Have you tried built in debugger? It shows your model prettified.</text>
  </message>
  <message>
    <ts>2017-07-26T06:30:51.642246</ts>
    <user>U5WD40ZA9</user>
    <text>What do you mean? Debug.log ?</text>
  </message>
  <message>
    <ts>2017-07-26T06:31:10.648047</ts>
    <user>U31FGNWCT</user>
    <text>No, when you compile your elm app with --debug flag there is a special debug tool on your page</text>
  </message>
  <message>
    <ts>2017-07-26T07:06:59.290933</ts>
    <user>U5WD40ZA9</user>
    <text>Thanks :slightly_smiling_face: Not a huge fan of it however. But it seems to be great for the problem at hand!</text>
  </message>
  <message>
    <ts>2017-07-26T07:21:38.540719</ts>
    <user>U23QS8ETZ</user>
    <text>Do we have something similar to &lt;https://github.com/elm-lang/mouse&gt; for touch events? :thinking_face: 
I want to subscribe to `touchmove` events.</text>
  </message>
  <message>
    <ts>2017-07-26T07:24:13.584795</ts>
    <user>U1ZCL9GAX</user>
    <text>&lt;@U23QS8ETZ&gt; there's &lt;http://package.elm-lang.org/packages/mpizenberg/elm-touch-events/3.0.1&gt;</text>
  </message>
  <message>
    <ts>2017-07-26T07:24:30.589859</ts>
    <user>U1ZCL9GAX</user>
    <text>I haven't used it (yet) but I'd be interested to hear how you go</text>
  </message>
  <message>
    <ts>2017-07-26T07:33:04.740592</ts>
    <user>U3SJEDR96</user>
    <text>as it happens, I'm currently doing a mobile app, and wasn't quite satisfied with the existing libs. &lt;http://package.elm-lang.org/packages/zwilias/elm-touch-events/1.0.1/Touch&gt; is what I'm using for now</text>
  </message>
  <message>
    <ts>2017-07-26T07:33:32.748928</ts>
    <user>U3SJEDR96</user>
    <text>though I'll admit that it currently doesn't expose the details of move events</text>
  </message>
  <message>
    <ts>2017-07-26T07:33:47.753104</ts>
    <user>U3SJEDR96</user>
    <text>if you can let me know what you need from those, we can figure out a good way to expose it?</text>
  </message>
  <message>
    <ts>2017-07-26T07:35:13.778265</ts>
    <user>U3SJEDR96</user>
    <text>mpizenberg's package is very complete, though. I just found it a little unwieldy for my use-case, I suppose</text>
  </message>
  <message>
    <ts>2017-07-26T07:37:07.811963</ts>
    <user>U23QS8ETZ</user>
    <text>Thanks &lt;@U1ZCL9GAX&gt; and &lt;@U3SJEDR96&gt; 
I should've been more clear, I would like an actual Elm subscription.
That is, a function with a signature like this -&amp;gt; `moves : (Position -&amp;gt; msg) -&amp;gt; Sub msg`

I've looked at all the touch-event libraries out there (that are listed on &lt;http://package.elm-lang.org|package.elm-lang.org&gt;) but none of them seem to have this.
Whereas the mouse package does have this for mouse events.</text>
  </message>
  <message>
    <ts>2017-07-26T07:39:32.853752</ts>
    <user>U1ZCL9GAX</user>
    <text>&lt;@U3SJEDR96&gt; I'd love to see higher-level gestures like in &lt;https://zingchart.github.io/zingtouch/&gt; :slightly_smiling_face: multi-finger tap, rotate, pinch etc.</text>
  </message>
  <message>
    <ts>2017-07-26T07:46:30.977093</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U23QS8ETZ&gt; yeah, the mouse library has a subscription because it can register an event listener on the window. Sadly, the only way to do that is using special code which isn't available to regular packages. Having an event-listener on a "wrapper"-div around your view gives mostly the same result, but certainly less elegantly</text>
  </message>
  <message>
    <ts>2017-07-26T07:46:56.984672</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U1ZCL9GAX&gt; that's the end-goal; if I can find enough time to implement it all :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-26T07:50:19.044678</ts>
    <user>U23QS8ETZ</user>
    <text>Aight cool, thanks &lt;@U3SJEDR96&gt; :v:</text>
  </message>
  <message>
    <ts>2017-07-26T08:38:23.032770</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U4872964V&gt;, thanks for the suggestion re asciidoctor and markdown.   I'll look into it.</text>
  </message>
  <message>
    <ts>2017-07-26T08:39:55.068097</ts>
    <user>U3LUC6SNS</user>
    <text>I wonder if it would be possible to add a search feature to Ellie - search on title, author, and user-supplied tags.  Ellie is a fantastic resource and this would IMHO make it even more so.</text>
  </message>
  <message>
    <ts>2017-07-26T10:25:01.396309</ts>
    <user>U6D3ERLA1</user>
    <text>Not to be crass, but what is the easiest way to decode this json based on this type ailas:</text>
  </message>
  <message>
    <ts>2017-07-26T10:25:02.396920</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;https://ellie-app.com/3R9wXjy2zyca1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-26T10:25:19.408093</ts>
    <user>U6D3ERLA1</user>
    <text>I'm looking for</text>
  </message>
  <message>
    <ts>2017-07-26T10:25:54.429509</ts>
    <user>U6D3ERLA1</user>
    <text>`Json.Decode.decode Alias """ {foo: "x", bar: "y"} """`</text>
  </message>
  <message>
    <ts>2017-07-26T10:26:49.463747</ts>
    <user>U4872964V</user>
    <text>&lt;@U6D3ERLA1&gt; not sure what you are looking for exactly, but this should cover your needs I think: &lt;https://guide.elm-lang.org/interop/json.html&gt;</text>
  </message>
  <message>
    <ts>2017-07-26T10:27:49.500446</ts>
    <user>U6D3ERLA1</user>
    <text>I guess my question is - can I decode a json string using a type alias</text>
  </message>
  <message>
    <ts>2017-07-26T10:28:28.525250</ts>
    <user>U4872964V</user>
    <text>you have to write a decoder - json is not the same as Elm types</text>
  </message>
  <message>
    <ts>2017-07-26T10:30:08.587616</ts>
    <user>U4872964V</user>
    <text>but you can have a look at &lt;http://eeue56.github.io/json-to-elm/&gt;</text>
  </message>
  <message>
    <ts>2017-07-26T10:30:47.613426</ts>
    <user>U6D3ERLA1</user>
    <text>It seems like a lot of boilerplate - if the type alias describes the expected types, not sure why we write it twice..</text>
  </message>
  <message>
    <ts>2017-07-26T10:30:57.619500</ts>
    <user>U6D3ERLA1</user>
    <text>as a type alias and as a decoder</text>
  </message>
  <message>
    <ts>2017-07-26T10:31:01.622047</ts>
    <user>U4872964V</user>
    <text>because json is not Elm types</text>
  </message>
  <message>
    <ts>2017-07-26T10:31:27.638139</ts>
    <user>U6D3ERLA1</user>
    <text>right - that's the work we're expecting the decoder to do</text>
  </message>
  <message>
    <ts>2017-07-26T10:31:30.640359</ts>
    <user>U4872964V</user>
    <text>for simple examples, it may be the same, but sooner or later you want something to be slightly different</text>
  </message>
  <message>
    <ts>2017-07-26T10:32:11.666907</ts>
    <user>U6D3ERLA1</user>
    <text>if json was elm types we could use it directly :wink:</text>
  </message>
  <message>
    <ts>2017-07-26T10:32:20.672252</ts>
    <user>U4872964V</user>
    <text>well, that's javascript</text>
  </message>
  <message>
    <ts>2017-07-26T10:32:58.696144</ts>
    <user>U6D3ERLA1</user>
    <text>I understand that it has to be converted to elm types, what I don't understand is why it can't use a type definition to do this...</text>
  </message>
  <message>
    <ts>2017-07-26T10:33:05.700164</ts>
    <user>U6D3ERLA1</user>
    <text>ex:</text>
  </message>
  <message>
    <ts>2017-07-26T10:33:36.719229</ts>
    <user>U23SA861Y</user>
    <text>You can't use the type definition because elm doesn't have runtime type reflection</text>
  </message>
  <message>
    <ts>2017-07-26T10:33:50.728468</ts>
    <user>U4872964V</user>
    <text>or compile-time, for that matter</text>
  </message>
  <message>
    <ts>2017-07-26T10:34:38.757816</ts>
    <user>U23SA861Y</user>
    <text>the quickest way is to map those field decoders over your type constructor</text>
  </message>
  <message>
    <ts>2017-07-26T10:34:48.764495</ts>
    <user>U6D3ERLA1</user>
    <text>```
str = """
{
  hello: "world"
}
"""

type alias Hello {
  hello: String
}

hello =
  decode Hello str
```</text>
  </message>
  <message>
    <ts>2017-07-26T10:35:18.783223</ts>
    <user>U4872964V</user>
    <text>Because the type of your `decode` will take a type as argument, which you cannot do in Elm</text>
  </message>
  <message>
    <ts>2017-07-26T10:35:51.804340</ts>
    <user>U23SA861Y</user>
    <text>decode (field "hello" string) str</text>
  </message>
  <message>
    <ts>2017-07-26T10:36:52.842569</ts>
    <user>U4872964V</user>
    <text>however, people are thinking about these things, you are not the first. It's a matter of making a good solution, though</text>
  </message>
  <message>
    <ts>2017-07-26T10:37:00.847891</ts>
    <user>U6D3ERLA1</user>
    <text>I guess I rankle against having the data represented in three ways - as raw data, type definitions and as decoder schema...</text>
  </message>
  <message>
    <ts>2017-07-26T10:37:06.850966</ts>
    <user>U4872964V</user>
    <text>for now, we write our decoders and be happy</text>
  </message>
  <message>
    <ts>2017-07-26T10:37:29.865395</ts>
    <user>U6D3ERLA1</user>
    <text>If anything changes it needs to change in two places instead of one</text>
  </message>
  <message>
    <ts>2017-07-26T10:37:44.874394</ts>
    <user>U4872964V</user>
    <text>indeed, but the compiler tells you where</text>
  </message>
  <message>
    <ts>2017-07-26T10:38:16.894194</ts>
    <user>U6D3ERLA1</user>
    <text>I guess I'm looking for the notion of a schema, and let the other business happen without so much "typing" (heh)</text>
  </message>
  <message>
    <ts>2017-07-26T10:38:45.912559</ts>
    <user>U23SA861Y</user>
    <text>well typing happens only once, reading happens many times</text>
  </message>
  <message>
    <ts>2017-07-26T10:38:46.912702</ts>
    <user>U6D3ERLA1</user>
    <text>:keyboard:</text>
  </message>
  <message>
    <ts>2017-07-26T10:38:49.914884</ts>
    <user>U6DT2M8UD</user>
    <text>&lt;https://github.com/dragonwasrobot/json-schema-to-elm&gt; ?</text>
  </message>
  <message>
    <ts>2017-07-26T10:39:21.935125</ts>
    <user>U4872964V</user>
    <text>things are explicit (boilerplate) in Elm, for a good reason and that is readability. you should be able to look at the code and see what is being done. If decoders were generated automatically, you'd lose that.</text>
  </message>
  <message>
    <ts>2017-07-26T10:39:31.940833</ts>
    <user>U6D3ERLA1</user>
    <text>reading the same thing in multiple vernaculars doesn't give you any more information</text>
  </message>
  <message>
    <ts>2017-07-26T10:39:59.958580</ts>
    <user>U23SA861Y</user>
    <text>so the thing is, it's not the same thing</text>
  </message>
  <message>
    <ts>2017-07-26T10:40:14.967965</ts>
    <user>U23SA861Y</user>
    <text>there a slightly different bit of data being encoded</text>
  </message>
  <message>
    <ts>2017-07-26T10:40:22.973223</ts>
    <user>U3SJEDR96</user>
    <text>(besides, I know Knuth would disagree with you)</text>
  </message>
  <message>
    <ts>2017-07-26T10:41:04.999751</ts>
    <user>U4872964V</user>
    <text>there are two pieces of information: 1. how the Elm type looks, 2. how the Json looks. Sometimes they are "the same", sometimes they are not.</text>
  </message>
  <message>
    <ts>2017-07-26T10:41:50.028755</ts>
    <user>U6D3ERLA1</user>
    <text>I'm anticipating needing to do a huge amount of this, so in the end it will need to be abstracted</text>
  </message>
  <message>
    <ts>2017-07-26T10:42:14.043674</ts>
    <user>U4872964V</user>
    <text>It's not as much work as you anticipate, I think. The compiler helps you.</text>
  </message>
  <message>
    <ts>2017-07-26T10:42:29.053526</ts>
    <user>U4872964V</user>
    <text>Unless you are handling a massive number of types</text>
  </message>
  <message>
    <ts>2017-07-26T10:42:35.057138</ts>
    <user>U6D3ERLA1</user>
    <text>If I know the types - using server-side validation of data etc - and I can pass all of this information along via an API - I don't really want to pay a programmer to type it out again</text>
  </message>
  <message>
    <ts>2017-07-26T10:42:53.068858</ts>
    <user>U3SJEDR96</user>
    <text>But why would the data look the same on both ends?</text>
  </message>
  <message>
    <ts>2017-07-26T10:43:01.073633</ts>
    <user>U4872964V</user>
    <text>maybe you should not be using Elm then, so you can pay the programmer to do the things they don't have to do in Elm then :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-26T10:43:30.092285</ts>
    <user>U3SJEDR96</user>
    <text>Decoupling representations means _less_ work, at the cost of setting it up.</text>
  </message>
  <message>
    <ts>2017-07-26T10:43:35.095483</ts>
    <user>U23SA861Y</user>
    <text>if you were working in JS, were it automatically unmarhsalls it for you. You would still need to write a bunch of logic to validate every field.</text>
  </message>
  <message>
    <ts>2017-07-26T10:44:10.117676</ts>
    <user>U4872964V</user>
    <text>we can discuss this in &lt;#C2QPJLU2X|elm-discuss&gt; or somewhere else, this is not &lt;#C3K1L92FP|beginner&gt; stuff, I think</text>
  </message>
  <message>
    <ts>2017-07-26T10:44:23.125843</ts>
    <user>U6D3ERLA1</user>
    <text>true</text>
  </message>
  <message>
    <ts>2017-07-26T11:10:12.125936</ts>
    <user>U0J1M0F32</user>
    <text>Didn't see this until just now. I think you're misinterpreting my intent around saying decoders are a pain point. 

My only point about bringing that up was that, decoders are where lots of beginners struggle, not because decoders shouldn't exist or that they're bad as a concept, but because its a complexity that they have to face and makes them come to grips with the reality of the data they are facing and that _many_ server side APIs are not held to the same scrutiny.</text>
  </message>
  <message>
    <ts>2017-07-26T11:25:10.701231</ts>
    <user>U3LUC6SNS</user>
    <text>I've been looking through the `Date` and `Date.Extra` packages to find an analogue of `Date.now` which returns a representation of the current Date-time with GMT offset = 0, i.e., UTC.  Does anyone know how to do this?</text>
  </message>
  <message>
    <ts>2017-07-26T11:27:02.774387</ts>
    <user>U3SJEDR96</user>
    <text>Well, do you want to convert to UTC, or do you want to chop off the timezone info, and act as if the time you have is _actually_ UTC?</text>
  </message>
  <message>
    <ts>2017-07-26T11:28:21.824784</ts>
    <user>U3LUC6SNS</user>
    <text>convert to UTC</text>
  </message>
  <message>
    <ts>2017-07-26T11:28:42.838568</ts>
    <user>U3LUC6SNS</user>
    <text>independently of machine space-time coordinates</text>
  </message>
  <message>
    <ts>2017-07-26T11:31:57.966829</ts>
    <user>U3SJEDR96</user>
    <text>Those statements conflict. If you're in TZ UTC + 1, and you get 11 AM. Do you want 11 AM or 10 AM?</text>
  </message>
  <message>
    <ts>2017-07-26T11:32:06.973066</ts>
    <user>U6D3ERLA1</user>
    <text>```
module Main exposing (..)

import Json.Encode
import Json.Decode exposing (field)
import Html
import Debug exposing (log)


type alias Guy =
    { name : String
    , age : Int
    , hasPets : Bool
    , petNames : List String
    , favorites : Favorites
    }


type alias Favorites =
    { colors : Maybe ComplexType
    , musicians : List String
    }


decodeGuy : Json.Decode.Decoder Guy
decodeGuy =
    Json.Decode.map5 Guy
        (field "name" Json.Decode.string)
        (field "age" &lt;http://Json.Decode.int|Json.Decode.int&gt;)
        (field "hasPets" Json.Decode.bool)
        (field "petNames" Json.Decode.list Json.Decode.string)
        (field "favorites" decodeGuy)
```

Ugh Why do I keep getting this `Cannot find variable Decoder` message?</text>
  </message>
  <message>
    <ts>2017-07-26T11:32:46.998390</ts>
    <user>U3SJEDR96</user>
    <text>`(field "petNames" (Json.Decode.list Json.Decode.string))` &amp;lt;- needs some parens</text>
  </message>
  <message>
    <ts>2017-07-26T11:33:25.024387</ts>
    <user>U6D3ERLA1</user>
    <text>lol this was from &lt;http://eeue56.github.io/json-to-elm/&gt;</text>
  </message>
  <message>
    <ts>2017-07-26T11:33:40.033645</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, it's an "approximation" so to speak :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-26T11:34:10.053290</ts>
    <user>U6D3ERLA1</user>
    <text>ha</text>
  </message>
  <message>
    <ts>2017-07-26T11:38:21.212500</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, I'd like 10AM</text>
  </message>
  <message>
    <ts>2017-07-26T11:38:51.230915</ts>
    <user>U0CQ254F5</user>
    <text>can someone explain the benefits of single constructor types? i.e. `type Foo = Foo String` as opposed to, say, `type alias Foo = { foo: String }`</text>
  </message>
  <message>
    <ts>2017-07-26T11:41:35.334605</ts>
    <user>U6D3ERLA1</user>
    <text>Where do I get `decodeComplexType` from this is undefined</text>
  </message>
  <message>
    <ts>2017-07-26T11:42:41.376539</ts>
    <user>U6D3ERLA1</user>
    <text>Maybe I have to write this :thinking_face:</text>
  </message>
  <message>
    <ts>2017-07-26T11:44:51.460097</ts>
    <user>U6D3ERLA1</user>
    <text>again, from the json-to-elm jawn</text>
  </message>
  <message>
    <ts>2017-07-26T11:48:02.580707</ts>
    <user>U0EUHKVGB</user>
    <text>&lt;@U6D3ERLA1&gt; I don't understand what you're asking. You need to show what gave you that.</text>
  </message>
  <message>
    <ts>2017-07-26T11:48:18.590887</ts>
    <user>U0EUHKVGB</user>
    <text>A `ComplexType` means that it couldn't figure it out.</text>
  </message>
  <message>
    <ts>2017-07-26T11:48:24.594798</ts>
    <user>U0EUHKVGB</user>
    <text>And that you may need to hand write it.</text>
  </message>
  <message>
    <ts>2017-07-26T11:48:52.612237</ts>
    <user>U0EUHKVGB</user>
    <text>Also, I'm not sure what jawn is, but it sounds rude. I hope it's not</text>
  </message>
  <message>
    <ts>2017-07-26T11:51:20.707192</ts>
    <user>U0CQ254F5</user>
    <text>jawn, philly-slang for joint/thing/etc. not rude</text>
  </message>
  <message>
    <ts>2017-07-26T11:53:07.775706</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U0CQ254F5&gt; single constructors mean you can't accidentally pass something into a function that isn't what you intended. `type Name = Name String` means when I want a name I have to say `Name something` and regular strings will be rejected. It's an additional level of safety and prevents errors where you accidentally pass the wrong data but the function accepts it because it's the same type as something else.</text>
  </message>
  <message>
    <ts>2017-07-26T11:53:56.806849</ts>
    <user>U4872964V</user>
    <text>&lt;@U0CQ254F5&gt; also, you can hide the implementation if you have it in a module</text>
  </message>
  <message>
    <ts>2017-07-26T11:54:40.834871</ts>
    <user>U4872964V</user>
    <text>&lt;@U0CQ254F5&gt; also, you can have recursive types</text>
  </message>
  <message>
    <ts>2017-07-26T11:55:09.853146</ts>
    <user>U0CQ254F5</user>
    <text>&lt;@U4872964V&gt; how do you hide?</text>
  </message>
  <message>
    <ts>2017-07-26T11:55:23.862207</ts>
    <user>U4872964V</user>
    <text>&lt;@U0CQ254F5&gt; by just exposing the type, not the constructor</text>
  </message>
  <message>
    <ts>2017-07-26T11:55:31.867257</ts>
    <user>U0CQ254F5</user>
    <text>right</text>
  </message>
  <message>
    <ts>2017-07-26T11:55:44.875818</ts>
    <user>U4872964V</user>
    <text>but if you don't need any of those things, use an alias</text>
  </message>
  <message>
    <ts>2017-07-26T11:56:17.896106</ts>
    <user>U0CQ254F5</user>
    <text>gotcha, thanks &lt;@U4872964V&gt; &lt;@U2SR9DL7Q&gt;</text>
  </message>
  <message>
    <ts>2017-07-26T12:05:00.228563</ts>
    <user>U0WK5B4UF</user>
    <text>Is there an existing elm package to display music sheets ?</text>
  </message>
  <message>
    <ts>2017-07-26T12:05:50.259421</ts>
    <user>U0EUHKVGB</user>
    <text>&lt;@U6D3ERLA1&gt; Basically, if there's a complex type it usually means you need to break up what you give to json-to-elm a bit. It works better if you give it a type alias, cause it has to guess less. But it can still have some issues with more complicated types. Generally meant as an aide to help you write 90% of the boilerplate, rather than 1-to-1</text>
  </message>
  <message>
    <ts>2017-07-26T12:20:15.766245</ts>
    <user>U23SA861Y</user>
    <text>It's one of those fine lines, the only way you can really avoid it and be strongly typed with with runtime type refection. Problem with that is your language needs to support runtime type reflection.</text>
  </message>
  <message>
    <ts>2017-07-26T12:25:15.934625</ts>
    <user>U6D3ERLA1</user>
    <text>got it</text>
  </message>
  <message>
    <ts>2017-07-26T12:27:24.008156</ts>
    <user>U6D3ERLA1</user>
    <text>(I don't know how to do that but I see what you mean)</text>
  </message>
  <message>
    <ts>2017-07-26T12:32:26.187158</ts>
    <user>U0J1M0F32</user>
    <text>Yep</text>
  </message>
  <message>
    <ts>2017-07-26T12:33:08.211100</ts>
    <user>U23SA861Y</user>
    <text>And then people start to use runtime type reflection</text>
  </message>
  <message>
    <ts>2017-07-26T12:33:34.225625</ts>
    <user>U23SA861Y</user>
    <text>I shiver just thinking about it</text>
  </message>
  <message>
    <ts>2017-07-26T13:40:25.462941</ts>
    <user>U6DBPU40Y</user>
    <text>Hey everyone, where is this syntax documented? 
```
Msg -&amp;gt; 
     model ! []
```</text>
  </message>
  <message>
    <ts>2017-07-26T13:41:03.485586</ts>
    <user>U23SA861Y</user>
    <text>it is, sort of but It is not preferred</text>
  </message>
  <message>
    <ts>2017-07-26T13:41:44.509337</ts>
    <user>U23SA861Y</user>
    <text>it can be found in Platform.Cmd</text>
  </message>
  <message>
    <ts>2017-07-26T13:46:00.655739</ts>
    <user>U6DBPU40Y</user>
    <text>Thanks &lt;@U23SA861Y&gt;, I saw it in the todomvc code, sort of confusing because I've also seen some people wrote an util function to do ```model =&amp;gt; cmd```</text>
  </message>
  <message>
    <ts>2017-07-26T13:46:24.669603</ts>
    <user>U23SA861Y</user>
    <text>so `=&amp;gt;` is an alias for (,)</text>
  </message>
  <message>
    <ts>2017-07-26T13:46:41.679326</ts>
    <user>U23SA861Y</user>
    <text>in both cases I would avoid the custom operator and just write plain code</text>
  </message>
  <message>
    <ts>2017-07-26T13:48:32.742090</ts>
    <user>U23SA861Y</user>
    <text>as you've just experienced, these clever™ operators just make the code harder to read</text>
  </message>
  <message>
    <ts>2017-07-26T13:49:59.792000</ts>
    <user>U6DBPU40Y</user>
    <text>haha alright, it's cool to see fancy operators but they do in fact confuse people</text>
  </message>
  <message>
    <ts>2017-07-26T13:50:52.822820</ts>
    <user>U23SA861Y</user>
    <text>you could write `model ! []` or you could have a simple funciton `prepCmds model []`</text>
  </message>
  <message>
    <ts>2017-07-26T13:51:30.845130</ts>
    <user>U23SA861Y</user>
    <text>little more typing but one is easier to look up (try looking up ! with ctrl+f) and has an explanation built in</text>
  </message>
  <message>
    <ts>2017-07-26T13:51:49.856217</ts>
    <user>U23SA861Y</user>
    <text>you can also `(model, Cmd.batch [])`</text>
  </message>
  <message>
    <ts>2017-07-26T13:52:13.870452</ts>
    <user>U23SA861Y</user>
    <text>or</text>
  </message>
  <message>
    <ts>2017-07-26T13:52:20.874471</ts>
    <user>U23SA861Y</user>
    <text>`(model, Cmd.none)`</text>
  </message>
  <message>
    <ts>2017-07-26T13:53:51.928581</ts>
    <user>U6DBPU40Y</user>
    <text>:ok_hand: thanks for all the advice, really appreciate it</text>
  </message>
  <message>
    <ts>2017-07-26T14:35:45.367808</ts>
    <user>U1P6FFJ64</user>
    <text>&lt;@U6DBPU40Y&gt; that syntax was used on elm 0.17 but they decided to remove it in future versions: &lt;https://github.com/elm-lang/core/commit/3dab5974837bd350cbee9ce1ecf9ddab1d0f0ebf&gt;</text>
  </message>
  <message>
    <ts>2017-07-26T14:37:03.411641</ts>
    <user>U0CQ254F5</user>
    <text>could the type signature here &lt;https://github.com/evancz/elm-sortable-table/blob/master/src/Table.elm#L155-L161&gt; be written as?

```
customConfig : Config data msg -&amp;gt; Config data msg
customConfig { ... } =
  -- implementation
```</text>
  </message>
  <message>
    <ts>2017-07-26T14:38:32.460303</ts>
    <user>U6DBPU40Y</user>
    <text>good to know &lt;@U1P6FFJ64&gt; , thank you, I guess I'll stick to plain code</text>
  </message>
  <message>
    <ts>2017-07-26T14:50:04.845441</ts>
    <user>U0CQ254F5</user>
    <text>maybe im confusing it with an `alias`</text>
  </message>
  <message>
    <ts>2017-07-26T14:52:31.928933</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U0CQ254F5&gt; does Config accept data and msg as parameters?</text>
  </message>
  <message>
    <ts>2017-07-26T14:55:09.017225</ts>
    <user>U2SR9DL7Q</user>
    <text>If so, I think you can do
```
customConfig : Config -&amp;gt; Config
customConfig { data, msg } =
    -- implentation -- 
```
and you would return ``` { new_data, new_msg } ```</text>
  </message>
  <message>
    <ts>2017-07-26T14:57:55.110616</ts>
    <user>U2SR9DL7Q</user>
    <text>Basically, you're free to deconstruct and pattern match in the actual function arguments, while keeping your type annotation high level and concise</text>
  </message>
  <message>
    <ts>2017-07-26T15:01:21.226202</ts>
    <user>U4872964V</user>
    <text>You'd have to return `Config new_data new_msg` or `{ data = new_data, msg = new_msg }` though</text>
  </message>
  <message>
    <ts>2017-07-26T15:03:13.287221</ts>
    <user>U0CQ254F5</user>
    <text>yeah, i think i got confused, the function is taking a record and returning a type</text>
  </message>
  <message>
    <ts>2017-07-26T15:32:21.189631</ts>
    <user>U663M2MB7</user>
    <text>What is the normal structure of a Elm application? Is it `src/` for the application and `tests/` for tests?</text>
  </message>
  <message>
    <ts>2017-07-26T15:32:35.196495</ts>
    <user>U3FJSB596</user>
    <text>That's how I have it</text>
  </message>
  <message>
    <ts>2017-07-26T15:35:58.300867</ts>
    <user>U663M2MB7</user>
    <text>I guess I will just do the same. It makes sense.</text>
  </message>
  <message>
    <ts>2017-07-26T15:39:14.398369</ts>
    <user>U663M2MB7</user>
    <text>Thanks :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-26T15:39:53.417664</ts>
    <user>U3FJSB596</user>
    <text>&lt;@U663M2MB7&gt; Remember to have the right directory in `source-directories` in `elm-package` : `src`</text>
  </message>
  <message>
    <ts>2017-07-26T15:40:28.435196</ts>
    <user>U663M2MB7</user>
    <text>Like `"./src"` so?</text>
  </message>
  <message>
    <ts>2017-07-26T15:41:17.459919</ts>
    <user>U3FJSB596</user>
    <text>`"src"`</text>
  </message>
  <message>
    <ts>2017-07-26T15:42:11.486549</ts>
    <user>U663M2MB7</user>
    <text>Cool thanks :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-26T17:16:44.381246</ts>
    <user>U635238TG</user>
    <text>So I'm nearing the end of this tutorial and it just threw my brain for a loop. We just added this union type of two "states" is how he keeps describing it.</text>
  </message>
  <message>
    <ts>2017-07-26T17:17:19.397580</ts>
    <user>U635238TG</user>
    <text>so I'm reading on union types in the guide. I was coming along good when types were things like "int" and "string" and even getting this Msg thing down. But states?</text>
  </message>
  <message>
    <ts>2017-07-26T17:17:52.412794</ts>
    <user>U635238TG</user>
    <text>tbh, I'm not quite sure what I want to ask here</text>
  </message>
  <message>
    <ts>2017-07-26T17:18:35.432254</ts>
    <user>U635238TG</user>
    <text>basically, how can a "state" be a type and I thought functional programs were stateless but don't really know what that means yet</text>
  </message>
  <message>
    <ts>2017-07-26T17:19:38.460175</ts>
    <user>U6DBPU40Y</user>
    <text>Not an expert though but I guess you r talking about how these messages are defined as data in ELM</text>
  </message>
  <message>
    <ts>2017-07-26T17:20:24.481891</ts>
    <user>U635238TG</user>
    <text>yes. because with the experiences i've had with types so far or with type aliases they eventually end up being a int or string or something like that</text>
  </message>
  <message>
    <ts>2017-07-26T17:20:46.492071</ts>
    <user>U635238TG</user>
    <text>or a record containing them</text>
  </message>
  <message>
    <ts>2017-07-26T17:21:55.522446</ts>
    <user>U6DBPU40Y</user>
    <text>you only have to get the idea of how these messages defined as data flow through the app</text>
  </message>
  <message>
    <ts>2017-07-26T17:22:37.541399</ts>
    <user>U6DBPU40Y</user>
    <text>I kinda relate them to using constants in JS when switching cases</text>
  </message>
  <message>
    <ts>2017-07-26T17:22:58.550440</ts>
    <user>U23SA861Y</user>
    <text>so it's not a state as in it's keeping state</text>
  </message>
  <message>
    <ts>2017-07-26T17:23:18.559414</ts>
    <user>U23SA861Y</user>
    <text>its a type which you can put in your model that can only ever have two values</text>
  </message>
  <message>
    <ts>2017-07-26T17:26:17.638448</ts>
    <user>U23SA861Y</user>
    <text>in the same way that a boolean is defined as `type Bool = True | False`</text>
  </message>
  <message>
    <ts>2017-07-26T17:26:38.647418</ts>
    <user>U23SA861Y</user>
    <text>in this case you create a type with slightly more descriptive names</text>
  </message>
  <message>
    <ts>2017-07-26T17:28:42.701688</ts>
    <user>U0RPQMZ9S</user>
    <text>it might help to realize that the _type_ is `GameState`, and its _possible values_ are `EnteringName` and `Playing`</text>
  </message>
  <message>
    <ts>2017-07-26T17:28:48.704681</ts>
    <user>U635238TG</user>
    <text>ok, ok. starting to click. I like seeing it as a kind of boolean thing. and this todo example in the guide is helping.</text>
  </message>
  <message>
    <ts>2017-07-26T17:29:04.711552</ts>
    <user>U23SA861Y</user>
    <text>in this case it only has two possible states</text>
  </message>
  <message>
    <ts>2017-07-26T17:29:12.715524</ts>
    <user>U0RPQMZ9S</user>
    <text>you can use types to represent anything, in this case you're using one to represent possible states of the application, with each value of the type cooresponding to a possible state</text>
  </message>
  <message>
    <ts>2017-07-26T17:30:24.748115</ts>
    <user>U236M9FH9</user>
    <text>Instead of a mutable global state, you pass the state through your application as arguments to functions, and modify the state by making functions return different values</text>
  </message>
  <message>
    <ts>2017-07-26T17:30:45.758227</ts>
    <user>U635238TG</user>
    <text>and then when you get down to defining what should happen with those different possible states (like when using the case of) it's going to eventually end up being data like int's or string's that I'm comfortable with? I feel like wrapping my head around "data" is what helps me grok this stuff.</text>
  </message>
  <message>
    <ts>2017-07-26T17:31:23.774866</ts>
    <user>U14Q8S4EM</user>
    <text>It sounds like you had some questions about what "state" is &lt;@U635238TG&gt;, but since we are talking about union types specifically. Yeah you can make them in a great variety of ways, which adds to their usefulness. I often make union types to represent mouse events like `type ClickState = NoClick | FirstClick Position | ReleaseClick Position Position`.</text>
  </message>
  <message>
    <ts>2017-07-26T17:32:49.812706</ts>
    <user>U14Q8S4EM</user>
    <text>So, to me, the phrase "what happens with state", is referring to things like _rendering_, or maybe _user data_ that might be sent through an http request. Thats what you _do_ with state.</text>
  </message>
  <message>
    <ts>2017-07-26T17:33:31.830995</ts>
    <user>U14Q8S4EM</user>
    <text>And yes, state _will be_ comprised of things like `Int` and `String`. In a big app it would certainly be a record with fields of those values. But your model could be any data type.</text>
  </message>
  <message>
    <ts>2017-07-26T17:34:00.843546</ts>
    <user>U14Q8S4EM</user>
    <text>I made an app a few weeks back where my messages and model were both type `Int`, which was kind of goofy.</text>
  </message>
  <message>
    <ts>2017-07-26T17:37:13.925168</ts>
    <user>U14Q8S4EM</user>
    <text>(I hope that helps you)</text>
  </message>
  <message>
    <ts>2017-07-26T17:37:22.929131</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U635238TG&gt; You can think of it as kind of like a boolean, but you get to define what those options are. `type MyType = CanBeThis | CanBeThat | CanBeThisLastThing`</text>
  </message>
  <message>
    <ts>2017-07-26T17:38:17.951986</ts>
    <user>U4CDPP9HR</user>
    <text>Hey, noob question: how do you destructure a tuple in a function definition?</text>
  </message>
  <message>
    <ts>2017-07-26T17:38:41.962221</ts>
    <user>U635238TG</user>
    <text>this all definitely helps. This convo has been much easier to follow than that last tutorial piece, I think I just let the "state" thing get to my head.  Time for a break and a nice, long walk to let some of this soak in. the tutorial/app was a little tough for me but I wanted to complete it before going back and reading the guide. Then I think Richard Feldman's book will be next. It's been a little tough ordering the Elm resources into a good beginner sequence.</text>
  </message>
  <message>
    <ts>2017-07-26T17:39:05.972281</ts>
    <user>U0RPQMZ9S</user>
    <text>&lt;@U4CDPP9HR&gt; `foo (a,b) = somethingwith a`</text>
  </message>
  <message>
    <ts>2017-07-26T17:39:43.987727</ts>
    <user>U4CDPP9HR</user>
    <text>Weird, that's what I have. Maybe the compiler is complaining about something else… anyway, thanks.</text>
  </message>
  <message>
    <ts>2017-07-26T17:40:24.004019</ts>
    <user>U0RPQMZ9S</user>
    <text>might be a syntax error in the lines above it</text>
  </message>
  <message>
    <ts>2017-07-26T17:42:17.050494</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U635238TG&gt; Are you building your own thing while doing the tutorials?</text>
  </message>
  <message>
    <ts>2017-07-26T17:42:37.058681</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U4CDPP9HR&gt; what error message are you seeing?</text>
  </message>
  <message>
    <ts>2017-07-26T17:43:17.074531</ts>
    <user>U4CDPP9HR</user>
    <text>I figured it out. I had `foo ( a,b ) = ...` and it didn't like the spaces.</text>
  </message>
  <message>
    <ts>2017-07-26T18:11:55.722411</ts>
    <user>U635238TG</user>
    <text>&lt;@U2SR9DL7Q&gt; Yes, I actually started a little bingo card generator project last night. I'm only like 3 lessons from finishing this tutorial though and wanted to see the mentality that went into constructing a full app first. i definitely want to get my hands dirty with my own projects asap. my family is mostly educators and they want me to build them a more robust, modern student progress tracking app as that is a big pain point for them. i can't determine what order of magnitude rise in complexity that will be but they did have a laugh at my bingo card idea starter instead (but they still want that. all of these apps must be free too according to them). and i'm trusting i can find a way to do these things (and my portfolio page) in Elm.</text>
  </message>
  <message>
    <ts>2017-07-26T22:27:56.332429</ts>
    <user>U6ECA0Q4D</user>
    <text>I'm totally new to Elm and trying to wrap my head around it by reading the official introduction to Elm.  I got to the Random section where the example is a program to roll a die.  I was good with everything right up until the result of the random number generation invoked the NewFace command.  
```NewFace newFace -&amp;gt;
  (Model newFace, Cmd.none)
```
My question is this:  how does Elm know to store the newFace value in the dieFace member of the model?  Is that simply because the Model record only has one element?</text>
  </message>
  <message>
    <ts>2017-07-26T22:30:50.366180</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U6ECA0Q4D&gt; `Model` in this case is a function</text>
  </message>
  <message>
    <ts>2017-07-26T22:31:37.375001</ts>
    <user>U153UK3FA</user>
    <text>when you declare a type alias of a record type, Elm also automatically declares a function for constructing values of this type with the same name as the type</text>
  </message>
  <message>
    <ts>2017-07-26T22:32:38.386045</ts>
    <user>U6ECA0Q4D</user>
    <text>&lt;@U153UK3FA&gt; That makes more sense then!  So if I had a second member of the record I'd have to provide it something like (Model 1 2, Cmd.none), right?</text>
  </message>
  <message>
    <ts>2017-07-26T22:33:04.391137</ts>
    <user>U153UK3FA</user>
    <text>So `Model`(the function) take an `Int` and gives you a `Model`(the type)</text>
  </message>
  <message>
    <ts>2017-07-26T22:33:27.395340</ts>
    <user>U153UK3FA</user>
    <text>yep</text>
  </message>
  <message>
    <ts>2017-07-26T22:33:53.400091</ts>
    <user>U6ECA0Q4D</user>
    <text>Thanks, that helps</text>
  </message>
  <message>
    <ts>2017-07-26T22:34:14.404108</ts>
    <user>U153UK3FA</user>
    <text>You can also just use a record literal eg. `({dieFace: newFace}, Cmd.none)`</text>
  </message>
  <message>
    <ts>2017-07-26T22:35:07.413766</ts>
    <user>U6ECA0Q4D</user>
    <text>That looks a lot more friendly to my eyes since I've been spending all my time javascript and c# lately :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-26T22:37:53.444304</ts>
    <user>U6ECA0Q4D</user>
    <text>so if I had a model that was like this:
``` { one: Int, two: Int } ```
and I wanted to update just the 'two' value in the update I would do something like
```(model | two = 123) ```
?</text>
  </message>
  <message>
    <ts>2017-07-26T22:39:21.460549</ts>
    <user>U6ECA0Q4D</user>
    <text>I guess I need curlies instead of parens</text>
  </message>
  <message>
    <ts>2017-07-26T22:39:33.462645</ts>
    <user>U6ECA0Q4D</user>
    <text>```{model | two = 123}```</text>
  </message>
  <message>
    <ts>2017-07-26T22:40:09.468960</ts>
    <user>U6ECA0Q4D</user>
    <text>Thanks for the help &lt;@U153UK3FA&gt;!</text>
  </message>
  <message>
    <ts>2017-07-26T22:41:00.478575</ts>
    <user>U153UK3FA</user>
    <text>yep</text>
  </message>
  <message>
    <ts>2017-07-27T00:05:42.343410</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;https://www.cis.upenn.edu/~matuszek/Concise%20Guides/Concise%20Elm.html&gt;</text>
  </message>
  <message>
    <ts>2017-07-27T00:05:44.343879</ts>
    <user>U6D3ERLA1</user>
    <text>this is cool</text>
  </message>
  <message>
    <ts>2017-07-27T00:05:59.346528</ts>
    <user>U6D3ERLA1</user>
    <text>might not be up to date?</text>
  </message>
  <message>
    <ts>2017-07-27T00:10:01.387885</ts>
    <user>U153UK3FA</user>
    <text>yep, very out of date</text>
  </message>
  <message>
    <ts>2017-07-27T00:24:40.535037</ts>
    <user>U6D3ERLA1</user>
    <text>format is nice oh well</text>
  </message>
  <message>
    <ts>2017-07-27T03:59:06.243975</ts>
    <user>U31FGNWCT</user>
    <text>Hi folks! 
I don't understand the next type issue:
```
type alias TablesModel flags =
    { rows : flags
    , sortBy : Column
    , currentLocale : String
    }

...
type alias Flags = List Row
...
main : Program Flags TablesModel Msg
...
init = (\flags -&amp;gt; ( TablesModel flags initialSort "en", Cmd.none ))
...
simpleTable : TableSetup row -&amp;gt; TablesModel flags -&amp;gt; Html msg
simpleTable setup model =
    table
        [ class "table" ]
        [ tableColgroup setup.columnsTitles setup.actions
        , tableHead setup.columnsTitles
        , tableBody setup.extractor setup.actions model.rows
        ]

tableBody : Extractor row -&amp;gt; List Action -&amp;gt; List row -&amp;gt; Html msg
tableBody extractor actions rows =
    tbody
        [ class "main" ]
        (List.map
            (\row -&amp;gt;
                row
                    |&amp;gt; extractor
                    |&amp;gt; filledRow actions
            )
            rows
        )
```
*Function `tableBody` is expecting the 3rd argument to be:  List row But it is: flags *</text>
  </message>
  <message>
    <ts>2017-07-27T04:00:44.278793</ts>
    <user>U31FGNWCT</user>
    <text>I'm missing something very basic, but can't think it out</text>
  </message>
  <message>
    <ts>2017-07-27T04:02:02.305851</ts>
    <user>U3SJEDR96</user>
    <text>well, `model.rows` isn't a `List row`, it's `flags`. No way to tell it's a list, really..</text>
  </message>
  <message>
    <ts>2017-07-27T04:02:53.323015</ts>
    <user>U31FGNWCT</user>
    <text>But flags is Flags which is List row</text>
  </message>
  <message>
    <ts>2017-07-27T04:02:57.324010</ts>
    <user>U3SJEDR96</user>
    <text>might want to change that to `type alias TablesModel row = {rows : List row, ...}`</text>
  </message>
  <message>
    <ts>2017-07-27T04:03:16.330471</ts>
    <user>U3SJEDR96</user>
    <text>no, `flags` is a type variable. Could be a `String`, for all the compiler knows :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-27T04:04:20.352255</ts>
    <user>U3SJEDR96</user>
    <text>also, I think your type annotation for `main` is a little off, since it doesn't have the type param for the row-type in there</text>
  </message>
  <message>
    <ts>2017-07-27T04:09:48.460877</ts>
    <user>U31FGNWCT</user>
    <text>Woah! &lt;@U3SJEDR96&gt; , thank you very much. That helped. Not sure why cant I pass Flags type to type variable though.</text>
  </message>
  <message>
    <ts>2017-07-27T04:10:44.480254</ts>
    <user>U3SJEDR96</user>
    <text>Well you can, but your type annotation for `simpleTable` doesn't say `TablesModel Flags`, so at that point, it's really "anything"</text>
  </message>
  <message>
    <ts>2017-07-27T04:11:17.491027</ts>
    <user>U3SJEDR96</user>
    <text>you could change that to `TablesModel Flags`, but then one wonders why it would be a type param at all :wink:</text>
  </message>
  <message>
    <ts>2017-07-27T04:14:07.548223</ts>
    <user>U31FGNWCT</user>
    <text>The thing is I need to have a flexible table constructor (not programming term), one table might receive one pack of "flags" data (for sure, I will use ports in the future, but for now I'm embedding a little thing and flags are super handy)  and another will receive another one.</text>
  </message>
  <message>
    <ts>2017-07-27T04:14:59.566401</ts>
    <user>U3SJEDR96</user>
    <text>Sure, that makes sense. But your rows will always be a `List row`, for varying definitions of `row`, right? :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-27T04:20:16.674763</ts>
    <user>U31FGNWCT</user>
    <text>Yes, that's how I structure it for now</text>
  </message>
  <message>
    <ts>2017-07-27T04:27:31.827613</ts>
    <user>U6EAT2Z37</user>
    <text>It's a good idea to start with something *more specific* first, then make it more general later when you actually need it, usually.</text>
  </message>
  <message>
    <ts>2017-07-27T04:28:07.839781</ts>
    <user>U3SJEDR96</user>
    <text>Premature generalization, it's a thing!</text>
  </message>
  <message>
    <ts>2017-07-27T04:28:37.850386</ts>
    <user>U5W5F6QGP</user>
    <text>Fear the helper function that is used in 10000 slightly different places</text>
  </message>
  <message>
    <ts>2017-07-27T04:34:55.984554</ts>
    <user>U31FGNWCT</user>
    <text>Why should I fear it? I've got over 9000 tables, which share the same view and behavior, but rely on different api. I think it is a good decision to make tableHelpers for them.</text>
  </message>
  <message>
    <ts>2017-07-27T04:35:37.999973</ts>
    <user>U31FGNWCT</user>
    <text>So that later I can add a new table by just "configuring" one well tested function</text>
  </message>
  <message>
    <ts>2017-07-27T04:39:12.075516</ts>
    <user>U3SJEDR96</user>
    <text>That makes sense. Getting a feel for the "right" abstraction tends to flow from making functions for a single thing and recognizing ways to make it more re-usable. Skipping a step every now and then is ok, of course. In your case, generalizing the `row` type is a first step. Generalizing `rows` entirely is a possible next step, _if needed_ :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-27T04:46:27.231926</ts>
    <user>U31FGNWCT</user>
    <text>Thank you, I'm trying to balance between waterfall approach and the opposite one, but it's sometimes paralyzing.</text>
  </message>
  <message>
    <ts>2017-07-27T04:54:01.397561</ts>
    <user>U3SJEDR96</user>
    <text>Well, one thing to keep in mind is that refactoring in Elm is super-easy and the compiler guides you through it to make sure you got everything. So starting from exactly what you need for 1 single case, then refactoring as you introduce new cases to handle, is easy and relatively pain-free. Trying to predict what cases you might need to handle, all at one, is much harder :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-27T06:39:39.541805</ts>
    <user>U5CPJRWQ6</user>
    <text>because of an error in a previous type signature I got this. Instead of saying Html Msg, i accidently typed Html and something way way below complained about this</text>
  </message>
  <message>
    <ts>2017-07-27T06:40:00.547776</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, that's a painful one, and indeed related to "incomplete" type annotations</text>
  </message>
  <message>
    <ts>2017-07-27T06:40:47.561431</ts>
    <user>U5CPJRWQ6</user>
    <text>its a tracked bug, I assume then…</text>
  </message>
  <message>
    <ts>2017-07-27T06:40:53.563279</ts>
    <user>U3SJEDR96</user>
    <text>Yep</text>
  </message>
  <message>
    <ts>2017-07-27T07:20:00.233250</ts>
    <user>U5E3DU81K</user>
    <text>what does |&amp;gt; mean?</text>
  </message>
  <message>
    <ts>2017-07-27T07:23:48.296819</ts>
    <user>U3SJEDR96</user>
    <text>`foo |&amp;gt; bar` is the same as `bar foo`. It's the "forward function application" operator</text>
  </message>
  <message>
    <ts>2017-07-27T07:24:11.302663</ts>
    <user>U3SJEDR96</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#%7C&amp;gt;&gt; more info there :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-27T07:57:18.875994</ts>
    <user>U5E3DU81K</user>
    <text>I don't understand that</text>
  </message>
  <message>
    <ts>2017-07-27T07:59:34.917449</ts>
    <user>U1ZCL9GAX</user>
    <text>instead of saying " bake (mix (combine flour eggs)) " you can say " combine flour eggs |&amp;gt; mix |&amp;gt; bake "</text>
  </message>
  <message>
    <ts>2017-07-27T08:00:35.938733</ts>
    <user>U4SM7ECAG</user>
    <text>^ best explanation ever!</text>
  </message>
  <message>
    <ts>2017-07-27T08:01:00.946941</ts>
    <user>U5E3DU81K</user>
    <text>the |&amp;gt; puts the thing on a stack for the next piece to use?</text>
  </message>
  <message>
    <ts>2017-07-27T08:02:02.966891</ts>
    <user>U4SM7ECAG</user>
    <text>yeah kind of. you can also read it as "then" like: do this, then with the result do that, ...</text>
  </message>
  <message>
    <ts>2017-07-27T08:06:52.060533</ts>
    <user>U6EAT2Z37</user>
    <text>&lt;@U5E3DU81K&gt; if you want to know what it *actually* does, it applies the function on the right to the value on the left.</text>
  </message>
  <message>
    <ts>2017-07-27T08:07:24.071155</ts>
    <user>U6EAT2Z37</user>
    <text>`toString 5` could be expressed as `5 |&amp;gt; toString`.</text>
  </message>
  <message>
    <ts>2017-07-27T08:09:46.118602</ts>
    <user>U6EAT2Z37</user>
    <text>"does" is a bit of a misnomer, though.</text>
  </message>
  <message>
    <ts>2017-07-27T08:09:51.120073</ts>
    <user>U1ZCL9GAX</user>
    <text>you could implement it by putting the return value on a stack, if you were writing an elm interpreter</text>
  </message>
  <message>
    <ts>2017-07-27T08:10:12.126975</ts>
    <user>U6EAT2Z37</user>
    <text>&lt;@U1ZCL9GAX&gt; might not be the most helpful explanation ever!</text>
  </message>
  <message>
    <ts>2017-07-27T08:10:20.129607</ts>
    <user>U1ZCL9GAX</user>
    <text>i don't know what the elm compiler does, it probably optimizes most of that away</text>
  </message>
  <message>
    <ts>2017-07-27T08:10:44.137895</ts>
    <user>U1ZCL9GAX</user>
    <text>&lt;@U6EAT2Z37&gt; yeah, but &lt;@U5E3DU81K&gt; is thinking operationally so why not</text>
  </message>
  <message>
    <ts>2017-07-27T08:11:35.154746</ts>
    <user>U6EAT2Z37</user>
    <text>because it'll confuse him/her later.</text>
  </message>
  <message>
    <ts>2017-07-27T08:13:38.195502</ts>
    <user>U1ZCL9GAX</user>
    <text>hmm, i think it's useful to map out a path from where someone is right now (they asked about a stack) to where you'd like to take them (denotational semantics of |&amp;gt;)</text>
  </message>
  <message>
    <ts>2017-07-27T08:14:20.209634</ts>
    <user>U6EAT2Z37</user>
    <text>That's true.</text>
  </message>
  <message>
    <ts>2017-07-27T08:15:20.230186</ts>
    <user>U6EAT2Z37</user>
    <text>I don't think we need to get to denotational semantics, though. Maybe a clearer representation of a model that will work in all situations is good, though. The stack idea won't work for very long :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-27T08:16:36.255991</ts>
    <user>U6EAT2Z37</user>
    <text>&lt;@U5E3DU81K&gt; `toString 5` is a single expression. It's an application of the function `toString` to the number `5`. `5 |&amp;gt; toString` is also a single expression. It's applying the `|&amp;gt;` operator (which is a function of two arguments: one argument either side of it) to the `5` value and the `toString` function. It results in an application of the `toString` function to the `5` value.</text>
  </message>
  <message>
    <ts>2017-07-27T08:17:15.269592</ts>
    <user>U6EAT2Z37</user>
    <text>So, basically, `|&amp;gt;` is useful for switching around the way you write stuff so it reads more easily.</text>
  </message>
  <message>
    <ts>2017-07-27T08:51:32.031084</ts>
    <user>U68471J6P</user>
    <text>Could somebody provide me with a sscce for the usage of keyframes in Elm-css?</text>
  </message>
  <message>
    <ts>2017-07-27T08:56:01.144784</ts>
    <user>U6FAU8U6A</user>
    <text>I'm an absolute beginner in Elm. At the moment I try to build a Html table. In each row there should be a Dropdown element in a cell, other cells contain other things. I'm using r31gN/elm-dropdown. With a "Dropdown.renderDropdownHtml ..." I get the error, that this type is a "Html Dropdown.Msg" instead of a "Html Msg". No idea how to proceed...</text>
  </message>
  <message>
    <ts>2017-07-27T08:59:12.228089</ts>
    <user>U4PT7NG4V</user>
    <text>I'd be tempting to suggest going through &lt;https://guide.elm-lang.org/&gt; as a first step if you're an absolute beginner.</text>
  </message>
  <message>
    <ts>2017-07-27T08:59:49.244542</ts>
    <user>U4PT7NG4V</user>
    <text>I've never used the `elm-dropdown` package. But &lt;http://package.elm-lang.org/packages/elm-lang/html/2.0.0/Html#map&gt; might be useful in this case</text>
  </message>
  <message>
    <ts>2017-07-27T09:03:04.336432</ts>
    <user>U6FAU8U6A</user>
    <text>Thanks. I'll take look</text>
  </message>
  <message>
    <ts>2017-07-27T09:06:51.440789</ts>
    <user>U5E3DU81K</user>
    <text>interesting that |&amp;gt; is called a forward function application operator, because it actually drags the thing on the right over to make use of the thing on the left. The thing on the left must be stored temporarily somewhere (as if on a stack) and because of the |&amp;gt; the thing on the right sees the first thing on 'the stack' and consumes it.</text>
  </message>
  <message>
    <ts>2017-07-27T09:07:42.464272</ts>
    <user>U5E3DU81K</user>
    <text>but could it be used to go fully reverse-polish?</text>
  </message>
  <message>
    <ts>2017-07-27T09:08:46.493990</ts>
    <user>U4PT7NG4V</user>
    <text>I see it less as "Dragging the right hand side thing over to the left", and more of "Pipe this left hand thing --&amp;gt; into this"</text>
  </message>
  <message>
    <ts>2017-07-27T09:09:12.505854</ts>
    <user>U5E3DU81K</user>
    <text>ah</text>
  </message>
  <message>
    <ts>2017-07-27T09:11:26.568818</ts>
    <user>U4PT7NG4V</user>
    <text>Microsoft calls it "The forward pipe operator" &lt;https://msdn.microsoft.com/en-us/visualfsharpdocs/conceptual/operators.%5b-h%5d-%5d%5b't1,'u%5d-function-%5bfsharp%5d&gt;</text>
  </message>
  <message>
    <ts>2017-07-27T09:11:38.574663</ts>
    <user>U4PT7NG4V</user>
    <text>Makes a little more sense to me :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-27T09:12:26.596780</ts>
    <user>U6EAT2Z37</user>
    <text>Yeah, except for some languages it does something other than what it does in Elm.</text>
  </message>
  <message>
    <ts>2017-07-27T09:12:51.608606</ts>
    <user>U4PT7NG4V</user>
    <text>True true, I think F# has identical rules to Elm in this regard</text>
  </message>
  <message>
    <ts>2017-07-27T09:20:09.818242</ts>
    <user>U6EAT2Z37</user>
    <text>Elixir uses a similar operator which has a similar effect `|&amp;gt;` :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-27T09:21:55.871713</ts>
    <user>U5E3DU81K</user>
    <text>if there are several used at once, the forward one is written on separate lines, vertically, but the backward one seems to be all on one line - is that correct?</text>
  </message>
  <message>
    <ts>2017-07-27T09:22:58.902864</ts>
    <user>U5E3DU81K</user>
    <text>judging by those examples in the 'Basics' page</text>
  </message>
  <message>
    <ts>2017-07-27T09:23:25.916536</ts>
    <user>U6EAT2Z37</user>
    <text>Yeah, the formatting generally formats it that way...</text>
  </message>
  <message>
    <ts>2017-07-27T09:23:59.933013</ts>
    <user>U6EAT2Z37</user>
    <text>that's because the forwards one is good for "piping expressions together", and so they go on new lines... and the other one is good for removing parenthesis (brackets) so they go on the one line (usually)</text>
  </message>
  <message>
    <ts>2017-07-27T09:59:00.076688</ts>
    <user>U6D3ERLA1</user>
    <text>How do people handle watch / compile workflow in dev?</text>
  </message>
  <message>
    <ts>2017-07-27T10:09:46.481693</ts>
    <user>U635238TG</user>
    <text>do you mean something like elm-live where you can see your changes happen live as you save your file? either way, i found it really cool and easy to use so other beginners should check it out if they haven't</text>
  </message>
  <message>
    <ts>2017-07-27T10:18:07.793992</ts>
    <user>U5S1LBR7Y</user>
    <text>Does any one know if auto completing case statements like in this video is possible in VSCode?
Look at 27:16
&lt;https://youtu.be/sHWexPRFuUw&gt;</text>
  </message>
  <message>
    <ts>2017-07-27T10:23:47.007951</ts>
    <user>U5E3DU81K</user>
    <text>how often is the identity function used?</text>
  </message>
  <message>
    <ts>2017-07-27T10:29:12.214309</ts>
    <user>U0J1M0F32</user>
    <text>&lt;@U5E3DU81K&gt; Occasionally</text>
  </message>
  <message>
    <ts>2017-07-27T10:39:43.612824</ts>
    <user>U6734UL1Z</user>
    <text>&lt;@U6D3ERLA1&gt; I found create-elm-app which seems to work really well, and I think the dev for that is on slack too</text>
  </message>
  <message>
    <ts>2017-07-27T10:41:31.682316</ts>
    <user>U6B7NBTLZ</user>
    <text>hello</text>
  </message>
  <message>
    <ts>2017-07-27T10:41:44.690003</ts>
    <user>U6B7NBTLZ</user>
    <text>can somebody explain the following?</text>
  </message>
  <message>
    <ts>2017-07-27T10:42:00.699788</ts>
    <user>U6B7NBTLZ</user>
    <text>removeTask : String -&amp;gt; List Task -&amp;gt; List Task
removeTask id tasks =
    List.filter (\task -&amp;gt; id /= task.id) tasks</text>
  </message>
  <message>
    <ts>2017-07-27T10:42:09.705612</ts>
    <user>U6B7NBTLZ</user>
    <text>only what s in the paranthesis</text>
  </message>
  <message>
    <ts>2017-07-27T10:42:18.711278</ts>
    <user>U6B7NBTLZ</user>
    <text>\task -&amp;gt; id /= task.id</text>
  </message>
  <message>
    <ts>2017-07-27T10:42:49.731004</ts>
    <user>U6734UL1Z</user>
    <text>it's a function, the "\" in front indicates the start</text>
  </message>
  <message>
    <ts>2017-07-27T10:43:09.743635</ts>
    <user>U6B7NBTLZ</user>
    <text>and whats task?</text>
  </message>
  <message>
    <ts>2017-07-27T10:43:18.749402</ts>
    <user>U6734UL1Z</user>
    <text>the parameter</text>
  </message>
  <message>
    <ts>2017-07-27T10:43:45.766216</ts>
    <user>U6B7NBTLZ</user>
    <text>and /= is different?</text>
  </message>
  <message>
    <ts>2017-07-27T10:44:10.781490</ts>
    <user>U6734UL1Z</user>
    <text>yes :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-27T10:44:15.785107</ts>
    <user>U6734UL1Z</user>
    <text>like != in other languages</text>
  </message>
  <message>
    <ts>2017-07-27T10:44:19.787502</ts>
    <user>U6B7NBTLZ</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-27T10:44:21.789054</ts>
    <user>U6B7NBTLZ</user>
    <text>so</text>
  </message>
  <message>
    <ts>2017-07-27T10:44:38.799725</ts>
    <user>U6B7NBTLZ</user>
    <text>i call removeTask 1 list</text>
  </message>
  <message>
    <ts>2017-07-27T10:44:54.809951</ts>
    <user>U6B7NBTLZ</user>
    <text>what happens?</text>
  </message>
  <message>
    <ts>2017-07-27T10:46:18.863058</ts>
    <user>U6D3ERLA1</user>
    <text>Is it possible to do something equivalent to `npm run script`</text>
  </message>
  <message>
    <ts>2017-07-27T10:46:32.871868</ts>
    <user>U6D3ERLA1</user>
    <text>defined in elm-package.json</text>
  </message>
  <message>
    <ts>2017-07-27T10:47:13.897305</ts>
    <user>U0J1M0F32</user>
    <text>&lt;@U6D3ERLA1&gt; I don't think so, because I've never seen anything to that effect, but I have also never tried honestly.</text>
  </message>
  <message>
    <ts>2017-07-27T10:47:59.927853</ts>
    <user>U6734UL1Z</user>
    <text>removetask calls list.filter, supplying the filter function and the list of tasks.  list.filter calls the supplied function on each item in the list, which compares 1 to the id of each task.</text>
  </message>
  <message>
    <ts>2017-07-27T10:49:00.967274</ts>
    <user>U6B7NBTLZ</user>
    <text>oooo</text>
  </message>
  <message>
    <ts>2017-07-27T10:49:11.974702</ts>
    <user>U6B7NBTLZ</user>
    <text>so</text>
  </message>
  <message>
    <ts>2017-07-27T10:49:13.975375</ts>
    <user>U6B7NBTLZ</user>
    <text>(\task -&amp;gt; id /= task.id)</text>
  </message>
  <message>
    <ts>2017-07-27T10:49:19.979816</ts>
    <user>U6B7NBTLZ</user>
    <text>this is lke the condition</text>
  </message>
  <message>
    <ts>2017-07-27T10:49:35.989897</ts>
    <user>U6B7NBTLZ</user>
    <text>if it doesn t passes is deleted from tasks</text>
  </message>
  <message>
    <ts>2017-07-27T10:49:38.991874</ts>
    <user>U6B7NBTLZ</user>
    <text>rght?</text>
  </message>
  <message>
    <ts>2017-07-27T10:50:38.030626</ts>
    <user>U41NK9BM4</user>
    <text>Yes. technically a *new* list is returned</text>
  </message>
  <message>
    <ts>2017-07-27T10:50:51.039263</ts>
    <user>U6B7NBTLZ</user>
    <text>undestood</text>
  </message>
  <message>
    <ts>2017-07-27T10:50:54.041384</ts>
    <user>U6B7NBTLZ</user>
    <text>Thanks</text>
  </message>
  <message>
    <ts>2017-07-27T10:52:07.088994</ts>
    <user>U41NK9BM4</user>
    <text>So if the `removeTask` caller code doesn't capture this `newList` the update is lost :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-27T11:08:18.732647</ts>
    <user>U6D3ERLA1</user>
    <text>Why can't I define a type `type Grid = List List Int`</text>
  </message>
  <message>
    <ts>2017-07-27T11:09:00.758405</ts>
    <user>U6D3ERLA1</user>
    <text>"Find all the top-level values named `List` and do some renaming. Make sure the
names are distinct!"</text>
  </message>
  <message>
    <ts>2017-07-27T11:09:29.776712</ts>
    <user>U6D3ERLA1</user>
    <text>Not sure what this is all about... trying to define a Grid type that is a List of Lists of ints: `[[1,2,3], [2,3,4], ...]`</text>
  </message>
  <message>
    <ts>2017-07-27T11:09:58.794962</ts>
    <user>U4872964V</user>
    <text>&lt;@U6D3ERLA1&gt; `type alias Grid = List (List Int)`</text>
  </message>
  <message>
    <ts>2017-07-27T11:10:09.801898</ts>
    <user>U6D3ERLA1</user>
    <text>:smile:</text>
  </message>
  <message>
    <ts>2017-07-27T11:11:25.849168</ts>
    <user>U0CQ254F5</user>
    <text>`type Grid = Grid (List (List Int))` too i _think_?</text>
  </message>
  <message>
    <ts>2017-07-27T11:11:39.857574</ts>
    <user>U4872964V</user>
    <text>If you want a distinct type, yes</text>
  </message>
  <message>
    <ts>2017-07-27T11:11:59.870049</ts>
    <user>U6D3ERLA1</user>
    <text>Still don't really understand the difference between defining a type and defining a type alias</text>
  </message>
  <message>
    <ts>2017-07-27T11:12:21.884295</ts>
    <user>U0CQ254F5</user>
    <text>&lt;@U6D3ERLA1&gt; &lt;http://faq.elm-community.org/#what-is-the-difference-between-type-and-type-alias&gt;</text>
  </message>
  <message>
    <ts>2017-07-27T11:15:24.002740</ts>
    <user>U0CQ254F5</user>
    <text>&lt;@U6D3ERLA1&gt; since `List Int` is already a defined type you'll need to `alias` it, or get around that by defining a single type union constructor like above `type Foo = Foo …`</text>
  </message>
  <message>
    <ts>2017-07-27T11:16:17.036970</ts>
    <user>U6D3ERLA1</user>
    <text>ok `type alias Row = List Int` `type alias Grid = List Row`</text>
  </message>
  <message>
    <ts>2017-07-27T11:16:33.047192</ts>
    <user>U6D3ERLA1</user>
    <text>perhaps</text>
  </message>
  <message>
    <ts>2017-07-27T11:16:40.051751</ts>
    <user>U4872964V</user>
    <text>yes, why not</text>
  </message>
  <message>
    <ts>2017-07-27T11:16:41.052417</ts>
    <user>U0CQ254F5</user>
    <text>seems reasonable to me</text>
  </message>
  <message>
    <ts>2017-07-27T11:16:44.054181</ts>
    <user>U0J1M0F32</user>
    <text>:thumbsup:</text>
  </message>
  <message>
    <ts>2017-07-27T11:17:02.065251</ts>
    <user>U6D3ERLA1</user>
    <text>It's semantically correct also</text>
  </message>
  <message>
    <ts>2017-07-27T11:17:07.068560</ts>
    <user>U0J1M0F32</user>
    <text>Which is a plus.</text>
  </message>
  <message>
    <ts>2017-07-27T12:03:37.828621</ts>
    <user>U6D3ERLA1</user>
    <text>OK writing a checkbox was one of the hardest things I've ever done</text>
  </message>
  <message>
    <ts>2017-07-27T12:03:44.833360</ts>
    <user>U6D3ERLA1</user>
    <text>This is starting to make sense tho:</text>
  </message>
  <message>
    <ts>2017-07-27T12:07:05.954552</ts>
    <user>U6D3ERLA1</user>
    <text>This still looks cray to me - am I [[[[[ over-bracketing  ]]]]] ?</text>
  </message>
  <message>
    <ts>2017-07-27T12:20:18.406729</ts>
    <user>U0RPQMZ9S</user>
    <text>the parens around the `[H.text ....]` stuff in the `boards` definition should be unnecessary</text>
  </message>
  <message>
    <ts>2017-07-27T12:21:38.452482</ts>
    <user>U0RPQMZ9S</user>
    <text>but other than that looks good, you'd get type errors if you were over-bracketing</text>
  </message>
  <message>
    <ts>2017-07-27T12:23:05.499974</ts>
    <user>U0J1M0F32</user>
    <text>It does take a bit of getting used to, all the brackets, but I've learned to love the explicitness of it.</text>
  </message>
  <message>
    <ts>2017-07-27T12:32:58.836371</ts>
    <user>U6D3ERLA1</user>
    <text>{:heart: }</text>
  </message>
  <message>
    <ts>2017-07-27T12:42:56.162559</ts>
    <user>U6FM5KWTZ</user>
    <text>can some1 pls explain why elm-repl says "syntax problem" when I try to type in "half : Float -&amp;gt; Float" from the tutorial?</text>
  </message>
  <message>
    <ts>2017-07-27T12:45:30.247253</ts>
    <user>U635238TG</user>
    <text>well it just doesn't allow type annotations like that. not sure the philosophy, i think this goes into it: &lt;https://github.com/elm-lang/elm-repl/issues/113&gt;</text>
  </message>
  <message>
    <ts>2017-07-27T12:46:13.271460</ts>
    <user>U0J1M0F32</user>
    <text>I don't find the repl very user friendly myself. I would recommend following a tutorial with something like &lt;http://ellie-app.com|ellie-app.com&gt;</text>
  </message>
  <message>
    <ts>2017-07-27T12:48:03.332765</ts>
    <user>U6FM5KWTZ</user>
    <text>thanks guys!</text>
  </message>
  <message>
    <ts>2017-07-27T12:54:57.560816</ts>
    <user>U635238TG</user>
    <text>one thing i've kind of found the repl useful for is basically going about this in reverse. so when exploring a new thing like String.map you can do something like `import String` and then `String.map` and the Repl tells you it's going to expect this: `&amp;lt;function&amp;gt; : (Char -&amp;gt; Char) -&amp;gt; String -&amp;gt; String`</text>
  </message>
  <message>
    <ts>2017-07-27T12:55:36.581850</ts>
    <user>U635238TG</user>
    <text>of course the docs will tell you the same thing but i find typing it into the repl sometimes helps my brain wrap around the concept a little better</text>
  </message>
  <message>
    <ts>2017-07-27T12:57:05.630791</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U6D3ERLA1&gt; if you are dealing with grids I've found `List (List a)` to be a little clunky to work with. I tend to prefer `Dict (Int,Int)` a instead. Easier to grab vertical neighbours if you need to.</text>
  </message>
  <message>
    <ts>2017-07-27T13:06:09.935927</ts>
    <user>U66RFDZ8F</user>
    <text>&lt;@U23SA861Y&gt;, I'm about to embark on a project and I was going to use nested lists, can you explain the benefits of the dictionary method better? </text>
  </message>
  <message>
    <ts>2017-07-27T13:06:50.958318</ts>
    <user>U23SA861Y</user>
    <text>it maps a bit better, with the List of Lists to form a grid you have to constantly be double unwrapping</text>
  </message>
  <message>
    <ts>2017-07-27T13:07:07.966947</ts>
    <user>U6D3ERLA1</user>
    <text>I was actually using Array so I could grab indexes `Array (Array Int)`</text>
  </message>
  <message>
    <ts>2017-07-27T13:07:20.974076</ts>
    <user>U6D3ERLA1</user>
    <text>Haven't messed with Dicts yet</text>
  </message>
  <message>
    <ts>2017-07-27T13:07:31.980065</ts>
    <user>U23SA861Y</user>
    <text>with a `Dict (Int,Int) a` you can reach in and grab up down, left or right</text>
  </message>
  <message>
    <ts>2017-07-27T13:07:37.983300</ts>
    <user>U23SA861Y</user>
    <text>the Dict can also be sparse</text>
  </message>
  <message>
    <ts>2017-07-27T13:08:15.003785</ts>
    <user>U66RFDZ8F</user>
    <text>It seems like a great solution too</text>
  </message>
  <message>
    <ts>2017-07-27T13:08:42.018369</ts>
    <user>U23SA861Y</user>
    <text>Thats fine, the current impl of Array has some bugs there is a replacement for it available</text>
  </message>
  <message>
    <ts>2017-07-27T13:09:43.050564</ts>
    <user>U66RFDZ8F</user>
    <text>I'm not able to wrap my head around your explanation of the benefits of dict</text>
  </message>
  <message>
    <ts>2017-07-27T13:10:04.062608</ts>
    <user>U66RFDZ8F</user>
    <text>Aside the sparse nature </text>
  </message>
  <message>
    <ts>2017-07-27T13:10:27.075356</ts>
    <user>U23SA861Y</user>
    <text>well iterating over the grid is code you don't have to write, its alread provided for you in the dict</text>
  </message>
  <message>
    <ts>2017-07-27T13:10:49.086900</ts>
    <user>U23SA861Y</user>
    <text>likewise for lookups</text>
  </message>
  <message>
    <ts>2017-07-27T13:11:40.114237</ts>
    <user>U66RFDZ8F</user>
    <text>I don't see how it would be much better than `arr[0][`</text>
  </message>
  <message>
    <ts>2017-07-27T13:11:40.114378</ts>
    <user>U66RFDZ8F</user>
    <text>Any code? I haven't used dicts yet</text>
  </message>
  <message>
    <ts>2017-07-27T13:11:41.114687</ts>
    <user>U66RFDZ8F</user>
    <text>Do that's possibly my problem </text>
  </message>
  <message>
    <ts>2017-07-27T13:11:41.114856</ts>
    <user>U0JFGGZS6</user>
    <text>you might also want to look at `elm-flat-matrix`</text>
  </message>
  <message>
    <ts>2017-07-27T13:11:46.117169</ts>
    <user>U23SA861Y</user>
    <text>if you making a table I would proabably use a `List recordtype` or `List (Dict keyval field)` instead because the traversal symantics are a bit different</text>
  </message>
  <message>
    <ts>2017-07-27T13:11:46.117172</ts>
    <user>U0JFGGZS6</user>
    <text>&lt;http://package.elm-lang.org/packages/eeue56/elm-flat-matrix/latest&gt;</text>
  </message>
  <message>
    <ts>2017-07-27T13:12:49.150768</ts>
    <user>U6D3ERLA1</user>
    <text>:mind blown:</text>
  </message>
  <message>
    <ts>2017-07-27T13:13:40.177872</ts>
    <user>U23SA861Y</user>
    <text>unwrapping the into a flat list works as well (which is what flat-matrix does)</text>
  </message>
  <message>
    <ts>2017-07-27T13:15:38.240141</ts>
    <user>U6D3ERLA1</user>
    <text>and mergeLeft mergeRight</text>
  </message>
  <message>
    <ts>2017-07-27T13:16:14.260479</ts>
    <user>U6D3ERLA1</user>
    <text>`|&amp;gt; Matrix.merge matrix` `&amp;lt;| Matrix.merge matrix`</text>
  </message>
  <message>
    <ts>2017-07-27T13:17:08.288675</ts>
    <user>U23SA861Y</user>
    <text>if you need matricies, you need matricies but for things like look ups on a game grid I like to keep it simple</text>
  </message>
  <message>
    <ts>2017-07-27T13:17:31.301060</ts>
    <user>U23SA861Y</user>
    <text>dependencies and imports have a cost and you really need to consider if pulling that package is worth it</text>
  </message>
  <message>
    <ts>2017-07-27T13:18:18.327073</ts>
    <user>U6D3ERLA1</user>
    <text>An unrelated question what does `!` represent in elm</text>
  </message>
  <message>
    <ts>2017-07-27T13:18:29.332756</ts>
    <user>U23SA861Y</user>
    <text>its defined in Platform.Cmd</text>
  </message>
  <message>
    <ts>2017-07-27T13:18:52.344714</ts>
    <user>U6D3ERLA1</user>
    <text>and `|`</text>
  </message>
  <message>
    <ts>2017-07-27T13:18:56.346854</ts>
    <user>U23SA861Y</user>
    <text>`(!) mdl cmds = (mdl, Cmd.batch cmds)`</text>
  </message>
  <message>
    <ts>2017-07-27T13:19:14.356769</ts>
    <user>U23SA861Y</user>
    <text>`|` is used for union type definitions</text>
  </message>
  <message>
    <ts>2017-07-27T13:19:29.365034</ts>
    <user>U6D3ERLA1</user>
    <text>I'm looking at the model updating code here &lt;https://github.com/evancz/elm-todomvc/blob/master/Todo.elm&gt;</text>
  </message>
  <message>
    <ts>2017-07-27T13:19:54.378332</ts>
    <user>U6D3ERLA1</user>
    <text>looks like they are returning updated / filtered state</text>
  </message>
  <message>
    <ts>2017-07-27T13:20:24.394000</ts>
    <user>U23SA861Y</user>
    <text>oh sry yes it's also used in the record update syntax</text>
  </message>
  <message>
    <ts>2017-07-27T13:20:44.404818</ts>
    <user>U6D3ERLA1</user>
    <text>```
        ChangeVisibility visibility -&amp;gt;
            { model | visibility = visibility }
                ! []
```</text>
  </message>
  <message>
    <ts>2017-07-27T13:20:44.405009</ts>
    <user>U23SA861Y</user>
    <text>it allows you to change one or more fields in a record while keeping all others the same</text>
  </message>
  <message>
    <ts>2017-07-27T13:20:56.411424</ts>
    <user>U6D3ERLA1</user>
    <text>Must have missed this in the syntax docs</text>
  </message>
  <message>
    <ts>2017-07-27T13:21:35.432424</ts>
    <user>U6D3ERLA1</user>
    <text>Can someone explain the above snippet?</text>
  </message>
  <message>
    <ts>2017-07-27T13:22:05.448810</ts>
    <user>U23SA861Y</user>
    <text>it says update the field called visibility in model and then return that from update without any commands</text>
  </message>
  <message>
    <ts>2017-07-27T13:24:45.536337</ts>
    <user>U23SA861Y</user>
    <text>&lt;http://elm-lang.org/docs/syntax#records&gt;</text>
  </message>
  <message>
    <ts>2017-07-27T13:24:52.540464</ts>
    <user>U6D3ERLA1</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-27T13:24:53.540590</ts>
    <user>U23SA861Y</user>
    <text>here is the update syntax in action</text>
  </message>
  <message>
    <ts>2017-07-27T13:34:24.856004</ts>
    <user>U0JFGGZS6</user>
    <text>fyi `elm-flat-matrix` doesn't add much code, and potentially saves a lot in speed &amp;amp; memory usage if you have an arbitrary number of rows/cols.</text>
  </message>
  <message>
    <ts>2017-07-27T13:35:37.895663</ts>
    <user>U0JFGGZS6</user>
    <text>if you have a small fixed number of rows/cols, not much difference from `Array (Array a)`</text>
  </message>
  <message>
    <ts>2017-07-27T13:36:52.936230</ts>
    <user>U6D3ERLA1</user>
    <text>Elm coding standards are pretty aggressive about whitespace</text>
  </message>
  <message>
    <ts>2017-07-27T13:37:23.953280</ts>
    <user>U6D3ERLA1</user>
    <text>Looks sharp -- lots of scrolling</text>
  </message>
  <message>
    <ts>2017-07-27T13:39:25.019547</ts>
    <user>U2J1FUQTZ</user>
    <text>Is there a package that formats Int with a number of leading zeros (like excel masks) ?</text>
  </message>
  <message>
    <ts>2017-07-27T13:46:00.241905</ts>
    <user>U0JFXEUCT</user>
    <text>that would probably be a pretty easy function to write</text>
  </message>
  <message>
    <ts>2017-07-27T13:49:57.377025</ts>
    <user>U0JFXEUCT</user>
    <text>&lt;@U2J1FUQTZ&gt; ^^</text>
  </message>
  <message>
    <ts>2017-07-27T13:54:02.518059</ts>
    <user>U66RFDZ8F</user>
    <text>&lt;@U23SA861Y&gt; I get it now. you mean a list of dicts!</text>
  </message>
  <message>
    <ts>2017-07-27T13:54:13.523989</ts>
    <user>U66RFDZ8F</user>
    <text>I thought you meant a simple dict</text>
  </message>
  <message>
    <ts>2017-07-27T13:54:18.527139</ts>
    <user>U66RFDZ8F</user>
    <text>now it makes sense</text>
  </message>
  <message>
    <ts>2017-07-27T13:54:25.530916</ts>
    <user>U23SA861Y</user>
    <text>no</text>
  </message>
  <message>
    <ts>2017-07-27T13:54:30.533481</ts>
    <user>U23SA861Y</user>
    <text>I meant a simple dict</text>
  </message>
  <message>
    <ts>2017-07-27T13:54:35.536834</ts>
    <user>U23SA861Y</user>
    <text>where the key is the position</text>
  </message>
  <message>
    <ts>2017-07-27T13:54:54.546854</ts>
    <user>U23SA861Y</user>
    <text>if you want more of a table layout a list of dicts might make sense</text>
  </message>
  <message>
    <ts>2017-07-27T13:55:12.557861</ts>
    <user>U23SA861Y</user>
    <text>but if you want more of a grid then a simple dict where position is the key works well</text>
  </message>
  <message>
    <ts>2017-07-27T14:04:03.870403</ts>
    <user>U6D3ERLA1</user>
    <text>lol so how do I get a render on model update?</text>
  </message>
  <message>
    <ts>2017-07-27T14:10:38.087804</ts>
    <user>U6D3ERLA1</user>
    <text>I guess I need to put all my stuff into `Html.program` which does will magically update the app when the model is updated?</text>
  </message>
  <message>
    <ts>2017-07-27T14:11:18.110273</ts>
    <user>U23SA861Y</user>
    <text>it's not magical, but yes one of the `Html.program` or `Svg.program` glues it all together</text>
  </message>
  <message>
    <ts>2017-07-27T14:29:56.736290</ts>
    <user>U6D3ERLA1</user>
    <text>Holy snap</text>
  </message>
  <message>
    <ts>2017-07-27T14:30:01.739230</ts>
    <user>U6D3ERLA1</user>
    <text>side effects!</text>
  </message>
  <message>
    <ts>2017-07-27T14:30:39.761543</ts>
    <user>U6D3ERLA1</user>
    <text>Thanks for all the help yinz* I think I'm going to keep bothering you bt I think I can build an application now</text>
  </message>
  <message>
    <ts>2017-07-27T15:59:46.575263</ts>
    <user>U0CQ254F5</user>
    <text>im building a survey where some questions hold conditional logic…if user answers yes, they get shown another related questions, if they answer a certain way, they get rejected…</text>
  </message>
  <message>
    <ts>2017-07-27T16:00:04.584633</ts>
    <user>U0CQ254F5</user>
    <text>im looking at &lt;https://github.com/evancz/elm-sortable-table/blob/master/src/Table.elm&gt; for inpiration</text>
  </message>
  <message>
    <ts>2017-07-27T16:00:41.605482</ts>
    <user>U0CQ254F5</user>
    <text>first question, how would i model that `Question` type that may or may not have additional questions grouped with it?</text>
  </message>
  <message>
    <ts>2017-07-27T16:01:10.620574</ts>
    <user>U0CQ254F5</user>
    <text>`type alias Question = {...}` and `type alias QuestionGroup = List Question`</text>
  </message>
  <message>
    <ts>2017-07-27T16:02:09.650944</ts>
    <user>U0CQ254F5</user>
    <text>or something like `type Question = Singular | Grouped Question`</text>
  </message>
  <message>
    <ts>2017-07-27T16:04:11.714080</ts>
    <user>U0CQ254F5</user>
    <text>after modeling the main `Question` type, I'm stumbling at how I can maintain state within each `QuestionGroup` or if I should keep that out of the module and into global `Model`</text>
  </message>
  <message>
    <ts>2017-07-27T16:04:53.735087</ts>
    <user>U0CQ254F5</user>
    <text>I feel like componentization might fit in this scenario, although i do try to avoid it</text>
  </message>
  <message>
    <ts>2017-07-27T16:16:23.081601</ts>
    <user>U3SQ42JJW</user>
    <text>Hi ereryone. Maybe a dump question, but is it possible to have a union type like this
```
type Answer = String | Int
```
… and pattern match these… so I can figure out if the answer is a string or an integer?</text>
  </message>
  <message>
    <ts>2017-07-27T16:18:04.131802</ts>
    <user>U2BCXMGKW</user>
    <text>&lt;@U3SQ42JJW&gt; you need type constructors there: `type Answer = StringAnswer String | IntAnswer Int`</text>
  </message>
  <message>
    <ts>2017-07-27T16:19:02.161097</ts>
    <user>U2BCXMGKW</user>
    <text>then you pattern match based on those:
```
case answer of
  StringAnswer string -&amp;gt; ...
  IntAnswer integer -&amp;gt; ...
```</text>
  </message>
  <message>
    <ts>2017-07-27T16:19:09.164207</ts>
    <user>U3SQ42JJW</user>
    <text>&lt;@U2BCXMGKW&gt; … thanks. Yes in deed - seems absolutely clear now to me… was a dump question;-)</text>
  </message>
  <message>
    <ts>2017-07-27T16:19:12.165743</ts>
    <user>U3SQ42JJW</user>
    <text>:smile:</text>
  </message>
  <message>
    <ts>2017-07-27T16:19:36.178079</ts>
    <user>U2BCXMGKW</user>
    <text>&lt;@U0CQ254F5&gt; what do you exactly want to model?</text>
  </message>
  <message>
    <ts>2017-07-27T16:20:16.197916</ts>
    <user>U0CQ254F5</user>
    <text>its kind of a strange concept…but essentially a `SingleQuestion` or a `GroupedQuestion`</text>
  </message>
  <message>
    <ts>2017-07-27T16:20:28.204105</ts>
    <user>U0CQ254F5</user>
    <text>i took an initial pass at it, but it's a mess</text>
  </message>
  <message>
    <ts>2017-07-27T16:21:03.222186</ts>
    <user>U0CQ254F5</user>
    <text>i was hoping to use the `Config data msg` pattern in the elm-sortable-table repo</text>
  </message>
  <message>
    <ts>2017-07-27T16:21:36.238635</ts>
    <user>U2BCXMGKW</user>
    <text>do you want to have a type that might have a singular question or a question with some list of other questions? maybe something like:

```type QuestionAndRelated = Single Question | Grouped Question (List Question)```</text>
  </message>
  <message>
    <ts>2017-07-27T16:21:42.241836</ts>
    <user>U3SQ42JJW</user>
    <text>haha :joy: seems like everyone is building surveys… me too…</text>
  </message>
  <message>
    <ts>2017-07-27T16:22:45.273335</ts>
    <user>U2BCXMGKW</user>
    <text>I don't like the name of the type, but you get the idea</text>
  </message>
  <message>
    <ts>2017-07-27T16:23:15.288314</ts>
    <user>U0CQ254F5</user>
    <text>and `Question` is just a type alias of a whatever record I need ?</text>
  </message>
  <message>
    <ts>2017-07-27T16:23:24.293338</ts>
    <user>U2BCXMGKW</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-27T16:24:50.336912</ts>
    <user>U2BCXMGKW</user>
    <text>but you can have variations, like:

`type Question = Single SingleQuestion | Grouped GroupedQuestion`

that way you can define different records for each type, if you need it</text>
  </message>
  <message>
    <ts>2017-07-27T16:24:54.338674</ts>
    <user>U2BCXMGKW</user>
    <text>depends on your use case</text>
  </message>
  <message>
    <ts>2017-07-27T16:26:23.385010</ts>
    <user>U0CQ254F5</user>
    <text>yeah, i think i like that</text>
  </message>
  <message>
    <ts>2017-07-27T16:26:43.395658</ts>
    <user>U0CQ254F5</user>
    <text>thanks, i'll roll with that</text>
  </message>
  <message>
    <ts>2017-07-27T16:49:29.073063</ts>
    <user>U3LUC6SNS</user>
    <text>I am messing around with file uploading.  At this point I can choose an image and display it in the Elm app I am working on.  Looking at the javascript console, I see that the image is represented by a base64-encoded string.  This is also the format that the image is represented in an Elm value.  A couple of questions. (1) is this the format that should be uploaded to Amazon S3 if I want to store images there? (2) I see that images/files begin like this (for-example): 
```
"data:application/pdf;base64,JVBERi0xLjYKJe ... "
```
Is splitting the string at ";" the best way to retrieve the mime type? (3) In reading up on this, I've come across "Blobs".  What is their relation to base64 encoded strings?</text>
  </message>
  <message>
    <ts>2017-07-27T17:00:39.404534</ts>
    <user>U4JT89FGB</user>
    <text>base64 is typically used when you don't want to store the file as binary. instead, you can store it as a string in a database table</text>
  </message>
  <message>
    <ts>2017-07-27T17:01:01.416050</ts>
    <user>U4JT89FGB</user>
    <text>elm doesn't currently handle binary, so it's all ports if you want to do it that way now</text>
  </message>
  <message>
    <ts>2017-07-27T17:02:33.461195</ts>
    <user>U4JT89FGB</user>
    <text>if you want elm to handle them (keep base64) but also upload them as binary to S3, you'll need to convert</text>
  </message>
  <message>
    <ts>2017-07-27T17:04:06.506940</ts>
    <user>U3LUC6SNS</user>
    <text>How do I convert to binary?  Is that an expensive process?</text>
  </message>
  <message>
    <ts>2017-07-27T17:04:26.516127</ts>
    <user>U4JT89FGB</user>
    <text>based on the file size, but not really, no. depends on the language you're using as far as how to do it</text>
  </message>
  <message>
    <ts>2017-07-27T17:04:57.530732</ts>
    <user>U4JT89FGB</user>
    <text>ruby has `Base64.decode64`</text>
  </message>
  <message>
    <ts>2017-07-27T17:06:30.574843</ts>
    <user>U4JT89FGB</user>
    <text>you could do it in javascript as well, but then you're back to uploading using multipart/form-data</text>
  </message>
  <message>
    <ts>2017-07-27T17:10:24.681158</ts>
    <user>U3LUC6SNS</user>
    <text>At the moment I've been able to get parts of file upload to S3 in place. Here is what I have now: (1) can get credentials for uploading to S3 from my server. (2) with the aid of ports I can choose an image file from disk and create an Elm record {filename: FILENAME, content: BASE64CONTENT}, ---  so I am missing pieces.</text>
  </message>
  <message>
    <ts>2017-07-27T17:11:54.722280</ts>
    <user>U4JT89FGB</user>
    <text>are you uploading directly from the client to s3?</text>
  </message>
  <message>
    <ts>2017-07-27T17:14:58.802235</ts>
    <user>U3LUC6SNS</user>
    <text>That is what I want to do.</text>
  </message>
  <message>
    <ts>2017-07-27T17:15:14.809251</ts>
    <user>U3LUC6SNS</user>
    <text>I've looked at your code also but haven't mastered it.</text>
  </message>
  <message>
    <ts>2017-07-27T17:19:47.929993</ts>
    <user>U4JT89FGB</user>
    <text>okay, i think you'll need a port that can take that datauri, convert it to a blob (`atob` and the like,) create FormData like my example and add that blob as the `file`. you probably will need to configure S3 for CORS but maybe you've already done that part. But this is as far as my knowledge goes as I've never gone directly to S3</text>
  </message>
  <message>
    <ts>2017-07-27T17:21:00.961848</ts>
    <user>U3LUC6SNS</user>
    <text>Thanks - I will give that a try.</text>
  </message>
  <message>
    <ts>2017-07-27T17:30:19.204332</ts>
    <user>U3SQ42JJW</user>
    <text>Hi, does anyone know what the compiler wants to tell me with that message?: 
&amp;gt; elm-make: type applications should start with a type atom</text>
  </message>
  <message>
    <ts>2017-07-27T17:32:48.266881</ts>
    <user>U0EUHKVGB</user>
    <text>That's a tricky one.</text>
  </message>
  <message>
    <ts>2017-07-27T17:32:57.270484</ts>
    <user>U0EUHKVGB</user>
    <text>You're going to need to share the code that gave you that.</text>
  </message>
  <message>
    <ts>2017-07-27T17:33:09.275350</ts>
    <user>U0EUHKVGB</user>
    <text>You likely have something weird like this: `type alias Banana = List`</text>
  </message>
  <message>
    <ts>2017-07-27T17:33:14.277690</ts>
    <user>U0EUHKVGB</user>
    <text>or `List -&amp;gt; Int -&amp;gt; Int`</text>
  </message>
  <message>
    <ts>2017-07-27T17:33:27.283183</ts>
    <user>U0EUHKVGB</user>
    <text>notice how `List` is missing the element type</text>
  </message>
  <message>
    <ts>2017-07-27T17:36:21.353073</ts>
    <user>U3SQ42JJW</user>
    <text>probably makes sense to share a gist…. Code sharing… &lt;https://gist.github.com/marschro/8be8a87b77028c109fd56d46eb5d611c&gt;</text>
  </message>
  <message>
    <ts>2017-07-27T17:37:00.368963</ts>
    <user>U3SQ42JJW</user>
    <text>probably not… thats too strange code and too much in development…</text>
  </message>
  <message>
    <ts>2017-07-27T17:38:03.394039</ts>
    <user>U3SQ42JJW</user>
    <text>But what I want basically is: I use in the view the onInput, which takes a String. The type it actually should take is a AnswerType, that could be a String…</text>
  </message>
  <message>
    <ts>2017-07-27T17:38:08.396088</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U3SQ42JJW&gt; are you using a linter?</text>
  </message>
  <message>
    <ts>2017-07-27T17:38:18.399996</ts>
    <user>U3SQ42JJW</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-27T17:38:50.412513</ts>
    <user>U0EUHKVGB</user>
    <text>&lt;https://gist.github.com/marschro/8be8a87b77028c109fd56d46eb5d611c#file-sondage-elm-L437&gt;</text>
  </message>
  <message>
    <ts>2017-07-27T17:39:00.416435</ts>
    <user>U0EUHKVGB</user>
    <text>`AnswerType` does not take a type argument</text>
  </message>
  <message>
    <ts>2017-07-27T17:40:06.442458</ts>
    <user>U2SR9DL7Q</user>
    <text>... I was about to say just work backwards from the last thing you typed up till your last save point, and check for accuracy.</text>
  </message>
  <message>
    <ts>2017-07-27T17:40:57.463057</ts>
    <user>U3SQ42JJW</user>
    <text>right… that makes no sense</text>
  </message>
  <message>
    <ts>2017-07-27T17:41:07.467105</ts>
    <user>U3SQ42JJW</user>
    <text>k…</text>
  </message>
  <message>
    <ts>2017-07-27T17:42:10.491903</ts>
    <user>U3SQ42JJW</user>
    <text>&lt;@U2SR9DL7Q&gt; will do so… thats too much a mess… i will clean up first… and will return when I have a specific problem… Thanks :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-27T17:43:34.524927</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U3SQ42JJW&gt; You're good. I think we've all hit that problem at least once. It's the only time the compiler wont say anything helpful.</text>
  </message>
  <message>
    <ts>2017-07-27T17:44:09.538527</ts>
    <user>U5WS7CJLV</user>
    <text>line 437 is your problem?</text>
  </message>
  <message>
    <ts>2017-07-27T17:45:19.566137</ts>
    <user>U5WS7CJLV</user>
    <text>looks like the intent is for second argument to be a function that takes an `AnswerType` and returns a `msg`</text>
  </message>
  <message>
    <ts>2017-07-27T17:45:47.576642</ts>
    <user>U5WS7CJLV</user>
    <text>but the name of that second argument is "msg", so that's kinda mysterious</text>
  </message>
  <message>
    <ts>2017-07-27T18:06:35.050864</ts>
    <user>U3SQ42JJW</user>
    <text>My problem seems to be that I have no idea how I can pass the appropriate value to the onInput function in my textAreaView function.</text>
  </message>
  <message>
    <ts>2017-07-27T18:08:17.086601</ts>
    <user>U3SQ42JJW</user>
    <text>I should pass a function like (String -&amp;gt; Msg). But the Msg I have does not take a String, but a AnswerType, that takes a String… I thought, that could be curried, but that does not work out…</text>
  </message>
  <message>
    <ts>2017-07-27T18:15:42.235298</ts>
    <user>U236M9FH9</user>
    <text>&lt;@U3SQ42JJW&gt; If `AnswerType : String -&amp;gt; SomeType` &amp;amp; `AnswerMessage : SomeType -&amp;gt; Msg` then `(AnswerMessage &amp;lt;&amp;lt; AnswerType) : String -&amp;gt; Msg`</text>
  </message>
  <message>
    <ts>2017-07-27T18:17:01.260442</ts>
    <user>U236M9FH9</user>
    <text>Oh, looked at the gist you posted, probably want something like `Answer catalog &amp;lt;&amp;lt; StringAnswer`</text>
  </message>
  <message>
    <ts>2017-07-27T18:18:34.289805</ts>
    <user>U3SQ42JJW</user>
    <text>WTF !! &lt;@U236M9FH9&gt; that did it !</text>
  </message>
  <message>
    <ts>2017-07-27T18:19:16.302365</ts>
    <user>U3SQ42JJW</user>
    <text>what is this `&amp;lt;&amp;lt;`… a magic operator? (Sorry still learning functional stuff)</text>
  </message>
  <message>
    <ts>2017-07-27T18:20:01.316399</ts>
    <user>U236M9FH9</user>
    <text>function composition. essentially `foo &amp;lt;&amp;lt; bar = \x -&amp;gt; foo (bar x)`</text>
  </message>
  <message>
    <ts>2017-07-27T18:20:22.323376</ts>
    <user>U236M9FH9</user>
    <text>And `foo &amp;gt;&amp;gt; bar = \x -&amp;gt; bar (foo x)`</text>
  </message>
  <message>
    <ts>2017-07-27T18:21:04.336653</ts>
    <user>U236M9FH9</user>
    <text>Its saying, make a function that passes a value to bar, then pass the result of that to foo.</text>
  </message>
  <message>
    <ts>2017-07-27T18:21:16.341136</ts>
    <user>U3SQ42JJW</user>
    <text>I see, I have to learn.. good to have you friendly Helpers… :smile:</text>
  </message>
  <message>
    <ts>2017-07-27T18:21:22.342861</ts>
    <user>U3SQ42JJW</user>
    <text>thanks</text>
  </message>
  <message>
    <ts>2017-07-27T18:39:54.678505</ts>
    <user>U6FN5S74P</user>
    <text>For what it's worth, I've found that Once you know`|&amp;gt;` you can more or less ignore the other functional operators if you don't mind writing a little boiler plate (and taking a hit to your functional cred).</text>
  </message>
  <message>
    <ts>2017-07-27T18:41:09.700075</ts>
    <user>U23SA861Y</user>
    <text>tbh if writing clear code that doesn't use a bunch of custom operators means I need to take a hit on my functional cred, I'm ok with that.</text>
  </message>
  <message>
    <ts>2017-07-27T18:47:49.813592</ts>
    <user>U2SR9DL7Q</user>
    <text>I remember a common thing when learning haskell was looking up answers to questions from tutorials, and someone would an answer using point free programming?, so of course they would be asked to break it down later. This happened all the time, every time.</text>
  </message>
  <message>
    <ts>2017-07-27T18:48:40.828106</ts>
    <user>U23SA861Y</user>
    <text>or they would use a bunch of `&amp;lt;$&amp;gt;` or `&amp;lt;()&amp;gt;` which is impossible to google of course</text>
  </message>
  <message>
    <ts>2017-07-27T18:54:11.922471</ts>
    <user>U2SR9DL7Q</user>
    <text>that point stuff just seems like it would only be useful if I was tweeting my code to the compiler, or for academic papers.</text>
  </message>
  <message>
    <ts>2017-07-27T18:56:17.958566</ts>
    <user>U23SA861Y</user>
    <text>:laughing: tweeting your code, I'll have to remember that one</text>
  </message>
  <message>
    <ts>2017-07-27T18:56:31.962344</ts>
    <user>U6FN5S74P</user>
    <text>I've found some mundane uses for point-free stuff (mostly building non-trivial predicate functions for maps and filters), but they don't usually feel "cool" enough to interest folks during tutorials.</text>
  </message>
  <message>
    <ts>2017-07-27T19:02:07.059717</ts>
    <user>U236M9FH9</user>
    <text>I do point-free/eta-reductions for simple stuff, seems cleaner &amp;amp; I have to hold less information in my head about the code I'm reading</text>
  </message>
  <message>
    <ts>2017-07-27T19:02:47.070484</ts>
    <user>U23SA861Y</user>
    <text>I would argue you need to hold more because you have to keep in the back of your mind theres a parameter going to be bolted on to all of this</text>
  </message>
  <message>
    <ts>2017-07-27T19:03:47.086716</ts>
    <user>U236M9FH9</user>
    <text>Right but I was thinking less because now that parameter can't show up anywhere else :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-27T19:04:10.092663</ts>
    <user>U2SR9DL7Q</user>
    <text>`p = ((.) f) . g` This takes 3 params...</text>
  </message>
  <message>
    <ts>2017-07-27T19:04:25.096645</ts>
    <user>U2SR9DL7Q</user>
    <text>I guess it's obvious with practice</text>
  </message>
  <message>
    <ts>2017-07-27T19:05:21.111163</ts>
    <user>U236M9FH9</user>
    <text>That's not simple :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-27T19:06:56.135207</ts>
    <user>U23SA861Y</user>
    <text>I don't actually know `(.)`</text>
  </message>
  <message>
    <ts>2017-07-27T19:07:36.145032</ts>
    <user>U236M9FH9</user>
    <text>Meant more like `myFunc someArg = aFunction $ someFunction someArg` -&amp;gt; `myFunc = aFunction . someFunction`</text>
  </message>
  <message>
    <ts>2017-07-27T19:07:49.148523</ts>
    <user>U236M9FH9</user>
    <text>`(.)` is `&amp;lt;&amp;lt;`</text>
  </message>
  <message>
    <ts>2017-07-27T19:08:08.153443</ts>
    <user>U23SA861Y</user>
    <text>ahh composition</text>
  </message>
  <message>
    <ts>2017-07-27T19:09:21.171537</ts>
    <user>U23SA861Y</user>
    <text>I would have to sketch that function in out into long form just to work out what it's doing.</text>
  </message>
  <message>
    <ts>2017-07-27T19:12:59.228793</ts>
    <user>U2SR9DL7Q</user>
    <text>i took that example from &lt;https://en.wikipedia.org/wiki/Tacit_programming&gt;</text>
  </message>
  <message>
    <ts>2017-07-27T19:29:29.481506</ts>
    <user>U6EAT2Z37</user>
    <text>I think "point free" is a lot of the time more clear. You're literally defining what the value of the function *is*.</text>
  </message>
  <message>
    <ts>2017-07-27T19:30:02.489831</ts>
    <user>U6EAT2Z37</user>
    <text>`increment = (+) 1` for example.</text>
  </message>
  <message>
    <ts>2017-07-27T19:30:47.502108</ts>
    <user>U6EAT2Z37</user>
    <text>but like you point out above, sometimes it just makes no sense (usually when you're doing things with more than one argument)</text>
  </message>
  <message>
    <ts>2017-07-27T19:36:25.587376</ts>
    <user>U23SA861Y</user>
    <text>i don't necessarily think `increment = (+) 1` is more clear than `increment x = x+1`</text>
  </message>
  <message>
    <ts>2017-07-28T02:43:37.167838</ts>
    <user>U6B7NBTLZ</user>
    <text>hello</text>
  </message>
  <message>
    <ts>2017-07-28T02:43:52.170872</ts>
    <user>U6B7NBTLZ</user>
    <text>i saw functions with 3 parameters</text>
  </message>
  <message>
    <ts>2017-07-28T02:44:01.172567</ts>
    <user>U6B7NBTLZ</user>
    <text>but called with only 2?</text>
  </message>
  <message>
    <ts>2017-07-28T02:44:05.173451</ts>
    <user>U6B7NBTLZ</user>
    <text>how is that posible</text>
  </message>
  <message>
    <ts>2017-07-28T02:44:06.173585</ts>
    <user>U6B7NBTLZ</user>
    <text>?</text>
  </message>
  <message>
    <ts>2017-07-28T02:45:30.190689</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U6B7NBTLZ&gt; all function in Elm are ‘curried', they all only take one parameter and return a function for the next parameter to be passed to.</text>
  </message>
  <message>
    <ts>2017-07-28T02:46:18.200748</ts>
    <user>U6B7NBTLZ</user>
    <text>Can you help me with a example?</text>
  </message>
  <message>
    <ts>2017-07-28T02:47:38.217090</ts>
    <user>U153UK3FA</user>
    <text>So a function with the type `Int-&amp;gt;Int-&amp;gt;Int` is a function takes an `Int` and returns a `Int -&amp;gt; Int`</text>
  </message>
  <message>
    <ts>2017-07-28T02:48:40.229962</ts>
    <user>U153UK3FA</user>
    <text>You can take the returned function and pass another `Int` and it will return the final `Int` value.</text>
  </message>
  <message>
    <ts>2017-07-28T02:52:16.276888</ts>
    <user>U153UK3FA</user>
    <text>If you call that function `add: Int -&amp;gt; Int -&amp;gt; Int`, when you're calling it like `add 1 2`, it's actually being executed as `(add 1) 2`</text>
  </message>
  <message>
    <ts>2017-07-28T02:53:05.287949</ts>
    <user>U153UK3FA</user>
    <text>`(add 1)` is returning a function `Int -&amp;gt; Int` that you are passing the `2` too.</text>
  </message>
  <message>
    <ts>2017-07-28T03:27:23.788956</ts>
    <user>U6B7NBTLZ</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-28T03:27:35.791669</ts>
    <user>U6B7NBTLZ</user>
    <text>a little bit clearer</text>
  </message>
  <message>
    <ts>2017-07-28T03:28:02.798760</ts>
    <user>U6B7NBTLZ</user>
    <text>cand somebody help me with a link where i can read about RestApi, Http</text>
  </message>
  <message>
    <ts>2017-07-28T03:28:02.798871</ts>
    <user>U6B7NBTLZ</user>
    <text>?</text>
  </message>
  <message>
    <ts>2017-07-28T03:29:59.828630</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U6B7NBTLZ&gt; I recommend you read the Elm guide. &lt;https://guide.elm-lang.org/&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T03:30:31.837928</ts>
    <user>U153UK3FA</user>
    <text>there is a section that provides information about doing Http requests &lt;https://guide.elm-lang.org/architecture/effects/http.html&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T03:31:22.851411</ts>
    <user>U153UK3FA</user>
    <text>but it will be nonsense if you don't yet have a good basic knowledge of Elm</text>
  </message>
  <message>
    <ts>2017-07-28T05:11:26.730434</ts>
    <user>U6DQCTZT2</user>
    <text>Is there a way to transform a UrlParser to a string without redefining the path like this? &lt;https://github.com/rtfeldman/elm-spa-example/blob/master/src/Route.elm#L66&gt;

It feels quite error prone to accidentally introduce a missmatch.</text>
  </message>
  <message>
    <ts>2017-07-28T05:36:04.231005</ts>
    <user>U3SJEDR96</user>
    <text>Not really. Parsing is a lossy transformation, though you _could_ potentially build an alternative that could do url &amp;lt;-&amp;gt; route. Though to be honest, this would easily be caught by tests. Logic errors and typos in string are always possible</text>
  </message>
  <message>
    <ts>2017-07-28T05:40:07.312283</ts>
    <user>U6DQCTZT2</user>
    <text>&lt;@U3SJEDR96&gt; thanks!</text>
  </message>
  <message>
    <ts>2017-07-28T06:30:49.249309</ts>
    <user>U5XTM8C4V</user>
    <text>hey everyone! Could you point me to the article/doc where I can see how I can subscribe on something like `Ctrl+Up`?</text>
  </message>
  <message>
    <ts>2017-07-28T06:43:49.460241</ts>
    <user>U6FRSKD54</user>
    <text>guys, seriously</text>
  </message>
  <message>
    <ts>2017-07-28T06:47:00.510041</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5XTM8C4V&gt; &lt;http://package.elm-lang.org/packages/elm-lang/keyboard/1.0.1/Keyboard&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T06:48:39.535809</ts>
    <user>U5XTM8C4V</user>
    <text>yeah, I've found it already. But it doesn't let you listen to key combinations. The only way I see there is to store what was pressed in state and then handle this list somehow. is there any better way?</text>
  </message>
  <message>
    <ts>2017-07-28T08:30:32.213063</ts>
    <user>U2AHAPQUV</user>
    <text>&lt;@U5XTM8C4V&gt; perhaps &lt;http://package.elm-lang.org/packages/scottcorgan/keyboard-combo/latest&gt; ?</text>
  </message>
  <message>
    <ts>2017-07-28T08:48:26.585914</ts>
    <user>U5XTM8C4V</user>
    <text>Was about to check, thanks)</text>
  </message>
  <message>
    <ts>2017-07-28T09:07:33.037904</ts>
    <user>U31FGNWCT</user>
    <text>Hi folks!
I need to get such JSON:
```
{ "bla" : { "blo": "blu" } }
```
Trying to compose Encode values like this:
```
 Encode.object
            [ ( "bla"
              , Encode.object [ ( "blo",  Encode.string "blu"  ) ]
              )
            ]
```
But get this error:
```
Function `withQueryParams` is expecting the argument to be:

    List ( String, String )

But it is:

    List ( String, Encode.Value )
```</text>
  </message>
  <message>
    <ts>2017-07-28T09:07:44.042276</ts>
    <user>U31FGNWCT</user>
    <text>What am I doing wrong?</text>
  </message>
  <message>
    <ts>2017-07-28T09:11:57.149363</ts>
    <user>U3SJEDR96</user>
    <text>`withQueryParams` doesn't want JSON ¯\_(ツ)_/¯</text>
  </message>
  <message>
    <ts>2017-07-28T09:12:19.158863</ts>
    <user>U6F1MNKB4</user>
    <text>Just get rid of "Econde.string"? Encode.object doesn't expect you to convert the second element of the tuple.</text>
  </message>
  <message>
    <ts>2017-07-28T09:12:30.163315</ts>
    <user>U3SJEDR96</user>
    <text>It does, acutally</text>
  </message>
  <message>
    <ts>2017-07-28T09:12:44.169341</ts>
    <user>U6F1MNKB4</user>
    <text>Oh, it's happening further up</text>
  </message>
  <message>
    <ts>2017-07-28T09:12:56.174608</ts>
    <user>U3SJEDR96</user>
    <text>`withQueryParams` I'm assuming you're using `elm-http-builder`. Now, queryparams there talk about the url, not the body</text>
  </message>
  <message>
    <ts>2017-07-28T09:13:11.180985</ts>
    <user>U3SJEDR96</user>
    <text>I'm not sure what a json object in an url would actually look like?</text>
  </message>
  <message>
    <ts>2017-07-28T09:14:09.205975</ts>
    <user>U3SJEDR96</user>
    <text>so yea, &lt;@U31FGNWCT&gt; you'll need to figure out if you want a JSON body using `withJsonBody` or query params using `withQueryParams` which needs strings as key-value pairs</text>
  </message>
  <message>
    <ts>2017-07-28T09:16:07.257358</ts>
    <user>U31FGNWCT</user>
    <text>It's legacy code. I'm doing this: 
```
|&amp;gt; withQueryParams [ ( "filter", queryParams byColumn.order ) ]
```
I guess I'll just make JSON like string.  It looks like this, btw: 
```
?filter=%7B%22bla%22:%7B%22blo%22:%22blu%22%7D%7D
```</text>
  </message>
  <message>
    <ts>2017-07-28T09:16:35.269851</ts>
    <user>U3SJEDR96</user>
    <text>Ah, so you want to encode that json object to a string :bulb:</text>
  </message>
  <message>
    <ts>2017-07-28T09:17:19.288942</ts>
    <user>U31FGNWCT</user>
    <text>Yeah</text>
  </message>
  <message>
    <ts>2017-07-28T09:17:43.299342</ts>
    <user>U3SJEDR96</user>
    <text>so basically you'd do `Json.Encode.encode 0 &amp;lt;| queryParams byColumn.order`</text>
  </message>
  <message>
    <ts>2017-07-28T09:17:57.305894</ts>
    <user>U3SJEDR96</user>
    <text>which "encodes" a json value to a string without extra spaces</text>
  </message>
  <message>
    <ts>2017-07-28T09:18:03.308030</ts>
    <user>U3SJEDR96</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Json-Encode#encode&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T09:20:01.361141</ts>
    <user>U31FGNWCT</user>
    <text>Well. &lt;@U3SJEDR96&gt; , I hope you'll find a big bag of money by the corner in the near future!</text>
  </message>
  <message>
    <ts>2017-07-28T09:20:29.373837</ts>
    <user>U31FGNWCT</user>
    <text>Thank you.:)</text>
  </message>
  <message>
    <ts>2017-07-28T09:20:54.385344</ts>
    <user>U3SJEDR96</user>
    <text>I keep hoping that'll happen :simple_smile:</text>
  </message>
  <message>
    <ts>2017-07-28T09:40:46.952575</ts>
    <user>U1C2DDDGD</user>
    <text>Where is the best place to learn about Tasks since 0.18 docs are under construction (&lt;https://guide.elm-lang.org/error_handling/task.html&gt;)?</text>
  </message>
  <message>
    <ts>2017-07-28T09:41:23.970805</ts>
    <user>U1C2DDDGD</user>
    <text>Basically I just want to change an apps state from Loading to Ready whenever two Commands succeed and Tasks seem like the answer</text>
  </message>
  <message>
    <ts>2017-07-28T09:42:35.005611</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U1C2DDDGD&gt; everything you can do with Tasks is here &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Task&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T09:43:23.029418</ts>
    <user>U153UK3FA</user>
    <text>You can't sequence two cmds, but you can sequence tasks</text>
  </message>
  <message>
    <ts>2017-07-28T09:45:08.082763</ts>
    <user>U1C2DDDGD</user>
    <text>&lt;@U153UK3FA&gt; Yeah I saw that. I'm assuming I want to use map2 (since I have two tasks and I don't care about sequence/order) so what does it look like to replace Cmd.batch with Tasks</text>
  </message>
  <message>
    <ts>2017-07-28T09:45:44.102198</ts>
    <user>U153UK3FA</user>
    <text>You can't, there isn't a way to convert Cmds to tasks</text>
  </message>
  <message>
    <ts>2017-07-28T09:46:33.127297</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U1C2DDDGD&gt; what Cmds are you trying to sequence?</text>
  </message>
  <message>
    <ts>2017-07-28T09:47:16.149282</ts>
    <user>U1C2DDDGD</user>
    <text>Two Http.send calls</text>
  </message>
  <message>
    <ts>2017-07-28T09:47:23.152351</ts>
    <user>U153UK3FA</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/http/1.0.0/Http#toTask&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T09:47:46.164216</ts>
    <user>U153UK3FA</user>
    <text>You can do http requests as tasks</text>
  </message>
  <message>
    <ts>2017-07-28T09:48:55.198628</ts>
    <user>U3SJEDR96</user>
    <text>`Task.map2 (\first second -&amp;gt; *make them into a record or whatever) firstRequest secondRequest |&amp;gt; Task.attempt MsgWhichTakesTheAppropriateResultType`</text>
  </message>
  <message>
    <ts>2017-07-28T09:53:36.344130</ts>
    <user>U1C2DDDGD</user>
    <text>I think I'm starting to understand now… and if not then I will soon with the above info</text>
  </message>
  <message>
    <ts>2017-07-28T09:53:53.353434</ts>
    <user>U1C2DDDGD</user>
    <text>Thank you &lt;@U153UK3FA&gt; and &lt;@U3SJEDR96&gt; !</text>
  </message>
  <message>
    <ts>2017-07-28T10:11:18.921107</ts>
    <user>U31FGNWCT</user>
    <text>Do you have to specify all fields in HttpBuilder even if you don't need all of them?</text>
  </message>
  <message>
    <ts>2017-07-28T10:11:58.942567</ts>
    <user>U31FGNWCT</user>
    <text>It's complaining:
```
(|&amp;gt;) is expecting the right side to be a:

    RequestBuilder () -&amp;gt; a

But the right side is:

    RequestBuilder (List row) -&amp;gt; Cmd (Tables.Msg row)
```</text>
  </message>
  <message>
    <ts>2017-07-28T10:13:40.998062</ts>
    <user>U31FGNWCT</user>
    <text>God, I feel like I'm not learning anything. I haven't made a single move without getting into 3-hour-to-solve issue.</text>
  </message>
  <message>
    <ts>2017-07-28T10:25:37.391437</ts>
    <user>U41NK9BM4</user>
    <text>I'm not familiar with HttpBuilder  :white_frowning_face:</text>
  </message>
  <message>
    <ts>2017-07-28T10:27:33.456701</ts>
    <user>U31FGNWCT</user>
    <text>Maybe you understand why it's complaining about types?</text>
  </message>
  <message>
    <ts>2017-07-28T10:28:25.486205</ts>
    <user>U31FGNWCT</user>
    <text>Why on earth it takes unit as a first param</text>
  </message>
  <message>
    <ts>2017-07-28T10:28:28.488139</ts>
    <user>U6EV3H0N7</user>
    <text>could you post the code it's complaining about &lt;@U31FGNWCT&gt; ?</text>
  </message>
  <message>
    <ts>2017-07-28T10:28:57.505042</ts>
    <user>U31FGNWCT</user>
    <text>```
getSortedList byColumn =
    HttpBuilder.get "someValidUrl"
        |&amp;gt; withQueryParams [ ( "filter", Encode.encode 0 &amp;lt;| queryParams byColumn.order ) ]
        |&amp;gt; send handleSortedList
```</text>
  </message>
  <message>
    <ts>2017-07-28T10:29:02.507419</ts>
    <user>U6EV3H0N7</user>
    <text>the type param to `RequestBuilder` looks like it's the type of the response it expects. So using `()` is just to say "I don't expect any response from this request"</text>
  </message>
  <message>
    <ts>2017-07-28T10:29:05.509579</ts>
    <user>U6EV3H0N7</user>
    <text>(I think)</text>
  </message>
  <message>
    <ts>2017-07-28T10:30:04.542991</ts>
    <user>U6EV3H0N7</user>
    <text>ah okay, so I guess the type of `handleSortedList` is `Result Error (List row) -&amp;gt; Tables.Msg row`?</text>
  </message>
  <message>
    <ts>2017-07-28T10:30:36.562926</ts>
    <user>U31FGNWCT</user>
    <text>Yeah</text>
  </message>
  <message>
    <ts>2017-07-28T10:30:38.563939</ts>
    <user>U6EV3H0N7</user>
    <text>the type error is that:
`HttpBuilder.get "someValidUrl"` has type `RequestBuilder ()`, `withQueryParams` adds query params to the request, but doesn't change the type</text>
  </message>
  <message>
    <ts>2017-07-28T10:30:51.571776</ts>
    <user>U6EV3H0N7</user>
    <text>so you're not telling the RequestBuilder what kind of response to expect</text>
  </message>
  <message>
    <ts>2017-07-28T10:31:04.579307</ts>
    <user>U6EV3H0N7</user>
    <text>so it's still the default `()`, but you want it to be `List row`</text>
  </message>
  <message>
    <ts>2017-07-28T10:31:20.588678</ts>
    <user>U6EV3H0N7</user>
    <text>So i suspect you want a `withExpect`</text>
  </message>
  <message>
    <ts>2017-07-28T10:31:49.605878</ts>
    <user>U6EV3H0N7</user>
    <text>&lt;http://package.elm-lang.org/packages/lukewestby/elm-http-builder/latest/HttpBuilder#withExpect&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T10:34:45.705721</ts>
    <user>U31FGNWCT</user>
    <text>Thank you, &lt;@U6EV3H0N7&gt; ! I'm going to write a decoder and see what I get. It's not really clear from library's description, but seems logical.</text>
  </message>
  <message>
    <ts>2017-07-28T10:36:46.773439</ts>
    <user>U6EV3H0N7</user>
    <text>you find it easier to just use elm-lang/http! I think the type errors from libraries that use lots of `|&amp;gt;` tend to be less clear (although the code is arguably prettier)</text>
  </message>
  <message>
    <ts>2017-07-28T10:45:30.069201</ts>
    <user>U6F50AX8C</user>
    <text>Hey devs. I'm working on something and I've got stuck on the following... let's say I have to do a panel with 4 steps and each step has it's own rule but can affect other steps assets (like images, text, etc).
My question are the following?

1-Do I make a main (root) panel and put each "inner part" inside modules and just make them show and hide? If so, how can I incorporate inner model inside this view (a view inside another view with whole interaction stuff)
2- I make a mix with Model (I think it's going to be enormous with all rules)

PS I want to write the "purchase panel" in elm if you want to see the link `&lt;https://loja.globalgames.com.br&gt;`</text>
  </message>
  <message>
    <ts>2017-07-28T10:49:52.220101</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U6F50AX8C&gt; i'm taking a look through that link you sent now. Not sure how to advise on your question yet.</text>
  </message>
  <message>
    <ts>2017-07-28T10:57:39.493414</ts>
    <user>U2SR9DL7Q</user>
    <text>What exactly do you mean by a "a panel with four steps"? Steps to construct the panel? Or four actions each panel can perform? If you consider a view as just some function that outputs an Html msg, then your 1st case where you describe views inside other views would seem like the rational way to go about it.</text>
  </message>
  <message>
    <ts>2017-07-28T10:58:15.513767</ts>
    <user>U6F50AX8C</user>
    <text>it's like i have to 1# select the product</text>
  </message>
  <message>
    <ts>2017-07-28T10:58:24.519091</ts>
    <user>U6F50AX8C</user>
    <text>them move to amount</text>
  </message>
  <message>
    <ts>2017-07-28T10:59:26.555710</ts>
    <user>U6F50AX8C</user>
    <text>but if the user has move back I have to hide the amount panel and open last selected on the top and then show products avaiable</text>
  </message>
  <message>
    <ts>2017-07-28T10:59:40.563997</ts>
    <user>U6F50AX8C</user>
    <text>like we have today</text>
  </message>
  <message>
    <ts>2017-07-28T10:59:58.574591</ts>
    <user>U6F50AX8C</user>
    <text>but it's a huge js and some bugs appears</text>
  </message>
  <message>
    <ts>2017-07-28T11:00:39.600271</ts>
    <user>U6F50AX8C</user>
    <text>I'm moving it to elm because it's more reliable.</text>
  </message>
  <message>
    <ts>2017-07-28T11:04:28.735551</ts>
    <user>U2SR9DL7Q</user>
    <text>That makes sense... the elm way would be to define all the data this form needs to work in your model. Then construct all views that display based on the state of the model. You're updates would handle updating the model after user interaction. Think of every element of your view as just a function that accept the current state of the model, and outputs some html based on that. I've never made this type of form before so I don't have an example to show. But for own projects, I just keep related models, views and functions in one module/submodule</text>
  </message>
  <message>
    <ts>2017-07-28T11:05:50.782243</ts>
    <user>U2SR9DL7Q</user>
    <text>in a way that each page/major structure on my page is almost like its own little api, accepting the relevant data, and spitting out the relevant content. keeps me relatively bug free.</text>
  </message>
  <message>
    <ts>2017-07-28T11:35:24.797253</ts>
    <user>U6DBPU40Y</user>
    <text>Hi there</text>
  </message>
  <message>
    <ts>2017-07-28T11:35:59.817223</ts>
    <user>U6DBPU40Y</user>
    <text>Quick question, what's the way to go when working with a select element?</text>
  </message>
  <message>
    <ts>2017-07-28T11:37:09.857014</ts>
    <user>U6DBPU40Y</user>
    <text>is it required to create a custom event handler?</text>
  </message>
  <message>
    <ts>2017-07-28T11:39:28.934580</ts>
    <user>U4872964V</user>
    <text>&lt;@U6DBPU40Y&gt; yes, `on "change"`</text>
  </message>
  <message>
    <ts>2017-07-28T11:44:42.110492</ts>
    <user>U6DBPU40Y</user>
    <text>alright, thanks &lt;@U4872964V&gt;, I'm reading the reasons why it doesn't exists as part of html.events</text>
  </message>
  <message>
    <ts>2017-07-28T12:05:44.821885</ts>
    <user>U1P6FFJ64</user>
    <text>Which event does not exist as part of html.events?</text>
  </message>
  <message>
    <ts>2017-07-28T12:07:05.864315</ts>
    <user>U6DBPU40Y</user>
    <text>onChange</text>
  </message>
  <message>
    <ts>2017-07-28T12:10:08.960472</ts>
    <user>U1P6FFJ64</user>
    <text>&lt;@U6DBPU40Y&gt; I think you can use `onInput` instead</text>
  </message>
  <message>
    <ts>2017-07-28T12:13:47.072054</ts>
    <user>U6DBPU40Y</user>
    <text>&lt;@U1P6FFJ64&gt; it's true, at least for simple selects it does the job. Thanks a lot</text>
  </message>
  <message>
    <ts>2017-07-28T12:17:13.176944</ts>
    <user>U6DMS7RH8</user>
    <text>Hi --sorry to interject amidst another q&amp;amp;a-- but I have a conceptual question about union types and Maybe. I have been using this Zipper implementation (&lt;http://package.elm-lang.org/packages/wernerdegroot/listzipper/latest/List-Zipper&gt;) and I was wondering why there are lots of Maybe Zipper return types when you could simply just have an ‘Empty' type to use instead. Any reason why that might be? Is there an advantage to having a Nothing return type over a custom type?</text>
  </message>
  <message>
    <ts>2017-07-28T12:19:51.255481</ts>
    <user>U1P6FFJ64</user>
    <text>Why a custom type when you have a type that does the same and is in the core of the language?</text>
  </message>
  <message>
    <ts>2017-07-28T12:20:58.289637</ts>
    <user>U1P6FFJ64</user>
    <text>Also, `next` of the last item, I expect to return `Nothing`, not an empty value, right?</text>
  </message>
  <message>
    <ts>2017-07-28T12:21:05.293186</ts>
    <user>U1P6FFJ64</user>
    <text>I think it makes sense to use Maybe</text>
  </message>
  <message>
    <ts>2017-07-28T12:21:57.317971</ts>
    <user>U6DMS7RH8</user>
    <text>I definitely get that in most cases but I guess specifically to the idea of a zipper, Empty kinda makes sense. And to be even more specific, I'm implementing a song queue with the zipper and having an Empty song queue makes sense so I'm wondering if I should just use a vanilla zipper or add an Empty type to my module.</text>
  </message>
  <message>
    <ts>2017-07-28T12:23:31.363524</ts>
    <user>U6DMS7RH8</user>
    <text>&lt;@U1P6FFJ64&gt; I definitely agree on the `next` and `previous` implementation but kinda wondering the advantage of having the `fromList` function to return a `Maybe Zipper`</text>
  </message>
  <message>
    <ts>2017-07-28T12:24:03.378935</ts>
    <user>U1P6FFJ64</user>
    <text>When creating a `Zipper` from an empty `List`, I think it makes more sense to `Maybe` have a `Zipper`.</text>
  </message>
  <message>
    <ts>2017-07-28T12:25:02.407057</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U6DMS7RH8&gt; Using `Maybe` means you don't have to reimplement all the functions you'd want to do with a `Maybe` like thing.</text>
  </message>
  <message>
    <ts>2017-07-28T12:27:37.483296</ts>
    <user>U153UK3FA</user>
    <text>the whole point of the `Maybe a` type is to capture the concept of a value that you may or may not have, so you don't have to add that functionality to other types</text>
  </message>
  <message>
    <ts>2017-07-28T12:28:04.497175</ts>
    <user>U6DMS7RH8</user>
    <text>&lt;@U153UK3FA&gt; Okay I definitely buy that. I'm just wondering about readability like pattern matching with an `Empty` type seems to make a lot of sense but I totally get that you have to make all of your functions work with this new type.</text>
  </message>
  <message>
    <ts>2017-07-28T12:29:20.534580</ts>
    <user>U153UK3FA</user>
    <text>With a `Maybe` you'll rarely be pattern matching, you'll more often be using functions like `Maybe.map`</text>
  </message>
  <message>
    <ts>2017-07-28T12:29:53.551919</ts>
    <user>U6DMS7RH8</user>
    <text>right right makes sense</text>
  </message>
  <message>
    <ts>2017-07-28T12:30:06.558700</ts>
    <user>U6DMS7RH8</user>
    <text>Thanks! &lt;@U1P6FFJ64&gt; &lt;@U153UK3FA&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T12:32:38.635904</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U1P6FFJ64&gt; initially you questioned the use of a custom type? what wouldve been your alternative to the zipper in this case?</text>
  </message>
  <message>
    <ts>2017-07-28T12:34:01.676690</ts>
    <user>U1P6FFJ64</user>
    <text>&lt;@U2SR9DL7Q&gt; I was not questioning the use of the Zipper, but a custom object to handle the Empty Zipper</text>
  </message>
  <message>
    <ts>2017-07-28T12:35:01.706447</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U1P6FFJ64&gt; ahhh, gotcha. :slightly_smiling_face: I was trying to think of the good alternative.</text>
  </message>
  <message>
    <ts>2017-07-28T12:35:50.730925</ts>
    <user>U6DMS7RH8</user>
    <text>Basically `type SongQueue = Zipper Song | Empty`</text>
  </message>
  <message>
    <ts>2017-07-28T12:40:31.869432</ts>
    <user>U6DMS7RH8</user>
    <text>Oh but I think I figured out why I think Empty is better. What if you're trying to concat Zippers? Wouldn't `(Just Zipper ++ Nothing) == Nothing` but you could right a function that is `(Zipper [prev] a [next]) ++ Empty == (Zipper [prev] a [next])`</text>
  </message>
  <message>
    <ts>2017-07-28T12:41:55.911858</ts>
    <user>U2SR9DL7Q</user>
    <text>I'm also using a zipper, but to track players in a game... in my case, there's a fixed amount of players and I cant move forward if they're not there so Maybe works out pretty well.</text>
  </message>
  <message>
    <ts>2017-07-28T12:43:34.960533</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U6DMS7RH8&gt; what does `++` do in your example?</text>
  </message>
  <message>
    <ts>2017-07-28T12:44:24.985719</ts>
    <user>U14Q8S4EM</user>
    <text>Yeah I dont think that works. `Maybe a` isnt appendable</text>
  </message>
  <message>
    <ts>2017-07-28T12:44:40.993571</ts>
    <user>U14Q8S4EM</user>
    <text>Unless that was more like psuedo-code</text>
  </message>
  <message>
    <ts>2017-07-28T12:44:41.993852</ts>
    <user>U6DMS7RH8</user>
    <text>&lt;@U153UK3FA&gt; more or less a placeholder for a infix concat/append function</text>
  </message>
  <message>
    <ts>2017-07-28T12:45:14.010036</ts>
    <user>U6DMS7RH8</user>
    <text>&lt;@U14Q8S4EM&gt; definitely pseudocode, sorry</text>
  </message>
  <message>
    <ts>2017-07-28T12:45:22.013745</ts>
    <user>U14Q8S4EM</user>
    <text>Its okay. My bad.</text>
  </message>
  <message>
    <ts>2017-07-28T12:46:21.043487</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U6DMS7RH8&gt; With `Maybe` you'll use `Maybe.map` to apply any functions that work for a `Zipper` to a `Maybe Zipper`</text>
  </message>
  <message>
    <ts>2017-07-28T12:47:26.074934</ts>
    <user>U3FJSB596</user>
    <text>Including concatting Zippers</text>
  </message>
  <message>
    <ts>2017-07-28T12:49:57.148037</ts>
    <user>U6DMS7RH8</user>
    <text>Okay gotcha. So just use `map2` and a `a -&amp;gt; b` function that just returns `a` if `b` is `Nothing` ?</text>
  </message>
  <message>
    <ts>2017-07-28T12:51:25.191779</ts>
    <user>U153UK3FA</user>
    <text>with `map2` the function won't be applied unless both are not `Nothing`</text>
  </message>
  <message>
    <ts>2017-07-28T12:51:36.196793</ts>
    <user>U14Q8S4EM</user>
    <text>Over in elm-community/List-Extra, weve had an on going discussion on whether or not its better to return `Maybe (List a)` or just `List a` for functions that might fail. I think we are leaning towards `Maybe (List a)` for reasons analogous to this example. Returning a `Maybe` adds an extra step, since you have to handle the case of being `Just a` or `Nothing`. But in the alternative, it fails silently, and in the common situation where you would want to know if it fails, you would have to implement an independent process for checking.</text>
  </message>
  <message>
    <ts>2017-07-28T12:58:58.413913</ts>
    <user>U6F50AX8C</user>
    <text>Thank you very much!</text>
  </message>
  <message>
    <ts>2017-07-28T13:37:27.553656</ts>
    <user>U4R17T6F7</user>
    <text>Hi, I wrote a simple script that gets scroll position and viewport size through a port from javascript to elm. It works well in Chrome and Safari but it doesn't update the value in Firefox (54.0.1). The data goes to Elm (see the console) but the page is not update. Any clue? &lt;https://ellie-app.com/3S6SPTf5bx2a1/1&gt; (you need to scroll the page or resize the browser to see the number updating)</text>
  </message>
  <message>
    <ts>2017-07-28T13:37:33.556878</ts>
    <user>U5X2ZRFDF</user>
    <text>It depends whether you have a need to distinguish between failure and returning an empty list.</text>
  </message>
  <message>
    <ts>2017-07-28T13:47:07.843072</ts>
    <user>U3SJEDR96</user>
    <text>`凸` &amp;lt;- wat :smile:</text>
  </message>
  <message>
    <ts>2017-07-28T13:47:35.856959</ts>
    <user>U23SA861Y</user>
    <text>is that a character?</text>
  </message>
  <message>
    <ts>2017-07-28T13:47:46.862727</ts>
    <user>U4R17T6F7</user>
    <text>&lt;@U3SJEDR96&gt; , just a variable name. Chinese character</text>
  </message>
  <message>
    <ts>2017-07-28T13:51:21.971952</ts>
    <user>U3SJEDR96</user>
    <text>`window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0` try that, FF is a bit fickle -_-</text>
  </message>
  <message>
    <ts>2017-07-28T13:51:56.989734</ts>
    <user>U3SJEDR96</user>
    <text>On my end, I see that FF insists that the `document.body.scrollTop` is 0</text>
  </message>
  <message>
    <ts>2017-07-28T13:55:38.102480</ts>
    <user>U4R17T6F7</user>
    <text>Yep, that fix the issue: &lt;https://ellie-app.com/3S6SPTf5bx2a1/2&gt; Thank you &lt;@U3SJEDR96&gt;!</text>
  </message>
  <message>
    <ts>2017-07-28T14:18:32.799552</ts>
    <user>U6E5PS83X</user>
    <text>What's the preferred way to organize Elm code into a multi-page SPA? I found this but wasn't sure if there's a "standard" way to do it: &lt;http://blog.jenkster.com/2016/04/how-i-structure-elm-apps.html&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T14:21:20.883197</ts>
    <user>U0RPQMZ9S</user>
    <text>here's the canonical example these days &lt;https://github.com/rtfeldman/elm-spa-example/&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T14:21:59.902642</ts>
    <user>U6E5PS83X</user>
    <text>Perfect. Thank you &lt;@U0RPQMZ9S&gt; :smile:</text>
  </message>
  <message>
    <ts>2017-07-28T14:23:43.954972</ts>
    <user>U0RPQMZ9S</user>
    <text>NP :party_parrot:</text>
  </message>
  <message>
    <ts>2017-07-28T14:27:05.056665</ts>
    <user>U0RPQMZ9S</user>
    <text>Also good to watch this elm-europe talk from richard (the author of that repo) for the philosophy/experience that informed the design decisions that he made &lt;https://www.youtube.com/watch?v=DoA4Txr4GUs&amp;amp;t=47s&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T15:37:21.036423</ts>
    <user>U5XC2FJ1Y</user>
    <text>is it possible to implement an `average` function with type `List number -&amp;gt; Float` in pure elm?</text>
  </message>
  <message>
    <ts>2017-07-28T15:39:25.090219</ts>
    <user>U0LPMPL2U</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-28T15:41:52.153019</ts>
    <user>U5XC2FJ1Y</user>
    <text>can you point me to an implementation? elm-search doesn't give me anything with that type signature</text>
  </message>
  <message>
    <ts>2017-07-28T15:44:34.221079</ts>
    <user>U0LPMPL2U</user>
    <text>hmmm, I thought there was a `toFloat : number -&amp;gt; Float` function that existed but I can't find one :confused:</text>
  </message>
  <message>
    <ts>2017-07-28T15:45:53.255216</ts>
    <user>U5XC2FJ1Y</user>
    <text>yeah the `toFloat` exposed in Basics is monomorphic :confused:</text>
  </message>
  <message>
    <ts>2017-07-28T15:46:17.265993</ts>
    <user>U0LPMPL2U</user>
    <text>I'm also surprised there is no `divide : number -&amp;gt; number -&amp;gt; Float`</text>
  </message>
  <message>
    <ts>2017-07-28T15:46:32.272326</ts>
    <user>U5XC2FJ1Y</user>
    <text>or `divide: number1 -&amp;gt; number2 -&amp;gt; Float`</text>
  </message>
  <message>
    <ts>2017-07-28T15:47:06.286535</ts>
    <user>U5XC2FJ1Y</user>
    <text>would I think also be okay and even more useful</text>
  </message>
  <message>
    <ts>2017-07-28T15:48:41.326070</ts>
    <user>U6D3ERLA1</user>
    <text>Array.map iterators?</text>
  </message>
  <message>
    <ts>2017-07-28T15:49:42.352213</ts>
    <user>U6D3ERLA1</user>
    <text>`Array.map (\val i -&amp;gt; "Value " ++ i ++ " is " ++ val) (Array.fromList ["Foo", "Bar", "Baz"])`</text>
  </message>
  <message>
    <ts>2017-07-28T15:51:38.401855</ts>
    <user>U236M9FH9</user>
    <text>`Array.indexedMap`, but switch `\val i -&amp;gt;` to `\i val -&amp;gt;`</text>
  </message>
  <message>
    <ts>2017-07-28T15:51:50.406590</ts>
    <user>U2SR9DL7Q</user>
    <text>Newbie Question of the day : If I get a package from elm-package, and it's not compatible with my version of elm, or I decide I no longer need it, do I just just remove it from the package json?</text>
  </message>
  <message>
    <ts>2017-07-28T15:52:06.413503</ts>
    <user>U236M9FH9</user>
    <text>yup</text>
  </message>
  <message>
    <ts>2017-07-28T15:53:10.440927</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U236M9FH9&gt;  cool. Also, if I'm  having trouble with a package, I've seen some answer suggesting deleting the elm stuff folder. How would I rebuild said folder after?</text>
  </message>
  <message>
    <ts>2017-07-28T15:53:30.450348</ts>
    <user>U236M9FH9</user>
    <text>It gets generates when you run elm-make</text>
  </message>
  <message>
    <ts>2017-07-28T15:53:41.454813</ts>
    <user>U5XC2FJ1Y</user>
    <text>actually i'm not sure if i can even write any function `List number -&amp;gt; Float` except by implementing a constant function `const : a -&amp;gt; Float` and using letbindings to cheat the type inferrer</text>
  </message>
  <message>
    <ts>2017-07-28T15:53:51.459163</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U236M9FH9&gt; double cool. Thanks thanks</text>
  </message>
  <message>
    <ts>2017-07-28T15:55:22.498363</ts>
    <user>U6D3ERLA1</user>
    <text>There's no ternary operator in elm?</text>
  </message>
  <message>
    <ts>2017-07-28T15:55:46.509016</ts>
    <user>U0LPMPL2U</user>
    <text>`if condition then value else otherValue`</text>
  </message>
  <message>
    <ts>2017-07-28T15:55:50.510420</ts>
    <user>U5XC2FJ1Y</user>
    <text>`&amp;gt;` doesn't take a polymorphic `number`</text>
  </message>
  <message>
    <ts>2017-07-28T15:56:21.524256</ts>
    <user>U0LPMPL2U</user>
    <text>same as the multiline form but without whitespace
```
if condition then
  value
else
  otherValue
```</text>
  </message>
  <message>
    <ts>2017-07-28T15:57:00.541628</ts>
    <user>U6D3ERLA1</user>
    <text>I'm using the elm vim formatter which is pretty ruthless in its enforcement of white space... a        L     O     T      of whitespace</text>
  </message>
  <message>
    <ts>2017-07-28T15:58:39.584479</ts>
    <user>U6D3ERLA1</user>
    <text>O  n  c  e     y  o  u     s  t  a  r  t     r   e  a  d  i  n  g     i  t     t  h  o     y  o  u     s  t  a  r  t     t  o     w  o  n  d  e  r     w  h  y     e  v  e  r  y  t  h  i  n  g     e  l  s  e     i  s     s  o     c  r  o  w  d  e  d</text>
  </message>
  <message>
    <ts>2017-07-28T15:59:07.596336</ts>
    <user>U6D3ERLA1</user>
    <text>:white_large_square:</text>
  </message>
  <message>
    <ts>2017-07-28T15:59:35.608789</ts>
    <user>U0LPMPL2U</user>
    <text>haha yes. I've found it also pushes me to write many small functions instead of nesting things deeply</text>
  </message>
  <message>
    <ts>2017-07-28T16:01:59.674867</ts>
    <user>U6D3ERLA1</user>
    <text>true, it doesn't really work with long functions</text>
  </message>
  <message>
    <ts>2017-07-28T16:02:07.678387</ts>
    <user>U6D3ERLA1</user>
    <text>definitely makes sense with the terse / dense idiom</text>
  </message>
  <message>
    <ts>2017-07-28T16:02:43.694401</ts>
    <user>U6D3ERLA1</user>
    <text>I feel like I"m getting closer and closer to a form of pure notation as my career goes on</text>
  </message>
  <message>
    <ts>2017-07-28T16:05:36.767991</ts>
    <user>U6D3ERLA1</user>
    <text>```
    Array.indexedMap
        (\y row -&amp;gt;
            Array.indexedMap
                (\x val -&amp;gt;
                    if hasCoord (getCoords { x = x, y = y } l d k grid) then
                        key
                    else
                        val
                )
                row
        )
        grid
```</text>
  </message>
  <message>
    <ts>2017-07-28T16:05:49.773448</ts>
    <user>U6D3ERLA1</user>
    <text>this is a little ridic tho</text>
  </message>
  <message>
    <ts>2017-07-28T16:06:03.779364</ts>
    <user>U2SR9DL7Q</user>
    <text>Has anyone experience a situation where the elm package installer is successfully downloading elm packages, but the compiler/linter can't find the imported packages in elm-stuff? (But you can see them there)</text>
  </message>
  <message>
    <ts>2017-07-28T16:07:19.811429</ts>
    <user>U0LPMPL2U</user>
    <text>I feel like there's some way to use a `map2` function to make that nicer</text>
  </message>
  <message>
    <ts>2017-07-28T16:07:28.815131</ts>
    <user>U14Q8S4EM</user>
    <text>Yeah but, I would kinda doubt my own sanity first. Have you tried deleting `elm-stuff`, and re-installing?</text>
  </message>
  <message>
    <ts>2017-07-28T16:07:45.821951</ts>
    <user>U14Q8S4EM</user>
    <text>What package are you trying to use &lt;@U2SR9DL7Q&gt; , and what is the error?</text>
  </message>
  <message>
    <ts>2017-07-28T16:09:15.859779</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U14Q8S4EM&gt; &lt;http://package.elm-lang.org/packages/wernerdegroot/listzipper/1.0.2/List-Zipper&gt; And the error just says that it can't import import it. But the dependency is defined in elm-package,json</text>
  </message>
  <message>
    <ts>2017-07-28T16:10:36.893416</ts>
    <user>U2SR9DL7Q</user>
    <text>The same thing happened when I tried another package recently. And when I tried just copy pasting the relevant elm files in my main project folder, it was recognizing most of the exposed functions, but not a key exposed type. It's all very strange. Contemplating rebuilding elm-stuff.</text>
  </message>
  <message>
    <ts>2017-07-28T16:13:07.956519</ts>
    <user>U14Q8S4EM</user>
    <text>Do you have your code online? I could try building it.</text>
  </message>
  <message>
    <ts>2017-07-28T16:13:59.978106</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;https://github.com/tkshill/tkshill.github.io&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T16:14:23.988087</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U14Q8S4EM&gt;  that's everything pre-package shenanigans</text>
  </message>
  <message>
    <ts>2017-07-28T16:14:55.001372</ts>
    <user>U2U94G0QG</user>
    <text>&lt;@U5XC2FJ1Y&gt; so this feels pretty gross: &lt;https://ellie-app.com/3S9qcbmWWFta1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T16:16:30.041472</ts>
    <user>U5XC2FJ1Y</user>
    <text>ha yeah that seems less than optimal</text>
  </message>
  <message>
    <ts>2017-07-28T16:16:37.044106</ts>
    <user>U5XC2FJ1Y</user>
    <text>maybe i'll ask in &lt;#C0CJ3SBBM|general&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T16:23:05.205641</ts>
    <user>U5W86UED6</user>
    <text>what don't you like about the solution?</text>
  </message>
  <message>
    <ts>2017-07-28T16:23:32.217120</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;@U0LPMPL2U&gt; haven't messed with map2 ever guess I should take a look</text>
  </message>
  <message>
    <ts>2017-07-28T16:24:21.237216</ts>
    <user>U0LPMPL2U</user>
    <text>actually, I don't think map2 will help because you aren't going through both arrays in parallel but instead are iterating over every combination of column/row</text>
  </message>
  <message>
    <ts>2017-07-28T16:24:54.251156</ts>
    <user>U0LPMPL2U</user>
    <text>You're trying to implement a `Grid.map`</text>
  </message>
  <message>
    <ts>2017-07-28T16:25:03.254719</ts>
    <user>U14Q8S4EM</user>
    <text>So I was able to get your website running with elm-reactor &lt;@U2SR9DL7Q&gt; , but only after deleting elm-stuff and installing.</text>
  </message>
  <message>
    <ts>2017-07-28T16:25:15.259816</ts>
    <user>U14Q8S4EM</user>
    <text>But I havent tried `List-Zipper` yet, I just had trouble with that delay package</text>
  </message>
  <message>
    <ts>2017-07-28T16:25:28.265179</ts>
    <user>U6D3ERLA1</user>
    <text>joelq exactly</text>
  </message>
  <message>
    <ts>2017-07-28T16:25:52.275438</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U14Q8S4EM&gt; cool. I may do the same then.</text>
  </message>
  <message>
    <ts>2017-07-28T16:27:00.303407</ts>
    <user>U14Q8S4EM</user>
    <text>Yeah and then I tried installing that zipper package, and that worked too. I didnt get any errors doing `import List.Zipper`</text>
  </message>
  <message>
    <ts>2017-07-28T16:27:14.309119</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U6D3ERLA1&gt; you may be interested in the `Matrix` type</text>
  </message>
  <message>
    <ts>2017-07-28T16:27:19.311296</ts>
    <user>U14Q8S4EM</user>
    <text>I dont know if that helps. Hopefully you'll be good if you replicate my steps.</text>
  </message>
  <message>
    <ts>2017-07-28T16:27:21.312067</ts>
    <user>U0LPMPL2U</user>
    <text>there's a couple packages that provide one</text>
  </message>
  <message>
    <ts>2017-07-28T16:27:51.324772</ts>
    <user>U6D3ERLA1</user>
    <text>yeah &lt;@U0LPMPL2U&gt; the level of complexity is fairly low and I'm brand new to Elm so I'm trying to get everything done with primitives for now</text>
  </message>
  <message>
    <ts>2017-07-28T16:28:04.329912</ts>
    <user>U6D3ERLA1</user>
    <text>although i've heard there are issues with the Array type</text>
  </message>
  <message>
    <ts>2017-07-28T16:28:13.333429</ts>
    <user>U0LPMPL2U</user>
    <text>fair enough</text>
  </message>
  <message>
    <ts>2017-07-28T16:28:50.348882</ts>
    <user>U0LPMPL2U</user>
    <text>if you find yourself iterating through your grid a lot, it might make sense to write a single `gridMap` function</text>
  </message>
  <message>
    <ts>2017-07-28T16:29:09.356337</ts>
    <user>U6D3ERLA1</user>
    <text>mmm that's a good idea</text>
  </message>
  <message>
    <ts>2017-07-28T16:29:45.371149</ts>
    <user>U14Q8S4EM</user>
    <text>Personally, I almost never write anonymous functions.</text>
  </message>
  <message>
    <ts>2017-07-28T16:29:56.375436</ts>
    <user>U14Q8S4EM</user>
    <text>And I always do something like what &lt;@U0LPMPL2U&gt; suggested</text>
  </message>
  <message>
    <ts>2017-07-28T16:35:52.522285</ts>
    <user>U6D3ERLA1</user>
    <text>still a bit of a paradigm shift for me...</text>
  </message>
  <message>
    <ts>2017-07-28T16:38:09.577719</ts>
    <user>U6D3ERLA1</user>
    <text>```
mapGrid func =
    Array.indexedMap
        (\y row -&amp;gt;
            Array.indexedMap
                (\x val -&amp;gt;
                    func x y val
                )
                row
        )
        grid
```</text>
  </message>
  <message>
    <ts>2017-07-28T16:39:26.608798</ts>
    <user>U6D3ERLA1</user>
    <text>I guess this still has \s in it</text>
  </message>
  <message>
    <ts>2017-07-28T16:39:27.609338</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U14Q8S4EM&gt; thanks. I'll do a rebuild and see if it helps</text>
  </message>
  <message>
    <ts>2017-07-28T16:40:55.645004</ts>
    <user>U2U94G0QG</user>
    <text>idk - converting `number &amp;gt; String &amp;gt; Float` just feels icky - maybe it's not so bad in reality?</text>
  </message>
  <message>
    <ts>2017-07-28T16:48:06.819955</ts>
    <user>U5W86UED6</user>
    <text>&lt;@U6D3ERLA1&gt; it's a matter of personal preference, but maybe let over lambda?

```
mapGrid func grid =
    let
        mapRows y row =
            Array.indexedMap (mapColumns y) row

        mapColumns y x val =
            func x y val
    in
        Array.indexedMap mapRows grid
```</text>
  </message>
  <message>
    <ts>2017-07-28T16:49:29.852617</ts>
    <user>U6D3ERLA1</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-28T16:52:20.921366</ts>
    <user>U5W86UED6</user>
    <text>ah, yes, that is pretty unappetizing</text>
  </message>
  <message>
    <ts>2017-07-28T16:53:56.957116</ts>
    <user>U5W86UED6</user>
    <text>maybe the solution is an `averageFloat` and an `averageInt` function?</text>
  </message>
  <message>
    <ts>2017-07-28T16:55:46.000275</ts>
    <user>U5W86UED6</user>
    <text>I suppose `average` could put the constraint on needing to have a list of floats, and a separate piece of your program would ensure the conversion when building a list</text>
  </message>
  <message>
    <ts>2017-07-28T16:57:11.033829</ts>
    <user>U5ABF3BH7</user>
    <text>Hello! Does anyone have examples of decoding for union types, using Json.Decode.Pipeline? I have found examples that were outdated.  For example, I have the following type  
``` LocationType
    = PersonResidence
    | InTransport
    | Hospital
    | NursingHome
    | Hospice
    | CommunityBasedResidentFacility
    | Other ```

From my Json object, I have  
```{"type_" =&amp;gt; "Person's Residence"} or {"type_" =&amp;gt; "In Transport"}````
, etc….
I want it to be changed into a Union type into my model

```locationDecoder : Decoder Model
locationDecoder =
    decode Model
        |&amp;gt; Json.Decode.Pipeline.required "type_" string
   ```
won't work as it created a field that is a string and not a Union Type. How can I use the method locationfromString : String -&amp;gt; LocationType in my decoder?</text>
  </message>
  <message>
    <ts>2017-07-28T16:58:57.077444</ts>
    <user>U2U94G0QG</user>
    <text>well the OP was asking for a function that looked like `average : List number -&amp;gt; Float` and I just made that gross thing - how would one go about determining if a `number` was `Int` or `Float` in Elm?</text>
  </message>
  <message>
    <ts>2017-07-28T17:01:07.131698</ts>
    <user>U1UGYHGCA</user>
    <text>`Json.Decode.map` probably</text>
  </message>
  <message>
    <ts>2017-07-28T17:01:21.137134</ts>
    <user>U14Q8S4EM</user>
    <text>Here is some code I wrote up that decodes to a union type &lt;@U5ABF3BH7&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T17:01:23.137917</ts>
    <user>U14Q8S4EM</user>
    <text>&lt;https://github.com/Chadtech/Chadtech-Online-2-Post-Composer/blob/master/source/Types/Model.elm&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T17:01:39.144355</ts>
    <user>U14Q8S4EM</user>
    <text>Checkout the functions `ContentDecoder` and `ContentDecoderHelp`</text>
  </message>
  <message>
    <ts>2017-07-28T17:02:13.157928</ts>
    <user>U3FJSB596</user>
    <text>Or `Json.Decode.andThen`</text>
  </message>
  <message>
    <ts>2017-07-28T17:02:21.161455</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U14Q8S4EM&gt;  &lt;@U1UGYHGCA&gt; Thanks a lot!</text>
  </message>
  <message>
    <ts>2017-07-28T17:03:27.187764</ts>
    <user>U1UGYHGCA</user>
    <text>```
locationDecoder: Decoder LocationType
locationDecoder =
  Json.Decode.field "type_" Json.Decode.string
  |&amp;gt; Json.Decode.map (\type_ -&amp;gt; case type_ of
    "Person's Residence" -&amp;gt; PersonResidence
    "In Transport" -&amp;gt; InTransport
    -- ...
    _ -&amp;gt; Other
  )
```</text>
  </message>
  <message>
    <ts>2017-07-28T17:03:29.188631</ts>
    <user>U1UGYHGCA</user>
    <text>Might work</text>
  </message>
  <message>
    <ts>2017-07-28T17:08:30.305355</ts>
    <user>U5W86UED6</user>
    <text>oh! you wouldn't - I was supposing that `average` should be defined as `List Float -&amp;gt; Float`, putting the burden on the part of the program that generates the list, rather than on the function. but your solution is exactly the way to satisfy his original question</text>
  </message>
  <message>
    <ts>2017-07-28T17:08:39.308718</ts>
    <user>U3FJSB596</user>
    <text>With this version, you do not need to add a new value `Other` to your `LocationType`.</text>
  </message>
  <message>
    <ts>2017-07-28T17:13:34.418744</ts>
    <user>U6D3ERLA1</user>
    <text>```
mapGrid func grid =
    let
        mapRows y row =
            Array.indexedMap (mapColumns y) row

        mapColumns y x val =
            func x y val
    in
        Array.indexedMap mapRows grid


updateMarker p k =
    \x y val -&amp;gt;
        if p.x == x &amp;amp;&amp;amp; p.y == y then
            k
        else
            val

debug = mapGrid updateMarker { x = 1, y = 1 } "X" initBoard
    |&amp;gt; log "Map"
```</text>
  </message>
  <message>
    <ts>2017-07-28T17:14:19.435144</ts>
    <user>U6D3ERLA1</user>
    <text>Maybe someone can help me with this.... I'm trying to pass updateMarker to mapGrid with two paramaters (a point and a key) which will be evaluated inside of map grid - along with the current grid location (x, y)</text>
  </message>
  <message>
    <ts>2017-07-28T17:15:56.470553</ts>
    <user>U14Q8S4EM</user>
    <text>&lt;https://gist.github.com/Chadtech/81a96e4facab7a3dc9196e2811ce6c08/edit&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T17:15:59.471510</ts>
    <user>U6D3ERLA1</user>
    <text>Maybe I need to curry updateMarker before passing to mapgrid..</text>
  </message>
  <message>
    <ts>2017-07-28T17:16:24.480923</ts>
    <user>U14Q8S4EM</user>
    <text>&lt;@U6D3ERLA1&gt; , thats how I would write your code. Tho I am not sure given your use case things need to be this convoluted.</text>
  </message>
  <message>
    <ts>2017-07-28T17:16:30.482641</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;@U14Q8S4EM&gt; I think that gist is private</text>
  </message>
  <message>
    <ts>2017-07-28T17:16:58.492731</ts>
    <user>U14Q8S4EM</user>
    <text>&lt;https://gist.github.com/Chadtech/81a96e4facab7a3dc9196e2811ce6c08&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T17:17:00.493431</ts>
    <user>U14Q8S4EM</user>
    <text>Doops.</text>
  </message>
  <message>
    <ts>2017-07-28T17:17:06.495423</ts>
    <user>U14Q8S4EM</user>
    <text>Thats the correct link</text>
  </message>
  <message>
    <ts>2017-07-28T17:19:53.553360</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U1UGYHGCA&gt; &lt;@U3FJSB596&gt; Thanks, I will give it a try!</text>
  </message>
  <message>
    <ts>2017-07-28T17:20:21.563138</ts>
    <user>U1CHKCKBR</user>
    <text>hey, i want to start learning elm; what would be the proper way to start ?</text>
  </message>
  <message>
    <ts>2017-07-28T17:23:03.618960</ts>
    <user>U2U94G0QG</user>
    <text>&lt;@U1CHKCKBR&gt; start with &lt;https://guide.elm-lang.org/&gt; and also the FAQ (see channel topic)</text>
  </message>
  <message>
    <ts>2017-07-28T17:23:14.622637</ts>
    <user>U2U94G0QG</user>
    <text>and of course ask here when questions come up</text>
  </message>
  <message>
    <ts>2017-07-28T17:31:06.783661</ts>
    <user>U1CHKCKBR</user>
    <text>:wink: ty &lt;@U2U94G0QG&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T17:33:13.823942</ts>
    <user>U2U94G0QG</user>
    <text>I'm doing &lt;https://www.gitbook.com/book/johncrane/ninety-nine-elm-problems/details&gt;</text>
  </message>
  <message>
    <ts>2017-07-28T17:34:14.843154</ts>
    <user>U2U94G0QG</user>
    <text>which is fun and more about using the language than building web apps with TEA</text>
  </message>
  <message>
    <ts>2017-07-28T17:36:49.892078</ts>
    <user>U1CHKCKBR</user>
    <text>i like the way it's structured</text>
  </message>
  <message>
    <ts>2017-07-28T17:39:54.950068</ts>
    <user>U6DQCTZT2</user>
    <text>How do I transform Time (Float) to Int?</text>
  </message>
  <message>
    <ts>2017-07-28T17:41:08.972725</ts>
    <user>U6DQCTZT2</user>
    <text>I guess I don't? I just have to use Int for the type declaration?</text>
  </message>
  <message>
    <ts>2017-07-28T17:42:32.998399</ts>
    <user>U14Q8S4EM</user>
    <text>&lt;@U6DQCTZT2&gt; `round` or `floor`</text>
  </message>
  <message>
    <ts>2017-07-28T17:42:43.001817</ts>
    <user>U2U94G0QG</user>
    <text>&lt;@U1CHKCKBR&gt; have you seen &lt;https://ellie-app.com/new&gt; yet?</text>
  </message>
  <message>
    <ts>2017-07-28T17:42:55.005599</ts>
    <user>U2U94G0QG</user>
    <text>really nice way to play with Elm - 0 config</text>
  </message>
  <message>
    <ts>2017-07-28T17:43:24.014572</ts>
    <user>U2U94G0QG</user>
    <text>though personally I prefer &lt;https://ellie-app.com/new?vim=true&gt;  :wink:</text>
  </message>
  <message>
    <ts>2017-07-28T17:45:52.059113</ts>
    <user>U6DQCTZT2</user>
    <text>&lt;@U14Q8S4EM&gt; thanks!</text>
  </message>
  <message>
    <ts>2017-07-28T17:47:27.086850</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U6DQCTZT2&gt; what value do you want out, there are conversion functions to give you an number in a relavent unit</text>
  </message>
  <message>
    <ts>2017-07-28T18:08:19.443083</ts>
    <user>U6D3ERLA1</user>
    <text>Hmmm well this seems to do what I want (map a coordinate and key to a grid) but it seems like too many args for the inner function not sure if there is  a better way
```
mapGrid f grid =
    Array.indexedMap (mapRow f) grid


mapRow f y row =
    Array.indexedMap (mapDatum (f y)) row


mapDatum f y x =
    f x y


putY p k x v y =
    if p.x == x &amp;amp;&amp;amp; p.y == y then
        k
    else
        v


debug =
    mapGrid (putY { x = 0, y = 0 } "*") initBoard
        |&amp;gt; log "Map"
```</text>
  </message>
  <message>
    <ts>2017-07-28T18:09:03.454247</ts>
    <user>U6DQCTZT2</user>
    <text>&lt;@U23SA861Y&gt; Random.initialSeed needed to be an Int and so I used the round function. Was looking for something like Time.toInt, but just me being stupid ;D</text>
  </message>
  <message>
    <ts>2017-07-28T18:09:28.460764</ts>
    <user>U23SA861Y</user>
    <text>right, if you weren't using the actual time value then thats ok.</text>
  </message>
  <message>
    <ts>2017-07-28T18:09:56.467710</ts>
    <user>U23SA861Y</user>
    <text>so you went with array of array huh?</text>
  </message>
  <message>
    <ts>2017-07-28T18:10:40.479508</ts>
    <user>U6D3ERLA1</user>
    <text>y</text>
  </message>
  <message>
    <ts>2017-07-28T18:12:21.506322</ts>
    <user>U4H406NET</user>
    <text>I am trying to construct a Result object with an error and Result.Result tells me that Result does not expose Result (Result by itself tells me that Result is not a variable)  How do you create a Result?</text>
  </message>
  <message>
    <ts>2017-07-28T18:12:23.506961</ts>
    <user>U23SA861Y</user>
    <text>well, because this putY if you used a dict would just be `Dict.insert (x,y) value grid`</text>
  </message>
  <message>
    <ts>2017-07-28T18:12:32.509311</ts>
    <user>U5ABF3BH7</user>
    <text>I have a designing question. In my view, I have different persons ( of Person.Model) used in my Model, for example model.caller, or as element of the list model.other People

Each person has a list of roles of  
```
type alias Person = 
  { firstName : String
  ….
 , roles : List PersonRole
} 

type PersonRole = 
   Informant
  | PrimaryPurchaser
  | NextOfKin
  | SurveyRecipient
  | CoPurchaser
```
 
The different roles are presented as checkboxes in the personview person. 
Some roles can go to only one person some have no restriction. For example, there can be only one informant , some roles like nextOfKin don't have that restriction.
so you can have ``` person1.roles = [Informant, NextOfKin] person2.roles= [PrimaryPurchaser, NextOfKin]```  but not ```person1.roles = [Informant], person2.roles = [Informant, NextOfKin]```
so Informant can be used only for 1 person.

I have been going back and forth with different ideas on how to model that and would appreciate advice. 
One idea is to create a dict of unique roles in my model
uniqueRoles = { (Informant, Maybe Person.Model), (PrimaryPurchaser : Maybe Person.Model), …}

On a person view  the checkbox ‘informant' needs to be disabled if the person is not the informant, but it needs to be enabled if the person has that role or no informant has been selected yet, I am thinking of adding  ```[disabled (Dict.get Informant model.uniqueRoles == Nothing || Dict.get Informant model.uniqueRoles == person)]```

It seems a bit much, any other idea?</text>
  </message>
  <message>
    <ts>2017-07-28T18:13:42.528073</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;@U23SA861Y&gt; I'm translating from an existing js app so the array map (pun intended) pretty directly I'll look at the Dict implementation as well I'm just trying to get some chops so not much to lose trying a couple ways</text>
  </message>
  <message>
    <ts>2017-07-28T18:14:15.536793</ts>
    <user>U23SA861Y</user>
    <text>if they are arrays you should be able to index directly</text>
  </message>
  <message>
    <ts>2017-07-28T18:14:28.540248</ts>
    <user>U23SA861Y</user>
    <text>setting a single value via a map is a bit clunky</text>
  </message>
  <message>
    <ts>2017-07-28T18:14:40.543225</ts>
    <user>U6D3ERLA1</user>
    <text>ha tru</text>
  </message>
  <message>
    <ts>2017-07-28T18:14:41.543579</ts>
    <user>U5ABF3BH7</user>
    <text>I meant to write ```[disabled not (Dict.get Informant model.uniqueRoles == Nothing || Dict.get Informant model.uniqueRoles == person)]</text>
  </message>
  <message>
    <ts>2017-07-28T18:15:27.555742</ts>
    <user>U6D3ERLA1</user>
    <text>Assuming however I wanted to operate on the entire grid, I'm guessing it is bad practice to write functions with so many arguments</text>
  </message>
  <message>
    <ts>2017-07-28T18:15:32.557127</ts>
    <user>U6D3ERLA1</user>
    <text>as the inner function has</text>
  </message>
  <message>
    <ts>2017-07-28T18:15:49.561554</ts>
    <user>U6D3ERLA1</user>
    <text>I guess if we were operating on the whole grid I could strip a couple args off (for finding the indexes...)</text>
  </message>
  <message>
    <ts>2017-07-28T18:19:07.610986</ts>
    <user>U23SA861Y</user>
    <text>so typically your map would just take the value and you may have and indexed map of the form `(Int,Int) -&amp;gt; value -&amp;gt; newValue`</text>
  </message>
  <message>
    <ts>2017-07-28T18:22:12.655891</ts>
    <user>U5ABF3BH7</user>
    <text>sorry for the long explanation, I am trying to give the context and it ends up being a bit long</text>
  </message>
  <message>
    <ts>2017-07-28T18:22:34.661649</ts>
    <user>U23SA861Y</user>
    <text>it might be that the role of the person belongs in where the person is placed in a higher level datastructure</text>
  </message>
  <message>
    <ts>2017-07-28T18:23:08.669882</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U23SA861Y&gt; can you explain more what you mean?</text>
  </message>
  <message>
    <ts>2017-07-28T18:24:03.683386</ts>
    <user>U23SA861Y</user>
    <text>```
{
informant: Maybe Person
,nextOfKin : List Person
,etc
}
```</text>
  </message>
  <message>
    <ts>2017-07-28T18:24:52.695182</ts>
    <user>U23SA861Y</user>
    <text>rather then type be a property of person</text>
  </message>
  <message>
    <ts>2017-07-28T18:26:24.718297</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U23SA861Y&gt; I see what you mean.</text>
  </message>
  <message>
    <ts>2017-07-28T18:26:27.719104</ts>
    <user>U5ABF3BH7</user>
    <text>Thanks</text>
  </message>
  <message>
    <ts>2017-07-28T18:32:48.811296</ts>
    <user>U6D3ERLA1</user>
    <text>```
putGrid p v grid =
    case Array.get p.y grid of
        Nothing -&amp;gt;
            grid

        Just row -&amp;gt;
            Array.set p.y (Array.set p.x v row) grid
```</text>
  </message>
  <message>
    <ts>2017-07-28T18:32:52.812232</ts>
    <user>U6D3ERLA1</user>
    <text>this feels sane to me</text>
  </message>
  <message>
    <ts>2017-07-28T18:33:20.819038</ts>
    <user>U6D3ERLA1</user>
    <text>Point -&amp;gt; String -&amp;gt; Grid</text>
  </message>
  <message>
    <ts>2017-07-28T18:46:59.004467</ts>
    <user>U23SA861Y</user>
    <text>you can get rid of the case and use pipe with a Maybe.map and Maybe.withDefault</text>
  </message>
  <message>
    <ts>2017-07-28T18:51:16.062144</ts>
    <user>U6D3ERLA1</user>
    <text>:thumbsup:</text>
  </message>
  <message>
    <ts>2017-07-28T20:50:41.207440</ts>
    <user>U6D3ERLA1</user>
    <text>awesome</text>
  </message>
  <message>
    <ts>2017-07-28T21:29:02.432184</ts>
    <user>U6EAT2Z37</user>
    <text>I think something like this is my preference:

```
    updateIfIndexesMatch : Int -&amp;gt; (a -&amp;gt; a) -&amp;gt; Int -&amp;gt; a -&amp;gt; a
    updateIfIndexesMatch index f testIndex value =
      if 
        index == testIndex
      then
        f value
      else
        value
        
    updateArrayAt : Int -&amp;gt; (a -&amp;gt; b) -&amp;gt; Array a -&amp;gt; Array b
    updateArrayAt index f array =
      Array.indexedMap (updateIfIndexesMatch index f) array

    putGrid position newValue grid =
      let
        updateColumn column = updateArrayAt position.x (\_ -&amp;gt; newValue)
        updateRow row = updateArrayAt position.y updateColumn
        updateGrid = Array.map updateRow
      in
        updateGrid grid
```</text>
  </message>
  <message>
    <ts>2017-07-28T21:36:45.472382</ts>
    <user>U2PTZFKFX</user>
    <text>hello, can anyone give me a good tutorial on using ELM with REST? specially, fetching and posting contents, as well as authentication</text>
  </message>
  <message>
    <ts>2017-07-28T21:38:20.479777</ts>
    <user>U6EAT2Z37</user>
    <text>&lt;@U2PTZFKFX&gt; I did a tiny bit of googling and found this &lt;https://github.com/andrewsuzuki/elm-todo-rest-api&gt; did you see that already?</text>
  </message>
  <message>
    <ts>2017-07-28T21:39:14.484057</ts>
    <user>U6EAT2Z37</user>
    <text>&lt;@U2PTZFKFX&gt; it probably won't help you with authentication, but that's probably a separate issue and you can treat them individually.</text>
  </message>
  <message>
    <ts>2017-07-28T21:40:43.491554</ts>
    <user>U2PTZFKFX</user>
    <text>this is not fully descriptive</text>
  </message>
  <message>
    <ts>2017-07-28T21:46:20.519891</ts>
    <user>U6EAT2Z37</user>
    <text>&lt;@U2PTZFKFX&gt; well, do you know elm enough to build yourself a small app from the beginning, say the counter app example? if not, it's a good idea to learn how to do that first.</text>
  </message>
  <message>
    <ts>2017-07-28T21:48:10.528301</ts>
    <user>U2PTZFKFX</user>
    <text>&lt;@U6EAT2Z37&gt;  I have read the basic of it, and i want to integrate into a real application development,  a flask application i m building</text>
  </message>
  <message>
    <ts>2017-07-28T21:50:02.536864</ts>
    <user>U635238TG</user>
    <text>unrelated to current convo but thanks for that link, composed. one of the better documented github projects i've seen actually. very helpful for me.</text>
  </message>
  <message>
    <ts>2017-07-28T21:54:14.557645</ts>
    <user>U6EAT2Z37</user>
    <text>&lt;@U2PTZFKFX&gt; sorry, it's not a tutorial. Maybe this tutorial by a friend of mine at work might help: &lt;https://benkbooth.com/post/building-a-basic-ui-clone-of-instagram-using-elm-part-1/&gt;

If you follow this through, it should hopefully give you enough insight into being able to understand what you need to know to proceed.</text>
  </message>
  <message>
    <ts>2017-07-28T21:54:46.560353</ts>
    <user>U2PTZFKFX</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-28T21:54:54.561096</ts>
    <user>U2PTZFKFX</user>
    <text>&lt;@U6EAT2Z37&gt; thanks,</text>
  </message>
  <message>
    <ts>2017-07-28T21:56:46.569792</ts>
    <user>U635238TG</user>
    <text>yes, thanks again! This one looks really good too</text>
  </message>
  <message>
    <ts>2017-07-28T21:59:50.584471</ts>
    <user>U2PTZFKFX</user>
    <text>&lt;@U6EAT2Z37&gt;  do you have any idea bout http request and saving the json data?</text>
  </message>
  <message>
    <ts>2017-07-28T22:01:16.592574</ts>
    <user>U6EAT2Z37</user>
    <text>&lt;@U2PTZFKFX&gt; not sure what you mean by "save" :slightly_smiling_face: (or, actually, for that matter, what context you're talking about http requests in)</text>
  </message>
  <message>
    <ts>2017-07-28T22:01:31.593779</ts>
    <user>U2PTZFKFX</user>
    <text>i mean pulling the data and using it</text>
  </message>
  <message>
    <ts>2017-07-28T22:01:48.595056</ts>
    <user>U6EAT2Z37</user>
    <text>That's exactly what that last tutorial helps you with, doesn't it?</text>
  </message>
  <message>
    <ts>2017-07-28T22:02:36.598659</ts>
    <user>U2PTZFKFX</user>
    <text>i thought it's for json decoding only, let me read further,</text>
  </message>
  <message>
    <ts>2017-07-29T02:00:22.556266</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U6D3ERLA1&gt; &lt;@U6EAT2Z37&gt; when working with `Array`, I find it feels like to make an `Array.update : Int -&amp;gt; ( a -&amp;gt; a ) -&amp;gt; Array a -&amp;gt; Array a` on top of `set` and `get`. Or use &lt;http://package.elm-lang.org/packages/elm-community/array-extra/1.0.2/Array-Extra#update&gt;</text>
  </message>
  <message>
    <ts>2017-07-29T02:00:57.559013</ts>
    <user>U3SJEDR96</user>
    <text>Using an `indexedMap` feels like you don't really need an Array in the first place</text>
  </message>
  <message>
    <ts>2017-07-29T04:28:58.076156</ts>
    <user>U6EAT2Z37</user>
    <text>&lt;@U3SJEDR96&gt; sure. it makes me wish lenses existed, but oh well, not a beginner topic, apparently :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-29T04:29:33.078434</ts>
    <user>U6EAT2Z37</user>
    <text>&lt;@U3SJEDR96&gt; a much better solution, of course, because indexedMap is O(n) (ie it takes the size of the array to do its work)</text>
  </message>
  <message>
    <ts>2017-07-29T04:30:36.082892</ts>
    <user>U6EAT2Z37</user>
    <text>&lt;@U3SJEDR96&gt; I was more referring to the compositional style than anything else. Doing indexedMap is not good.</text>
  </message>
  <message>
    <ts>2017-07-29T04:52:07.159144</ts>
    <user>U38FTJUPP</user>
    <text>this might sound like a dumb question, but does anyone know a boilerplate for an Elm app that uses an express server to serve the index.html?</text>
  </message>
  <message>
    <ts>2017-07-29T04:53:03.162649</ts>
    <user>U38FTJUPP</user>
    <text>I was looking for something more integrated than having to run two commands (one to start the server, and another to start the elm-reactor/live/webpack/wtv)</text>
  </message>
  <message>
    <ts>2017-07-29T05:33:51.311810</ts>
    <user>U0CLDU8UB</user>
    <text>Huh? elm-reactor and elm-live also serve the static files. </text>
  </message>
  <message>
    <ts>2017-07-29T05:34:30.314054</ts>
    <user>U0CLDU8UB</user>
    <text>And so does webpack, given it's configured to do so </text>
  </message>
  <message>
    <ts>2017-07-29T06:11:45.450506</ts>
    <user>U6GFNSEPR</user>
    <text>hi everybody</text>
  </message>
  <message>
    <ts>2017-07-29T06:13:17.455707</ts>
    <user>U6GFNSEPR</user>
    <text>I'm looking for help with sort of a recursion problem</text>
  </message>
  <message>
    <ts>2017-07-29T06:14:01.458207</ts>
    <user>U6GFNSEPR</user>
    <text>I want to draw the edges of a polygon. So I wrote a function `polygonLines : List Point -&amp;gt; List Line`</text>
  </message>
  <message>
    <ts>2017-07-29T06:14:48.460816</ts>
    <user>U6GFNSEPR</user>
    <text>where `Point` is of course `(FLoat, FLoat)` and `Line` is `(Point, Point)`</text>
  </message>
  <message>
    <ts>2017-07-29T06:15:45.464216</ts>
    <user>U6GFNSEPR</user>
    <text>so the easy part is  `x1 :: x2 :: xs -&amp;gt; Line x1 x2 :: polygonLines (x2 :: xs)`</text>
  </message>
  <message>
    <ts>2017-07-29T06:17:07.468816</ts>
    <user>U6GFNSEPR</user>
    <text>but I can't figure out an elegant way to close the polygon, because the last point will not be connected to the first point. Does anyone have a good idea that doesn't involve just appending the first point to the end of the list of points in my polygon list of points?</text>
  </message>
  <message>
    <ts>2017-07-29T08:02:12.871081</ts>
    <user>U2J1FUQTZ</user>
    <text>&lt;@U6GFNSEPR&gt; consider to convert your code to tail recursion and implement the zero condition accordingly to include the correct last point</text>
  </message>
  <message>
    <ts>2017-07-29T08:42:15.043804</ts>
    <user>U62UFEG4D</user>
    <text>&lt;@U6GFNSEPR&gt; have a look at the polygon element in the svg package, you just need to provide list of point</text>
  </message>
  <message>
    <ts>2017-07-29T08:44:33.053397</ts>
    <user>U62UFEG4D</user>
    <text>&lt;https://github.com/sdia/Shapelm/blob/master/src/Geometry.elm#L20&gt;</text>
  </message>
  <message>
    <ts>2017-07-29T08:44:53.054785</ts>
    <user>U62UFEG4D</user>
    <text>&lt;https://github.com/sdia/Shapelm/blob/master/src/Main.elm#L194&gt;</text>
  </message>
  <message>
    <ts>2017-07-29T09:11:01.169141</ts>
    <user>U24HQ3RJ7</user>
    <text>hi.. i am new to CSS and have to make a web / mobile app ..
I am using Elm for it. :slightly_smiling_face:
Has the community converged on some particular css library ? elm-css vs elm-style-elements vs something_else ..</text>
  </message>
  <message>
    <ts>2017-07-29T09:20:52.213051</ts>
    <user>U6DQCTZT2</user>
    <text>Is there a general name for `type alias Something a = { current : Maybe a, others : List a }`</text>
  </message>
  <message>
    <ts>2017-07-29T09:59:44.395092</ts>
    <user>U6EAT2Z37</user>
    <text>&lt;@U6DQCTZT2&gt; parameterized record type, I suppose. Depending on what part in particular you're trying to name.</text>
  </message>
  <message>
    <ts>2017-07-29T10:00:37.401231</ts>
    <user>U0FP80EKB</user>
    <text>I generally call it a parameterized type</text>
  </message>
  <message>
    <ts>2017-07-29T10:02:11.409766</ts>
    <user>U6DQCTZT2</user>
    <text>&lt;@U6EAT2Z37&gt; I meant the pattern of using current and other, I know there's ziplists but they are prev, curr, remaining</text>
  </message>
  <message>
    <ts>2017-07-29T10:05:53.427954</ts>
    <user>U6EAT2Z37</user>
    <text>Oh. Sorry I'm not sure about that. I think that that (the thing you're referring to that has list then an element, then a list) is called a Zipper, not a ZipList, by the way. A ZipList is something else.</text>
  </message>
  <message>
    <ts>2017-07-29T10:36:12.580973</ts>
    <user>U3LUC6SNS</user>
    <text>I have the code
```
renderedContent model =
  Html.div [ (HA.property  "innerHTML" &amp;lt;| Json.Encode.string "This is a &amp;lt;strong&amp;gt;Test!&amp;lt;/strong&amp;gt;")  ] []
```
which is called in the (`style-elements`) view by
```
named "content" (html (Debug.log "renderedContent" (renderedContent model)))
```
Oddly, it leads to a stack overflow.  Where should I look to find the trouble?</text>
  </message>
  <message>
    <ts>2017-07-29T10:45:49.629295</ts>
    <user>U6DQCTZT2</user>
    <text>&lt;@U6EAT2Z37&gt; &lt;https://www.youtube.com/watch?v=IcgmSRJHu_8&amp;amp;t=894s&gt; using Zip List here, but he might be wrong.</text>
  </message>
  <message>
    <ts>2017-07-29T10:59:27.698357</ts>
    <user>U6FFMA51S</user>
    <text>I'm reducing a commutative function (application order doesn't matter). Should I use `foldl` or `foldr`?</text>
  </message>
  <message>
    <ts>2017-07-29T11:00:29.705142</ts>
    <user>U2J1FUQTZ</user>
    <text>How do I insert a `&amp;lt;br&amp;gt;` tag in a text? Something like `text "one&amp;lt;br&amp;gt;two&amp;gt;` does not work</text>
  </message>
  <message>
    <ts>2017-07-29T11:03:24.721145</ts>
    <user>U6FFMA51S</user>
    <text>(Beginner myself) but I think maybe something like `Html.div [Html.text "one", &lt;http://Html.br|Html.br&gt;, Html.text "two"]` would work</text>
  </message>
  <message>
    <ts>2017-07-29T11:06:52.739401</ts>
    <user>U6FFMA51S</user>
    <text>I don't see `br` defined, so maybe that should be modified to `Html.div [Html.text "one", Html.node "br" [] [], Html.text "two"]`</text>
  </message>
  <message>
    <ts>2017-07-29T11:07:54.744609</ts>
    <user>U6FFMA51S</user>
    <text>Scratch that, I found it &lt;http://package.elm-lang.org/packages/elm-lang/html/latest/Html#br&gt;</text>
  </message>
  <message>
    <ts>2017-07-29T11:08:04.745417</ts>
    <user>U6GGSMDFZ</user>
    <text>(also beginner) A little more defined that will compile would be ```Html.div [] [ Html.text "one" &lt;http://Html.br|Html.br&gt; [][] Html.text "two"]```</text>
  </message>
  <message>
    <ts>2017-07-29T11:08:24.747151</ts>
    <user>U6GGSMDFZ</user>
    <text>or drop the Html bit if you are ```import Html exposing (..)``` (all)</text>
  </message>
  <message>
    <ts>2017-07-29T11:09:55.754246</ts>
    <user>U6GGSMDFZ</user>
    <text>&lt;@U6FFMA51S&gt; in your examples the first list passed to div is for is attributes, the second list is it's contents - ie ```div [attrs][contents]```</text>
  </message>
  <message>
    <ts>2017-07-29T11:10:19.756340</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U6FFMA51S&gt; `foldl`</text>
  </message>
  <message>
    <ts>2017-07-29T11:16:29.790267</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://ellie-app.com/3SwJD9vjQ59a1/0&gt; &amp;lt;- though you should only bother if you're writing library code; it's unlikely to matter much compared to the overhead of rendering stuff. If it might matter, benchmark. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-29T11:25:31.837361</ts>
    <user>U6FFMA51S</user>
    <text>I didn't know about the benchmark package.

I was just asking to develop "good habits"</text>
  </message>
  <message>
    <ts>2017-07-29T11:30:17.861768</ts>
    <user>U3SJEDR96</user>
    <text>:thumbsup: </text>
  </message>
  <message>
    <ts>2017-07-29T12:37:28.229905</ts>
    <user>U6GB56346</user>
    <text>```
neverText : Html Never
neverText = text "never dispatch message"
```

This can be compiled.

```
htmlNever : Html msg -&amp;gt; Html Never
htmlNever elem = elem
```

But this cannot. Both `Html msg` to `Html Never`.
Why?</text>
  </message>
  <message>
    <ts>2017-07-29T12:42:03.255602</ts>
    <user>U2ABT6UKF</user>
    <text>I am a beginner. I understand basic programming concepts. I am having trouble finding a resource to learn elm. One that will in the end show practicle examples to use moving forward.</text>
  </message>
  <message>
    <ts>2017-07-29T12:48:24.289284</ts>
    <user>U6FFMA51S</user>
    <text>&lt;@U6GB56346&gt; I note that the following also compiles: ```
htmlNever : Html msg -&amp;gt; Html Never
htmlNever elem = text "never dispatch message"
```</text>
  </message>
  <message>
    <ts>2017-07-29T13:00:23.352839</ts>
    <user>U6GB56346</user>
    <text>&lt;@U6FFMA51S&gt; Yep. My understanding is that `text` is `Html msg` which contains placeholder type, so it is inferred to `Html Never`. But why `elem` is not inferred to the final type?</text>
  </message>
  <message>
    <ts>2017-07-29T14:07:05.710021</ts>
    <user>U4ZK5BVK6</user>
    <text>&lt;@U2ABT6UKF&gt; &lt;https://guide.elm-lang.org/&gt; helped me get a good grasp on the basics. Have you tried it?</text>
  </message>
  <message>
    <ts>2017-07-29T14:12:24.737343</ts>
    <user>U4ZK5BVK6</user>
    <text>hi folks, do you know if there is a way in elm to split the return of a view function? example:
```
view : Model -&amp;gt; Html.Html Msg
view model =
  div [onClick IClicked] [ text "example"]

-- extracting HTML and Msg separately
extract Model -&amp;gt; (Html.Html, Msg)
extract model =
  case view model of
    Html.Html Msg (html, msg) -&amp;gt;
      (html, msg)
    _ -&amp;gt;
      (div [] [], IClicked)
```

Reason i want to do something like this, is that I have a view method that returns a "LoginMsg" and i need to translate the into a "Msg" but I see no way to access the LoginMsg returned by the view function :disappointed:. Thoughts?</text>
  </message>
  <message>
    <ts>2017-07-29T14:27:58.817564</ts>
    <user>U3FJSB596</user>
    <text>&lt;@U4ZK5BVK6&gt; Have you tried using `Html.map`</text>
  </message>
  <message>
    <ts>2017-07-29T14:28:25.819904</ts>
    <user>U4ZK5BVK6</user>
    <text>never heard of it, digging into the docs now :smile:</text>
  </message>
  <message>
    <ts>2017-07-29T14:28:59.823216</ts>
    <user>U3FJSB596</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/html/2.0.0/Html#map&gt;</text>
  </message>
  <message>
    <ts>2017-07-29T14:44:02.899481</ts>
    <user>U4ZK5BVK6</user>
    <text>&lt;@U3FJSB596&gt; definitely cleaner, can you see any way to make it a bit more dynamic? Aka, dropping the mandatory case statement for msg inside transformLoginMsg? My original implementation was making use of `onInput LoginMsg &amp;lt;&amp;lt; OnPassInput` but i doubt this is applicable here</text>
  </message>
  <message>
    <ts>2017-07-29T14:45:44.908031</ts>
    <user>U4ZK5BVK6</user>
    <text>&lt;@U3FJSB596&gt; regardless, thanks a lot for pointing to Html.map, that's definitely handy for cases like this. Also if you think my approach is not "Elm enough" let me know, I am still trying to shed my procedural ways lol</text>
  </message>
  <message>
    <ts>2017-07-29T14:50:00.929544</ts>
    <user>U3FJSB596</user>
    <text>`LoginMsg` is already a function of type `Login -&amp;gt; Msg` so no need to create another one.</text>
  </message>
  <message>
    <ts>2017-07-29T14:50:05.930061</ts>
    <user>U4ZK5BVK6</user>
    <text>wait a second, LoginMsg is a function??? wat... lol</text>
  </message>
  <message>
    <ts>2017-07-29T14:50:14.930756</ts>
    <user>U3FJSB596</user>
    <text>Yeah</text>
  </message>
  <message>
    <ts>2017-07-29T14:50:18.931147</ts>
    <user>U4ZK5BVK6</user>
    <text>thats so cool</text>
  </message>
  <message>
    <ts>2017-07-29T14:51:31.937770</ts>
    <user>U4ZK5BVK6</user>
    <text>so types defined with `type Abc` are functions that construct their own type by passing their bodies to it</text>
  </message>
  <message>
    <ts>2017-07-29T14:51:48.939102</ts>
    <user>U3FJSB596</user>
    <text>`Authenticate`, `OnUserInput`, and `OnPassInput` are also functions of type `Login`, `String -&amp;gt; Login`, and `String -&amp;gt; Login` respectively</text>
  </message>
  <message>
    <ts>2017-07-29T14:52:27.942267</ts>
    <user>U4ZK5BVK6</user>
    <text>huh, awesome, this actually explains a lot</text>
  </message>
  <message>
    <ts>2017-07-29T14:52:53.944220</ts>
    <user>U4ZK5BVK6</user>
    <text>time to rewrite most of my code now that i understand this a bit better lol</text>
  </message>
  <message>
    <ts>2017-07-29T14:53:17.946150</ts>
    <user>U3FJSB596</user>
    <text>That why you are able to use them in the `onInput` function (which has a function as its first argument)</text>
  </message>
  <message>
    <ts>2017-07-29T14:53:50.948623</ts>
    <user>U3LUC6SNS</user>
    <text>I am getting this error (in javascript console).  No doubt my use of ports is responsible.  How to track down the trouble? (I know how to reproduce the error).
```
app.js:15240 Uncaught TypeError: Cannot read property 'childNodes' of undefined
    at addDomNodesHelp (app.js:15240)
    at addDomNodesHelp (app.js:15248)
    at addDomNodesHelp (app.js:15248)
    at addDomNodesHelp (app.js:15248)
    at addDomNodesHelp (app.js:15248)
    at addDomNodesHelp (app.js:15248)
    at addDomNodesHelp (app.js:15248)
    at addDomNodesHelp (app.js:15248)
    at addDomNodesHelp (app.js:15236)
    at addDomNodes (app.js:15167)
```</text>
  </message>
  <message>
    <ts>2017-07-29T14:53:58.949214</ts>
    <user>U4ZK5BVK6</user>
    <text>it makes sense, but given they were capitalized i never thought of considering them functions, guess i was making one too many assumptions</text>
  </message>
  <message>
    <ts>2017-07-29T14:56:18.960522</ts>
    <user>U4ZK5BVK6</user>
    <text>&lt;@U3LUC6SNS&gt; maybe there are better methods out there, but I'd start by sprinkling Debug.crash around the area you think the problem is to pinpoint the location that is causing the issue</text>
  </message>
  <message>
    <ts>2017-07-29T14:57:34.966435</ts>
    <user>U4ZK5BVK6</user>
    <text>&lt;@U3LUC6SNS&gt; then once you know for sure what bit of code is causing the issue, maybe do a tiny example that reproduces it with minimal code so we can take a peek and try to understand how to help better?</text>
  </message>
  <message>
    <ts>2017-07-29T15:05:19.007094</ts>
    <user>U3LUC6SNS</user>
    <text>Thanks, I will give that a try</text>
  </message>
  <message>
    <ts>2017-07-29T16:03:30.289287</ts>
    <user>U3LUC6SNS</user>
    <text>Re the `childNodes` error above, it occurs in this code at `X MARKS THE SPOT`:
```
switch (vNode.type)
	{
		case 'tagger':
			var subNode = vNode.node;

			while (subNode.type === "tagger")
			{
				subNode = subNode.node;
			}

			return addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);

		case 'node':
			var vChildren = vNode.children;
			var childNodes = domNode.childNodes; /* X MARKS THE SPOT */
			for (var j = 0; j &amp;lt; vChildren.length; j++)
			{
				low++;
				var vChild = vChildren[j];
				var nextLow = low + (vChild.descendantsCount || 0);
				if (low &amp;lt;= index &amp;amp;&amp;amp; index &amp;lt;= nextLow)
				{
					i = addDomNodesHelp(childNodes[j], vChild, patches, i, low, nextLow, eventNode);
					if (!(patch = patches[i]) || (index = patch.index) &amp;gt; high)
					{
						return i;
					}
				}
				low = nextLow;
			}
```</text>
  </message>
  <message>
    <ts>2017-07-29T16:04:08.292016</ts>
    <user>U635238TG</user>
    <text>hey, &lt;@U2ABT6UKF&gt;, check out &lt;https://github.com/isRuslan/awesome-elm&gt; for a lot of resources. I think the &lt;http://courses.knowthen.com/&gt; free Elm intor course might be a good place to start.</text>
  </message>
  <message>
    <ts>2017-07-29T16:05:08.296315</ts>
    <user>U2ABT6UKF</user>
    <text>Will do thank you.</text>
  </message>
  <message>
    <ts>2017-07-29T16:18:20.356484</ts>
    <user>U6FFMA51S</user>
    <text>&lt;@U6GB56346&gt; I still don't know why it is not inferred, but ran into this in the documentation when I was looking for something else:
&amp;gt; Generally speaking, you do not want Never in your return types though.

&lt;http://package.elm-lang.org/packages/elm-lang/core/latest/Basics&gt;</text>
  </message>
  <message>
    <ts>2017-07-29T16:24:01.381847</ts>
    <user>U4ZK5BVK6</user>
    <text>&lt;@U3LUC6SNS&gt; i am not familiar enough with what you are trying to accomplish here, but my best guess is trying to set a breakpoint using developer tools and follow the stack trace to find why `domNode` is undefined. Seems like this method doesn't have access to the variables you are expecting. Is this code you are showing inside your project or an ELM library? If ELM library, what is the name of it? I think I'd need more context to help properly.</text>
  </message>
  <message>
    <ts>2017-07-29T17:01:20.550828</ts>
    <user>U2ABT6UKF</user>
    <text>If I need to use version .17 of elm would I just edit the package file or is there an nvm like tool for elm?</text>
  </message>
  <message>
    <ts>2017-07-29T18:51:17.000686</ts>
    <user>U3FJSB596</user>
    <text>&lt;@U2ABT6UKF&gt; &lt;https://www.npmjs.com/package/elm-version-manager&gt;</text>
  </message>
  <message>
    <ts>2017-07-29T18:54:49.013645</ts>
    <user>U6FFMA51S</user>
    <text>Where do I put files so elm-reactor's web-server will serve them?</text>
  </message>
  <message>
    <ts>2017-07-29T19:32:59.154893</ts>
    <user>U635238TG</user>
    <text>do you mean just like the normal Elm files and such? You just want to be in the directory containing your files before you run elm-reactor. for things like external css and such I don't think elm-reactor can actually handle that and you would want to use elm-make. i could easily be wrong on that though</text>
  </message>
  <message>
    <ts>2017-07-29T21:29:27.576039</ts>
    <user>U3VCFFH1S</user>
    <text>Hi folks, I have some questions about multiple effects. My goal is to run N commands (eg Random or Http) in parallel, then merge the results and kick off an update.

I understand you can do this in `Task.map` or `Task.sequence`, but I'm looking for parallel execution.

`Cmd.batch` sounds like the parallel part I want, but I can't figure out how to merge the results of the executions.

Here's what I'm working with
&lt;https://github.com/mLuby/cats-elm/blob/cd15226a4892b9d79de91cdb139060ce5bb6cf49/Dice.elm&gt;
and my guess as to what to do.
&lt;https://github.com/mLuby/cats-elm/compare/cd15226...b6a4838&gt;
Any advice?

For what it's worth, I'd accomplish this with `Promise.all([request1, request2, …]).then(resultsList =&amp;gt; …)` in JS.

Can't find anything on this topic online except this, which sidesteps the question: &lt;https://stackoverflow.com/q/39392469/1862046&gt; Here's this same question on Stack Overflow &lt;https://stackoverflow.com/questions/45395712/how-to-merge-multiple-effects-in-elm&gt;</text>
  </message>
  <message>
    <ts>2017-07-29T21:40:05.610684</ts>
    <user>U5P4FLYLE</user>
    <text>Hi. In a package X I have
```module X exposing (Msg(..))
type Msg id =
...
SelectItem id
```
I would like to use SelectItem in my module where I import package X via:
```
import X exposing (Msg(..))
```
What to do in order to use`SelectItem?
I have compilation error that X does not expose SelectItem</text>
  </message>
  <message>
    <ts>2017-07-29T22:49:20.843987</ts>
    <user>U2PTZFKFX</user>
    <text>Hello, anyone sucessfully implemented bulk actions using ELM?</text>
  </message>
  <message>
    <ts>2017-07-29T22:52:09.852753</ts>
    <user>U3VCFFH1S</user>
    <text>&lt;@U2PTZFKFX&gt; what do you mean by bulk actions? Sounds similar to what I'm asking about. I found a sequential solution using `Task.sequence` and am working on a parallel solution using `Cmd.batch`…</text>
  </message>
  <message>
    <ts>2017-07-29T22:53:58.858388</ts>
    <user>U2PTZFKFX</user>
    <text>&lt;@U3VCFFH1S&gt; Bulk actions, i.e in a table, we can have the sorting functionalities, or in an external table, we can Apply functions to selected rows, i.e delete, update, or anything else,</text>
  </message>
  <message>
    <ts>2017-07-29T22:57:09.867876</ts>
    <user>U3VCFFH1S</user>
    <text>I don't quite follow, but there's this sortable table by the BDFL himself &lt;https://github.com/evancz/elm-sortable-table&gt;</text>
  </message>
  <message>
    <ts>2017-07-29T22:59:16.874934</ts>
    <user>U2PTZFKFX</user>
    <text>well, aside the sortable, i m looking for additional functionality, i.e i m loading list of items in a table. i want to bulk update existing cells,</text>
  </message>
  <message>
    <ts>2017-07-29T23:02:23.886086</ts>
    <user>U2PTZFKFX</user>
    <text>let's say, table with 3 columns
`
Actions: update column  newmae: 'mynewname'

id, name, newname
1, testnae, mynewname
2, anothername, mynewname 

and so on...
`</text>
  </message>
  <message>
    <ts>2017-07-29T23:03:07.888493</ts>
    <user>U2PTZFKFX</user>
    <text>so action update column, supposed to add a bulk action and send the updated result to the server</text>
  </message>
  <message>
    <ts>2017-07-29T23:12:06.918001</ts>
    <user>U3VCFFH1S</user>
    <text>Having a hard time understanding what you're getting at. Do you have any code to share, or can you post a minimal example? eg
```
type alias Model = {columns: List String}
type Msg 
  = UpdateColumn String
  | SendToServer 
update msg model = case msg of
  UpdateColumn updatedColumns -&amp;gt;
    ({model | columns: updatedColumns }, sendToServer updatedColumns)
  SendToServer response -&amp;gt;
    (model, Cmd.node)
```</text>
  </message>
  <message>
    <ts>2017-07-29T23:54:59.052434</ts>
    <user>U2PTZFKFX</user>
    <text>sorry for my late reply</text>
  </message>
  <message>
    <ts>2017-07-29T23:55:01.052534</ts>
    <user>U2PTZFKFX</user>
    <text>ok, to further explain, i m loading set of data via api from remote server, which will be contained in a row, later, i want to modify part of all of the record and update back, just like how gmail functionality works, were a user can mark set of messages to be send to trash, or apply some labels to some specific messages,</text>
  </message>
  <message>
    <ts>2017-07-30T00:34:17.188928</ts>
    <user>U3VCFFH1S</user>
    <text>IMO simplest way code-wise would be separately firing off one request per row. But it sounds like you want one request that contains what, row/record IDs and maybe a list of key/value pairs that were changed?

```
request JSON {rowsModified: [
  {rowId: 1, changes: {name: "alice", age: 50}},
  {rowId: 3, changes: {age: 30}} 
]
```
If that's right, then I'd store those changes in your model on the row as it happens, probably in a "changes" key with a `Dict` value so you can add changes.

That way you can construct the above JSON by iterating through the rows and grabbing the data you want.</text>
  </message>
  <message>
    <ts>2017-07-30T00:58:49.264484</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U3VCFFH1S&gt; there isn't currently a way to run Tasks in parallel. It's a limitation of the current Tasks API.</text>
  </message>
  <message>
    <ts>2017-07-30T01:01:02.272279</ts>
    <user>U153UK3FA</user>
    <text>Cmds can run in paralllel, but they can't be sequenced. So you need to handle that yourself in your `update`</text>
  </message>
  <message>
    <ts>2017-07-30T02:31:52.544962</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U2PTZFKFX&gt; please don't ask _every_ question in multiple channels :)</text>
  </message>
  <message>
    <ts>2017-07-30T03:05:25.647759</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U6FFMA51S&gt; start elm-reactor at the same path you have `elm-package.json`. Files are resolved relative to that root. So `localhost:8000/src/Main.elm` will compile and load that file. `localhost:8000/static/foo.css` will load `static/foo.css`. There's a magical `/_compile/` "prefix" that compiles and returns the compiled file as JS, rather than the default `compile to HTML`, too - &lt;https://blog.ilias.xyz/elm-reactor-and-custom-html-9e7143553807&gt;</text>
  </message>
  <message>
    <ts>2017-07-30T03:06:46.652100</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U3LUC6SNS&gt; it does sound as if an Elm-controlled dom node was changed or replaced somehow.. Hard to say exactly what goes wrong, but does feel like a bad JS interaction..</text>
  </message>
  <message>
    <ts>2017-07-30T03:48:26.786875</ts>
    <user>U4872964V</user>
    <text>&lt;@U3VCFFH1S&gt; If all your random values are in a list like that, you can use the `Random.list` function to generate all of them at the same time though. But I'm guessing your question is more general.</text>
  </message>
  <message>
    <ts>2017-07-30T03:53:41.803679</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U6GB56346&gt; it's not being inferred to be `Never`, but rather, since its a free type variable, it can be anything, including `Never`. If the type signature says "it _is_ `Never`", then the compiler will happily comply and say "sure, that's a `Never`"</text>
  </message>
  <message>
    <ts>2017-07-30T05:12:47.063596</ts>
    <user>U2PTZFKFX</user>
    <text>ok, thanks let me look into it</text>
  </message>
  <message>
    <ts>2017-07-30T05:14:56.069839</ts>
    <user>U24HQ3RJ7</user>
    <text>hi.. i am following example in readme of &lt;https://github.com/rtfeldman/elm-css&gt; but i do not see any css applied in UI.
i have MyCss.elm and using it in view.elm.. everything compiles..
grep in index.html gives :
```
└─ $ ▶ grep FF0000 index.html 
							_rtfeldman$elm_css$Css$hex('FF0000')),
```</text>
  </message>
  <message>
    <ts>2017-07-30T05:15:07.070431</ts>
    <user>U24HQ3RJ7</user>
    <text>Is this ok ?</text>
  </message>
  <message>
    <ts>2017-07-30T05:38:37.147732</ts>
    <user>U6GFNSEPR</user>
    <text>quick question: is there named unpacking/pattern matching, like Haskell's `xs@(x:xss)`</text>
  </message>
  <message>
    <ts>2017-07-30T05:52:48.194990</ts>
    <user>U6EAT2Z37</user>
    <text>&lt;@U6GFNSEPR&gt; yeah, it's "as" `(x::xss) as xs` in that case, IIRC</text>
  </message>
  <message>
    <ts>2017-07-30T05:53:50.198284</ts>
    <user>U6GFNSEPR</user>
    <text>oh, excellent, thanks :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-30T05:55:01.201949</ts>
    <user>U6GFNSEPR</user>
    <text>can't seem to manage to do it with a record though</text>
  </message>
  <message>
    <ts>2017-07-30T06:03:49.233284</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U6GFNSEPR&gt; `foo ({ bar, baz } as whatever) = ` should work</text>
  </message>
  <message>
    <ts>2017-07-30T06:07:44.246226</ts>
    <user>U6GFNSEPR</user>
    <text>it does! I always forget the brackets</text>
  </message>
  <message>
    <ts>2017-07-30T06:08:22.248118</ts>
    <user>U6GFNSEPR</user>
    <text>thank you very much, this makes some things nicely readable</text>
  </message>
  <message>
    <ts>2017-07-30T06:09:20.250975</ts>
    <user>U6GFNSEPR</user>
    <text>on a related note, I noticed a bit of magic when you forget to name the record. in my `view : Model -&amp;gt; Html Msg`, the compiler doesn't throw an error if I forget to name my argument `model`</text>
  </message>
  <message>
    <ts>2017-07-30T06:10:00.252948</ts>
    <user>U6GFNSEPR</user>
    <text>so I can use `model`, even though I wrote `view { basePolygon, top, height } = '..`</text>
  </message>
  <message>
    <ts>2017-07-30T06:10:22.254246</ts>
    <user>U3SJEDR96</user>
    <text>no, you probably have a function `model : Model`</text>
  </message>
  <message>
    <ts>2017-07-30T06:10:56.256463</ts>
    <user>U3SJEDR96</user>
    <text>When using `beginnerProgram`, that is the exact reason I name it `initialModel` :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-30T06:17:13.276848</ts>
    <user>U4872964V</user>
    <text>Yeah, it's a bit odd that it's `model` in `beginnerProgram`, but `init` in `program`</text>
  </message>
  <message>
    <ts>2017-07-30T06:17:45.278686</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U24HQ3RJ7&gt; Are you generating a stylesheet or using it inline?</text>
  </message>
  <message>
    <ts>2017-07-30T06:18:08.279893</ts>
    <user>U4872964V</user>
    <text>`model` is just plain wrong naming, in my opinion</text>
  </message>
  <message>
    <ts>2017-07-30T06:19:03.282607</ts>
    <user>U4F64AKQV</user>
    <text>I think it's like that to match up with MV*.</text>
  </message>
  <message>
    <ts>2017-07-30T07:17:02.483410</ts>
    <user>U6GFNSEPR</user>
    <text>ah yeah, it's a bit clearer to name it `initialModel`</text>
  </message>
  <message>
    <ts>2017-07-30T09:46:20.079562</ts>
    <user>U6GB56346</user>
    <text>&lt;@U3SJEDR96&gt; hmm,  do you mean `text` 's signature is *not* a free type variable?</text>
  </message>
  <message>
    <ts>2017-07-30T09:50:49.099440</ts>
    <user>U3SJEDR96</user>
    <text>No, it is. And that can be unified with `Never`. You could have `foo : Html Msg` and define `foo = text "hello"`, too. That would be completely valid. The type of the expression `text "hello"` is still `Html a`.</text>
  </message>
  <message>
    <ts>2017-07-30T09:54:04.114099</ts>
    <user>U3SJEDR96</user>
    <text>It's no more special than saying `foo : List String` with a definition of `foo = []`. That empty list doesn't really "hold" anything, so it could be a `List Never`, too, but since it has type `List a`, the compiler is fine with you saying it is a more specific thing than that, even though the implementation doesn't _need_ to be that constrainted</text>
  </message>
  <message>
    <ts>2017-07-30T09:55:26.119692</ts>
    <user>U3SJEDR96</user>
    <text>```
htmlNever : Html msg -&amp;gt; Html Never
htmlNever elem = elem
```</text>
  </message>
  <message>
    <ts>2017-07-30T09:56:33.125156</ts>
    <user>U3SJEDR96</user>
    <text>the same reasoning for why that doesn't compile is that you can't do this:</text>
  </message>
  <message>
    <ts>2017-07-30T09:56:49.126347</ts>
    <user>U3SJEDR96</user>
    <text>```
foo : List a -&amp;gt; List Never
foo xs = xs
```</text>
  </message>
  <message>
    <ts>2017-07-30T10:00:16.142686</ts>
    <user>U6D3ERLA1</user>
    <text>This is confusing:</text>
  </message>
  <message>
    <ts>2017-07-30T10:00:21.143140</ts>
    <user>U6D3ERLA1</user>
    <text>```
Function `foldr` is expecting the 1st argument to be:

    Point -&amp;gt; Array.Array Row -&amp;gt; Array.Array Row

But it is:

    Point -&amp;gt; Grid
```</text>
  </message>
  <message>
    <ts>2017-07-30T10:00:49.145868</ts>
    <user>U6D3ERLA1</user>
    <text>But my Grid type is:
```
type alias Grid =
    Array.Array Row
```</text>
  </message>
  <message>
    <ts>2017-07-30T10:02:56.155790</ts>
    <user>U3SJEDR96</user>
    <text>right. And the function you give to `Array.foldr` takes an entry of the array you provide as input, as well as the value to accumulate into. For example `List.foldr (\x sum -&amp;gt; sum + x) 0 (List.range 1 4)`</text>
  </message>
  <message>
    <ts>2017-07-30T10:03:49.159685</ts>
    <user>U3SJEDR96</user>
    <text>in your case, it seems like you may be providing a `Point -&amp;gt; Array Row` function, but that's not something `foldr` can work with</text>
  </message>
  <message>
    <ts>2017-07-30T10:05:29.167405</ts>
    <user>U6D3ERLA1</user>
    <text>Hmm... I'm trying to loop through an array of coordinates and return a new updated grid with each iteration...</text>
  </message>
  <message>
    <ts>2017-07-30T10:06:51.174014</ts>
    <user>U6D3ERLA1</user>
    <text>[{x=1,y=2}, {x=2,y=2} ...] &amp;lt;| forEach (\point -&amp;gt; getUpdatedGrid point)</text>
  </message>
  <message>
    <ts>2017-07-30T10:08:30.181199</ts>
    <user>U6D3ERLA1</user>
    <text>Maybe I just missed the accumulator..</text>
  </message>
  <message>
    <ts>2017-07-30T10:10:23.189631</ts>
    <user>U3SJEDR96</user>
    <text>hold up, I'm not sure I'm following. It feels like you want to transform each point in your grid, in which case you'd want a function `Point -&amp;gt; Point` and use `Array.map`</text>
  </message>
  <message>
    <ts>2017-07-30T10:12:42.200276</ts>
    <user>U6D3ERLA1</user>
    <text>```
placeBoat : Point -&amp;gt; Int -&amp;gt; Dir -&amp;gt; String -&amp;gt; Grid -&amp;gt; Grid
placeBoat p l d k grid =
    List.foldr
        (\pt outputGrid -&amp;gt; putGridVal pt k outputGrid)
        grid
        (getCoords p l d [])
```</text>
  </message>
  <message>
    <ts>2017-07-30T10:12:57.201377</ts>
    <user>U6D3ERLA1</user>
    <text>This seems to do it - I think I was missing the accumulator `outputGrid`</text>
  </message>
  <message>
    <ts>2017-07-30T10:13:14.202633</ts>
    <user>U3SJEDR96</user>
    <text>Alright, gotcha :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-30T10:13:20.203096</ts>
    <user>U6D3ERLA1</user>
    <text>And coords is a list not an array :facepalm:</text>
  </message>
  <message>
    <ts>2017-07-30T10:13:50.205250</ts>
    <user>U3SJEDR96</user>
    <text>Luckily, those functions works the same way :wink:</text>
  </message>
  <message>
    <ts>2017-07-30T10:13:56.205631</ts>
    <user>U6D3ERLA1</user>
    <text>yeah</text>
  </message>
  <message>
    <ts>2017-07-30T10:14:29.207917</ts>
    <user>U6D3ERLA1</user>
    <text>This does what I expected once the syntax is correct - I don't know if it's best practice but I've been using reduce in js to generate complex objects</text>
  </message>
  <message>
    <ts>2017-07-30T10:14:57.209862</ts>
    <user>U3SJEDR96</user>
    <text>Folding is all over the place :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-30T10:15:46.213760</ts>
    <user>U3SJEDR96</user>
    <text>Plenty of functions are directly or indirectly defined as a fold, and they're a very basic "construction" block. So that's totally fine :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-30T10:16:37.217476</ts>
    <user>U6D3ERLA1</user>
    <text>Curious why they chose not to call it 'reduce'</text>
  </message>
  <message>
    <ts>2017-07-30T10:16:42.217830</ts>
    <user>U3SJEDR96</user>
    <text>You _may_ wish to `foldl` by default, though. It's sort of the natural direction of folding lists :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-30T10:17:30.221134</ts>
    <user>U3SJEDR96</user>
    <text>Might as well wonder why they call it `reduce` in js</text>
  </message>
  <message>
    <ts>2017-07-30T10:21:33.240295</ts>
    <user>U3SJEDR96</user>
    <text>And yet other languages call it `inject`, `accumulate`, `aggregate` and even `compress` ¯\_(ツ)_/¯</text>
  </message>
  <message>
    <ts>2017-07-30T10:23:34.249953</ts>
    <user>U3SJEDR96</user>
    <text>I think `reduce` as a name implies your making something smaller, which makes sense for stuff like `foldl (+) 0 xs` but less so when you're doing something like you're doing - manipulating a data-structure. I believe F# defines `reduce` as a `fold` where the initial "accumulator" value comes from the input itself, which also makes sense as a way to distinguish</text>
  </message>
  <message>
    <ts>2017-07-30T10:25:53.261191</ts>
    <user>U0JFGGZS6</user>
    <text>So your bulk updates would look something like this?
```
type Msg
    = SendToTrash (List ItemId)
    | LabelSelected Label (List ItemId)
```</text>
  </message>
  <message>
    <ts>2017-07-30T10:33:21.297007</ts>
    <user>U6D3ERLA1</user>
    <text>Sure</text>
  </message>
  <message>
    <ts>2017-07-30T10:33:40.298287</ts>
    <user>U6D3ERLA1</user>
    <text>I guess `reduce` implies turning a list of values into a single value...</text>
  </message>
  <message>
    <ts>2017-07-30T10:47:33.363857</ts>
    <user>U0JFXEUCT</user>
    <text>you could easily `reduce` into a larger list :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-30T10:48:10.366483</ts>
    <user>U6D3ERLA1</user>
    <text>The random module is weird</text>
  </message>
  <message>
    <ts>2017-07-30T10:48:18.367031</ts>
    <user>U6DQCTZT2</user>
    <text>I feel like I'm using message passing wrong. Anybody want to have a look? I'm not sure how to explain it other than this gist: &lt;https://gist.github.com/vikfroberg/31e1c0eae7bc425c632987b0d64e07da&gt;</text>
  </message>
  <message>
    <ts>2017-07-30T10:48:27.367739</ts>
    <user>U6D3ERLA1</user>
    <text>I need to provide a random seed in order to get a random number?</text>
  </message>
  <message>
    <ts>2017-07-30T10:49:33.373010</ts>
    <user>U0JFXEUCT</user>
    <text>&lt;@U6DQCTZT2&gt; you could use `Html.map`</text>
  </message>
  <message>
    <ts>2017-07-30T10:49:48.374142</ts>
    <user>U0JFXEUCT</user>
    <text>wait, you mention that, nvm</text>
  </message>
  <message>
    <ts>2017-07-30T10:51:33.383028</ts>
    <user>U6DQCTZT2</user>
    <text>&lt;@U0JFXEUCT&gt; maybe I don't understand how Html.map fully. But wouldn't that forward AddTodo to Page.update?</text>
  </message>
  <message>
    <ts>2017-07-30T10:51:34.383131</ts>
    <user>U0JFXEUCT</user>
    <text>so, I personally solve this by having a `Common` msg type that I keep separate from both Page and Main</text>
  </message>
  <message>
    <ts>2017-07-30T10:52:27.387597</ts>
    <user>U0JFXEUCT</user>
    <text>ultimately, yeah</text>
  </message>
  <message>
    <ts>2017-07-30T10:52:47.389369</ts>
    <user>U0JFXEUCT</user>
    <text>`Html.map` just calls that constructor on all the event msgs of the view</text>
  </message>
  <message>
    <ts>2017-07-30T10:54:10.396061</ts>
    <user>U0JFXEUCT</user>
    <text>You've checked out the `elm-spa-example`?</text>
  </message>
  <message>
    <ts>2017-07-30T10:54:28.397390</ts>
    <user>U0JFXEUCT</user>
    <text>there's also a great talk about growing elm code, by Richard Feldman at Elm Europe</text>
  </message>
  <message>
    <ts>2017-07-30T10:54:40.398331</ts>
    <user>U6DQCTZT2</user>
    <text>I've seen he's elm-spa-example</text>
  </message>
  <message>
    <ts>2017-07-30T10:54:46.398929</ts>
    <user>U6DQCTZT2</user>
    <text>But haven't seen the talk</text>
  </message>
  <message>
    <ts>2017-07-30T10:55:17.401273</ts>
    <user>U6DQCTZT2</user>
    <text>I'll have a look thanks :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-30T10:56:18.406697</ts>
    <user>U6DQCTZT2</user>
    <text>&lt;@U0JFXEUCT&gt; wait, I've seen it lol :stuck_out_tongue: Do you mind sharing more about your Common type?</text>
  </message>
  <message>
    <ts>2017-07-30T10:56:46.409003</ts>
    <user>U0JFXEUCT</user>
    <text>lol, awesome</text>
  </message>
  <message>
    <ts>2017-07-30T10:58:47.418652</ts>
    <user>U6D3ERLA1</user>
    <text>for instance, can I import the JS Math lib and use Math.random</text>
  </message>
  <message>
    <ts>2017-07-30T11:01:21.433182</ts>
    <user>U0JFXEUCT</user>
    <text>umm, yeah, honestly it's pretty simple. So, Im working on an editor of sorts, where multiple views need to be able to change the selection.

I have a top level file called `Action.elm` which defines a type called:

```
type CommonAction
    = DeleteSelection
    | SetSelection Selection

```

Then in my main, I just have

```
type Msg 
    = Common Action.Common
    | OtherStuff

```

and in the pages that need to do stuff I jsut say 

```
div [onClick (Common DeleteSelection)] []
```</text>
  </message>
  <message>
    <ts>2017-07-30T11:02:06.437129</ts>
    <user>U0JFXEUCT</user>
    <text>you would also have to tag your other events manually instead of using `Html.map`</text>
  </message>
  <message>
    <ts>2017-07-30T11:02:14.437784</ts>
    <user>U6FFMA51S</user>
    <text>Very useful link.</text>
  </message>
  <message>
    <ts>2017-07-30T11:03:06.441979</ts>
    <user>U6DQCTZT2</user>
    <text>Tagging as in the way I use lift in Page.view?</text>
  </message>
  <message>
    <ts>2017-07-30T11:03:15.442702</ts>
    <user>U6FFMA51S</user>
    <text>&lt;https://learnyouanelm.github.io/pages/03-types.html&gt; says that Int is 32 bits. Is that correct?</text>
  </message>
  <message>
    <ts>2017-07-30T11:03:34.444236</ts>
    <user>U0JFXEUCT</user>
    <text>yeah, manually applying stuff</text>
  </message>
  <message>
    <ts>2017-07-30T11:04:53.450493</ts>
    <user>U6DQCTZT2</user>
    <text>&lt;@U0JFXEUCT&gt; I was actually about to do a global action file as well so thanks a lot for sharing :heart:</text>
  </message>
  <message>
    <ts>2017-07-30T11:06:44.459875</ts>
    <user>U0JFXEUCT</user>
    <text>&lt;@U6DQCTZT2&gt;  No problem!  one thing to think about too is "does page actually need it's own update"</text>
  </message>
  <message>
    <ts>2017-07-30T11:06:59.461259</ts>
    <user>U0JFXEUCT</user>
    <text>anyway, good luck!</text>
  </message>
  <message>
    <ts>2017-07-30T11:09:03.470944</ts>
    <user>U6FFMA51S</user>
    <text>I just tried to answer my own question by using `elm-repl` and got: ```
&amp;gt; a=2147483647
2147483647 : number
&amp;gt; a+1
2147483648 : number
```
So there it doesn't look like 32 bits.</text>
  </message>
  <message>
    <ts>2017-07-30T11:13:18.492745</ts>
    <user>U6DQCTZT2</user>
    <text>&lt;@U0JFXEUCT&gt; Yeah, a lot of my pages doesn't need a model or update. Hmm btw, you'll have to tag the common msg as well, right? So basically the views will have something like `Module.view CommonMsg ModuleMsg someModel`?</text>
  </message>
  <message>
    <ts>2017-07-30T11:16:53.510829</ts>
    <user>U0JFXEUCT</user>
    <text>You would, yeah.  Honestly, I just import `CommonMsg` into the view that's using it instead of passing it in.</text>
  </message>
  <message>
    <ts>2017-07-30T11:18:41.520054</ts>
    <user>U6DQCTZT2</user>
    <text>&lt;@U0JFXEUCT&gt; so you're not defining it in `Main.elm` then, since that would create a circular import? Maybe Elm doesn't struggle with that?</text>
  </message>
  <message>
    <ts>2017-07-30T11:19:13.522688</ts>
    <user>U0JFXEUCT</user>
    <text>yeah, CommonMsg is in a separate file</text>
  </message>
  <message>
    <ts>2017-07-30T11:19:28.523923</ts>
    <user>U0JFXEUCT</user>
    <text>and imported by Main and by the Page</text>
  </message>
  <message>
    <ts>2017-07-30T11:19:44.525398</ts>
    <user>U6DQCTZT2</user>
    <text>&lt;@U0JFXEUCT&gt; that's awesome :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-30T12:30:42.879023</ts>
    <user>U3SJEDR96</user>
    <text>No, it's not strictly 32bits. It's 50-something. Under the hood, they're just JS numbers, which are all 64bit floats.</text>
  </message>
  <message>
    <ts>2017-07-30T12:34:40.897930</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U6D3ERLA1&gt; yeah, random is a little harder in fp because functions have to be pure - every time you call a function with the same inputs, it should return the same output without any side-effects. Things that look simple in other languages, like getting a random number or the current time, require a bit more work in Elm and other fp languages because of that. So, random gives you two options, either running a generator as a cmd, or doing manual seed management and using `step`, taking care to store the new seed in your model.</text>
  </message>
  <message>
    <ts>2017-07-30T12:35:22.901329</ts>
    <user>U6D3ERLA1</user>
    <text>this has led me down the ports rabbit-hole</text>
  </message>
  <message>
    <ts>2017-07-30T12:36:13.905943</ts>
    <user>U3SJEDR96</user>
    <text>Ports? What for?</text>
  </message>
  <message>
    <ts>2017-07-30T12:36:20.906544</ts>
    <user>U6D3ERLA1</user>
    <text>well, I'll need this anyway...</text>
  </message>
  <message>
    <ts>2017-07-30T12:36:30.907271</ts>
    <user>U6D3ERLA1</user>
    <text>trying to do something like:</text>
  </message>
  <message>
    <ts>2017-07-30T12:36:49.908807</ts>
    <user>U6D3ERLA1</user>
    <text>```
        var app = Elm.Main.embed(document.body)

        app.ports.fromElm.handle( function (params, callback) {
            callback(null, Math.random());
        })
```</text>
  </message>
  <message>
    <ts>2017-07-30T12:36:53.909123</ts>
    <user>U6D3ERLA1</user>
    <text>no worky</text>
  </message>
  <message>
    <ts>2017-07-30T12:37:02.909791</ts>
    <user>U6D3ERLA1</user>
    <text>unable to get js values into my elm app</text>
  </message>
  <message>
    <ts>2017-07-30T12:37:36.912467</ts>
    <user>U3SJEDR96</user>
    <text>So, you can do basically that but using `Random.generate`, without using ports</text>
  </message>
  <message>
    <ts>2017-07-30T12:38:14.915344</ts>
    <user>U3SJEDR96</user>
    <text>as for the ports syntax, it's `app.ports.fromElm.subscribe(function (arg) { * do something with arg. There is no callback, tho, but you can app.ports.toElm.send(..) it back in * }`</text>
  </message>
  <message>
    <ts>2017-07-30T12:38:50.917976</ts>
    <user>U3SJEDR96</user>
    <text>ports are always async and always "decoupled". It's not two way traffic. It's basically a remote API that you send stuff to, and that may send stuff to you</text>
  </message>
  <message>
    <ts>2017-07-30T12:41:05.929144</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;@U3SJEDR96&gt; How do I read the sent value `app.ports.toElm.send(..)`</text>
  </message>
  <message>
    <ts>2017-07-30T12:42:16.934613</ts>
    <user>U3SJEDR96</user>
    <text>quicky using `Random.generate` &lt;https://ellie-app.com/3SYQyLhXzmha1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-30T12:43:27.939873</ts>
    <user>U3SJEDR96</user>
    <text>you'd have a `port toElm : (String -&amp;gt; msg) -&amp;gt; Sub msg` for example, which would allow sending in a  string. You also have to hook that up to your `main` program using `subscriptions`. I'd advice going through the guide (&lt;https://guide.elm-lang.org/&gt;), especially the section on JS interop</text>
  </message>
  <message>
    <ts>2017-07-30T12:48:13.962661</ts>
    <user>U3SJEDR96</user>
    <text>and adapted for manual seed management, with the initial seed provided on startup through flags: &lt;https://ellie-app.com/3SYQyLhXzmha1/1&gt;</text>
  </message>
  <message>
    <ts>2017-07-30T13:00:00.019878</ts>
    <user>U3SJEDR96</user>
    <text>Note that random generators can be combined using `map`, `andThen` and related functionality to create pretty powerful generators, that make "now give me a random battleship board" completely feasible and calling that would be no more complex than getting a single random number.</text>
  </message>
  <message>
    <ts>2017-07-30T13:01:09.026522</ts>
    <user>U6D3ERLA1</user>
    <text>If I could get a single random number I'd be good</text>
  </message>
  <message>
    <ts>2017-07-30T13:01:26.028049</ts>
    <user>U6D3ERLA1</user>
    <text>`Random.step (&lt;http://Random.int|Random.int&gt; 0 100) (Random.initialSeed 0)`</text>
  </message>
  <message>
    <ts>2017-07-30T13:07:37.060534</ts>
    <user>U3SJEDR96</user>
    <text>It will be random, but it will be the same sequence every time you run your application.</text>
  </message>
  <message>
    <ts>2017-07-30T13:08:13.063526</ts>
    <user>U3SJEDR96</user>
    <text>Well, actually, if you don't save the resulting seed anywhere, you'll just get the same value every time</text>
  </message>
  <message>
    <ts>2017-07-30T13:08:21.064315</ts>
    <user>U6D3ERLA1</user>
    <text>Yes</text>
  </message>
  <message>
    <ts>2017-07-30T13:08:44.066379</ts>
    <user>U3SJEDR96</user>
    <text>So that might as well just say `25`</text>
  </message>
  <message>
    <ts>2017-07-30T13:09:05.067920</ts>
    <user>U6D3ERLA1</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-30T13:09:14.068595</ts>
    <user>U6D3ERLA1</user>
    <text>Another question...</text>
  </message>
  <message>
    <ts>2017-07-30T13:09:19.069046</ts>
    <user>U6D3ERLA1</user>
    <text>why does this not work in repl?</text>
  </message>
  <message>
    <ts>2017-07-30T13:09:30.069902</ts>
    <user>U6D3ERLA1</user>
    <text>$ list = (1,2,3,4)</text>
  </message>
  <message>
    <ts>2017-07-30T13:09:36.070336</ts>
    <user>U6D3ERLA1</user>
    <text>$ (a,b) = list</text>
  </message>
  <message>
    <ts>2017-07-30T13:09:57.072005</ts>
    <user>U6D3ERLA1</user>
    <text>```

5|   a$b$z
     ^^^
Maybe you want one of the following?

    !
    %
    *
    +

```</text>
  </message>
  <message>
    <ts>2017-07-30T13:12:22.085693</ts>
    <user>U3SJEDR96</user>
    <text>heh, yeah, destructuring doesn't work in the repl apparently. Note that you'd need `(a, b, c, d)` in regular code to match on a 4-tuple, but yeah, that's pretty weird nevertheless</text>
  </message>
  <message>
    <ts>2017-07-30T13:12:36.086843</ts>
    <user>U6D3ERLA1</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-07-30T13:12:54.088414</ts>
    <user>U3SJEDR96</user>
    <text>I surmise it does some weird manipulation with the lefthand side variable you try to assign to, so it can keep track of it and print its value and whatnot, and that this fails</text>
  </message>
  <message>
    <ts>2017-07-30T13:13:23.090831</ts>
    <user>U3SJEDR96</user>
    <text>(same with `{ foo, bar } = { foo = "Foo", bar = "bar" }` btw. I'll see if there's a bug for that and log one if there isn't)</text>
  </message>
  <message>
    <ts>2017-07-30T13:20:36.128827</ts>
    <user>U24HQ3RJ7</user>
    <text>i am using it inline.</text>
  </message>
  <message>
    <ts>2017-07-30T13:22:17.137248</ts>
    <user>U3SJEDR96</user>
    <text>Using `Css.compile`? Did the record that is returned by that contain any warnings/errors?</text>
  </message>
  <message>
    <ts>2017-07-30T13:23:42.144105</ts>
    <user>U24HQ3RJ7</user>
    <text>&lt;@U3SJEDR96&gt; is that comment for me. ?
no, i am not using Css.compile..
please see &lt;https://github.com/ashishnegi/be_autonomous/blob/master/Quadrant/View.elm&gt;
and &lt;https://github.com/ashishnegi/be_autonomous/blob/master/MyCss.elm&gt;</text>
  </message>
  <message>
    <ts>2017-07-30T13:26:38.159694</ts>
    <user>U24HQ3RJ7</user>
    <text>if i use it inline.. do i need to call Css.compile ?</text>
  </message>
  <message>
    <ts>2017-07-30T13:26:51.160718</ts>
    <user>U3SJEDR96</user>
    <text>That was indeed a comment to you :slightly_smiling_face: So you need to compile the styles in `MyCss.elm` to a stylesheet,  have a read through this part of the readme: &lt;https://github.com/rtfeldman/elm-css/tree/9.1.0#approach-2-generating-css-files&gt;</text>
  </message>
  <message>
    <ts>2017-07-30T13:31:41.186205</ts>
    <user>U24HQ3RJ7</user>
    <text>but i thought inline css.. does not require generating css explicitly..
Are not Approach 1 and Approach 2 in the guide different appraoches ?</text>
  </message>
  <message>
    <ts>2017-07-30T13:33:30.195717</ts>
    <user>U24HQ3RJ7</user>
    <text>ok.. so creating MyCss.elm is `not` in lining ?</text>
  </message>
  <message>
    <ts>2017-07-30T13:33:56.197849</ts>
    <user>U24HQ3RJ7</user>
    <text>&lt;@U3SJEDR96&gt; ^^ please see above.</text>
  </message>
  <message>
    <ts>2017-07-30T13:35:58.207863</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, though approach 1 uses `style` and `asPairs`, whereas you are setting generated classnames and id's on your DOM elements. Associating those classnames and id's is half-way there, now you just need the generated CSS to match it :wink:</text>
  </message>
  <message>
    <ts>2017-07-30T13:37:43.216197</ts>
    <user>U3SJEDR96</user>
    <text>You _might_ be able to use approach 1, by actually doing things inline, but for example your styling of `body` won't work since that's not part of the rendered view</text>
  </message>
  <message>
    <ts>2017-07-30T13:38:15.218741</ts>
    <user>U3SJEDR96</user>
    <text>Using `elm-css` to compile your properly-typed CSS into a file might end up being a lot easier :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-30T13:41:16.234653</ts>
    <user>U24HQ3RJ7</user>
    <text>thanks &lt;@U3SJEDR96&gt; very helpful.</text>
  </message>
  <message>
    <ts>2017-07-30T13:52:46.293288</ts>
    <user>U5P4FLYLE</user>
    <text>Hi. In a package X I have (and assume cannot change it)
```module X exposing (Msg(..))
type Msg id =
...
| SelectItem id
```
I would like to use SelectItem in my module where I import package X via:
```
import X exposing (Msg(..))

case msg of 
    SelectItem id -&amp;gt; ...
```
I have compilation error that X does not expose SelectItem. What am I missing?</text>
  </message>
  <message>
    <ts>2017-07-30T13:55:05.304677</ts>
    <user>U3SJEDR96</user>
    <text>Are you sure it exposes `Msg(..)` and not just `Msg`?</text>
  </message>
  <message>
    <ts>2017-07-30T13:55:17.305748</ts>
    <user>U5P4FLYLE</user>
    <text>yes, X = elm-autoinput</text>
  </message>
  <message>
    <ts>2017-07-30T13:56:53.313985</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, so that exposes `Msg`, not `Msg(..)`</text>
  </message>
  <message>
    <ts>2017-07-30T13:57:24.316532</ts>
    <user>U3SJEDR96</user>
    <text>if it shows the tags in the docs, you can use them. If shows simple `type Foo`, you cannot :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-30T13:58:37.322898</ts>
    <user>U3SJEDR96</user>
    <text>It's an internal message type, and you're not meant to have access to it. Perhaps you can explain your use-case and someone may be able to help you out? (ping &lt;@U0JFGGZS6&gt;)</text>
  </message>
  <message>
    <ts>2017-07-30T14:03:57.351648</ts>
    <user>U5P4FLYLE</user>
    <text>I would like to take ID or corresponding value upon selection. 
In essence, SelectedItem of Msg in &lt;https://github.com/ericgj/elm-autoinput/blob/2.0.0/src/Menu.elm&gt;
So when this event is generated I want to send it to another event handler and use it
I bet I do not have event access to Menu from Autoinput....</text>
  </message>
  <message>
    <ts>2017-07-30T14:08:15.373290</ts>
    <user>U3SJEDR96</user>
    <text>Correct :slightly_smiling_face: I believe you'd use the `state` function on your model after running the supplied `update` function, and pattern-matching on the resulting `State id`- &lt;http://package.elm-lang.org/packages/ericgj/elm-autoinput/latest/Autoinput#state&gt;</text>
  </message>
  <message>
    <ts>2017-07-30T14:08:52.376222</ts>
    <user>U5P4FLYLE</user>
    <text>right, probably this is the way, thanks &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-30T14:17:53.422038</ts>
    <user>U6F0GT2MB</user>
    <text>trying to setup elm-format on atom editor, but get the message: "Can't find elm-format binary, check your settings".  Anyone else run into this, or how to solve it?</text>
  </message>
  <message>
    <ts>2017-07-30T14:26:38.465922</ts>
    <user>U2PTZFKFX</user>
    <text>ah ok, I get it</text>
  </message>
  <message>
    <ts>2017-07-30T14:27:17.469138</ts>
    <user>U6734UL1Z</user>
    <text>did you npm install it?  i don't think it's bundled with elm</text>
  </message>
  <message>
    <ts>2017-07-30T14:30:10.483692</ts>
    <user>U6734UL1Z</user>
    <text>try running elm-format at a prompt and see if it also gives a similar message</text>
  </message>
  <message>
    <ts>2017-07-30T14:33:50.502985</ts>
    <user>U24HQ3RJ7</user>
    <text>`npm install -g elm-format`</text>
  </message>
  <message>
    <ts>2017-07-30T14:38:31.525989</ts>
    <user>U49HHJE86</user>
    <text>Hi guys :grinning: just another noob question here :sweat_smile: Is that true that you can access to `Record`'s value only with `.key` function? And if so, how can I retrieve all `Record`'s values, for example, into a `List`?:thinking_face:</text>
  </message>
  <message>
    <ts>2017-07-30T14:40:15.534573</ts>
    <user>U0JFXEUCT</user>
    <text>hello!  yes, every field has a corresponding `.field` function which will retrieve that value for you, but if you're looking to grab all values from every field in a record and put them into a lit, you actually probably want a `Dict` instead of a record</text>
  </message>
  <message>
    <ts>2017-07-30T14:40:55.538473</ts>
    <user>U49HHJE86</user>
    <text>Thanks &lt;@U0JFXEUCT&gt; . I thought that way too :grinning:</text>
  </message>
  <message>
    <ts>2017-07-30T14:53:35.602348</ts>
    <user>U6F0GT2MB</user>
    <text>thanks ill give it a try</text>
  </message>
  <message>
    <ts>2017-07-30T20:46:40.440526</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U3SJEDR96&gt;, yes, that sounds right (re bad JS interaction).  This is probably going to be hard to find and correct .. alas, it is critical part of the app.  I will keep investigating,  I do know a precise set of circumstances that produces the error, but I haven't found a way to use that info.  Briefly, I when I change from the Editor page to the Reader page and redisplay the table of contents (a list of documents), all hell breaks lose.  There is no reason for the document list to have changed, and indeed the debugger confirms this …</text>
  </message>
  <message>
    <ts>2017-07-30T21:01:41.555072</ts>
    <user>U3LUC6SNS</user>
    <text>@llias, one odd feature of this bug is that the offending code - a view function - is called twice - once by the Editor page, then by the Reader page.  This is inefficient and bad design, but that is the way it is atm.</text>
  </message>
  <message>
    <ts>2017-07-30T21:02:00.557558</ts>
    <user>U3LUC6SNS</user>
    <text>Does this info provide any clues?</text>
  </message>
  <message>
    <ts>2017-07-30T21:02:46.563396</ts>
    <user>U3LUC6SNS</user>
    <text>Yay, I created a runtime error. But of course I am using ports.</text>
  </message>
  <message>
    <ts>2017-07-30T21:04:51.578860</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U3LUC6SNS&gt; is the error you're getting related to a missing DOM node?</text>
  </message>
  <message>
    <ts>2017-07-30T21:05:24.583045</ts>
    <user>U153UK3FA</user>
    <text>the re-render could be removing a DOM node you've already got a reference to in your JS</text>
  </message>
  <message>
    <ts>2017-07-30T21:12:51.642362</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U153UK3FA&gt;, that is quite possible. The error is 
```
app.js:15249 Uncaught TypeError: Cannot read property 'childNodes' of undefined
    at addDomNodesHelp (app.js:15249)
    at addDomNodesHelp (app.js:15257)
 ... same error many more times ...
    at addDomNodesHelp (app.js:15257)
    at addDomNodesHelp (app.js:15245)
    at addDomNodes (app.js:15176)
```
Love that `undefined`!</text>
  </message>
  <message>
    <ts>2017-07-30T21:13:41.649310</ts>
    <user>U3LUC6SNS</user>
    <text>What is weird is that my JS has to do with rendering the content of documents, not lists of documents.</text>
  </message>
  <message>
    <ts>2017-07-30T21:18:53.691029</ts>
    <user>U153UK3FA</user>
    <text>yep, that looks like it</text>
  </message>
  <message>
    <ts>2017-07-30T21:19:11.693330</ts>
    <user>U153UK3FA</user>
    <text>You might want to use &lt;http://package.elm-lang.org/packages/elm-lang/html/2.0.0/Html-Keyed&gt;</text>
  </message>
  <message>
    <ts>2017-07-30T21:22:20.719416</ts>
    <user>U153UK3FA</user>
    <text>Adding keys to DOM nodes allows Elm to easily match a DOM node with a virtualDOM node after a render. If Elm can match a DOM node then it will update that node instead of possibly removing it and recreating it</text>
  </message>
  <message>
    <ts>2017-07-31T03:09:25.031649</ts>
    <user>U217RLH7G</user>
    <text>hi, I have some dependency issues. Does elm not look for deps in subdirectories? It seems to work on windows but not on my archlinux</text>
  </message>
  <message>
    <ts>2017-07-31T03:10:58.055481</ts>
    <user>U3SJEDR96</user>
    <text>You may want to verify that the casing of your module-names matches the casing of your folders. I.e. `module Foo.Bar` should live in `Foo/Bar.elm`, not `foo/bar.elm` or any variation thereof</text>
  </message>
  <message>
    <ts>2017-07-31T03:13:10.089555</ts>
    <user>U217RLH7G</user>
    <text>&lt;@U3SJEDR96&gt; genius, that was it</text>
  </message>
  <message>
    <ts>2017-07-31T03:15:30.126417</ts>
    <user>U217RLH7G</user>
    <text>omg thanks this was a real headscratcher for me</text>
  </message>
  <message>
    <ts>2017-07-31T04:06:57.054011</ts>
    <user>U5E3DU81K</user>
    <text>Good moaning ladies and gentlemen. Would it be a fair assumption that the majority of questions here in 'beginners' stem from people following the &lt;https://www.elm-tutorial.org/&gt; ?</text>
  </message>
  <message>
    <ts>2017-07-31T04:29:23.503871</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5E3DU81K&gt; not at all. There are a few, of course, but most are just trying out things, making a real project, following the guide, exploring the repl, reading the docs, etc. Then again, I've never actually read that tutorial so maybe I'm misjudging things, but I highly doubt even 1 in 10 questions here stem from that specific tutorial</text>
  </message>
  <message>
    <ts>2017-07-31T04:33:37.593055</ts>
    <user>U5E3DU81K</user>
    <text>Aha. It was my guess (possibly inaccurate) that a lot of the 'new' starting-out projects people currently try out for themselves are built on top of following the elm tutorial first, then tear it down and build it back up to what you actually want.</text>
  </message>
  <message>
    <ts>2017-07-31T04:39:15.709107</ts>
    <user>U3SJEDR96</user>
    <text>But it's just _a_ tutorial. There are severals dozens out there. This one happens to have a nice domain name, but it's in no way "official". The guide (`&lt;http://guide.elm-lang.org|guide.elm-lang.org&gt;`) is "required reading", that tutorial is one of many possible follow-ups.</text>
  </message>
  <message>
    <ts>2017-07-31T04:43:44.803763</ts>
    <user>U2LC0U8JY</user>
    <text>btw, is there a way to make longer MESSAGES fit in the elm-debugger?</text>
  </message>
  <message>
    <ts>2017-07-31T04:45:20.837868</ts>
    <user>U3SJEDR96</user>
    <text>not currently. You do have the option of exporting the file and manually inspecting that, or - alternatively, using something like `case Debug.log "msg" msg of` in your `update` to log all messages to the console</text>
  </message>
  <message>
    <ts>2017-07-31T04:45:37.844193</ts>
    <user>U2LC0U8JY</user>
    <text>kk</text>
  </message>
  <message>
    <ts>2017-07-31T04:45:45.846968</ts>
    <user>U2LC0U8JY</user>
    <text>this is bugging me for some time now :disappointed:</text>
  </message>
  <message>
    <ts>2017-07-31T04:45:56.851179</ts>
    <user>U2LC0U8JY</user>
    <text>makes is really annoying sometimes</text>
  </message>
  <message>
    <ts>2017-07-31T04:46:11.856219</ts>
    <user>U2LC0U8JY</user>
    <text>hope it gets improved for 0.19</text>
  </message>
  <message>
    <ts>2017-07-31T04:47:32.884677</ts>
    <user>U3SJEDR96</user>
    <text>There is an ongoing effort to improve the debugging experience; and I'm convinced this is one of the things they'll tackle</text>
  </message>
  <message>
    <ts>2017-07-31T04:47:42.887981</ts>
    <user>U3SJEDR96</user>
    <text>not sure if it will happen in time for 0.19, tho, but who knwos :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-31T04:48:35.906630</ts>
    <user>U2LC0U8JY</user>
    <text>making the split of the debugger view editable would be enough</text>
  </message>
  <message>
    <ts>2017-07-31T04:48:51.912484</ts>
    <user>U2LC0U8JY</user>
    <text>the rest of the debugger works fine. It may not be as advanced as the redux one</text>
  </message>
  <message>
    <ts>2017-07-31T04:49:00.915684</ts>
    <user>U2LC0U8JY</user>
    <text>but its good enough most of the time</text>
  </message>
  <message>
    <ts>2017-07-31T04:51:38.972404</ts>
    <user>U3SJEDR96</user>
    <text>Well, not quite - the message is actually "compressed" to fit within that very small view - having the split editable wouldn't help without also making the "compression" of the msg responsive to the split size</text>
  </message>
  <message>
    <ts>2017-07-31T04:51:43.974148</ts>
    <user>U4872964V</user>
    <text>&lt;@U2LC0U8JY&gt; you could try &lt;http://package.elm-lang.org/packages/jinjor/elm-time-travel/latest&gt;</text>
  </message>
  <message>
    <ts>2017-07-31T04:52:51.998315</ts>
    <user>U2LC0U8JY</user>
    <text>alright, did not know that &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-31T04:53:23.009576</ts>
    <user>U3SJEDR96</user>
    <text>So it's certainly feasible to make it work like that, it's just a little more involved than changing some css :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-31T05:14:37.471301</ts>
    <user>U5E3DU81K</user>
    <text>how do I get html character entities to show rather than literally display their code?</text>
  </message>
  <message>
    <ts>2017-07-31T05:17:42.537453</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5E3DU81K&gt; can you give an example?</text>
  </message>
  <message>
    <ts>2017-07-31T05:19:29.575195</ts>
    <user>U4872964V</user>
    <text>&lt;@U5E3DU81K&gt; you can just use the unicode directly</text>
  </message>
  <message>
    <ts>2017-07-31T05:20:07.588769</ts>
    <user>U4872964V</user>
    <text>or do you get them from somewhere else?</text>
  </message>
  <message>
    <ts>2017-07-31T08:47:38.506559</ts>
    <user>U6GB56346</user>
    <text>Thanks. Maybe I've understood it.  `[]` is a special kind of `List a` and `text "hello"` is a special kind of `Html msg`. They are nothing so they will become everything.</text>
  </message>
  <message>
    <ts>2017-07-31T08:49:40.554177</ts>
    <user>U3SJEDR96</user>
    <text>Yeah; that works :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-31T09:08:12.035102</ts>
    <user>U6CB44HMF</user>
    <text>Hello all, I am giving a talk on how to understand the Elm Architecture when coming from Redux, and I had a question. `combineReducers` in redux makes the shape of the store, and sets up the global reducer all in one step. Is there any way to do this (set up both the update function and init function when combining multiple reducers) all in one step in Elm?</text>
  </message>
  <message>
    <ts>2017-07-31T09:12:08.141319</ts>
    <user>U4872964V</user>
    <text>&lt;@U6CB44HMF&gt; no, not really. In the Elm architecture, those things are separate. It's a move away from thinking in terms of components</text>
  </message>
  <message>
    <ts>2017-07-31T09:15:17.227818</ts>
    <user>U6CB44HMF</user>
    <text>&lt;@U4872964V&gt; Yeah I thought so, thanks!</text>
  </message>
  <message>
    <ts>2017-07-31T09:16:22.258581</ts>
    <user>U4872964V</user>
    <text>There are a few packages that can help you though, I don't know if any lets you combine the init and update functions though</text>
  </message>
  <message>
    <ts>2017-07-31T09:37:53.897902</ts>
    <user>U4RR7KX45</user>
    <text>I'm trying to delay a command for 2 seconds and can someone help me out with type annotation please?
```
type Msg
   = UpdateText String


updateText : Cmd Msg
updateText =
   sleep 2 (Task.perform UpdateText "hello world")
```
It's saying that the second argument of Task.perform is causing a mismatch</text>
  </message>
  <message>
    <ts>2017-07-31T09:40:27.976263</ts>
    <user>U31FGNWCT</user>
    <text>It seems like you should pass a task as a second parameter, not a string
perform : (a -&amp;gt; msg) -&amp;gt; Task Never a -&amp;gt; Cmd msg</text>
  </message>
  <message>
    <ts>2017-07-31T09:41:25.007498</ts>
    <user>U4RR7KX45</user>
    <text>`Task.perform UpdateText Task "hello world"` ?</text>
  </message>
  <message>
    <ts>2017-07-31T09:41:59.025311</ts>
    <user>U31FGNWCT</user>
    <text>Without "hello world", I guess</text>
  </message>
  <message>
    <ts>2017-07-31T09:42:32.042601</ts>
    <user>U4RR7KX45</user>
    <text>says it can't find variable Task :disappointed:</text>
  </message>
  <message>
    <ts>2017-07-31T09:42:35.044378</ts>
    <user>U3SJEDR96</user>
    <text>`Process.sleep (2 * Time.second) |&amp;gt; Task.perform (\_ -&amp;gt; UpdateText "hello world")`</text>
  </message>
  <message>
    <ts>2017-07-31T09:43:12.063892</ts>
    <user>U3SJEDR96</user>
    <text>the `\_` is to ignore the value `sleep`'s task succeeds with (`()`)</text>
  </message>
  <message>
    <ts>2017-07-31T09:50:31.303319</ts>
    <user>U4RR7KX45</user>
    <text>yes, that worked :slightly_smiling_face: I use Task / Future monad in JS a lot, but I can't figure out how it works in Elm</text>
  </message>
  <message>
    <ts>2017-07-31T09:50:55.317082</ts>
    <user>U4RR7KX45</user>
    <text>so Process.sleep generates some Task right?</text>
  </message>
  <message>
    <ts>2017-07-31T09:51:43.344686</ts>
    <user>U3SJEDR96</user>
    <text>Yep. A Task which succeeds with `()`. To perform it, you have to provide a `Msg` that uses this value, which is what will end up being handed to your `update` on completion</text>
  </message>
  <message>
    <ts>2017-07-31T09:52:16.362956</ts>
    <user>U3SJEDR96</user>
    <text>an alternative way to write the above would be `Process.sleep (2 * Time.second) |&amp;gt; Task.andThen (\_ -&amp;gt; Task.succeed "hello world") |&amp;gt; Task.perform UpdateText`</text>
  </message>
  <message>
    <ts>2017-07-31T09:52:39.375944</ts>
    <user>U4RR7KX45</user>
    <text>is `andThen` the same as `chain` ?</text>
  </message>
  <message>
    <ts>2017-07-31T09:52:47.380174</ts>
    <user>U3SJEDR96</user>
    <text>which waits 2 seconds, then succeeds with `"hello world"`, which you perform with a tag for your `msg` that takes that parameter</text>
  </message>
  <message>
    <ts>2017-07-31T09:54:03.422919</ts>
    <user>U4RR7KX45</user>
    <text>ah so `Task.perform UpdateText (Task.success "hello world")` would've worked I guess</text>
  </message>
  <message>
    <ts>2017-07-31T09:54:31.438334</ts>
    <user>U4RR7KX45</user>
    <text>*succeed</text>
  </message>
  <message>
    <ts>2017-07-31T09:54:33.439278</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, but it would execute immedeatly, since it's not chained with your timeout</text>
  </message>
  <message>
    <ts>2017-07-31T09:54:37.441459</ts>
    <user>U4RR7KX45</user>
    <text>yeah</text>
  </message>
  <message>
    <ts>2017-07-31T09:54:45.445901</ts>
    <user>U4RR7KX45</user>
    <text>ok I get it now, thank you :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-31T09:57:29.540610</ts>
    <user>U4RR7KX45</user>
    <text>so for example's sake, if I do
```
Task.succeed (2 * Time.second)
   |&amp;gt; Task.andThen Process.sleep
   |&amp;gt; Task.perform (\_ -&amp;gt; UpdateText "hello world") 
```
that should work too</text>
  </message>
  <message>
    <ts>2017-07-31T09:58:00.558730</ts>
    <user>U3SJEDR96</user>
    <text>Yap</text>
  </message>
  <message>
    <ts>2017-07-31T09:58:15.567155</ts>
    <user>U4RR7KX45</user>
    <text>nice!</text>
  </message>
  <message>
    <ts>2017-07-31T09:58:18.568960</ts>
    <user>U4RR7KX45</user>
    <text>thank you so much :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-31T10:27:18.588293</ts>
    <user>U4RR7KX45</user>
    <text>one more question please :slightly_smiling_face:

```
updateText : List Project -&amp;gt; Cmd Msg
updateText projects =
     projects
         |&amp;gt; List.map
             (\p -&amp;gt;
                 if p.published then
                     Task.succeed p.title
                  else
                     Task.fail p.title
             )
         |&amp;gt; Task.sequence
         |&amp;gt; Task.perform SetProjects
```
Again I get a type mismatch:

expected:
`Task String (List String) -&amp;gt; a`

actual:
`Task Never (List String) -&amp;gt; Cmd Msg`

how should I search where I'm making a mistake?</text>
  </message>
  <message>
    <ts>2017-07-31T10:30:24.703603</ts>
    <user>U3SJEDR96</user>
    <text>`Task.fail` means you no longer have a task that can never fail</text>
  </message>
  <message>
    <ts>2017-07-31T10:30:34.710396</ts>
    <user>U3SJEDR96</user>
    <text>so you need to use `attempt` to attempt executing it</text>
  </message>
  <message>
    <ts>2017-07-31T10:31:12.733973</ts>
    <user>U3SJEDR96</user>
    <text>which means `SetProjects (Result String (List String)`</text>
  </message>
  <message>
    <ts>2017-07-31T10:31:29.744849</ts>
    <user>U3SJEDR96</user>
    <text>to capture either the `Err "I failed"` or the `Ok [ projects ] `</text>
  </message>
  <message>
    <ts>2017-07-31T10:33:20.811717</ts>
    <user>U4RR7KX45</user>
    <text>I wanted to see how `sequence` works, but I guess I cannot do it without actually using HTTP</text>
  </message>
  <message>
    <ts>2017-07-31T10:37:50.970582</ts>
    <user>U3SJEDR96</user>
    <text>sequence performs the tasks one by one, and gathers up the results. As of `0.19`, it will be a simple `List.foldr (Task.map2 (::)) (succeed []) tasks`, I think</text>
  </message>
  <message>
    <ts>2017-07-31T10:38:44.003773</ts>
    <user>U3SJEDR96</user>
    <text>though that's an implementation detail at best</text>
  </message>
  <message>
    <ts>2017-07-31T10:38:55.010525</ts>
    <user>U6EV3H0N7</user>
    <text>is there a reason there's no Task.parallel &lt;@U3SJEDR96&gt;?</text>
  </message>
  <message>
    <ts>2017-07-31T10:39:08.018172</ts>
    <user>U6EV3H0N7</user>
    <text>(while we're discussing Task.sequence…)</text>
  </message>
  <message>
    <ts>2017-07-31T10:40:47.078666</ts>
    <user>U3SJEDR96</user>
    <text>Not really; other than it's not super-straightforward to implement, and it isn't insurmountable to live without it.</text>
  </message>
  <message>
    <ts>2017-07-31T10:49:00.379498</ts>
    <user>U64FYS317</user>
    <text>Anyone have any links regarding setting up the elm-overlay debugger with webpack dev server?</text>
  </message>
  <message>
    <ts>2017-07-31T10:50:51.449996</ts>
    <user>U4RR7KX45</user>
    <text>so shouldn't this work then?
```
Task.sequence [ Process.sleep (2 * Time.second) ]```</text>
  </message>
  <message>
    <ts>2017-07-31T10:55:35.628691</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U4RR7KX45&gt; it should, and it does. It would return a `Task x (List ())`</text>
  </message>
  <message>
    <ts>2017-07-31T11:07:05.072388</ts>
    <user>U2SR9DL7Q</user>
    <text>I've encountered a problem that's happened before, but I'm not exactly sure why.
```
updatePlayers : Player -&amp;gt; Players -&amp;gt; Players
updatePlayers player players =
    Zipper.mapCurrent (\x -&amp;gt; player) players
```
The compiler complains that mapCurrent wants a `Zipper.Zipper Player` but got `Players`. `Players` _is_ `Zipper.Zipper Player` though.</text>
  </message>
  <message>
    <ts>2017-07-31T11:09:07.146844</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U2SR9DL7Q&gt; `Players` is a type alias for `Zipper Player`?</text>
  </message>
  <message>
    <ts>2017-07-31T11:09:22.156161</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U153UK3FA&gt; yup</text>
  </message>
  <message>
    <ts>2017-07-31T11:10:21.191565</ts>
    <user>U3SJEDR96</user>
    <text>I'm not sure what `(\x -&amp;gt; player)` does, tho?</text>
  </message>
  <message>
    <ts>2017-07-31T11:10:28.195811</ts>
    <user>U3SJEDR96</user>
    <text>(or is supposed to do)</text>
  </message>
  <message>
    <ts>2017-07-31T11:11:52.246528</ts>
    <user>U2SR9DL7Q</user>
    <text>mapCurrent applies a function to the 'current' element in the zipper. So `(\x -&amp;gt; player)` just updates the current player to a new player.</text>
  </message>
  <message>
    <ts>2017-07-31T11:13:10.294330</ts>
    <user>U3SJEDR96</user>
    <text>ah, alright, gotcha. hm. In that case, ¯\_(ツ)_/¯</text>
  </message>
  <message>
    <ts>2017-07-31T11:13:30.306161</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U2SR9DL7Q&gt; so you've got `type alias Players = Zipper.Zipper Player` somewhere?</text>
  </message>
  <message>
    <ts>2017-07-31T11:13:47.317201</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U153UK3FA&gt; yup</text>
  </message>
  <message>
    <ts>2017-07-31T11:14:43.351084</ts>
    <user>U153UK3FA</user>
    <text>What happens if you change the type declarations of `updatePlayers` to take a `Zipper Players`?</text>
  </message>
  <message>
    <ts>2017-07-31T11:18:57.508885</ts>
    <user>U2SR9DL7Q</user>
    <text>fixed it! Everything compiles. And that's terrifying.</text>
  </message>
  <message>
    <ts>2017-07-31T11:19:41.536001</ts>
    <user>U3SJEDR96</user>
    <text>I'd triple check you had a `type alias` rather than a `type`, and that the type alias was accessible at that point, and not overriden elsewhere, etc</text>
  </message>
  <message>
    <ts>2017-07-31T11:21:14.592849</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U3SJEDR96&gt; &lt;@U153UK3FA&gt; an override was the problem. I'd accidentally defined Players twice.</text>
  </message>
  <message>
    <ts>2017-07-31T11:25:27.746264</ts>
    <user>U2SR9DL7Q</user>
    <text>And... it all seems to work. After a pretty big refactor.</text>
  </message>
  <message>
    <ts>2017-07-31T11:25:52.762266</ts>
    <user>U2SR9DL7Q</user>
    <text>Elm: 1000 runtime errors: 0</text>
  </message>
  <message>
    <ts>2017-07-31T11:30:42.942744</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U64FYS317&gt; you need to pass `Debug=true` to the elm-loader options.</text>
  </message>
  <message>
    <ts>2017-07-31T11:31:40.979546</ts>
    <user>U64FYS317</user>
    <text>&lt;@U1AN4JRFV&gt; tyvm</text>
  </message>
  <message>
    <ts>2017-07-31T11:47:53.566086</ts>
    <user>U45C5R6QP</user>
    <text>Is there anyway to define a type as an integer between 0-10? Ie. throw compiler error if I try to set a value of 12</text>
  </message>
  <message>
    <ts>2017-07-31T11:48:50.601038</ts>
    <user>U45C5R6QP</user>
    <text>Guess I could do something like `type BetweenOneAndTen = 0 | 1 | 2 | 3...`</text>
  </message>
  <message>
    <ts>2017-07-31T11:48:58.605643</ts>
    <user>U4872964V</user>
    <text>&lt;@U45C5R6QP&gt;, not in any really practical way, however you can hide your type in a module and have functions that check the values when setting it.</text>
  </message>
  <message>
    <ts>2017-07-31T11:49:27.623326</ts>
    <user>U4872964V</user>
    <text>depends on what operations you want on your integer too</text>
  </message>
  <message>
    <ts>2017-07-31T11:49:59.643102</ts>
    <user>U45C5R6QP</user>
    <text>but then that's going to be a pain down the road… No, this is a rabbit hole I'm not going to jump down into. Thanks for the feedback though :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-31T12:00:51.041397</ts>
    <user>U1A0BJG7J</user>
    <text>Is it possible to pattern match on a type variable? An alternative to the following (not working) snippet:
```
type MyType 
    = Tag1 Int
    | Tag2 String

update : msgType -&amp;gt; modelType -&amp;gt; ( modelType, Cmd msgType )
update msg model =
    case msg of 
        msgType (Tag1 number) -&amp;gt;
            ...
            ( model, Cmd.none )
        _ -&amp;gt;
            ( model, Cmd.none )
```</text>
  </message>
  <message>
    <ts>2017-07-31T12:03:46.149126</ts>
    <user>U1A0BJG7J</user>
    <text>my use case is: I have a library that has some messages, and I would rather just tell the client code to plug the update function of my library after their update function, instead of having to manually handle the tag they use to wrap the messages of the library</text>
  </message>
  <message>
    <ts>2017-07-31T12:05:27.208519</ts>
    <user>U1A0BJG7J</user>
    <text>```
update msg model
    |&amp;gt; Update.Extra.andThen MyLib.update msg
```</text>
  </message>
  <message>
    <ts>2017-07-31T12:09:54.359447</ts>
    <user>U1A0BJG7J</user>
    <text>what I'm trying to get away from is:
```
type Msg 
    = Msg1
    | LibMsg MyLib.Msg

update : Msg -&amp;gt; Model -&amp;gt; ( Model, Cmd Msg )
update msg model =
    case msg of 
        LibMsg libmsg -&amp;gt;
            let 
                (model2, cmd) =
                    MyLib.update libmsg model
            in
                (model2, Cmd.map LibMsg cmd)
```</text>
  </message>
  <message>
    <ts>2017-07-31T12:33:46.159425</ts>
    <user>U60MNG7T7</user>
    <text>Beginner question: Is it possible to run Elm on server-side?</text>
  </message>
  <message>
    <ts>2017-07-31T12:34:00.167564</ts>
    <user>U3SQ42JJW</user>
    <text>people say so :wink:</text>
  </message>
  <message>
    <ts>2017-07-31T12:34:18.177265</ts>
    <user>U60MNG7T7</user>
    <text>without extra tools or packages?</text>
  </message>
  <message>
    <ts>2017-07-31T12:34:44.190684</ts>
    <user>U3SQ42JJW</user>
    <text>I have no clue how the do it. Just heard that they are experimenting with this.</text>
  </message>
  <message>
    <ts>2017-07-31T12:35:27.213599</ts>
    <user>U3SQ42JJW</user>
    <text>Would be curious about this , too</text>
  </message>
  <message>
    <ts>2017-07-31T12:35:33.216801</ts>
    <user>U2U94G0QG</user>
    <text>The most common answer I see to this is "kinda, but that's not what it's for"</text>
  </message>
  <message>
    <ts>2017-07-31T12:35:36.218290</ts>
    <user>U0J1M0F32</user>
    <text>&lt;@U60MNG7T7&gt; &lt;@U3SQ42JJW&gt; It is possible, it requires a bit of tweaking the setup, but its very doable. &lt;https://github.com/zwilias/sudoku-solver&gt;</text>
  </message>
  <message>
    <ts>2017-07-31T12:35:48.224913</ts>
    <user>U0J1M0F32</user>
    <text>&lt;@U3SJEDR96&gt; Could speak more about it then I can.</text>
  </message>
  <message>
    <ts>2017-07-31T12:36:24.243979</ts>
    <user>U0J1M0F32</user>
    <text>Agreed, that its not really what Elm is made for, but for playing around its a fun exercise.</text>
  </message>
  <message>
    <ts>2017-07-31T12:36:54.260382</ts>
    <user>U60MNG7T7</user>
    <text>&lt;@U2U94G0QG&gt; would you explain why not?</text>
  </message>
  <message>
    <ts>2017-07-31T12:37:03.265246</ts>
    <user>U60MNG7T7</user>
    <text>is it because of any design patterns?</text>
  </message>
  <message>
    <ts>2017-07-31T12:37:40.285459</ts>
    <user>U3SQ42JJW</user>
    <text>Is it compiled to javascript as always and then just run in node.js?</text>
  </message>
  <message>
    <ts>2017-07-31T12:37:44.287421</ts>
    <user>U2U94G0QG</user>
    <text>I think because most of the work on Elm is focused on making it good for front-end work, so using it for backend stuff is less mature</text>
  </message>
  <message>
    <ts>2017-07-31T12:38:12.302215</ts>
    <user>U60MNG7T7</user>
    <text>hm, I see</text>
  </message>
  <message>
    <ts>2017-07-31T12:38:34.314357</ts>
    <user>U2U94G0QG</user>
    <text>there is a `Platform.program` that doesn't take a `view`</text>
  </message>
  <message>
    <ts>2017-07-31T12:38:49.322386</ts>
    <user>U2U94G0QG</user>
    <text>so you can make headless things</text>
  </message>
  <message>
    <ts>2017-07-31T12:38:56.326032</ts>
    <user>U4WH8STNX</user>
    <text>&lt;@U60MNG7T7&gt; this is how you can do it right now, it doesn't compile in Ellie because it's not an `Html.program` but you get the idea &lt;https://ellie-app.com/3TrzZNYf4F3a1/0&gt;</text>
  </message>
  <message>
    <ts>2017-07-31T12:39:33.345566</ts>
    <user>U4WH8STNX</user>
    <text>it's not pretty though :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-31T12:40:00.360152</ts>
    <user>U4WH8STNX</user>
    <text>and I agree with Evan, we should make a really nice backend story possible with Elm, once the time has come</text>
  </message>
  <message>
    <ts>2017-07-31T12:40:44.384182</ts>
    <user>U3SQ42JJW</user>
    <text>I would love to use Elm EVERYWHERE !!! :smile:</text>
  </message>
  <message>
    <ts>2017-07-31T12:40:53.388983</ts>
    <user>U3SQ42JJW</user>
    <text>(even in my kitchen)</text>
  </message>
  <message>
    <ts>2017-07-31T12:41:34.411285</ts>
    <user>U4WH8STNX</user>
    <text>&lt;https://imgflip.com/i/1tctnh&gt;</text>
  </message>
  <message>
    <ts>2017-07-31T12:41:53.421067</ts>
    <user>U60MNG7T7</user>
    <text>as a js 'fullstack', I would also like to learn Elm to replace JS everywhere</text>
  </message>
  <message>
    <ts>2017-07-31T12:43:56.486380</ts>
    <user>U4WH8STNX</user>
    <text>I totally get that, the whole ES8+React+Redux+Immutable+Reselet+Recompose+Webpack+... it's kind of sad how all this feature envy bloats the language and it's ecosystem even more when all people really want is Elm :speedyparrot:</text>
  </message>
  <message>
    <ts>2017-07-31T12:52:42.769117</ts>
    <user>U2SR9DL7Q</user>
    <text>There is one advantage to elm not being on the back end. It forces me to narrow the focus of my learning. Part of the horror of the _ES8+React+Redux+Immutable+Reselet+Recompose+Webpack_ hell that &lt;@U4WH8STNX&gt; mentions is that if you're starting, most introductions try and get you to fumble about setting it all up in one fell swoop. The biggest challenge to new developers is rarely ever not understanding logic, it's *failing at configuration*, and quitting due to frustration.</text>
  </message>
  <message>
    <ts>2017-07-31T12:54:54.841573</ts>
    <user>U0F7JPK36</user>
    <text>&lt;@U4WH8STNX&gt; you can use `Platform.program` in ellie, just change your javascript in the HTML tab to call `.worker()` instead of `.fullscreen()`</text>
  </message>
  <message>
    <ts>2017-07-31T12:56:37.898106</ts>
    <user>U60MNG7T7</user>
    <text>true..</text>
  </message>
  <message>
    <ts>2017-07-31T13:00:58.046201</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U60MNG7T7&gt; my scenario really only matters to beginners though, and I agree with you that it would be nice to elm everywhere. I'm currently trying to decide what setup will be best for my applciation's backend, and it's  like, "I wish this could just be elm."</text>
  </message>
  <message>
    <ts>2017-07-31T13:01:15.055924</ts>
    <user>U2SR9DL7Q</user>
    <text>something about elixir's syntax bugs me.</text>
  </message>
  <message>
    <ts>2017-07-31T13:05:26.192421</ts>
    <user>U3HQVHERX</user>
    <text>try go. then you get `go-fmt`. &lt;@U60DVU1PS&gt; will convince you</text>
  </message>
  <message>
    <ts>2017-07-31T13:07:26.255790</ts>
    <user>U4WH8STNX</user>
    <text>&lt;@U2SR9DL7Q&gt; hate to be that guy but what about Haskell :slightly_smiling_face:, if you stick to the coding style that the Elm compiler uses it's not that far off (&lt;https://github.com/elm-lang/elm-compiler&gt;)</text>
  </message>
  <message>
    <ts>2017-07-31T13:09:12.311723</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U4WH8STNX&gt; Now may be a rational time to return to haskell, truly.</text>
  </message>
  <message>
    <ts>2017-07-31T13:09:17.314460</ts>
    <user>U4WH8STNX</user>
    <text>ah, nice, you're of course totally right, I feel stupid now :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-31T13:10:17.346270</ts>
    <user>U4872964V</user>
    <text>problem with haskell is that it's _so much_ going on in there</text>
  </message>
  <message>
    <ts>2017-07-31T13:10:22.349238</ts>
    <user>U2SR9DL7Q</user>
    <text>Go... I hear good things. Mainly that it's a dream for concurrent applications.</text>
  </message>
  <message>
    <ts>2017-07-31T13:10:57.368404</ts>
    <user>U4872964V</user>
    <text>you don't have to use it all of course, but if you are several people working on the product, then it's a bit of a problem</text>
  </message>
  <message>
    <ts>2017-07-31T13:11:07.373704</ts>
    <user>U4WH8STNX</user>
    <text>yeah it does have a lot of overhead</text>
  </message>
  <message>
    <ts>2017-07-31T13:11:40.391360</ts>
    <user>U4WH8STNX</user>
    <text>well conceptual overhead that is</text>
  </message>
  <message>
    <ts>2017-07-31T13:11:40.391540</ts>
    <user>U4872964V</user>
    <text>maybe not a discussion for &lt;#C192T0Q1E|beginners&gt; though</text>
  </message>
  <message>
    <ts>2017-07-31T13:11:51.397153</ts>
    <user>U4WH8STNX</user>
    <text>sure :slightly_smiling_face:, got carried away</text>
  </message>
  <message>
    <ts>2017-07-31T13:12:22.413442</ts>
    <user>U3HQVHERX</user>
    <text>&lt;https://tour.golang.org/welcome/1&gt;</text>
  </message>
  <message>
    <ts>2017-07-31T13:16:02.529485</ts>
    <user>U4WH8STNX</user>
    <text>Fixed: &lt;https://ellie-app.com/3TrzZNYf4F3a1/1&gt;</text>
  </message>
  <message>
    <ts>2017-07-31T13:19:24.639084</ts>
    <user>U0F7JPK36</user>
    <text>Oh no this isn't your fault, the error message for this needs to be way better than it currently is</text>
  </message>
  <message>
    <ts>2017-07-31T13:59:16.968589</ts>
    <user>U6FECHN3B</user>
    <text>I have a question regarding how data is structured within Elm vs in JavaScript.
if I were to pass in an array of Objects from JavaScript to Elm, is a List of Elm records equivalent enough for that to work i.e. passing from JavaScript the following:

```</text>
  </message>
  <message>
    <ts>2017-07-31T13:59:25.973239</ts>
    <user>U6FECHN3B</user>
    <text>```
```</text>
  </message>
  <message>
    <ts>2017-07-31T13:59:27.974560</ts>
    <user>U6FECHN3B</user>
    <text>sorry</text>
  </message>
  <message>
    <ts>2017-07-31T14:00:03.995169</ts>
    <user>U6FECHN3B</user>
    <text>```
[{key: key, value: value}, {key: key, value: value}]
```</text>
  </message>
  <message>
    <ts>2017-07-31T14:00:31.012280</ts>
    <user>U65B9414J</user>
    <text>I'm using Json.Decode.Pipeline . 
`
type alias User =
    { name : String
    , age : Int
    , githubid : Maybe String
    }


userDecoder : Decoder User
userDecoder =
    decode User
        |&amp;gt; required "name" string
        |&amp;gt; required "age" int
        --|&amp;gt; optional "githubid" (nullable string) (Just "")
        |&amp;gt; optional "githubid" (nullable string) Nothing
`</text>
  </message>
  <message>
    <ts>2017-07-31T14:01:00.029237</ts>
    <user>U65B9414J</user>
    <text>commented out line works</text>
  </message>
  <message>
    <ts>2017-07-31T14:01:10.035288</ts>
    <user>U6FECHN3B</user>
    <text>would that be represented in Elm as 

```
type alias itemname =
{ key: String, value: String
}
```</text>
  </message>
  <message>
    <ts>2017-07-31T14:01:11.035998</ts>
    <user>U65B9414J</user>
    <text>replacing Just "" with Nothing fails. Anyone knows why.</text>
  </message>
  <message>
    <ts>2017-07-31T14:01:14.037560</ts>
    <user>U6FECHN3B</user>
    <text>something according to that</text>
  </message>
  <message>
    <ts>2017-07-31T14:01:30.046689</ts>
    <user>U6FECHN3B</user>
    <text>I'm looking to pass in an array of key value pairs via a port</text>
  </message>
  <message>
    <ts>2017-07-31T14:05:17.174307</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U65B9414J&gt; It compiles for me. What error are you getting?</text>
  </message>
  <message>
    <ts>2017-07-31T14:05:40.187100</ts>
    <user>U65B9414J</user>
    <text>&lt;@U48AEBJQ3&gt; The 3rd argument to function `optional` is causing a mismatch.

73|            optional "githubid" (nullable string) Nothing
                                                     ^^^^^^^
Function `optional` is expecting the 3rd argument to be:

    Maybe String

But it is:

    Msg</text>
  </message>
  <message>
    <ts>2017-07-31T14:06:16.207669</ts>
    <user>U65B9414J</user>
    <text>I have pasted the whole code here &lt;https://gist.github.com/neerajdotname/b7deadea90d42b49e0b4f41d1b5488bb&gt;</text>
  </message>
  <message>
    <ts>2017-07-31T14:07:21.244175</ts>
    <user>U65B9414J</user>
    <text>If key is missing or is null then I'm trying to get Nothing in return and not Just "".</text>
  </message>
  <message>
    <ts>2017-07-31T14:08:32.282682</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U6FECHN3B&gt; Ports have to decode incoming data. Elm helps out a bit by providing automated ways to decode simple structures. If you had a port of type `port myIncomingPort : (List ItemName -&amp;gt; msg) -&amp;gt; Sub msg` it should work? I usually just do `port myIncomingPort : (Value -&amp;gt; msg) -&amp;gt; Sub msg` and write my own decoders.</text>
  </message>
  <message>
    <ts>2017-07-31T14:09:13.304705</ts>
    <user>U6FECHN3B</user>
    <text>in this case it would be a very simple structure just of key value pairs of type String</text>
  </message>
  <message>
    <ts>2017-07-31T14:09:15.306229</ts>
    <user>U6FECHN3B</user>
    <text>nothing fancy</text>
  </message>
  <message>
    <ts>2017-07-31T14:11:03.365461</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U65B9414J&gt; You have overridden the definition of `Nothing`</text>
  </message>
  <message>
    <ts>2017-07-31T14:11:29.378974</ts>
    <user>U65B9414J</user>
    <text>Really. where.</text>
  </message>
  <message>
    <ts>2017-07-31T14:11:40.384777</ts>
    <user>U48AEBJQ3</user>
    <text>In the definition of `type Msg`</text>
  </message>
  <message>
    <ts>2017-07-31T14:12:08.400170</ts>
    <user>U65B9414J</user>
    <text>Oh man. That's silly.</text>
  </message>
  <message>
    <ts>2017-07-31T14:12:14.403414</ts>
    <user>U65B9414J</user>
    <text>Thanks for the pointer.</text>
  </message>
  <message>
    <ts>2017-07-31T14:12:59.429139</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U6FECHN3B&gt; Then try it with `(List ItemName -&amp;gt; msg) -&amp;gt; Sub msg` I *think* that will work, but not able to try it right now.</text>
  </message>
  <message>
    <ts>2017-07-31T14:13:30.446068</ts>
    <user>U65B9414J</user>
    <text>&lt;@U48AEBJQ3&gt; Thanks again. It's working. &lt;https://monosnap.com/file/VWsso6ttRcTSaKlt1rWoKtwewbT8zO&gt;</text>
  </message>
  <message>
    <ts>2017-07-31T15:07:56.247678</ts>
    <user>U45C5R6QP</user>
    <text>Anyone else having issues with latest version of Atom and the Elmjutsu package?</text>
  </message>
  <message>
    <ts>2017-07-31T15:08:21.260030</ts>
    <user>U45C5R6QP</user>
    <text>I'm getting this error: &lt;http://share.ahrengot.com/EWTg0B4ry&gt;</text>
  </message>
  <message>
    <ts>2017-07-31T15:09:35.297075</ts>
    <user>U6FECHN3B</user>
    <text>is there a way to get the elm-compiler to not spit out semicolons in the compiled javascript? we use es6 javascript and our linter blows up at the sign of the es5 style javascript the compiler generates</text>
  </message>
  <message>
    <ts>2017-07-31T15:11:21.350406</ts>
    <user>U45C5R6QP</user>
    <text>Looks like it was just an atom issue. This solved it: &lt;https://github.com/icetee/remote-ftp/issues/802#issuecomment-309363157&gt;</text>
  </message>
  <message>
    <ts>2017-07-31T15:12:36.389680</ts>
    <user>U3SJEDR96</user>
    <text>I would recommend not linting compiled artefacts.</text>
  </message>
  <message>
    <ts>2017-07-31T15:12:53.398310</ts>
    <user>U6FECHN3B</user>
    <text>that's a good point too</text>
  </message>
  <message>
    <ts>2017-07-31T15:14:07.436058</ts>
    <user>U3SJEDR96</user>
    <text>I've had that, too; though in my case it was partially due to sharing config between multiple machines using `mackup` + dropbox. Or at least, it stopped happening _constantly_ after turning `mackup` off</text>
  </message>
  <message>
    <ts>2017-07-31T15:15:54.489759</ts>
    <user>U3SJEDR96</user>
    <text>There's little point to failing your build because a compiled artefact makes different stylistic choices than your team does - which is what semicolons are. It's not really an ES5 vs ES6 thing, even. Though I don't see Elm generating ES6 for quite some time, as we tend to aim for compatibility, to the point of providing a polyfill for requestAnimationFrame</text>
  </message>
  <message>
    <ts>2017-07-31T15:16:47.516787</ts>
    <user>U3SJEDR96</user>
    <text>So yeah, that would be my recommendation. If that's not possible for whatever reason, you could look into post-processing</text>
  </message>
  <message>
    <ts>2017-07-31T15:17:45.545712</ts>
    <user>U6FECHN3B</user>
    <text>it won't fail a build fortunately just ugly in our tooling</text>
  </message>
  <message>
    <ts>2017-07-31T15:17:57.551656</ts>
    <user>U6FECHN3B</user>
    <text>semi-new to the Elm world so figured I'd ask</text>
  </message>
  <message>
    <ts>2017-07-31T15:18:03.555007</ts>
    <user>U3SJEDR96</user>
    <text>Fair enough! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-31T15:18:44.575747</ts>
    <user>U3SJEDR96</user>
    <text>But yeah, I'd exclude the compiled artefacts from linting and VCS, generally</text>
  </message>
  <message>
    <ts>2017-07-31T15:21:08.648886</ts>
    <user>U6FECHN3B</user>
    <text>excluded indeed</text>
  </message>
  <message>
    <ts>2017-07-31T15:31:27.967161</ts>
    <user>U6D3ERLA1</user>
    <text>What do I do if I end up with nested `Maybe`s ex from doing chained list operations</text>
  </message>
  <message>
    <ts>2017-07-31T15:32:34.001157</ts>
    <user>U6D3ERLA1</user>
    <text>```
    case (List.drop (List.length xs - 2) xs) of -- Maybe.Maybe
        Just val -&amp;gt;
            Just val
        Nothing -&amp;gt;
            Nothing
```</text>
  </message>
  <message>
    <ts>2017-07-31T15:34:44.066928</ts>
    <user>U3SJEDR96</user>
    <text>`List.drop` doesn't return a `Maybe`, tho? Some more context might help clarify things :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-31T15:38:31.179450</ts>
    <user>U3SJEDR96</user>
    <text>nested maybe's are _generally_ something you avoid using `Maybe.andThen`, though if you do end up with a nested `Maybe`; you can `Maybe.andThen identity` to unwrap it a single level</text>
  </message>
  <message>
    <ts>2017-07-31T15:41:21.263268</ts>
    <user>U0LPMPL2U</user>
    <text>:thumbsup: to using `Maybe.andThen` to chain operations that return Maybe</text>
  </message>
  <message>
    <ts>2017-07-31T15:48:48.487296</ts>
    <user>U6D3ERLA1</user>
    <text>Ahh that's how to get the values out of the `Maybe`</text>
  </message>
  <message>
    <ts>2017-07-31T16:08:57.112626</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U6D3ERLA1&gt; `andThen identity` only works on nested maybe's, though - a single level of maybe is either pattern matching or using `Maybe.withDefault (defaultValue)`</text>
  </message>
  <message>
    <ts>2017-07-31T16:09:24.126294</ts>
    <user>U611WQPL4</user>
    <text>I've read (and reread) a lot of the Intro to Elm documentation.  But I keep struggling with one part.  You can see it on the MVCTodo example.  &lt;https://github.com/evancz/elm-todomvc/blob/master/Todo.elm#L26-L33&gt;.    What does `main : Program (Maybe Model) Model Msg` mean?   I can follow the syntax when there are `-&amp;gt;` - i.e. `updateWithStorage : Msg -&amp;gt; Model -&amp;gt; ( Model, Cmd Msg )` but not that type.</text>
  </message>
  <message>
    <ts>2017-07-31T16:09:41.134961</ts>
    <user>U611WQPL4</user>
    <text>^^ You see it with lists too.  `List Int`, `List a` and `Cmd msg`.  Is this a compound type?</text>
  </message>
  <message>
    <ts>2017-07-31T16:10:58.174329</ts>
    <user>U3SJEDR96</user>
    <text>it means you're dealing with a type that is _parametrized_. In case of `List`, it means it holds a type of value, which doesn't matter to how the list is actually implemented, but _does_ matter when actually using such a `List`</text>
  </message>
  <message>
    <ts>2017-07-31T16:11:55.203204</ts>
    <user>U611WQPL4</user>
    <text>Yeah, you see that in C++ with generics/templates.  - i.e. `List&amp;lt;Int&amp;gt;`.</text>
  </message>
  <message>
    <ts>2017-07-31T16:12:14.212865</ts>
    <user>U3SJEDR96</user>
    <text>in terms of `List`, it is essentially a union type `type List a = Empty | Cons a (List a)`, meaning it's either empty, or holds a value of type `a` and then a nested list that also contains either nothing a value of type `a` and some mroe values etc etc</text>
  </message>
  <message>
    <ts>2017-07-31T16:12:49.230912</ts>
    <user>U3SJEDR96</user>
    <text>`Maybe` is a little simpler: it's literally `type Maybe a = Nothing | Just a`.</text>
  </message>
  <message>
    <ts>2017-07-31T16:13:04.238447</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, it's pretty similar to generics, indeed</text>
  </message>
  <message>
    <ts>2017-07-31T16:13:34.253732</ts>
    <user>U611WQPL4</user>
    <text>Thanks &lt;@U3SJEDR96&gt;.  Disclaimer:  I've asked this question before.  :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-31T16:15:00.296427</ts>
    <user>U3SJEDR96</user>
    <text>now, `Program` is a little special, as it is an opaque type and we don't know what it actually looks like. However, you can pass it a number of functions; and the types of those fucntions are also variable. A `Program flags model msg` is a `Program` that sends `flags` to its `init` function, which will return a `model` and a `Cmd msg`, has an `update : msg -&amp;gt; model -&amp;gt; (model, Cmd msg)`, and so on, all with *consistent* types for all those type parameters, throughout</text>
  </message>
  <message>
    <ts>2017-07-31T16:15:42.317065</ts>
    <user>U3SJEDR96</user>
    <text>This allows creating a compile-time guarantee that you cannot possible have an initial model that is simply an `Int`, together with an `update` function that only works on `String`s</text>
  </message>
  <message>
    <ts>2017-07-31T16:16:51.352093</ts>
    <user>U3SJEDR96</user>
    <text>I do remember the "leap" from `List a` to `Program flags model msg` to be a significant one, though, so it's okay if you _don't quite get it just yet_!</text>
  </message>
  <message>
    <ts>2017-07-31T16:19:19.426445</ts>
    <user>U6G2ACUSX</user>
    <text>How do you read that then? 'List String' is a list of strings. So then 'Program flags model msg' is a Program of flags of model of msg.. or?</text>
  </message>
  <message>
    <ts>2017-07-31T16:20:07.450442</ts>
    <user>U6G2ACUSX</user>
    <text>(I also found this hard to grasp when reading the intro)</text>
  </message>
  <message>
    <ts>2017-07-31T16:20:18.455761</ts>
    <user>U4872964V</user>
    <text>&lt;@U6G2ACUSX&gt; it's just the types for flags, model and messages that your program uses that go into those places</text>
  </message>
  <message>
    <ts>2017-07-31T16:20:33.463905</ts>
    <user>U4872964V</user>
    <text>So Elm knows what types your program uses</text>
  </message>
  <message>
    <ts>2017-07-31T16:24:29.585570</ts>
    <user>U6G2ACUSX</user>
    <text>Ok, I guess html.program is a special case, so I don't really need to understand it. Especially since I'm completely new to Elm and functional programming in general. But how would you create a function that has that sort of signature? Can you even?</text>
  </message>
  <message>
    <ts>2017-07-31T16:25:38.621331</ts>
    <user>U6G2ACUSX</user>
    <text>Oooor, it's not a function at all? It's a type?</text>
  </message>
  <message>
    <ts>2017-07-31T16:25:39.621680</ts>
    <user>U4872964V</user>
    <text>&lt;@U6G2ACUSX&gt; when you define types, you can add type parameters to them, yes</text>
  </message>
  <message>
    <ts>2017-07-31T16:26:09.637088</ts>
    <user>U4872964V</user>
    <text>It's like you can have small "holes" in your type that is filled in with the parameters</text>
  </message>
  <message>
    <ts>2017-07-31T16:26:17.641568</ts>
    <user>U3SJEDR96</user>
    <text>Sure - `threeTuple : a -&amp;gt; b -&amp;gt; c -&amp;gt; (a, b, c)`. Or `flags`, `model` and `msg` :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-31T16:26:43.654793</ts>
    <user>U3SJEDR96</user>
    <text>but indeed, `Program` is a type, not a function</text>
  </message>
  <message>
    <ts>2017-07-31T16:26:51.658574</ts>
    <user>U6G2ACUSX</user>
    <text>Oh! It's like a constructor?</text>
  </message>
  <message>
    <ts>2017-07-31T16:27:22.674182</ts>
    <user>U3SJEDR96</user>
    <text>in this case, it's a type that holds functions for interfacing with your program, and those functions must have signatures that match one another in a specific way, but can work on any type of value otherwise</text>
  </message>
  <message>
    <ts>2017-07-31T16:27:39.683025</ts>
    <user>U4872964V</user>
    <text>&lt;@U6G2ACUSX&gt; yes, it's like a type constructor</text>
  </message>
  <message>
    <ts>2017-07-31T16:28:24.705958</ts>
    <user>U6G2ACUSX</user>
    <text>Wow. That was a lightbulb experience. Thank you so much!</text>
  </message>
  <message>
    <ts>2017-07-31T16:29:30.739908</ts>
    <user>U3SJEDR96</user>
    <text>I.e. `program` doesn't really care _what_ your `model` is, as long as it is consistent between `init`, `update`, `view` and `subscriptions` (which are the four functions you can pass to `Html.program`)</text>
  </message>
  <message>
    <ts>2017-07-31T16:30:43.778012</ts>
    <user>U611WQPL4</user>
    <text>My lightbulb is still kind of flickering.  But it will be AWESOME when I get it.  :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-31T16:36:57.970200</ts>
    <user>U3SJEDR96</user>
    <text>The type parameters are there to ensure you only use functions that make sense, given the types of things they get to work with. I.e. it doesn't make a whole lot of sense to calculate the greatest common divisor of a list of strings, the imaginary function `gcd` would work on a `List Int`, rather than a `List String` or a `List a`. On the other hand, calculating the number of entries in a list is independent of what type of data you're actually storing in them, so `List.length` works on `List a`. Having it _only_ work for a `List String` would be pretty annoying</text>
  </message>
  <message>
    <ts>2017-07-31T16:38:35.020477</ts>
    <user>U3SJEDR96</user>
    <text>as another example, a `Dict comparable value` allows making a dictionary where you can store an association between a `comparable` key and any type of `value`, as long as they're all the same type; so when you retrieve an element from a dictionary, you _know_ it will be of a certain type, it is guaranteed.</text>
  </message>
  <message>
    <ts>2017-07-31T16:45:59.249581</ts>
    <user>U37HUSJ4R</user>
    <text>can anyone help me with something pretty simple? 
I have the following state: 

```
type alias CallControls =
    { paused : Bool
    }


type alias Call =
    { number : String
    , controls : Maybe CallControls
    }
```

And I am trying to write an update function for paused? I can get it to work if it was `    , controls : CallControls` but struggling with the maybe</text>
  </message>
  <message>
    <ts>2017-07-31T16:46:09.254800</ts>
    <user>U37HUSJ4R</user>
    <text>```
updatePaused: Bool -&amp;gt; Call -&amp;gt; Call
updatePaused newValue ({controls} as call) =
  { call | controls = { controls | paused = newValue } }
```</text>
  </message>
  <message>
    <ts>2017-07-31T16:46:25.262936</ts>
    <user>U37HUSJ4R</user>
    <text>how can I wrap this in a `Just`?</text>
  </message>
  <message>
    <ts>2017-07-31T16:47:48.305154</ts>
    <user>U3SJEDR96</user>
    <text>`{ call | controls = Maybe.map (\controls -&amp;gt; { controls | paused = newValue }) call.controls }`</text>
  </message>
  <message>
    <ts>2017-07-31T16:48:01.311676</ts>
    <user>U3SJEDR96</user>
    <text>unless you also want that to do something when `controls = Nothing`....</text>
  </message>
  <message>
    <ts>2017-07-31T16:48:38.330340</ts>
    <user>U3SJEDR96</user>
    <text>in which case you'd go `{ call | controls = Just { paused = newValue } }`</text>
  </message>
  <message>
    <ts>2017-07-31T16:48:53.338097</ts>
    <user>U3SJEDR96</user>
    <text>but then that's a little unrealistic :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-31T16:49:37.360388</ts>
    <user>U37HUSJ4R</user>
    <text>brilliant thanks</text>
  </message>
  <message>
    <ts>2017-07-31T16:49:45.364296</ts>
    <user>U37HUSJ4R</user>
    <text>I also think I might look into lenses</text>
  </message>
  <message>
    <ts>2017-07-31T16:49:54.369020</ts>
    <user>U37HUSJ4R</user>
    <text>because I have quite a few nested props</text>
  </message>
  <message>
    <ts>2017-07-31T16:50:09.376578</ts>
    <user>U3SJEDR96</user>
    <text>eeeeh. I'd wait with that until you have a very firm grip on doing it without the</text>
  </message>
  <message>
    <ts>2017-07-31T16:50:33.388296</ts>
    <user>U0LPMPL2U</user>
    <text>You probably don't need to nest as much as you think you do</text>
  </message>
  <message>
    <ts>2017-07-31T16:50:44.394038</ts>
    <user>U0LPMPL2U</user>
    <text>Coming from OO, I tended to nest records _way_ too much</text>
  </message>
  <message>
    <ts>2017-07-31T16:51:14.409220</ts>
    <user>U37HUSJ4R</user>
    <text>maybe not, I am probs going to end up going 2/3 levels deep</text>
  </message>
  <message>
    <ts>2017-07-31T16:51:51.428675</ts>
    <user>U37HUSJ4R</user>
    <text>which isn't that many?</text>
  </message>
  <message>
    <ts>2017-07-31T16:53:24.475577</ts>
    <user>U3SJEDR96</user>
    <text>Heh, yeah, true. "encapsulate all the thing", I thought, before realizing that encapsulating records doesn't make much sense, since I can simply define a `func : { a | pauzed : Maybe Bool } -&amp;gt; { a | pauzed : Maybe Bool }`. Encapsulating into types, on the other hand, helps in making impossible states impossible, whereas nesting records doesn't do much other than make them harder to work with</text>
  </message>
  <message>
    <ts>2017-07-31T16:54:05.496255</ts>
    <user>U37HUSJ4R</user>
    <text>my thinking is certainly around impossible states</text>
  </message>
  <message>
    <ts>2017-07-31T16:54:27.507544</ts>
    <user>U37HUSJ4R</user>
    <text>for example I don't want paused to be true if user isn't on a call</text>
  </message>
  <message>
    <ts>2017-07-31T16:54:33.510846</ts>
    <user>U3SJEDR96</user>
    <text>that imaginary `fun` above can _only_ touch `pauzed`, and is not aware of anything else in your record. So that basically creates the same guarantee as nesting it</text>
  </message>
  <message>
    <ts>2017-07-31T16:54:34.511087</ts>
    <user>U37HUSJ4R</user>
    <text>so I have something like</text>
  </message>
  <message>
    <ts>2017-07-31T16:54:38.513184</ts>
    <user>U37HUSJ4R</user>
    <text>```
type Status
    = Available
    | Wrap
    | OnCall Call
```</text>
  </message>
  <message>
    <ts>2017-07-31T16:55:07.527803</ts>
    <user>U3SJEDR96</user>
    <text>That might be extended to `Status = ... | OnCall Bool Call` though</text>
  </message>
  <message>
    <ts>2017-07-31T16:55:26.537674</ts>
    <user>U3SJEDR96</user>
    <text>which guarantees that you only have that bool if you're actually in a call</text>
  </message>
  <message>
    <ts>2017-07-31T16:55:50.550253</ts>
    <user>U3SJEDR96</user>
    <text>come to think of it `OnCall Bool Call` is basically `OnCall Call | Paused Call` anyway</text>
  </message>
  <message>
    <ts>2017-07-31T16:55:55.552830</ts>
    <user>U37HUSJ4R</user>
    <text>true, but this is just a simple example</text>
  </message>
  <message>
    <ts>2017-07-31T16:56:02.556789</ts>
    <user>U37HUSJ4R</user>
    <text>i also have transfer, hold etc</text>
  </message>
  <message>
    <ts>2017-07-31T16:56:20.565980</ts>
    <user>U6FFD2QG0</user>
    <text>Hi everyone, I'm running into something that seems like it should have a simple solution, but I can't figure out what that is. I need to construct an instance of `Cmd msg` as an alternative to `Cmd.none` in an if branch. I'm not using any outside effects or anything. Here's the relevant code snippet:
```
update : Msg -&amp;gt; Model -&amp;gt; (Model, Cmd Msg)
update msg model =
  case msg of
    Tick newTime -&amp;gt;
      let
          newTime = decTimer model
          newCmd = if newTime.activeTimer &amp;gt; 0
                     then Cmd.none
                     else Cmd.Cmd TimerDone -- help!
      in
          (newTime, newCmd)
```</text>
  </message>
  <message>
    <ts>2017-07-31T16:58:13.624838</ts>
    <user>U0LPMPL2U</user>
    <text>Is this to prevent duplication between the `Tick` and `TimerDone` branches of your `update` ?</text>
  </message>
  <message>
    <ts>2017-07-31T16:58:30.633432</ts>
    <user>U6FFD2QG0</user>
    <text>yeah, basically</text>
  </message>
  <message>
    <ts>2017-07-31T16:58:50.644127</ts>
    <user>U3SJEDR96</user>
    <text>I would suggest taking the contents of your `TimeDone` branch, putting it into a separate function, and replace that with
```
TimerDone -&amp;gt;
    timerDone model
Tick newTime -&amp;gt;
    if .activeTime (decTimer model) &amp;gt; 0 then (newTime, Cmd.none) else timerDone model
````</text>
  </message>
  <message>
    <ts>2017-07-31T16:58:54.646044</ts>
    <user>U0LPMPL2U</user>
    <text>I'd suggest extracting the common logic to a helper function and calling that from both branches instead of trying to send a `Msg`</text>
  </message>
  <message>
    <ts>2017-07-31T16:59:27.662918</ts>
    <user>U6FFD2QG0</user>
    <text>fair enough. Is this just not a typical way that a Cmd would be used?</text>
  </message>
  <message>
    <ts>2017-07-31T16:59:46.672731</ts>
    <user>U0LPMPL2U</user>
    <text>You almost never want to just send Msg to yourself</text>
  </message>
  <message>
    <ts>2017-07-31T16:59:56.677854</ts>
    <user>U0LPMPL2U</user>
    <text>Msg is meant to represent events from the outside world</text>
  </message>
  <message>
    <ts>2017-07-31T16:59:58.679030</ts>
    <user>U3SJEDR96</user>
    <text>No, a `Cmd msg` represents something for the runtime to execute asynchronously, after which it can call your `update` with the resulting `Msg`</text>
  </message>
  <message>
    <ts>2017-07-31T17:00:04.681726</ts>
    <user>U6FFD2QG0</user>
    <text>ok, that's good to know</text>
  </message>
  <message>
    <ts>2017-07-31T17:00:26.694440</ts>
    <user>U6FFD2QG0</user>
    <text>thanks!</text>
  </message>
  <message>
    <ts>2017-07-31T17:00:58.710974</ts>
    <user>U3SJEDR96</user>
    <text>you don't really need the runtime in order to call a function, though, so using a function to abstract the behaviour of "what should happen when your timer is done" is definitely the recommended approach</text>
  </message>
  <message>
    <ts>2017-07-31T17:07:31.903216</ts>
    <user>U37HUSJ4R</user>
    <text>If I wanted to make this more generic:
```
updatePaused : Bool -&amp;gt; Call -&amp;gt; Call
updatePaused newValue ({ controls } as call) =
    { call
        | controls =
            Maybe.map
                (\controls -&amp;gt; { controls | paused = newValue })
                call.controls
    }
```</text>
  </message>
  <message>
    <ts>2017-07-31T17:07:55.913668</ts>
    <user>U37HUSJ4R</user>
    <text>so for example `paused` could be any field</text>
  </message>
  <message>
    <ts>2017-07-31T17:11:34.016857</ts>
    <user>U3SJEDR96</user>
    <text>There is no generic record-updater syntax; sadly</text>
  </message>
  <message>
    <ts>2017-07-31T17:12:11.033757</ts>
    <user>U37HUSJ4R</user>
    <text>:cry:</text>
  </message>
  <message>
    <ts>2017-07-31T17:12:52.052323</ts>
    <user>U37HUSJ4R</user>
    <text>So if I have `hold`, `pause`, `hangup` for example I need 3 functions and 24 lines of code :disappointed:</text>
  </message>
  <message>
    <ts>2017-07-31T17:14:51.104636</ts>
    <user>U3SJEDR96</user>
    <text>Not entirely true; but there's another thing... Can a call be simultaneously on hold, paused and hung up?</text>
  </message>
  <message>
    <ts>2017-07-31T17:15:10.113182</ts>
    <user>U37HUSJ4R</user>
    <text>this is more state of the buttons</text>
  </message>
  <message>
    <ts>2017-07-31T17:15:22.118623</ts>
    <user>U37HUSJ4R</user>
    <text>so if I call is on hold then the state is</text>
  </message>
  <message>
    <ts>2017-07-31T17:15:43.128388</ts>
    <user>U37HUSJ4R</user>
    <text>```
paused : True,
hangup : True,
paused : False
```</text>
  </message>
  <message>
    <ts>2017-07-31T17:16:14.142569</ts>
    <user>U37HUSJ4R</user>
    <text>but yes it could be all three</text>
  </message>
  <message>
    <ts>2017-07-31T17:16:21.145534</ts>
    <user>U37HUSJ4R</user>
    <text>multiple different valid states here</text>
  </message>
  <message>
    <ts>2017-07-31T17:16:54.160038</ts>
    <user>U3SJEDR96</user>
    <text>I'd try to think of a better way to model those, though. In the meantime, you can use something like 
```
updateControls : (Controls -&amp;gt; Controls) -&amp;gt; Call -&amp;gt; Call
updateControls op call =
    { call | controls = Maybe.map op call.controls }
```</text>
  </message>
  <message>
    <ts>2017-07-31T17:17:16.169369</ts>
    <user>U37HUSJ4R</user>
    <text>I'd LOVE a better way to model these</text>
  </message>
  <message>
    <ts>2017-07-31T17:17:26.173450</ts>
    <user>U37HUSJ4R</user>
    <text>but really can't think of one :disappointed:</text>
  </message>
  <message>
    <ts>2017-07-31T17:18:12.193812</ts>
    <user>U3SJEDR96</user>
    <text>```
updatePaused  : Bool -&amp;gt; Call -&amp;gt; Call
updatePaused newValue call =
    updateControls (\controls -&amp;gt; { controls | paused = newValue }) call
```</text>
  </message>
  <message>
    <ts>2017-07-31T17:19:17.223471</ts>
    <user>U3SJEDR96</user>
    <text>you'd still end up with 15 lines of code, including annotations, but it would be pretty clear what they all did. And if you decided that `call.controls` should be a `Result` rather than a `Maybe`, that's only a single line to change</text>
  </message>
  <message>
    <ts>2017-07-31T17:21:17.277300</ts>
    <user>U3SJEDR96</user>
    <text>as for your control-states.. I think having a `Status = Ongoing | Paused | OnHold | Hangup` (or something similar, depending on requirements) would make sense, with functions `canPause : Status -&amp;gt; Bool` etc</text>
  </message>
  <message>
    <ts>2017-07-31T17:22:19.304299</ts>
    <user>U3SJEDR96</user>
    <text>Though it might make sense for a call to be both onhold and paused, in which case that would be a fifth case</text>
  </message>
  <message>
    <ts>2017-07-31T17:23:02.323049</ts>
    <user>U3SJEDR96</user>
    <text>The thing is that it might be possible to represent your possible states as a union type of possible states, and derive the available options in your view from that</text>
  </message>
  <message>
    <ts>2017-07-31T17:26:49.422287</ts>
    <user>U37HUSJ4R</user>
    <text>I have thought about this, do you think its ok to end up with something like:
`Status = Ongoing | Paused | OnHold | Hangup | OnHoldAndPaused | SomethingElseHere | SomeOtherStateAndSomethignElse`</text>
  </message>
  <message>
    <ts>2017-07-31T17:28:51.476173</ts>
    <user>U23SA861Y</user>
    <text>seems like you want two types actually, one for when the phone is not active and then when it is active, what the sub state is</text>
  </message>
  <message>
    <ts>2017-07-31T17:30:15.513404</ts>
    <user>U3SJEDR96</user>
    <text>Yeah. Alternatively, there could be a "status on this end" and "status on the other end", with the possible actions derived from that combination</text>
  </message>
  <message>
    <ts>2017-07-31T17:30:17.513856</ts>
    <user>U37HUSJ4R</user>
    <text>thinking out loud, maybe I want a `List Status`</text>
  </message>
  <message>
    <ts>2017-07-31T17:30:31.520312</ts>
    <user>U37HUSJ4R</user>
    <text>so I have `[Hold, Hangup]`</text>
  </message>
  <message>
    <ts>2017-07-31T17:30:41.525250</ts>
    <user>U37HUSJ4R</user>
    <text>and if they are in the List then they are active</text>
  </message>
  <message>
    <ts>2017-07-31T17:30:58.532349</ts>
    <user>U3SJEDR96</user>
    <text>That feels hard to control and easy to slip impossibilities in</text>
  </message>
  <message>
    <ts>2017-07-31T17:31:10.537336</ts>
    <user>U3SJEDR96</user>
    <text>`[ Paused, Paused, Paused ]` say what now?</text>
  </message>
  <message>
    <ts>2017-07-31T17:31:17.540563</ts>
    <user>U37HUSJ4R</user>
    <text>true</text>
  </message>
  <message>
    <ts>2017-07-31T17:31:23.543071</ts>
    <user>U3SJEDR96</user>
    <text>"it's _really_, _really_, *really* paused"</text>
  </message>
  <message>
    <ts>2017-07-31T17:31:34.547402</ts>
    <user>U37HUSJ4R</user>
    <text>:stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-07-31T17:32:08.562316</ts>
    <user>U23SA861Y</user>
    <text>double plus paused</text>
  </message>
  <message>
    <ts>2017-07-31T17:32:14.565036</ts>
    <user>U3SJEDR96</user>
    <text>Anyway, I'm going to attempt sleeping :wave:</text>
  </message>
  <message>
    <ts>2017-07-31T17:32:44.577365</ts>
    <user>U23SA861Y</user>
    <text>:wave:</text>
  </message>
  <message>
    <ts>2017-07-31T17:33:11.588413</ts>
    <user>U23SA861Y</user>
    <text>have you worked out all the possible sets of combined states</text>
  </message>
  <message>
    <ts>2017-07-31T17:33:30.596627</ts>
    <user>U37HUSJ4R</user>
    <text>thanks for the help &lt;@U3SJEDR96&gt;</text>
  </message>
  <message>
    <ts>2017-07-31T17:33:35.598405</ts>
    <user>U23SA861Y</user>
    <text>also what does `Paused` indicate</text>
  </message>
  <message>
    <ts>2017-07-31T17:33:56.606905</ts>
    <user>U37HUSJ4R</user>
    <text>that the call recording is paused</text>
  </message>
  <message>
    <ts>2017-07-31T17:34:06.610928</ts>
    <user>U37HUSJ4R</user>
    <text>so on the UI there are 3 buttons</text>
  </message>
  <message>
    <ts>2017-07-31T17:34:23.618503</ts>
    <user>U37HUSJ4R</user>
    <text>a hang up button, a pause button and a hold button (to play hold music and mute users mic)</text>
  </message>
  <message>
    <ts>2017-07-31T17:34:45.627847</ts>
    <user>U37HUSJ4R</user>
    <text>lets pretend I have all my possible combined states</text>
  </message>
  <message>
    <ts>2017-07-31T17:34:55.631850</ts>
    <user>U37HUSJ4R</user>
    <text>(I can't remember them all now :P)</text>
  </message>
  <message>
    <ts>2017-07-31T17:35:19.641474</ts>
    <user>U0LPMPL2U</user>
    <text>The hung up status is already captured by whether the call is active or not right?</text>
  </message>
  <message>
    <ts>2017-07-31T17:35:19.641573</ts>
    <user>U23SA861Y</user>
    <text>if if you are in a call, it can be onhold, paused or both</text>
  </message>
  <message>
    <ts>2017-07-31T17:35:43.651627</ts>
    <user>U37HUSJ4R</user>
    <text>no, if a customer is on hold, then hang up will be false</text>
  </message>
  <message>
    <ts>2017-07-31T17:36:06.661002</ts>
    <user>U0LPMPL2U</user>
    <text>That's the display value though, not the model state</text>
  </message>
  <message>
    <ts>2017-07-31T17:36:14.664216</ts>
    <user>U23SA861Y</user>
    <text>`CallStatus = {onHold: Bool, recordingPaused: Bool}`
`CallState = HungUp | Active CallStatus`</text>
  </message>
  <message>
    <ts>2017-07-31T17:36:15.664656</ts>
    <user>U37HUSJ4R</user>
    <text>(you can't hangup on a customer if they are on hold for example)</text>
  </message>
  <message>
    <ts>2017-07-31T17:37:07.685674</ts>
    <user>U0LPMPL2U</user>
    <text>Could you have:
```
type Call
  = HungUp
  | Active PauseStatus HoldStatus
```</text>
  </message>
  <message>
    <ts>2017-07-31T17:37:13.687929</ts>
    <user>U23SA861Y</user>
    <text>also works</text>
  </message>
  <message>
    <ts>2017-07-31T17:37:32.695869</ts>
    <user>U23SA861Y</user>
    <text>you can limit impossible states, but impossible state transitions need to be encoded into the update</text>
  </message>
  <message>
    <ts>2017-07-31T17:38:06.709687</ts>
    <user>U37HUSJ4R</user>
    <text>interesting</text>
  </message>
  <message>
    <ts>2017-07-31T17:38:13.712465</ts>
    <user>U37HUSJ4R</user>
    <text>so what would `PauseStatus`?</text>
  </message>
  <message>
    <ts>2017-07-31T17:38:52.728278</ts>
    <user>U0LPMPL2U</user>
    <text>```
type PauseStatus = Paused | Unpaused
type HoldStatus = OnHold | Live
```</text>
  </message>
  <message>
    <ts>2017-07-31T17:39:18.738371</ts>
    <user>U23SA861Y</user>
    <text>bools would also work there with type aliases</text>
  </message>
  <message>
    <ts>2017-07-31T17:39:35.745173</ts>
    <user>U23SA861Y</user>
    <text>the named constructors are a bit more descriptive however</text>
  </message>
  <message>
    <ts>2017-07-31T17:39:46.749734</ts>
    <user>U0LPMPL2U</user>
    <text>The type gives you extra safety though</text>
  </message>
  <message>
    <ts>2017-07-31T17:41:52.800579</ts>
    <user>U0LPMPL2U</user>
    <text>because you can't accidentally pass the hold boolean when you meant to pass the paused boolean</text>
  </message>
  <message>
    <ts>2017-07-31T17:42:58.826515</ts>
    <user>U0LPMPL2U</user>
    <text>You might also model this as:
```
type RecordingStatus = Paused | Recording

type Call
  = HungUp
  | OnHold RecordingStatus
  | Active RecordingStatus
```</text>
  </message>
  <message>
    <ts>2017-07-31T17:43:36.840842</ts>
    <user>U0LPMPL2U</user>
    <text>That way the tags on `Call` represent all the call states, each of which may or may not have an associated `RecordingStatus`</text>
  </message>
  <message>
    <ts>2017-07-31T17:44:10.854285</ts>
    <user>U37HUSJ4R</user>
    <text>very interesting!</text>
  </message>
  <message>
    <ts>2017-07-31T17:44:55.872341</ts>
    <user>U37HUSJ4R</user>
    <text>guess to make it more confusing though :wink: what happens if I need the statues to be `Maybe`?</text>
  </message>
  <message>
    <ts>2017-07-31T17:45:08.877959</ts>
    <user>U37HUSJ4R</user>
    <text>because we don't always know the state of the call</text>
  </message>
  <message>
    <ts>2017-07-31T17:45:11.878891</ts>
    <user>U37HUSJ4R</user>
    <text>eg its loading</text>
  </message>
  <message>
    <ts>2017-07-31T17:45:31.886762</ts>
    <user>U37HUSJ4R</user>
    <text>or maybe just add a constructor for `Loading`?</text>
  </message>
  <message>
    <ts>2017-07-31T17:45:41.890769</ts>
    <user>U0LPMPL2U</user>
    <text>yup</text>
  </message>
  <message>
    <ts>2017-07-31T17:46:42.915492</ts>
    <user>U37HUSJ4R</user>
    <text>is there a point you'd think this is getting silly though? for example:
`  | Active PhoneNumber PauseStatus HoldStatus TransferStatus SomethingElse More`</text>
  </message>
  <message>
    <ts>2017-07-31T17:47:04.923861</ts>
    <user>U23SA861Y</user>
    <text>at some point I might drop to a record instead of a list</text>
  </message>
  <message>
    <ts>2017-07-31T17:47:29.933638</ts>
    <user>U0LPMPL2U</user>
    <text>`HoldStatus` and `TransferStatus` are both tied to call state, not an active call right?</text>
  </message>
  <message>
    <ts>2017-07-31T17:47:33.935363</ts>
    <user>U23SA861Y</user>
    <text>probably at anything more than two</text>
  </message>
  <message>
    <ts>2017-07-31T17:47:50.942284</ts>
    <user>U37HUSJ4R</user>
    <text>no, it's an active call</text>
  </message>
  <message>
    <ts>2017-07-31T17:49:15.975881</ts>
    <user>U0LPMPL2U</user>
    <text>Hmmmm, I was thinking something like:

```
type Call
  = HungUp
  | Loading
  | OnHold RecordingStatus
  | Transfer
  | Active RecordingStatus
```</text>
  </message>
  <message>
    <ts>2017-07-31T17:49:26.980551</ts>
    <user>U0LPMPL2U</user>
    <text>All of these are different states that a call could be in</text>
  </message>
  <message>
    <ts>2017-07-31T17:49:39.985414</ts>
    <user>U37HUSJ4R</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-07-31T17:49:46.988042</ts>
    <user>U0LPMPL2U</user>
    <text>I'm thinking `RecordingStatus` only makes sense for `Active` calls</text>
  </message>
  <message>
    <ts>2017-07-31T17:49:54.991002</ts>
    <user>U37HUSJ4R</user>
    <text>I'd agree</text>
  </message>
  <message>
    <ts>2017-07-31T17:52:38.055487</ts>
    <user>U37HUSJ4R</user>
    <text>I think that last type is pretty much spot on</text>
  </message>
  <message>
    <ts>2017-07-31T17:54:04.088633</ts>
    <user>U0LPMPL2U</user>
    <text>You can think of it as "a call can be in one of N states, some of which have extra data associated (such as recording status)"</text>
  </message>
  <message>
    <ts>2017-07-31T17:59:43.221810</ts>
    <user>U37HUSJ4R</user>
    <text>thank you for the help</text>
  </message>
  <message>
    <ts>2017-07-31T17:59:53.225415</ts>
    <user>U37HUSJ4R</user>
    <text>great to be able to chat through these questions</text>
  </message>
  <message>
    <ts>2017-07-31T18:00:28.240755</ts>
    <user>U0LPMPL2U</user>
    <text>I'm glad we found a nice solution :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-31T18:10:59.466477</ts>
    <user>U4RR7KX45</user>
    <text>how can I decode an array of custom type with json decoder?</text>
  </message>
  <message>
    <ts>2017-07-31T18:11:40.480868</ts>
    <user>U4RR7KX45</user>
    <text>```
decode List User
   |&amp;gt; JDP.required "data" (JD.list userDecoder)
```</text>
  </message>
  <message>
    <ts>2017-07-31T18:11:48.483634</ts>
    <user>U4RR7KX45</user>
    <text>this is what I'm doing at the moment</text>
  </message>
  <message>
    <ts>2017-07-31T18:25:33.753816</ts>
    <user>U0LPMPL2U</user>
    <text>You don't need the first part</text>
  </message>
  <message>
    <ts>2017-07-31T18:25:38.755292</ts>
    <user>U0LPMPL2U</user>
    <text>`JDP.required "data" (JD.list userDecoder)` should work</text>
  </message>
  <message>
    <ts>2017-07-31T18:26:41.775356</ts>
    <user>U4RR7KX45</user>
    <text>it doesn't seem to work :confused: says the type annotation is incorrect. At the moment I'm using:
`decodeUsers : JD.Decoder (List User)`</text>
  </message>
  <message>
    <ts>2017-07-31T18:27:47.796033</ts>
    <user>U0LPMPL2U</user>
    <text>I don't think you need `JDP` here. You can say:
```
decodeUsers : JD.Decoder (List User)
decodeUsers =
  JD.field "data" (JD.list userDecoder)
```</text>
  </message>
  <message>
    <ts>2017-07-31T18:28:22.806699</ts>
    <user>U4RR7KX45</user>
    <text>ah that worked</text>
  </message>
  <message>
    <ts>2017-07-31T18:28:22.806813</ts>
    <user>U0LPMPL2U</user>
    <text>Json Decode Pipeline is used for decoding records with a lot of keys</text>
  </message>
  <message>
    <ts>2017-07-31T18:34:26.919874</ts>
    <user>U6H9E1YS3</user>
    <text>Hello all :slightly_smiling_face: A bit stuck on something, I have an update branch that sends a Cmd Msg with the updated model but the Cmd Msg is sending before the model has updated. What's the best way to make sure the model has updated before I send the Cmd? I've just made a variable for the list I need at the moment, but thought there had to be a better way of doing it! Any advice would be appreciated</text>
  </message>
  <message>
    <ts>2017-07-31T18:35:12.933060</ts>
    <user>U0LPMPL2U</user>
    <text>I'm curious why you want to send yourself a `Cmd Msg`? Is it to prevent duplication in two branches of your `update` ?</text>
  </message>
  <message>
    <ts>2017-07-31T18:36:56.964654</ts>
    <user>U6H9E1YS3</user>
    <text>I don't understand sorry I'm not sending myself one I'm using d3 so using it to send filtered data via a port :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-31T18:37:19.971515</ts>
    <user>U6H9E1YS3</user>
    <text>I probably wasn't very clear</text>
  </message>
  <message>
    <ts>2017-07-31T18:39:31.012626</ts>
    <user>U0LPMPL2U</user>
    <text>inside your `update` function, `model` always refers to the _old_ version of the model</text>
  </message>
  <message>
    <ts>2017-07-31T18:40:21.027591</ts>
    <user>U0LPMPL2U</user>
    <text>All data is immutable in Elm so using the `{ model | ... }` syntax doesn't mutate `model`, but instead returns a _new_ record</text>
  </message>
  <message>
    <ts>2017-07-31T18:41:12.043793</ts>
    <user>U0LPMPL2U</user>
    <text>since you want the new filtered data, you should use the same value you are assigning to the model</text>
  </message>
  <message>
    <ts>2017-07-31T18:41:42.053112</ts>
    <user>U6H9E1YS3</user>
    <text>Ah fair enough! Thanks for your help :grin:</text>
  </message>
  <message>
    <ts>2017-07-31T18:41:47.054544</ts>
    <user>U0LPMPL2U</user>
    <text>```
ChangeActiveYear year -&amp;gt;
    ( { model | currentYear = year, filteredData = filterDataByYear model.data year }
    , updateGraphData (filterDataByYear model.data year) )
```</text>
  </message>
  <message>
    <ts>2017-07-31T18:42:29.067318</ts>
    <user>U0LPMPL2U</user>
    <text>if you don't want to calculate `filterDataByYear`, you could use a `let` to assign the result to a variable and then reference it in both places</text>
  </message>
  <message>
    <ts>2017-07-31T18:42:54.074878</ts>
    <user>U0LPMPL2U</user>
    <text>Alternatively, use a `let` to assign a variable `newModel` that has the new model value</text>
  </message>
  <message>
    <ts>2017-07-31T18:43:06.078554</ts>
    <user>U0LPMPL2U</user>
    <text>and then you can say `updateGraphData newModel.filteredData` if you want</text>
  </message>
  <message>
    <ts>2017-07-31T18:43:35.087422</ts>
    <user>U6H9E1YS3</user>
    <text>Yay it looks a bit nicer now and working perfectly thank you!</text>
  </message>
  <message>
    <ts>2017-07-31T18:43:59.094620</ts>
    <user>U0LPMPL2U</user>
    <text>glad to help :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-07-31T19:15:44.637784</ts>
    <user>U6FK062M7</user>
    <text>Greetings, hope I can get some tips here. I am trying to port a showcase app, simple, but more complex than to-do to elm, and started with the routing…
it is over here… &lt;https://github.com/flq/elmorse&gt;</text>
  </message>
  <message>
    <ts>2017-07-31T19:16:12.645653</ts>
    <user>U6FK062M7</user>
    <text>When I run the app, I can put any url into the browser location field, it will always end up in home</text>
  </message>
  <message>
    <ts>2017-07-31T19:16:38.652703</ts>
    <user>U6FK062M7</user>
    <text>not sure where I am going wrong since it looks fairly similar to the tutorial</text>
  </message>
  <message>
    <ts>2017-07-31T19:17:46.670944</ts>
    <user>U23SA861Y</user>
    <text>This is the line between what your webserver is set up to do, and what your app is setup to do.</text>
  </message>
  <message>
    <ts>2017-07-31T19:22:50.749316</ts>
    <user>U6FK062M7</user>
    <text>*facepalm* now I understand all that stuff about hash url, oh boy.</text>
  </message>
  <message>
    <ts>2017-07-31T19:23:00.751848</ts>
    <user>U6FK062M7</user>
    <text>okay, never mind</text>
  </message>
  <message>
    <ts>2017-07-31T19:23:09.754121</ts>
    <user>U6FK062M7</user>
    <text>sometimes it helps just to explain</text>
  </message>
  <message>
    <ts>2017-07-31T19:23:39.761796</ts>
    <user>U23SA861Y</user>
    <text>you can certainly setup your webserver to help you here</text>
  </message>
  <message>
    <ts>2017-07-31T19:24:11.770249</ts>
    <user>U23SA861Y</user>
    <text>but yeah, the hash allows you to have this sort of local path on top of the main server route</text>
  </message>
  <message>
    <ts>2017-07-31T21:25:48.390902</ts>
    <user>U3HQVHERX</user>
    <text>does anybody have experience with webpack in here? is this the right place to ask?</text>
  </message>
  <message>
    <ts>2017-07-31T21:26:00.393421</ts>
    <user>U3HQVHERX</user>
    <text>I'm following this tutorial: &lt;https://elmseeds.thaterikperson.com/elm-webpack-extras&gt;</text>
  </message>
  <message>
    <ts>2017-07-31T21:27:12.407572</ts>
    <user>U3HQVHERX</user>
    <text>```
WARNING in ./src/Main.elm
(Emitted value instead of an instance of Error) Unknown Elm compiler option: debug
 @ ./public/js/app.js 1:0-36
```</text>
  </message>
  <message>
    <ts>2017-07-31T21:31:34.462364</ts>
    <user>U3HQVHERX</user>
    <text>```
"devDependencies": {
    "elm-hot-loader": "^0.5.4",
    "elm-webpack-loader": "^4.3.1",
    "webpack": "^3.4.1",
    "webpack-dev-server": "^2.6.1"
  }
```</text>
  </message>
  <message>
    <ts>2017-07-31T21:32:15.470328</ts>
    <user>U6ECA0Q4D</user>
    <text>What does the ! operator do?   I've been reading through the elm-datepicker code and came across some lines that look like this: ```prepareDates (prevMonth currentMonth) model ! []```</text>
  </message>
  <message>
    <ts>2017-07-31T21:32:56.478838</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U6ECA0Q4D&gt; it's short hand for `(model, Cmd.none)` ... it makes a tuple</text>
  </message>
  <message>
    <ts>2017-07-31T21:33:52.490058</ts>
    <user>U3HQVHERX</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/latest/Platform-Cmd#&gt;!</text>
  </message>
  <message>
    <ts>2017-07-31T21:33:53.490330</ts>
    <user>U6ECA0Q4D</user>
    <text>So what is valid in the array?  Just commands?</text>
  </message>
  <message>
    <ts>2017-07-31T21:34:21.496209</ts>
    <user>U3HQVHERX</user>
    <text>`List (Cmd msg)`</text>
  </message>
  <message>
    <ts>2017-07-31T21:34:24.496647</ts>
    <user>U6ECA0Q4D</user>
    <text>Ah, that's where it is in the docs!  I couldn't find it.  Thanks!</text>
  </message>
  <message>
    <ts>2017-07-31T21:34:53.502334</ts>
    <user>U3HQVHERX</user>
    <text>yeah.. searching for infix operators is weird i googled `elm "! []"` to find that</text>
  </message>
  <message>
    <ts>2017-07-31T21:38:59.548420</ts>
    <user>U6ECA0Q4D</user>
    <text>Thanks for the help &lt;@U3HQVHERX&gt;.  I'm trying to wrap my head around the elm architecture and functional programming and it's kicking my butt</text>
  </message>
  <message>
    <ts>2017-07-31T21:42:56.595163</ts>
    <user>U3HQVHERX</user>
    <text>&lt;@U6ECA0Q4D&gt; no problem! it's worth the effort. my advice: use the `elm-repl` as a sandbox to learn features of the language and use &lt;https://ellie-app.com/new&gt; for small case studies</text>
  </message>
  <message>
    <ts>2017-07-31T21:44:18.611507</ts>
    <user>U2XRG0UKA</user>
    <text>&lt;@U3HQVHERX&gt; what does your Webpack config file look like?</text>
  </message>
  <message>
    <ts>2017-07-31T21:55:25.742962</ts>
    <user>U2XRG0UKA</user>
    <text>Config looks good. You could try removing debug: true from the options line to see if that changes anything. </text>
  </message>
  <message>
    <ts>2017-07-31T22:13:19.953725</ts>
    <user>U3HQVHERX</user>
    <text>tried that : /</text>
  </message>
  <message>
    <ts>2017-07-31T22:13:50.959340</ts>
    <user>U3HQVHERX</user>
    <text>when i run the webpack dev server it does not output a bundle js file though, so that's weird</text>
  </message>
  <message>
    <ts>2017-07-31T22:43:23.286488</ts>
    <user>U0JBSEGHY</user>
    <text>I'm a little stuck and not sure if I should reach for a library or roll my own solution.</text>
  </message>
  <message>
    <ts>2017-07-31T22:44:21.296395</ts>
    <user>U0JBSEGHY</user>
    <text>I'm sending the last character of an `onInput` Event out libphonenumber-google for formatting. I want to get it back and then use that to update the input field.</text>
  </message>
  <message>
    <ts>2017-07-31T22:44:54.302025</ts>
    <user>U0JBSEGHY</user>
    <text>I also want to track a backspace to send another message out to the AsYouType formmater to pop off the last number</text>
  </message>
  <message>
    <ts>2017-07-31T22:47:25.329120</ts>
    <user>U14Q8S4EM</user>
    <text>&lt;@U0JBSEGHY&gt;, so are you using a port to send it out to that libphonenumber-google service?</text>
  </message>
  <message>
    <ts>2017-07-31T22:48:02.335271</ts>
    <user>U14Q8S4EM</user>
    <text>Regarding the backspace, you can add your own custom event listener that listens for that key code.</text>
  </message>
  <message>
    <ts>2017-07-31T22:48:04.335621</ts>
    <user>U0JBSEGHY</user>
    <text>Yea I have it on the client side. So I am just working with it as some external JS client side</text>
  </message>
  <message>
    <ts>2017-07-31T22:48:27.339685</ts>
    <user>U0JBSEGHY</user>
    <text>I just realised I probably also have to track deletes and cut and pastes as well :confused: haha.</text>
  </message>
  <message>
    <ts>2017-07-31T22:49:12.347495</ts>
    <user>U14Q8S4EM</user>
    <text>Yeah thats all no problem if you just make an even listener that takes an `Int -&amp;gt; Msg`</text>
  </message>
  <message>
    <ts>2017-07-31T22:50:21.359838</ts>
    <user>U14Q8S4EM</user>
    <text>Do you need any help making that kind of thing? And regarding the google service, why dont you use a port to send back whatever it is you wanted in Elm?</text>
  </message>
  <message>
    <ts>2017-07-31T22:50:40.363520</ts>
    <user>U0JBSEGHY</user>
    <text>I think I might have to sit down and map it all out. I also want to accept letters and treat it as a search bar as well.</text>
  </message>
  <message>
    <ts>2017-07-31T22:51:11.368960</ts>
    <user>U0JBSEGHY</user>
    <text>I have a port sending it back and showing the result elsewhere but I would like to also format the input field.</text>
  </message>
  <message>
    <ts>2017-07-31T22:51:26.371653</ts>
    <user>U0JBSEGHY</user>
    <text>This is a little more fancy than I initially thought it would be haha</text>
  </message>
  <message>
    <ts>2017-07-31T22:52:56.386783</ts>
    <user>U14Q8S4EM</user>
    <text>I think Ive been in your circumstance. I had an app that I wanted to listen for the enter key. There are a few ways to do it, but I ended up with..
```
input
    [ onChange HandleField
    , onEnter HandleEnter
    , value model.inputField
    ]
    []

onEnter : Msg -&amp;gt; Attribute Msg
```</text>
  </message>
  <message>
    <ts>2017-07-31T22:53:32.393286</ts>
    <user>U14Q8S4EM</user>
    <text>It fired that message if the key that was pressed was the enter, and then separately, there was another event listener that listened for the changes generally</text>
  </message>
  <message>
    <ts>2017-07-31T22:53:49.396477</ts>
    <user>U14Q8S4EM</user>
    <text>When you say "format the input field", you might like change or update?</text>
  </message>
  <message>
    <ts>2017-07-31T22:58:51.450248</ts>
    <user>U0JBSEGHY</user>
    <text>I think I should hold 3 different states in the model. The current state of input, the state of the formatted number (human) and then the state of the number for international calling format.</text>
  </message>
  <message>
    <ts>2017-07-31T23:04:33.513119</ts>
    <user>U0JBSEGHY</user>
    <text>I'm going to have a crack at what you have just outlined there. I just reread the code and it makes sense now haha</text>
  </message>
  <message>
    <ts>2017-07-31T23:43:42.898188</ts>
    <user>U0JBSEGHY</user>
    <text>&lt;@U14Q8S4EM&gt; how does your HandleField work? Does it accept a string?</text>
  </message>
  <message>
    <ts>2017-07-31T23:45:37.917211</ts>
    <user>U0JBSEGHY</user>
    <text>```The 1st and 2nd entries in this list are different types of values.

327|                         [ onInput FormatNumber
328|&amp;gt;                        , onChange HandleField
329|                         , value model.numberToCall
330|                         , placeholder "Enter a Phone Number"
331|                         , class "login-form"
332|                         ]

The 1st entry has this type:

    Attribute (Msg)

But the 2nd is:

    Attribute (String -&amp;gt; Msg)```</text>
  </message>
  <message>
    <ts>2017-07-31T23:46:10.922952</ts>
    <user>U0JBSEGHY</user>
    <text>If I remove the first input field it throws errors all the way down the view. So I'm a little stuck on the types.</text>
  </message>
  <message>
    <ts>2017-07-31T23:48:55.949825</ts>
    <user>U14Q8S4EM</user>
    <text>Yeah, accepting a string is what I had in mind.</text>
  </message>
  <message>
    <ts>2017-07-31T23:49:24.954391</ts>
    <user>U14Q8S4EM</user>
    <text>So.. `type Msg = HandleField String | ...`</text>
  </message>
  <message>
    <ts>2017-07-31T23:50:09.961938</ts>
    <user>U3HQVHERX</user>
    <text>```
Project is running at &lt;http://localhost:8080/&gt;
webpack output is served from /
Success! Compiled 1 module.
Successfully generated /var/folders/_c/8wr2xwdd5fgd09brqxxycj080000gp/T/117631-5543-1pmxcl4.bb90w1att9.js
Hash: 585e3744c67183452465
Version: webpack 3.4.1
Time: 974ms
    Asset    Size  Chunks                    Chunk Names
bundle.js  628 kB       0  [emitted]  [big]  main
  [35] multi (webpack)-dev-server/client?&lt;http://localhost:8080&gt; ./public/js/app.js 40 bytes {0} [built]
  [36] (webpack)-dev-server/client?&lt;http://localhost:8080&gt; 5.83 kB {0} [built]
  [37] ./node_modules/url/url.js 23.3 kB {0} [built]
  [40] ./node_modules/querystring-es3/index.js 127 bytes {0} [built]
  [43] ./node_modules/strip-ansi/index.js 161 bytes {0} [built]
  [45] ./node_modules/loglevel/lib/loglevel.js 6.74 kB {0} [built]
  [46] (webpack)-dev-server/client/socket.js 856 bytes {0} [built]
  [78] (webpack)-dev-server/client/overlay.js 3.6 kB {0} [built]
  [80] ./node_modules/html-entities/index.js 231 bytes {0} [built]
  [83] (webpack)/hot nonrecursive ^\.\/log$ 170 bytes {0} [built]
  [84] (webpack)/hot/log.js 1.04 kB {0} [optional] [built]
  [85] (webpack)/hot/emitter.js 77 bytes {0} [built]
  [86] ./node_modules/events/events.js 8.33 kB {0} [built]
  [87] ./public/js/app.js 76 bytes {0} [built]
  [88] ./src/Main.elm 303 kB {0} [built]
    + 74 hidden modules
webpack: Compiled successfully.
```</text>
  </message>
  <message>
    <ts>2017-07-31T23:50:21.964026</ts>
    <user>U3HQVHERX</user>
    <text>it says "emitted bundle.js" but i do not see it anywhere</text>
  </message>
  <message>
    <ts>2017-07-31T23:50:28.965393</ts>
    <user>U14Q8S4EM</user>
    <text>Although I would name it something other than `HandleField`, maybe something more specific to what you are doing</text>
  </message>
  <message>
    <ts>2017-07-31T23:55:35.015781</ts>
    <user>U0JBSEGHY</user>
    <text>Yea I am just trying to get it to compile for me first</text>
  </message>
  <message>
    <ts>2017-07-31T23:57:56.039147</ts>
    <user>U0JBSEGHY</user>
    <text>The thing is having `HandleField String` throws errors on all my `onClick` handlers</text>
  </message>
  <message>
    <ts>2017-07-31T23:58:49.047592</ts>
    <user>U0JBSEGHY</user>
    <text>That is once I remove the `onInput`</text>
  </message>
  <message>
    <ts>2017-07-31T23:59:42.056511</ts>
    <user>U0JBSEGHY</user>
    <text>```The 2nd and 3rd entries in this list are different types of values.

325|                 [ Html.form []
326|                     [ input
327|                         [ onChange HandleField
328|                         , value model.numberToCall
329|                         , placeholder "Enter a Phone Number"
330|                         , class "login-form"
331|                         ]
332|                         []
333|                     ]
334|                 , h4 [] [ text model.numberToCall ]
335|&amp;gt;                , button [ onClick (MakeCall model.numberToCall) ] [ text "Make Call" ]
336|                 ]

The 2nd entry has this type:

    Html (String -&amp;gt; Msg)

But the 3rd is:

    Html (Msg)```</text>
  </message>
  <message>
    <ts>2017-08-01T00:03:30.098551</ts>
    <user>U14Q8S4EM</user>
    <text>Thats weird. What is `MakeCall`?</text>
  </message>
  <message>
    <ts>2017-08-01T00:03:35.099399</ts>
    <user>U14Q8S4EM</user>
    <text>Whats the type?</text>
  </message>
  <message>
    <ts>2017-08-01T00:03:49.101725</ts>
    <user>U0JBSEGHY</user>
    <text>```type Msg
    = Answer String
    | MakeCall String```</text>
  </message>
  <message>
    <ts>2017-08-01T00:04:19.107075</ts>
    <user>U0JBSEGHY</user>
    <text>```update...            
MakeCall number -&amp;gt;
            ( model, call number )
```</text>
  </message>
  <message>
    <ts>2017-08-01T00:05:41.121946</ts>
    <user>U14Q8S4EM</user>
    <text>I dont know why you are getting that error. Thats weird.</text>
  </message>
  <message>
    <ts>2017-08-01T00:05:54.124302</ts>
    <user>U14Q8S4EM</user>
    <text>This wont solve your problem, but you could also do `Msg = MakeCall | ..`</text>
  </message>
  <message>
    <ts>2017-08-01T00:06:09.126969</ts>
    <user>U14Q8S4EM</user>
    <text>and then in your update do `(model, call model.numberToCall)`</text>
  </message>
  <message>
    <ts>2017-08-01T00:07:05.136443</ts>
    <user>U0JBSEGHY</user>
    <text>This is my `onChange` ```onChange : msg -&amp;gt; Attribute msg
onChange message =
    on "keydown" (JD.succeed message)

```</text>
  </message>
  <message>
    <ts>2017-08-01T00:07:19.138654</ts>
    <user>U14Q8S4EM</user>
    <text>What happens if you exclude the second element, does it compile?</text>
  </message>
  <message>
    <ts>2017-08-01T00:07:38.141971</ts>
    <user>U0JBSEGHY</user>
    <text>I was hoping to simply pass whatever that gives me to `HandleField` then use debug to see what it gives me. But it keeps saying there is varying types</text>
  </message>
  <message>
    <ts>2017-08-01T00:08:02.146026</ts>
    <user>U0JBSEGHY</user>
    <text>Yes if I exclude the onChange it compiles</text>
  </message>
  <message>
    <ts>2017-08-01T00:08:32.150939</ts>
    <user>U14Q8S4EM</user>
    <text>Oh, thats interesting. I meant if you exclude the `h4` element tho.</text>
  </message>
  <message>
    <ts>2017-08-01T00:08:55.154677</ts>
    <user>U0JBSEGHY</user>
    <text>It starts throwing me everywhere :confused:</text>
  </message>
  <message>
    <ts>2017-08-01T00:09:19.158651</ts>
    <user>U14Q8S4EM</user>
    <text>Okay I think I see the problem.</text>
  </message>
  <message>
    <ts>2017-08-01T00:09:22.159200</ts>
    <user>U0JBSEGHY</user>
    <text>But it's not concerned about the h4</text>
  </message>
  <message>
    <ts>2017-08-01T00:09:29.160294</ts>
    <user>U0JBSEGHY</user>
    <text>until I remove the onInput</text>
  </message>
  <message>
    <ts>2017-08-01T00:10:02.165967</ts>
    <user>U14Q8S4EM</user>
    <text>change your `onChange` to `onChange : Msg -&amp;gt; Attribute Msg`</text>
  </message>
  <message>
    <ts>2017-08-01T00:10:07.166889</ts>
    <user>U14Q8S4EM</user>
    <text>And tell me what happens.</text>
  </message>
  <message>
    <ts>2017-08-01T00:10:14.168223</ts>
    <user>U14Q8S4EM</user>
    <text>Capitalize the `Msg`</text>
  </message>
  <message>
    <ts>2017-08-01T00:10:41.173103</ts>
    <user>U14Q8S4EM</user>
    <text>When its lowercase it can be a variable for anything including `Msg` and `String -&amp;gt; Msg`</text>
  </message>
  <message>
    <ts>2017-08-01T00:10:43.173540</ts>
    <user>U0JBSEGHY</user>
    <text>```The argument to function `onChange` is causing a mismatch.

328|                           onChange HandleField
                                        ^^^^^^^^^^^
Function `onChange` is expecting the argument to be:

    Msg

But it is:

    String -&amp;gt; Msg```</text>
  </message>
  <message>
    <ts>2017-08-01T00:11:23.180499</ts>
    <user>U14Q8S4EM</user>
    <text>Yeah, so maybe I dont understand what you are trying to do.</text>
  </message>
  <message>
    <ts>2017-08-01T00:11:49.184941</ts>
    <user>U14Q8S4EM</user>
    <text>Do you want the string of the new value in the field on `HandleField`?</text>
  </message>
  <message>
    <ts>2017-08-01T00:11:50.185005</ts>
    <user>U0JBSEGHY</user>
    <text>I was following this for the  Custom Event Handler &lt;http://package.elm-lang.org/packages/elm-lang/html/2.0.0/Html-Events#on&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T00:12:16.189296</ts>
    <user>U0JBSEGHY</user>
    <text>I was just trying to track a keydown and then I guess pass the string</text>
  </message>
  <message>
    <ts>2017-08-01T00:12:29.191274</ts>
    <user>U0JBSEGHY</user>
    <text>then I wanted to figure out how to track a cut and paste as well</text>
  </message>
  <message>
    <ts>2017-08-01T00:12:46.193787</ts>
    <user>U0JBSEGHY</user>
    <text>and backspace etc</text>
  </message>
  <message>
    <ts>2017-08-01T00:13:24.200009</ts>
    <user>U0JBSEGHY</user>
    <text>basically track anyway that the field could be modified</text>
  </message>
  <message>
    <ts>2017-08-01T00:13:42.202821</ts>
    <user>U14Q8S4EM</user>
    <text>Okay. I see.</text>
  </message>
  <message>
    <ts>2017-08-01T00:14:26.209605</ts>
    <user>U14Q8S4EM</user>
    <text>Ive never done this exactly, but I bet you could make a custom html event handle that returns `(KeyCode, String)`</text>
  </message>
  <message>
    <ts>2017-08-01T00:14:44.212314</ts>
    <user>U14Q8S4EM</user>
    <text>Where the keycode is an `Int`</text>
  </message>
  <message>
    <ts>2017-08-01T00:14:54.213929</ts>
    <user>U14Q8S4EM</user>
    <text>So you can get the value and the key code of what happened most recently in one go.</text>
  </message>
  <message>
    <ts>2017-08-01T00:15:30.220080</ts>
    <user>U0JBSEGHY</user>
    <text>Yea there is this &lt;http://package.elm-lang.org/packages/elm-lang/keyboard/1.0.1/Keyboard&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T00:15:52.223731</ts>
    <user>U0JBSEGHY</user>
    <text>But I still don't know where to go from here :confused:</text>
  </message>
  <message>
    <ts>2017-08-01T00:15:56.224343</ts>
    <user>U14Q8S4EM</user>
    <text>Thats a little different I think.</text>
  </message>
  <message>
    <ts>2017-08-01T00:16:02.225524</ts>
    <user>U14Q8S4EM</user>
    <text>So that listens to all mouse events in the whole window.</text>
  </message>
  <message>
    <ts>2017-08-01T00:16:12.227134</ts>
    <user>U14Q8S4EM</user>
    <text>Thats not what you want right?</text>
  </message>
  <message>
    <ts>2017-08-01T00:16:20.228482</ts>
    <user>U0JBSEGHY</user>
    <text>True</text>
  </message>
  <message>
    <ts>2017-08-01T00:16:36.231302</ts>
    <user>U14Q8S4EM</user>
    <text>Hold on a second</text>
  </message>
  <message>
    <ts>2017-08-01T00:18:49.252708</ts>
    <user>U0JBSEGHY</user>
    <text>```onChange : (String -&amp;gt; msg) -&amp;gt; Attribute msg
onChange tagger =
    on "keydown" (JD.map tagger targetValue)``` this worked in that it compiles</text>
  </message>
  <message>
    <ts>2017-08-01T00:19:54.262911</ts>
    <user>U0JBSEGHY</user>
    <text>Custom Decoder instead of Custom Event Handlers.</text>
  </message>
  <message>
    <ts>2017-08-01T00:20:38.270601</ts>
    <user>U0JBSEGHY</user>
    <text>I'll keep chipping away at it :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-01T00:22:29.288695</ts>
    <user>U14Q8S4EM</user>
    <text>Ah okay</text>
  </message>
  <message>
    <ts>2017-08-01T00:22:35.289591</ts>
    <user>U14Q8S4EM</user>
    <text>Great.</text>
  </message>
  <message>
    <ts>2017-08-01T00:22:46.291362</ts>
    <user>U14Q8S4EM</user>
    <text>Well I just wrote up this bit of Elm, following on my idea</text>
  </message>
  <message>
    <ts>2017-08-01T00:22:47.291518</ts>
    <user>U14Q8S4EM</user>
    <text>&lt;https://gist.github.com/Chadtech/f296740ee724e0d69d285aaf9b082b49&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T00:22:59.293467</ts>
    <user>U0JBSEGHY</user>
    <text>Don't know much about the decoders. So I will have to do a bit more reading to know what the map is doing</text>
  </message>
  <message>
    <ts>2017-08-01T00:23:49.301632</ts>
    <user>U0JBSEGHY</user>
    <text>Cool thanks. I will refer to it later if I get stuck and see if it helps me along further. Thanks so much for helping</text>
  </message>
  <message>
    <ts>2017-08-01T01:04:30.694280</ts>
    <user>U5GJ5FEAU</user>
    <text>i've seen a lot of examples of SPA with Elm, but how do non-SPA's use Elm? How can we have one js for Elm runtime and generate js for each page separately? instead of one huge js for the whole application</text>
  </message>
  <message>
    <ts>2017-08-01T01:40:35.051007</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5GJ5FEAU&gt; this is something you have to do manually. A build for each page if you want the JS to be completely seperate.</text>
  </message>
  <message>
    <ts>2017-08-01T01:41:50.064194</ts>
    <user>U0JBSEGHY</user>
    <text>Slowly coming together. Your gist did help &lt;@U14Q8S4EM&gt; I just had to change it to "keyup"</text>
  </message>
  <message>
    <ts>2017-08-01T01:41:52.064586</ts>
    <user>U153UK3FA</user>
    <text>but JS tends to gzip and minify better the larger the bundles so even with a non-SPA having a single bundle might be fine</text>
  </message>
  <message>
    <ts>2017-08-01T01:48:22.132015</ts>
    <user>U5GJ5FEAU</user>
    <text>&lt;@U153UK3FA&gt; that makes sense. though how can we manually compile the runtime and the elm application separately</text>
  </message>
  <message>
    <ts>2017-08-01T01:48:54.137851</ts>
    <user>U6HCJ8JHM</user>
    <text>Hello. Quick question: What is the recommended way to Json.Encode a list of records?</text>
  </message>
  <message>
    <ts>2017-08-01T01:49:05.139698</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5GJ5FEAU&gt; nope, you can't</text>
  </message>
  <message>
    <ts>2017-08-01T01:49:27.143220</ts>
    <user>U5GJ5FEAU</user>
    <text>oh! got it.</text>
  </message>
  <message>
    <ts>2017-08-01T01:50:34.155686</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U6HCJ8JHM&gt; &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Json-Encode#encode&gt; has an example of encoding an object</text>
  </message>
  <message>
    <ts>2017-08-01T01:51:20.163721</ts>
    <user>U6HCJ8JHM</user>
    <text>I have my single object encoder made, but figured I'd have to map over it somehow and pass it to `Json.Encode.list` or something</text>
  </message>
  <message>
    <ts>2017-08-01T01:51:42.167853</ts>
    <user>U0JBSEGHY</user>
    <text>Does anyone know how to handle paste and cute in a form?</text>
  </message>
  <message>
    <ts>2017-08-01T01:51:50.169212</ts>
    <user>U0JBSEGHY</user>
    <text>So far I have this ```onChange : (( Int, String ) -&amp;gt; Msg) -&amp;gt; Attribute Msg
onChange handler =
    let
        toTuple =
            JD.map2 (,) keyCode targetValue
    in
        on "keyup" (JD.map handler toTuple)```</text>
  </message>
  <message>
    <ts>2017-08-01T01:51:59.170825</ts>
    <user>U6HCJ8JHM</user>
    <text>since list takes `Value` and my single encoder returns `User`, but my `UserEncoder` returns a `Value`</text>
  </message>
  <message>
    <ts>2017-08-01T01:52:14.173649</ts>
    <user>U0JBSEGHY</user>
    <text>Which handles the entering and deleting of items. Not sure how to handle a cut and paste</text>
  </message>
  <message>
    <ts>2017-08-01T01:52:44.179183</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U6HCJ8JHM&gt; you put those `Value`s in a `List` and pass it to &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Json-Encode#list&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T01:54:24.196799</ts>
    <user>U153UK3FA</user>
    <text>If you've got a `List User` you can `List.map` your encoding function to get a `List Value`</text>
  </message>
  <message>
    <ts>2017-08-01T01:56:33.221783</ts>
    <user>U6HCJ8JHM</user>
    <text>ah ok. i just had to put `List` in front of map and hit save in vscode haha</text>
  </message>
  <message>
    <ts>2017-08-01T01:56:39.222869</ts>
    <user>U6HCJ8JHM</user>
    <text>thanks for the help &lt;@U153UK3FA&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T02:28:39.613385</ts>
    <user>U0JBSEGHY</user>
    <text>Is there a `paste` and `cut` event?</text>
  </message>
  <message>
    <ts>2017-08-01T02:50:48.919109</ts>
    <user>U6B7NBTLZ</user>
    <text>hello</text>
  </message>
  <message>
    <ts>2017-08-01T02:51:03.922836</ts>
    <user>U6B7NBTLZ</user>
    <text>How to update an element of a list?</text>
  </message>
  <message>
    <ts>2017-08-01T02:51:06.923363</ts>
    <user>U6B7NBTLZ</user>
    <text>i mean</text>
  </message>
  <message>
    <ts>2017-08-01T02:51:19.926620</ts>
    <user>U6B7NBTLZ</user>
    <text>i have a list of tasks</text>
  </message>
  <message>
    <ts>2017-08-01T02:51:23.927706</ts>
    <user>U6B7NBTLZ</user>
    <text>i update a task</text>
  </message>
  <message>
    <ts>2017-08-01T02:51:31.929642</ts>
    <user>U6B7NBTLZ</user>
    <text>it makes the changes</text>
  </message>
  <message>
    <ts>2017-08-01T02:51:40.931735</ts>
    <user>U6B7NBTLZ</user>
    <text>but on the ui</text>
  </message>
  <message>
    <ts>2017-08-01T02:52:04.937471</ts>
    <user>U6B7NBTLZ</user>
    <text>it apears after reloading the page</text>
  </message>
  <message>
    <ts>2017-08-01T02:57:52.020526</ts>
    <user>U4F64AKQV</user>
    <text>&lt;@U6B7NBTLZ&gt; What do you mean you update the task?</text>
  </message>
  <message>
    <ts>2017-08-01T02:58:19.027116</ts>
    <user>U4F64AKQV</user>
    <text>A code snippet would be helpful here.</text>
  </message>
  <message>
    <ts>2017-08-01T03:02:21.092551</ts>
    <user>U2XDA6CDQ</user>
    <text>Hello, I stumbled upon a strange error while trying to run tests with `elm-test (4.1.1 &amp;lt;= v &amp;lt; 5.0.0)`:

```It looks like you're running elm-test from within your tests directory.

Please run elm-test from your project's root directory, where its elm-package.json lives!```

Problem is, that's exactly what I'm doing... My project's directory layout looks like this:

```
my-project/
     |_ elm/tests
             |_ Main.elm
             |_ Tests.elm
     |_ elm-package.json
```

And I'm trying to run tests with: 

```cd my-project
elm test elm/tests/Main.elm```

Did anybody ever encounter this?</text>
  </message>
  <message>
    <ts>2017-08-01T03:03:52.116298</ts>
    <user>U3SJEDR96</user>
    <text>is there an `elm-package.json` within `elm/tests`?</text>
  </message>
  <message>
    <ts>2017-08-01T03:04:25.125404</ts>
    <user>U2XDA6CDQ</user>
    <text>there isn't right now. I tried running `elm test init` to create one, but it didn't make a difference</text>
  </message>
  <message>
    <ts>2017-08-01T03:04:34.127590</ts>
    <user>U2XDA6CDQ</user>
    <text>I'll try again though</text>
  </message>
  <message>
    <ts>2017-08-01T03:06:27.156950</ts>
    <user>U3SJEDR96</user>
    <text>yeah, `elm-test init` assumes a certain project structure. You can use &lt;https://github.com/rtfeldman/node-test-runner/blob/master/templates/tests/elm-package.json&gt; as a template, though you'll need to add the path to your regular elm files to the `source-directories`</text>
  </message>
  <message>
    <ts>2017-08-01T03:06:53.163759</ts>
    <user>U3SJEDR96</user>
    <text>after that, you can run `elm-test --add-dependencies elm/tests/elm-package.json` to sync other dependencies</text>
  </message>
  <message>
    <ts>2017-08-01T03:07:07.167529</ts>
    <user>U3SJEDR96</user>
    <text>with a little luck, that should get you going</text>
  </message>
  <message>
    <ts>2017-08-01T03:07:20.170582</ts>
    <user>U2XDA6CDQ</user>
    <text>&lt;@U3SJEDR96&gt; I just realised that I had not properly setup the `source-directories`, it now indeed goes past that step :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-01T03:09:18.200766</ts>
    <user>U2XDA6CDQ</user>
    <text>...and now fails with the following error: ```Error: Your .elm/packages/ directory may be corrupted. I was led to believe that
gdotdesign/elm-ui existed, but I could not find anything when I went to look up
the published versions of this package.```
I already tried deleting all `elm` folders I could think of (`elm-stuff`, `tests/elm-stuff`, `~/.elm`) but I still get this. in order to install `gdotdesign/elm-ui`, I had to rely on `elm-github-install`, not sure if/how that's related. any clue?</text>
  </message>
  <message>
    <ts>2017-08-01T03:12:09.245815</ts>
    <user>U2XDA6CDQ</user>
    <text>ah I think it is somehow related to &lt;https://github.com/elm-lang/elm-package/issues/253&gt; will check my versions</text>
  </message>
  <message>
    <ts>2017-08-01T03:15:11.294588</ts>
    <user>U3SJEDR96</user>
    <text>Possibly, thoughI think it's more `elm-install` is messing things up, since `elm-test` runs `elm-package install`. I think &lt;@U0EUHKVGB&gt; came up with a way to get it working, though I don't remember exactly what it was. Also, &lt;@U0K7EBT3J&gt; was facing the same issue, maybe they know.</text>
  </message>
  <message>
    <ts>2017-08-01T03:16:56.323882</ts>
    <user>U2XDA6CDQ</user>
    <text>thanks a lot again!</text>
  </message>
  <message>
    <ts>2017-08-01T03:25:36.471001</ts>
    <user>U6B7NBTLZ</user>
    <text>&lt;@U4F64AKQV&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T03:25:59.477613</ts>
    <user>U6B7NBTLZ</user>
    <text>i need a updateTasks function</text>
  </message>
  <message>
    <ts>2017-08-01T03:30:53.562788</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U6B7NBTLZ&gt; so, model.tasks is a list of tasks?</text>
  </message>
  <message>
    <ts>2017-08-01T03:31:17.570056</ts>
    <user>U6B7NBTLZ</user>
    <text>Yes</text>
  </message>
  <message>
    <ts>2017-08-01T03:32:39.593705</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U6B7NBTLZ&gt; values in Elm are immutable, they can't be changed, you can only create new values. So to update a task in that list you create a new list with the updated task in place of the old task.</text>
  </message>
  <message>
    <ts>2017-08-01T03:33:43.612123</ts>
    <user>U6B7NBTLZ</user>
    <text>undestood</text>
  </message>
  <message>
    <ts>2017-08-01T03:33:45.612699</ts>
    <user>U6B7NBTLZ</user>
    <text>but</text>
  </message>
  <message>
    <ts>2017-08-01T03:33:57.616176</ts>
    <user>U6B7NBTLZ</user>
    <text>i edit mai tasks name and description</text>
  </message>
  <message>
    <ts>2017-08-01T03:34:08.619262</ts>
    <user>U6B7NBTLZ</user>
    <text>in my updateTasks function</text>
  </message>
  <message>
    <ts>2017-08-01T03:34:16.621573</ts>
    <user>U6B7NBTLZ</user>
    <text>what comparation should i make</text>
  </message>
  <message>
    <ts>2017-08-01T03:34:20.622884</ts>
    <user>U6B7NBTLZ</user>
    <text>in the if statement</text>
  </message>
  <message>
    <ts>2017-08-01T03:34:40.628622</ts>
    <user>U6B7NBTLZ</user>
    <text>shoult i compare the list of tasks with model.tasks</text>
  </message>
  <message>
    <ts>2017-08-01T03:34:44.629933</ts>
    <user>U6B7NBTLZ</user>
    <text>?</text>
  </message>
  <message>
    <ts>2017-08-01T03:36:48.666536</ts>
    <user>U153UK3FA</user>
    <text>Your `updateTasks` function will need to take the list of tasks and the new task as parameters</text>
  </message>
  <message>
    <ts>2017-08-01T03:36:59.669777</ts>
    <user>U153UK3FA</user>
    <text>And return a new list of tasks</text>
  </message>
  <message>
    <ts>2017-08-01T03:37:37.680861</ts>
    <user>U153UK3FA</user>
    <text>You'll need some way to match the new task value against its old value so you can find it in the list</text>
  </message>
  <message>
    <ts>2017-08-01T03:38:30.696249</ts>
    <user>U153UK3FA</user>
    <text>Commonly this is an `id` field on the task</text>
  </message>
  <message>
    <ts>2017-08-01T03:39:03.706009</ts>
    <user>U6B7NBTLZ</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-08-01T03:39:10.708027</ts>
    <user>U6B7NBTLZ</user>
    <text>Task has an id</text>
  </message>
  <message>
    <ts>2017-08-01T03:39:51.720328</ts>
    <user>U6B7NBTLZ</user>
    <text>so</text>
  </message>
  <message>
    <ts>2017-08-01T03:40:15.727340</ts>
    <user>U6B7NBTLZ</user>
    <text>updateTasks : List Task -&amp;gt; Task -&amp;gt; List Task</text>
  </message>
  <message>
    <ts>2017-08-01T03:40:20.728763</ts>
    <user>U6B7NBTLZ</user>
    <text>Right</text>
  </message>
  <message>
    <ts>2017-08-01T03:40:22.729640</ts>
    <user>U6B7NBTLZ</user>
    <text>?</text>
  </message>
  <message>
    <ts>2017-08-01T03:40:28.731283</ts>
    <user>U153UK3FA</user>
    <text>Yep</text>
  </message>
  <message>
    <ts>2017-08-01T03:44:49.810636</ts>
    <user>U2XDA6CDQ</user>
    <text>&lt;@U3SJEDR96&gt; indeed, this made it work (all credits to &lt;@U0K7EBT3J&gt;) &lt;https://elmlang.slack.com/archives/C0CLGCMMF/p1498829721172985&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T03:45:32.824451</ts>
    <user>U3SJEDR96</user>
    <text>:thumbsup: great!</text>
  </message>
  <message>
    <ts>2017-08-01T03:45:58.832758</ts>
    <user>U0JBSEGHY</user>
    <text>While the beginner is super active right now. Does anyone know how I can handle cut and paste in a form?</text>
  </message>
  <message>
    <ts>2017-08-01T03:46:47.848027</ts>
    <user>U3SJEDR96</user>
    <text>copy/paste in the browser is (unreasonably) complicated. Using an existing JS library and ports is _probably_ your best bet</text>
  </message>
  <message>
    <ts>2017-08-01T03:47:12.855335</ts>
    <user>U3SJEDR96</user>
    <text>though I do wonder - cut and paste in forms should just work, so it depends on what you ctually want to do :wink:</text>
  </message>
  <message>
    <ts>2017-08-01T03:48:10.873162</ts>
    <user>U0JBSEGHY</user>
    <text>&lt;@U3SJEDR96&gt; that is not what I wanted to hear (re it being complicated) :disappointed:</text>
  </message>
  <message>
    <ts>2017-08-01T03:48:26.878222</ts>
    <user>U0JBSEGHY</user>
    <text>So far I have it so that I can type in a number and delete a number</text>
  </message>
  <message>
    <ts>2017-08-01T03:49:27.897380</ts>
    <user>U0JBSEGHY</user>
    <text>`on "keyup"` triggers a port which is to `libphonenumber-google` doing AsYouType Formatting</text>
  </message>
  <message>
    <ts>2017-08-01T03:50:19.913292</ts>
    <user>U0JBSEGHY</user>
    <text>I also capture the `delete` keys which resets the formatter and resends the current state of the form. However cut and paste is pretty much buggered at this stage</text>
  </message>
  <message>
    <ts>2017-08-01T03:54:48.998124</ts>
    <user>U2LC0U8JY</user>
    <text>whats the exact problem with handling copy / paste?</text>
  </message>
  <message>
    <ts>2017-08-01T03:56:50.038282</ts>
    <user>U0JBSEGHY</user>
    <text>The cut and paste is visibly done. However is immediately reset to the state.</text>
  </message>
  <message>
    <ts>2017-08-01T03:57:17.047295</ts>
    <user>U0JBSEGHY</user>
    <text>I don't know how to trigger an update from them and to update the state with the new state of the input field</text>
  </message>
  <message>
    <ts>2017-08-01T03:58:25.069340</ts>
    <user>U0JBSEGHY</user>
    <text>I think it would be relatively easy if there was an `oncut` event like there is in JS. But there doesn't seem to be these events in the Html.Events of Elm</text>
  </message>
  <message>
    <ts>2017-08-01T03:59:42.095246</ts>
    <user>U3SJEDR96</user>
    <text>well you can always `on "cut" decodeTheEvent`, though I'm not sure what information you'd decode from it</text>
  </message>
  <message>
    <ts>2017-08-01T03:59:46.096604</ts>
    <user>U3SJEDR96</user>
    <text>other than "it happened"</text>
  </message>
  <message>
    <ts>2017-08-01T04:00:10.105765</ts>
    <user>U0JBSEGHY</user>
    <text>I had tried that.. But it didn't seem to work. I will try it again</text>
  </message>
  <message>
    <ts>2017-08-01T04:00:14.107434</ts>
    <user>U4872964V</user>
    <text>are you catching the "input" or "change" events?</text>
  </message>
  <message>
    <ts>2017-08-01T04:00:38.117002</ts>
    <user>U4872964V</user>
    <text>wouldn't input be triggered if you paste?</text>
  </message>
  <message>
    <ts>2017-08-01T04:00:42.118314</ts>
    <user>U3SJEDR96</user>
    <text>Important to know - if the decoder fails, it will simply do nothing</text>
  </message>
  <message>
    <ts>2017-08-01T04:01:10.128343</ts>
    <user>U3SJEDR96</user>
    <text>but yeah, I'd think input and change would be triggered, though if you're basing things on keyup, it might start to get weird</text>
  </message>
  <message>
    <ts>2017-08-01T04:02:01.145760</ts>
    <user>U0JBSEGHY</user>
    <text>yea input overrides the keyup. I will have a look at change. I wasn't aware of this event</text>
  </message>
  <message>
    <ts>2017-08-01T04:02:31.155617</ts>
    <user>U0JBSEGHY</user>
    <text>for reference this is where I am at</text>
  </message>
  <message>
    <ts>2017-08-01T04:02:38.157997</ts>
    <user>U0JBSEGHY</user>
    <text>VIEW ```[ input
                        [ --onInput FormatNumber
                          onChange HandleField
                        , value model.numberToCall
                        , placeholder "Enter a Phone Number"
                        , class "login-form"
                        ]
                        []
                    ]```</text>
  </message>
  <message>
    <ts>2017-08-01T04:02:48.161584</ts>
    <user>U0JBSEGHY</user>
    <text>```onChange : (( Int, String ) -&amp;gt; Msg) -&amp;gt; Attribute Msg
onChange handler =
    let
        toTuple =
            JD.map2 (,) keyCode targetValue
    in
        on "keyup" (JD.map handler toTuple)```</text>
  </message>
  <message>
    <ts>2017-08-01T04:03:01.166261</ts>
    <user>U0JBSEGHY</user>
    <text>UPDATE ```        HandleField ( key, digits ) -&amp;gt;
            if (List.member key [ 8, 46 ]) then
                ( { model | inputField = digits }, reformatNumber digits )
            else if (List.member key (List.range 48 57)) then
                ( { model | inputField = digits }, formatNumber (String.right 1 digits) )
            else
                model ! []```</text>
  </message>
  <message>
    <ts>2017-08-01T04:05:35.223586</ts>
    <user>U4872964V</user>
    <text>why aren't you just using the input event?</text>
  </message>
  <message>
    <ts>2017-08-01T04:05:59.232827</ts>
    <user>U4872964V</user>
    <text>why keyup?</text>
  </message>
  <message>
    <ts>2017-08-01T04:06:33.244630</ts>
    <user>U0JBSEGHY</user>
    <text>Each time a number is added it is sent through a port to be formatted</text>
  </message>
  <message>
    <ts>2017-08-01T04:06:54.251591</ts>
    <user>U4872964V</user>
    <text>yes, but input will trigger each time you write a number</text>
  </message>
  <message>
    <ts>2017-08-01T04:07:37.265662</ts>
    <user>U0JBSEGHY</user>
    <text>it also triggers each time I do anything else</text>
  </message>
  <message>
    <ts>2017-08-01T04:08:14.278175</ts>
    <user>U0JBSEGHY</user>
    <text>so a backspace will trigger it to send the last character of the string through the port. This then comes back and instead of backspacing the last number I duplicate it :confused:</text>
  </message>
  <message>
    <ts>2017-08-01T04:09:08.295602</ts>
    <user>U4872964V</user>
    <text>well, you'd have to compare the input to what you have in your model i suppose</text>
  </message>
  <message>
    <ts>2017-08-01T04:09:49.308837</ts>
    <user>U4872964V</user>
    <text>so you are sending a character at a time to the port? why don't you send the whole input</text>
  </message>
  <message>
    <ts>2017-08-01T04:09:59.312250</ts>
    <user>U4872964V</user>
    <text>oh, you are using a specific library</text>
  </message>
  <message>
    <ts>2017-08-01T04:10:22.320100</ts>
    <user>U0JBSEGHY</user>
    <text>yea I am using the AsYouType formatter from the Google library for phone numbers</text>
  </message>
  <message>
    <ts>2017-08-01T04:10:57.332296</ts>
    <user>U2LC0U8JY</user>
    <text>handling single char inputs can be very very painful</text>
  </message>
  <message>
    <ts>2017-08-01T04:11:12.337215</ts>
    <user>U2LC0U8JY</user>
    <text>if you see a way to avoid that, and instead can go with using the whole input</text>
  </message>
  <message>
    <ts>2017-08-01T04:11:14.337940</ts>
    <user>U2LC0U8JY</user>
    <text>i would do that</text>
  </message>
  <message>
    <ts>2017-08-01T04:11:22.340629</ts>
    <user>U4872964V</user>
    <text>so you could use the formatter for the whole number instead and send the whole input</text>
  </message>
  <message>
    <ts>2017-08-01T04:11:33.344552</ts>
    <user>U0JBSEGHY</user>
    <text>Hmm yea</text>
  </message>
  <message>
    <ts>2017-08-01T04:12:25.362012</ts>
    <user>U4872964V</user>
    <text>you already have reformatNumber it seems</text>
  </message>
  <message>
    <ts>2017-08-01T04:15:48.429702</ts>
    <user>U0JBSEGHY</user>
    <text>yea there seems to be issues with that as well. Seems passing in a string with more than one character messes the formatting :sweat_smile:</text>
  </message>
  <message>
    <ts>2017-08-01T04:16:10.437105</ts>
    <user>U0JBSEGHY</user>
    <text>I probably have to loop the string into the formatter on the JS side haha</text>
  </message>
  <message>
    <ts>2017-08-01T04:16:24.441727</ts>
    <user>U4872964V</user>
    <text>well, good luck :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-01T04:16:36.445870</ts>
    <user>U0JBSEGHY</user>
    <text>Wishes all libraries were readily available in Elm</text>
  </message>
  <message>
    <ts>2017-08-01T04:18:38.487333</ts>
    <user>U4872964V</user>
    <text>I don't see why you can't just use `onInput` pass that through a port to the `format` method of that lib, pass the formatted value back and put that into the model. Possibly with some debouncing.</text>
  </message>
  <message>
    <ts>2017-08-01T04:20:02.516327</ts>
    <user>U0JBSEGHY</user>
    <text>I'd still like to capture the key events.</text>
  </message>
  <message>
    <ts>2017-08-01T04:20:27.525185</ts>
    <user>U0JBSEGHY</user>
    <text>Regarding the format. I'm pretty sure it will come back with an error if it isn't a valid number. Like the right length.</text>
  </message>
  <message>
    <ts>2017-08-01T04:21:23.544698</ts>
    <user>U4872964V</user>
    <text>sure, you'd send back a `Result` or some such</text>
  </message>
  <message>
    <ts>2017-08-01T04:22:05.559406</ts>
    <user>U4872964V</user>
    <text>But if you want to do it with key events, it should be possible too, but tricky. Don't know how paste and key events work together</text>
  </message>
  <message>
    <ts>2017-08-01T04:26:29.650357</ts>
    <user>U0JBSEGHY</user>
    <text>I think the resending the whole thing and looping on the JS side might be the way to go.</text>
  </message>
  <message>
    <ts>2017-08-01T04:34:25.818946</ts>
    <user>U4872964V</user>
    <text>yes, probably easiest</text>
  </message>
  <message>
    <ts>2017-08-01T04:53:31.234096</ts>
    <user>U0JBSEGHY</user>
    <text>Further than I was before with significantly less code.</text>
  </message>
  <message>
    <ts>2017-08-01T04:53:44.238997</ts>
    <user>U0JBSEGHY</user>
    <text>Sometimes you just gotta get dirty with vanilla JS</text>
  </message>
  <message>
    <ts>2017-08-01T06:09:19.864278</ts>
    <user>U45C5R6QP</user>
    <text>`Html.Attributes.checked` doesn't seem to be working for radio buttons. &lt;http://package.elm-lang.org/packages/elm-lang/html/2.0.0/Html-Attributes#checked&gt; isn't that supposed to be a supported attribute on that element?</text>
  </message>
  <message>
    <ts>2017-08-01T06:09:49.873886</ts>
    <user>U45C5R6QP</user>
    <text>I need to style a radio button differently when it's checked</text>
  </message>
  <message>
    <ts>2017-08-01T06:13:23.942590</ts>
    <user>U1AP08WV6</user>
    <text>&lt;@U45C5R6QP&gt; Could you post a link to &lt;http://ellie-app.com|ellie-app.com&gt; showing the problem?</text>
  </message>
  <message>
    <ts>2017-08-01T06:13:36.946772</ts>
    <user>U45C5R6QP</user>
    <text>sure</text>
  </message>
  <message>
    <ts>2017-08-01T06:18:09.034752</ts>
    <user>U45C5R6QP</user>
    <text>&lt;https://ellie-app.com/3TLDQDsvPcXa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T06:18:40.044537</ts>
    <user>U45C5R6QP</user>
    <text>&lt;@U1AP08WV6&gt; I added the class "selected" so you can see the proper radio is being highlighted, but `checked='checked'` isn't added to the input element</text>
  </message>
  <message>
    <ts>2017-08-01T06:18:54.048898</ts>
    <user>U45C5R6QP</user>
    <text>(When you inspect with dev tools)</text>
  </message>
  <message>
    <ts>2017-08-01T06:23:37.136608</ts>
    <user>U45C5R6QP</user>
    <text>Just updated the code with some CSS that looks at the [checked] attr and as you can see it's not working. &lt;https://ellie-app.com/3TLDQDsvPcXa1/1&gt; - The text next to the selected radio should become red</text>
  </message>
  <message>
    <ts>2017-08-01T06:25:32.171279</ts>
    <user>U3SJEDR96</user>
    <text>try the `:checked` pseudo-selector instead</text>
  </message>
  <message>
    <ts>2017-08-01T06:25:49.176714</ts>
    <user>U3SJEDR96</user>
    <text>this is a property vs attribute thing, basically</text>
  </message>
  <message>
    <ts>2017-08-01T06:26:17.185476</ts>
    <user>U45C5R6QP</user>
    <text>Excellent!</text>
  </message>
  <message>
    <ts>2017-08-01T06:26:25.188144</ts>
    <user>U45C5R6QP</user>
    <text>Thank you</text>
  </message>
  <message>
    <ts>2017-08-01T06:27:03.199958</ts>
    <user>U1AP08WV6</user>
    <text>more info here: &lt;https://github.com/elm-lang/html/blob/master/properties-vs-attributes.md&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T06:27:14.203216</ts>
    <user>U1AP08WV6</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/html/2.0.0/Html-Attributes#property&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T07:26:27.262353</ts>
    <user>U5E3DU81K</user>
    <text>I want to make the contents of an existing html doc appear within a route that elm was responsible for making</text>
  </message>
  <message>
    <ts>2017-08-01T07:27:43.283882</ts>
    <user>U4KF67LEM</user>
    <text>Hey folks, can please anybody remind a name of a library that provides a very neat type for Http request statuses? Something like "not requested", "requested", "recieved", "error" or something like that.</text>
  </message>
  <message>
    <ts>2017-08-01T07:27:53.286618</ts>
    <user>U5W9X7VP1</user>
    <text>Hello, Elm community! Let's say I have a single page app for reading articles read from an API. How would I set OG meta tags properly when reading an article so that the user can (say) share the links? I guess meta tags can't be created/modified from Elm so is ports the way to go?</text>
  </message>
  <message>
    <ts>2017-08-01T07:28:15.292835</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U4KF67LEM&gt; &lt;http://package.elm-lang.org/packages/krisajenkins/remotedata/latest&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T07:28:31.297575</ts>
    <user>U4KF67LEM</user>
    <text>Thank you</text>
  </message>
  <message>
    <ts>2017-08-01T07:29:35.315096</ts>
    <user>U5W9X7VP1</user>
    <text>&lt;@U4KF67LEM&gt;, also check out &lt;http://package.elm-lang.org/packages/ohanhi/remotedata-http/latest&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T07:30:43.335762</ts>
    <user>U0JBSEGHY</user>
    <text>Can I destructure this? `Just ("07",["QLD"])`</text>
  </message>
  <message>
    <ts>2017-08-01T07:30:51.338010</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U5W9X7VP1&gt; &amp;lt;meta&amp;gt; tags seems like something you'd want to do server side</text>
  </message>
  <message>
    <ts>2017-08-01T07:31:19.346354</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U0JBSEGHY&gt; with a `case..of` block</text>
  </message>
  <message>
    <ts>2017-08-01T07:31:37.351868</ts>
    <user>U0JBSEGHY</user>
    <text>shit I'm going to have to review this another time</text>
  </message>
  <message>
    <ts>2017-08-01T07:31:49.355184</ts>
    <user>U0JBSEGHY</user>
    <text>getting messy ```                _ =
                    Debug.log "regions with filter "
                        (model.regions
                            |&amp;gt; List.map (\x -&amp;gt; ( x.areaCode, x.area ))
                            |&amp;gt; List.filter (\x -&amp;gt; ((Tuple.first x) == model.region))
                            |&amp;gt; List.head
                        )
```</text>
  </message>
  <message>
    <ts>2017-08-01T07:31:52.355969</ts>
    <user>U0JBSEGHY</user>
    <text>haha</text>
  </message>
  <message>
    <ts>2017-08-01T07:33:17.380496</ts>
    <user>U5W9X7VP1</user>
    <text>&lt;@U153UK3FA&gt;, oh, true. That might be the way to go. I'll look up how it can be done with Express.</text>
  </message>
  <message>
    <ts>2017-08-01T07:33:29.384002</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U0JBSEGHY&gt; you can do, `List.filter (\(x,_) -&amp;gt;  x == model.region)`</text>
  </message>
  <message>
    <ts>2017-08-01T07:33:56.391909</ts>
    <user>U153UK3FA</user>
    <text>and `List.map (\{areaCode, area} -&amp;gt; (areaCode, area ))`</text>
  </message>
  <message>
    <ts>2017-08-01T07:36:50.442642</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U0JBSEGHY&gt; what should your above code do in the case that the `List.Filter` returns an empty list?</text>
  </message>
  <message>
    <ts>2017-08-01T07:37:14.449762</ts>
    <user>U0JBSEGHY</user>
    <text>I guess just return an empty string.</text>
  </message>
  <message>
    <ts>2017-08-01T07:37:45.458723</ts>
    <user>U0JBSEGHY</user>
    <text>Or something I dno haha</text>
  </message>
  <message>
    <ts>2017-08-01T07:38:06.464912</ts>
    <user>U0JBSEGHY</user>
    <text>Haven't thought that far ahead. I'm a dynamic typing guy so still getting used to the types</text>
  </message>
  <message>
    <ts>2017-08-01T07:38:36.473669</ts>
    <user>U153UK3FA</user>
    <text>You can use `Maybe.withDefault` to provide a default value in the case of a `Nothing`</text>
  </message>
  <message>
    <ts>2017-08-01T07:38:58.479732</ts>
    <user>U5W9X7VP1</user>
    <text>&lt;@U153UK3FA&gt;: can you point me to correct direction. If an article is read from API, in a SPA, how can the server change the meta tags at all as the page is not reloaded?</text>
  </message>
  <message>
    <ts>2017-08-01T07:39:04.481526</ts>
    <user>U153UK3FA</user>
    <text>and you can use `Maybe.map` to transform the value if it's not `Nothing`</text>
  </message>
  <message>
    <ts>2017-08-01T07:43:16.555679</ts>
    <user>U0JBSEGHY</user>
    <text>I'm not quite sure what the Maybe's do. Brb reading</text>
  </message>
  <message>
    <ts>2017-08-01T07:45:31.596260</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U5W9X7VP1&gt; for meta tags to work, they have to be on the page when the url is fetched by facebook/twitter for loading the metadata. So, they pretty much have to be rendered server-side.</text>
  </message>
  <message>
    <ts>2017-08-01T07:48:56.657153</ts>
    <user>U5W9X7VP1</user>
    <text>&lt;@U3SJEDR96&gt;, hmm, ok. I have to think about this. Google seems to be able to index after running javascript so dynamic meta tags work there, but I guess FB doesn't do this - yet.</text>
  </message>
  <message>
    <ts>2017-08-01T07:49:11.661709</ts>
    <user>U5W9X7VP1</user>
    <text>So world is still not ready :disappointed:</text>
  </message>
  <message>
    <ts>2017-08-01T07:50:20.682794</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, though I don't think even google can handle a page that first fetches data from an API before being able to set meta tags</text>
  </message>
  <message>
    <ts>2017-08-01T07:51:37.706659</ts>
    <user>U0JBSEGHY</user>
    <text>Would you still suggest the `case..of` block &lt;@U153UK3FA&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T07:54:01.750766</ts>
    <user>U5W9X7VP1</user>
    <text>&lt;@U3SJEDR96&gt;, yes, google seems to index correctly after injecting content fetched with a HTTP request. (&lt;https://centrical.com/test/google-json-ld-and-javascript-crawling-and-indexing-test.html&gt;) Not sure about other search engines. But yeah, that doesn't help here. Maybe I'll do fine without dynamic meta tags.</text>
  </message>
  <message>
    <ts>2017-08-01T07:55:49.783869</ts>
    <user>U3SJEDR96</user>
    <text>That's interesting, thanks for that link :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-01T07:56:21.793912</ts>
    <user>U0JBSEGHY</user>
    <text>I can't figure out how to satisfy this type ```    Maybe ( a, b ) -&amp;gt; c

But the right side is:

    ( a, b ) -&amp;gt; b```</text>
  </message>
  <message>
    <ts>2017-08-01T07:59:04.847324</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U0JBSEGHY&gt; what code is producing that type error?</text>
  </message>
  <message>
    <ts>2017-08-01T08:00:53.884853</ts>
    <user>U0JBSEGHY</user>
    <text>I feel like I am stabbing in the dark :laughing:</text>
  </message>
  <message>
    <ts>2017-08-01T08:01:15.892338</ts>
    <user>U153UK3FA</user>
    <text>You should read the Maybe docs</text>
  </message>
  <message>
    <ts>2017-08-01T08:01:44.902165</ts>
    <user>U153UK3FA</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Maybe&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T08:03:24.935671</ts>
    <user>U153UK3FA</user>
    <text>Just like List.map allows you to apply a function to values contained within a List, Maybe.map allows you to apply a function to a value contained within a Maybe. </text>
  </message>
  <message>
    <ts>2017-08-01T08:06:15.992576</ts>
    <user>U0JBSEGHY</user>
    <text>Ok I wasn't trying map because I only have one Tuple in a list</text>
  </message>
  <message>
    <ts>2017-08-01T08:07:12.011733</ts>
    <user>U0JBSEGHY</user>
    <text>But that did the trick.</text>
  </message>
  <message>
    <ts>2017-08-01T08:07:20.014467</ts>
    <user>U0JBSEGHY</user>
    <text>Feel so nooby. Thats me for the night!</text>
  </message>
  <message>
    <ts>2017-08-01T09:09:46.492326</ts>
    <user>U5E3DU81K</user>
    <text>How would I display some text in an elm page, where the text is in a .txt file.</text>
  </message>
  <message>
    <ts>2017-08-01T09:16:46.698989</ts>
    <user>U0L27J3N0</user>
    <text>&lt;@U5E3DU81K&gt; you put the text file on some server (like the one that is serving your Elm app) and you retrieve it with a `Http.getString`</text>
  </message>
  <message>
    <ts>2017-08-01T09:23:53.916864</ts>
    <user>U5E3DU81K</user>
    <text>aha - thanks.</text>
  </message>
  <message>
    <ts>2017-08-01T10:43:21.751594</ts>
    <user>U3HQVHERX</user>
    <text>is there a guide on integrating sass compiling into `create-elm-app`? also, `create-elm-app` seems pretty heavy. what are some other options people use?</text>
  </message>
  <message>
    <ts>2017-08-01T10:44:00.776035</ts>
    <user>U3HQVHERX</user>
    <text>haha, just read the bottom of the readme - they list a bunch of other options</text>
  </message>
  <message>
    <ts>2017-08-01T11:06:15.655336</ts>
    <user>U6G82P7V1</user>
    <text>I'm tinkering with the `HTTP` example in the _Introduction to Elm_-guide (cat gif fetcher). Having added a textfield to my view and via `onInput` hooked it to the `topic`-property in `Model`, I am now able to enter another word and fetching a gif on another topic when pressing the button.
At present there is also a regular text element displaying `topic`, so whenever I alter the value of the text field, the regular text element also changes. I would rather have the regular text element change to the new word only when a new image is loaded (on the button click event for instance).</text>
  </message>
  <message>
    <ts>2017-08-01T11:07:48.715275</ts>
    <user>U6G82P7V1</user>
    <text>With jQuery or even regular Javascript, I would probably have captured the input elements value on the button click event, but I am now pondering how to go about acheiving this in the most _Elmy_ way possible...</text>
  </message>
  <message>
    <ts>2017-08-01T11:08:16.733542</ts>
    <user>U6G82P7V1</user>
    <text>Should I add another field to the `Model` (say, `topicInput`), hook that up to the input element and on the button click render a new `Model` where I set `topic` to the value of `topicInput`, or how would a more seasoned Elm programmer go about doing this?</text>
  </message>
  <message>
    <ts>2017-08-01T11:08:54.757704</ts>
    <user>U3SJEDR96</user>
    <text>Something like that, although I'd pass the "topic to set" with the message that contains the new data</text>
  </message>
  <message>
    <ts>2017-08-01T11:09:12.769734</ts>
    <user>U3SJEDR96</user>
    <text>so if, for some reason, they arrive out of order, my model (and view) will stay consistent</text>
  </message>
  <message>
    <ts>2017-08-01T11:09:43.790351</ts>
    <user>U3SJEDR96</user>
    <text>so it would be something like `Http.send (GotCatsResponse "new topic here")`</text>
  </message>
  <message>
    <ts>2017-08-01T11:10:55.837237</ts>
    <user>U6G82P7V1</user>
    <text>Thanks!</text>
  </message>
  <message>
    <ts>2017-08-01T11:13:02.920736</ts>
    <user>U6G82P7V1</user>
    <text>Is this the way to go about these sort of things in general? Say I have a registration form of some kind were the user is asked to enter details into several text fields, and I want to present him or her with a summary, but don't want this summary to update as they are typing but rather after everything is filled out. Will I need to add duplicate fields to my entire model?</text>
  </message>
  <message>
    <ts>2017-08-01T11:14:04.960917</ts>
    <user>U3LUC6SNS</user>
    <text>I've managed to deploy the Elixir/Phoenix backend to Heroku for the project I am working on, and would now like to do the same with the Elm frontend.  The frontend is running locally using webpack.  What do you recommend?</text>
  </message>
  <message>
    <ts>2017-08-01T11:16:45.068232</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U6G82P7V1&gt; you'd have to duplcate the data in your model, yeah, though depending on the usecase you'd build an abstraction over that like `type FieldValue = Validated String | Dirty String String`</text>
  </message>
  <message>
    <ts>2017-08-01T11:17:12.085443</ts>
    <user>U3SJEDR96</user>
    <text>so it wouldn't be duplicating fields per sé.</text>
  </message>
  <message>
    <ts>2017-08-01T11:18:57.153804</ts>
    <user>U6G82P7V1</user>
    <text>&lt;@U3SJEDR96&gt; I think I understand what you're saying, thanks for your help :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-01T11:52:54.472225</ts>
    <user>U3LUC6SNS</user>
    <text>I need to set the url for the app's backend depending on whether the app is running locally (development) or remotely (production).  How would I do that?</text>
  </message>
  <message>
    <ts>2017-08-01T11:54:03.516946</ts>
    <user>U0LPMPL2U</user>
    <text>Have you used flags before?</text>
  </message>
  <message>
    <ts>2017-08-01T11:55:20.567470</ts>
    <user>U0LPMPL2U</user>
    <text>This article shows how to use flags and webpack to pass in environment variables: &lt;https://robots.thoughtbot.com/configuring-an-elm-app-with-environment-variables-via-webpack&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T11:55:24.570399</ts>
    <user>U3SQ42JJW</user>
    <text>&lt;@U3LUC6SNS&gt; I did that via javascript by getting the current URL -&amp;gt; this sets a flag which is loaded into my model - so I can use the backend-host on every request</text>
  </message>
  <message>
    <ts>2017-08-01T11:56:44.622508</ts>
    <user>U3LUC6SNS</user>
    <text>@marscho --- Fantastic - thanks!</text>
  </message>
  <message>
    <ts>2017-08-01T11:57:44.661687</ts>
    <user>U3LUC6SNS</user>
    <text>Have you used webpack for deployment (Heroku or elsewhere).  I just deployed the backend, so this is the next step.</text>
  </message>
  <message>
    <ts>2017-08-01T12:00:05.753833</ts>
    <user>U3SQ42JJW</user>
    <text>No my deployment is done with git. 
I only want to decide if i am on localhost or on the prod environment

```
// The host is ported to elm to set the api-endpoint on startup
var host = window.location.hostname === 'localhost'
    ? '&lt;http://localhost:3000&gt;'
    : '&lt;https://playground.devpunx.com&gt;'
```</text>
  </message>
  <message>
    <ts>2017-08-01T12:01:41.818457</ts>
    <user>U3SQ42JJW</user>
    <text>pretty simple. So the elm-app just checks on startup (when the browser loads the elm-app) where it is. That sets the flag which is loaded into the model on my model initialization</text>
  </message>
  <message>
    <ts>2017-08-01T12:03:29.887777</ts>
    <user>U3SQ42JJW</user>
    <text>But I think this is completely independent of which deployment process you use. The decision which endpoint the api should connect to is done during runtime of the elm app… so to say…</text>
  </message>
  <message>
    <ts>2017-08-01T12:04:32.927928</ts>
    <user>U3SQ42JJW</user>
    <text>launching with flags looks in my js file like this
```
// prepare the flags-object
var flags = {
    token: token,
    settings: settings,
    apiEndpoint: host,
    random: random
}

// Launch Elm with flags
var node = document.getElementById("app")
var app  = Elm.Main.embed(node, flags)
```</text>
  </message>
  <message>
    <ts>2017-08-01T12:07:02.020763</ts>
    <user>U3SQ42JJW</user>
    <text>In my elm model, the apiEndpoint is just a string with localhost or the prod-server adress. In requests I then can just use `model.apiEndpoint ++ "/getStuff"`</text>
  </message>
  <message>
    <ts>2017-08-01T12:08:25.069871</ts>
    <user>U3SQ42JJW</user>
    <text>Summing things up… you dont need to respect this in the deployment or build process. Just make your app sensitive on where it is launched…</text>
  </message>
  <message>
    <ts>2017-08-01T12:16:07.340542</ts>
    <user>U3LUC6SNS</user>
    <text>Thankyou!  One more question - how do you deploy with git?</text>
  </message>
  <message>
    <ts>2017-08-01T12:39:46.171411</ts>
    <user>U3SQ42JJW</user>
    <text>Well, that is not for real prod environments - but basically for my personal experiments.
I have the code on git already. On my remote server I have a clone of that git which is configured as remote on my local git. 

When I want to deploy I just push my release branch to the remote git. Then a script on the remote machine checks out the release branch and boom .. release done…</text>
  </message>
  <message>
    <ts>2017-08-01T12:40:43.204659</ts>
    <user>U3SQ42JJW</user>
    <text>I know that's "poor mans deployment" :wink:</text>
  </message>
  <message>
    <ts>2017-08-01T12:40:52.209903</ts>
    <user>U3SQ42JJW</user>
    <text>but works fast</text>
  </message>
  <message>
    <ts>2017-08-01T12:41:18.224920</ts>
    <user>U6EV3H0N7</user>
    <text>could use github pages (or equivalent) I think</text>
  </message>
  <message>
    <ts>2017-08-01T12:41:34.234417</ts>
    <user>U6EV3H0N7</user>
    <text>or something like surge.sh is quite good for just hosting static files</text>
  </message>
  <message>
    <ts>2017-08-01T12:43:47.309844</ts>
    <user>U3SQ42JJW</user>
    <text>I run my backends with node.js - frontend all Elm. I have some FreeBSD machines on digitalocean. node.js process-management is done via pm2…  But you have thousands of good alternatives :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-01T12:45:56.383636</ts>
    <user>U0J1M0F32</user>
    <text>I've hosted several Elm projects on Surge.sh and loved it.</text>
  </message>
  <message>
    <ts>2017-08-01T12:55:22.710011</ts>
    <user>U3SQ42JJW</user>
    <text>Anyone with a good hint of making a `(List ( String, Int ))`that has exactly 2 elements into a Tuple like `(Int, Int)`where the Int's are the Int's of exact those two Int's in the List?</text>
  </message>
  <message>
    <ts>2017-08-01T12:56:17.741835</ts>
    <user>U0J1M0F32</user>
    <text>That sounds like a tongue twister.</text>
  </message>
  <message>
    <ts>2017-08-01T12:56:25.746932</ts>
    <user>U3SQ42JJW</user>
    <text>yes, sorry…</text>
  </message>
  <message>
    <ts>2017-08-01T12:57:03.770506</ts>
    <user>U0J1M0F32</user>
    <text>You want something with a type signature of: `getInts : List (String, Int) -&amp;gt; (Int, Int)`?</text>
  </message>
  <message>
    <ts>2017-08-01T12:57:12.775940</ts>
    <user>U3SQ42JJW</user>
    <text>It could even be a list of three which resolves then as a tripple tuple</text>
  </message>
  <message>
    <ts>2017-08-01T12:57:22.781607</ts>
    <user>U3SQ42JJW</user>
    <text>Yes</text>
  </message>
  <message>
    <ts>2017-08-01T12:57:48.797240</ts>
    <user>U3SQ42JJW</user>
    <text>I just realized that this is impossible….</text>
  </message>
  <message>
    <ts>2017-08-01T12:57:56.802142</ts>
    <user>U0J1M0F32</user>
    <text>:thinking_face: Yah.</text>
  </message>
  <message>
    <ts>2017-08-01T12:58:47.832852</ts>
    <user>U3SQ42JJW</user>
    <text>Because  List length is undefined the resolving type must be something like … er undefined…</text>
  </message>
  <message>
    <ts>2017-08-01T13:00:02.878153</ts>
    <user>U3SQ42JJW</user>
    <text>Ok, I will have to solve this with List.head and if statements…</text>
  </message>
  <message>
    <ts>2017-08-01T13:00:24.891652</ts>
    <user>U48AEBJQ3</user>
    <text>Why do you have a list with a fixed length to begin with?</text>
  </message>
  <message>
    <ts>2017-08-01T13:01:40.938128</ts>
    <user>U3SQ42JJW</user>
    <text>It could even be more. But it is the Json that I get from a backend.</text>
  </message>
  <message>
    <ts>2017-08-01T13:02:32.969601</ts>
    <user>U3SQ42JJW</user>
    <text>It once was a Tuple, then encoded to a json object… send to a backend… and then received as a json object again and should now turned again into this tuple</text>
  </message>
  <message>
    <ts>2017-08-01T13:03:47.013881</ts>
    <user>U3SQ42JJW</user>
    <text>I know… something is completely strange here… :thinking_face:</text>
  </message>
  <message>
    <ts>2017-08-01T13:04:19.033139</ts>
    <user>U48AEBJQ3</user>
    <text>Well, my first reaction would be to try to solve this problem at the JSON decoding step.</text>
  </message>
  <message>
    <ts>2017-08-01T13:05:28.072319</ts>
    <user>U3SQ42JJW</user>
    <text>I use this decoder: `JD.maybe (JD.field "range" (JD.keyValuePairs &lt;http://JD.int|JD.int&gt;))`</text>
  </message>
  <message>
    <ts>2017-08-01T13:06:22.101592</ts>
    <user>U48AEBJQ3</user>
    <text>I can try writing something up, you seemed to say that the list could be longer? Do we even care about the field names?</text>
  </message>
  <message>
    <ts>2017-08-01T13:06:25.103488</ts>
    <user>U3SQ42JJW</user>
    <text>range is a json-object
```
{"start":0, "stop":5}
```</text>
  </message>
  <message>
    <ts>2017-08-01T13:07:28.139772</ts>
    <user>U48AEBJQ3</user>
    <text>```
JD.maybe (JD.field "range" (JD.map2 (,) (JD.field "start" &lt;http://JD.int|JD.int&gt;) (JD.field "stop" &lt;http://JD.int|JD.int&gt;))
```</text>
  </message>
  <message>
    <ts>2017-08-01T13:09:31.207215</ts>
    <user>U3SQ42JJW</user>
    <text>daFuCK :flushed:</text>
  </message>
  <message>
    <ts>2017-08-01T13:09:47.216325</ts>
    <user>U3SQ42JJW</user>
    <text>sorry… but that's by far better. Perfect !!!</text>
  </message>
  <message>
    <ts>2017-08-01T13:09:51.218419</ts>
    <user>U3SQ42JJW</user>
    <text>Thanks :smile:</text>
  </message>
  <message>
    <ts>2017-08-01T13:10:23.236411</ts>
    <user>U48AEBJQ3</user>
    <text>NP. Just always try to make sure that the data that your decoder produces is actual data you want in your app. Cleaning it up later just leads to problems.</text>
  </message>
  <message>
    <ts>2017-08-01T13:10:33.242243</ts>
    <user>U5QE9LDU4</user>
    <text>is JD like an alias for JSON decoder?</text>
  </message>
  <message>
    <ts>2017-08-01T13:10:48.250658</ts>
    <user>U48AEBJQ3</user>
    <text>`import Json.Decode as JD`</text>
  </message>
  <message>
    <ts>2017-08-01T13:10:52.253035</ts>
    <user>U3SQ42JJW</user>
    <text>yes</text>
  </message>
  <message>
    <ts>2017-08-01T13:15:33.410255</ts>
    <user>U5QE9LDU4</user>
    <text>is there a way to expand the sidebar for the history explorer?</text>
  </message>
  <message>
    <ts>2017-08-01T13:15:47.418474</ts>
    <user>U5QE9LDU4</user>
    <text>or is hovering over each call the only way to read the full message?</text>
  </message>
  <message>
    <ts>2017-08-01T13:18:47.522523</ts>
    <user>U3SQ42JJW</user>
    <text>in Slack?</text>
  </message>
  <message>
    <ts>2017-08-01T13:19:07.533685</ts>
    <user>U5QE9LDU4</user>
    <text>no, the time travel debugger</text>
  </message>
  <message>
    <ts>2017-08-01T13:20:32.583001</ts>
    <user>U5QE9LDU4</user>
    <text>I'm assuming you can't, just wanted to make sure i'm not missing something obvious</text>
  </message>
  <message>
    <ts>2017-08-01T13:20:42.589003</ts>
    <user>U3SQ42JJW</user>
    <text>no</text>
  </message>
  <message>
    <ts>2017-08-01T13:20:53.594931</ts>
    <user>U3SQ42JJW</user>
    <text>only in the browser inspector</text>
  </message>
  <message>
    <ts>2017-08-01T13:21:25.613976</ts>
    <user>U6EV3H0N7</user>
    <text>&lt;@U5QE9LDU4&gt; I think this was discussed _somewhere_ in this slack yesterday, and the answer was "maybe in 0.19, maybe not" if i remember correctly</text>
  </message>
  <message>
    <ts>2017-08-01T13:21:33.618442</ts>
    <user>U3SQ42JJW</user>
    <text>but that's of course not persistent…</text>
  </message>
  <message>
    <ts>2017-08-01T13:22:03.636062</ts>
    <user>U5QE9LDU4</user>
    <text>kk thanks. Ain't no biggy.</text>
  </message>
  <message>
    <ts>2017-08-01T14:54:23.849315</ts>
    <user>U5X2ZRFDF</user>
    <text>```
getInts : List (String, Int) -&amp;gt; Maybe (Int, Int)
getInts pairs =
    case pairs of
        [(_, i1), (_, i2)] -&amp;gt; Just (i1, i2)
        _ -&amp;gt; Nothing
```</text>
  </message>
  <message>
    <ts>2017-08-01T15:04:44.208642</ts>
    <user>U23SA861Y</user>
    <text>sry what?</text>
  </message>
  <message>
    <ts>2017-08-01T15:05:09.222848</ts>
    <user>U48AEBJQ3</user>
    <text>Leftover from a previous conversation, it appears.</text>
  </message>
  <message>
    <ts>2017-08-01T15:06:09.255586</ts>
    <user>U48AEBJQ3</user>
    <text>And yes, that is how one would implement it if there wasn't a way to fix it before it became a problem.</text>
  </message>
  <message>
    <ts>2017-08-01T15:25:48.873799</ts>
    <user>U3LUC6SNS</user>
    <text>I'm looking for more advice on how to deploy an Elm app.  Fire away! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-01T15:30:43.032231</ts>
    <user>U6E5PS83X</user>
    <text>Aww, I can't do this:

`import Project.Thing.Request.User as Request.User`

Or can I and I'm missing something?</text>
  </message>
  <message>
    <ts>2017-08-01T15:32:32.090427</ts>
    <user>U6E5PS83X</user>
    <text>for example if i have

```
import Project.Thing.Data.User as User
...
import Project.Thing.Request.User as ???
```</text>
  </message>
  <message>
    <ts>2017-08-01T15:35:18.176560</ts>
    <user>U4872964V</user>
    <text>No, but you can import it as `RequestUser` for instance</text>
  </message>
  <message>
    <ts>2017-08-01T15:35:37.186939</ts>
    <user>U6E5PS83X</user>
    <text>yeah that's probably going to be my workaround. thanks &lt;@U4872964V&gt;!</text>
  </message>
  <message>
    <ts>2017-08-01T15:48:51.601128</ts>
    <user>U3SJEDR96</user>
    <text>You could also make things potentially confusing and improt both `as User` :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-08-01T15:49:34.623966</ts>
    <user>U6CB44HMF</user>
    <text>What do you all verbalize something like `Html Msg` as? Do you say "An Html with Msg subtype", or like "An Html Msg"? Or what?</text>
  </message>
  <message>
    <ts>2017-08-01T15:50:11.643502</ts>
    <user>U5QE9LDU4</user>
    <text>&lt;@U3LUC6SNS&gt; are you curious about deploying an app in general or something specific about Elm? Elm just generates a js file that you include in your index.html as far as I know</text>
  </message>
  <message>
    <ts>2017-08-01T15:50:43.660272</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U6CB44HMF&gt;  I'll typically say "An Html Msg" or "An Html emitting Msg"</text>
  </message>
  <message>
    <ts>2017-08-01T15:51:10.674946</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U5AN2ATNZ&gt; you're trying to DRY up your case statement?</text>
  </message>
  <message>
    <ts>2017-08-01T15:51:50.696652</ts>
    <user>U5AN2ATNZ</user>
    <text>I guess you could say that. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-01T15:52:02.703286</ts>
    <user>U4872964V</user>
    <text>&lt;@U5AN2ATNZ&gt; I could tell you, if you tell me why you think that would be better than what you have :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-01T15:52:04.704545</ts>
    <user>U5AN2ATNZ</user>
    <text>It's not logical to copy/paste that getRandomGif message all over, right?</text>
  </message>
  <message>
    <ts>2017-08-01T15:53:00.734528</ts>
    <user>U0LPMPL2U</user>
    <text>returning `getRandomGif` or `triggerMorePlease` is equivalent in terms of DRYness</text>
  </message>
  <message>
    <ts>2017-08-01T15:53:21.746256</ts>
    <user>U0LPMPL2U</user>
    <text>however, it's not recommended to trigger `Msg` manually</text>
  </message>
  <message>
    <ts>2017-08-01T15:53:35.754331</ts>
    <user>U0LPMPL2U</user>
    <text>`Msg` is used to respond to events from the outside world</text>
  </message>
  <message>
    <ts>2017-08-01T15:54:32.785589</ts>
    <user>U0LPMPL2U</user>
    <text>You've extracted a `getRandomGif` function that's being re-used in two places. I think you've DRYed this up as far as it will go.</text>
  </message>
  <message>
    <ts>2017-08-01T15:55:04.802336</ts>
    <user>U5AN2ATNZ</user>
    <text>That makes sense, actually. Hadn't thought about it that way yet.</text>
  </message>
  <message>
    <ts>2017-08-01T15:55:45.825002</ts>
    <user>U5QE9LDU4</user>
    <text>&lt;@U0LPMPL2U&gt; Can you explain why it isn't recommended to trigger Msg manually?</text>
  </message>
  <message>
    <ts>2017-08-01T15:56:22.844457</ts>
    <user>U5AN2ATNZ</user>
    <text>I was thinking: model's topic changed, so I could reuse MorePlase without any "params", which would get the topic from the model and just get me a new image, instead of calling the getRandomGif myself with a different topic.</text>
  </message>
  <message>
    <ts>2017-08-01T15:56:37.852646</ts>
    <user>U0LPMPL2U</user>
    <text>when you're trying to DRY up your code, there's no need to go all the way out to the runtime and back when you could extract a shared function instead</text>
  </message>
  <message>
    <ts>2017-08-01T15:57:07.868863</ts>
    <user>U5AN2ATNZ</user>
    <text>This could be more error prone in that I can get a new image with this new topic, but the topic might not be set on my model for future clicks on the moreplease button, right?</text>
  </message>
  <message>
    <ts>2017-08-01T15:57:35.884236</ts>
    <user>U0LPMPL2U</user>
    <text>correct. when using a `Msg`, your code also becomes asynchronous which can lead bugs</text>
  </message>
  <message>
    <ts>2017-08-01T15:57:37.885358</ts>
    <user>U5AN2ATNZ</user>
    <text>So, reusing the MorePlease message which would get the topic from my model might block me from making the mistake?</text>
  </message>
  <message>
    <ts>2017-08-01T15:58:38.918978</ts>
    <user>U0LPMPL2U</user>
    <text>the other way around. reusing the Msg can lead to events happening in a different order than you expected</text>
  </message>
  <message>
    <ts>2017-08-01T15:59:30.947323</ts>
    <user>U0LPMPL2U</user>
    <text>In the Elm architecture, `Msg` represents events from the outside world, not an "interface" that should should be triggering programatically</text>
  </message>
  <message>
    <ts>2017-08-01T16:01:05.000812</ts>
    <user>U0LPMPL2U</user>
    <text>If you break up your behavior into small functions, you can easily combine and reuse them in different branches of your `update`</text>
  </message>
  <message>
    <ts>2017-08-01T16:01:13.005177</ts>
    <user>U3LUC6SNS</user>
    <text>&lt;@U5QE9LDU4&gt; I've been using webpack so far.  All the files needed for the app are either in `./src` or `./js`.  The `./src` directory contains elm files and folders of elm files, as well as a `index.html`, a `index.js`, and finally ./src/css` which.  All these are nee.  I tried `elm-make --output foo.js` at root level, but it did not compile anything.  How should I go about compiling all this?</text>
  </message>
  <message>
    <ts>2017-08-01T16:01:22.010103</ts>
    <user>U5AN2ATNZ</user>
    <text>Ok, so how would I go about preventing myself from making an edit in the future, returning ( model, getRandomGif newTopic ) from that branch. The code would still work at first, but next time I get into MorePlease my topic would not have changed. Apart from writing a test, of course.</text>
  </message>
  <message>
    <ts>2017-08-01T16:01:56.028901</ts>
    <user>U5AN2ATNZ</user>
    <text>Oh, extract a funtion that takes my model instead of just the topic, then?</text>
  </message>
  <message>
    <ts>2017-08-01T16:01:59.030584</ts>
    <user>U4872964V</user>
    <text>I don't see how sending the `MorePlease` message prevents you from making that mistake though</text>
  </message>
  <message>
    <ts>2017-08-01T16:02:11.037016</ts>
    <user>U4872964V</user>
    <text>the topic would still not be set</text>
  </message>
  <message>
    <ts>2017-08-01T16:02:42.054130</ts>
    <user>U4872964V</user>
    <text>logical errors you write tests for yes</text>
  </message>
  <message>
    <ts>2017-08-01T16:04:09.100224</ts>
    <user>U5AN2ATNZ</user>
    <text>My return value would be ( {model | topic = newTopic } , &amp;lt;trigger MorePlease&amp;gt; ), which would trigger getRandomGif with the new model</text>
  </message>
  <message>
    <ts>2017-08-01T16:05:16.135496</ts>
    <user>U4872964V</user>
    <text>yes, but it could be (erroneously) `(model, &amp;lt;trigger MorePlease&amp;gt;)` just as well, exactly the same error as when calling the function directly</text>
  </message>
  <message>
    <ts>2017-08-01T16:05:27.141017</ts>
    <user>U5QE9LDU4</user>
    <text>I'm assuming your webpack is working for dev. 

And considering you are also using webpack for your css, you probably want to stick with webpack instead of running elm-make manually.

you will need to understand how your current webpack config works and then look at webpacks documentation for creating a production build. &lt;https://webpack.js.org/guides/production/&gt;

You will probably need to look at the elm-webpack-loader (I am assuming you are using this) &lt;https://github.com/elm-community/elm-webpack-loader&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T16:05:54.155669</ts>
    <user>U5AN2ATNZ</user>
    <text>Which would also fail to get an image of the new topic in the first instance (aka the user would see it right away), not only on the second one.</text>
  </message>
  <message>
    <ts>2017-08-01T16:06:11.164384</ts>
    <user>U4872964V</user>
    <text>yes, so?</text>
  </message>
  <message>
    <ts>2017-08-01T16:06:28.173101</ts>
    <user>U5QE9LDU4</user>
    <text>once you have the export you want, you can decide how to deploy</text>
  </message>
  <message>
    <ts>2017-08-01T16:06:34.176428</ts>
    <user>U3LUC6SNS</user>
    <text>Thanks!  I will look at this.</text>
  </message>
  <message>
    <ts>2017-08-01T16:06:52.185117</ts>
    <user>U4872964V</user>
    <text>The point is that messages are, conceptually, input to your program from the outside world, not meant to be used for internal communication (as it's asynchronous)</text>
  </message>
  <message>
    <ts>2017-08-01T16:08:24.233390</ts>
    <user>U5QE9LDU4</user>
    <text>Just to make sure, "outside world" meaning like user input and/or server response?</text>
  </message>
  <message>
    <ts>2017-08-01T16:08:29.235979</ts>
    <user>U4872964V</user>
    <text>you _can_ use them if you actually want asynchronous evaluation (for instance if you have a long-running calculation, or want a delay or something)</text>
  </message>
  <message>
    <ts>2017-08-01T16:08:37.239917</ts>
    <user>U5AN2ATNZ</user>
    <text>Understood and agreed. :slightly_smiling_face: So, how would I go about improving this code snippet so that both the MorePlease and the ChangeTopic branches would make use of the full model to get the new data, instead of passing a string only?</text>
  </message>
  <message>
    <ts>2017-08-01T16:08:42.242235</ts>
    <user>U4872964V</user>
    <text>&lt;@U5QE9LDU4&gt; anything that is not Elm code</text>
  </message>
  <message>
    <ts>2017-08-01T16:08:49.245854</ts>
    <user>U5QE9LDU4</user>
    <text>kk</text>
  </message>
  <message>
    <ts>2017-08-01T16:09:18.260429</ts>
    <user>U5AN2ATNZ</user>
    <text>I can change the signature of getRandomGif to take in a Model, but can I pass that new model when I'm in the ChangeTopic branch?</text>
  </message>
  <message>
    <ts>2017-08-01T16:10:01.283033</ts>
    <user>U5AN2ATNZ</user>
    <text>( { model | topic = newTopic }, getRandomGif model) wouldn't do the trick I guess?</text>
  </message>
  <message>
    <ts>2017-08-01T16:10:10.287320</ts>
    <user>U0LPMPL2U</user>
    <text>You'd need a `let newModel = ...` in the `ChangeTopic` branch</text>
  </message>
  <message>
    <ts>2017-08-01T16:10:18.291814</ts>
    <user>U0LPMPL2U</user>
    <text>`model` is always the _old_ model</text>
  </message>
  <message>
    <ts>2017-08-01T16:10:20.293059</ts>
    <user>U4872964V</user>
    <text>you can do whatever you like, it's just functions</text>
  </message>
  <message>
    <ts>2017-08-01T16:10:44.305649</ts>
    <user>U5AN2ATNZ</user>
    <text>Ohh, right, I can put that in a let statement and use it twice in the return value. Duhh.</text>
  </message>
  <message>
    <ts>2017-08-01T16:10:51.309146</ts>
    <user>U5AN2ATNZ</user>
    <text>Thx! :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-01T16:11:14.321449</ts>
    <user>U4872964V</user>
    <text>I think your original code is the best though :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-01T16:11:17.322533</ts>
    <user>U5AN2ATNZ</user>
    <text>That would improve my code and prevent the mistake of not changing the model but still passing the new topic once</text>
  </message>
  <message>
    <ts>2017-08-01T16:11:22.325628</ts>
    <user>U5AN2ATNZ</user>
    <text>Why?</text>
  </message>
  <message>
    <ts>2017-08-01T16:11:33.331121</ts>
    <user>U4872964V</user>
    <text>because it's completely clear what it does</text>
  </message>
  <message>
    <ts>2017-08-01T16:12:16.353735</ts>
    <user>U4872964V</user>
    <text>set the topic and fetch an image for the new topic</text>
  </message>
  <message>
    <ts>2017-08-01T16:15:32.455859</ts>
    <user>U4872964V</user>
    <text>another problem with emitting a message is that now you have a non-obvious dependence on how that message is handled. If you change the way that message is handled, you now also change the way that the `ChangeTopic` is handled, which may not be what you want</text>
  </message>
  <message>
    <ts>2017-08-01T16:18:36.553036</ts>
    <user>U0LPMPL2U</user>
    <text>I've found that if I use `update` only for dispatching and move all the actual logic into functions, I no longer find myself wanting to trigger `Msg` manually</text>
  </message>
  <message>
    <ts>2017-08-01T16:18:42.556033</ts>
    <user>U0LPMPL2U</user>
    <text>it's also much more readable</text>
  </message>
  <message>
    <ts>2017-08-01T16:20:37.617649</ts>
    <user>U4872964V</user>
    <text>Yes, and if you confine messages to actual events from the outside, it's much easier to understand the program flow</text>
  </message>
  <message>
    <ts>2017-08-01T16:21:22.642157</ts>
    <user>U5AN2ATNZ</user>
    <text>Thx for the input :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-01T16:22:11.668104</ts>
    <user>U5AN2ATNZ</user>
    <text>Would you say that this applies to only the elm architecture, or would it go broader, as in "in all functional languages"?</text>
  </message>
  <message>
    <ts>2017-08-01T16:22:36.681310</ts>
    <user>U5AN2ATNZ</user>
    <text>Or even broader than that, since I can see how it would make sense in an OO language as well...</text>
  </message>
  <message>
    <ts>2017-08-01T16:23:33.711911</ts>
    <user>U4872964V</user>
    <text>well, messages are pretty specific to the elm architecture</text>
  </message>
  <message>
    <ts>2017-08-01T16:23:40.716490</ts>
    <user>U5AN2ATNZ</user>
    <text>I'll have to figure that out in the code base at work tomorrow, it might help some use cases to be simpler. Don't respawn (new) events, just handle all events that have to do the same thing in one function that gets called from those different places.</text>
  </message>
  <message>
    <ts>2017-08-01T16:24:10.732442</ts>
    <user>U4872964V</user>
    <text>Now, if you really want to do it anyway, use `Task.perform` :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-01T16:24:43.750201</ts>
    <user>U5AN2ATNZ</user>
    <text>Let's pretend you didn't say that for now. :wink:</text>
  </message>
  <message>
    <ts>2017-08-01T16:25:33.777612</ts>
    <user>U5AN2ATNZ</user>
    <text>I'd rather try to do it the "correct" way now, instead of polluting my dive into functional languages with OO concepts.</text>
  </message>
  <message>
    <ts>2017-08-01T16:26:01.792859</ts>
    <user>U5AN2ATNZ</user>
    <text>Btw, you mention that messages are specific to the elm architecture. Would you say that messages are different from events that you typically see in OO languages?</text>
  </message>
  <message>
    <ts>2017-08-01T16:26:38.812873</ts>
    <user>U4872964V</user>
    <text>yes, normally you'd attach event handlers or some such</text>
  </message>
  <message>
    <ts>2017-08-01T16:26:43.815738</ts>
    <user>U5AN2ATNZ</user>
    <text>Since I am currently interpreting a Msg as an "event" that gets spawned somewhere and handled somewhere else.</text>
  </message>
  <message>
    <ts>2017-08-01T16:27:25.838298</ts>
    <user>U4872964V</user>
    <text>but in Elm they are just tagged and sent into the message queue</text>
  </message>
  <message>
    <ts>2017-08-01T16:27:56.855122</ts>
    <user>U5AN2ATNZ</user>
    <text>More like publish/subscribe I guess?</text>
  </message>
  <message>
    <ts>2017-08-01T16:28:13.863975</ts>
    <user>U4872964V</user>
    <text>but it applies to things like react/redux etc</text>
  </message>
  <message>
    <ts>2017-08-01T16:29:50.917548</ts>
    <user>U5AN2ATNZ</user>
    <text>I typically call actions in redux events as well... But I might need to forget about that word. :stuck_out_tongue:</text>
  </message>
  <message>
    <ts>2017-08-01T16:30:40.946617</ts>
    <user>U5AN2ATNZ</user>
    <text>Great, thx for the help and the insights, I got a whole lot of new things to consider. :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-01T16:31:06.961465</ts>
    <user>U5AN2ATNZ</user>
    <text>Back to the tutorials now :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-01T17:14:25.324504</ts>
    <user>U6GP18APL</user>
    <text>Hello guys, I'm new in the slack, new to elm. I played with it using the beginnerProgram for a while, and now I want to build a small app. Can you point me some examples or tutorials on building real apps with multiple pages, routing, http, css(not the default inline), etc? I'm struggling to find it by myself, it's not like javascript where you have tons of it</text>
  </message>
  <message>
    <ts>2017-08-01T17:19:10.458814</ts>
    <user>U2U94G0QG</user>
    <text>&lt;https://github.com/isRuslan/awesome-elm&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T17:19:26.466207</ts>
    <user>U2U94G0QG</user>
    <text>also &lt;https://dev.to/rtfeldman/tour-of-an-open-source-elm-spa&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T17:21:00.509706</ts>
    <user>U23SA861Y</user>
    <text>you probably want and `andThen` with some of your own validation code</text>
  </message>
  <message>
    <ts>2017-08-01T17:23:20.574197</ts>
    <user>U23SA861Y</user>
    <text>something like:
```
pointVerify: Point -&amp;gt; Parser Point
pointVerify (x,y) = 
   if x &amp;lt;= y then
      Parser.succeed (x,y)
   else 
     Parser.fail "x must be less than or equal to y"
```
use as:
```
Parser.andThen pointVerify pointParser
```</text>
  </message>
  <message>
    <ts>2017-08-01T17:28:05.704808</ts>
    <user>U6D0EGB4K</user>
    <text>Hi jonf: Thanks, that's helpful! But I think it doesn't quite work for what I'm doing. The idea is that I want to do the error checking before the end of the Point parsing, so as to get a "precise position" of the error. Say for example if the Point has 3 floats, and if there is something wrong with the first two, then I want that error to be generated at the position where the 2nd float is parsed, instead of waiting until the end of the parsing to check the whole thing. My application has several things in a row that are much larger than floats (spanning many lines) so it's important not to wait until the end to do the validation, so that I can direct to the exact line where the error was first detected.</text>
  </message>
  <message>
    <ts>2017-08-01T17:29:19.738121</ts>
    <user>U23SA861Y</user>
    <text>I believe that will do what you want (after all you can't validate that that statement is true until after you have both values</text>
  </message>
  <message>
    <ts>2017-08-01T17:29:33.744563</ts>
    <user>U23SA861Y</user>
    <text>how are you producing the tuple from the two points?</text>
  </message>
  <message>
    <ts>2017-08-01T17:29:38.746741</ts>
    <user>U23SA861Y</user>
    <text>I presume via map2</text>
  </message>
  <message>
    <ts>2017-08-01T17:30:14.763187</ts>
    <user>U23SA861Y</user>
    <text>I must admit my knowledge of the parser library is a not fantastic.</text>
  </message>
  <message>
    <ts>2017-08-01T17:31:29.796704</ts>
    <user>U23SA861Y</user>
    <text>ok then, rather than `succeed Point` you can use pointVerify</text>
  </message>
  <message>
    <ts>2017-08-01T17:31:36.800189</ts>
    <user>U6D0EGB4K</user>
    <text>Suppose the Point is 3 floats, then at the time I've read only two of the floats, there is no Point constructed yet, so I can't pass that value to the pointVerify function.</text>
  </message>
  <message>
    <ts>2017-08-01T17:34:22.873057</ts>
    <user>U23SA861Y</user>
    <text>so what that Parser Point is doing is creating a parser of the type `Parser (Float -&amp;gt; Float -&amp;gt; Point)`</text>
  </message>
  <message>
    <ts>2017-08-01T17:35:05.891947</ts>
    <user>U23SA861Y</user>
    <text>so the parser you have doesn't handle tuples any bigger than two</text>
  </message>
  <message>
    <ts>2017-08-01T17:36:23.925195</ts>
    <user>U23SA861Y</user>
    <text>you want something a bit recursive</text>
  </message>
  <message>
    <ts>2017-08-01T17:36:31.928624</ts>
    <user>U23SA861Y</user>
    <text>hmmm</text>
  </message>
  <message>
    <ts>2017-08-01T17:37:05.942658</ts>
    <user>U6D0EGB4K</user>
    <text>Well, suppose the Point is 3D (i.e., `type alias Point = { x:Float, y:Float, z:Float}`)</text>
  </message>
  <message>
    <ts>2017-08-01T17:37:42.958504</ts>
    <user>U23SA861Y</user>
    <text>so Point isn't dynamic in size like that as you have coded it.</text>
  </message>
  <message>
    <ts>2017-08-01T17:39:00.991033</ts>
    <user>U6D0EGB4K</user>
    <text>No, say it's fixed size, but that the float descriptions are so long that it's really important to pinpoint the exactly position of an error.</text>
  </message>
  <message>
    <ts>2017-08-01T17:41:44.060971</ts>
    <user>U6D0EGB4K</user>
    <text>The `|.` and `|=` syntax is very nice, but a bit alien to me, so I'm not sure precisely what it's a shorthand for, and how to get a name for some of the intermediate values it produces and then run a check based on those names. I see from the source code that `|=` calls map2, but I have trouble following the logic exactly.</text>
  </message>
  <message>
    <ts>2017-08-01T17:42:12.072433</ts>
    <user>U6D0EGB4K</user>
    <text>But perhaps I should call map2 directly instead?</text>
  </message>
  <message>
    <ts>2017-08-01T17:42:34.081297</ts>
    <user>U23SA861Y</user>
    <text>so whats going on here, is you take a function which takes the values you care about and then those operators slowly consume values which get handed in as parameters</text>
  </message>
  <message>
    <ts>2017-08-01T17:42:47.086662</ts>
    <user>U6D0EGB4K</user>
    <text>right</text>
  </message>
  <message>
    <ts>2017-08-01T17:42:52.088486</ts>
    <user>U23SA861Y</user>
    <text>use the operators as the library recommends that</text>
  </message>
  <message>
    <ts>2017-08-01T17:43:04.093726</ts>
    <user>U23SA861Y</user>
    <text>the function isn't "called" until the last value is specified</text>
  </message>
  <message>
    <ts>2017-08-01T17:43:20.100485</ts>
    <user>U23SA861Y</user>
    <text>However, when it is called you can then provide a message indicating which value is out of place</text>
  </message>
  <message>
    <ts>2017-08-01T17:44:09.120222</ts>
    <user>U23SA861Y</user>
    <text>there is also some stuff you might want to read in regards to delayed commits</text>
  </message>
  <message>
    <ts>2017-08-01T17:45:12.145369</ts>
    <user>U23SA861Y</user>
    <text>yeah, there looks like there is something in there that may be useful to you</text>
  </message>
  <message>
    <ts>2017-08-01T17:45:49.161129</ts>
    <user>U6D0EGB4K</user>
    <text>ok, thanks :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-01T20:37:36.120257</ts>
    <user>U2SR9DL7Q</user>
    <text>Can anyone help me understand this stack overflow answer? &lt;https://stackoverflow.com/questions/12405555/css-extend-div-to-fit-the-whole-page&gt; I'm trying to get a div to expand to the full height of my page and it absolutely refuses.</text>
  </message>
  <message>
    <ts>2017-08-01T20:42:53.185999</ts>
    <user>U0ZRNV5M3</user>
    <text>&lt;@U2SR9DL7Q&gt; do you have an example?</text>
  </message>
  <message>
    <ts>2017-08-01T20:43:14.190394</ts>
    <user>U0ZRNV5M3</user>
    <text>it's usually the case that the div's parent does not have a height</text>
  </message>
  <message>
    <ts>2017-08-01T20:54:02.324508</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U0ZRNV5M3&gt; yeah... I'm using mdl, so the whole view is nestled in this Layout object. Let me see if I can cut out a snippet that makes sense.</text>
  </message>
  <message>
    <ts>2017-08-01T20:59:11.388711</ts>
    <user>U2SR9DL7Q</user>
    <text>```
viewGameBoard : Model -&amp;gt; Players -&amp;gt; Html Msg
viewGameBoard model players =
    let
        player4 =
            Zipper.current &amp;lt;| Zipper.last players

        playerlist =
            Zipper.toList players
    in
    Options.div [ css "height" "100%" ]
        [ grid
            [ css "text-align" "center"
            ]
          &amp;lt;|
            List.map (\x -&amp;gt; playerCell x) playerlist
        , grid
            [ css "text-align" "center"
            , maxWidth "768px"
            , css "height" "100%"
            ]
          &amp;lt;|
            boardToHtml model.board
        , player4div player4 model
        ]
```
The second grid element is what I need stretched to fill the space in the page.</text>
  </message>
  <message>
    <ts>2017-08-01T21:08:51.511106</ts>
    <user>U5W5F6QGP</user>
    <text>so you want things to be the height of the page at minimum?</text>
  </message>
  <message>
    <ts>2017-08-01T21:09:03.513576</ts>
    <user>U5W5F6QGP</user>
    <text>min-height: '100vh' or something along those lines will work</text>
  </message>
  <message>
    <ts>2017-08-01T21:09:20.517195</ts>
    <user>U5W5F6QGP</user>
    <text>vh &amp;amp; vw are very useful units</text>
  </message>
  <message>
    <ts>2017-08-01T21:14:01.574478</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U5W5F6QGP&gt; I'll give that a try.</text>
  </message>
  <message>
    <ts>2017-08-01T21:15:49.596805</ts>
    <user>U2SR9DL7Q</user>
    <text>What I really need is just that little footer bound the bottom of the page, and the middle page to scroll as it's content increases. I managed the footer part. But the middle div behaves very strangely when there's too many dominoes (really only a problem for mobile)</text>
  </message>
  <message>
    <ts>2017-08-01T21:16:53.609586</ts>
    <user>U2SR9DL7Q</user>
    <text>Rather than just resize itself as the new elements come in, the domino chips spill into the player data space... </text>
  </message>
  <message>
    <ts>2017-08-01T21:18:17.625679</ts>
    <user>U5W5F6QGP</user>
    <text>It is a bit of upfront learning, but flexbox is a huge help with stuff like this
it feels a lot more sane</text>
  </message>
  <message>
    <ts>2017-08-01T21:21:57.669463</ts>
    <user>U2SR9DL7Q</user>
    <text>Thats the thing. Elm mdl grid components use flex box . But I'll have to look through the source code to see how they manage it. </text>
  </message>
  <message>
    <ts>2017-08-01T21:23:19.685043</ts>
    <user>U5W5F6QGP</user>
    <text>ahhh right, sorry, I'm not super familiar with the mdl package</text>
  </message>
  <message>
    <ts>2017-08-01T21:26:38.724858</ts>
    <user>U2SR9DL7Q</user>
    <text>It's a great package. Very comprehensive. But it thwarts me sometimes in these types of situations. </text>
  </message>
  <message>
    <ts>2017-08-01T22:45:43.636303</ts>
    <user>U6907LQ6S</user>
    <text>Hey all, I'm getting the following crash when running elm-test. I think I'm not doing the recursion correctly across a list and blowing up the memory. Does anyone have any tips on where I should look?</text>
  </message>
  <message>
    <ts>2017-08-01T22:45:45.636667</ts>
    <user>U6907LQ6S</user>
    <text>--- Last few GCs ---&amp;gt;

   16812 ms: Mark-sweep 1326.9 (1434.9) -&amp;gt; 1326.9 (1434.9) MB, 835.4 / 0.0 ms [allocation failure] [GC in old space requested].
   17654 ms: Mark-sweep 1326.9 (1434.9) -&amp;gt; 1326.9 (1434.9) MB, 841.3 / 0.0 ms [allocation failure] [GC in old space requested].
   18483 ms: Mark-sweep 1326.9 (1434.9) -&amp;gt; 1331.7 (1409.9) MB, 829.2 / 0.0 ms [last resort gc].
   19350 ms: Mark-sweep 1331.7 (1409.9) -&amp;gt; 1336.6 (1409.9) MB, 866.8 / 0.0 ms [last resort gc].


&amp;lt;--- JS stacktrace ---&amp;gt;

==== JS stack trace =========================================

Security context: 000003E75BFCFB49 &amp;lt;JS Object&amp;gt;
    1: func [000003E75BF04381 &amp;lt;undefined&amp;gt;:2327] [pc=000002337953E0E5] (this=000001BC0B7A86A1 &amp;lt;JS Function wrapper (SharedFunctionInfo 0000014D2F0D5871)&amp;gt;,x=00000356060D17B1 &amp;lt;an Object with map 00000
2B50F240AB1&amp;gt;,y=00000356060D6811 &amp;lt;an Object with map 000002B50F258161&amp;gt;)
    2: func(aka foldr) [000003E75BF04381 &amp;lt;undefined&amp;gt;:~1965] [pc=00000233799C7338] (this=000001C22BECFCE1 &amp;lt;JS Function wrapper (...

FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory</text>
  </message>
  <message>
    <ts>2017-08-01T23:28:10.084740</ts>
    <user>U0GGQSHUZ</user>
    <text>Do you have any example code? In general, commenting out bits of code at a time can help debug. There are probably better ways</text>
  </message>
  <message>
    <ts>2017-08-01T23:29:04.094140</ts>
    <user>U0GGQSHUZ</user>
    <text>are you doing list recursion yourself or using fold or map?</text>
  </message>
  <message>
    <ts>2017-08-01T23:29:16.096355</ts>
    <user>U0GGQSHUZ</user>
    <text>&lt;@U6907LQ6S&gt;</text>
  </message>
  <message>
    <ts>2017-08-01T23:34:08.147864</ts>
    <user>U6907LQ6S</user>
    <text>Thanks - I'm using List.map as part of a recursive method. I'll simplify the code to its essentials and paste it in</text>
  </message>
  <message>
    <ts>2017-08-02T00:18:19.591972</ts>
    <user>U0GGQSHUZ</user>
    <text>&lt;@U6907LQ6S&gt; what is your goal? Are you trying to create a generator for GroupValue?</text>
  </message>
  <message>
    <ts>2017-08-02T00:18:30.593991</ts>
    <user>U0GGQSHUZ</user>
    <text>you may want something like:
```
groupValGen : Fuzzer GroupValue
groupValGen =
    Fuzz.map2 (\s1 s2 -&amp;gt; GroupValue s1 s2) Fuzz.string Fuzz.string
```</text>
  </message>
  <message>
    <ts>2017-08-02T00:18:44.596500</ts>
    <user>U0GGQSHUZ</user>
    <text>what does your test file look like?</text>
  </message>
  <message>
    <ts>2017-08-02T00:32:46.736504</ts>
    <user>U0GGQSHUZ</user>
    <text>Here's an example test file:
```
module Example exposing (..)

import Expect exposing (Expectation)
import Fuzz exposing (Fuzzer, int, list, string)
import GroupVal exposing (..)
import Test exposing (..)


suite : Test
suite =
    describe "The GroupValue module"
        [ fuzz groupValGen "testing the GroupValue" &amp;lt;|
            \groupVal -&amp;gt;
                -- Do something with randomly generated group value here
                Expect.equal groupVal groupVal
        ]


groupValGen =
    Fuzz.map2 (\s1 s2 -&amp;gt; GroupValue s1 s2) Fuzz.string Fuzz.string
```</text>
  </message>
  <message>
    <ts>2017-08-02T00:43:16.837212</ts>
    <user>U6907LQ6S</user>
    <text>My goal is to use fuzz testing against the combination generator, but it falls over</text>
  </message>
  <message>
    <ts>2017-08-02T00:43:21.837951</ts>
    <user>U6907LQ6S</user>
    <text>I'll paste in my tests</text>
  </message>
  <message>
    <ts>2017-08-02T01:00:03.997309</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U6907LQ6S&gt; Are you sure you aren't just making a list that is too large?</text>
  </message>
  <message>
    <ts>2017-08-02T01:00:37.004372</ts>
    <user>U6907LQ6S</user>
    <text>The list should be at most 50^5 which isn't all that big</text>
  </message>
  <message>
    <ts>2017-08-02T01:01:00.008463</ts>
    <user>U6907LQ6S</user>
    <text>312 million</text>
  </message>
  <message>
    <ts>2017-08-02T01:01:03.009085</ts>
    <user>U6907LQ6S</user>
    <text>maybe it is :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-02T01:02:04.019096</ts>
    <user>U6907LQ6S</user>
    <text>I'm in the middle of converting from js to Elm and I've got no idea how to debug memory problems in Elm</text>
  </message>
  <message>
    <ts>2017-08-02T01:03:31.032944</ts>
    <user>U48AEBJQ3</user>
    <text>I'm not sure how to help with that, but in trying to understand your code I ended up refactoring it: &lt;https://ellie-app.com/3V6GPCn5Zbna1/0&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T01:06:00.056907</ts>
    <user>U6907LQ6S</user>
    <text>I think I'm on the edge of memory limits, as the actual max number of groups is 5, but with the reduced record size for the example it runs fine</text>
  </message>
  <message>
    <ts>2017-08-02T01:06:36.062736</ts>
    <user>U6907LQ6S</user>
    <text>Thanks for the refactor &lt;@U48AEBJQ3&gt; , I'll check it out.</text>
  </message>
  <message>
    <ts>2017-08-02T01:08:56.084200</ts>
    <user>U6907LQ6S</user>
    <text>I think I have a solution though: the business requirement is to prevent generating a large number of combinations. I can check this before starting any recursion which should keep memory pressure to a minimum.</text>
  </message>
  <message>
    <ts>2017-08-02T01:09:06.085749</ts>
    <user>U6907LQ6S</user>
    <text>Thanks all for the help :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-02T02:20:31.827786</ts>
    <user>U1RJZ6SEL</user>
    <text>Hi, is there a good tutorial floating around about how to write an autocomplete that queries a remote JSON API? I saw &lt;http://package.elm-lang.org/packages/thebritican/elm-autocomplete&gt; but it doesn't have any examples of using it with remote data, and besides, project is looking kinda abandoned. Google isn't turning up much for me either. Would appreciate any pointers!</text>
  </message>
  <message>
    <ts>2017-08-02T03:07:10.482941</ts>
    <user>U3VCFFH1S</user>
    <text>Hi Happy Elm Friends:koala:, has anyone tried highlight a matched portion of text? eg to transform *"foo 123 bar #$%"* to this *"`foo` 123 `bar` #$%"*.
Probably something like ```highlight : String -&amp;gt; Html -&amp;gt; Html```
In JS it could be
```
"foo 123 bar #$%".replace(/([a-z]+)/g, '&amp;lt;span class="red"&amp;gt;$1&amp;lt;/span&amp;gt;') # "&amp;lt;span class="red"&amp;gt;foo&amp;lt;/span&amp;gt; 123 &amp;lt;span class="red"&amp;gt;bar&amp;lt;/span&amp;gt; #$%"
```
Working on a solution but thought I'd ask if anyone's done it.</text>
  </message>
  <message>
    <ts>2017-08-02T03:23:30.752616</ts>
    <user>U153UK3FA</user>
    <text>&lt;@U3VCFFH1S&gt; do a String.split and List.map the strings to Html</text>
  </message>
  <message>
    <ts>2017-08-02T04:18:31.811736</ts>
    <user>U1SF6G7PA</user>
    <text>&lt;@U1RJZ6SEL&gt; what is your use case? i guess you could use elm-autocomplete with a textfield for the queries, and each time the user changes the query you send an api request. when you handle the response you then build up the list of items you feed into the view and update functions of autocomplete</text>
  </message>
  <message>
    <ts>2017-08-02T04:30:09.065112</ts>
    <user>U67JLCNUV</user>
    <text>What is considered the "Elm" way for handling file uploads?</text>
  </message>
  <message>
    <ts>2017-08-02T04:33:38.142134</ts>
    <user>U3SJEDR96</user>
    <text>Depends a little on what you need exactly. If you're handling images, for example, it's super easy to use ports to get your the base64 encoded image: &lt;https://ellie-app.com/3qpgdbQFFfqa1/1&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T04:34:05.151780</ts>
    <user>U3SJEDR96</user>
    <text>which is, in the end, just a string you can embed in whatever JSON you send to your server</text>
  </message>
  <message>
    <ts>2017-08-02T04:34:49.167362</ts>
    <user>U3SJEDR96</user>
    <text>handling arbitrary uploads is a little more complicated, as there is not `Blob` type in Elm</text>
  </message>
  <message>
    <ts>2017-08-02T04:35:38.185063</ts>
    <user>U67JLCNUV</user>
    <text>I need to upload wav files.</text>
  </message>
  <message>
    <ts>2017-08-02T04:51:59.541027</ts>
    <user>U0JBSEGHY</user>
    <text>Hey I remembered your question when I was watching this video. Perhaps contact this guy if you have not figured out how to use the one runtime. &lt;https://www.youtube.com/watch?v=U_5XKPe4fZM&amp;amp;list=PL-cYi7I913S8cGyZWdN6YVZ028iS9BfpM&amp;amp;index=13&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T05:05:07.839853</ts>
    <user>U3VCFFH1S</user>
    <text>I went a different approach ```
model = {highlight : String}

highlight : String -&amp;gt; String -&amp;gt; String
highlight str text = if String.contains (String.toLower str) (toLower text) then "&amp;lt;mark&amp;gt;" ++ text ++ "&amp;lt;/mark&amp;gt;" else text

view model =
    let
        text : String -&amp;gt; Html Msg
        text str = if model.highlight == "" then Html.text str else toHtml [] (highlight model.highlight str)
    in   …
```
This lets me keep using `text` in my view and the highlighting automagically works. downside is the parts I want to do this to have to actually be in the view's scope.</text>
  </message>
  <message>
    <ts>2017-08-02T05:32:41.446316</ts>
    <user>U5P4FLYLE</user>
    <text>hi, quick question about pattern matching. I have a number of cases that have the same output expression, can I merge them ("A", "B", "C") in one branch somehow? 
```case result of
        "A" -&amp;gt; expr1
        "B" -&amp;gt; expr1
        "C" -&amp;gt; expr1
        _ -&amp;gt; expr2```</text>
  </message>
  <message>
    <ts>2017-08-02T05:37:20.548161</ts>
    <user>U3SJEDR96</user>
    <text>Nope, though you can resort to `if List.member result ["A", "B", "C"] then expr1 else expr2`. Certainly not always the best solution, but occasionally it makes sense.</text>
  </message>
  <message>
    <ts>2017-08-02T05:42:48.664125</ts>
    <user>U5P4FLYLE</user>
    <text>unfortunately I have `case (result, item, stack) of ` pattern to handle..</text>
  </message>
  <message>
    <ts>2017-08-02T05:43:49.685185</ts>
    <user>U4872964V</user>
    <text>you can do something like `case (List.member result ["A", "B", "C"], item, stack) of` though</text>
  </message>
  <message>
    <ts>2017-08-02T05:46:48.749857</ts>
    <user>U5P4FLYLE</user>
    <text>yes, for the example above it would do the trick, but in reality I have at least 7 groups of result to handle, and in the future some more could join the pack. &lt;@U3SJEDR96&gt;  &lt;@U4872964V&gt; thanks, anyway:-)</text>
  </message>
  <message>
    <ts>2017-08-02T05:47:19.760639</ts>
    <user>U4872964V</user>
    <text>Well, then you could have a "grouping type" that you convert to</text>
  </message>
  <message>
    <ts>2017-08-02T05:47:43.769239</ts>
    <user>U4872964V</user>
    <text>would be great for readability too</text>
  </message>
  <message>
    <ts>2017-08-02T05:53:31.894460</ts>
    <user>U5P4FLYLE</user>
    <text>ok, so how you define types that restrict "A", "B", "C" belonging to Group1, and "D" and "E" belonging to Group2?</text>
  </message>
  <message>
    <ts>2017-08-02T05:55:56.946276</ts>
    <user>U4872964V</user>
    <text>something like this:
```
type Group
    = ABCGroup
    | DEGroup


getGroup : String -&amp;gt; Group
getGroup result =
    case result of
        "A" -&amp;gt; ABCGroup
        "B" -&amp;gt; ABCGroup
        "C" -&amp;gt; ABCGroup
        "D" -&amp;gt; DEGroup
        "E" -&amp;gt; DEGroup
```</text>
  </message>
  <message>
    <ts>2017-08-02T05:57:41.982623</ts>
    <user>U5P4FLYLE</user>
    <text>&lt;@U4872964V&gt; thanks, I go this direction definitely!</text>
  </message>
  <message>
    <ts>2017-08-02T06:11:34.267040</ts>
    <user>U4SM7ECAG</user>
    <text>&lt;@U4872964V&gt; it might be a stupid question but is there a better way to match the rest of the cases in that structure than `_ -&amp;gt;` ?</text>
  </message>
  <message>
    <ts>2017-08-02T06:12:02.275726</ts>
    <user>U4872964V</user>
    <text>&lt;@U4SM7ECAG&gt; I'm not sure what you  mean</text>
  </message>
  <message>
    <ts>2017-08-02T06:12:08.277874</ts>
    <user>U3SJEDR96</user>
    <text>define "better"</text>
  </message>
  <message>
    <ts>2017-08-02T06:12:42.288514</ts>
    <user>U4872964V</user>
    <text>I generally avoid using `_ -&amp;gt;` because it can lead to me missing cases</text>
  </message>
  <message>
    <ts>2017-08-02T06:12:54.292246</ts>
    <user>U4SM7ECAG</user>
    <text>well I don't want to use `_` as much as possible</text>
  </message>
  <message>
    <ts>2017-08-02T06:13:08.296608</ts>
    <user>U4SM7ECAG</user>
    <text>but then pattern matching strings I don't know how else to deal with it.</text>
  </message>
  <message>
    <ts>2017-08-02T06:13:29.303570</ts>
    <user>U4872964V</user>
    <text>well, what would you expect? A string can be any string</text>
  </message>
  <message>
    <ts>2017-08-02T06:13:46.309105</ts>
    <user>U4872964V</user>
    <text>So you have to have a `_` case when matching string</text>
  </message>
  <message>
    <ts>2017-08-02T06:14:25.321239</ts>
    <user>U4872964V</user>
    <text>That's one reason not to use strings when you can use a union type instead</text>
  </message>
  <message>
    <ts>2017-08-02T06:14:34.324284</ts>
    <user>U3SJEDR96</user>
    <text>context is important - sometimes you want to have a default value, sometimes you want to return an `Err "something went wrong"`, sometimes you want to `fail` a decoder or a parser, etc</text>
  </message>
  <message>
    <ts>2017-08-02T06:14:42.326809</ts>
    <user>U4SM7ECAG</user>
    <text>like here I would write : 
```
type Group
    = ABCGroup
    | DEGroup


getGroup : String -&amp;gt; Maybe Group
getGroup result =
    case result of
        "A" -&amp;gt; Just ABCGroup
        "B" -&amp;gt; Just ABCGroup
        "C" -&amp;gt; Just ABCGroup
        "D" -&amp;gt; Just DEGroup
        "E" -&amp;gt; Just DEGroup
        _ -&amp;gt; Nothing
```

but what if then I add a new group then this piece of code is a point where I could potentially not get some error</text>
  </message>
  <message>
    <ts>2017-08-02T06:15:20.338642</ts>
    <user>U4SM7ECAG</user>
    <text>yes perhaps typing `Result Group` the return instead of `Maybe Group` would be easier to track once then code grow</text>
  </message>
  <message>
    <ts>2017-08-02T06:15:47.347152</ts>
    <user>U4872964V</user>
    <text>Yes, well, you would keep the `getGroup` function close to the type. But the best solution is to not use strings at all, if possible</text>
  </message>
  <message>
    <ts>2017-08-02T06:23:55.501151</ts>
    <user>U2DF486HL</user>
    <text>Hello, I have a type alias 
type alias Piece = { id : Int, name : String, descrip : String}
piece = Piece 1 "test name" "test descrip"

And a list of field names for example 
fields = ["name", "descrip"]

How can I get the value of a Piece, based on the fields list?
I mean, I would like to get ["test name", "test descrip"]</text>
  </message>
  <message>
    <ts>2017-08-02T06:27:45.574718</ts>
    <user>U4SM7ECAG</user>
    <text>yes I agree :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-02T06:29:36.609312</ts>
    <user>U6EV3H0N7</user>
    <text>that wouldn't always work with the types - e.g. if the list was `["id", "name"]` you'd get a list of an Int and a String, which isn't allowed.

you could instead have a `List (Piece -&amp;gt; String)`, like `[.name, .descrip]`, and then do: `List.map (\fn -&amp;gt; fn piece) [.name, .descrip]`</text>
  </message>
  <message>
    <ts>2017-08-02T06:30:08.619214</ts>
    <user>U6EV3H0N7</user>
    <text>what're you wanting this for?</text>
  </message>
  <message>
    <ts>2017-08-02T06:32:14.659845</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U6EV3H0N7&gt; no need to hide your response in a thread; keeping it in the channel is easier to access for onlookers :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-02T06:32:35.666878</ts>
    <user>U6EV3H0N7</user>
    <text>sorry, never sure whether to go for threads or not!</text>
  </message>
  <message>
    <ts>2017-08-02T06:43:00.860074</ts>
    <user>U2DF486HL</user>
    <text>Ok, I understand about the List and the possible different types..
But I have the list of fields (withou ".").. I have to look the issue in a different way I think</text>
  </message>
  <message>
    <ts>2017-08-02T06:51:20.008508</ts>
    <user>U2DF486HL</user>
    <text>can I convert this Piece type alias into something like a list of tuples, where each tuple is something like ("fieldName", "value")</text>
  </message>
  <message>
    <ts>2017-08-02T06:52:45.033070</ts>
    <user>U6EV3H0N7</user>
    <text>you can do that with a Dict</text>
  </message>
  <message>
    <ts>2017-08-02T06:53:56.053788</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U2DF486HL&gt; maybe you can explain your use-case? Right now, we might be helping you with an issue with your attempted solution, rather than the actual problem... :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-02T07:08:04.310416</ts>
    <user>U2DF486HL</user>
    <text>&lt;@U3SJEDR96&gt; I agree. I will rethink my use case and get back.. thanks</text>
  </message>
  <message>
    <ts>2017-08-02T08:28:59.856741</ts>
    <user>U6H22BY4A</user>
    <text>Hey everyone! Excited to start learning Elm, expect lots of questions :grin:</text>
  </message>
  <message>
    <ts>2017-08-02T08:37:48.060863</ts>
    <user>U5E3DU81K</user>
    <text>I'm using getString in a div and it complains that there is a type mismatch. It says div expects List (Html Msg) but it is List (Http.Request String). Is there any way of hammering the latter into shape?</text>
  </message>
  <message>
    <ts>2017-08-02T08:39:44.105104</ts>
    <user>U3SJEDR96</user>
    <text>Your views shouldn't (and can't) be making http requests; as your view is _just_ presentation of your state</text>
  </message>
  <message>
    <ts>2017-08-02T08:40:13.116673</ts>
    <user>U3SJEDR96</user>
    <text>issuing requests can only happen from `init` and `update` - the only two functions that return a`Cmd msg` :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-02T08:40:16.117676</ts>
    <user>U5E3DU81K</user>
    <text>what does that mean?</text>
  </message>
  <message>
    <ts>2017-08-02T08:40:47.130069</ts>
    <user>U5E3DU81K</user>
    <text>ah I see, put the div into update</text>
  </message>
  <message>
    <ts>2017-08-02T08:41:37.149438</ts>
    <user>U3SJEDR96</user>
    <text>No, put the request in update. When the request receives a response, that will trigger your update, too. At that point, you save the response-data in your model, and that will then be rendered in your view</text>
  </message>
  <message>
    <ts>2017-08-02T08:42:41.175098</ts>
    <user>U5E3DU81K</user>
    <text>the div stays where it is?</text>
  </message>
  <message>
    <ts>2017-08-02T08:43:32.195984</ts>
    <user>U3SJEDR96</user>
    <text>Maybe you can show some code to illustrate what you are attempting?</text>
  </message>
  <message>
    <ts>2017-08-02T08:43:42.199905</ts>
    <user>U3SJEDR96</user>
    <text>this may be a lot clearer to illustrate rather than explain :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-02T09:17:56.135049</ts>
    <user>U5P4FLYLE</user>
    <text>Hi, I need an advice how to achieve following:
I have input where there may be multiple occurrences of "a":
```input = ["a", "b", "a"]
          |         |
          0         1       occurrence of a
``` I need to use `foldl`:
```input
       |&amp;gt; List.foldl myfolding []```
But I need also somehow to inform myfolding about  which is the occurence of "a" (if it happens) as it proceeds.  So instead of 
```myfolding : String -&amp;gt; List String -&amp;gt; List String
myfolding item stack```
I would like to have 
```myfolding : Int -&amp;gt; String -&amp;gt; List String -&amp;gt; List String
myfolding occurenceNumber item stack```
How to enrich folding like above?</text>
  </message>
  <message>
    <ts>2017-08-02T09:22:50.286840</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5P4FLYLE&gt; I'm not really following. You have a list of items and you want a count and a list of positions of the item?</text>
  </message>
  <message>
    <ts>2017-08-02T09:25:36.373001</ts>
    <user>U5P4FLYLE</user>
    <text>I would like to have something that would realise:
```input
       |&amp;gt; List.foldl (myfolding consecutiveNumberOfAOccurenceCountingFromLeft) []```</text>
  </message>
  <message>
    <ts>2017-08-02T09:26:33.403077</ts>
    <user>U48AEBJQ3</user>
    <text>So, you want a count of all occurrences of the item at the provided index?</text>
  </message>
  <message>
    <ts>2017-08-02T09:28:28.465358</ts>
    <user>U5P4FLYLE</user>
    <text>yes, and my question is if I can achieve this using standard functions of List | List.extra or I should implement specialized version of foldl</text>
  </message>
  <message>
    <ts>2017-08-02T09:30:19.525604</ts>
    <user>U48AEBJQ3</user>
    <text>If you provide an index that is out of bounds, do you want `[]` or `Nothing`?</text>
  </message>
  <message>
    <ts>2017-08-02T09:31:04.550521</ts>
    <user>U5P4FLYLE</user>
    <text>can be []</text>
  </message>
  <message>
    <ts>2017-08-02T09:33:09.618391</ts>
    <user>U6D3ERLA1</user>
    <text>Pattern for optional paramaters?</text>
  </message>
  <message>
    <ts>2017-08-02T09:33:22.625576</ts>
    <user>U6D3ERLA1</user>
    <text>Looking for something like:</text>
  </message>
  <message>
    <ts>2017-08-02T09:33:27.628236</ts>
    <user>U6D3ERLA1</user>
    <text>```
nextLargest num next =
    case next of
        Just val -&amp;gt;
            if listify (val) == listify num then
               val
            else
                nextLargest num (val + 1)        
        Nothing -&amp;gt;
            if listify (num + 1) == listify num then
                num + 1
            else
                nextLargest num (num + 1)
```</text>
  </message>
  <message>
    <ts>2017-08-02T09:33:41.635664</ts>
    <user>U48AEBJQ3</user>
    <text>I meant 0 or `Nothing` dur.</text>
  </message>
  <message>
    <ts>2017-08-02T09:33:51.641569</ts>
    <user>U6D3ERLA1</user>
    <text>Use `next` val if present, otherwise use `num`</text>
  </message>
  <message>
    <ts>2017-08-02T09:34:07.649826</ts>
    <user>U6EV3H0N7</user>
    <text>looks like maybe you could use` Maybe.withDefault` &lt;@U6D3ERLA1&gt; ?</text>
  </message>
  <message>
    <ts>2017-08-02T09:35:11.685462</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5P4FLYLE&gt; &lt;https://ellie-app.com/3VgrGzcLNJKa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T09:35:56.710570</ts>
    <user>U48AEBJQ3</user>
    <text>If you want 0, just pass it to `Maybe.withDefault 0`</text>
  </message>
  <message>
    <ts>2017-08-02T09:36:17.722557</ts>
    <user>U6EV3H0N7</user>
    <text>```
nextLargest num maybeNext =
    let
        next = Maybe.withDefault (num + 1) maybeNext
        notSureWhatThisShouldBeCalled = 
            next |&amp;gt; Maybe.map (\x -&amp;gt; x + 1) |&amp;gt; Maybe.withDefault (num + 1)
    in
        if listify next == listify num then next else nextLargest notSureWhatThisShouldBeCalled
```
&lt;@U6D3ERLA1&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T09:36:29.728897</ts>
    <user>U6D3ERLA1</user>
    <text>If the second paramater is nothing I want to use the first paramater</text>
  </message>
  <message>
    <ts>2017-08-02T09:36:30.729343</ts>
    <user>U6EV3H0N7</user>
    <text>(sorry about the var names…)</text>
  </message>
  <message>
    <ts>2017-08-02T09:36:39.734459</ts>
    <user>U6D3ERLA1</user>
    <text>But this creates a type mismatch</text>
  </message>
  <message>
    <ts>2017-08-02T09:36:47.738856</ts>
    <user>U3SJEDR96</user>
    <text>alternatively, you can build up the number of previous occurences _while_ folding (like so: &lt;https://ellie-app.com/3VgsQX5q9Nga1/0&gt; )</text>
  </message>
  <message>
    <ts>2017-08-02T09:45:25.035118</ts>
    <user>U1VH0J8HM</user>
    <text>Hello! I am trying to figure out, what would be the easiest way to load SVG files inline from external SVG files during runtime (we use inline to apply different styles to different shapes inside the file)? We were using ng-include for that purpose before (our app is written in Angular)... I would appreciate any help on this matter</text>
  </message>
  <message>
    <ts>2017-08-02T10:33:14.806591</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;@U6EV3H0N7&gt; Maybe I'm missing something - it seems like the `nextLargest` call in the  `in` section uses a number value not a maybe value, causing a type mismatch</text>
  </message>
  <message>
    <ts>2017-08-02T10:33:38.821866</ts>
    <user>U6D3ERLA1</user>
    <text>(working with Maybe is still breaking my brain a little bit)</text>
  </message>
  <message>
    <ts>2017-08-02T10:41:57.138130</ts>
    <user>U31FGNWCT</user>
    <text>Hi folks! Here is my case:
I have a list. I need to receive another, based on the first one, list : List (Html msg). 
(_use List.map!_) I wish I can! The thing is I need to make last element's Html different.
I solve this with recursion, but maybe there is another way? I found List.indexedMap, but not sure what to do with it. Example is awful.</text>
  </message>
  <message>
    <ts>2017-08-02T10:42:41.166897</ts>
    <user>U3JSGAK7B</user>
    <text>Hi, folks. Long time no see. But I'm trying to brush up my Elm once again.</text>
  </message>
  <message>
    <ts>2017-08-02T10:43:11.185221</ts>
    <user>U3JSGAK7B</user>
    <text>Can anyone share some tips on navigating through Elm code?</text>
  </message>
  <message>
    <ts>2017-08-02T10:43:41.205210</ts>
    <user>U3JSGAK7B</user>
    <text>I'm trying to go through &lt;https://github.com/rtfeldman/elm-spa-example&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T10:46:32.314047</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U31FGNWCT&gt; can you use `List.map` on the first (length - 1) elements of the list and do something special with the last one?</text>
  </message>
  <message>
    <ts>2017-08-02T10:46:34.315302</ts>
    <user>U3JSGAK7B</user>
    <text>I'm right now having a hard time tracing where does `lazy2` as used [at line 58 here][1] comes from

[1]: &lt;https://github.com/rtfeldman/elm-spa-example/blob/master/src/Views/Page.elm#L58&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T10:46:36.316624</ts>
    <user>U6EV3H0N7</user>
    <text>ahh, &lt;@U6D3ERLA1&gt; missed that! So add a `Just` to convert the `Int` type to a `Maybe Int`</text>
  </message>
  <message>
    <ts>2017-08-02T10:46:59.330750</ts>
    <user>U6D3ERLA1</user>
    <text>oohh ok lets see</text>
  </message>
  <message>
    <ts>2017-08-02T10:48:09.376406</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U3JSGAK7B&gt; &lt;http://package.elm-lang.org/packages/elm-lang/html/2.0.0/Html-Lazy#lazy2&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T10:48:50.402895</ts>
    <user>U0LPMPL2U</user>
    <text>You can tell it comes from `Html.Lazy` because of the explicit import at the top of the file: &lt;https://github.com/rtfeldman/elm-spa-example/blob/master/src/Views/Page.elm#L10&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T10:49:15.419417</ts>
    <user>U31FGNWCT</user>
    <text>&lt;@U0LPMPL2U&gt; :thinking_face: Hm.
So:
- make a list from the first one
- do stuff with it
- do stuff with the last element of the initial array
- append results
- profit</text>
  </message>
  <message>
    <ts>2017-08-02T10:49:38.434437</ts>
    <user>U3JSGAK7B</user>
    <text>hmmm... I see...</text>
  </message>
  <message>
    <ts>2017-08-02T10:49:50.441869</ts>
    <user>U0LPMPL2U</user>
    <text>&lt;@U31FGNWCT&gt; correct :+1:</text>
  </message>
  <message>
    <ts>2017-08-02T10:49:52.443566</ts>
    <user>U31FGNWCT</user>
    <text>Okay. Seems easier than recursive way. Maybe there is less verbose one? Some function?</text>
  </message>
  <message>
    <ts>2017-08-02T10:50:59.487406</ts>
    <user>U3JSGAK7B</user>
    <text>is there a search bar that I can use?</text>
  </message>
  <message>
    <ts>2017-08-02T10:51:27.505898</ts>
    <user>U3JSGAK7B</user>
    <text>as I understand Html.Lazy is inside the `html` package</text>
  </message>
  <message>
    <ts>2017-08-02T10:51:38.513272</ts>
    <user>U0LPMPL2U</user>
    <text>correct</text>
  </message>
  <message>
    <ts>2017-08-02T10:51:43.516955</ts>
    <user>U0LPMPL2U</user>
    <text>There is &lt;https://klaftertief.github.io/elm-search/&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T10:51:50.520976</ts>
    <user>U3JSGAK7B</user>
    <text>but how do I get from Html.Lazy to `html`</text>
  </message>
  <message>
    <ts>2017-08-02T10:51:57.525865</ts>
    <user>U3JSGAK7B</user>
    <text>hmmm... nice</text>
  </message>
  <message>
    <ts>2017-08-02T10:53:04.569906</ts>
    <user>U0LPMPL2U</user>
    <text>I also use a combination of Alfred + Dash (on macOs)</text>
  </message>
  <message>
    <ts>2017-08-02T10:54:16.616447</ts>
    <user>U3JSGAK7B</user>
    <text>thanks, &lt;@U0LPMPL2U&gt;! I guess &lt;https://klaftertief.github.io/elm-search/&gt; is exactly what I was looking for</text>
  </message>
  <message>
    <ts>2017-08-02T10:54:45.635424</ts>
    <user>U3JSGAK7B</user>
    <text>here is the search I want, for instance: &lt;https://klaftertief.github.io/elm-search/?q=lazy2&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T11:00:57.886066</ts>
    <user>U31FGNWCT</user>
    <text>&lt;@U0LPMPL2U&gt; Thank you! Found drop and take functions, they are awesome for the issue.</text>
  </message>
  <message>
    <ts>2017-08-02T11:24:49.832292</ts>
    <user>U45C5R6QP</user>
    <text>I have a view in another file that has a submit button in it. When that button is clicked I need to deal with it in the parent file. I guess I need to listen to a msg from the child file somehow, right?</text>
  </message>
  <message>
    <ts>2017-08-02T11:25:17.850556</ts>
    <user>U5ABF3BH7</user>
    <text>Hi! Does anyone have examples on how to use elm-validate, or other validation examples (like phone number length, social security numbers, email format, etc..?</text>
  </message>
  <message>
    <ts>2017-08-02T11:26:14.888053</ts>
    <user>U5ABF3BH7</user>
    <text>are there any tutorials?</text>
  </message>
  <message>
    <ts>2017-08-02T11:27:16.929062</ts>
    <user>U5E3DU81K</user>
    <text>each day, elm makes less sense to me</text>
  </message>
  <message>
    <ts>2017-08-02T11:28:12.966249</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5E3DU81K&gt; That is probably because you are coming with a lot of ideas that work for other paradigms, but don't hold up here and you are just discovering that.</text>
  </message>
  <message>
    <ts>2017-08-02T11:30:07.043017</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U45C5R6QP&gt; You either need the function which makes that submit button take a `Msg` as a parameter or you need to wrap the data type the submit button is using via `Html.map`</text>
  </message>
  <message>
    <ts>2017-08-02T11:30:27.057317</ts>
    <user>U45C5R6QP</user>
    <text>got it</text>
  </message>
  <message>
    <ts>2017-08-02T11:30:58.078755</ts>
    <user>U65B9414J</user>
    <text>Hi folks. Anyone knows what's wrong here .```        UrlMsg (Err error) -&amp;gt;
            let
              { model | error = error }
            in
            ( model, Cmd.none )

```</text>
  </message>
  <message>
    <ts>2017-08-02T11:31:12.088370</ts>
    <user>U45C5R6QP</user>
    <text>Actually, the more I think about it the less I think I absolutely need to do this. I've run into this problem a couple of times before (Parent/child communication) but it usually turns out I'm going down a road that'll lead to trouble in the future</text>
  </message>
  <message>
    <ts>2017-08-02T11:31:29.099368</ts>
    <user>U65B9414J</user>
    <text>Error I'm getting is ```I ran into something unexpected when parsing your code!

61|               { model | error = error }
                          ^
I am looking for one of the following things:

    a closing bracket '}'
    whitespace
`</text>
  </message>
  <message>
    <ts>2017-08-02T11:31:40.106958</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U65B9414J&gt; You aren't assigning your updated model to a name in the `let`, you need `newModel = {model | error = error}`</text>
  </message>
  <message>
    <ts>2017-08-02T11:32:08.125635</ts>
    <user>U65B9414J</user>
    <text>I see. Thanks.</text>
  </message>
  <message>
    <ts>2017-08-02T11:34:14.208695</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U65B9414J&gt; `{ record | .. }` doesn't update anything in-place, as everything in Elm is immutable. Rather it returns a new record, so in order to use that in a `let..in`, you need to assign it to a variable. I'm not sure if this makes it more or less confusing, but I figured I'd give you the background-info anyway</text>
  </message>
  <message>
    <ts>2017-08-02T11:35:26.255355</ts>
    <user>U65B9414J</user>
    <text>&lt;@U3SJEDR96&gt; thanks that helps. The moment I got reply from &lt;@U48AEBJQ3&gt; I knew what I was doing wrong.</text>
  </message>
  <message>
    <ts>2017-08-02T11:35:57.275273</ts>
    <user>U65B9414J</user>
    <text>However I was confused by the error message. Heard good things about compiler. Can compiler help in this area.</text>
  </message>
  <message>
    <ts>2017-08-02T11:36:27.294918</ts>
    <user>U65B9414J</user>
    <text>I'm sure it would be added work for compiler.</text>
  </message>
  <message>
    <ts>2017-08-02T11:37:37.339300</ts>
    <user>U3SJEDR96</user>
    <text>Every `let` expression contains variable assignment, and this error-message assumes you made a typo when you meant to write something like `let { field } = record in` to destructure a record. So yeah, it's a little vague when that is completely _not_ what you intended to do</text>
  </message>
  <message>
    <ts>2017-08-02T11:38:47.383508</ts>
    <user>U48AEBJQ3</user>
    <text>If it isn't already there, sounds like a decent suggestion for &lt;https://github.com/elm-lang/error-message-catalog&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T11:39:10.397885</ts>
    <user>U3SJEDR96</user>
    <text>was looking through that, too, but it's pretty hard to search for</text>
  </message>
  <message>
    <ts>2017-08-02T11:39:16.402067</ts>
    <user>U65B9414J</user>
    <text>I'll scan and will file it there if not already.</text>
  </message>
  <message>
    <ts>2017-08-02T11:39:36.414899</ts>
    <user>U4872964V</user>
    <text>Sometimes it's hard to know exactly what is wrong, only that something is wrong</text>
  </message>
  <message>
    <ts>2017-08-02T11:40:08.435003</ts>
    <user>U65B9414J</user>
    <text>true</text>
  </message>
  <message>
    <ts>2017-08-02T11:40:19.442728</ts>
    <user>U5ABF3BH7</user>
    <text>Even a small Ellie example with elm-validation would be great.</text>
  </message>
  <message>
    <ts>2017-08-02T11:43:13.554503</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U5ABF3BH7&gt;: all i know, is that it is used in rtfeldman's elm-spa-example, but thats not a "small" sample.</text>
  </message>
  <message>
    <ts>2017-08-02T11:43:58.583760</ts>
    <user>U4872964V</user>
    <text>&lt;@U5ABF3BH7&gt; which package?</text>
  </message>
  <message>
    <ts>2017-08-02T11:44:08.589959</ts>
    <user>U1AN4JRFV</user>
    <text>Or is that 'elm-validate'?? Otp</text>
  </message>
  <message>
    <ts>2017-08-02T11:44:14.593619</ts>
    <user>U1RJZ6SEL</user>
    <text>&lt;@U1SF6G7PA&gt; I'd like to create a widget to add people to a list of attendees, pulling the available people remotely. You can see what I have so far in this repo: &lt;https://github.com/neezer/periscope&gt; (the input for Attendees is what I'd like to make the remote autocomplete for). 

&amp;gt; i guess you could use elm-autocomplete with a textfield for the queries, and each time the user changes the query you send an api request. when you handle the response you then build up the list of items you feed into the view and update functions of autocomplete

That sounds like what I'm after, but I'd love an example / tutorial, as I don't feel confident I can write that code from the description alone. :wink:</text>
  </message>
  <message>
    <ts>2017-08-02T11:45:00.623854</ts>
    <user>U5ABF3BH7</user>
    <text>I was thinking about elm-validate but I am open to suggestions. I need to add frontend validations on several fields.</text>
  </message>
  <message>
    <ts>2017-08-02T11:45:21.637648</ts>
    <user>U4872964V</user>
    <text>&lt;@U5ABF3BH7&gt; you need to specify the prefix too, there are several packages</text>
  </message>
  <message>
    <ts>2017-08-02T11:45:41.650745</ts>
    <user>U5ABF3BH7</user>
    <text>Which one would you suggest?</text>
  </message>
  <message>
    <ts>2017-08-02T11:47:41.727931</ts>
    <user>U1SF6G7PA</user>
    <text>hm, then if the list of attendees does not change it is probably enough to fetch it when you initialize the elm application and then store it in your model</text>
  </message>
  <message>
    <ts>2017-08-02T11:48:38.764351</ts>
    <user>U4872964V</user>
    <text>I don't know, it depends on so much</text>
  </message>
  <message>
    <ts>2017-08-02T11:53:17.945412</ts>
    <user>U0JFGGZS6</user>
    <text>The "Settings" page of elm-spa-example has a pretty basic usage with two fields.  &lt;https://github.com/rtfeldman/elm-spa-example/blob/master/src/Page/Settings.elm&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T11:56:37.074310</ts>
    <user>U0JFGGZS6</user>
    <text>it only runs the validation on submit, not as you type or as fields lose focus, but wouldn't be hard to adapt to those scenarios</text>
  </message>
  <message>
    <ts>2017-08-02T11:57:04.091305</ts>
    <user>U0JFGGZS6</user>
    <text>^ &lt;@U5ABF3BH7&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T12:03:23.338123</ts>
    <user>U5ABF3BH7</user>
    <text>@ericgi Thanks, I will take a look at that one</text>
  </message>
  <message>
    <ts>2017-08-02T12:04:39.386419</ts>
    <user>U5ABF3BH7</user>
    <text>@ericgi The elm-spa-example just says import Validate in the file, so I am not sure which package that is, do you know?</text>
  </message>
  <message>
    <ts>2017-08-02T12:06:29.454755</ts>
    <user>U5ABF3BH7</user>
    <text>Does anyone have more complicated examples of validation, like a phone number validation?</text>
  </message>
  <message>
    <ts>2017-08-02T12:09:32.564320</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U5ABF3BH7&gt;,  it's the one by rtfeldman. you can check the file `elm-package.json` to see the dependencies</text>
  </message>
  <message>
    <ts>2017-08-02T12:10:00.581305</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U1AN4JRFV&gt; Good idea. Thanks!</text>
  </message>
  <message>
    <ts>2017-08-02T12:13:40.710581</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5ABF3BH7&gt; I hadn't used `rtfeldman/elm-validate` before, so I whipped this together. &lt;https://ellie-app.com/3VjPSny6pjFa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T12:14:00.722582</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U48AEBJQ3&gt; Thanks</text>
  </message>
  <message>
    <ts>2017-08-02T12:22:31.025757</ts>
    <user>U1RJZ6SEL</user>
    <text>The list would change sparingly, agreed. Still, I'd love to know how to do this as a learning exercise! Would it be helpful to assume for now that the list of available people number 500k and thus is too large to download in full and filter client-side?</text>
  </message>
  <message>
    <ts>2017-08-02T12:32:36.377252</ts>
    <user>U1SF6G7PA</user>
    <text>i never did sth like this, but i guess if its so many people you probably only want to fetch the users if you have typed in some letters. you could have `onInput UpdateQuery` on the textfield and then in your update do sth like
```</text>
  </message>
  <message>
    <ts>2017-08-02T12:33:42.414573</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U48AEBJQ3&gt; can you tell me why you used ``Validate.eager`` and in what case I should use it? Is there any documentation about ``ifInvalid`` function? Also, my input already has a message as it is a field of my record. How can I add the validation and still keep my message?</text>
  </message>
  <message>
    <ts>2017-08-02T12:34:02.425255</ts>
    <user>U1SF6G7PA</user>
    <text>`case msg of UpdateQuery query -&amp;gt; ( model, if length query &amp;gt;= 3 then (fetchPeople query) else Cmd.none )`</text>
  </message>
  <message>
    <ts>2017-08-02T12:34:45.448948</ts>
    <user>U1SF6G7PA</user>
    <text>where `fetchPeople : String -&amp;gt; Cmd Msg` is your http request</text>
  </message>
  <message>
    <ts>2017-08-02T12:36:21.503084</ts>
    <user>U1SF6G7PA</user>
    <text>so its sth like `fetchPeople = Http.send LoadPeople (Http.get ("yourbackend/fetch/" ++ query) decodePeopleList)`</text>
  </message>
  <message>
    <ts>2017-08-02T12:36:25.505107</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5ABF3BH7&gt; `Validate.eager`stops at the first error it gets. Sometimes multiple errors aren't useful because later errors are dependent upon earlier ones. In this case, I don't want it to even check if the input is a valid integer if it is blank.</text>
  </message>
  <message>
    <ts>2017-08-02T12:37:37.546154</ts>
    <user>U48AEBJQ3</user>
    <text>The documentation for `isInvalid` is pretty sparse &lt;http://package.elm-lang.org/packages/rtfeldman/elm-validate/1.1.3/Validate#ifInvalid&gt; but it is a helper for making your own `Validator`s.</text>
  </message>
  <message>
    <ts>2017-08-02T12:37:38.546801</ts>
    <user>U1SF6G7PA</user>
    <text>and `LoadPeople` is the msg which handles the incoming list of people, i.e. your msg look like `type Msg = UpdateQuery String | LoadPeople (Result Http.Error (List People))`</text>
  </message>
  <message>
    <ts>2017-08-02T12:38:28.575462</ts>
    <user>U1SF6G7PA</user>
    <text>i hope thats understandable? :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-02T12:38:37.580710</ts>
    <user>U48AEBJQ3</user>
    <text>Store the output of the validation as an extra field in the model would be the easiest way.</text>
  </message>
  <message>
    <ts>2017-08-02T12:40:11.633004</ts>
    <user>U2Z0RF6CW</user>
    <text>Is there any way to get the response header and decode the response body when using `Http` package?</text>
  </message>
  <message>
    <ts>2017-08-02T12:40:32.645036</ts>
    <user>U2Z0RF6CW</user>
    <text>I was looking into the snippet &lt;https://ellie-app.com/3prFNXVLfdSa1/0&gt; which is extracting header</text>
  </message>
  <message>
    <ts>2017-08-02T12:41:01.661981</ts>
    <user>U2Z0RF6CW</user>
    <text>Can someone help to decode the json along with the request?</text>
  </message>
  <message>
    <ts>2017-08-02T12:44:34.783596</ts>
    <user>U1RJZ6SEL</user>
    <text>Hmm, I think? Would I be sending `fetchPeople` in parallel with handling `SetAutocompleteState`, from the elm-autocomplete example?</text>
  </message>
  <message>
    <ts>2017-08-02T12:46:26.848290</ts>
    <user>U1SF6G7PA</user>
    <text>no, the setautocomplete msg is just the necessary boilerplate to hook up the autocomplete messages into your main update function</text>
  </message>
  <message>
    <ts>2017-08-02T12:47:31.884686</ts>
    <user>U1RJZ6SEL</user>
    <text>Right, but I have to update my local state while I'm waiting for my remote request to come back, though. I guess I'm just not understanding the sequencing.</text>
  </message>
  <message>
    <ts>2017-08-02T12:51:55.036268</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U48AEBJQ3&gt; Thanks, I get it now. That was super helpful!</text>
  </message>
  <message>
    <ts>2017-08-02T12:53:01.074079</ts>
    <user>U1SF6G7PA</user>
    <text>let me write an ellie :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-02T12:54:33.127413</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U2Z0RF6CW&gt;: do you mean to combine getting the header and the json body, or do you just need to decode the json response? (the body)</text>
  </message>
  <message>
    <ts>2017-08-02T12:57:44.238862</ts>
    <user>U1AN4JRFV</user>
    <text>step 1: define a record structure to hold the data: ```type alias Post = { userId: Int, id: Int, title: String, body: String}```</text>
  </message>
  <message>
    <ts>2017-08-02T12:58:07.252567</ts>
    <user>U1AN4JRFV</user>
    <text>(nicely formatted, of course)</text>
  </message>
  <message>
    <ts>2017-08-02T12:58:56.281304</ts>
    <user>U2Z0RF6CW</user>
    <text>&lt;@U1AN4JRFV&gt; I just need both header &amp;amp; body information to be updated on the model.</text>
  </message>
  <message>
    <ts>2017-08-02T12:59:15.291946</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U2Z0RF6CW&gt; as it happens, &lt;@U0F7JPK36&gt; made a package earlier today that helps with that</text>
  </message>
  <message>
    <ts>2017-08-02T12:59:40.307350</ts>
    <user>U3SJEDR96</user>
    <text>checkout lukewestby/http-extra &lt;http://package.elm-lang.org/packages/lukewestby/http-extra/2.0.0/Http-Extra#expectJsonResponse&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T12:59:53.315088</ts>
    <user>U1AN4JRFV</user>
    <text>ok, then i suggest returning a tuple from that getHeader-function (name questionable).</text>
  </message>
  <message>
    <ts>2017-08-02T12:59:55.315825</ts>
    <user>U0F7JPK36</user>
    <text>wow what are the chances</text>
  </message>
  <message>
    <ts>2017-08-02T12:59:58.317722</ts>
    <user>U3SJEDR96</user>
    <text>:smile:</text>
  </message>
  <message>
    <ts>2017-08-02T13:00:13.326612</ts>
    <user>U3SJEDR96</user>
    <text>You chose a pretty good time to release that, &lt;@U0F7JPK36&gt; :heart:</text>
  </message>
  <message>
    <ts>2017-08-02T13:00:27.335622</ts>
    <user>U0F7JPK36</user>
    <text>well i started it right after the first question about that</text>
  </message>
  <message>
    <ts>2017-08-02T13:00:35.340868</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U0F7JPK36&gt;: this happens quite often (that there's a wave of similar needs)</text>
  </message>
  <message>
    <ts>2017-08-02T13:00:50.350148</ts>
    <user>U1AN4JRFV</user>
    <text>but yeah, with a package it's extraordinary</text>
  </message>
  <message>
    <ts>2017-08-02T13:01:04.358309</ts>
    <user>U1SF6G7PA</user>
    <text>&lt;https://ellie-app.com/3VktGJMFXKWa1/1&gt; i was thinking about sth like this</text>
  </message>
  <message>
    <ts>2017-08-02T13:01:54.388763</ts>
    <user>U2Z0RF6CW</user>
    <text>&lt;@U3SJEDR96&gt; &lt;@U0F7JPK36&gt; Thanks folks. Checking the package. &lt;@U1AN4JRFV&gt; Ya I tried to return as a tuple. But not sure how the body of the getHeader method.</text>
  </message>
  <message>
    <ts>2017-08-02T13:02:57.425668</ts>
    <user>U1AN4JRFV</user>
    <text>The `Response` has a field called `body`, which you can then `Json.Decode.decodeString postDecoder resp.body`</text>
  </message>
  <message>
    <ts>2017-08-02T13:04:32.479950</ts>
    <user>U2Z0RF6CW</user>
    <text>&lt;@U1AN4JRFV&gt; I tried something like this, `extractHeader : String -&amp;gt; Http.Response String -&amp;gt; Result (List User) String`</text>
  </message>
  <message>
    <ts>2017-08-02T13:05:31.513531</ts>
    <user>U1SF6G7PA</user>
    <text>the problem is, that we make an http request everytime the user types in one key, so maybe you want to save the query and only make a request if the query is == 3 and then filter the list in the elm application. or maybe have some timeout logic, so that at most every second or so a request is triggered?</text>
  </message>
  <message>
    <ts>2017-08-02T13:05:45.521662</ts>
    <user>U1AN4JRFV</user>
    <text>The first argument to a Result-Constructor is of the error-type, the second one is the type in case of Success</text>
  </message>
  <message>
    <ts>2017-08-02T13:06:46.556031</ts>
    <user>U1AN4JRFV</user>
    <text>so, you need to turn them around, and we are also no longer talking about this url: `&lt;https://jsonplaceholder.typicode.com/posts/1&gt;`</text>
  </message>
  <message>
    <ts>2017-08-02T13:07:18.573661</ts>
    <user>U1AN4JRFV</user>
    <text>and if you want the header as well, it would be `-&amp;gt; Result String (String, List User)`</text>
  </message>
  <message>
    <ts>2017-08-02T13:07:52.592651</ts>
    <user>U1AN4JRFV</user>
    <text>if you want all the headers, probably `Result String (List(String,String), List User)`</text>
  </message>
  <message>
    <ts>2017-08-02T13:10:10.668342</ts>
    <user>U1AN4JRFV</user>
    <text>but it can get ugly combining results, so I would also suggest looking into using helper-packages.</text>
  </message>
  <message>
    <ts>2017-08-02T13:10:43.687685</ts>
    <user>U1AN4JRFV</user>
    <text>("ugly" is a very subjective term)</text>
  </message>
  <message>
    <ts>2017-08-02T13:23:37.116116</ts>
    <user>U1RJZ6SEL</user>
    <text>Yeah, I was definitely thinking of debouncing the requests, have a check to see if more than 2 (or 3) characters have been typed and there have been no keystrokes within 200ms (or thereabouts).</text>
  </message>
  <message>
    <ts>2017-08-02T13:27:50.262206</ts>
    <user>U2Z0RF6CW</user>
    <text>My intention was this `Result String (String, List User)`. Now I understand why the compiler thrown the mismatch error. But how can I return the `Result String (String, List User)` from the method `extractHeader`?</text>
  </message>
  <message>
    <ts>2017-08-02T13:31:09.378529</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U2Z0RF6CW&gt;: if you managed to decode the body (&lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Json-Decode#decodeString&gt;), then your `Msg`-type, from the sample: ```type Msg
    = Login (Result Http.Error String)``` also has to match that same Result-type.</text>
  </message>
  <message>
    <ts>2017-08-02T13:32:30.425016</ts>
    <user>U1AN4JRFV</user>
    <text>I have never done it myself before, but you will end up with two results, one from getting the header out, and one from decoding the body, which you will need to combine with `Result.map2` &lt;http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Result#map2&gt;?</text>
  </message>
  <message>
    <ts>2017-08-02T13:42:24.760305</ts>
    <user>U1RJZ6SEL</user>
    <text>Thanks for the Ellie! I'll give that a shot later (regrettably Elm isn't my day job yet... :slightly_smiling_face: )</text>
  </message>
  <message>
    <ts>2017-08-02T13:45:43.873038</ts>
    <user>U1SF6G7PA</user>
    <text>:slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-02T14:03:26.501084</ts>
    <user>U66RFDZ8F</user>
    <text>Hello everyone, I have the following pipeline
```
test a =
    a
        |&amp;gt; required "isFailed" bool
        |&amp;gt; required "isSuccess" bool
        |&amp;gt; required "reasons" (list reasonDecoder)
        |&amp;gt; required "errors" (list reasonDecoder)
        |&amp;gt; required "successes" (list reasonDecoder)
```
This i meant to be a generic pipeline because this code is common to all responses.
What I can't seem to know how to do is add additional items to the pipeline for the other responses.
How would I go about this?</text>
  </message>
  <message>
    <ts>2017-08-02T14:06:09.595253</ts>
    <user>U23SA861Y</user>
    <text>without additional information, that will be difficult to answer. It is possible that writing a "generic" pipeline like this might be the wrong abstraction.</text>
  </message>
  <message>
    <ts>2017-08-02T14:07:20.635360</ts>
    <user>U4872964V</user>
    <text>&lt;@U66RFDZ8F&gt; so, you'd want to put more stuff after that pipeline, correct? in which case you'd just do `test yourFunction |&amp;gt; theRestOfThePipeline` I suppose</text>
  </message>
  <message>
    <ts>2017-08-02T14:07:59.657510</ts>
    <user>U65B9414J</user>
    <text>I'm using `type Msg = PlanetMsg (Result Http.Error String)` to capture http response as string. I would like to get Response object. &lt;http://package.elm-lang.org/packages/evancz/elm-http/3.0.1/Http#Response&gt; .  I tried a few options but nothing worked. Anyone has anything they can point me to.</text>
  </message>
  <message>
    <ts>2017-08-02T14:08:31.675667</ts>
    <user>U66RFDZ8F</user>
    <text>yes &lt;@U4872964V&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T14:08:47.684597</ts>
    <user>U66RFDZ8F</user>
    <text>let me try that</text>
  </message>
  <message>
    <ts>2017-08-02T14:09:50.720151</ts>
    <user>U23SA861Y</user>
    <text>it really does come in waves... &lt;http://package.elm-lang.org/packages/lukewestby/http-extra/2.0.0/Http-Extra&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T14:10:30.743372</ts>
    <user>U66RFDZ8F</user>
    <text>that works &lt;@U4872964V&gt; didn't realize it was just a pipe lol</text>
  </message>
  <message>
    <ts>2017-08-02T14:13:04.830292</ts>
    <user>U65B9414J</user>
    <text>Thanks jonf. Will give it a try.</text>
  </message>
  <message>
    <ts>2017-08-02T14:23:13.180666</ts>
    <user>U3SQ42JJW</user>
    <text>Hi there :slightly_smiling_face:
Is there a way to destruct a tuple on the fly in a shorter way so there would not be a need for the let block?
```
let
    ( start, stop ) =
            record.range
in
    List.range start stop
```</text>
  </message>
  <message>
    <ts>2017-08-02T14:24:06.211812</ts>
    <user>U6AU4N1HR</user>
    <text>Hello, does Http.send set cookies send from server as Set-Cookie?</text>
  </message>
  <message>
    <ts>2017-08-02T14:25:08.247465</ts>
    <user>U3SQ42JJW</user>
    <text>&lt;@U6AU4N1HR&gt;  as far as I know not automatically - because all those sends are asynchronous…</text>
  </message>
  <message>
    <ts>2017-08-02T14:26:36.298009</ts>
    <user>U4872964V</user>
    <text>&lt;@U3SQ42JJW&gt; you can use `first` and `second`</text>
  </message>
  <message>
    <ts>2017-08-02T14:27:05.314550</ts>
    <user>U6AU4N1HR</user>
    <text>&lt;@U3SQ42JJW&gt; hm, then i'm confused by the notice here: &lt;https://github.com/elm-lang/cookie&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T14:27:31.329569</ts>
    <user>U3SQ42JJW</user>
    <text>Right ! :smile: Totally forgot about those… but somekind I knew there was sth… Thanks :wink:</text>
  </message>
  <message>
    <ts>2017-08-02T14:29:35.401684</ts>
    <user>U66RFDZ8F</user>
    <text>I see you figured it out &lt;@U3SQ42JJW&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T14:30:31.435351</ts>
    <user>U3SQ42JJW</user>
    <text>&lt;@U6AU4N1HR&gt; maybe I didnt got your question. I understood it like this: If one uses Http.send, the question is if the cookie for the host and path is automatically send along to the server … which isn't..</text>
  </message>
  <message>
    <ts>2017-08-02T14:30:55.449563</ts>
    <user>U0JFGGZS6</user>
    <text>you could also do `uncurry List.range record.range` I think</text>
  </message>
  <message>
    <ts>2017-08-02T14:31:52.483306</ts>
    <user>U4872964V</user>
    <text>&lt;@U0JFGGZS6&gt; indeed</text>
  </message>
  <message>
    <ts>2017-08-02T14:33:27.539968</ts>
    <user>U0JFGGZS6</user>
    <text>but uncurry and curry always confuse me a bit looking at them... I'm used to `flip` but not these for some reason</text>
  </message>
  <message>
    <ts>2017-08-02T14:34:17.568652</ts>
    <user>U6AU4N1HR</user>
    <text>&lt;@U3SQ42JJW&gt; yeah, i want to authenticate against django which is sending Set-Cookie in the response.. Can I set it manually in http.send?</text>
  </message>
  <message>
    <ts>2017-08-02T14:34:49.587020</ts>
    <user>U4872964V</user>
    <text>yeah, they are a bit tricky, but thinking of them as operators on functions works for me</text>
  </message>
  <message>
    <ts>2017-08-02T14:34:59.593019</ts>
    <user>U66RFDZ8F</user>
    <text>&lt;@U6AU4N1HR&gt; using custom requests, you can set your own headers</text>
  </message>
  <message>
    <ts>2017-08-02T14:35:41.617413</ts>
    <user>U66RFDZ8F</user>
    <text>under the hood, I think Elm just uses `xhr` so it should take cookies from browser</text>
  </message>
  <message>
    <ts>2017-08-02T14:36:07.632251</ts>
    <user>U6AU4N1HR</user>
    <text>ok thank you both</text>
  </message>
  <message>
    <ts>2017-08-02T14:36:35.648618</ts>
    <user>U3SJEDR96</user>
    <text>No, but it should be sent along.. Iff you set `withCredentials` to `True` on your request</text>
  </message>
  <message>
    <ts>2017-08-02T14:37:05.665645</ts>
    <user>U3SJEDR96</user>
    <text>You can't manually force custom cookies to be sent along, but you can ensure that cookies from a given domain are sent along using that ^</text>
  </message>
  <message>
    <ts>2017-08-02T14:37:20.674603</ts>
    <user>U3SJEDR96</user>
    <text>more info here: &lt;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T14:38:12.703657</ts>
    <user>U3SJEDR96</user>
    <text>No, no headers</text>
  </message>
  <message>
    <ts>2017-08-02T14:38:21.708055</ts>
    <user>U3SJEDR96</user>
    <text>&lt;http://package.elm-lang.org/packages/elm-lang/http/1.0.0/Http#request&gt; &amp;lt;- that last entry there</text>
  </message>
  <message>
    <ts>2017-08-02T14:38:46.722707</ts>
    <user>U3SQ42JJW</user>
    <text>Ah… then I was wrong.. sorry…</text>
  </message>
  <message>
    <ts>2017-08-02T14:39:47.757918</ts>
    <user>U3SJEDR96</user>
    <text>No problem; we all are, occasionally :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-02T14:40:24.779037</ts>
    <user>U6AU4N1HR</user>
    <text>&lt;@U3SJEDR96&gt; great, thank you :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-02T14:44:16.910247</ts>
    <user>U0F7JPK36</user>
    <text>lol this is wild</text>
  </message>
  <message>
    <ts>2017-08-02T14:56:32.333249</ts>
    <user>U23SA861Y</user>
    <text>I blame Baader-Meinhof</text>
  </message>
  <message>
    <ts>2017-08-02T15:23:35.212384</ts>
    <user>U66RFDZ8F</user>
    <text>&lt;@U3SJEDR96&gt; `withCredentials` should only have an effect on `cors` requests</text>
  </message>
  <message>
    <ts>2017-08-02T15:24:01.225792</ts>
    <user>U3SJEDR96</user>
    <text>Yeah, and cookies are automatically sent on same-origin requests</text>
  </message>
  <message>
    <ts>2017-08-02T15:24:17.233931</ts>
    <user>U3SJEDR96</user>
    <text>Since cookies weren't sent, that implies it was a cross-origin request</text>
  </message>
  <message>
    <ts>2017-08-02T15:25:40.278856</ts>
    <user>U3SJEDR96</user>
    <text>Unless I'm confusing the issue here, which is super-possible because I was mostly reacting to the "setting cookie headers yourself" comment</text>
  </message>
  <message>
    <ts>2017-08-02T15:26:13.296496</ts>
    <user>U66RFDZ8F</user>
    <text>ok</text>
  </message>
  <message>
    <ts>2017-08-02T15:26:53.317246</ts>
    <user>U66RFDZ8F</user>
    <text>I haven't tried setting cookie headers, but just wanted to point out the possibility was there</text>
  </message>
  <message>
    <ts>2017-08-02T15:35:29.589644</ts>
    <user>U3SJEDR96</user>
    <text>That's the thing, you actually can't. Cookie headers are under exclusive control of the UA, can't be directly set through XHR. Same with `Content-Length` and a few others :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-02T16:19:39.000407</ts>
    <user>U5ABF3BH7</user>
    <text>Hi again Gilbert! When I look a the following method in</text>
  </message>
  <message>
    <ts>2017-08-02T16:19:54.007926</ts>
    <user>U5ABF3BH7</user>
    <text>```    
validateInput : Int -&amp;gt; Int -&amp;gt; String -&amp;gt; Maybe String
validateInput low high =
    Validate.eager
        [Validate.ifBlank ("Please type a number from " ++ toString low ++ " to " ++ toString high ++ ".")
        , validateResult (\_ -&amp;gt; "Entered value is not an integer.") (validateInRange low high) &amp;lt;&amp;lt; String.toInt
        ]```</text>
  </message>
  <message>
    <ts>2017-08-02T16:20:33.029135</ts>
    <user>U5ABF3BH7</user>
    <text>Is the result a Maybe String, or a function (String -&amp;gt; Maybe String)?</text>
  </message>
  <message>
    <ts>2017-08-02T17:09:51.562162</ts>
    <user>U6E5PS83X</user>
    <text>I started my app with this in my `index.html`:

```
var main = document.getElementById('my-elm-app');
Elm.Main.embed(main);
```

now i've got

```
var app = Elm.Main.fullscreen(localStorage.session || null);
app.ports.storeSession.subscribe(function(session) {
    localStorage.session = session;
});
window.addEventListener("storage", function(event) {
    if (event.storageArea === localStorage &amp;amp;&amp;amp; event.key === "session") {
        app.ports.onSessionChange.send(event.newValue);
    }
}, false);
```

Is there a way I can use session storage while still using `embed` instead of `fullscreen`?</text>
  </message>
  <message>
    <ts>2017-08-02T17:11:46.617429</ts>
    <user>U6E5PS83X</user>
    <text>actually, does `embed` still return an object i can assign to `var app`?</text>
  </message>
  <message>
    <ts>2017-08-02T17:13:10.657345</ts>
    <user>U6E5PS83X</user>
    <text>though i'm not sure how to pass `localStorage.session || null` to `embed`</text>
  </message>
  <message>
    <ts>2017-08-02T17:22:42.922044</ts>
    <user>U6E5PS83X</user>
    <text>Aha, I've figured it out:

```
var main = document.getElementById('friday-calls');
var app = Elm.Main.embed(main, localStorage.session || null); // &amp;lt;-- the magic

app.ports.storeSession.subscribe(function(session) {
    localStorage.session = session;
});

window.addEventListener("storage", function(event) {
    if (event.storageArea === localStorage &amp;amp;&amp;amp; event.key === "session") {
        app.ports.onSessionChange.send(event.newValue);
    }
}, false);
```</text>
  </message>
  <message>
    <ts>2017-08-02T17:35:59.280128</ts>
    <user>U5ABF3BH7</user>
    <text>Hi again! I have an input field, I want to show an error if the character entered is different from a digit or '-'. How can I accomplish that in Elm?</text>
  </message>
  <message>
    <ts>2017-08-02T17:37:05.307634</ts>
    <user>U23SA861Y</user>
    <text>presumably you have a field in your model that has the string you want to validate</text>
  </message>
  <message>
    <ts>2017-08-02T17:38:30.343884</ts>
    <user>U23SA861Y</user>
    <text>then you would need to construct a function `valid: String-&amp;gt;Bool`</text>
  </message>
  <message>
    <ts>2017-08-02T17:38:52.352674</ts>
    <user>U23SA861Y</user>
    <text>then in your view check the string and display or not display your warning</text>
  </message>
  <message>
    <ts>2017-08-02T17:42:02.434682</ts>
    <user>U5ABF3BH7</user>
    <text>Right &lt;@U23SA861Y&gt;, I want to show a warning when the user enters an invalid character. It is for a social number. My issue is how to build that function.</text>
  </message>
  <message>
    <ts>2017-08-02T17:43:52.481675</ts>
    <user>U4JT89FGB</user>
    <text>untested: `Regex.contains (Regex.regex "(\\d|-)*") inputString`</text>
  </message>
  <message>
    <ts>2017-08-02T17:44:51.506382</ts>
    <user>U23SA861Y</user>
    <text>regex would be the correct tool, although becareful as they can cause runtime errors</text>
  </message>
  <message>
    <ts>2017-08-02T17:45:36.525490</ts>
    <user>U4JT89FGB</user>
    <text>i think you just need to make sure your user isn't inputting the string to get converted to a regex, correct &lt;@U23SA861Y&gt;?</text>
  </message>
  <message>
    <ts>2017-08-02T17:46:51.556813</ts>
    <user>U23SA861Y</user>
    <text>yeah, I believe the RTE occurs when it parses the regex itself so if its a compile time constant you should be safe</text>
  </message>
  <message>
    <ts>2017-08-02T17:47:35.574501</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U4JT89FGB&gt;, I want my string to be invalid if any value other than a digit or '-' is entered. Right now, I am getting ```&amp;gt; Regex.contains (Regex.regex "(\\[0-9]|-)*") "1234fami"
True : Bool```</text>
  </message>
  <message>
    <ts>2017-08-02T17:47:56.582856</ts>
    <user>U5ABF3BH7</user>
    <text>I want it to be false since I have letters</text>
  </message>
  <message>
    <ts>2017-08-02T17:48:18.591685</ts>
    <user>U23SA861Y</user>
    <text>I think you want match instead of contains</text>
  </message>
  <message>
    <ts>2017-08-02T17:48:31.596958</ts>
    <user>U23SA861Y</user>
    <text>and you will have to put start of line and end of line patterns on there</text>
  </message>
  <message>
    <ts>2017-08-02T17:49:18.615807</ts>
    <user>U23SA861Y</user>
    <text>nvm contains is the correct function</text>
  </message>
  <message>
    <ts>2017-08-02T17:49:27.619394</ts>
    <user>U23SA861Y</user>
    <text>but you want to so a full string match</text>
  </message>
  <message>
    <ts>2017-08-02T17:49:55.630403</ts>
    <user>U23SA861Y</user>
    <text>for posix that would be a `^` at the beginning and a `$` at the end</text>
  </message>
  <message>
    <ts>2017-08-02T17:50:01.633116</ts>
    <user>U23SA861Y</user>
    <text>not sure what the JS flavour is</text>
  </message>
  <message>
    <ts>2017-08-02T17:50:41.649943</ts>
    <user>U23SA861Y</user>
    <text>looks like it's the same</text>
  </message>
  <message>
    <ts>2017-08-02T17:51:57.680897</ts>
    <user>U23SA861Y</user>
    <text>`Regex.contains (Regex.regex "^(\\[0-9]|-)*$")`</text>
  </message>
  <message>
    <ts>2017-08-02T17:52:47.700574</ts>
    <user>U4JT89FGB</user>
    <text>Yeah what he said :+1:</text>
  </message>
  <message>
    <ts>2017-08-02T17:54:19.737847</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U23SA861Y&gt; not working yet ```Regex.contains (Regex.regex "^(\\[0-9]|-)*$")  "23"
False : Bool```, everything I try gives me false</text>
  </message>
  <message>
    <ts>2017-08-02T17:56:50.798755</ts>
    <user>U5ABF3BH7</user>
    <text>except an empty string</text>
  </message>
  <message>
    <ts>2017-08-02T18:01:02.901204</ts>
    <user>U23SA861Y</user>
    <text>This is where my knowledge of JS regexs is failing</text>
  </message>
  <message>
    <ts>2017-08-02T18:01:32.913126</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U23SA861Y&gt; thanks for pointing my in that direction though, I appreciate your efforts :slightly_smiling_face:</text>
  </message>
  <message>
    <ts>2017-08-02T18:02:41.940483</ts>
    <user>U0JFGGZS6</user>
    <text>do you need the backslashes?</text>
  </message>
  <message>
    <ts>2017-08-02T18:04:23.978929</ts>
    <user>U63UF49NH</user>
    <text>Something like this? `^(\\[\d-]+)$` &lt;http://rubular.com/r/wjR6i1JFDj&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T18:07:04.037756</ts>
    <user>U1AN4JRFV</user>
    <text>in elm: `ssn =  regex "^([\\d-]+)$"`</text>
  </message>
  <message>
    <ts>2017-08-02T18:07:14.041246</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;https://ellie-app.com/3VqZD6HKxMHa1/1&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T18:08:07.059550</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U5ABF3BH7&gt; if you are trying to match specifically on a pattern of digits and dashes, you can do that with a regex also</text>
  </message>
  <message>
    <ts>2017-08-02T18:08:24.065623</ts>
    <user>U1AN4JRFV</user>
    <text>e.g. `^\\d{3}-?\\d{2}-?\\d{4}$`</text>
  </message>
  <message>
    <ts>2017-08-02T18:08:43.072272</ts>
    <user>U1AN4JRFV</user>
    <text>but then I would validate on blur (or on submit)</text>
  </message>
  <message>
    <ts>2017-08-02T18:12:00.141726</ts>
    <user>U1AN4JRFV</user>
    <text>or with a little fiddling: &lt;https://ellie-app.com/3VqZD6HKxMHa1/2&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T18:14:58.202466</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U1AN4JRFV&gt;, this is great on submit, thanks a lot.</text>
  </message>
  <message>
    <ts>2017-08-02T18:15:50.220380</ts>
    <user>U23SA861Y</user>
    <text>you can also do a red,amber,green type validation where its green if it matches the complete pattern. red if there is an invalid character and amber otherwise</text>
  </message>
  <message>
    <ts>2017-08-02T18:15:54.221703</ts>
    <user>U1AN4JRFV</user>
    <text>&lt;@U5ABF3BH7&gt;: glad to help, it was my bedtime treat :zzz:</text>
  </message>
  <message>
    <ts>2017-08-02T18:18:00.264086</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U23SA861Y&gt; Do you have any examples for that? I still haven't figured out how write regex to show that non-digit or non '-'. I am getting closer though</text>
  </message>
  <message>
    <ts>2017-08-02T18:18:34.275083</ts>
    <user>U23SA861Y</user>
    <text>I though &lt;@U1AN4JRFV&gt; got you on that one</text>
  </message>
  <message>
    <ts>2017-08-02T18:19:01.283764</ts>
    <user>U23SA861Y</user>
    <text>` regex "^([\\d-]+)$"`</text>
  </message>
  <message>
    <ts>2017-08-02T18:23:21.369829</ts>
    <user>U0JFGGZS6</user>
    <text>`^([0-9\\-]+)$`</text>
  </message>
  <message>
    <ts>2017-08-02T18:24:55.399853</ts>
    <user>U23SA861Y</user>
    <text>&lt;@U1AN4JRFV&gt; that ssn example you posted, what happens when someone mistypes the first digit.. :wink:</text>
  </message>
  <message>
    <ts>2017-08-02T18:31:06.519870</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U5ABF3BH7&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T18:31:30.527855</ts>
    <user>U23SA861Y</user>
    <text>` "^[\\d\\-]*$"`</text>
  </message>
  <message>
    <ts>2017-08-02T18:31:42.531855</ts>
    <user>U23SA861Y</user>
    <text>&lt;https://ellie-app.com/3VryRG6jKcXa1/0&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T18:31:59.537007</ts>
    <user>U48AEBJQ3</user>
    <text>It could be written as:

```
validateInput : Int -&amp;gt; Int -&amp;gt; String -&amp;gt; Maybe String
validateInput low high string =
    Validate.eager
        [Validate.ifBlank ("Please type a number from " ++ toString low ++ " to " ++ toString high ++ ".")
        , validateResult (\_ -&amp;gt; "Entered value is not an integer.") (validateInRange low high) &amp;lt;&amp;lt; String.toInt
        ]
        string
```</text>
  </message>
  <message>
    <ts>2017-08-02T18:35:03.594414</ts>
    <user>U5ABF3BH7</user>
    <text>&lt;@U23SA861Y&gt; That's perfect. Thanks :wink:</text>
  </message>
  <message>
    <ts>2017-08-02T18:36:33.621320</ts>
    <user>U23SA861Y</user>
    <text>the problem is there are two major regex standards and you never know which one is in use.</text>
  </message>
  <message>
    <ts>2017-08-02T18:37:07.631233</ts>
    <user>U23SA861Y</user>
    <text>Almost have half a mind to use the parser library instead of regexs</text>
  </message>
  <message>
    <ts>2017-08-02T18:37:47.642965</ts>
    <user>U23SA861Y</user>
    <text>more power than you need but the api isn't encoded in backslashes</text>
  </message>
  <message>
    <ts>2017-08-02T18:42:00.720590</ts>
    <user>U23SA861Y</user>
    <text>although it looks like people are trying with all the `|.`  and `|=`</text>
  </message>
  <message>
    <ts>2017-08-02T18:46:46.805751</ts>
    <user>U5X2ZRFDF</user>
    <text>Yeah, the regex libraries in Haskell are rather complex because they support both standards.</text>
  </message>
  <message>
    <ts>2017-08-02T19:31:50.564084</ts>
    <user>U45C5R6QP</user>
    <text>Just noticed that a float division with 0 / 0 throws NaN. Is this expected behavior? &lt;https://ellie-app.com/3VsqdPFWwgba1/0&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T19:32:12.569503</ts>
    <user>U23SA861Y</user>
    <text>that would be standard floating point behaviour</text>
  </message>
  <message>
    <ts>2017-08-02T19:32:42.577788</ts>
    <user>U23SA861Y</user>
    <text>what would you expect to have occurred</text>
  </message>
  <message>
    <ts>2017-08-02T19:33:00.582605</ts>
    <user>U23SA861Y</user>
    <text>ahh right this is ints</text>
  </message>
  <message>
    <ts>2017-08-02T19:33:00.582700</ts>
    <user>U45C5R6QP</user>
    <text>compiler error but I guess there's no way for it to check</text>
  </message>
  <message>
    <ts>2017-08-02T19:33:01.582896</ts>
    <user>U23SA861Y</user>
    <text>right</text>
  </message>
  <message>
    <ts>2017-08-02T19:33:30.590841</ts>
    <user>U23SA861Y</user>
    <text>they are values, which means the result needs to be encoded as a value</text>
  </message>
  <message>
    <ts>2017-08-02T19:37:01.645646</ts>
    <user>U23SA861Y</user>
    <text>I think the only really strange thing is that a `0/0` as an int also returns `NaN` but that is more because of JS</text>
  </message>
  <message>
    <ts>2017-08-02T19:40:45.703529</ts>
    <user>U1NME8MS8</user>
    <text>Hi! I'm wondering whether there is something like a ring in elm, aka. something we can continuely cycle through</text>
  </message>
  <message>
    <ts>2017-08-02T19:41:43.718942</ts>
    <user>U48AEBJQ3</user>
    <text>&lt;@U1NME8MS8&gt; &lt;http://package.elm-lang.org/packages/eeue56/elm-lazy-list/1.0.0/Lazy-List#cycle&gt; ?</text>
  </message>
  <message>
    <ts>2017-08-02T19:42:17.727366</ts>
    <user>U1NME8MS8</user>
    <text>&lt;@U48AEBJQ3&gt; ah nice, so I could just call head on this list and get the next element out?</text>
  </message>
  <message>
    <ts>2017-08-02T19:42:52.736647</ts>
    <user>U48AEBJQ3</user>
    <text>You would probably call &lt;http://package.elm-lang.org/packages/eeue56/elm-lazy-list/1.0.0/Lazy-List#headAndTail&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T19:42:58.738184</ts>
    <user>U3FJSB596</user>
    <text>&lt;http://package.elm-lang.org/packages/maorleger/elm-infinite-zipper/latest&gt;</text>
  </message>
  <message>
    <ts>2017-08-02T19:43:29.746567</ts>
    <user>U48AEBJQ3</user>
    <text>That's another interesting way to do it.</text>
  </message>
  <message>
    <ts>2017-08-02T19:43:44.750413</ts>
    <user>U1NME8MS8</user>
    <text>I love the idea of storing at least on element</text>
  </message>
  <message>
    <ts>2017-08-02T19:44:02.754843</ts>
    <user>U48AEBJQ3</user>
    <text>Yes, non-empty lists clean up a lot of maybes.</text>
  </message>
  <message>
    <ts>2017-08-02T20:29:13.429973</ts>
    <user>U2SR9DL7Q</user>
    <text>&lt;@U1NME8MS8&gt; I'm using a non-infinite zipper to cycle through 4 players in a game app. I didnt use the infinite one so I could preserve order and always reference the last player specifically. I just added a next  function that jumps back to the first element from the last.</text>
  </message>
  <message>
    <ts>2017-08-02T21:45:06.358279</ts>
    <user>U3SJEDR96</user>
    <text>&lt;@U23SA861Y&gt; `(/)` returns a float in elm, so that one is actually ok</text>
  </message>
  <message>
    <ts>2017-08-03T04:26:17.343708</ts>
    <user>U4R17T6F7</user>
    <text>Quick question: can the |&amp;gt; operator be used also when the parameter is not the last one?

For example, I want to repeat a fixed string certain number of time using "List.repeat". The pipe is passing the number of repetition but for the "List.repeat" the last parameter is the string that need to be repeated.

I could create a new function with swapped parameter but I was wondering if there could be a simpler solution</text>
  </message>
  <message>
    <ts>2017-08-03T04:33:57.511037</ts>
    <user>U3SJEDR96</user>
    <text>There is always `flip : (a -&amp;gt; b -&amp;gt; c) -&amp;gt; b -&amp;gt; a -&amp;gt; c`. In other words, given a function that takes two arguments, it returns a function with those arguments reversed</text>
  </message>
  <message>
    <ts>2017-08-03T04:34:50.529712</ts>
    <user>U3SJEDR96</user>
    <text>so `66 |&amp;gt; flip String.repeat "foo"`</text>
  </message>
  <message>
    <ts>2017-08-03T05:25:07.629133</ts>
    <user>U4872964V</user>
    <text>&lt;@U4R17T6F7&gt; and if you don't like `flip` you can always explicitly do `66 |&amp;gt; (\n -&amp;gt; String.repeat n "foo")`</text>
  </message>
  <message>
    <ts>2017-08-03T08:13:17.878738</ts>
    <user>U1EEBCQM6</user>
    <text>good day everyone</text>
  </message>
  <message>
    <ts>2017-08-03T08:14:43.907582</ts>
    <user>U1EEBCQM6</user>
    <text>I've been messing around with a nested JSON decoder. I have it working and all but wanted to see if there was an easier way that I might not know about since I'm new to this.</text>
  </message>
  <message>
    <ts>2017-08-03T08:14:58.912853</ts>
    <user>U1EEBCQM6</user>
    <text>You can take a look here: &lt;https://ellie-app.com/3VjdtsVDqYta1/4&gt;</text>
  </message>
  <message>
    <ts>2017-08-03T08:15:44.928849</ts>
    <user>U4R17T6F7</user>
    <text>&lt;@U3SJEDR96&gt; , &lt;@U4872964V&gt; thank you for the two suggestions!</text>
  </message>
  <message>
    <ts>2017-08-03T08:16:52.952681</ts>
    <user>U1EEBCQM6</user>
    <text>It seems very complex to me. But I've read that decoding JSON in elm is kinda complex most of the time. So I'm not sure about it.</text>
  </message>
  <message>
    <ts>2017-08-03T08:17:33.966838</ts>
    <user>U3FJSB596</user>
    <text>&lt;@U1EEBCQM6&gt; What is the final type you want to get?</text>
  </message>
  <message>
    <ts>2017-08-03T08:18:20.983113</ts>
    <user>U3SJEDR96</user>
    <text>that doesn't look that complex to me, but maybe I'm just used to it by now</text>
  </message>
  <message>
    <ts>2017-08-03T08:19:12.000999</ts>
    <user>U3SJEDR96</user>
    <text>come to think of it, it could be a little simpler to just go straight to the final representation using `andThen`</text>
  </message>
  <message>
    <ts>2017-08-03T08:21:36.051990</ts>
    <user>U1EEBCQM6</user>
    <text>&lt;@U3FJSB596&gt; the final type is `List Option`</text>
  </message>
  <message>
    <ts>2017-08-03T08:21:58.059700</ts>
    <user>U1EEBCQM6</user>
    <text>&lt;@U3SJEDR96&gt; how do you mean?</text>
  </message>
  <message>
    <ts>2017-08-03T08:49:12.685993</ts>
    <user>U1EEBCQM6</user>
    <text>&lt;@U3SJEDR96&gt; is it possible to drop the temporary type `Opt` and go straight to the `Option`?</text>
  </message>
  <message>
    <ts>2017-08-03T09:40:35.182967</ts>
    <user>U6D3ERLA1</user>
    <text>Is it possible to use numbers as a union type?</text>
  </message>
  <message>
    <ts>2017-08-03T09:40:44.187716</ts>
    <user>U6D3ERLA1</user>
    <text>`type Binary = 0 | 1`</text>
  </message>
  <message>
    <ts>2017-08-03T09:45:00.326175</ts>
    <user>U1AP08WV6</user>
    <text>no. The reason is that 0 and 1 are already values of type Int, so they can't be used as values of other types</text>
  </message>
  <message>
    <ts>2017-08-03T09:48:50.453366</ts>
    <user>U3FJSB596</user>
    <text>&lt;@U6D3ERLA1&gt; You can do this though:
`type Binary = On | Off` or `type alias Binary = Bool`</text>
  </message>
  <message>
    <ts>2017-08-03T09:54:59.662942</ts>
    <user>U4872964V</user>
    <text>or use something like `B0` and `B1`</text>
  </message>
  <message>
    <ts>2017-08-03T09:56:18.708584</ts>
    <user>U66RFDZ8F</user>
    <text>I am trying to format a date as `Nov 2017`, and I am looking at &lt;http://package.elm-lang.org/packages/rluiten/elm-date-extra/latest&gt; but alas, I can't make sense of it</text>
  </message>
  <message>
    <ts>2017-08-03T09:56:33.717404</ts>
    <user>U66RFDZ8F</user>
    <text>The examples aren't very clear</text>
  </message>
  <message>
    <ts>2017-08-03T09:56:35.718630</ts>
    <user>U66RFDZ8F</user>
    <text>any help?</text>
  </message>
  <message>
    <ts>2017-08-03T09:57:26.748984</ts>
    <user>U66RFDZ8F</user>
    <text>that's a bit confusing, isn't because int is primitive?</text>
  </message>
  <message>
    <ts>2017-08-03T09:57:47.761501</ts>
    <user>U4872964V</user>
    <text>&lt;https://github.com/rluiten/elm-date-extra/blob/9.0.1/DocFormat.md&gt; may be helpful</text>
  </message>
  <message>
    <ts>2017-08-03T09:58:17.778266</ts>
    <user>U66RFDZ8F</user>
    <text>because I can use types that exist in other types in new types</text>
  </message>
  <message>
    <ts>2017-08-03T09:58:54.799745</ts>
    <user>U66RFDZ8F</user>
    <text>why that wasn't on the package doc, I can't tell but thank you</text>
  </message>
  <message>
    <ts>2017-08-03T10:05:05.023488</ts>
    <user>U4872964V</user>
    <text>it's on the doc but the link is broken :disappointed:</text>
  </message>
  <message>
    <ts>2017-08-03T10:07:26.107782</ts>
    <user>U66RFDZ8F</user>
    <text>but you guys are a real great help</text>
  </message>
  <message>
    <ts>2017-08-03T10:07:36.113805</ts>
    <user>U66RFDZ8F</user>
    <text>comeon with the guys thing</text>
  </message>
  <message>
    <ts>2017-08-03T10:07:58.127153</ts>
    <user>U1AP08WV6</user>
    <text>I'm not sure if there's such thing as primitive in Elm.</text>
  </message>
  <message>
    <ts>2017-08-03T10:08:15.137020</ts>
    <user>U1AP08WV6</user>
    <text>Yes, you can use other types, but not values of these types</text>
  </message>
  <message>
    <ts>2017-08-03T10:09:00.163382</ts>
    <user>U1AP08WV6</user>
    <text>for example if you do `type Foo = A | B` you can't do later `type Baz = A | C` because A is already value of type Foo, so it can't be also value of type Baz</text>
  </message>
  <message>
    <ts>2017-08-03T10:25:15.751038</ts>
    <user>U6D3ERLA1</user>
    <text>`güeyes`</text>
  </message>
  <message>
    <ts>2017-08-03T10:45:02.494953</ts>
    <user>U6D3ERLA1</user>
    <text>Looking for example of mapping a list of tuples to html…</text>
  </message>
  <message>
    <ts>2017-08-03T10:46:12.539188</ts>
    <user>U3SJEDR96</user>
    <text>`List.map (\(name, age) -&amp;gt; Html.text &amp;lt;| name ++ " is " ++ toString age ++ " y old") [ ( "foo", 12 ), ("bar", 30) ]`</text>
  </message>
  <message>
    <ts>2017-08-03T10:47:22.582672</ts>
    <user>U6D3ERLA1</user>
    <text>Brilliant</text>
  </message>
  <message>
    <ts>2017-08-03T11:38:55.574420</ts>
    <user>U6D3ERLA1</user>
    <text>Template syntax is a little rough / figuring this out;</text>
  </message>
  <message>
    <ts>2017-08-03T11:38:59.577098</ts>
    <user>U6D3ERLA1</user>
    <text>```
toText : List (Int, Float) -&amp;gt; List ( Html msg )
toText list =
        [
            Html.ul []
                (List.map (\(num, mod) -&amp;gt; &lt;http://Html.li|Html.li&gt; [] [text (toString num) ++ "_" ++ (toString mod)]) list)

        ]
```</text>
  </message>
  <message>
    <ts>2017-08-03T11:39:54.610733</ts>
    <user>U3SJEDR96</user>
    <text>you miss parens around all the args of `text` or a `&amp;lt;|` between `text` and everything that follows</text>
  </message>
  <message>
    <ts>2017-08-03T11:43:19.739625</ts>
    <user>U6D3ERLA1</user>
    <text>&lt;https://ellie-app.com/3VKDbRwbP8Ka1/4&gt;</text>
  </message>
  <message>
    <ts>2017-08-03T11:43:24.742615</ts>
    <user>U6D3ERLA1</user>
    <text>this one works…</text>
  </message>
  <message>
    <ts>2017-08-03T11:44:27.781377</ts>
    <user>U6D3ERLA1</user>
    <text>A little bit lost in braces</text>
  </message>
  <message>
    <ts>2017-08-03T11:45:25.817836</ts>
    <user>U3SJEDR96</user>
    <text>replacing some by `&amp;lt;|` and removing those you don't need might clear things up a little. Unwrapping `toText` so it returns a single Html msg might help, too</text>
  </message>
  <message>
    <ts>2017-08-03T11:47:19.888287</ts>
    <user>U6D3ERLA1</user>
    <text>templating is always a bit messy - still learning the idiom</text>
  </message>
  <message>
    <ts>2017-08-03T11:47:24.891763</ts>
    <user>U3SJEDR96</user>
    <text>&lt;https://ellie-app.com/3VLfsnW2HQsa1/0&gt; something like that, perhaps</text>
  </message>
  <message>
    <ts>2017-08-03T11:47:55.910813</ts>
    <user>U3SJEDR96</user>
    <text>I made that `tuple to li` lambda into a helper function, I find it also helps with readability</text>
  </message>
  <message>
    <ts>2017-08-03T11:59:25.343559</ts>
    <user>U48AEBJQ3</user>
    <text>I was just looking at some other bits of that code and wondering why the type checker is allowing both `x % 3` and `x / 3`.</text>
  </message>
  <message>
    <ts>2017-08-03T12:00:53.402205</ts>
    <user>U5ABF3BH7</user>
    <text>Hello! I am working on decoders that are not straight forward. For example, I get a string and need to change it to a union type. I am getting an error I don't understand. Would anyone be willing to see what I am missing? Here is the context and what I wrote```import Json.Encode as Json
import Json.Decode.Pipeline exposing (hardcoded, required, optional, decode)
import Json.Decode exposing (Decoder, bool, dict, int, list, string, andThen, float, nullable, succeed)

type alias AddressModel =
    { id : Maybe Int
    , address1 : String
    , address2 : String
    , address3 : String
    , address4 : String
    , canadianPostalCodeFsa : String
    , canadianPostalCodeLdu : String
    , community_name : String
    , community_type : CommunityType
    , stateOrProvince : String
    , postal_code : String
    , country : String
    , otherCountry : String
    , latitude : Float
    , longitude : Float
    , county : String
    , insideCityLimits : InsideCityLimits
    , other_country : String
    , borough : String
    }


type CommunityType
    = City
    | Village
    | Township


type InsideCityLimits
    = Yes
    | No
    | Unknown
    
addressDecoder : Decoder AddressModel
addressDecoder =
     decode AddressModel
         |&amp;gt; Json.Decode.Pipeline.required "id"  (nullable int)
         |&amp;gt; Json.Decode.Pipeline.optional "address1" string
         |&amp;gt; Json.Decode.Pipeline.optional "address2" string
         |&amp;gt; Json.Decode.Pipeline.optional "address3" string
         |&amp;gt; Json.Decode.Pipeline.optional "address4" string
         |&amp;gt; Json.Decode.Pipeline.optional "canadianPostalCodeFsa" string
         |&amp;gt; Json.Decode.Pipeline.optional "canadianPostalCodeLdu " string
         |&amp;gt; Json.Decode.Pipeline.optional "community_name" string
         |&amp;gt; Json.Decode.Pipeline.optional "community_tyoe" (string |&amp;gt; andThen decodeCommunityType)
         |&amp;gt; Json.Decode.Pipeline.optional "stateOrProvince" string
         |&amp;gt; Json.Decode.Pipeline.optional "postal_code" string
         |&amp;gt; Json.Decode.Pipeline.optional "country" string
         |&amp;gt; Json.Decode.Pipeline.optional "otherCountry" string
         |&amp;gt; Json.Decode.Pipeline.optional "latitude" float
         |&amp;gt; Json.Decode.Pipeline.optional "longitude" float
         |&amp;gt; Json.Decode.Pipeline.optional "county" string
         |&amp;gt; Json.Decode.Pipeline.optional "insideCityLimits" ( string |&amp;gt; andThen decodeInsideCityLimits)
         |&amp;gt; Json.Decode.Pipeline.optional "other_country" string
         |&amp;gt; Json.Decode.Pipeline.optional "borough" string


decodeCommunityType : String -&amp;gt; Decoder CommunityType
decodeCommunityType cType  =
    succeed (toCommunityType cType)

toCommunityType : String -&amp;gt; CommunityType
toCommunityType str =
  case str of
       "City" -&amp;gt;
                City

       "Village" -&amp;gt;
                Village

       "Township" -&amp;gt;
                Township

       _ -&amp;gt;
                City


decodeInsideCityLimits : String -&amp;gt; Decoder InsideCityLimits
decodeInsideCityLimits str =
   succeed (toInsideCityLimits str)

toInsideCityLimits : String -&amp;gt; InsideCityLimits
toInsideCityLimits str =
 case str of
   "true" -&amp;gt; Yes
   "false" -&amp;gt; No
   ""      -&amp;gt; Unknown```</text>
  </message>
  <message>
    <ts>2017-08-03T12:01:05.410477</ts>
    <user>U5ABF3BH7</user>
    <text>Here is one of the errors I am getting ```The right side of (|&amp;gt;) is causing a type mismatch.

132|      decode AddressModel
133|          |&amp;gt; Json.Decode.Pipeline.required "id"  (nullable int)
134|          |&amp;gt; Json.Decode.Pipeline.optional "address1" string
135|          |&amp;gt; Json.Decode.Pipeline.optional "address2" string
136|&amp;gt;         |&amp;gt; Json.Decode.Pipeline.optional "address3" string

(|&amp;gt;) is expecting the right side to be a:

    (Decoder (String -&amp;gt; b) -&amp;gt; Decoder (b)) -&amp;gt; a

But the right side is:

    String -&amp;gt; (Decoder (String -&amp;gt; b)) -&amp;gt; Decoder b

Hint: It looks like a function needs 1 more argument.```</text>
  </message>
  <message>
    <ts>2017-08-03T12:01:24.422440</ts>
    <user>U5ABF3BH7</user>
    <text>I am a bit confused</text>
  </message>
</slack>

