```
Hello everyone! :slightly_smiling_face:
`.name` is a function that will take the model, and get the `name` field from it
`&gt;&gt;` is the syntax for combining two functions into one
<@U37HUSJ4R> If you are just starting with Elm, I would recommend maybe just writing your own code for now.
thanks <@U0EUHKVGB>
so what would the type signature look like for a custom validator? for example `ifFoo`
`ifFoo : Model -&gt; Validator error String`?
No, `Validator error String`
It is confusing because in that library, `Validator` is a type alias for a function
`type alias Validator error  = subject -&gt; List error`
notice how `subject -&gt; List error` matches our `validateModel` example
where the `subject` is `Model`, and the `error` is `(Field, String)`
Does that make sense to you?
it does
So, our `validateModel` _is_ a custom validator
it just doesn’t take an error message, which the other validators do
so if I wanted to create my own `if..` where I could pass my model and then do a custom assertion, what would that look like?
