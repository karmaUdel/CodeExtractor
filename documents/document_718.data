```
<@U4WG0KTNJ> moving our convo as comments/thread into your last code snippet
You want a substring, right? So I'm not sure a `!=` makes sense 
Try `in`
I have that as well
just ensures it doesn't check the same element
<@U4WG0KTNJ>  here, actually
Also any returns a Boolean, aren't you trying to remove from the list?
from zipfile import ZipFile doesn't work actually. I'm using Python 2.7
Or filter it down, rather 
So make these changes. Also, what are you trying to do w/ i counter/index in lines 12 and 19?
yeah that would just be a filter and I would add it to a list
So is it working, or are you trying to make it faster/more efficient?
make it more efficient
I wanted to make it so that the filename would increment, file_a_1, file_a_2, file_b_1, file_b_2
so there is a conflict w/ i here.
on line 13, i takes values 0 to len(zip_ref.filelist)-1 (automatically incrementing it's value as f gets a new element value from zip_ref.filelist
i=2;f=bird
just to be clear, this happens automatically when you `for i, f in enumerate(pet_list):`
ah makes sense didn't notice it
getting a KeyError: “There is no item named “cat_0.csv” in the archive”
yeah. So basically what you are trying to do is change the name of the file inside the zip and then unzip, right?
yeap!
right. so what is happening is you are only updating the name of the list, now the name of the file, inside the zip, on the HD.
Check this out: <https://stackoverflow.com/questions/3982034/how-can-i-extract-files-using-custom-names-with-zipfile-module-from-python>
looks like unziping to a tmp folder might be the way to go.
What I said here, is wrong. Zip file is one that is getting overwritten. NOT the files inside the zip.
so if there are existing files of `file_a`, it should create `file_a_0` and then `file_a_1`, and so on? It just keeps adding to file_a_watever-count and file_b_whatever-count, depending on the files that have already been extracted?
anytime i open a file in pycharm it says loading ... arggg. why does this happen when i have something really important to fix.
are all acceptable!
yes... I saw that.
                name, ext = os.path.splitext(f.filename)
<@U4WG0KTNJ>
line 7 counts the number of files that start the same and end the same... this assumes that file_a_1, file_a_2... is sequential. If you get file_a_1, file_a_4, file_a_7 then just play w/ this. Also, had line 11 one indentation back so it was trying to unzip/extract file from previous iteration, that were the file not found error coming from
hmm it still only opens the first 2 zipped folders and line 10 is giving me RunTimeError: Attempt to read ZIP archive that was already closed
