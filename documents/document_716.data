```
the same principle
It works
:slightly_smiling_face:
also `lambda: func()` works. Should have just done that....
<@U5NMSURAQ> since it seems you've used tkinter, what's the best way to go about passing data to another Frame. I'm trying to grab a selection and place it inside a label to show a user what they selected, but in the same way as before it places the default value into the label instead of grabbing the updated one.
If `lambda: func()` works just `func` should also work...
But it doesn't that's the thing lol
Lambda is just a function reference, without a name. so setting `lambda: func()` is the same as `func`
Sounds like some other error, but if it works that's good :smile: ¯\_(?)_/¯
It's because it, for whatever reason attempts to access a key in a dict that doesn't exist and it steps into the function i attach to `command` if I just do `lambda: func()` it doesn't actually go into the function til it's finally clicked
<@U1BP42MRS> `func` and `lambda: func(foo, bar)` are different :wink:
Which is why I recommended using a partial as an alternative
Anyway, in tkinter you see a ton of `lambda: thing()` so it't not out of the norm :smile:
<@U4BMZ90T0> can you show a bit of code? maybe it's something obvious
nooo waaay
you, mister, should have a cup of coffee :coffee:
I actually got it
I just pass the controller in, grab the dictionary of frames and get the variable from the corresponding frame
But this is quite annoying :slightly_smiling_face:
That was my experience with most desktop ui programming, it's a little funky what you have to do
especially since Tk is sooo barebones
I just need 4 screens
that's it
there's a good side though: you better understand what happens under the wraps in other GUI frameworks
god is this bad
Should have just made a frontend, honestly
just attempting to format this is so bad.
You can pass around `bar` or `foo` to any function that needs a callable (with no args in this case)
