U5WS7CJLV : right
U5WS7CJLV : asking more out of curiosity than immediate need
U5WS7CJLV : I didn't see examples in the docs of functions getting aliased, so I wondered
U3RDE7LDP : You can have `type alias MyFunction = A -&gt; B -&gt; C`
U5WS7CJLV : but it makes sense that you can as functions are first-class-kinda objects in functional languages
U5WS7CJLV : thanks, bro!
U3RDE7LDP : At least I think you can.
U5WS7CJLV : I shall find out using science shortly!
U3RDE7LDP : yes, that works fine
U5WS7CJLV : cool.  Thanks again!  It is super awesome that Elm has a Slack channel.  And that there a bunch of smart and helpful people on here.
U5H8JJP24 : Hi, I'm stuck with a decoder that should decode an array [ 9.34958, 48.87733, 1000 ] to a Point, where index 2 (elevation) is optional.
```
type alias Point =
    { elev : Maybe Float, lat : Float, lng : Float }

```
Therefore I created following decoder:
```
fromArrayDecoder : Decoder Point
fromArrayDecoder =
    map3 Point
        (index 2 Decode.float |&gt; Decode.maybe)
        (index 1 Decode.float)
        (index 0 Decode.float)

```

My problem now is, that this decoder succeeds when index 2 is missing or is of any type like string etc. But I want it only to succeed if elev is missing, not if it has the wrong type. Is there any way of accomplishing this?

U1CE9DL9H : <@U5H8JJP24> create a decoder for the two valid cases, then combine them with `Decode.oneOf`
U5H8JJP24 : nice idea <@U1CE9DL9H> thx. I will give it a try
U65AGCFC3 : hello hello
U4RR7KX45 : hey everyone. I know I can use `::` to add an element to the front of the list, but to add it to the end of the list, should I just use concat?
U48AEBJQ3 : <@U4RR7KX45> `List.append myList [newElement]`
U4RR7KX45 : perfect, thank you <@U48AEBJQ3>
U48AEBJQ3 : The `++` does the same thing (although it is overloaded to work with strings as well)
U4RR7KX45 : I tried that too. oh I was actually trying it without placing the element in the list
U4RR7KX45 : oh well
U4RR7KX45 : #noobslife
U1CHKCKBR : hey, any of you played with touch screens ? i have to create a kiosk app and i should recreate a virtual keyboard
U1P6FFJ64 : Should not be a problem, <@U1CHKCKBR>. In the app we develop we support touch screens without too many problems.
U4SM7ECAG : I saw there is even a library that helps with gesture support in Elm (unfortunately I'm working with elm 0.16 in my day job so I haven't tried it yet, and I reverted to `hammer.js` and ports)
U1CHKCKBR : i don't know how i should orchestrate things; having a button -&gt; then capture press/touch event -&gt; then sub-circuit to ‘Z'  key press event  =&gt; output the result to input contexts
U1CHKCKBR : is this a proper way of doing things, or i overthinking it?
U5GCK308N : =
U5GCK308N : oops lol
U48AEBJQ3 : <@U1CHKCKBR> Is this what you are thinking? <https://ellie-app.com/3GKKgFsXjbga1/0>
U0J1M0F32 : <@U1CHKCKBR> Thinking through it right now. I think I would have buttons that fire events with their corresponding key and handle it that way.
`div [ onClick (KeyPressed "C")] [text "C"]` etc.

U0J1M0F32 : Yah, what <@U48AEBJQ3> suggests.
U1CHKCKBR : <@U48AEBJQ3> yeah, sort of
U1CHKCKBR : thank you, it a good starting point
U48AEBJQ3 : <@U1CHKCKBR> I got interested and tried something. It might be useful. <https://ellie-app.com/3GKKgFsXjbga1/1>
U5ABF3BH7 : <@U48AEBJQ3> thanks for posting the example, it is pretty cool
U5ABF3BH7 : Hi! I have a quick question, If I have```import FirstCall exposing (Model)``` but in my view, I want to rename Model FirstCallModel (because I already have something called Model in my view). Is there a straightforward way to do that?
U5ABF3BH7 : in other words I want to rename a type a import, is that possible?
U48AEBJQ3 : <@U5ABF3BH7> I don't think so? I think your better bet would be to not expose `Model` and instead use `FirstCall.Model` or you can `import FirstCall as FC` and then go `FC.Model`
U5ABF3BH7 : I had done that but I am getting a dependency, and I need each one for the other one. I guess I need to re-structure differently
U5ABF3BH7 : ```Your dependencies form a cycle:
  ???????
  ?    Views.Pages.FirstCall
  ?     ?
  ?    Views.Sections.ArrangementMeeting
  ???????
```

U48AEBJQ3 : Yeah, dependency cycles are occasionally annoying. The easiest way is to make an extra module which doesn't depend on either. However, I find that the emergence of such a cycle is often a sign that I might want to re-think what I'm doing more fundamentally.
U48AEBJQ3 : <@U5H8JJP24> Here is another possibility: <https://ellie-app.com/3GLHPTQgz7da1/0>
U5H8JJP24 : <@U48AEBJQ3> Thank you so much. That looks like a really nice approach. This will take me some time for understanding it xD
U48AEBJQ3 : <@U5H8JJP24> Well, if you have any questions about it, I'm happy to answer.
U23SA861Y : mm yeah, that you might be slicing across the grain as opposed to with it.


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
