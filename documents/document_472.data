U3FJSB596 : At the very bottom of the module is `toTask` that explicitly says that it can be use for chaining requests
U4872964V : <@U3WM55ZG8> oh yes, you're right
U4872964V : then that's another option
U3FJSB596 : <@U4E8RTDPF> There's no chaining of Commands
U4E8RTDPF : `toTask` nice ! thanks <@U4872964V> <@U3FJSB596> :raised_hands:
U4872964V : i guess it depends on why one depend on the other
U4E8RTDPF : still, it's better to go with the update way..
U4872964V : which method is more suitable
U3LUC6SNS : Hi all.  I've made some changes (added a package) to my project, and now `elm-test` fails to run (the app compiles).  Here is the error message:```
jxxmbp:koko_client carlson$ elm-test
I cannot find module 'LatexParser.Latex'.

Module 'LatexParserTest' is trying to import it.

Potential problems could be:
  * Misspelled the module name
  * Need to add a source directory or new dependency to elm-package.json
```
I diffed the regular `elm-package.json` with the one in `tests`.  They are identical. So I am baffled.

U0FP80EKB : <@U3LUC6SNS> Do you need to have `..` in the src directories in `tests/elm-package.json`
U3LUC6SNS : In elm-tools parse is there a way to parse (and keep) everything from `\\[` to `\\]`?  I've been using code like```
arg =
    succeed identity
        |. symbol "{"
        |= keep zeroOrMore (\c -&gt; c /= '}')
        |. symbol "}"
```
but the boolean function takes a Char as argument, not a String.

U3LUC6SNS : <@U0FP80EKB> I tried that, but alas, it doesn't work. (same error message)
U0FP80EKB : Interesting. I think the src directories are relative pathed from the location of the elm-package.json, so I don't think they should be identical.
U0FP80EKB : Can you paste the source directories part?
U3LUC6SNS : Do you mean the elm-package.json?
U0FP80EKB : yeah
U3LUC6SNS : Here we go:```
{
    "version": "1.0.0",
    "summary": "helpful summary of your project, less than 80 characters",
    "repository": "<https://github.com/user/project.git>",
    "license": "BSD3",
    "source-directories": [
        "../src"
    ],
    "exposed-modules": [],
    "native-modules": true,
    "dependencies": {
        "NoRedInk/elm-decode-pipeline": "3.0.0 &lt;= v &lt; 4.0.0",
        "elm-community/list-extra": "6.1.0 &lt;= v &lt; 7.0.0",
        "elm-community/string-extra": "1.4.0 &lt;= v &lt; 2.0.0",
        "elm-lang/core": "5.1.1 &lt;= v &lt; 6.0.0",
        "elm-lang/html": "2.0.0 &lt;= v &lt; 3.0.0",
        "elm-lang/http": "1.0.0 &lt;= v &lt; 2.0.0",
        "elm-lang/navigation": "2.0.0 &lt;= v &lt; 3.0.0",
        "elm-lang/websocket": "1.0.2 &lt;= v &lt; 2.0.0",
        "elm-lang/window": "1.0.0 &lt;= v &lt; 2.0.0",
        "elm-tools/parser": "2.0.1 &lt;= v &lt; 3.0.0",
        "evancz/url-parser": "2.0.1 &lt;= v &lt; 3.0.0",
        "fbonetti/elm-phoenix-socket": "2.0.0 &lt;= v &lt; 3.0.0",
        "jystic/elm-font-awesome": "2.0.1 &lt;= v &lt; 3.0.0",
        "krisajenkins/remotedata": "4.3.0 &lt;= v &lt; 5.0.0",
        "lukewestby/elm-http-builder": "5.1.0 &lt;= v &lt; 6.0.0",
        "mdgriffith/style-elements": "3.2.3 &lt;= v &lt; 4.0.0",
        "simonh1000/elm-jwt": "5.0.0 &lt;= v &lt; 6.0.0"
    },
    "elm-version": "0.18.0 &lt;= v &lt; 0.19.0"
}
```

U3LUC6SNS : It still has the ../src that I tried.
U0FP80EKB : This is the one in `tests` ?
U0FP80EKB : I'm assuming that the modules are in `../src`
U0FP80EKB : Can you paste the package json from the root? non-tests?
U3LUC6SNS : Yes.  Normally it says ```
"source-directories": [
        "src"
    ],
```
All of my Elm files except tests are in `src`

U3LUC6SNS : And the app compiles, which is one check
U0FP80EKB : Hmm…. And you are running `elm-test` from within `tests` (sorry for the basic questions)
U0FP80EKB : (just going over some of the things I've accidentally done)
U3LUC6SNS : Just to be sure: `jxxmbp:koko_client carlson$ diff elm-package.json tests/elm-package.json `
No problem about the questions.  I've always run tests from the root directory.  If I do so from `tests`, I get this:
```
jxxmbp:tests carlson$ elm-test
No tests found in the test/ (or tests/) directory.

NOTE: Make sure you're running elm-test from your project's root directory, where its elm-package.json lives.
```



in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
