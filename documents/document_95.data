```
hmaurer: A lot of the time stubbing isn't necessary; only for keys that connect to an external I/O source. Also, polymorphism is more convenient than a lookup table, and it encourages using the same key for the same behaviour.
It's important for Duct/Integrant's design around the idea of a vocabulary that keywords have the same meaning.
Also, it's more useful to stub the I/O source you're passing around than the multimethod. e.g. you might pass your database to another function as an argument. You need to be able to stub that directly.
Hence records and protocols.
<@U1WMJ5CQ2> that would do the trick, but i also need a timeout
