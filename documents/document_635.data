U5YKRLXGT : I'm using the library because it handles hashing the contents of a stylesheet to create a namespace, which elm-css does not (yet)
U5YKRLXGT : and because I think it could be wicked cool if I can get it to collect all the rules, emit one style at the end and leverage the virtualdom to no-op if no styles have changed
U5YKRLXGT : No weird external build process, just pure elm
U0EUHKVGB : The virtualdom will already do that for you.
U5YKRLXGT : Yes, exactly :slightly_smiling_face:
U0EUHKVGB : This is premature optimization for sure.
U5YKRLXGT : I'm not saying I will do that - I'm saying it does that :slightly_smiling_face:
U0EUHKVGB : There is no need to collect all the rules, is what I am saying.
U5YKRLXGT : If I don't collect the rules, I have to emit one style per element:
U0EUHKVGB : I’ve benchmarked it :wink:
U5YKRLXGT : ```nodeWithClassName =            node (classNameProperty :: properties) ((VirtualDom.node "style" [] [Html.text (String.join "\n" css)]) :: children)```

U0EUHKVGB : It does not need to be one per element.
U5YKRLXGT : That's the level this library emits rules at
U5YKRLXGT : when it renders a component, it emits the rules
U5YKRLXGT : Hence trying to gather them up :_)
U0EUHKVGB : What I am saying is that this library does not follow good Elm best practices
U5YKRLXGT : The only thing it seems to do wrong is use a nasty native function
U0EUHKVGB : Any kind of trying to manpiluate and collect styles will be counter productive, since that will happen _on every re-render_
U5YKRLXGT : Yup
U0EUHKVGB : So, why are you trying to collect the styles?
U0EUHKVGB : Here’s another tact
U5YKRLXGT : Because as I understand it, having lots of &lt;style&gt; tags is bad, but you cant do @keyframe animations using javascript properties
U5YKRLXGT : this namespaces those too
U0EUHKVGB : Having benchmarked it, in Elm, lots of style tags does not have negative performance impacts.
U5YKRLXGT : ok
U0EUHKVGB : New statement: let’s forget all about that library
U0EUHKVGB : Have a look at this example: <https://github.com/mdgriffith/style-elements/blob/3.1.0/examples/Chat.elm>
U0EUHKVGB : And read this README: <http://package.elm-lang.org/packages/mdgriffith/style-elements/latest>
U0EUHKVGB : Does that seem more like something you would like?
U5YKRLXGT : I found the documentation on that library to be a bit obtuse to be honest :slightly_smiling_face: But yeah, it looked promising
U5YKRLXGT : It feels like a lot of the documentation floating about is out of date or ... terse :slightly_smiling_face:
U0EUHKVGB : Well, here’s a little secret
U5YKRLXGT : I'm not complaining! haha
U5YKRLXGT : I'm just trying to explain why I went to all this batshit trouble instead of just using that library
U0EUHKVGB : <@U0JFXEUCT> seems to sit on slack and watch <#C4F9NBLR1|style-elements> like a hawk, and answers everyone’s questions about it there
U0EUHKVGB : Including “How do I get start with style-elements?”
U5YKRLXGT : Ok, that's a good suggestion thanks. :slightly_smiling_face:
U0EUHKVGB : My recommendation would be this: play around with style-elements for a bit. Try elm-css out too, to see how it feels. Once you have a practical understanding of how those libraries work, come back here and let’s chat about it
U0EUHKVGB : I recommend watching this video: <https://www.youtube.com/watch?v=n5faeSW71ko> and the video about style-elements when that gets released.
U23SA861Y : I get the feeling that <@U0JFXEUCT> is watching this right now
U5YKRLXGT : My neck is tingling
U5YKRLXGT : OH GOD HE IS BEHIND ME
U5YKRLXGT : Oh, thank christ - it's just my pet house ghost
U5YKRLXGT : NOT NOW DEAD GHOST
U5YKRLXGT : BAD GHOST
U0EUHKVGB : Hmmm :thinking_face:
U5YKRLXGT : Does the elm virtual dom implementation have any performance shortcuts deep down like react-id / key
U0EUHKVGB : Generally, if you’re asking questions like that before writing any Elm, then you’re asking them at the wrong time entirely
U0EUHKVGB : But yes: `Html.Lazy` and `Html.Keyed`
U5YKRLXGT : Ok, great
U5YKRLXGT : I'm just looking for common ground :slightly_smiling_face:
U5YKRLXGT : Ah, great
U5YKRLXGT : I've written a looooot in react :slightly_smiling_face:
U0CL0AS3V : &gt; I've written a looooot in react
in my experience, this is unfortunately a disadvantage in coming to Elm

U0CL0AS3V : a tiny bit of React experience can be a springboard in that you already are familiar with the Virtual DOM concept
U0CL0AS3V : but that's all they have in common
U0CL0AS3V : and everything after that is more and more knowledge that no longer applies, and is challenging to unlearn :disappointed:
U0CL0AS3V : so as far as looking for common ground goes - I'd say "the idea of a Virtual DOM data structure that describes how you want the page to look" and then absolutely nothing else
U0CL0AS3V : and trying as hard as possible to mentally reset :slightly_smiling_face:
U5YKRLXGT : I don't know, redux isn't that dissimilar to the Elm Architecture right?
U0EUHKVGB : Redux was based on the Elm architecture.
U0CL0AS3V : &gt; I don't know
this is a good mindset to have

&gt; redux isn't that dissimilar to the Elm Architecture right?

I think this mindset is going to make life harder :wink:

U0EUHKVGB : However, it heavily relies on mutation and the lack of type safety to achieve some things
U0EUHKVGB : Such as how reducers get merged, etc.
U0EUHKVGB : And every time you have some localized state, then you are fighting against the principles that Elm tries to stick to.
U0EUHKVGB : In Elm, it’s best to stick to functions whereever possible, and just take a model, an update loop, and a view, and work with that.
U0EUHKVGB : Just like Elm is not ML or Haskell, Redux is not Elm
U5YKRLXGT : Oh, <@U0CL0AS3V> hi you are the guy from the video
U5YKRLXGT : :slightly_smiling_face:
U0CL0AS3V : :wave:
U5YKRLXGT : That is very weird, I am on the other side of the world from you
U0CL0AS3V : hello and welcome!
U32H3RA87 : My brother, who has never done any programming or anything similar, asked me today to help him learn. Obviously going with elm, going to be fun to see if he takes to it at all!
U0CL0AS3V : the Internet is a great thing :smile:
U5YKRLXGT : A great and Terrible thing :slightly_smiling_face:
U0CL0AS3V : depending on how it's used, yes :wink:
U5YKRLXGT : Well, for what it is worth I have been doing a prototype for work and I've implemented it in Typescript React Styled-Components and Mobx and it was quite similar to pulling teeth
U5YKRLXGT : and then I did it in Elm, and the only thing that hasn't been literally perfect is the out of the box CSS answer
U5YKRLXGT : :shrug:
U5YKRLXGT : Oh shit, you don't even have the non-commital emoji. That's how pure you guys are
U5ABF3BH7 : Hi, has anyone implemented select2 type dropdown in Elm (<https://select2.github.io/examples.html>) . I am still struggling with it and would appreciate an example if you have done something similar.
U32H3RA87 : at least twice a day now I say to my colleagues "this would not be an issue if we used elm instead of react"
U5ABF3BH7 : I am supposed to create something similar in Elm and struggling a big
U0EUHKVGB : <@U5ABF3BH7>, does this example help you much? <https://ellie-app.com/3tm2WSV9JTza1/0>
U5ABF3BH7 : It is helpful thanks,  as toggling is part of what I need.
U5ABF3BH7 : Someone must have already implemented a select2 in Elm though.
U5ABF3BH7 : Thanks <@U0EUHKVGB>
U0EUHKVGB : I don’t really know what you mean by select2
U0EUHKVGB : which particular feature do you need?
U0EUHKVGB : there’s this too: <https://sporto.github.io/elm-dropdown/>
U0EUHKVGB : and this: <http://package.elm-lang.org/packages/jschonenberg/elm-dropdown/latest>
U0EUHKVGB : and this: <http://package.elm-lang.org/packages/ericgj/elm-autoinput/1.0.0/Autoinput>
U5ABF3BH7 : <@U0EUHKVGB> Thanks. By select2, I mean an example exactly like in the first example in the link (<https://select2.github.io/examples.html>).  Clicking on the bar gives you a search bar and selections that can be arranged in subcategories,  instead of a regular select dropdown. So there are 3 elements: dropdown, search bar and clicking on the input selects the element in the main input
U5ABF3BH7 : the elm-dropdown gives me the dropdown but not the search ability
U5ABF3BH7 : I don't really get autoinput
U5ABF3BH7 : That may be what I need. Does anyone have an example of auto input?
U5LFUHH19 : Are there any good example for merging two Dicts?  I actually have a List Dict that I want to merge into one giangantor Dict.
U23SA861Y : I believe there is a function for that
U23SA861Y : `Dict.merge`
U23SA861Y : you can also use `Dict.union`
U5LFUHH19 : Sorry, I meant I'm looking at `Dict.merge` and not grokking the type signature, was hoping for example code.
U23SA861Y : depending on how you want to merge the dicts you can do `List.foldl Dict.union Dict.empty yourlist`
U23SA861Y : it gives you a description of what those functions do right in the doc
U23SA861Y : you need to manually specify what happens when a key is in the the left, both, and the right
U3SJEDR96 : <@U5LFUHH19> `Dict.merge` basically takes functions for all cases: an element that only appears in the left dict, one that lets you choose what to do when an element appears in both dicts, and one that lets you handle an element that only appears in the right dict
U23SA861Y : in this case result need not be a dict, so it's more like a fold
U5LFUHH19 : Right, but I'm just not following what `result` means <http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Dict>
U23SA861Y : you get total freedom as to what type it is
U3SJEDR96 : but yeah, if you just want to merge them all into to one, you can do sometihng like `List.foldl (Dict.union) Dict.empty [ dict, otherDict, moreDict ]`
U5LFUHH19 : I would like to go from `Dict String a` to `Dict String (List a)` or something where I have all the values together.
U23SA861Y : right so then you need merge for that
U23SA861Y : ```Dict.merge
    (\key a -&gt; Dict.insert key [a])
    (\key a b -&gt; Dict.insert key [a,b])
   (\key b -&gt; Dict.insert key [b])
  first
  second
  Dict.empty
```

U5LFUHH19 : Why are there two `result`s at the end of `merge`?
U3SJEDR96 : `Dict.merge (\key val dict -&gt; Dict.insert key [ val ]) (\key val otherVal dict -&gt; Dict.insert key [ val otherVal dict ]) (\key val dict -&gt; Dict.insert key [ val ]) leftDict rightDict Dict.empty`
U3SJEDR96 : the first one is your "initial" result, much like you have with foldl and foldr
U3SJEDR96 : the second is your return value
U5LFUHH19 : Oh!
U5LFUHH19 : Makes sense now.
U2LAL86AY : elm reactor doesn't work with native modules??
U2LAL86AY : ```Example.elm:12095 Uncaught ReferenceError: _user$project$Native is not defined
    at Function.func (Example.elm:12095)
    at A2 (Example.elm:92)
    at Example.elm:12210
    at Example.elm:7
    at Example.elm:3187
    at A2 (Example.elm:93)
    at Function.func (Example.elm:11553)
    at A4 (Example.elm:104)
    at Example.elm:11605
    at Example.elm:26
```

U0EUHKVGB : your native code does not match your project name


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
