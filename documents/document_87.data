U3L6TFEJF : but if I do `clojure.tools.namespace.repl/refresh`, it doesn't
U3L6TFEJF : yep, `tool.namespace` clobbers it somehow
U3L6TFEJF : the prevailing wisdom on the internet when having problems with data readers is to call `(#'clojure.core/load-data-readers)`, but then I get: ```dev=&gt;   (#'clojure.core/load-data-readers)
clojure.lang.ExceptionInfo: Conflicting data-reader mapping```

U051SS2EU : if you look at the ex-data on *e that should show you what went wrong, right?
U3L6TFEJF : I'm getting a conflict with my own data reader file :neutral_face:
U051SS2EU : OK - so the data readers are already loaded, you have to reload the code they refer to, right?
U0NCTKEV8 : (which refresh would do if you properly required that code before using the readers)
U3L6TFEJF : still get the error after calling `refresh`
U0NCTKEV8 : right, because somewhere you aren't properly doing the require
U0NCTKEV8 : so find all the places you use the tag, ensure in that namespace you require the namespace where the function the tag maps to is
U3L6TFEJF : ```dev=&gt; (dev/refresh):reloading (... kleinheit.pg.impl ...)
:ok

dev=&gt; #foo [1 2 3 4]
        java.lang.IllegalStateException: Attempting to call unbound fn: #'kleinheit.pg.impl/foo
clojure.lang.LispReader$ReaderException: java.lang.IllegalStateException: Attempting to call unbound fn: #'kleinheit.pg.impl/foo
```

U3L6TFEJF : and it works if I just skipped the `refresh` and do the regular `(require ...)`, so I'm at a loss ¯\_(?)_/¯
U0NCTKEV8 : what kind of repl you are using?
U3L6TFEJF : `lein repl`
U0NCTKEV8 : lein repl can be kind of weird
U3L6TFEJF : ehh… errhmm… how do I launch a REPL without lein? :sweat_smile:
U0NCTKEV8 : that depends, ```java -cp `lein classpath` clojure.main``` often works
U051SS2EU : rlwrap is very handy when doing it that way
U3L6TFEJF : still get the same behavior in that REPL unfortunately :confused:
U0NCTKEV8 : put a println at the top of the kleinheit.pg.impl namespace to see if it is actually getting reloaded
U3L6TFEJF : yessir, it prints
U3L6TFEJF : well, I'm gonna give this a rest for now, appreciate all your help folks
U0NCTKEV8 : ah, I bet refresh breaks var interning, so you end up with two vars with the same name
U3L6TFEJF : ohh, now that sounds like it might be it!
U3L6TFEJF : time to dig into the source…
U051SS2EU : yeah, it destroys namespaces which might also include doing something wacky with vars that other code has captured…


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
