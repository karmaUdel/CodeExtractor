```
<http://package.elm-lang.org/packages/elm-lang/html/2.0.0/Html-Events#on>
Cool thanks. I will keep this in mind. I ended up reducing what I was doing in elm and moved it over to JS
every time i can, i try to keep things in elm :simple_smile:
<@U2LAL86AY> that was my logic but things got pretty out of hand.
Damn you. :slightly_smiling_face:
<@U18UD6T3J> ah, they're just languages :slightly_smiling_face: use the bits that are good, and try to put up with the bits that are bad :slightly_smiling_face:
Hopefully the jobs channel will get chattier over time :slightly_smiling_face:
Hi, I noticed Date will be removed from 0.19, my question is how will we get the date.now after that?
I would suggest reading the commit message for that commit. It's pretty informative.
<https://github.com/elm-lang/core/commit/a892fdf705f83523752c5469384e9880fbdfe3b1>
`elm-community/elm-time` doesnt get the date now
explore alternatives first."
The point being - Elm 0.19 isn't ready for release; don't read into things too much, but do understand they are actively being worked on, and thought about
in particular, there is still `Time.now`, and `elm-time` has a `DateTime.fromTimeStamp : Time -&gt; DateTime` function
<@U18UD6T3J> we use Ember at work . Works out ok. It's written in JS. I understand that you like Elm. There are pros and cons to all technology choices, though. I feel like maybe "golden spoon"ing isn't such a productive thing to do, if you know what I mean :slightly_smiling_face:
Whether I like it or not is irrelevant. That's a personal preference.
<@U18UD6T3J> glad the tool's working out for you, then :slightly_smiling_face:
<@U0HUBVDD2> <@U3SJEDR96>  I agree about not reading into things too much re active changes to core, but just to note `DateTime.fromTimestamp` from `elm-time` is not what you want to use to represent an actual point in time, since `DateTime` is abstracted from timezone.
So, the question is, what do you need the Date for
Hi, what do you honourable people use for pie charts in Elm?
example of why it's not good to use elm-time DateTime this way  -&gt;  <https://ellie-app.com/3TQDS9MWKh5a1/0>
the hour is in UTC
yes, so when you want to show a time in the user’s local time, what would you use
you’d have to pass getTimezoneOffset() through a flag or something
Yeah. `elm-time` is designed to be completely independent of javascript
the issue that right now, converting to a `Date` is not a pure function is not satisfying though
there is a <http://package.elm-lang.org/packages/elm-community/elm-time/1.0.7/Time-ZonedDateTime#fromTimestamp> too, tho..
But yeah, I see your point
yes. and then you need to know the zone
there should be a method to create a `TimeZone` from an offset, though
unfortunately time zones are messy beasts
I think having the user explicitly specify these things is not really a bad thing
indeed. but it makes it a lot more complicated than just taking in what the browser says is local time
I've been using the `Bogdanp/elm-time` package rather than the `core/Date` library, because it provides 1) an easy `date` constructor that builds a Date from a year, month and day, and 2) functions to add to the date, such as `addYears`, `addMonths` and `addDays`. Unfortunately, it does not provide a function to tell you the number of days between two dates, so I wrote my own `daysBetween` function, that just converts both Dates to Times, subtracts, and divides by ms per day.
yes, but at the very least it should be a `Cmd`
That is, I suppose one of the larger issues with the current `Date`, indeed. `Date.fromString` being locale-dependent, that is
<@U5X2ZRFDF> yeah, and for my needs I typically just need the current date, not date-time from the browser, so I usually end up sending `(year, month, day)` in through flags and ports, and use `elm-time`'s Date type
Nice. Yeah, I am rendering a timeline, so I do a lot of date math.
<@U2GTQM83A>   `elm-visualization` has pie charts,  `elm-plot` may or may be planned, not sure.
Fortunately I don't have UTC issues since I'm only working with dates.
I think there's `delta` that would give you `daysBetween` ?  <https://github.com/elm-community/elm-time/blob/1.0.7/src/Time/Date.elm#L246>
still need the date of today though, only `Date` can give me that
Hmm. I had been thinking `delta` would give you years first, then months from what is left over, then days from what is left. But it looks like I misunderstood, and the years, months, and day difference values are independent.
In other words, I had assumed that a `delta` between 5 Jan 2017 and 6 Jan 2018 would give you a result of 1 year, 0 months, 1 day. Which doesn't do me a lot of good, if I don't know how many days are in the year. But reading the source, it looks like it will actually tell you 1 year, 12 months, 366 days. I hadn't even tried it.
<@U5X2ZRFDF>, yeah, that’s a strange api
Still it seems like a lot of calculations it's doing to come up with the number of days. I think converting both to times and subtracting and dividing is more efficient.
Might be accounting for leapseconds and whatnot
correctness &lt;-&gt; efficiency
leap seconds are not in the time though
eh, good point
I have time :disappointed:
hate*
yes, time is complicated
Agreed that correctness is important here, but... 1) Leap seconds don't matter when you're only doing date math. If you convert to a time, you use midnight, then when you convert back to dates, use `round`. 2) The library accounts for leap years but the code says nothing about leap seconds.
no, leap seconds are not part of time, really, the clock is just adjusted to match
They can affect date calculations if you use time as an intermediary. If there is no leap second this year, then midnight of 1 Jan next year is a whole multiple of 86400 seconds later than midnight of 1 Jan this year. But if there's a leap second, then there will be an extra second between them. So if you divide by 86400, you have to round down to the nearest number of days.
no there won’t, unix time does not have leap seconds
Yeah, that's what caught me off-guard, too. It's strictly incremental, +1 every second of passing time
&gt; Unix time (also known as POSIX time or epoch time)[citation needed] is a system for describing instants in time, defined as the number of seconds that have elapsed since 00:00:00 Coordinated Universal Time (UTC), Thursday, 1 January 1970,[1][note 1] minus the number of leap seconds that have taken place since then.
UTC has leap seconds, but the unix time is simply synchronized to the UTC, meaning that when a leap second is introduces, the clock is just off and will be adjusted
<@U5X2ZRFDF>, yes, exactly
so leap seconds are just ignored
Ah I see
But... what about JavaScript? Does it follow Unix time? Or might it have leap seconds, say, on Windows?
it uses the unix epoch
OK. So JS time could be off by several seconds from UTC.
Oh, but it's adjusted to match, as you said
yes
UTC seconds and unix seconds do not match, but the dates _do_ match :slightly_smiling_face:
By "do not match", do you mean, at most given points in time, they don't match? Or do you mean, measuring differences over large periods of time, they don't match?
UTC seconds since 1970 is not the same number as unix seconds since 1970
Right
So, the latter
But _current_ UTC time and _current_ Unix time should match. Unless we're in the middle of a leap second.
yes, if you display the time as a date
date+time
but not if you display it as a second offset
Right... which is what it's actually stored as.
Makes sense.
yes, so you need to know which one is which, fortunately, we do know that
So just don't use Unix time if you're trying to do astronomical calculations
or measure seconds over a leap second addition
the clock will stop for one second, basically
It’s hard to imagine how to incorporate leap seconds, actually, because you want to be able to represent _future_ dates too, and you don’t know in advance if there will be a leap second.
Yep
There have been 27 leap seconds added in the past 45 years!
(Cross-posted from <#C192T0Q1E|beginners>)
Anybody know if its possible to remove the elm embed / instance ?
<@U5AR0LDQA> what do you mean? Do you want to run a headless Elm program?
I’m running `elm` in a safari extension and it appears that the global keyboard keys are being fired from multiple elm instances. So I’d like to on opening the extension initialize elm and then on closing the popup possibly remove the instance.
<@U0LPMPL2U>
hmmm I'm not sure
in the javascript, if you set the `app = undefined`, does the Elm app get garbage collected?
Nope
and no, there currently isn't a (decent) way of stopping and unmounting an elm app
Especially if you don't find, `window.location.href = '/';` to be a decent way of unmounting your javascript.
what you can do, however, is make the `isThePopupOpen` part of your state, so you can do `subscriptions { isItOpen } = if isItOpen then *subscribe things* else * don't* `
I think the hackiest way of "stopping Elm" I've come across is this one <https://github.com/fluxxu/elm-hot-loader/blob/master/hmr.js#L55-L58> (please don't do that)
Hmmm thanks everyone! I think that could solve my solution by checking to make sure its open. :smiley:
I need to add some microdata to the page. I found part of them in `Html.Attributes` module. It has `itemprop` but it has no `itemscope`, or `itemtype`. Is it intentional? How to inject those missing attributes?
You can do this using either `property` or `attribute` - I'm not sure which one you should use for those
so I think `itemScope : String -&gt; Html.Attribute msg` with a definition like `itemScope scope = Html.Attribute.property "itemScope" (Json.Encode.string scope)` should do
and something similar for `itemType`
Hey that worked <@U3SJEDR96>! I only subscribe to the keyboard events if the popup is open. Thanks for the help.
Re: <https://ellie-app.com/3TTcht9V6Nxa1/0> How do I handle a possible null in JSON for what could be a record?  I've tried using `Maybe Project` but can't fix the types.
To explain more, the `project` field, if present, becomes a `Project` -- but what if the field is null?  How can I use `Json.Decode.Pipeline.optional` to handle the optional part?
OK, I got it!
I hit this yesterday, thought about it overnight, boiled down the problem to the bare minimum, studied on it, then finally saw the path through the types.  Whew!
Here is my solution, in case anyone else hits this: <https://ellie-app.com/3TTcht9V6Nxa1/1>
Anyone use emacs and elm-mode?
Hey all, I don't know if it is very applicable, but I made a hidden layer neural net library with backprop training for elm <http://package.elm-lang.org/packages/cakenggt/elm-net/latest>
Is `elm-install` still supported?
