       button [ style [("color", "green")] ] [ text "Send" ] ```
ok i get it
aha looks azesome
elm is not only a joy when you learn it, it's also a joy to see others learn it :slightly_smiling_face:
aha ^^
i didnt realise but its the same typing function as angular 2
with typescript
(The example is a simplified version of the example in <https://github.com/SimplyNaOH/elm-searchable-menu/blob/master/examples/src/Example.elm>) where I added the select element)
What I am trying to do is something like select2 in Elm <https://select2.github.io/examples.html>
My only option might be to talk to Javascript.
We are transitioning from Rails to Elm. I am unsure how to reproduce what we got with  select2 through JQuery Does anyone have advice on how to go about it?
From Rails to Elm? The whole app or just the front end?
just the front end
Gotcha. I think for what you want you're gonna need some custom code, probably a port at some point.
I'm looking over what you have, and, without diving into it entirely (so I could be wrong), it looks like you have a lot of what you want and it may be more of a styling issue at this point.
<@U0J1M0F32> I don't seem to be able to put the 2 together though
I am pretty new with Elm, as you can probably tell. Do you know if  there a way to use a JQuery library through the ports?
You can use JQuery libraries through ports, but I'd advice against it if possible. It gets messy quick.
<@U0J1M0F32> ok. Thanks
hello. I'm new to elm, and was wondering about the "time traveling" debugging. This feature is possible because in the elm runtime there is a single message bus through which all events are serialized?
more because there is a single well defined state
in general it's due to lack of side effects in code. meaning I can simply log cmds and state and replay it backwards and forwards
hi <@U23SA861Y>. cmds are consumed by the elm runtime?
indeed they are
Which it in turn uses to generate a stream of messages for your update function
ah thanks. Stream of messages terminology is relatable to me, coming from js world
and the elm compiler checks that each possible message maps to an update function
mm, there is only a single update function, but it checks that the update function handles all possible messages
ah thanks
Is it considered bad style to create a type with a single constructor wrapping a record? The down side is that you have to pattern match the constructor to get at the record in order to use dot notation. The up side is the strong nominal typing guarantee.
E.g. `type Foo = Foo { x : Int, y : Int }`
I guess Evan also pointed out that wrapping the record can be used to hide the representation from library users. I probably have no need for that in my case. 
