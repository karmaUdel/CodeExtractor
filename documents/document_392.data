U623QK78C : Turns out they can be curried.
U153UK3FA : <@U623QK78C> like all functions in Elm, constructors are curried. You can use the fact that they are curried to easily partially apply arguments to them.
U623QK78C : Thanks, that was exactly the use-case I was thinking of.
U5WD40ZA9 : Could someone please explain why the following doesn't returns true :
Regex.contains (Regex.regex "^([1-9][0-9]*)$") "123"

U5WD40ZA9 : Trying to create a regex pattern that only matches string that only contains numbers
U1RK41R0T : It returns `True` for me
U41NK9BM4 : BTW That won't match 0, i believe - is it indented?
U5WD40ZA9 : <@U41NK9BM4> it's intended
U41NK9BM4 : OK :slightly_smiling_face:
U1RK41R0T : <https://ellie-app.com/3G9qn8d5JRWa1/0>
U41NK9BM4 : ```&gt; Regex.contains (Regex.regex "^([1-9][0-9]*)$") "123"True : Bool```

U41NK9BM4 : From the 0.18 repl :point_up_2:
U1RK41R0T : can somebody explain me in simple words how Fuzzer Shrinkers work and how to write them? I get that their role is to determine the closest value that makes test fail but do you know some more sophisticated examples of their definition? :slightly_smiling_face:
U3SJEDR96 : <@U1RK41R0T> generally, they're built using `elm-shrink`, might want to have a look at the code of that project (it's not overly complicated)
U3SJEDR96 : and generally, they work by defining a "lower" value, given a certain value. So for a list, this would be a shorter list. For an integer, this would be an integer closer to zero. For a `Just x`, this could be the `Just (shrink x)` or `Nothing`
U1RK41R0T : thanks! I didn't hit upon an idea of checking `elm-shrink` package itself :slightly_smiling_face:
U64M3DF1B : hi - being noob to Elm - I have (totally c/p'ed) this
```
module Main exposing (..)
```
and a ports.js saying `Elm.Main.embed(container)` - only it doesn't :cry: - all it does is complain about Elm.Main.embed not being a function

I've searched for ‘embed' on <http://github.com/elm-lang|github.com/elm-lang> - and to my surprise it's not there? Even so, a number of posts says it can be done like that - even <http://elm-lang.org|elm-lang.org> has it front and center in a piece of code? I am going crazy over this!

U41NK9BM4 : Usually that `Elm.Main.embed(...)` is defined in the generated file by `elm-make`.
U41NK9BM4 : So, how do you have compiled the Elm file?
U64M3DF1B : <@U41NK9BM4> that would be the elm.js - 
I did elm make Main.elm --output=elm.js

U41NK9BM4 : Good.
U1RK41R0T : perhaps the problem is a `require` statement that must be translated/bundled into ES5 code runnable on the browser?
U64M3DF1B : :$
U41NK9BM4 : And you added that elm.js to you HTML file, right?
U64M3DF1B : this is the ports.js - all of it
```
‘use strict'
const Elm = require(‘./elm.js')
console.log(Elm);
// get a reference to the div where we will show our UI
let container = document.getElementById(‘container')

// start the elm app in the container
// and keep a reference for communicating with the app
let mandarinClient = Elm.Main.embed(container)
```

U41NK9BM4 : Yes, could be you need a more exotic way to include that JS in our app like vviktor said


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
