U3LUC6SNS : <@U3SJEDR96>, that (keep on going) sounds right.  I will give it more thought.
U3LUC6SNS : Thought on the word parser.
U3SJEDR96 : so basically, I'd say a word cannot be empty, but `words` can have an empty list of words
U3SJEDR96 : i.e. flip the `orMore`'s around
U3SJEDR96 : also, <@U3LUC6SNS> - check that condition - either `not (c == ' ' || c == '\n' || c == '\\')` or `c /= ' ' &amp;&amp; c /= '\n' &amp;&amp; c/= '\\'`, methinks
U0FP80EKB : joyous demorgan's laws :slightly_smiling_face:
U5H8JJP24 : I was wondering if there is any reason why commands send via ports are excluded from the time travel debugger and interaction with the interface of web-components is not. If I am right, the current explanation for excluding ports is that Elm is not aware of the JavaScript that is executed outside the Elm-world. But doesn't this exact reason also apply to web-components?
U3SJEDR96 : I'm not sure I follow? Incoming messages appear in the time-travel debugger, outgoing messages don't
U3SJEDR96 : or rather, outgoing commands
U3SJEDR96 : So by my understanding, it's not that ports are excluded, it's simply that they don't get special treatment and hence, commands being sent to ports don't appear, just like outgoing webrequests or tasks being performed don't appear
U3LUC6SNS : <@U3SJEDR96>, this works with my current tests -- but I will look at your remarks above to see that it REALLY works. ```
word : Parser String
word =
    inContext "word" &lt;|
        succeed identity
            |. spaces
            |= keep oneOrMore (\c -&gt; c /= ' ')


type alias Words_ =
    { value : List String
    }


words : Parser Words_
words =
    inContext "words" &lt;|
        succeed Words_
            |= repeat zeroOrMore word
```

U3SJEDR96 : That looks like it should work, yes :slightly_smiling_face:
U5H8JJP24 : <@U3SJEDR96> okay that makes sense
U3SJEDR96 : so if you have a `port incoming : (String -&gt; msg) -&gt; Sub msg` and had this as part of your `subscriptions = incoming Foo`, doing `app.ports.incoming.send("Go!")` should result in that message appearing in the debugger
U5H8JJP24 : By listening to the talk of Richard I got the impression that they did it on purpose just for commands sent over ports
U3LUC6SNS : <@U3SJEDR96>, indeed your boolean condition is the one to use!
U3SJEDR96 : I actually haven't watched Richard's talk on web-components; might have to do that :slightly_smiling_face:
U2GPAEU1L : <@U3SJEDR96> I'm just using CodeTidbit to make the tutorials, I'll be making a lot more tutorials, this won't be decoder-specific, you can already take a look at what the first few tutorials are like :slightly_smiling_face:
U2GPAEU1L : BTW, I like your demystify-decoders, having interaction is great (and a future goal of CodeTidbit, but because it's language-agnostic, that'd be hard to do right now)
U4H406NET : I would like to confirm my current (very recently arrived at :slightly_smiling_face:) understanding of the elm architecture.  Is it true that the only function that modifies the model is the update function?  And therefore commands always wind up calling update with the Msg value passed to it and (optionally) arguments derived from the code executed by the command?
U0J1M0F32 : So far so good.
U4H406NET : This would seem to be implied but not directly stated by the introduction to elm documentation.
U4H406NET : That would also imply that the only function that needs the Model definition is Main.
U4H406NET : Is it a good structure to move the commands into a different module, or should they be in Main to have easy access to the definition of Msg?
U3SJEDR96 : ooh, codetidbit itself is Elm? cool!
U23SA861Y : <@U3LUC6SNS> parsing latex seems like it may be more suitable to a backend
U0J1M0F32 : <@U4H406NET> I rarely, feel the need to move the commands out to their own module until the application has reached sufficient size.
U4H406NET : I keep failing the YAGNI test
U3LUC6SNS : <@U23SA861Y>, you are no doubt correct, but I am running Elixir on the backend, and it seems that Elm, with its Haskell DNA, has better parser tools.  
My plan is to parse only the non-math parts of latex (like I did with my LaTeX extension to Asciidoctor) and let MathJax handle the rest.  By the non math parts I mean things like `\section{..}`, `\begin{equation} EQ_BODY \end{equation}`, `\begin{theorem} THEOREM_BODY \end{theorem}`.  Things like EQ_BODY are handled by MathJax.

I may be way off-base on this, so I'd be happy to hear more from you.

U23SA861Y : It really depends on what you intend on doing with this, but writing parsers correctly can be a real tricky business.
U23SA861Y : They tend do devolve into these cargo cult regex piles if it isn't correctly structured from the top down.
U3LUC6SNS : <@U23SA861Y> Yes indeed!  But despite my noobiness, I'm game to try.
U2GPAEU1L : <@U3SJEDR96> CodeTidbit is elm? CodeTidbit's web-client is written completely in Elm yes :slightly_smiling_face:
U2GPAEU1L : It's a platform I'm working on for sharing coding knowledge, the tutorials will be language-agnostic, but the platform itself is written in Elm, because let's be honest, Elm is fkn awesome :smile:
U3LUC6SNS : I know very well the `regex pile` syndrome, having written several of them (ugh) myself.  That is one reason why I am working on this parser.  Also a clever set of regexes can never do the job quite right (in my experience).
U4H406NET : <@U3LUC6SNS> I would recommend looking at recursive descent parsers.  They are relatively easy, fast, and lead you away from regex hell.
U23SA861Y : no, the regexes alone can't do it. you need to follow your tokenizer with the AST generator. Regexes don't allow for normal grammars
U23SA861Y : I am not sure what kind of cross language linking that elixir can do but I'm pretty sure there are precanned open source latex parsing libraries.
U23SA861Y : then again if this is more of a hobby/side project then learn away
U3LUC6SNS : <@U4H406NET>, I'll do that.  I have written these by hand before,  but they are hard to maintain, no?
U23SA861Y : parser combinator libraries are pretty nice as well
U23SA861Y : I don't know if elm has one
U4H406NET : They are not normally declarative.  Which is the easiest maintenance structure.  How stable is your language (LaTex? been around a while) and your application?  But yes, think about that.
U2SR9DL7Q : Has anyone here ever used Elm for a desktop application, with something like electron?
U3LUC6SNS : <@U23SA861Y> I'll take a look and see what is out there. One thing I found when I looked at this a while back is that there is no context free grammar for TeX: <https://tex.stackexchange.com/questions/4201/is-there-a-bnf-grammar-of-the-tex-language> .
That is one reason that I am delegating the biggest part of the work of typesetting LaTeX to MathJax.  That is, everything that sits inside of a $ .. $  or $$ .. $$ construct is handled by the MathJax.js library.

U23SA861Y : That is liable to make it much harder, but not unexpected
U23SA861Y : it allows free form text without escaping so....
U3LUC6SNS : <@U4H406NET> LaTeX is very stable, but note the remarks above about not having a CFG.
U3SJEDR96 : Several, and elm-tools/parser is a great one ;)
U3LUC6SNS : <@U23SA861Y> Yes, there is a parser combinator library, e.g., <http://package.elm-lang.org/packages/Bogdanp/elm-combine/latest>  and elm-tools/parser.
I am going to see how far I get with elm-tools/parser for now.

U3LUC6SNS : <@U3SJEDR96>, how do the two parsers compare? I've started out with elm-tools/parser, so will probably stay with that unless I hit a wall.  I really like the way you can build  informative error messages into parsers constructed with elm-tools. (PS.  Thanks for all the help today and   before.  It is invaluable)
U3HQVHERX : How do you send 2 values from js to elm in a subscription? whats the port type signature?
U3HQVHERX : `(( Int, Bool ) -&gt; Msg) -&gt; Sub Msg` ?
U604S603Y : I'm struggling again with something: this time it's the UrlParser module.I have the following line in matchers:
`, map Registrierung (s "registrierung" &lt;?&gt; stringParam "fromPage")`
The url `<http://localhost:3000/#registrierung>` matches, but not `<http://localhost:3000/#registrierung?fromPage=abc>`
I'm kinda at a loss why this is not working...

U604S603Y : well it looks like the `search` part of the `Location` is empty
U23SA861Y : <@U3HQVHERX> I believe you need to send it back as a record
U0CQ254F5 : <@U3HQVHERX> <https://guide.elm-lang.org/interop/javascript.html> (Customs and Border Protection section) might be useful
U23SA861Y : ahh yes
U0CQ254F5 : `Tuples – correspond to fixed-length, mixed-type JS arrays` for example
U23SA861Y : a tuple would not be two params but an array
U604S603Y : okay, my problem is a known problem according to <https://groups.google.com/forum/#!topic/elm-discuss/yYYNzUao9aw> so I'll use the solutions presented there
U3SJEDR96 : Yeah, it's annoying and the docs are misleading - `?foo=bar#/abc` would work 
U0JFFPRHP : in the latest version you can do that with `--` comments (it will start a new section within the list or record)
U3SJEDR96 : They're very similar, but I like the naming in elm-tools/parser better. Also, the operators. I do miss a `Bounded Int Int`. `parser-combinators` uses regex and backtracking, this one uses native and delayed commits. 
U2U94G0QG : <@U2SR9DL7Q> I've built a few fun little projects using Elm+Webpack+Electron. Are you just looking to get started or did you have some specific Q?
U2SR9DL7Q : <@U2U94G0QG> i just wanted to know if anyone had tried it, and if they were successful. I've done desktop apps before using python but since moving into web dev with elm, I thought would make sense to just be consistent about my UI design across platforms. I'd heard some folk poo-poo-ing electron for app size and performance, so I wanted to hear from someone who actually used it.
U2U94G0QG : Well, my projects with Elm/Electron aren't production scale/quality and I never made a prod build of any of them - but we just released a React/Redux/Electron app and I feel pretty good about it
U2SR9DL7Q : sounds good
U2U94G0QG : I found this to be useful <https://github.com/johnomarkid/elm-electron-webpack>
U2U94G0QG : for getting started
U2U94G0QG : It's not a boilerplate
U2SR9DL7Q : this is awesome
U2SR9DL7Q : <@U2U94G0QG> thanks!
U2U94G0QG : yvw
U5ABF3BH7 : Hi!  I am writing a Json.Encode function to create an object in the back end, in my database.  I have a Kase. ```type alias kase =  { name : String, organization : Maybe Organization.Model, ...} ```. The field organization is a Maybe.  If there is no organization entered, I don't want that field passed in my Json object.  as it will give me some validation errors. How can I do that?  I can only think of doing List.append. This is how the code looks like if an organization exists
U5ABF3BH7 : ```Json.object   [ ("name" , Json.string model.name)
   , ( "organization_attributes", Json.string model.organization)
]```

U5ABF3BH7 : any advice
U5ABF3BH7 : ?
U5ABF3BH7 : but if there is not organization, I only want
U5ABF3BH7 : ```Json.object   [ ("name" , Json.string model.name)]```

U5ABF3BH7 : (this is a simplified version)
U3DQT3ZGC : Hi All! Is there a way to detect if an image is loaded in Elm like this? ```const tempImage = new Image(500, 500);tempImage.addEventListener('load', doSomething);

tempImage.src = url;
```

U0K92QFST : <@U3DQT3ZGC> Elm allows you to define custom event handlers for any HTML tag: <http://package.elm-lang.org/packages/evancz/elm-html/4.0.0/Html-Events#on>
U48AEBJQ3 : <@U5ABF3BH7> There are a few ways of doing it. One might be:```
Json.object (List.filterMap identity [Just ("name", Json.String model.name), Maybe.map (\org -&gt; ("organization_attributes", Json.String org))])
```



in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
