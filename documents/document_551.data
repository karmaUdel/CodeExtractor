U23SA861Y : setting a single value via a map is a bit clunky
U6D3ERLA1 : ha tru
U5ABF3BH7 : I meant to write ```[disabled not (Dict.get Informant model.uniqueRoles == Nothing || Dict.get Informant model.uniqueRoles == person)]
U6D3ERLA1 : Assuming however I wanted to operate on the entire grid, I'm guessing it is bad practice to write functions with so many arguments
U6D3ERLA1 : as the inner function has
U6D3ERLA1 : I guess if we were operating on the whole grid I could strip a couple args off (for finding the indexes...)
U23SA861Y : so typically your map would just take the value and you may have and indexed map of the form `(Int,Int) -&gt; value -&gt; newValue`
U5ABF3BH7 : sorry for the long explanation, I am trying to give the context and it ends up being a bit long
U23SA861Y : it might be that the role of the person belongs in where the person is placed in a higher level datastructure
U5ABF3BH7 : <@U23SA861Y> can you explain more what you mean?
U23SA861Y : ```{
informant: Maybe Person
,nextOfKin : List Person
,etc
}
```

U23SA861Y : rather then type be a property of person
U5ABF3BH7 : <@U23SA861Y> I see what you mean.
U5ABF3BH7 : Thanks
U6D3ERLA1 : ```putGrid p v grid =
    case Array.get p.y grid of
        Nothing -&gt;
            grid

        Just row -&gt;
            Array.set p.y (Array.set p.x v row) grid
```

U6D3ERLA1 : this feels sane to me
U6D3ERLA1 : Point -&gt; String -&gt; Grid
U23SA861Y : you can get rid of the case and use pipe with a Maybe.map and Maybe.withDefault
U6D3ERLA1 : :thumbsup:
U6D3ERLA1 : awesome
U6EAT2Z37 : I think something like this is my preference:
```
    updateIfIndexesMatch : Int -&gt; (a -&gt; a) -&gt; Int -&gt; a -&gt; a
    updateIfIndexesMatch index f testIndex value =
      if 
        index == testIndex
      then
        f value
      else
        value
        
    updateArrayAt : Int -&gt; (a -&gt; b) -&gt; Array a -&gt; Array b
    updateArrayAt index f array =
      Array.indexedMap (updateIfIndexesMatch index f) array

    putGrid position newValue grid =
      let
        updateColumn column = updateArrayAt position.x (\_ -&gt; newValue)
        updateRow row = updateArrayAt position.y updateColumn
        updateGrid = Array.map updateRow
      in
        updateGrid grid
```

U2PTZFKFX : hello, can anyone give me a good tutorial on using ELM with REST? specially, fetching and posting contents, as well as authentication
U6EAT2Z37 : <@U2PTZFKFX> I did a tiny bit of googling and found this <https://github.com/andrewsuzuki/elm-todo-rest-api> did you see that already?
U6EAT2Z37 : <@U2PTZFKFX> it probably won't help you with authentication, but that's probably a separate issue and you can treat them individually.


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
