```
Cool. Thanks all.
Just watch out for 0.
You'll need to special case that in any case.
Not in my version
Uh, okay. As long as you don't mind negative infinity values floating around your runtime....
`String.length &lt;&lt; toString` works with 0
...or you just special case it to 1.
but doesn't work for infinity
the `logBase 10` approach works for infinity but returns `-Infinity` for 0
Oh, I see what y'all are saying.
Yes, you don't have to special case `0` in the `String.length &lt;&lt; toString` version.  Sorry, I thought when <@U3L8MM10T> said "Not in my version", he meant, "Not in the codebase where I will be implementing this function". I've been misreading things.
Ignore my comments as attempts to correct errors that people weren't making. :stuck_out_tongue:
Actually, my version is correct -- all you have to do is turn `8` sideways. :slightly_smiling_face:
The number of digits in 1000 * 1000 is not infinity.
There's a very finite number of digits there, thankyouverymuch. :smile:
