U0ALQHJRF : <@U0BKWMG5B> hahah im looking for something that has reader conditionals, `(defmacro broken [] #?(:clj "clojure" :cljs "clojurescript"))` resolves to "clojure" in JVM ClojureScript
U0ALQHJRF : ideally I would like "clojure" in clj and "clojurescript" in cljs/self-hosted
U0ALQHJRF : <@U0BKWMG5B> im just trying to wrap my head around the correct pattern for what I am looking for
U0BKWMG5B : <@U0ALQHJRF> There's a way to do that that involves looking at a var, but I forget which one.
U060FKQPN : <@U0ALQHJRF> see <https://github.com/cgrand/macrovich>
U0ALQHJRF : <@U060FKQPN> <@U0BKWMG5B> yeah I looked at macrovich/case but I figured there was a proper way to do it without `&amp;env` checking
U0GN0S72R : I've been using clojure for 19 years and I just now figured out that you can use `(partition-all 2 1 coll)` to walk a collection with awareness of whether you're at the end or not.
U060FKQPN : huh
U060FKQPN : :upside_down_face:
U060FKQPN : yep, that's a funny trick
U0509NKGK : <@U0GN0S72R> neat!
```
Give me some Clojure:
&gt; (partition-all 2 1 (range 5))
((0 1) (1 2) (2 3) (3 4) (4))
&gt; (partition-all 2 1 (range 6))
((0 1) (1 2) (2 3) (3 4) (4 5) (5))
```

U06F82LES : <@U0GN0S72R> nice! that's actually a pretty common use case
U0GN0S72R : suggested usage: `(doseq [[x more?] (partition-all 2 1 coll)] ...)`
U0567Q30W : <@U04V1HS2L> Cursive allows you to control this, _Settings-&gt;Editor-&gt;Code Style-&gt;Clojure-&gt;General-&gt;One space list indent_
U0567Q30W : Recent versions of CIDER will also allow you to configure Emacs to do the opposite if you prefer that, I'm not sure what the setting is though.
U3JURM9B6 : is there a way to get the emacs repl to display reagent/hiccup/react/dom/svg elements ? so I want to write sexps that return hiccup, then have emacs, instead of displaying the raw clojure data, to render it and display it
U3JURM9B6 : if I had this, it'd give me most of ipython in eamcs
U1C03090C : So I'm thinking about writing a clojure desktop app. Does <https://github.com/halgari/fn-fx> seem relatively stable and usable?
U3JURM9B6 : <https://ring-clojure.github.io/ring/ring.adapter.jetty.html>
U3JURM9B6 : why is there no websocket option there?
U3JURM9B6 : how do I specify a websocket (which, iirc, jetty9 supports)
U3QUAHZJ6 : can anyone recommend me an async http client based on core.async?
U0E0XL064 : config: nomad, aero, environ, cprop, ... who uses which library and why? (it's always nice to have some kind of experience reports before deciding)
U0E0XL064 : <@U3QUAHZJ6> why should it be based on core async?
U04V70XH6 : <@U0E0XL064> We wrote our own. We haven't gotten around to open sourcing it yet tho'. It's partly inspired by `outpace/config` but does some specific stuff we needed, and it's Component-based. This is a good article comparing some of the config libraries: <http://realworldclojure.com/application-configuration/>
U04V70XH6 : Hmm, actually now I re-read that article, I suspect Sonian's `carica` is more likely the inspiration for what we ended up with.
U06C63VL4 : Not entirely sure. Define 'arbitrary'. But on the face of it, I would think the answer is 'yes'. However, like all such things, it is not miraculous - it does not provide totally open ended automated UI generation...
U0E0XL064 : <@U04V70XH6> right, thx
U051KLSJF : <@U0E0XL064> we use aero, I like it's philosophy of centralising as much config as possible, and just separating out sensitive config
U1C03090C : Does clojure have any sort of plugin loading library? I'd like to create an application which loads plugins, but I haven't seen anything around.
U5YHX0TQV : <@U1C03090C> <https://yogthos.net/posts/2015-01-15-A-Plugin-System-in-Clojure.html>
U0D33A4JF : <@U0E0XL064> we use <https://github.com/typesafehub/config> with a tiny clojure wrapper
U050SC7SV : <@U0E0XL064> aero here too, it's just edn + some data readers. nothing too fancy, but quite powerfull. And you can extend it if you need it to do something it can't. It's quite lightweight.
U3JURM9B6 : ```{:keys [in out] :or {in chan out chan}}
```

I am familiar with {:keys [...]} . What does the :or mean?

U060FKQPN : if value is not present, use default
U0QNQ3P3L : <@U3JURM9B6> those are alternate values if not found
U060FKQPN : note that it checks using `contains?` not nil/false
U3JURM9B6 : ah, it's 
[in (if (contains? args :in) (:in args) chan))]

U060FKQPN : semantically yes
U3JURM9B6 : great; thanks!
U1C03090C : Thanks!
U0E0XL064 : <@U051KLSJF> <@U050SC7SV> ok... I've been using cprop before. I might try aero for a change.<@U0D33A4JF> any reason why you don't use one of the clojure config libs?

U0D33A4JF : no, I just like that config format


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
