U601ELFEG : I seem to have made the Elm go into an infinite loop by introducing a helper function
U601ELFEG : anyone will to lend a second pair of eyes?
U601ELFEG : (It's about 30 lines of example - post here? or a github gist?)
U5AR0LDQA : <@U17PWHU4D> `fillOpacity if model.isActive then "1" else "0.5"`
U601ELFEG : (I know, it says Haskell, but there is no Elm format for Slack snippets...)
U601ELFEG : So if my Html sends back a Msg of  NoHover --- it works... If it sends back NoHoverCrashes --- it hangs
U601ELFEG : and yet they look the same to me
U0EUHKVGB : You are doing nameshadowing.
U601ELFEG : er?
U0EUHKVGB : Don't call that update inside update update.
U0EUHKVGB : ```update : Msg -&gt; Model -&gt; Model
update msg model =
  let
    update fp fs =
      { model | patterns = fp model.patterns, samples = fs model.samples }
  in
```

U601ELFEG : OH -
U601ELFEG : Why does it compile then?
U5AR0LDQA : Change the name
U601ELFEG : is this a known bug in Elm?
U0EUHKVGB : Because it correctly figures out what update you are using, but generates the wrong code.
U0EUHKVGB : Ye.s
U0EUHKVGB : But please don't do that anyway: it makes your code very hard to read
U5AR0LDQA : :point_up:
U601ELFEG : No, sure, I wouldn't do that by default - and didn't notice
U601ELFEG : and will change it - just I was factoring out that operation (it is used in several other Msg values that I didn't list - ) and didn't realize the name conflict - I was stuck thinking it was somehow my polymorphic use of `clearHoveredSlot`
U601ELFEG : yay - no more hangs - thanks all!
U17PWHU4D : hossman333: thanks <@U5AR0LDQA> , is there a way to set this inside a let instead?  I realize this is still the js mindset, but:
```
let 
  if model.isActive &amp;&amp; somethingElse then
    activeVal = "1"
  else 
  activeVal = "0.5"
```

struggling to see how you would dynamically set a value inside let.

U5AR0LDQA : Yeah so you would do something like this.
```
let
   isActive = if model.isActive &amp;&amp; somethingElse then
    "1"
   else 
    "0.5"
in
```

U5AR0LDQA : `isActive` becomes the variable
U5AR0LDQA : So then you can use it in `in` <@U17PWHU4D>
U17PWHU4D : ooh!  nice.  thanks <@U5AR0LDQA> trying that out now!
U5AR0LDQA : You're welcome! :smiley: <@U17PWHU4D> 
U62P4HLCA : I'm banging my head trying to decode a nested json {"error":[],"result":{"DASH":{"aclass":"currency","altname":"DASH","decimals":10,"display_decimals":5}
U4F64AKQV : <@U62P4HLCA> You probably want to use something like `<http://Json.Decode.at|Json.Decode.at>` (<http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Json-Decode#at>)
U4F64AKQV : <https://noredink.github.io/json-to-elm/> might also be helpful
U62P4HLCA : ah thanks... I'll take a look


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
