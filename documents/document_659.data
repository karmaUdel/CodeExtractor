```
Thank you
I have a project which essentially is a python app with currently npyscreen ui running on a raspberry pi. The idea is that a user can search for games using the app on the pi. Wonderful, works well. The issue is that I'm aiming it for RetroPie, where the majority of it's users only have a controller connected, so no keyboard to enter details. How would I solve this? I was thinking of maybe creating an onscreen keyboard, or perhaps have up and down arrows to go down letters of the alphabet and left and right to move the cursor, but then how do you move to the next input box, or button? Anyone have any ideas?
how many button are there on a controller ?
Well say someone has the bare bones, a NES USB controller, you are looking at 4 buttons and D
This is the best I've seen. Navigating through almost 100 keys using left/right is a pain.
True, but the issue there is that it counts on analog. Many users will have USB retro pads like NES and SNES (myself included) which cannot easily move diagonal let alone hold it there. And the NES USB controller has a total of 4 buttons, with only 2 really free to play with, so that makes this perhaps too difficult
Can you do long press? 
I should imagine so yes
<@U2HJUKKS5> you could offer two interfaces: one with the controller that is a bit slower for input (maybe also detect NES vs SNES for number of buttons to help us SNES controller users) and another that allows for just using a keyboard as well. i tend to keep a spare logitech wireless keyboard connected to my retropie
also THANK YOU for adding something that is MUCH NEEDED in emulation station
<@U2HJUKKS5> :taco:
<@U1BP42MRS> do you think you need the limited liability aspect?  what kind of other ventures are you thinking?
I'm also organizing a conference, so I think that is really where the LLC starts to make sense
<@U1NSCAY6R> you sound like you have the same setup as me, wireless logitech keyboard and snes usb controller. I think that's probably the way I'm going to do it. Have it determine whether to use keyboard or on screen and then create an onscreen keyboard if it's a controller.
I have an HTPC with a logitech keyboard/touchpad that I use in addition to a XB One control, but I would guess this is the exception rather than the norm. And, it's not retropie, so I like being able to use a browser and other things.
Ah, yeah, I could see that then.
Question: How do you create a view with python &amp; django
You have return as a parameter.
<https://docs.djangoproject.com/en/1.11/topics/http/views/>
Should it now be a function
Django has great documentation. The one I sent you is about creating views. Normally you have `request` as a parameter for a view function. This will contain information pertinent to that particular request.
Returning an HttpResponse is correct though.
Requesting the view.py file. I remember now. Thanks Man
Hello guys
I might need some help
I am trying to use virtualenv to install requirements.txt which required a C++ Microsoft Visual Studio Build tools.
I've installed this and configured PATH, and now when when requirements.txt runs cl.exe it gets this error:
fatal error C1083: Cannot open include file: 'io.h': No such file or directory
If I run it using the VS Command Shell, then i get the same error but with a different file
unistd.h
I'm not sure what I should do to fix this, or if I can skip having these entirely? Some posts have implied that these files aren't even necessary
Why override the defaults?  You can run `PYTEST_DEBUG=1 python -m pytest` to see the debug
What do you mean override the defaults?
Running that command gave me a long ugly stack trace
The `pytest.ini` is just the defaults
Yes
Well
but just drop your test functions to be outside the class
No dice
I reproduced it locally and it finds them fine.
Collected 0 items
Your class doesn't match the `python_classes` config key
That's what I was trying to override with the ini
Ahhh
I see
You also need `self` as an arg to class methods (which is how those will be treated)
Ahh, adding self worked
:taco: <@U1BP42MRS>
:pacman:
Which of course is there in the actual test classes I've got written, forgot to include them in the sample
Does anyone know the problem I'm dealing with?
It's been keeping me from making progress
<@U57JJD5S8> we have a channel dedicated to windows (<#C5XHHMXHB|os_windows>). It's small, but growing. A large portion of the community isn't on windows (or those that are are a bit quieter) - so we are trying to gather that knowledge there.
Can you list the contents of the `requirements.txt`?
Yes
and i added that channel
I was wondering if maybe I should just install a Ubuntu terminal and use that as my environment? I think I've seen someone do that before but I'm not sure. I would rather avoid that and get it working on my Windows though
Did you catch which dependency this error pops up under? My guess would be `cython`
yes
I believe it is Cython
well
it's running cl.exe
I'm not sure what for
actually it might be 'bitfield'
<@U57JJD5S8> <https://github.com/cython/cython/wiki/InstallingOnWindows>
looks like bitfield?
It looks like you may be using anaconda? If so, I think they have pre-compiled everything for you
I use unix for a reason...
yes, i was wondering, could anaconda be the issue here???
do i need to install a separate python, and use a virtualenv for that
I am not sure, but I think instead of `pip install -r requirements.txt` -&gt; maybe use the anaconda packages ¯\_(?)_/¯
mmmm
yea, you'll need to see if anaconda has it in their package manager.
<https://gist.github.com/luiscape/19d2d73a8c7b59411a2fb73a697f5ed4>
this might help :point_up:
Coming at this about 6 hours late, but any C/C++ process that is trying to #include &lt;io.h&gt; or &lt;unistd.h&gt; isn't configured properly for Windows. Arguably that's a flaw with the packages setup process but it also means there is usually a prebuilt lib somewhere online.
<@U5LNXQHN3> doesn't MinGW have `unistd.h`?
<@U5NMSURAQ> Probably, but it's not 2002 any more
what do you mean? :confused:
MinGW is what people used on Windows when Visual C++ cost money and there was no other decent alternative
VC can be used without tearing hair out?
Yes, unless you prefer gcc, in which case no
well I'm glad that's finally so
hello mike
<@U5LNXQHN3> How do I fix this?
there is a setup.py that contains #include io.h
but i could not remove that line
Install the package via a different method. Its website might have some clues
Yeah, I suggested using anaconda since it should have the precompiled one available
yeah i am trying that but am running into different issue
it says it cannot find bitfield on the proper channels
but i found this one here
<https://anaconda.org/pypi/bitfield>
conda install -c pypi bitfield
and its not working
is it easier to set up a virtual linux env at this point? lol ugh
Without the exact errors it's hard to say
  - bitfield
sry didnt clarify
kill windows, go to linux? ¯\_(?)_/¯
basically, even though windows has made good strides in becoming more development friendly outside of C# and Java, it still has a long ways to go
so, for anything outside basic python, I'd just go to linux
`(Mac or Linux) &gt; windows`
with the exception of c# and visual studio
I've usually been able to develop just fine on Windows; it's the people who work only on Mac and Linux who tend not to put the extra work in to make their stuff work on Windows. And I guess it's up to them, since nobody's paying them
or try the linux subsystem
might be worth it if you can't fully migrate
<@U57JJD5S8> I'm intrigued as to why you can find a package online, and which claims to be platform-independent, but it appears to not show up when you use `conda install`. That's probably worth taking up with someone more familiar with using conda
yep
that error pissed me off lol
If you don't _need_ to use anaconda then find the regular package and see if there's a Windows version
You said "there is a setup.py that contains #include io.h" but that's not true of the bitfield package, so it's not clear what your actual problem is
2.59 -- show 2.60
<https://docs.python.org/2/library/functions.html#round>
On documents there is a note about that: Note The behavior of round() for floats can be surprising: for example, round(2.675, 2) gives 2.67 instead of the expected 2.68. This is not a bug: it's a result of the fact that most decimal fractions can't be represented exactly as a float. See Floating Point Arithmetic: Issues and Limitations for more information.
yup.  what's the question?
look this function: qtd_lata = round(120 / (18 * 3), 2)
returns: 2.0
But if i don't use round function
are you using python 2 or 3?
Related: Division changed in python: <https://www.python.org/dev/peps/pep-0238/>
You can just make any of those numbers a float
Python 2.7.9
