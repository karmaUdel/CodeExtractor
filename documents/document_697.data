```
Instead of waiting to return after the loop
but the problem of my code is not this
i couldnt get output with the code i pasted
oh i got 24 but its the wrong answer.
it should be 6
after i changed the thing i return to this:
then it worked and got 6
i dont understand why
<@U5U4MSHC1>
because in Python variables are scoped for the function in this case. So `i` keeps getting re-assigned as it loops over the `range`
If you want to use the `i` without an intermediate variable, either return the `i` directly (as I demonstrated), or use the `break` statement
<@U1BP42MRS>  what is the code look like when you return the i directly
Basically drop in my code snippet!
Those should be equivalent
i appreciate it but they dont work
i got this:
TabError: inconsistent use of tabs and spaces in indentation
<@U6944D5GU> Did you mix spaces and tabs?
I assume she copied my snippet
Oh sorry, just caught that
Looks like what you posed used tabs <@U6944D5GU>  - the python standard is to use 4 spaces instead
So my stuff is configured different, if you re-do the indentation to match that visually, you will be good
yea i copied and pasted
oh
if you're using ipython, just do `%paste`
Is it the standard? :open_mouth: I've been using tabs from day 1.
<https://www.python.org/dev/peps/pep-0008/#tabs-or-spaces>
PEP8 my friend :smile:
i am using pycharm <@U0LSCQQNR>
and me too ive been using tabs and nothing wrong yet
Oh, shoot! My bad. Although I'm curious why spaces are the standard. I think it seems so much easier to press tab once for every indent than space four times for every indent.
omg i still get this: IndentationError: unindent does not match any outer indentation level
my 4 spaces is the same as 1 tab
<@U6944D5GU> You're trying to convert <@U1BP42MRS>'s snippet from spaces to tabs?
ah yes
well idk i tried both spaces and tabs
<@U5CGPBF0U> - you should make your editor insert 4 spaces when the tab key is hit. You don't literally type `&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;...`
:thinking_face:
1s <@U6944D5GU> - let me convert it
<@U1BP42MRS> Oh... I didn't even know that was possible as I've only ever used tabs. Good point. :joy:
Oh sorry, you were converting it? Whoops... :cold_sweat:
<@U5CGPBF0U> :taco:
tabs vs. spaces. I am a spaces person, but I can see why tabs would be better.
<@U1BP42MRS> Haha, thanks! :fork_and_knife:
queue clip from silicon valley!
<https://www.youtube.com/watch?v=SsoOG6ZeyUI>
I'm definitely going to read through this PEP 8 style guide. It'll take awhile but I think it'd be a good idea. Thanks for the link!
79 characters might be the only think that should'nt be followed
yes, but this is serious business! S.V. was lampooning these hair-splitty topics in programming. But to me tabs just bork up my whole work flow.
this one gets the wrong answer <@U1BP42MRS>
well both of them get wrong answer as in 1
and it should be 6
:thinking_face:
<@U6944D5GU> can you repost the problem statement? I scrolled up looking for it, and I was unable to fnd it
Technically, any int mod 1 is 0
So it's kind of right
You probably want `range(2, ...)`
You should start at 2
Because of that
...I saw that edit, Matt :wink:
which edit?
<@U1BP42MRS> Wow! In that clip, unless they're writing Python the girl is obviously wrong from a totally measurable and scientific point of view that is not at all biased by my extreme preference for tabs.
I don't see any ` (edited)`!?
<@U60KNBMPX>
Oh nevermind, you just beat me, again
haha <@U5CGPBF0U> - the compiler takes care of them in any language pretty much
<@U6944D5GU> - They are asking for the actual "problem" that code is meant to solve, is there accompanying text?
oh is to get the HCF — highest common factor
HCF = Highest Common Factor?
yes
<@U1BP42MRS> Sure, but code that written with spaces...it's just...so unnatural. I mean, spaces are wrong because reasons! :joy: It's funny how I can get so worked up over something like that...
:smile:
That's one pro about Golang, they have the `go fmt` tool, that forces tabs. The con is that it's tabs :wink:
what happens in x=y on input?
num1 = num2 ?
n.m. I am looking at 20 windows at the same time here
:astonished:
forgive me if I am wrong, but if you are looking for highest shouldn't you set your loop down the integers, rather than loop up?
Oh, maybe that is what I missed in the original intention - I thought it was the LCF
yes, they ask for HCF, not LCF
this is what I always told my students: read the question carefully - at least half of wrong answers are because the question was not properly parsed
6 is indeed the highest no?
Sorry <@U6944D5GU> - my bad
Yes, <@U60KNBMPX> is right - it's best to walk DOWN instead of up this one
<@U6944D5GU> : no idea! :smile: your code should give you the right answer :smile:
yea the standard answer i saw is:
it indeed gets the right answer for num1 and num2's HCF which is 6
I think that this loop will work, but it might be suboptimal for large numbers.
but that is a topic for discussion
because you have no way of softcoding a break point in the if-then clause. Whereas if you start high you can jump out as soon as the clause is fulfilled
may i ask how did you determine when to loop up or down
it just "made sense"
can't explain how
