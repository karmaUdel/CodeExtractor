U5GJ5FEAU : i do something like `Task.map2 (\posts friends -&gt; updateModel posts friends) Data.getPosts Data.getFriends` not sure if they are parallel or not. never thought of that
U5GJ5FEAU : <@U217F5W11> ^
U3SJEDR96 : they're not
U217F5W11 : but you may be hitting an intrinsic semantic question (leading to needing to deal with it in update) - is there ever a time when you want to get the user but not the posts? if they are always together, is there a reason not to just handle it in the update function?
or, maybe that’s the question: what is it that leads you to not want to deal with it in the update function?

U0H3A9XLN : Yeah, they are not :slightly_smiling_face:
U5GJ5FEAU : dang! good to know :smile:
U5GJ5FEAU : i always thought the Tasks were just sent off one after the other without waiting for the results
U0H3A9XLN : Is there a way to pattern match on list field inside record which is inside union type tag? Something like:
```
Just { list = x :: xs } -&gt;
```

U0U6ML22H : I don't think you can pattern match on Records, no
U4872964V : depending on your other matches, you can match on something like `case Maybe.map .list x of x :: xs -&gt; ` though
U4872964V : I sometimes do things like this to reduce duplication in `case`:```
case (someFun x, someOtherFun x) of
```

U0U6ML22H : it's a nice, handy trick, indeed
U4872964V : but it would be great with more expressive case patterns, although i see the implementation problems with detecting  missing cases etc.
U2LAL86AY : <https://gist.github.com/druzn3k/d1ce5eda51a5398e0e93> - here is a cheat sheet about destructuring.
U0LFFASSV : am I the only one who has issue with installing elm 0.18.0 from npm on Linux (CI)?
U5U2SN24D : Is there a specific error message you're getting?
U0LFFASSV : yeah it's `incorrect header check`
U0LFFASSV : on `Downloading Elm binaries from <https://dl.bintray.com/elmlang/elm-platform/0.18.0/linux-x64.tar.gz>`
U1CE9DL9H : here we go again
U3SJEDR96 : retry. It's bintray having hiccups
U1CE9DL9H : for context: bintray has been spotty for some weeks, some solution is being worked on
U0LFFASSV : I'm tying to `wget` it on laptop now - seems to be working
U0LFFASSV : btw CI is circleci
U0LFFASSV : will try rebuild for 5th time :stuck_out_tongue:
U3SJEDR96 : Might want to wrap the `npm install` in a retry script for now :disappointed:
U3SJEDR96 : something like <https://github.com/NoRedInk/elm-ops-tooling/blob/master/with_retry.rb>
U0LFFASSV : thx for tip. unfortunately it works this time
U177VRFJP : can anyone help me understand the difference between `Html.Lazy` and `Html.Keyed` and when to use them?
U0EUHKVGB : lazy is to reduce render time. Keyed is to make rendering more consistent.
U0EUHKVGB : Use lazy when your views are slow to render. This will be rarely.
U0EUHKVGB : Use keyed when you have lists of items, e.g in an `select`, to help Elm’s virtual-dom render things in the right way.
U0EUHKVGB : This will also be rarely, but it depends a lot on your view.
U177VRFJP : so if for example I have a list of 100 items that can be filtered based on an input field, will keyed help speed up rendering the filtered nodes?
U17R1GD96 : How to insert HTML into Elm? I have to do that because some chunks of HTML code comes from the database. I tried to follow this article <https://www.reddit.com/r/elm/comments/49w48m/inserting_html_from_api/> but Elm complains it cannot find VirtualDom package…
U0EUHKVGB : Yes. But benchmark, always benchmark
U177VRFJP : great, thanks noah
U17R1GD96 : found another solution at <https://groups.google.com/forum/#!topic/elm-discuss/icpKL-AgRlg>, checking…
U0EUHKVGB : <@U17R1GD96> you have to install virtualdom
U0EUHKVGB : `elm-package install elm-lang/virtualdom`
U3SJEDR96 : <https://ellie-app.com/3x9wfvL5DKVa1/0> and then use it something like this
U0FP80EKB : <@U17R1GD96> I use `Markdown.toHtml` to insert html
U17R1GD96 : <@U0EUHKVGB> I don’t need it. This works: ```module DangerousHtml exposing (innerHtml)
import Html exposing (Html, span)
import Html.Attributes exposing (property)
import Json.Encode exposing (string)


innerHtml : String -&gt; Html msg
innerHtml dangerousHtml =
    span [ property "innerHTML" &lt;| string dangerousHtml ] []```

U0FP80EKB : I ran into problems with `innerHTML`, as it didn’t seem Elm tracked changes to it. While using `Markdown.toHtml` creates actual virtual dom nodes.
U0FP80EKB : <http://package.elm-lang.org/packages/evancz/elm-markdown/3.0.2/Markdown>
U17R1GD96 : But I don’t have the source in the MarkDown format. It’s HTML.
U0FP80EKB : HTML is markdown
U17R1GD96 : hehe, right :slightly_smiling_face:
U0FP80EKB : :slightly_smiling_face:
U17R1GD96 : more or less
U0FP80EKB : I use this in several places in my app (across two products), and it works great
U0FP80EKB : And since it creates vdom nodes, elm can use it effectively for diffing and rendering


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
