```
:slightly_smiling_face: I'm glad
<@U4TJSS0V7> I wrote a service at a job with similar issues, it basically kept a fresh list of users at all times and tests could "check one out", later the service would clean them up
Anyone here who has used `ttk.progressbar`
If I never have to use tkinter in my life again then it's a good day
This is why electron is so popular :(
Why did no one tell me of these other beautiful things
Attempting to run this damn progress bar is gonna be the end of me
honestly I'm just gonna say screw it and just click a button and you have to wait
What's the app do?
tkinter is the mistake here :smile:
Just generates a report
<@U0LSCQQNR> I would love to optimize the that process, but we're working with a huge legacy app and optimizing the app itself is not really a feasible option without reliable (and efficient) test automation :disappointed:
I'd it's internal, bad ux for a little is okay
I'm gonna just create another root and make a popup that comes up when the requests to the server complete
It is
it looks horrible
<@U1BP42MRS> that sounds like what i'm looking for. how did you go about that?
<@U4TJSS0V7> makes sense, gotta work with what you have.
exactly
It was just a webapp, it would have a pool size of users it had to maintain, each time a test asked for a user I'd mark them as checked out and add them to a cleanup queue. That had a default time to live, but a test could ask for longer.
Then the test could edit the user if they wanted, add roles, etc
Our tests ran constantly and tons of them, so this was a Go application due to the load
but not create user?
What?
ah ok
It's not ideal to depend on an external service for tests, this was for the staging env
agreed. this is also for our staging env
i don't envision the service being used outside of the tests, but i do need it to be able to be run independently of running the tests themselves
I ended up getting an offer to move to Dev after that 
oh yeah?
nice
we're a mostly php shop, but atm all our test automation is in python, for whatever reason (not that i'm complaining. i like python better :smile:)
I've considered going back to qa to be able to do Python full time again
I've seen lots of "QA Architect" jobs around
<@U1BP42MRS> looks like `pyinstaller` doesn't work with Py3.6
Sadly true
do you have any other recommendation?
Are you using any 3.6 features?
That's what I was gonna figure out
I will say no
because I probably am not
is is good with `3.5.x`?
Yeah, I have used it with 3.5 for about a year
It works!! For some reason os.remove(item) is giving me error saying it's used by another process but I just have to delete the files. Thank you so much!
<@U4BMZ90T0> why not `pyenv`?
I believe what he is doing is trying to create a single executable to distrubute
oh.. right &gt;.&lt;
ignore me...
But do use `pyenv` to handle multiple versions!
Brew has caused me a number of issues when it updates
Unfortunately my time is up here next Friday so after that it's their issue :joy:
New job? Or was this an internship?
Internship
Back to school and possibly another internship
They may offer full time here but it's super Enterprise environment and not competitive pay
Plus another year of school I'd rather keep my options open
Definitely understood
It's all consulting stuff
Im one of the two CompE students here out of 35 interns and not even half of them are CompSci
Lots of CIS
you've had issues with brew and pyenv <@U1BP42MRS> ?
<@U1BP42MRS> should I just make up another `virtualenv` and put 3.5.whayeber on it then install reqs?
was it postgres? i had an issue and fixed it by upgrading psycopg2.
Just `brew` managing my python install. For example when 3.6.2 came out and I updated, it killed a bunch of virtualenvs that were looking at the 3.6.1 executable
Sounds reasonable <@U4BMZ90T0>
oh ok
yea i use pyenv now for that. the psycopg2 thing is the only issue i've had so far.
This work comp came with so many env variables in the path I can't add anymore :joy:
good old windows
<@U1BP42MRS> have you noticed brew python being pretty slow overall?
<#C5XHHMXHB|os_windows>
seems it installs with some not very good flags that cause issues
where does virtualenv install to?
I haven't - but I write better code than you :stuck_out_tongue:
ooooo
<@U4BMZ90T0> on windows?
Well I mean is it inside python dir?
JK of course <@U0LSCQQNR> - I should benchmark it and then compile from source and see
:smile:
nice shot there, sir :stuck_out_tongue:
<https://www.reddit.com/r/Python/comments/6i8dn7/python_276_via_brew_on_osx_twice_as_slow_as_the/>
I picture Jason doing this :point_up::skin-tone-4:
Interesting
Oh man this is fun to figure this out
what would be the best bet in picking the database? PostgreSQL or MongoDB
I figured that there is a relation between the dumped data from multiple .txts which would immediately push me to use Psql but I wonder if Mongo can perform fairly if I am able to handle the co-relation at the app level with decent db-search
I'd do postgres
data is structured
and if you're going to do spatial queries, postgis is the best option
<@U1BP42MRS> got it all set up, gonna try pyinstaller
no issues with 3.5.3
:toot:
That emoji must be 20 years old
Should I bundle the `config.yaml` or just place in the same dir or it does the same thing anyways
if you want it editable, no
okay that's what I thought
yay no errors after 2 seconds this time
uh oh, the `.exe`just exits
yay
You may need a special flag for a UI based app
gotcha
bunch of missing modules also
Seems like the main error are two of my module missing due to `invalid module`
Okay so inspecting the archive of my imported modules it does seem that I do not have the two modules
Im quite lost here. There's not much documentation on how to force a module import
And I can't figure out why the two modules are invalid
is this pyinstaller-related?
Yes
I get a bunch of `Missing Module` warning s, but only two `Invalid Module` warnings for two of my modules imported in `main.py` and I'm not sure why they're invalid
I've renamed them
oh, I've never seen an invalid module thing
but for missing modules there's a `hidden_imports` directive
pyinstaller isn't very good at detecting what modules are used by a program :confused:
I've even got it as a hidden import
Yeah I have no clue what the invalid module is
There is nothing about it
I can't find anything online
What's the module in question?
Two modules, one uses `openpyxl` and populates an excel workbook with some data, another is just a single popup window for a notification that the file has finished being generated
oh damn, openpyxl
Is that why?
yeah, I spent a couple of hours fighting it
NOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
wait, does it compile OK and then the program doesn't work, or it doesn't compile altogether?
don't lose hope just yet :slightly_smiling_face:
Like the raw code? It all works, but of course without those two modules, or at least the openpyxl module it wont
Im gonna comment them out
only two lines in my project
and see what happens
building it now in pyinstaller
won't even run at all actually, just opens and closes
run it from cmd.exe to see the error
okay
`Error loading Python DLL: C:\...\main\python35.dll`
welllllll that's something else entirely :x
oh wait was it this
Cause I saw something about this earlier
`_MEIPASS2 is NULL`
I remember there was some entity called `_MEIPASS2` but I didn't mess with it at all
<https://pastebin.com/Xihf4DdV>
My build.spec for pyinstaller
why is this needed at all? :confused:
I believe it's for `--onefile` flag
let me link to my python dir in `pathex`...
It's trying to pull python 3.5 dll from my build directory.
thank you <@U0NRYQNAZ>
<@U5NMSURAQ> should the python35.dll be in that build directory?
why is my specfile being overwritten every single time
there should be a single exe file
I'm just trying to point the .exe to find the python35.dll
But everything I am doing isn't working
Well, may have found my problem
Does anyone have any clue why Pyinstaller chooses to overwrite my specfile every time I save it then run again
the specfile is generated for you to edit and use instead of passing parameters to pyinstaller
It creates a spec unless you run it from a spec.
i.e. you create a spec and then do `pyinstaller main.spec`
Instead of specifying the .py file specify .spec
gotcha
Trying to add `python35.dll` to the dir
no luck
`binaries=[('C:\\Users\\kybowman\\AppData\\Local\\Programs\\Python\\Python35\\python35.dll', 'python35.dll')],`
Just another one of those days
Why would you need to do that? I didn't have to do anything along those lines to distribute Windows compiled scripts.
I have absolutely no clue
Not sure what else needs to go in there to not get missing Python35.dll
The dll is literally in there with the `.exe` and it's attempting to pull it from somewhere else
Found a google group post regarding `vcredist`
Are you compiling on Windows?
Yeah
I'm still wondering about the MEI thing because what happens is when I run it it says the DLL can't be found in c:/.../temp/pyinstaller/_MEIxxxx/python35.dll
Are you expecting it will be there?
No I am not at all
I have no clue where it gets that path from
pyinstaller with the onefile flag should really be including that with it.
That path is where your files are extracted to.
This is what I've used to access included files, such as textfsm templates.
Where should this go?
Top of main file?
Or hook
No, you use that in your open lines.
