U1BP42MRS : Pretty much
U1BP42MRS : I use pytest for everything
U2HPMQS6R : hi, all...i've got a strange problem with sqlalchemy, the full description is here <https://stackoverflow.com/questions/44615074/sqlalchemy-increasing-memory-on-simple-query>
U2HPMQS6R : but I don't understand if this problem is due to sqlalchemy or something related to python memory management
U4LH25XBR : Hey guys does anyone know what `-rin` does in the context of `grep -rin "email" */log`
U13L8J76J : <@U4LH25XBR> `man grep`
U13L8J76J : Then press `h` to learn how to navigate and search
U5K0EPY5Q : <@U4LH25XBR> -r = recursive / -i = ignore case / -n = print line number
U4LH25XBR : <@U5K0EPY5Q> Thank you so much for that :slightly_smiling_face:
U5K0EPY5Q : you are welcome
U5XBRLY3Z : Hey guys I'm a bit stuck with converting a string date to a datetime object getting this error:
```  time data '2017-06-20T15:07:12+01:00' does not match format '%Y-%m-%dT%H:%M:%S%z' ```

CODE:

``` current_action_date = datetime.strptime(request.data['date'], "%Y-%m-%dT%H:%M:%S%z" ) ```

request.data['date'] printed gives ``` 2017-06-20T15:07:12+01:00 ```

Useing Django RestFramework on 3.6

Any ideas what I am doing wrong?

Thanks for any help you can provide ! I'm really baffled by this one !

U1BP42MRS : Do you control the client code for this? Looks like the timestamp offset is the wrong format for `%z`. `+01:00` should be `+0100` iirc for that one 
U5XBRLY3Z : Yeah its from an android app. Ahhh thanks a million will figure out a way to change that !
U1NSCAY6R : that's completely valid ISO 8601 formatting
U29163YQH : <https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior>
U29163YQH : you might want to check here if there is something for the `:`
U5VGKQ2SY : For datetime reference:<https://docs.python.org/2/library/datetime.html>

U1NSCAY6R : `	UTC offset in the form +HHMM or -HHMM (empty string if the object is naive).`
U1NSCAY6R : way to not conform to ISO standards :confused:
U1BP42MRS : Yeah Joe is right, the colon should be valid, per the spec :(
U1NSCAY6R : <@U5VGKQ2SY> <@U5XBRLY3Z> is using 3.6, not python 2 :slightly_smiling_face:
U1NSCAY6R : well looks like an opportunity to be a python contributor haha
U5XBRLY3Z : yeah i have no idea this isn't working !
U5XBRLY3Z : it should do it just going to filter the string on client side before marshaling it
U0L8Y8ZEW : <@U1NSCAY6R> you'll have to hack in both cases unless you want to break a *lot* of code
U1NSCAY6R : yeah i havent even looked at the source but im sure its not pretty
U1NSCAY6R : also i aint got no time for that i get married in 2 months from today
U29163YQH : or add another letter for the `:`
U29163YQH : like `%z` and `%Z`
U5VGKQ2SY : <@U1NSCAY6R> congrats
U2BS4M1RV : Why is pycharm treating the name config as if it was a link?
U1BP42MRS : <@U2BS4M1RV> can you provide more context?
U2BS4M1RV : ```help(config)Traceback (most recent call last):
  File "&lt;input&gt;", line 1, in &lt;module&gt;
NameError: name 'config' is not defined```

Opened the console, type config, and it becomes a link.

U2BS4M1RV : I do have a module in a directory named config, but other modules dont' get that treatment.
U1BP42MRS : If you click the link, does it take you there? Seems like that may be what they are _trying_ to do, and just miss the mark for others?
U2BS4M1RV : Clicking on the link doesn't do anything.
U1BP42MRS : weird ¯\_(?)_/¯
U5NMSURAQ : huh, funny
U2BS4M1RV : In the above, dreamer is the other library, so, idk. Interesting anyway. There is also a config.ini file in the directory.
U1BP42MRS : That is weird, mine doesn't for anything I see in my project
U5WNSLTT4 : Hi to all! Can you help with my code, please? I cant upload images, thnks!"""def client_registration(request):
    form = ClientForm(data=<http://request.POST|request.POST> or None)
    userform = UserForm(data=<http://request.POST|request.POST> or None)
    all_fintessclubs = Fitnessclub.objects.filter(is_active=True)
    competitions = Competition.objects.filter(is_active=True)

    if <http://request.POST|request.POST> and form.is_valid() and userform.is_valid():
        userpost = userform.save()
        post = form.save(commit=False)
        upload_images = ['client_avatar' or 'image_portrait' or 'image_profile' or 'image_back']
        for image in upload_images:
            try:
                post.image = request.FILES['%s'] % image
            except KeyError:
                pass
        post.user = userpost
        post.save()"""

U5NMSURAQ : Sooo, what happens when you DO upload something?


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
