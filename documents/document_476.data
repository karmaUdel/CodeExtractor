U66RFDZ8F : Thanks for the help 
U4872964V : it's interesting that "change" is the event for file inputs, not "input"
U4872964V : but it sort of makes sense
U66RFDZ8F : But still inconsistent
U4872964V : well, change is emitted from the other field also, when they lose focus for instance, so maybe not so inconsistent
U66RFDZ8F :  But technically, the file input received some input right? 
U4872964V : yes, it sure did
U4872964V : but the file input doesn't have the usual kind of value attribute that the others have
U4872964V : it contains the file name, but generally you are after the file contents as well
U66RFDZ8F : That makes sense also 
U31FGNWCT : Hello everyone! I'm trying to make an infix function like this:```
import Html exposing (text)

(--&gt;) : Float -&gt; Float -&gt; String 
(--&gt;) num1 num2 =
   toString num2 - num1
     |&gt; (++) "+"

main =
  text &lt;| 2.0 --&gt; 5.0
```
But I'm gettin' this:
```
Detected errors in 1 module.


-- SYNTAX PROBLEM --------------------------------------------------------------

I need whitespace, but got stuck on what looks like a new declaration. You are
either missing some stuff in the declaration above or just need to add some
spaces here:

5| (--&gt;) num1 num2 =
   ^
I am looking for one of the following things:

    whitespace
```
What's wrong with it?

U3SJEDR96 : `--` is probably reserved as starting a comment
U4872964V : yes, - starts a comment
U3SJEDR96 : (also you need braces around `num2 - num1` but that's a different matter)
U31FGNWCT : Ah. As always you're right. Thank you!
U31FGNWCT : Yeah. I removed braces right before posting it here, because I was trying to figure it out. Thanks!
U31FGNWCT : Probably, reserved-word-cases deserve their own general compiler message, though
U66RFDZ8F : Do you mind wrapping the self invoking function in parentheses? I missed the ending `() ` which confused me for a while. 
I'm referring to the `globalReader` assignment 

U31FGNWCT : Because it neither misses anything nor needs a whitespace before
U4872964V : well, it actually starts a comment there
U3SJEDR96 : I'm not sure if I agree. The error you get is pretty bad, but `--` starts a comment everywhere except within a string-literal. Since you can put comments anywhere and they're basically considered whitespace... I don't know if that's really worth the effort
U4872964V : especially since you normally shouldn't define infix operators
U31FGNWCT : Hm. Indeed it should start a comment. In which case it's syntax highlighter problem
U3SJEDR96 : Oh, right. Good point. I can't actually edit that ellie anymore, though, that's from a month or 2 ago, but I'll keep it in mind next time I link it, thanks!
U31FGNWCT : It's awesome, why shouldn't I? In scala it's considered to be a good practice.
U4872964V : in some cases they are great, but normally you'd just make a function. operators have a global namespace (bug in Elm?) and they are not self-explanatory the way function names are
U4872964V : also, there is the issue with precedence
U4872964V : and elm-format does not know how to handle them
U31FGNWCT : Do you mean <https://github.com/elm-lang/core/issues/638> ?
U4872964V : yes, things like that. Elm is dropping more and more operators (! and =&gt;). It makes sense to keep the traditional mathematical operators though
U31FGNWCT : That's sad. Thank you for the information!
U66RFDZ8F : Sad? No
U66RFDZ8F : Actually very good 
U66RFDZ8F : It's easier to understand what's going on 
U66RFDZ8F : Giving that searching for infixes on Google is damn hard 
U66RFDZ8F : Fancy search solves that but still... 
U4872964V : People have different preferences here, but Elm (Evan) is quite opinionated :slightly_smiling_face:
U66RFDZ8F : And not in a bad way I feel 
U31FGNWCT : BDFL, as they say in python community
U4872964V : But feel free to use them in your code though, just beware of the drawbacks.
U31FGNWCT : I understand. If there is a risk of deprecation, I don't think It's a good idea to use them in a production codebase, in my case at least.
U4872964V : well, upgrading them will be automatic in most cases though
U4872964V : just one more thing to do when moving to the next version
U31FGNWCT : never did an authomatic upgrade, but sounds frightening from js perspective
U4872964V : indeed, but from an Elm perspective it's not :slightly_smiling_face:
U31FGNWCT : I guess as always it's a delight in elm
U31FGNWCT : yeah
U31FGNWCT : Thank you!
U31FGNWCT : Have a nice day.
U68471J6P : Is it possible to have inline custom types in record definitions or do i have to define the custom type before using it in the record?
U3SJEDR96 : you mean in a type alias that describes a record? You need to define the type before you can use it in an alias :slightly_smiling_face:
U68471J6P : That's what I thought :+1:
U3SJEDR96 : an alias is nothing more than "I have this shape and I want to refer to it by a shorter name". In the case of records, you also get a free constructor function for that shape.
U68471J6P : Thank you for the help :slightly_smiling_face:
U30J8RTKJ : Hi, I have some nested data structure. I'm traversing this structure and I'm building view. My question is how to add unique id to each created html element?
U153UK3FA : <@U30J8RTKJ> what would you be you using the unique id for?
U30J8RTKJ : <@U153UK3FA> styling
U4872964V : so how would you know what id to style?
U30J8RTKJ : well, it looks like this approach doesn't make sense in elm ..., i have to think this through ...
U4872964V : what do you actually want to do?
U30J8RTKJ : I've just realized that when I've asked question
U30J8RTKJ : I have some nested json which describes board game, in the view function I'm traversing this structure, I have just relized that I have to convert this json to some record and just modify this record to update the view ....
U30J8RTKJ : and I have to use this record in the view function
U4872964V : yes
U494Y62N7 : what is the difference between `number` and `int` and how can i cast one to the other?
U494Y62N7 : and is there anywhere in documentation that has this listed?
U4872964V : `number` is a pseudo-type which could be both `Int` and `Float`
U4872964V : you can't have an actual value of type `number` you can only have `Int` or `Float`
U3SJEDR96 : except a literal number (`1 : number`)
U494Y62N7 : yes
U494Y62N7 : that's what's happening to me
U494Y62N7 : i have defaults that i create
U494Y62N7 : and the compiler thinks they're numbers instead of ints
U3SJEDR96 : You generally want to use `Int` rather than `number`, if you're dealing with integers
U3SJEDR96 : and `Float` when dealing floats
U4872964V : <@U494Y62N7> add a type signature
U3SJEDR96 : Can you show the code and the error?
U494Y62N7 : sure
U4872964V : Oh, `Cmd Int`
U3SJEDR96 : Okay, so that's actually a completely different error - you can't just "make" a `Cmd` like that
U494Y62N7 : ah
U494Y62N7 : any hints on how i should go about making the command?
U494Y62N7 : i see this `!` operator everywhere, i just don't know how to properly use it
U3SJEDR96 : most likely, you actually don't want to do that - rather, you want to take the logic that is executed in response to that command, and execute _that logic_
U4872964V : you don't need a Cmd, just call the function to generate the colors directly in your `init`
U4872964V : or, if it's a random generator, put that Cmd there
U494Y62N7 : ok
U1NME8MS8 : Hi!
U1NME8MS8 : How would you store colors in a library? rgb(1, 2, 3) or triples/quadruples etc.?
U4872964V : there is a `Color` type in Elm if that is sufficient
U4872964V : but if there weren't I'd probably make a triple/quadruple or a corresponding single constructor union type
U4872964V : or a record
U3SJEDR96 : It depends on what you need them for and what you plan to do with them, really
U1NME8MS8 : <@U3SJEDR96> personally I think the usecase would be css or SVG
U3SJEDR96 : There are quite a few libraries that deal with that already, though. <http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Color> in core, <http://package.elm-lang.org/packages/eskimoblood/elm-color-extra/5.0.0/Color-Convert> for blending, transforming, converting, manipulating, <http://package.elm-lang.org/packages/mdgriffith/elm-color-mixing/latest> for mixing and whatnot, ...
U67HJ10TX : Hi, i'm tinkering with Elm and I wrote this simple opinion poll, just wondering if the "if..else..." in the Update function is idiomatic Elm```
module Main exposing (..)

import Html exposing (Html, div, fieldset, input, label, text)
import Html.Attributes exposing (name, style, type_)
import Html.Events exposing (onClick)


-- MODEL


type alias Model =
    { question : String
    , choiceOne : Int
    , choiceTwo : Int
    }


type Party
    = Jubilee
    | NASA
    | Wareva


type Msg
    = NoOp
    | Vote Party


initModel : Model
initModel =
    { question = ""
    , choiceOne = 0
    , choiceTwo = 0
    }



-- UPDATE


update : Msg -&gt; Model -&gt; Model
update msg model =
    case msg of
        NoOp -&gt;
            model

        Vote party -&gt;
            let
                partyName =
                    toString party
            in
                if partyName == "Jubilee" then
                    { model | choiceOne = model.choiceOne + 1 }
                else if partyName == "NASA" then
                    { model | choiceTwo = model.choiceTwo + 1 }
                else
                    model



-- VIEW


view : Model -&gt; Html Msg
view model =
    div []
        [ fieldset []
            [ radio "Jubilee" (Vote Jubilee)
            , radio "NASA" (Vote NASA)
            , radio "Wareva!!" (Vote Wareva)
            ]
        ]


radio : String -&gt; msg -&gt; Html msg
radio value msg =
    label
        [ style [ ( "padding", "20px" ) ] ]
        [ input [ type_ "radio", name "font-size", onClick msg ] []
        , text value
        ]


main =
    Html.beginnerProgram { model = initModel, view = view, update = update }
```

U1NME8MS8 : <@U3SJEDR96> I try to provide a package which integrates the colorbrewer colors
U153UK3FA : <@U67HJ10TX> you should use a `case..of` block for that
U1NME8MS8 : <@U3SJEDR96> I went with examples like ```set23 : List (Int, Int, Int)set23 = [(102, 194, 165), (252, 141, 98), (141, 160, 203)]``` now

U4872964V : <@U67HJ10TX> `if then else` or `case` are both fine here.
U4872964V : oh i missed that part, how about just `case` matching on the actual `Party` type?
U4872964V : that's the idiomatic Elm in this case, for sure
U663M2MB7 : Is there a way to make elm-format not ruining my comments? It treats every comment as standard ones from the elm architecture. I want my comments to sit on top of the functions I write, not with two new lines in between them.
U153UK3FA : <@U663M2MB7> the philosophy to elm-format is that elm-format formats your code how it wants and you get used to reading code formatted as elm-format formats it.
U663M2MB7 : I get that, but having comments three lines above the actual function? Surely I cannot be the only one who feels that is pretty awkward?


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
