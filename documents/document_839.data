U1UFZTD4J : `len(set(tup_1) &amp; set(tup_2)) &gt; 0`
U1BP42MRS : Yep, that looks like where i was trying to get
U5NMSURAQ : downside: no short circuiting
U1UFZTD4J : true.
U1BP42MRS : probably fine if your dataset is always little
U1BP42MRS : <@U5NMSURAQ> Sorry, sarcasm doesn't always translate to text
U5NMSURAQ : `takewhile(lambda x: x not in b, a)` :stuck_out_tongue:
U5NMSURAQ : no loop
U5JQ700C8 : Hello
U5JQ700C8 : ```
U5JQ700C8 : ```import jsonimport urllib
from pprint import pprint
from urllib import request, parse

import pytest


class TestApp(object):
    TEST_URL = '<http://0.0.0.0:5001/>'

    def test_create_user(self):

        values = {
            "data": {
                "email": "<mailto:cicciopizzo20@gmail.com|cicciopizzo20@gmail.com>",
                "password": "test",
                "first_name": "ciccio",
                "last_name": "pizzo",
                "role": "1",
                "address": {
                    "country": "Italy",
                    "address_line": "Test Address, 1998, WXDJI Neverland",
                    "coordinates": {
                        "lat": "41.0914808",
                        "long": "16.8672337"
                    }
                }
            }

        }

        headers = {
            "Content-Type": "application/json"
        }
        data = urllib.parse.urlencode(values)
        data = data.encode("ascii")
        url = self.TEST_URL + 'api/user'
        req = urllib.request.Request(url, data, headers)

        with urllib.request.urlopen(req) as response:
            the_page = response.read()

        assert the_page.status == "success"
```

U5JQ700C8 : Sorry to disturb you... I am doing TDD for the first time and I have an error that I cannot solve
U5JQ700C8 : I did not find many textbooks covering the topic even though it's a must have nowadays...
U5JQ700C8 : This was made using some common sense rather than textbooks...
U5JQ700C8 : It's the base case scenario... db set up correctly with the needed data for booting the app, etc.
U5NMSURAQ : &gt; I did not find many textbooks covering the topic
U5NMSURAQ : that's the issue anyway?
U5JQ700C8 : The issue is that I get request.py:1320: URLError
U5JQ700C8 : <@U5NMSURAQ> , I am using flask anyways
U5ZSB9UDP : Is there a way to specify a categorical type or a type that's a set of constant values with `typing`?
U5CRANMFV : if I have a June 2017, then I can take a single month.It can't understand.

U5ZSB9UDP : say, a string that is expected to be either `'production'` or `'dev'`, or a int that's only valid for `range(0, 100)`
U5H2D6DNC : use an enum?
U5JQ700C8 : It looks like it-s working
U3JGK19NV : I'm running a virtual environment and keep getting this `error: ModuleNotFoundError: No module named 'requests'` when trying to run my script
U60KNBMPX : have you tried google searching for "requests module" <@U3JGK19NV> ?
U3JGK19NV : Yes, I know what the requests module is, lol.
U3JGK19NV : Anyway, when I type pip3 list it shows up `requests (2.18.1)`
U60KNBMPX : are you doing that while activated in the virtualenv?
U3JGK19NV : yup!
U3JGK19NV : it's really weird haha
U1BP42MRS : <@U3JGK19NV> can you try `which python3` and make sure that's the one from that virtualenv? I have had a sourced virtualenv before where somehow the path was screwed up and was using the system python still
U3JGK19NV : seems to be the one from that environment
U3JGK19NV : I created a new file with a single `import requests` line and am still getting the same error, so i'm pretty sure my environment is messed up. I will delete it and try again though
U486CN4VD : do you have other python3's in your PATH somewhere
U3JGK19NV : How can I check? I do notice there's a 3.51 and 3.6 now
U486CN4VD : There's probably a clever command to do it all in one go, but `echo $PATH`will show you your path and you can poke around a few folders to see.
U1BP42MRS : `which python3` will show which one is resolved in your PATH
U3JGK19NV : it's showing python 3.5.1
U3JGK19NV : which is weird because when i go into the folders it's showing python27 files
U3JGK19NV : hmm
U3JGK19NV : i think im fixing it
U3JGK19NV : `virtualenv --python=/usr/local/bin/python3 ultra_monitor`
U3JGK19NV : i guess it assumed I wanted python2
U5ZLCF2FJ : maybe check which directories are in a search path, maybe it will help to solve a mystery:
```
print( sys.path )
```

U3JGK19NV : Do that outside of my environment?
U1BP42MRS : Yeah, if you installed `virtualenv` with `python2` (or `pip` from py2) - it will use that interpreter as the default if you don't give the `--python/-p` flag
U3JGK19NV : hmm, i gave it the python3 flag and it's still giving the same error
U1BP42MRS : Silly question, I am sure, but did you `pip install -r requirements.txt` since re-creating the env?
U3JGK19NV : yup!
U3JGK19NV : pip3
U1BP42MRS : Figured so :slightly_smiling_face:
U3JGK19NV : But it seems to be using my system libraries. Is that weird?
U486CN4VD : It looks like we have similar environments <@U3JGK19NV>. I make my venvs like so `mkvirtualenv --python="/Library/Frameworks/Python.framework/Versions/3.5/bin/python3" new virtualenv`


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
