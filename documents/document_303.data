        ]```
`&lt;/&gt;` is an infix operator defined in the urlparser package, that says "the parser that precedes me, followed by a `/`, followed by the parser that follows")
<@U3SJEDR96> Thanks!
because you'll often want to match on something that's separated by slashes, like `/blog/user/article/id` which could be `s "blog" &lt;/&gt; string &lt;/&gt; s "article" &lt;/&gt; int`
Hello, I am trying to re-organize all my files to follow Richard Fedman SPA appapp<https://github.com/rtfeldman/elm-spa-example> to separate view from data that needs to be encoded (or decoded via json).  I would appreciate some advice on how I should organize the following model. In the backend, the Person Model has a physician (through physician id, a care taker via caretaker_id, etc... which are RolodexEntries.  Is the best practice to create. Data.Person.Physician, Data.Person.CareTaker....etc... or Data.Person.RolodexEntry?
It's OK to put multiple types in a file
once you have a lot of functions that work on one type, it can make sense to extract that type and the related functions to a new file
<@U0LPMPL2U>, would you use one file Data.Person.RolodexEntry instead of several like Data.Person.Physician,  Data.Person.CareTaker, etc... ? And if later there are too many differences, you would create new files? Is that how you would do it?
I usually start with a single Types.elm file :slightly_smiling_face:
What's the best way to work with elm-css during development? As somebody who's coming from react / css-modules / webpack hot reloading it's not quite obvious what the best approach is. Ideally I would like to avoid to manually compile the css and reload the app..
I tend to start with multiple types in the same file. As time goes on, the functions in the file tend to clump around each of the types. At some point, I'll extract the type and related functions.
<@U0LPMPL2U> thanks
<@U5KCFP7GT> Then you'll probably feel right at home with one of the webpack-based starters
<https://github.com/tcoopman/elm-css-webpack-loader>?
Not sure if the video is out yet but it's worth watching Evan's keynote from ElmConf Europe. It's all about how to structure apps and when to break up files :slightly_smiling_face:
:point_up: Was about to link to that
<https://www.youtube.com/watch?v=2ihTgEYiKpI>
hfjallemark: Yep, that looks like something I'd try. Maybe base it on this <https://github.com/elm-community/elm-webpack-starter>
Evan's talk ^^^
Awesome. Will try it out, thanks!
<@U0FP80EKB> and <@U0LPMPL2U> Thanks!
hello all. quick question. i've been considering adding multiple "pages" to  small web application hosted on github. Currently using the *elm-mdl* library for formatting. Should I just used their built in tabs to mimic page to page movement, or use *elm-navigation* to capture and handle proper routing?
You could use both at the same time
Then the user has the ability to use back and forward of the browser
Selecting a tab via clicking could raise a change in the url which will be handled via routing
cool. thats the goal almost. i'm using to practice responsive design. so on mobile, the user should be able to move around using drawer buttons. but when its on a large screen, the drawer should be replaced by tabs or something similar.
i'm designing for the small screen first through then moving my way outwards.
been struggling since yesterday on importing an array from json with mixed types.  Its always consistent.  `[ int, int, string, int ]`.
Im' using pipeline decoder.  and works for everything else, however, I have to specify a type alias. and have no idea how to describe this.
any advice would be much appreciated.
Did you try oneOf ?
was trying to learn oneOf, but i think the issues is more that i need to map.  i got this far, with the help of someone yesterday.
