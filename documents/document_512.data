```
since the company id only exists in some cases
Alternatively, have some top-level "dispatching" case statement that destructures all routes and then passes the unwrapped string into other functions
<@U5ABF3BH7>  are you sure those lines shouldn't be `updatedLocation = Types.updateLocation ...`  (i.e. you are calling the `updateLocation` function in `Types` correct?)
<@U5ZKYURNY> no because `Html.program` expects your `update` function to return commands of the same type as the messages it takes as input
`update : msg -&gt; model -&gt; ( model, Platform.Cmd.Cmd msg )`
But as it's a functional language you should everything should return some value. It's not a good code to use Debug.crash to handle the never happen case.
@ericgi, it is Types.UpdateLocation, it is a msg in my Types model (it is the upper model)
@joeql I think. I could use the Never type. but after look into that. I didn't understand it well.  I think it's use with some Html Never. Html that doesn't has a message
<@U2MLC3R4G> right. I think the problem comes from the way your code is probably structured
you probably want a top-level `case` that handles all possible routes
now any sub functions can be passed the necessary strings or integers extracted from the current route
and the routes don't get passed around to other functions
Do you have anything friendlier than Debug.crash for this case. @joeql
<@U0JFGGZS6> I ended up creating a function that updates everything at once
If there's a question I have about a package that isn't necessarily a bug, what's the right place to do so? In the github issues?
