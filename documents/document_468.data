```
haha
<@U153UK3FA>, oh, true. That might be the way to go. I'll look up how it can be done with Express.
<@U0JBSEGHY> you can do, `List.filter (\(x,_) -&gt;  x == model.region)`
and `List.map (\{areaCode, area} -&gt; (areaCode, area ))`
<@U0JBSEGHY> what should your above code do in the case that the `List.Filter` returns an empty list?
I guess just return an empty string.
Or something I dno haha
Haven't thought that far ahead. I'm a dynamic typing guy so still getting used to the types
You can use `Maybe.withDefault` to provide a default value in the case of a `Nothing`
<@U153UK3FA>: can you point me to correct direction. If an article is read from API, in a SPA, how can the server change the meta tags at all as the page is not reloaded?
and you can use `Maybe.map` to transform the value if it's not `Nothing`
I'm not quite sure what the Maybe's do. Brb reading
<@U5W9X7VP1> for meta tags to work, they have to be on the page when the url is fetched by facebook/twitter for loading the metadata. So, they pretty much have to be rendered server-side.
<@U3SJEDR96>, hmm, ok. I have to think about this. Google seems to be able to index after running javascript so dynamic meta tags work there, but I guess FB doesn't do this - yet.
So world is still not ready :disappointed:
Yeah, though I don't think even google can handle a page that first fetches data from an API before being able to set meta tags
Would you still suggest the `case..of` block <@U153UK3FA>
<@U3SJEDR96>, yes, google seems to index correctly after injecting content fetched with a HTTP request. (<https://centrical.com/test/google-json-ld-and-javascript-crawling-and-indexing-test.html>) Not sure about other search engines. But yeah, that doesn't help here. Maybe I'll do fine without dynamic meta tags.
That's interesting, thanks for that link :slightly_smiling_face:
