U4872964V : i'll make an issue
U4872964V : <https://github.com/rtfeldman/elm-spa-example/issues/27>
U39DE7RQ9 : :+1:
U69D8R59S : Is there a way to get a property off a record if it's in a `Maybe`?
My array looks like `[ { score: 1 }, {score: 2} ]`

I thought I could do something like `Maybe.withDefault 20 (get 1 array).score`, but it looks like I'm misunderstanding `Maybe`s.

U1UGYHGCA : ```get 1 array
|&gt; Maybe.map .score
|&gt; Maybe.withDefault 20
```

U3SJEDR96 : `get 1 array |&gt; Maybe.map .score |&gt; Maybe.withDefault 20`
U3SJEDR96 : :smile:
U69D8R59S : Wow. You all are fast and awesome. Thank you!
U2D07QZN3 : Http.getString returns HttpRequest String  How do I take that apart to get the string?
U4872964V : you use `Http.send` to create a command that you return from your update function
U62UFEG4D : Hello happy Elm people, hope you are all doing amazing today :slightly_smiling_face: !I am trying to apply a function to a list of tuples.
I intuition I need to unpack (_uncurry?_) the tuples, but so far I have miserably failed.
Here is an example to give an idea:

```
points =
    (List.map2
        (,)
        (arrayX |&gt; Array.toList)
        (arrayY |&gt; Array.toList)
    )
        |&gt; List.map Geometry.Point
```
any help appreciated ! Thanks,

U4872964V : <@U2D07QZN3> <https://guide.elm-lang.org/architecture/effects/http.html>
U4872964V : <@U62UFEG4D> well, you uncurry the function to make it work on tuples, so```
List.map (uncurry Geometry.point)  yourListOfTuples
```
if I understand your request

U4872964V : but from your description it sounds like you have to Arrays that you want to apply the function to
U62UFEG4D : Awesome, it works <@U4872964V>!
U62UFEG4D : I did not get that uncurry applied to a function... not to arguments
U62UFEG4D : thanks!
U4872964V : <@U62UFEG4D> you don't have to make intermediate tuples though, you should be able to apply your function directly```
points =
    List.map2 Geometry.Point
        (arrayX |&gt; Array.toList)
        (arrayY |&gt; Array.toList)
```

U62UFEG4D : oh wow!
U62UFEG4D : makes totally sense, thank a lot <@U4872964V>!
U4872964V : but now you got to learn uncurry so it's all good :slightly_smiling_face:
U62UFEG4D : exactly hehe!


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
