```
Thanks again
jxxcarlson: Thank you for spelling that out for me. I did notice that it didn't update the correct document, but I thought that could not have anything to do with that, but was intended. And then I had to suddenly run. Did you get help?
Why does an import of `Models` and the use of `Models.Route` somewhere yield a "Models does not expose Route" error?
You can expose an union type outside of your module but by default, it does not expose its constructors
you have to make something like `export (Route(..))`
I had that but with the same problem
I need to display a svg generated by a .js file, I guess I should use ports but I couldn't actually think how to use ports with that? Thanks for the help in advance!
I can think of two solutions <@U5LHS71SM>
One would be the manually append it to an html element generated in Elm.
So in elm make `div [ id "svg-container" ] [] ` and in in JS write `var svgContainer = document.getElementById("svg-container")` and append your svg to `svgContainer`
The other would be to convert the svg to json, and then pass it through the port, and the decode it in Elm
`&lt;svg&gt;&lt;circle fill="blue"&gt;&lt;/circle&gt;&lt;/svg&gt;` -&gt; `{tag:"svg", children: [ {tag:"circle", fill:"blue", children: [] } ] }`
The first would be far easier, but it might be unstable, and kind of hacky. Because the Elm virtual dom might whip it away if it has reason to update the svg's parent element.
<@U5LHS71SM> Could you generate the SVG in Elm instead using [elm-lang/svg](<http://package.elm-lang.org/packages/elm-lang/svg/latest>)?
I take it the svg is dynamically generated?  Otherwise you could save it to a file and `use xlink:href=...`
You can also use this script to convert it to elm-svg if it's a statically generated SVG file: <https://gist.github.com/eeue56/d0ab060828bf3b64922ac9172ee430c3>
Thank you all for the answers, I've solved the problem :smile:
hello all
