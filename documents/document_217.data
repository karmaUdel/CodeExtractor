```
or even `(uncurry  testMove)` so you can keep your current implementation of it :wink:
thank you <@U0CLDU8UB> but how will it fill `when` and `expected` const with the tuple value ?
in ohanhi's setup, `testMove` takes a tuple and deconstructs it. with `uncurry`, that's handled by elm
well, handled by `uncurry` :stuck_out_tongue:
cool
hihi, `uncurry` is also another door toward functional programming
So that syntax I wrote will do the same as your `Tuple.first` and `Tuple.second`, but already in the function definition.
I'll give it a try
ex: `datesInBetween "20 June" "25 June" -&gt; [ 20 June, 21 June, 22 June, 23 June, 24 June, 25 June ] `
there was a function doing this in one of the packages - i used it before - but can't find it now.
basically `List.range` but for dates?
yes
Have you looked at Date.Extra?
<http://klaftertief.github.io/elm-search/?q=Date+-%3E+Date+-%3E+List+Date> :disappointed:
same when searching for `List Date`
there is, however, `dayList : Int -&gt; Date -&gt; List Date`
Also <http://package.elm-lang.org/packages/justinmimbs/elm-date-extra/2.0.3/Date-Extra#range>
(also, five packages have a function name `orange`. Only 3 `apple`s, though.)
Hahahaha.
Waiting for someone to tell me one is obviously a colour and the other isn't, which means I'd be comparing apples to oranges.
My first question would be, is this a good use case of extensible records, or is there a simpler way to achieve the same?
Well, aren't you updating the entire Customer at once, since you are getting it from the server? I'd have it as a separate data field just because of that
