U4RR7KX45 : damn..
U4RR7KX45 : sorry <@USLACKBOT> I always forget
U5R6L5MT4 : Thanks, that will be really useful
U5R6L5MT4 : I didn't know it was possible to run Elm in the Terminal
U5R6L5MT4 : Right now as soon as I try to run my program it end up in a recursion error
U5R6L5MT4 : <https://github.com/natim/elm-sudoku>
U61FZV5EK : Hey. I have a list of elements i want to tab through or click on. When tabbing, I want the element to have an outline, but not when I click on them. Is there some clever way to achieve this without messing with the model?
U4872964V : a list of input fields?
U4872964V : or normal elements?
U61FZV5EK : Anchors.
U69D8R59S : I'm having some trouble with solving this functionally inside my update function:
I have these two variables:

```
resultsFromCommand = [ 1 , 2 ]
somethingInModel = [ { value : Int, someOtherValue :  Int } ]
```

I want to loop through `resultsFromCommand` and do `somethingInModel[index].value = resultsFromCommand[index]`. 

How can I accomplish this succinctly?

U61FZV5EK : <http://package.elm-lang.org/packages/elm-lang/core/latest/List#map2>
U61FZV5EK : Have you looked at this?
U61FZV5EK : map2 (\smt res -&gt; smt.value = res ) somethingInModel resultsFromCommand
U69D8R59S : Wow! Thank you. I haven't used map2 yet, but this looks like exactly what I am after.
U4872964V : I guess `{ smt | smt.value = res }`
U4872964V : or make an `updateSomething` function
U4872964V : for readability
U4RR7KX45 : is it possible to dynamically update a value in Elm state? Something like this:```
         UpdateValue key value -&gt;
             { model | key = value }
```

U3SJEDR96 : nope
U4RR7KX45 : so it has to be explicit
U4RR7KX45 : yeah thought so
U3SJEDR96 : You can't prove at compile-time that your record will have a field with that name, and that changing the value will result in the correct record shape being returned
U4RR7KX45 : yeah makes sense elm-way :smile:
U4RR7KX45 : thank you
U4872964V : If you have things like that, maybe a `Dict` is what you are after
U5E99RPK6 : If the order of keys in a record doesn't matter, how can `Model` be used as a constructor function [here](<https://guide.elm-lang.org/architecture/user_input/forms.html>)? How would it know which argument goes with which key?
U5R6L5MT4 : Thanks to you I know have a working version :slightly_smiling_face:


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
