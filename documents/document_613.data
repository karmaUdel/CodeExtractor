    Http.expectStringResponse &lt;&lt; always &lt;| Ok ()```
~still getting `BadPayload`~ I think I just didn't have my latest code
what is the error exactly?
<@U1AN4JRFV> that worked, thanks!
awesome!
How would you parse date in json?
<@U4Z4NEUQG> <http://package.elm-lang.org/packages/elm-community/json-extra/2.3.0/Json-Decode-Extra#date>
great, I was about to write it, but I thought it was better to ask before
thanks
The protection against brutal API changes made me, once again, happy to use a library.
With node I was so scared to have the "update hell long weekend". (that I had too many times)
I've got a question: In the Http library the first definition is: "type alias Request a = Request a".  I thought type alias was used to give a name to an existing type so does this mean that "Request" is already defined?  If so where?...and why define it again?
This is a way of re-exporting a type
Thank you sporto!
I'm getting "Uncaught RangeError: Maximum call stack size exceeded" in chrome, but it is fine in IE
<https://smckissock.github.io/trump-conflicts/>   Code is here: <https://github.com/smckissock/trump-conflicts>
:slightly_smiling_face:
I have no idea about haskell, I have tried learning it, but just can't wrap my head around it.
I would really appreciate, if you could just give me some pointers.
I am trying another approach, and it is helping speed up compilation time. I am just flinging it in the blind. let me push new branch.
basically I am converting sub messages into commands, this is speeding things up.
I have also figured out some stuff about compiler, apart from the fact that "on any modification entire dependent tree is recompiled "
there is one more thing, where dependencies are also recompiled, and that is the case with update function. so just splitting up update function doesn't help. The messages have to be decoupled and `Cmd.map`ed so as to avoid recompilation.
removing that entire file had no impact on compile time. :disappointed:
