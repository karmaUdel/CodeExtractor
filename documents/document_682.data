```
That's not what is happening.
Sorry, that should say if include isn't specified, and exclude doesn't trigger, then it is returned True.
but I could be wrong. Probably best to wait for someone else to chime in
There is no problem with that code, it tests perfectly.
ok
Sorry if I was unclear on that.
My question is about the namedtuple.
Rather than sending entry[index] I am wondering, short of a dict or a class, if there is a better way, that is closer to sending entry.query.
<@U5VGKQ2SY>, here you go: <https://github.com/TomFaulkner/pypihole>
Posting this b/c it got pushed up a ways. In case anyone else wants to give it a shot.
Thanks.
Full code to the above: <https://github.com/TomFaulkner/pypihole>
<@U2BS4M1RV> the easy answer is that you should never change the indexes/order on a named tuple
Thats a breaking change. If your concerned about that, you should probably use a class or dictionary and not let people use indexes
Yeah, I think I probably have to agree there. As nice as namedtuples are, that does make it easy to break things should the data being analyzed changed.
`Query._fields.index('client')`
Not sure if I understood correctly
You did, that works well.
However, it also starts with an underscore. I can't imagine standard lib changing that, but...
Actually, in the case of a namedtuple, it might make sense to do the underscore to avoid someone naming one of their fields 'fields' and breaking things.
