```
Hmm.. I don't see how to use it.
There is another point also. At the time of the Http, I probably don't have a value of type `Book a`. I'm not trying to decode the value itself. I need a constraint on the type. Like a Decoder.
`{ a | owner : User () } -&gt; String` accepts a `ProjectStructure (User ()) company contact`
because `ProjectStructure (User ()) company contact` is a record which has a field called `owner` of type `User ()`
I want to make sure that if I am making an Http request to my `book` endpoint requesting a `Book Author`, this http request must ask for the author to be embedded.
I don't think it's (even theoretically) possible to be confident of that without tests :thinking_face:
in any language
like "the author is embedded" is business logic, which can be incorrect
I'm not even sure how you'd use a theorem prover to check that
This is what I mean by author is embedded: the endpoint looks like this: `/books?embed=author`
(I'm hardly an Agda/Coq/Idris expert though, so maybe it's possible and I don't know how to do it)
I have a function that translates a record with fields like `embeded` into a url.
`embeded` takes a list of strings.
I would like a function that given a `CustomDecoder a` could produce a list of strings.
