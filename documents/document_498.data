```
Nice, thanks.
<https://github.com/elm-community/list-extra/blob/6.1.0/src/List/Extra.elm#L315>
with evan saying 0.19 was going to be all about SPA, what happens to elm-ui and elm-mdl
<@U1SQLHY1G> can you say more about how those are related
What does a high std dev mean in terms of elm-benchmark? What would make a function perform so inconsistently?
kyclark: There’s also `List.Extra.zip`, which is implemented as `map2 (,)` iirc.
Also note that the implementation I am comparing it against has a very small std dev.
<@U4F64AKQV> just a wild guess but maybe the one function causes more memory allocation/deallocation and is therefore more likely to trigger garbage collection while it's running? If sometimes the GC ran and other times it didn't that could explain it...
<@U1TMAG4FK> that sounds reasonable. The function with high std dev is creating more intermediate data structures.
<@U4F64AKQV> might be able to check it with something like Chrome dev tools performance monitoring - it calls out GC pauses separately
yeah, that would be my guess, too. Is the stddev higher than the performance diff, tho, <@U4F64AKQV> ?
The moment of shock you realize there is not a single JS library doing something an elm library solves already quite well
<@U0K92QFST>++
Is there a way to know how many packages elm-package have? How many of them are up-to-date with language version?
<http://package.elm-lang.org/new-packages> &lt;- 0.18 compatible
so 607 currently
Cool!
How much in total?
Sorry, I am from the phone, can't try it myself
926
Ok, thanks!
Good day everybody!
If I've run into an error message that IMO could be more helpful, where do I look for existing issues or file a new one?
<https://github.com/elm-lang/error-message-catalog>
Thanks <@U0EUHKVGB> !
Just checking: there's no way to share the Elm runtime between many apps, right? We're serving many Elm mini-apps on the same page, and don't want to serve several megs of the same thing...
What does "sharing the elm runtime" mean, exactly? They need a separate model, and update; but the actual functions and whatnot _are_ shared, they just get separate structures for what's actually _going on_
shouldn't be several megs unless you have a large model, though
You can compile it into a single bundle, <@U0U6ML22H>
`elm-make A.elm B.elm`
i.e. if you bundle multiple modules `elm-make Module1.elm Module2.elm --output bundle.js`, it's just one defintion for everything
there is a PR for adding support to webpack: <https://github.com/elm-community/elm-webpack-loader/pull/119>
Where is the `elm-live` output coming from?
might just be elm-live getting confused by files being created/renamed/..? not sure
The file was there when I started it. The space was new, so no rename there.
what happens if you `elm-make src/Main.elm`, <@U2D7NUGS1> ?
<@U0EUHKVGB> <@U3SJEDR96> hmm OK, let me explain: our backend serves pages with different small Elm apps in them (one or more per page/route). These are all compiled to their own .js. They, I believe, all include the Elm runtime. The thing is, one page/route might embed several of those apps, and each of those will, as established, contain the Elm runtime. I'd like it if it was possible to have only the Elm runtime as one file, and the remaining apps as their own file. In the app, each page/route could theoretically need to embed one or more Elm apps (by that I mean it's important to keep the apps independent)
No, you can’t do that
You have to create one big bundle
<@U3SJEDR96> bingo!
<@U2D7NUGS1>, when you run `elm-make` directly on a file, it will assume the name is `Main.elm` unless it finds a valid module decleration telling it otherwise.
Hence why the errors are different.
Yeah, I get this. I just think the error could be improved.
Yep. Just explaining how it works
Sure. Thanks.
<@U0EUHKVGB> yeah, the big bundle won't work in that case :smiley: Do you think that the compiler improvements in 0.19 could help with that use case, or is it completely out of scope?
I didn't find any issue about it, so I guess I can  file a new one at <https://github.com/elm-lang/error-message-catalog/issues> as you suggested <@U0EUHKVGB> .
<@U0U6ML22H> Yes, but it would work based on compiling multiple entry points together, I suspect.
do you mean that the improvements are geared more towards optimizing "one big Elm app with several Elm-pages served by Navigation" instead of optimizing our use case of serving several small (but full-fledged) Elm apps in one single HTML page?
We don’t know
OK
I’m only guessing
all right, thanks for your help :smiley:
<@U0U6ML22H> it will depend on how many of those apps exist in your ecosystem, but if you have, say, on average 60% of those active in a single user-session, it might be worth bundling _all_ of them in a single file and trying to send it to the user gzipped and minified. It's a trade-off; but perhaps it's better to have them download 1 larger file, rather than 20 slightly-less-large files over the course of a single session
especially considering the sum of those files will be larger than the single large bundle (due to duplication)
yup, I agree with that kind of reasoning; I was just thinking it should be easy to share the Elm runtime as a side-dependency
Yeah, I don't think that can be (easily) done
I'm probably not good enough to understand why ^^
It can be done, but right now you will be fighting more than you are achieving.
I _suspect_ that this is what is coming with 0.19.
:wave:
thanks <@U0EUHKVGB> and <@U3SJEDR96>
does anyone know what the most elegant way is to conditionally render an attribute in elm?
with html you can just do `if someBool then p [] [] else text ""`. what is the equivalent for attributes?
what we do is append to a list
yeah that's why I asked for the most elegant way. That was the only one I could come up with and it not that nice to use. :confused:
