U0NCP4NC9 : did we have elm-make 64bit?   my project showing "elm-make.exe: out of memory" on win10
U0EUHKVGB : <@U0NCP4NC9>, if it is out of memory then there is something else wrong
U0EUHKVGB : Does this happen on a particular project?
U4PT7NG4V : I've seen some out of memory bugs in the compiler repo. Might be worth searching there :slightly_smiling_face:
U0NCP4NC9 : <@U0EUHKVGB> 3Q for answer ,  there is so many file in my project , and i changing some like the "foundation"  ... maybe it's to many error will coming out ..   I 'm spliting  piece by piece ..
U0CLDU8UB : ilias, adrien and enetsee, I'm pretty sure this is a product of a core feature of the record system in Elm. This episode of Elm Town discusses the problem field in more detail: <https://elmtown.github.io/2017/04/26/history-in-elm-town-records-episode-12.html>
U3SJEDR96 : True, but it's a bug nevertheless (and fixed in `dev` :partypuffin: )
U2LAL86AY : found a runtime error in the svg library.```
Svg.svg
            [ class ""
            ]
            []
```
```
bundle.js:12333 Uncaught TypeError: Cannot assign to read only property 'className' of object '#&lt;SVGSVGElement&gt;'
    at applyFacts (bundle.js:12333)
    at render (bundle.js:12262)
    at render (bundle.js:12268)
    at render (bundle.js:12250)
    at bundle.js:13576
    at Object.&lt;anonymous&gt; (bundle.js:10017)
    at Object.def.callback (bundle.js:23128)
    at step (bundle.js:10662)
    at work (bundle.js:10720)
```
So i can't use Html.Attributes.class inside svg element - but this should work according to the type annotation.
```
svg : List (Attribute msg) -&gt; List (Svg msg) -&gt; Html msg
```

U1B8JE3Q9 : isn't that `Svg.Attribute` rather than `Html.Attribute`?
U2LAL86AY : ah yes that's true.:smile:
U2LAL86AY : but then is the job ov the compiler to catch this.```
import Html.Attributes exposing (class)
import Svg
import Svg.Attributes as SA

view : Model -&gt; Html Msg
view model =
    Svg.svg [ class "" ] []
```
Hmm this is the second time i found a run-time exception in the long time - errors are becoming like unicorns in elm :smile:

U3SJEDR96 : yeah, so basically the difference is that `Html.Attributes.class` uses `className` under the hood, while `Svg.Attributes.class` uses `class`
U3SJEDR96 : _but_ `Html.Attribute` (the type) and `Svg.Attribute` (the type) are both simple aliases for `VirtualDom.Property`
U3SJEDR96 : which means you can indeed use them when they don't really make sense
U0CLDU8UB : That's awesome and cool!
U2LAL86AY : thanks for explanation
U3SJEDR96 : I know it doesn't really solve your issue, but it's nice to know :wink:
U3SJEDR96 : (also, the html `class` can be safely used multiple times on a single node, and the classes will be appended, but there is no such thing for the svg `class` )
U3SJEDR96 : (as well as the dreaded "_`Module.point.x` gives a compiler error_" thing, btw)
U5GSVKPJS : Hey folks. Got a bit of an odd one. I have an `&lt;input&gt;` that is a dynamic search query filter box. The problem is, it filters content both above and below the search box. By default, you are viewing all items, and a `&lt;ul&gt;` is above the search box. But the moment you type a search query in, that `&lt;ul&gt;` might entirely disappear. This results in Elm recreating the DOM around that, which creates a _new_ `&lt;input&gt;`, and the input I was just typing in loses focus (as it's destroyed)
U5GSVKPJS : What should I do to work around this?
U5GSVKPJS : Key all my top-level elements?
U3SJEDR96 : Hmm. Sounds like you'll need to key enough to ensure that element isn't recreated. assuming you have `ul, input, ul` as siblings, keying those should suffice (as long as the tree that `input` is in isn't destroyed)
U5GSVKPJS : Keying the top level elements has worked, so I guess I'll do that
U5GSVKPJS : thanks <@U3SJEDR96>
U3AAB7A4C : hey there, I am writing my first bigger app and stumbled over a problem with combined / recursive union types
U3AAB7A4C : I have a module ```Data.Button``` which has following types:
U3AAB7A4C : ```type Size
    = Small
    | Medium
    | Large


type Alignment
    = Left
    | Right
    | NoAlign


type Type
    = Primary
    | Secondary
    | Composed Type Size Alignment
```

U3AAB7A4C : the Composed tag causes the compiler to drain my resources, couple of minutes to compile / elm-make takes as much RAM that is left
U3AAB7A4C : over 4 GB of RAM
U17J54S2U : Hey all, is there any way to do a “cleanup” before an Elm application is destroyed?
U17J54S2U : I’m using ports to do some stateful stuff.
U0EUHKVGB : <@U17J54S2U> no
U0EUHKVGB : You’ll need to send a message out of the port to say that the elm app is going away.
U0EUHKVGB : <@U3AAB7A4C> try changing the name of `Type` to something else
U17J54S2U : Got it


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
