U1CE9DL9H : the first phase can use a `Decode.list Decode.value`
U1CE9DL9H : yes, but you keep the elements as undecoded values
U17PWHU4D : ah, ok.  going to look at Decode.value right now.  that one is new to me.
U48AEBJQ3 : Since you will be building an Elm data structure out of this, do you know what you want that to look like?
U17PWHU4D : i would love to!
U1CE9DL9H : I assume a record with 5 fields of the correct type?
U17PWHU4D : close, i was going to tuple with the string, then list int.
U17PWHU4D : but the result will be the same either way.
U48AEBJQ3 : You should avoid using a `List` when you want things to be a specific length.
U17PWHU4D : ok, `Array` better?
U1CE9DL9H : anyway, you should be able to define something like ```
f : List Value -&gt; Decoder MyTypeAlias
f list = 
    case list of 
        [ a,b,c,d,e ] -&gt; 
            Decode.map5 MyTypeAlias 
                (<http://Decode.int|Decode.int> a)
                (<http://Decode.int|Decode.int> b)
                (<http://Decode.int|Decode.int> c)
                (Decode.string d)
                (<http://Decode.int|Decode.int> e)
        _ -&gt; Decode.fail "shape of the list is invalid"
```

U48AEBJQ3 : It sorta depends? If the Ints are all interchangeable, a list would be... alright, I guess?
U1CE9DL9H : then the full decoder becomes `Decode.list Decode.value |&gt; Decode.andThen f`
U3SQ42JJW : Anyone any experience with using Chris Jenkins RemoteData with a custom post request? I can’t figure it out … :disappointed:
U48AEBJQ3 : That might be simpler as```
f list =
    Decode.map5 MyTypeAlias
        (Decode.index 0 <http://Decode.int|Decode.int>)
        (Decode.index 1 <http://Decode.int|Decode.int>)
        (Decode.index 2 <http://Decode.int|Decode.int>)
        (Decode.index 3 Decode.string)
        (Decode.index 4 <http://Decode.int|Decode.int>)
```

U3SQ42JJW : There is this example in the docs ````

getNews : Cmd Msg
getNews =
    Http.get "/news" decodeNews
        |&gt; RemoteData.sendRequest
        |&gt; Cmd.map NewsResponse
````

U17PWHU4D : ok, i think i get what you're both saying here.  this is a ton of good stuff for me to look through and figure out.  didn't realize about value, or mapping through.
U17PWHU4D : Thanks so much <@U48AEBJQ3> and <@U1CE9DL9H> !!
U3SQ42JJW : So I need something that responds with an Http Request msgAnd just use RemoteData.sendRequest with it…. 
But what makes this Cmd.map and where do I put my msg ?

U48AEBJQ3 : <@U3SQ42JJW> Ignoring remoteData for a moment, are you able to make your `Http.Request a`?
U3SQ42JJW : yes - thats my function```
requestToken : String -&gt; String -&gt; Http.Request State.ValidationResponseType
requestToken password endpoint =
    let
        decoder : JD.Decoder State.ValidationResponseType
        decoder =
            JD.map State.ValidationResponseType
                (JD.field "token" JD.string)

        json =
            JE.object
                [ ( "password", JE.string password ) ]
                |&gt; JE.encode 0
                |&gt; Http.stringBody "application/json"
    in
        Core.Helpers.Utils.customPostRequest
            (endpoint ++ "/api/getPollToken")
            []
            json
            decoder
```

U3SQ42JJW : Works fine when using it with Http.send
U48AEBJQ3 : So, you pass that to `RemoteData.sendRequest` which gives you a `Cmd (WebData State.ValidationResponseType)`
U3SQ42JJW : yes, like this ```
RD.sendRequest &lt;| (requestToken string apiEndpoint)
```



in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
