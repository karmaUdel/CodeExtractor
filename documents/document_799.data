U0EUHKVGB : <@U1X0EELG3> Have you tried uninstall and re-installing?
U1X0EELG3 : Well, I just installed it for the first time after a clean install of a new Debian 9 box.
U1X0EELG3 : Maybe something to do with versions of Ruby. I don't know ruby so its a bit of a mytery to me.
U1X0EELG3 : Hmm, version 1.1.0 of elm-install released 4 days ago. I was running an older version than that before. I guess some bug might have been introduced in later version. So I can try going back to an older version and see if that works....
U1X0EELG3 : Bugger, no joy with older version I tried so far.
U3S9BH05U : <@U1X0EELG3> I've just tried installing and running elm-install on my debian (9) box, and worksforme, sorry =(
U3S9BH05U : I've installed it from npm, and I've got ruby 2.3.3
U1X0EELG3 : Thanks. It works for most elm-package.json that I tried, just not all.
U3S9BH05U : can you share an elm-package.json that doesn't work?
U1X0EELG3 : {    "version": "0.0.1",
    "summary": "Auth Server UI",
    "repository": "<https://github.com/no-user/not-a-github-project.git>",
    "license": "private",
    "source-directories": [
        "src/elm",
        "src/auth-client/elm"
    ],
    "exposed-modules": [],
    "native-modules": true,
    "dependencies": {
        "elm-lang/core": "5.0.0 &lt;= v &lt; 6.0.0",
        "elm-lang/html": "2.0.0 &lt;= v &lt; 3.0.0",
        "elm-lang/navigation": "2.0.1 &lt;= v &lt; 3.0.0",
        "elm-lang/http": "1.0.0 &lt;= v &lt; 2.0.0",
        "rgrempel/elm-http-decorators": "2.0.0 &lt;= v &lt; 3.0.0",
        "debois/elm-mdl": "8.1.0 &lt;= v &lt; 9.0.0",
        "elm-community/json-extra": "2.0.0 &lt;= v &lt; 3.0.0",
        "elm-community/dict-extra": "1.3.1 &lt;= v &lt; 2.0.0",
        "elm-community/maybe-extra": "3.0.0 &lt;= v &lt; 4.0.0",
        "elm-community/list-extra": "4.0.0 &lt;= v &lt; 5.0.0",
        "krisajenkins/elm-exts": "26.1.0 &lt;= v &lt; 27.0.0",
        "rgrempel/elm-route-url": "3.0.0 &lt;= v &lt; 4.0.0",
        "rupertlssmith/elmq": "1.0.0 &lt;= v &lt; 2.0.0",
        "rupertlssmith/elm-auth": "1.0.0 &lt;= v &lt; 2.0.0"        
    },
    "elm-version": "0.18.0 &lt;= v &lt; 0.19.0"
}

U3S9BH05U : ``` ? ? ~/src/testforrupert ? ls                                                                                                                                                                                                                       ? ohana@pariah ? 18:09:03 
elm-package.json
 ? ? ~/src/testforrupert ? elm install                                                                                                                                                                                                              ? ohana@pariah ? 18:09:03 
Resolving packages...
  ? Getting updates for: elm-lang/core
  ? Getting updates for: elm-lang/html
  ? Getting updates for: elm-lang/virtual-dom
  ? Getting updates for: elm-lang/navigation
  ? Getting updates for: elm-lang/dom
  ? Getting updates for: elm-lang/http
  ? Package: <https://github.com/rgrempel/elm-http-decorators> not found in cache, cloning...
  ? Package: <https://github.com/debois/elm-mdl> not found in cache, cloning...
  ? Getting updates for: debois/elm-dom
  ? Getting updates for: elm-lang/mouse
  ? Getting updates for: elm-lang/window
  ? Package: <https://github.com/elm-community/json-extra> not found in cache, cloning...
  ? Package: <https://github.com/elm-community/dict-extra> not found in cache, cloning...
  ? Getting updates for: elm-community/maybe-extra
  ? Getting updates for: elm-community/list-extra
  ? Package: <https://github.com/krisajenkins/elm-exts> not found in cache, cloning...
  ? Package: <https://github.com/elm-lang/trampoline> not found in cache, cloning...
  ? Package: <https://github.com/rgrempel/elm-route-url> not found in cache, cloning...
  ? Package: <https://github.com/ccapndave/elm-update-extra> not found in cache, cloning...
  ? Package: <https://github.com/sporto/erl> not found in cache, cloning...
  ? Package: <https://github.com/rupertlssmith/elmq> not found in cache, cloning...
  ? Package: <https://github.com/rupertlssmith/elm-auth> not found in cache, cloning...
  ? Getting updates for: truqu/elm-base64
Solving dependencies...
  ? elm-lang/core - <https://github.com/elm-lang/core> (5.1.1)
  ? elm-lang/html - <https://github.com/elm-lang/html> (2.0.0)
  ? elm-lang/navigation - <https://github.com/elm-lang/navigation> (2.1.0)
  ? elm-lang/http - <https://github.com/elm-lang/http> (1.0.0)
  ? rgrempel/elm-http-decorators - <https://github.com/rgrempel/elm-http-decorators> (2.0.0)
  ? debois/elm-mdl - <https://github.com/debois/elm-mdl> (8.1.0)
  ? elm-community/json-extra - <https://github.com/elm-community/json-extra> (2.3.0)
  ? elm-community/dict-extra - <https://github.com/elm-community/dict-extra> (1.5.0)
  ? elm-community/maybe-extra - <https://github.com/elm-community/maybe-extra> (3.1.0)
  ? elm-community/list-extra - <https://github.com/elm-community/list-extra> (4.0.0)
  ? krisajenkins/elm-exts - <https://github.com/krisajenkins/elm-exts> (26.5.0)
  ? rgrempel/elm-route-url - <https://github.com/rgrempel/elm-route-url> (3.0.1)
  ? rupertlssmith/elmq - <https://github.com/rupertlssmith/elmq> (1.0.0)
  ? rupertlssmith/elm-auth - <https://github.com/rupertlssmith/elm-auth> (1.1.0)
  ? debois/elm-dom - <https://github.com/debois/elm-dom> (1.2.3)
  ? elm-lang/mouse - <https://github.com/elm-lang/mouse> (1.0.1)
  ? elm-lang/window - <https://github.com/elm-lang/window> (1.0.1)
  ? elm-lang/dom - <https://github.com/elm-lang/dom> (1.1.1)
  ? elm-lang/virtual-dom - <https://github.com/elm-lang/virtual-dom> (2.0.4)
  ? truqu/elm-base64 - <https://github.com/truqu/elm-base64> (1.0.5)
  ? ccapndave/elm-update-extra - <https://github.com/ccapndave/elm-update-extra> (3.0.0)
  ? sporto/erl - <https://github.com/sporto/erl> (10.0.2)
  ? elm-lang/trampoline - <https://github.com/elm-lang/trampoline> (1.0.1)
Packages configured successfully!
 ? ? ~/src/testforrupert ?    
```

U3S9BH05U : should have disabled powerline xD
U1X0EELG3 : Thanks. It worked for you! That makes the problem even weirder to figure out...
U1X0EELG3 : What version of elm-install are you running? (elm-install --version)
U3S9BH05U : 1.1.0
U177VRFJP : Question about data structures...I am writing an app where I will have thousands of objects being passed around in memory. Right now I have this written as a record (`{ fieldA : String, fieldB: String, fieldC: String }`), but I'm wondering if re-writing it as a union type would be more efficient (`type Thing = Thing String String String`)...any thoughts?
U2H92KKEY : ah, it must be related to the python SimpleHTTPServer I'm using
U2H92KKEY : the proper content type was not in the header
U2H92KKEY : added this to index.html and voila `&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt;`
U2H92KKEY : thanks
U3FJSB596 : Have in mind that by making it a record you have access to generated getter functions and the setter syntax
U177VRFJP : it doesn't take much time to write getter/setter functions. I'm mainly concerned about memory because there could be 100,000+ of these objects being passed around
U153UK3FA : There’s no reason there should be a runtime difference between those representations
U177VRFJP : Would there be a more efficient representation?
U177VRFJP : like a Tuple perhaps?
U153UK3FA : a tuple, record and type with parameters are all sugar
U177VRFJP : hmm that's good to know. do you know how those are represented in JS-land?
U14Q8S4EM : I think tuples come out as `{ _0: firstItem, _1: secondItem }`
U14Q8S4EM : And I think records come out directly as objects
U14Q8S4EM : So `Thing "whatever" "also whatever"` -&gt; `{ fieldA: "whatever", fieldB: "also whatever"}`
U14Q8S4EM : For that reason tuples and records are just as performant.
U14Q8S4EM : (Although I think I vaguely remember <@U0EUHKVGB> saying records are more performant. I could be wrong)
U177VRFJP : interesting. thanks! I'll have to do some benchmarking to confirm but that makes sense
U0EUHKVGB : Memory usage is not the same thing as performance
U0EUHKVGB : Tuples will be more efficient unless you have very short field names in your record. Basically when your field names are a combined length of 16 or more, then a tuple is better.
U0EUHKVGB : (for tuples of size 2)
U177VRFJP : I have 4 fields for each object
U177VRFJP : would it make sense to use a Tuple in that case?
U0EUHKVGB : <@U177VRFJP>, it depends on the names of the fields.
U177VRFJP : as they're written now they'd be over 16 characters...but trimming them down is no problem. If field name length is an issue maybe it would be better to use a union type?
U0EUHKVGB : Let's go to <#C2QPJLU2X|elm-discuss> instead
U635238TG : <@U0J8D9M2P> I think you might be looking for <http://courses.knowthen.com/>
U6D3ERLA1 : Can folks point at some larger applications built with Elm?
U3SJEDR96 : `rtfeldman/elm-spa-example` is a nice example, `Tradenomiliitto/tradenomiitti` is a real world, deployed-on-production example. `etaque/tacks` is a pretty cool multiplayer game, also a little more complex than your run-of-the-mill small example
U3FJSB596 : <#C0LUAGWRK|jobs>
U5XC2FJ1Y : so does Elm have a good way to write polymorphic functions like `average : List number -&gt; Float`? right now the best option I've seen is to define `coerceToFloat x = x |&gt; toString |&gt; String.toFloat |&gt; Result.withDefault 0` and use specifically `Float` methods, but that seems really hacky
U6F6NLU59 : <@U3FJSB596> thank you!
U3FJSB596 : np :wink:
U6F7KJ9JR : hey guys, can anyone tell me how to get started in elm !!
U0FP80EKB : <https://guide.elm-lang.org/>
U0FP80EKB : I learned a bunch at the beginning from prag studio folks <https://pragmaticstudio.com/courses/elm>
U3FJSB596 : Have you used this:<https://www.elm-tutorial.org/en/04-starting/cover.html>

U2U94G0QG : ah, hehe coreyhaines' link to the guide was what I meant to post :grimacing:
U6F7KJ9JR : thanks <@U2U94G0QG>  <@U0FP80EKB>   <@U3FJSB596>  :smiley:
U0FP80EKB : Finally deployed our new elm-based embeds on some of our client sites. We’re averaging about 40k views a day.
U0F5SH6UQ : <@U6F7KJ9JR> self plug, if you’re really new to elm: <https://egghead.io/courses/start-using-elm-to-build-web-applications>
U0Z9TPK7S : Working on yet another iteration of the Gamepad library. Considering two different APIs for accessing and remapping the controls.I put a very short example usage here <https://gist.github.com/xarvh/11d64ef600df1d5007d17c0ecafcb853> I'm very undecided on which one is best, would be really happy to get some additional input about it. =D

U23SA861Y : these aren't just coming in as subscriptions?
U0Z9TPK7S : Not really. The subscription provides the blob with all the raw gamepad state  information, then you use the functions in the gist to make sense of it.
U23SA861Y : but wouldn't it make sense as an API to basically allow the consumer of the library to just specify which Msg they want for which button or are you trying to add more flavour than that. Some of this you have here looks stringly typed
U0Z9TPK7S : What would be the advantage?
U23SA861Y : I'm trying to figure out which way you're going on this. Is it your intent to have remaps be done in a config file or via some user interface?
U0Z9TPK7S : Yes
U0Z9TPK7S : Thing is, the browser provides the state for gamepads, not events
U0Z9TPK7S : games will need the state
U0Z9TPK7S : for example, if the user is pushing the stick along the X coordinate, the useful information is its current position, not the  fact that it changed
U0Z9TPK7S : It would be very convoluted to turn the  browser's interface to an evented one and then force the developer to keep track of the state
U0Z9TPK7S : If you use the debugger, this will also pollute the history with a fuckton of messages.
U23SA861Y : sure, but at the same time the last thing you want is to drop to stringly typing
U0Z9TPK7S : What do you mean by "stringly" typing?
U23SA861Y : using strings for things that should be types
U0Z9TPK7S : this is not the case.My bad, I fear that my example might be ambiguous.
The strings there are just labels, so that the player knows what they're configuring.

U0Z9TPK7S : Their only role is being shown as text to the player
U23SA861Y : It seems like this might be trying to mix up view logic with business logic
U23SA861Y : I should be able to deal with remapping completely seperately from how it's going to be shown to the user
U0Z9TPK7S : The only reason they are together is because they need to fit in a gist
U0Z9TPK7S : But it might be better to think about those as "configuration". It's better to keep them together, because every time the developer adds or modifies an input, they would need to change both the mapping strings and the function assignment.
U23SA861Y : so, I'm thinking that this library shouldn't even have "mapping strings". It should expose a datastructure which describes the mappings in a type safe way, but the rendering and alteration of the mapping should be up to the game writer.
U0Z9TPK7S : Everything is very much type safe.
U23SA861Y : that wasn't what I was getting at there. Placing the strings which you will display to the user at this library level seems like an incorrect composition
U0Z9TPK7S : Why is that?
U23SA861Y : what if I want to use symbols or images to display to the user
U23SA861Y : whats key here is the data structure
U0Z9TPK7S : Then you write your own mapping tool
U23SA861Y : You'll be tripping over your dependencies in no time if you try to mix view and data logic like this
U0Z9TPK7S : That list/record is only a configuration thing that's used only by the mapping tool. It's not necessary to use the library
U0Z9TPK7S : When the developer uses the mapping tool, they need a way to tell the mapping tool which buttons are needed and how they should be presented to the player.
U23SA861Y : right, but it seems like that should be user specified types
U23SA861Y : which when they bind it to their view they convert into messages and descriptions
U0Z9TPK7S : Yes. The strings are specified by the developer.There needs to be a data structure that allows the developer to give the mapping tool two kinds of information: 1) which keys are needed and 2) how those keys should be described to the user.
What structure would you suggest?

U23SA861Y : so the binding would be something like `Dict a Input` and how they should be described should be `a-&gt;Html msg`
U23SA861Y : maybe, I'm still thinking about how I would do it myself
U0Z9TPK7S : what is `a` in `Dict a Input`?
U23SA861Y : anything the user wants
U0Z9TPK7S : `a` can be only a `comparable`, which is kind of limiting
U23SA861Y : but would be some indication of the action the input should perform in game
U23SA861Y : in this case yes
U23SA861Y : more limiting that only string?
U23SA861Y : whats going through my head here is you want to store a mapping but you also might want to serialize and store it.
U23SA861Y : That means the mapping must be plain old data
U0Z9TPK7S : No I wouldn't
U23SA861Y : when I asked you that you reponded "yes"
U0Z9TPK7S : I don't need to store that
U0Z9TPK7S : It's two different mappings
U0Z9TPK7S : One is the mapping between raw browser data and a button name "leftX -&gt; axis #0"
U0Z9TPK7S : That will be managed and saved by an entirely different part of the code.
U0Z9TPK7S : The other is a mapping between a button name and a description of what it does in a specific application "leftX -&gt; move horizontally"
U0Z9TPK7S : The latter is the one that the mapping tool needs to know about.
U0Z9TPK7S : I fear that my example is grossly inadequate
U0Z9TPK7S : I should make a full fledged app and then ask again.
U23SA861Y : if you need to go from data to rendered on screen just use a function
U23SA861Y : `Input -&gt; Html msg`
U0Z9TPK7S : I don't *want* the user to specify that. The whole point is to do as much work as possible for the user. If the user needs something different, they can implement their own.
U0Z9TPK7S : I want the user to *forget* that the player might need to remap the gamepad. It's the whole point of the library.
U0Z9TPK7S : I want people to be able to use a gamepad with the minimum effort possible.
U23SA861Y : when I say `Input -&gt; Html msg` I mean they are just encoding the logic of how to render the individual descriptions, nothing more
U0Z9TPK7S : And when I say that I don't want that, I don't want that.
U23SA861Y : Then do what you want, you came here for help on an API
U23SA861Y : you've predecided what it should be
U0Z9TPK7S : Partially, I did.
U0Z9TPK7S : I pre-decided that it should be one of two options, which I presented in the gist.
U0Z9TPK7S : I really appreciate your time and effort, <@U23SA861Y> but I fear I'm failing you with the poor explanation I provided.
U0Z9TPK7S : I should flip a coin, implement one, and show to the community  the finished product.
U23SA861Y : the first one allows your required inputs to be decoded from file fairly easily
U0Z9TPK7S : I'll consider that. Thanks. :smiley:
U2PTZFKFX : hello, can anyone give me a good tutorial on using elm with REST? i m having hard time grasping it,
U2PTZFKFX : specially decoding json
U2PTZFKFX : posting contents and login
U32BTDW4U : <@U2PTZFKFX> Brian Hicks wrote an excellent resource for json decoding <https://www.brianthicks.com/json-survival-kit> . you can get the first chapter for free IIRC. I'd also recommend the guides (<https://guide.elm-lang.org/interop/json.html>) as well as json decode pipeline once you get a bit more familiar (<https://github.com/NoRedInk/elm-decode-pipeline>)
U32BTDW4U : Json was one of the harder parts for me to grasp, don't despair!
U0Z9TPK7S : I gave a talk about function composition some time ago <https://xarvh.github.io/talk-generators/#0>Function composition is how JSON decoders work.

U2PTZFKFX : thanks <@U32BTDW4U>  what about http requests and manipulating the json data?
U2PTZFKFX : ok
U0Z9TPK7S : <@U2PTZFKFX> probably the easiest way to manipulate JSON data is to decode it into Elm records and lists, manipulate those as you'd do normally in the language, and re-encode them to JSON.
U2PTZFKFX : ok
U0Z9TPK7S : Does that answer your questions?
U2PTZFKFX : somehow, let me read what is posted first,
U0Z9TPK7S : <@U23SA861Y> I stand corrected. I see now that your suggestion of making a more generic view does make sense. Again thank you for your input.
U0J8D9M2P : Exactly
U0J8D9M2P : <@U635238TG> Thank you
U5ZC6V535 : Hi i am trying to separate my top level messages to sub messages and hence i did: 
```
type GeneratorMsg
    = BoidsGenerated (List Boid)
    | ColoursGenerated (List Color)


type Msg
    = Tick Time.Time
    | UpdateWorld Window.Size
    | GeneratorMsg
```

However, in my  main update function when I use the *BoidsGenerated* message Elm thinks that it is of type *GeneratorMsg* which is correct. In the same time though - in my mind -, it is of type *Msg*. 

Is there a way to be able to handle *Msg* and *GeneratorMsg* interchangeably? Basically, i want to split my update function to smaller functions but I want everything that has to do with generated stuff to be handled by 1 separate function. Then that function will have cases for *BoidsGenerated* and *ColoursGenerated* msgs. --- thanks

U0Z9TPK7S : <@U5ZC6V535> You should declare those as```
type Msg
    = Tick Time.Time
    | UpdateWorld Window.Size
    | GeneratorMsg GeneratorMsg
```

U0Z9TPK7S : But this is going to be confusing; I would recommend to change `type GeneratorMsg` into `type GeneratorOutcome`.Then your update function can be
```
type GeneratorOutcome
 = BoidsGenerated (List Boid)
 | ColoursGenerated (List Color)

type Msg
 = GeneratorMsg GeneratorOutcome
  | ...

update msg model =
  case msg of
    GeneratorMsg generatorOutcome -&gt;
      generatorUpdate generatorOutcome model

    ...
```

U0Z9TPK7S : Does it make sense?
U5ZC6V535 : <@U0Z9TPK7S> Yeah, that actually makes sense :slightly_smiling_face: Thanks.
U0Z9TPK7S : :smiley:
U2LAL86AY : <@U5ZC6V535> i use a `word pattern` for delegating messages to sub modules:```
type Msg = 
  | MsgFor_Generator GeneratorMsg
  | MsgFor_SomethingElse SomethingElseMsg
  | Click  

type GeneratorMsg =  -- no need for GeneratorOutcome, or other variations  - because sometimes "outcome" si a word that doesn't work semantically, and you waste time thinking : "what would be a better naming ?!"
    BoidsGenerated (List Boid)    
    |  ColoursGenerated (List Color)
```
It's how i keep my mind and msgs consistent. :smile:

U2LAL86AY : and in your elm debugger will look like:`MsgFor_Generator ( GenerateSomething { seed: 1112112 })`

U24HQ3RJ7 : hi.. i am new to CSS and have to make a web / mobile app .. I am using Elm for it. :slightly_smiling_face:
Has the community converged on some particular css library ? elm-css vs elm-style-elements vs something_else ..

U0Z9TPK7S : <@U24HQ3RJ7> Hi! Welcome!


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
