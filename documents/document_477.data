    = Login (Result Http.Error String)``` also has to match that same Result-type.
I have never done it myself before, but you will end up with two results, one from getting the header out, and one from decoding the body, which you will need to combine with `Result.map2` <http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Result#map2>?
Thanks for the Ellie! I'll give that a shot later (regrettably Elm isn't my day job yet... :slightly_smiling_face: )
:slightly_smiling_face:
How would I go about this?
without additional information, that will be difficult to answer. It is possible that writing a "generic" pipeline like this might be the wrong abstraction.
<@U66RFDZ8F> so, you'd want to put more stuff after that pipeline, correct? in which case you'd just do `test yourFunction |&gt; theRestOfThePipeline` I suppose
I'm using `type Msg = PlanetMsg (Result Http.Error String)` to capture http response as string. I would like to get Response object. <http://package.elm-lang.org/packages/evancz/elm-http/3.0.1/Http#Response> .  I tried a few options but nothing worked. Anyone has anything they can point me to.
yes <@U4872964V>
let me try that
it really does come in waves... <http://package.elm-lang.org/packages/lukewestby/http-extra/2.0.0/Http-Extra>
that works <@U4872964V> didn't realize it was just a pipe lol
Thanks jonf. Will give it a try.
