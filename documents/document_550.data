U2U94G0QG : though personally I prefer <https://ellie-app.com/new?vim=true>  :wink:
U6DQCTZT2 : <@U14Q8S4EM> thanks!
U23SA861Y : <@U6DQCTZT2> what value do you want out, there are conversion functions to give you an number in a relavent unit
U6D3ERLA1 : Hmmm well this seems to do what I want (map a coordinate and key to a grid) but it seems like too many args for the inner function not sure if there is  a better way```
mapGrid f grid =
    Array.indexedMap (mapRow f) grid


mapRow f y row =
    Array.indexedMap (mapDatum (f y)) row


mapDatum f y x =
    f x y


putY p k x v y =
    if p.x == x &amp;&amp; p.y == y then
        k
    else
        v


debug =
    mapGrid (putY { x = 0, y = 0 } "*") initBoard
        |&gt; log "Map"
```

U6DQCTZT2 : <@U23SA861Y> Random.initialSeed needed to be an Int and so I used the round function. Was looking for something like Time.toInt, but just me being stupid ;D
U23SA861Y : right, if you weren't using the actual time value then thats ok.
U23SA861Y : so you went with array of array huh?
U6D3ERLA1 : y
U4H406NET : I am trying to construct a Result object with an error and Result.Result tells me that Result does not expose Result (Result by itself tells me that Result is not a variable)  How do you create a Result?
U23SA861Y : well, because this putY if you used a dict would just be `Dict.insert (x,y) value grid`
U5ABF3BH7 : I have a designing question. In my view, I have different persons ( of Person.Model) used in my Model, for example model.caller, or as element of the list model.other People
Each person has a list of roles of  
```
type alias Person = 
  { firstName : String
  ….
 , roles : List PersonRole
} 

type PersonRole = 
   Informant
  | PrimaryPurchaser
  | NextOfKin
  | SurveyRecipient
  | CoPurchaser
```
 
The different roles are presented as checkboxes in the personview person. 
Some roles can go to only one person some have no restriction. For example, there can be only one informant , some roles like nextOfKin don't have that restriction.
so you can have ``` person1.roles = [Informant, NextOfKin] person2.roles= [PrimaryPurchaser, NextOfKin]```  but not ```person1.roles = [Informant], person2.roles = [Informant, NextOfKin]```
so Informant can be used only for 1 person.

I have been going back and forth with different ideas on how to model that and would appreciate advice. 
One idea is to create a dict of unique roles in my model
uniqueRoles = { (Informant, Maybe Person.Model), (PrimaryPurchaser : Maybe Person.Model), …}

On a person view  the checkbox ‘informant' needs to be disabled if the person is not the informant, but it needs to be enabled if the person has that role or no informant has been selected yet, I am thinking of adding  ```[disabled (Dict.get Informant model.uniqueRoles == Nothing || Dict.get Informant model.uniqueRoles == person)]```

It seems a bit much, any other idea?

U6D3ERLA1 : <@U23SA861Y> I'm translating from an existing js app so the array map (pun intended) pretty directly I'll look at the Dict implementation as well I'm just trying to get some chops so not much to lose trying a couple ways
U23SA861Y : if they are arrays you should be able to index directly
U23SA861Y : setting a single value via a map is a bit clunky
U6D3ERLA1 : ha tru
U5ABF3BH7 : I meant to write ```[disabled not (Dict.get Informant model.uniqueRoles == Nothing || Dict.get Informant model.uniqueRoles == person)]
U6D3ERLA1 : Assuming however I wanted to operate on the entire grid, I'm guessing it is bad practice to write functions with so many arguments
U6D3ERLA1 : as the inner function has
U6D3ERLA1 : I guess if we were operating on the whole grid I could strip a couple args off (for finding the indexes...)
U23SA861Y : so typically your map would just take the value and you may have and indexed map of the form `(Int,Int) -&gt; value -&gt; newValue`
U5ABF3BH7 : sorry for the long explanation, I am trying to give the context and it ends up being a bit long
U23SA861Y : it might be that the role of the person belongs in where the person is placed in a higher level datastructure
U5ABF3BH7 : <@U23SA861Y> can you explain more what you mean?
U23SA861Y : ```{
informant: Maybe Person
,nextOfKin : List Person
,etc
}
```

U23SA861Y : rather then type be a property of person


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
