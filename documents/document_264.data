U5ABF3BH7 : <@U236M9FH9> Thanks!
U5HM74BD0 : I have a json string I need to decode. It's complex enough (in my mind, anyway) that I don't understand how to use Json.Decode with it to break it down into an Elm model. Its structure is something like this:
```{playerNames: ["Fred", "Barney"], games: [{date: "May 20", stats: [{ab:2, hits: 1}, {ab: 3, hits: 0}]}, {date: "May 27", stats: [{ab: 1, hits: 1}, {ab: 3, hits: 1}]} ]}```

I'm not sure how to begin to decode this. Can I use Json.Decode on its own or should I use the elm-decode-pipeline package, or something else?

U153UK3FA : <@U5HM74BD0> you can use Json.Decode on it's own. When writing a Json decoder start by writing a decoders for the child nodes and compose those together to create decoders for the parent nodes
U153UK3FA : eg. start by making a decoder for `{ab:2, hits: 1}`
U5HM74BD0 : <@U153UK3FA> So begin with my records?  Yes, okay.  Then how do I use the result of that with its parent?
U153UK3FA : once you have a decoder for `{ab:2, hits: 1}` you can pass that decoder to <http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Json-Decode#list> and get a decoder that decoders lists of `{ab:2, hits: 1}`
U5HM74BD0 : Okay, sounds good. Let me give it a whirl.  Thank you.
U153UK3FA : <@U5HM74BD0> note that what you pasted above isn't valid json since the field names need to be quoted
U5HM74BD0 : Yes, you're right. I was short-cutting it with my representation.  I do have valid json with quotes in the right places.
U153UK3FA : alrighty, I just didn't want you to get frustrated trying to write a parser for invalid json
U5HM74BD0 : Thanks for that.  Here's the actual json I'm working with:```{"playerNames":["Fred","Barney"],"games":[{"date":"May 20","stats":[{"ab":2,"hits":2},{"ab":2,"hits":1}]},{"date":"June 3","stats":[{"ab":2,"hits":2},{"ab":3,"hits":3}]},{"date":"June 4","stats":[{"ab":2,"hits":2},{"ab":2,"hits":2}]},{"date":"June 10","stats":[{"ab":2,"hits":2},{"ab":2,"hits":0}]},{"date":"June 17","stats":[{"ab":2,"hits":2},{"ab":3,"hits":2}]},{"date":"June 19","stats":[{"ab":0,"hits":0},{"ab":4,"hits":4}]},{"date":"June 20","stats":[{"ab":2,"hits":2},{"ab":0,"hits":0}]}]}```

U153UK3FA : You can also paste that in to <http://eeue56.github.io/json-to-elm/> and you'll get a generated parser. But it's good to write one yourself when learning so you actually understand how it works.
U5HM74BD0 : No doubt.  If I'm pulling my hair out over writing my own after a couple days, maybe I'll resort to that. Thanks for the link.
U5HM74BD0 : I wrote the encoder piece fine on my own, so you'd think I'd get this decoder stuff better than I do!
U153UK3FA : it's good for pasting in small bits of json, eg. paste in just `{"ab":2,"hits":2}`
U5HM74BD0 : Yeah, that makes sense.  I'm brand new to functional programming, and so I'm still shifting my mind a bit.
U5HM74BD0 : How can I convert a list of 2 strings into a tuple?
U236M9FH9 : <@U5HM74BD0> `List.map2`: <http://package.elm-lang.org/packages/elm-lang/core/latest/List#map2>
U236M9FH9 : Or `List.Extra.zip`: <https://klaftertief.github.io/elm-search/?q=List%20a%20-%3E%20List%20b%20-%3E%20List%20(a%2C%20b)>
U5HM74BD0 : <@U236M9FH9> Doesn't `List.map2` give another List back?  I want ["apples, "grapes"] to become ("apples", "grapes").  What am I missing?  Maybe I'm up too late at night. Sorry if this is obvious.
U5HM74BD0 : (apples and grapes are unknown strings at compile time in my case)
U236M9FH9 : Ah sorry, I read 2 lists, not list of 2
U236M9FH9 : Really you're list of 2 should be a tuple the whole time, otherwise you'll have to return a `Maybe (String, String)` instead, but you write a function that uses a `case ... of ...` to match `x1 :: x2 :: []` which is a list of 2 items. Return a `Just` for that and `Nothing` for all other cases(you can use `_ -&gt; ` after the 2 item pattern to match everything else).
U5HM74BD0 : Hmmm. I've got a json string which comes in as a list of two strings, but my model represents those things as a tuple.  Okay, let me try what you're suggesting.
U236M9FH9 : If you're starting with a list because of JSON decoding, you should be able to skip the list using something like `Decode.map2 (,)` along with `Decode.index`.
U5HM74BD0 : Oh! That'll be much better, yes.
U5HM74BD0 : I feel like my model should have represented these things as a 2-item List to start with. Not sure I'm buying much by having these stored in a tuple.
U236M9FH9 : A tuple gives you a guarantee about the number of items. With a list you'll find you'll have to handle cases of empty lists, 1-item lists, &amp; 3+ item lists as well as the 2-item list
U236M9FH9 : Like that function above would be:```
listToTuple list = case list of
  x1 :: x2 :: [] -&gt; Just (x1, x2)
  _ -&gt; Nothing
```
If you'll be pulling the values out of the list often, you'll probably have to repeat the above a lot, or handle a lot of `Maybe`s

U5HM74BD0 : Thank you for the help. I'll give it a shot tomorrow.
U5WD7T0HF : Good Night everyone hope everyone is doing okay.
U5T739RFW : jonf: We should have a numpy like converntion. in scipy/numpy you always import a bunch of common modules using accepted aliases, so it makes examples lot terser. if I see np, I know you have done `import numpy as np`, and I need not ask what is `np`.
U5T739RFW : <https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt#overview>
U5T739RFW : I always import Json.Decode as JD, Json.Decode as JE, RemoteData as RD and so forth. I feel it would be good if we had a community maintained page documenting a convention.
U5GH4NB98 : hey! for some reason my time travel debugger stopped popping up at app start at some point... i still `use elm-make --debug` is there a way to start it from console or something like that? or does anyone have a clue why my time travel debugger could have stopped starting?
U41NK9BM4 : Do you see the "tab" on the bottom right of the page?
U41NK9BM4 : Or does it fail to expand when you click the tab?
U5GH4NB98 : the tab is missing! it was there at some point (expanded and in tab form) but now even after recompiling/restarting computer it does not shop up anymore. application works still fine (sorry for late answer)


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
