```
I meant 0 or `Nothing` dur.
Use `next` val if present, otherwise use `num`
looks like maybe you could use` Maybe.withDefault` <@U6D3ERLA1> ?
<@U5P4FLYLE> <https://ellie-app.com/3VgrGzcLNJKa1/0>
If you want 0, just pass it to `Maybe.withDefault 0`
<@U6D3ERLA1>
If the second paramater is nothing I want to use the first paramater
(sorry about the var names…)
But this creates a type mismatch
alternatively, you can build up the number of previous occurences _while_ folding (like so: <https://ellie-app.com/3VgsQX5q9Nga1/0> )
Hello! I am trying to figure out, what would be the easiest way to load SVG files inline from external SVG files during runtime (we use inline to apply different styles to different shapes inside the file)? We were using ng-include for that purpose before (our app is written in Angular)... I would appreciate any help on this matter
<@U6EV3H0N7> Maybe I'm missing something - it seems like the `nextLargest` call in the  `in` section uses a number value not a maybe value, causing a type mismatch
(working with Maybe is still breaking my brain a little bit)
I solve this with recursion, but maybe there is another way? I found List.indexedMap, but not sure what to do with it. Example is awful.
Hi, folks. Long time no see. But I'm trying to brush up my Elm once again.
Can anyone share some tips on navigating through Elm code?
I'm trying to go through <https://github.com/rtfeldman/elm-spa-example>
<@U31FGNWCT> can you use `List.map` on the first (length - 1) elements of the list and do something special with the last one?
[1]: <https://github.com/rtfeldman/elm-spa-example/blob/master/src/Views/Page.elm#L58>
ahh, <@U6D3ERLA1> missed that! So add a `Just` to convert the `Int` type to a `Maybe Int`
oohh ok lets see
<@U3JSGAK7B> <http://package.elm-lang.org/packages/elm-lang/html/2.0.0/Html-Lazy#lazy2>
You can tell it comes from `Html.Lazy` because of the explicit import at the top of the file: <https://github.com/rtfeldman/elm-spa-example/blob/master/src/Views/Page.elm#L10>
- profit
hmmm... I see...
<@U31FGNWCT> correct :+1:
Okay. Seems easier than recursive way. Maybe there is less verbose one? Some function?
is there a search bar that I can use?
as I understand Html.Lazy is inside the `html` package
correct
There is <https://klaftertief.github.io/elm-search/>
but how do I get from Html.Lazy to `html`
hmmm... nice
I also use a combination of Alfred + Dash (on macOs)
thanks, <@U0LPMPL2U>! I guess <https://klaftertief.github.io/elm-search/> is exactly what I was looking for
here is the search I want, for instance: <https://klaftertief.github.io/elm-search/?q=lazy2>
<@U0LPMPL2U> Thank you! Found drop and take functions, they are awesome for the issue.
I have a view in another file that has a submit button in it. When that button is clicked I need to deal with it in the parent file. I guess I need to listen to a msg from the child file somehow, right?
Hi! Does anyone have examples on how to use elm-validate, or other validation examples (like phone number length, social security numbers, email format, etc..?
are there any tutorials?
each day, elm makes less sense to me
<@U5E3DU81K> That is probably because you are coming with a lot of ideas that work for other paradigms, but don't hold up here and you are just discovering that.
<@U45C5R6QP> You either need the function which makes that submit button take a `Msg` as a parameter or you need to wrap the data type the submit button is using via `Html.map`
got it
