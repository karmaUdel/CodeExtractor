```
My goal is to use fuzz testing against the combination generator, but it falls over
I'll paste in my tests
<@U6907LQ6S> Are you sure you aren't just making a list that is too large?
The list should be at most 50^5 which isn't all that big
312 million
maybe it is :slightly_smiling_face:
I'm in the middle of converting from js to Elm and I've got no idea how to debug memory problems in Elm
I'm not sure how to help with that, but in trying to understand your code I ended up refactoring it: <https://ellie-app.com/3V6GPCn5Zbna1/0>
I think I'm on the edge of memory limits, as the actual max number of groups is 5, but with the reduced record size for the example it runs fine
Thanks for the refactor <@U48AEBJQ3> , I'll check it out.
I think I have a solution though: the business requirement is to prevent generating a large number of combinations. I can check this before starting any recursion which should keep memory pressure to a minimum.
Thanks all for the help :slightly_smiling_face:
Hi, is there a good tutorial floating around about how to write an autocomplete that queries a remote JSON API? I saw <http://package.elm-lang.org/packages/thebritican/elm-autocomplete> but it doesn't have any examples of using it with remote data, and besides, project is looking kinda abandoned. Google isn't turning up much for me either. Would appreciate any pointers!
Working on a solution but thought I'd ask if anyone's done it.
<@U3VCFFH1S> do a String.split and List.map the strings to Html
<@U1RJZ6SEL> what is your use case? i guess you could use elm-autocomplete with a textfield for the queries, and each time the user changes the query you send an api request. when you handle the response you then build up the list of items you feed into the view and update functions of autocomplete
What is considered the "Elm" way for handling file uploads?
Depends a little on what you need exactly. If you're handling images, for example, it's super easy to use ports to get your the base64 encoded image: <https://ellie-app.com/3qpgdbQFFfqa1/1>
which is, in the end, just a string you can embed in whatever JSON you send to your server
handling arbitrary uploads is a little more complicated, as there is not `Blob` type in Elm
I need to upload wav files.
Hey I remembered your question when I was watching this video. Perhaps contact this guy if you have not figured out how to use the one runtime. <https://www.youtube.com/watch?v=U_5XKPe4fZM&amp;list=PL-cYi7I913S8cGyZWdN6YVZ028iS9BfpM&amp;index=13>
This lets me keep using `text` in my view and the highlighting automagically works. downside is the parts I want to do this to have to actually be in the view's scope.
