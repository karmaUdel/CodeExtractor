```
like this?
I think it's quite nice
in your class definition
`self.name` sets an attribute for every new instance already
I know but I think it it's more explicit
What would I use if I would to serialize SQLAlchemy model result?
would like to be able to encode the results as JSON or cast it to a dict
Is `marshmallow` any good or is there anyway to it with pure python easily? Can I implement a special attribute like `__json__`?
marshmallow is the tool to go
what should I use for web dev?
Flask? aiohttp?
oh, it's up to you completely, there are too many options for one to be considered the only way :slightly_smiling_face:
I'm searching for something that can handle async methods since I'm going to fetch data from external HTTP APIs
Can I do async I/O in Flask? Woud like to use async/await since I'm already familiar to that concept
But Flask can play nicely with WebSockets for example
Hmm
"However Flask is just not designed for large applications or asynchronous servers. Flask wants to make it quick and easy to write a traditional web application."
No you can't really do asyncio with flask. 
What happens if I try? :grin:
There's some gevent based options for flask that makes it "async", but generally it's considered best to have a background worker do asnyc things (celery or rq)
so I would be better of to use aiohttp?
You can combine sync with async by using `loop.run_until_complete`. it will work locally, but once you run in thread mode (prod) you wont have an event loop.
don't want to use any queuing
<@U63VCB8AH> if making lots of remote calls in parallel is required for returning the response, i would use an asyncio framework. Sanic is flasklike
Aiohttp is also a good option. 
Seems nice
Then I just need to figure out how to get JWT auth working :smile:
jwt-extended!
that may work with the Sanic API
<@U63VCB8AH> better have `to_dict` method, so you can serialize it into more than just json
Say, yaml
I'm considering how to make this part python 2 friendly
it works, but I have to do it in a couple of places in my script
what is the proper way to make this code work in both python 2 and python 3?
The quick and easy way is to just make a function that gets the basename from your string.
Hi! What TUI library would you guys recommend learning? I want to make GUIs for the terminal but I dont want any new windows opening
easy or hard? :stuck_out_tongue:
Whatever really, as long as it gives me the oppertunity to develop some kind of gui for an application for the terminal :slightly_smiling_face:
<https://github.com/pfalcon/picotui>
There was another project like that but I can't find it!
Very similar, with windows and common elements like checkboxes...
If you want something more barebones, then good old `curses`, or `bearlibterminal` for a modern approach, though it's aimed at games
Thanks, will check them out!
