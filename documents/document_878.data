U0NRYQNAZ : if you're using django why not use DRF?
U686SVA9X : I got it install, thats how am getting the records to angular, but its the POST request i haven't grasp with it has yet
U5U4MSHC1 : I use api_view decorator for post in function based views
U686SVA9X : ill look into that
U663SK5K2 : now i want to understand this code and also want to make such program even more simple which i can understand
```
"""
Create a program that asks the user for a number 
and then prints out a list of all the divisors of that number. 
(If you don't know what a divisor is, 
it is a number that divides evenly into another number. 
For example, 13 is a divisor of 26 because 26 / 13 has no remainder.)
"""
while True:
    try:
        n = int(input("Please choose a number to divide: "))
        list = [d for d in range(1, n + 1) if n % d == 0]
        print("The divisors of {} are: \n {}".format(n,list)) if len(list) &gt; 2 \
            else print(str(n) + " is a prime number")
    except ValueError:
    	break
        #print("Very funny smartass. Now give me a number.")
```

U65CTNMTR : I would presume you'd want to use the range `(1, n)`, the round brackets mean non-inclusive, so if `n` is 5 you'd want to test the in the range `2,3,4`, versus what you have `[1,n]` which means inclusive, so the range `1,2,3,4,5`.
U65CTNMTR : As for simplifying it, it's already reasonably straight forward. Alternate approaches could be changing your `list = ` statement to `filter(lambda d: not n % d, range(2, n))`.
U65CTNMTR : You'd also want to check that the input is a positive number, you can use `abs(n)` to ensure it's absolute
U65CTNMTR : And as an aside, don't shadow builtins. `list` is a builtin, and you're shadowing over that name with your `list = ` assignment.
U60KNBMPX : prime number factorization?
U5VGKQ2SY : I would drop the try/except block with:```
while True:
    num = input("Please choose a number to divide: ")
    while not num.isnumeric() or int(num) &lt; 1:
        # invalid input
        num = input("Very funny smartass. Now give me a number.")
```

U5VGKQ2SY : Whole thing maybe redone as:```
    num = input("Please choose a number to divide: ")
    while not num.isnumeric() or int(num) &lt; 1:
        # invalid input
        num = input("Very funny smartass. Now give me a number.")

    my_list = [divisor for divisor in range(num) if num % divisor == 0]
    print("The divisors of {} are: \n {}".format(num,my_list)) if len(my_list) &gt; 2 \
            else print(str(num) + " is a prime number")
```

U67NP4A0K : Anyone up?
U5U4MSHC1 : Yup.
U67NP4A0K : Could you try to answer me a question please?
U5U4MSHC1 : Yes if it is related to python.
U13L8J76J : <@U67NP4A0K> <https://mikeash.com/getting_answers.html>
U67NP4A0K : I'm currently learning how to use modules and call other files. It's is possible to have a file named(main.py) and call another file(ship.py). And from ship.py execute a function in main.py Sorry if I'm not explaining clear enough.
U67NP4A0K : From the function main.py I want to execute some code of the file ship.py and also I want to do it the other way, from ship.py I want to execute functions of main.py
U13L8J76J : <@U67NP4A0K> this is called a 'circular import', and that's generally prohibited
U67NP4A0K : Oh


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
