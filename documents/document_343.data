```
You want all `Currency` to be created by external code calling `intToCurrency`
Then, you want to support adding them together
There is no need to expose the constructors
<@U5QJW0DDE> An example I like is you could have a `Url` data type, you want only validated urls, so the only way to construct it is using a function which validates it first. If the constructors were exposed, one might be working with invalid data.
That's a good one, too
<@U48AEBJQ3> i see. you mean, the function which builds your Url is accessible, and the Urls' constructors are accessible only to that function's definition, but they are not accessible in the place where you call that function
right
any idea why this page says to avoid installing Elm globally, and only do it per project: <http://www.romanzolotarev.com/elm/>  &gt;"if you are working with multiple projects or with other developers, avoid installing Elm globally."
maybe so you can work with different versions on different projects?
different versions of the elm language?
yeah
oh ok
maybe? I haven't read that page, though. ¯\_(?)_/¯
he made that statement but did not provide a reason why
do i understand correctly that the only place you'd write a type variable would be in the declaration of a union or record, but nowhere else?
Not sure what that measn <@U5QJW0DDE>
I write them in case statements all the time
Like
