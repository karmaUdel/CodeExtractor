U0FP80EKB : We call them coding nights, since “hack night” is a bit annoying of a term. :slightly_smiling_face:
U13H7FNDQ : <@U0FP80EKB>, nice, I agree!
U0F7JPK36 : <@U13H7FNDQ> <@U0FP80EKB> there was a specific reason for this that i saw in a tweet once i'll see if i can find it
U0F7JPK36 : found it: <https://twitter.com/erinrwhite/status/707956467224190976>
U1QDHAF61 : Hello, I am using json over websocket and it works fine as long as packet is below around 4500 bytes. Then it gets broken into two fragments. Is it expected?
U1QDHAF61 : Should I implement logic of de-fragmentation?
U1QDHAF61 : Yes, I added logging:
U1QDHAF61 : socket.addEventListener("message", function(event) {		     _console.log('ws msg: ',  event.data);_

			_elm_lang$core$Native_Scheduler.rawSpawn(A2(settings.onMessage, socket, event.data));
		});

U1QDHAF61 : and see that message is fragmented on low layer
U13H7FNDQ : Thanks for sharing! In the process of swapping the SF user group to <@U0FP80EKB>'s suggestion
U0JQWAETG : Hi! Do you have a better way of expressing something like this:```
encoder_value =
    case record.logo_ref of
        Just value -&gt;
            Json.Encode.string value

        Nothing -&gt;
            Json.Encode.null
```

U3LUC6SNS : <@U0CL0AS3V> , <@U0FP80EKB> Excellent advice on starting an Elm user group -- I will definitely go for the coding nights format.  Thanks!
U0U6ML22H : <@U0JQWAETG> Maybe.map |&gt; Maybe.withDefault
U0U6ML22H : ```encoder_value =
    record.log |&gt; Maybe.map Json.Encode.string |&gt; Maybe.withDefault Json.Encode.null
```

U0JQWAETG : <@U0U6ML22H> yes, I think that would work, it looks better
U0JQWAETG : thanks!
U0U6ML22H : sure :smiley:
U0JQWAETG : <@U0U6ML22H> Maybe.map is passing the `Maybe String` to `Json.Encode.string` when it expects a string
U0U6ML22H : nope
U0U6ML22H : `Maybe.map f v` means if `v` is `Just x` it returns `Just (f x)` otherwise it returns `Nothing`
U0JQWAETG : I get this:```
The right side of (|&gt;) is causing a type mismatch.

30|             record.logo
31|&gt;                |&gt; Maybe.map Json.Encode.string

(|&gt;) is expecting the right side to be a:

    String -&gt; a

But the right side is:

    Maybe String -&gt; Maybe Json.Encode.Value
```

U0U6ML22H : did you write the `Maybe.withDefault` part?
U0JQWAETG : yes


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
