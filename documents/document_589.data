```
not so hard to handle
I don't think the inconvenience would arise for the cases where you actually want to handle the corner case but the ones where you know that the corner cases cannot happen, because you have prepared the input data yourself. Like "ok, i need the square root of 2 here. But instead of just writing sqrt(2) i have to do a pattern matching because in principle sqrt can return Nothing"
Allow me to drop into your ongoing conversation. It's very interesting indeed. On a formal note, I think `Result` would be a better candidate than `Maybe`. Then encapsulating any arithmetic expression in it wouldn't sound so crazy - after all it is a result.
Coming from that, perhaps it would be possible to make number literals be a sugar for `Ok number`.
<@U69N2J6AY>, well, type safety is sometimes a bit inconvenient, for sure
And then user would have to map the `Result` only once, when she want's to use the ehem... result of the computation.
making every number boxed seems a bit over the top though
Ok, actually I came here with a different question and got carried away by your discussion.
^^
I would actually love having better types for sqrt and stuff, so I would like to be inconvenienced there :slightly_smiling_face:
Is there a way of getting all types exported from a module at runtime?
<@U2D7NUGS1> what do you mean at runtime?
you want a list of the types?
Yes, for starters.
With the goal of introspection?
I want to generate some code based on types I have.
Yes, introspection.
there is currently little support for introspecion
Would you happen to be generating backend code to map to your front end models?
I will make an exploration after 0.19 is out, though: <https://github.com/norpan/elm-dynamic-types> (ignore the name) :slightly_smiling_face:
there are a number of tools that parse Elm code though and does things
<@U681TBBUP> I'm entertaining a similar idea.
<https://hackage.haskell.org/package/elm-export> this is probably a good place to start
Oh, cool.
Currently also very interested in the idea
there is <https://github.com/Bogdanp/elm-ast>
<@U2D7NUGS1> I would argue that the backend code should be generating the front end code as the backend *must* contain the implementation for data persistence
Depends on your goals though
<@U681TBBUP> agree. Together with <@U0ZESPUAX> we were just discussing writing Elm code that would drive a GraphQL server inside ArangoDB (Foxx).
So this would be a backend code.
We would just use it directly on the client side too.
Maybe it would make sense to use the GraphQL schema to generate the models?
As it is the contract
There already is code for doing that, afaik
Well, it's the schema definition that we want to use Elm for. Standard way is to write JS code :fearful: that creates the schema. We were thinking about ways to avoid it.
Like maybe defining models in Elm and generating JS from that.
Or using ports.
<@U3SJEDR96> can you elaborate?
<@U4872964V> elm-ast looks very promising. Thanks for pointing to it.
Hmm... everybody went silent. Does it reflect on the craziness of the idea? :upside_down_face:
It’s hard to say. I would think that the api code on the server would also be responsible for generating the schema. Having the schema generated by the client seems a bit odd.
<https://github.com/jahewson/elm-graphql> this one generates Elm from graphql schema definitions, afaik
<https://github.com/jamesmacaulay/elm-graphql> and this one is a DSL for graphql queries in elm
Thanks <@U3SJEDR96> , I've seen that.
To clarify, the Elm code we are considering would be server side.
Oh, so you are using Elm to create the api
that’s something else
never seen that
ArangoDB has this thing called Foxx. It basically allows one to create an API inside the DB.
It seems very nice for quick development.
The problem is... the code has to be JS.
doesn’t it generate the schemas too?
I think so. We just gave it a first look today.
Here is a quickstart for GraphQL: <https://docs.arangodb.com/3.1/Manual/Foxx/GraphQL.html>
So, we are considering using it, but we don't want our backend to be written in JS.
We are already building client in Elm so we though that maybe it's an option to use it inside Arango.
It's just an early idea that we are playing with.
One approach would be to define models for our app, and then use it on server side to generate schema and on client side to generate queries.
So the models would actually be an external dependency for both sides.
sounds…interesting :slightly_smiling_face:
Thank you. Somehow I sense an euphemism in your message :slightly_smiling_face:
Seems quite sketchy for migration
What is the max safe `Int` that can be used in Elm?
<@U3L8MM10T> the same as javascript, but I do not know what it is
<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER>
`2^53 - 1`
indeed
also - <http://package.elm-lang.org/packages/elm-community/basics-extra/2.1.1/Basics-Extra#maxSafeInteger>
Also relevant: <http://package.elm-lang.org/packages/gilbertkennen/bigint/latest>
I made a channel to discuss the Sketch-to-elm exporter, <#C63E5NXL5|sketch>, feel free to join :slightly_smiling_face:
Hey there. I'm getting a weird error -- `Uncaught TypeError: Cannot read property 'appendChild' of null`. Looks like the `debugRenderer` is being passed a null `parentNode` as an argument.
Anyone have a sense as to what the issue is here?
It's happening on app initialization in my `Main.elm` file...although it's unclear to me what's up/wrong.
does the dom node exist at the time elm is getting added to it?
<http://faq.elm-community.org/#why-does-my-app-fail-immediately-with-a-console-error-of-uncaught-typeerror-cannot-read-property-appendchild-of-null>
Yup, I'm almost certain that's it. Sorry about that. #RTFFAQ
I noticed elm-live hasn't been updated in like half a year -- does  it still work pretty well? Are people using it?
It does what it says on the tin :slightly_smiling_face:
Is there a `Cmd.map2`? I'm looking for a function with a type along the lines of `Cmd a -&gt; Cmd b -&gt; (a -&gt; b -&gt; Cmd c)`.
Would `Cmd.batch` do? or do you need to trigger a single `Msg`?
How would `Cmd.batch` work? I need the result of two `Cmd` values (with different types) in order to create a third `Cmd`.
Among other issues, `Cmd.batch` seems to require that `a` and `b` in my type signature would be the same.
Or am I missing something?
Hmmm, why do you have two different `Cmd` types?
I need to do two fetches to the server to return two different JSON types, which I then parse relevant parts of and combine to create the actual model type that I want.
So I've got a `Cmd (Result Http.Error a)` and a `Cmd (Result Http.Error b)` and a function of type `a -&gt; b -&gt; c`.
I want to create a `Cmd (Result Http.Error c)`.
Normally you always want to deal with `Cmd Msg`. Wrap the results with a `Msg` when using `Http.send`
It sounds like you're saying `Http.send identity myRequest` right now?
You probably want `Http.send SomeMsg myRequest`
You can handle this with `Task`s
Use `Http.toTask` on your `Request`
Then `Task.map2` and finally `Task.attempt`
ugh I don't think I understand the purpose of these generic types in Elm
<@U2XRG0UKA> -- Perfect. Thanks.
when I see stuff like `Cmd msg` it feels like I can pass w/e I want buthat seems to be false
<@U40QW928G> you can pass it whatever you want but you'll be restricted to what the implementation of the function can be
You can, as long as you give the same type for `msg` in the whole signature
is not valid because there's on guarantee that the input list is a list of numbers
is _not allowed_ because the signature says the first argument `a` must be of the _same type_ as the values in the list `List a`.
`a` in the signature means "whatever" but all the `a`s must be the _same_ "whatever" if that makes any sense :slightly_smiling_face:
Any recommended book to learn Elm?
The only book for Elm isn't released quite yet
How is Elm in Action? 
That's the one I'm talking about
"MEAP began July 2016 Publication in Early 2018 (estimated)"
It will probably be great. Feldman is very articulate and he seems very sensitive to the way people learn.
You can already dive into the chapters that have been written, tho, and totally should!
any reason why Random does not have a `toTask`?
You can already combine and chain random generators with `mapN` and `andThen`
I suppose it might be useful if you wanted to combine a random generation with a totally different type of task?
such as generate a random number andThen make an HTTP request based on that number
I don't think it _can_ work as a Task, or at least not the way "random as a cmd" works right now, which is using an effect manager which keeps track of the seed.
You could use Time.now to create a seed and create your own random-as-a-task, tho
(which is how Random.Pcg provides the `generate` function without being an effect mgr)
that seems to be a in implementation detail though
task by it's nature is sideffecting, it shouldn't really matter HOW it's side effecting
And yet, it does matter. Task and Cmd aren't interchangeable..
I suppose using a seed is one way to do it
yes, but they are a different abstraction
it was more the `andThen` behaviour I was thinking about
relevant discussion, should probably add to the FAQ as it's come up a few times recently:  <https://groups.google.com/forum/#!searchin/elm-dev/random$20task$20cmd%7Csort:relevance/elm-dev/MEBzD3f7Bq8/ojpRsjObDQAJ>
well <@U2SR9DL7Q>  problem got me thinking about it
o.o
I was just about to put a reminder on this convo to read through later
seemed relevant
I'd be glad to add something to the FAQ about this. But I don't understand this conversation well enough to write it myself.
<http://codetidbit.com/#view/snipbit/596d2ebf7890d775c05191f7/introduction>
that's my situation too :slightly_smiling_face:  I mean I think I understand it in principle but haven't used the Random module much at all myself.
amilner42, looks useful, thanks
<@U0EQCDADA> I'll try to write something up and make a PR, prolly tomorrow
Does Elm have operator sections?
AFAIK it doesn’t
Just checking. (I personally don't care for them, but I reached for it and realized that didn't seem to work)
Is `hiding` considered a keyword in Elm?
I just got snagged on elm-format refusing to accept it as a variable name
`deriving` is also considered a keyword in elm-format, despite Elm not using it.
yeah neither of those exist in Elm; I would file a bug! (Also might be `elm-make` and not just `elm-format` - I'd try in Ellie to confirm.)
I figured it out by looking through the `elm-format` code, so I might as well just send a pull request.
Thanks :slightly_smiling_face:
Is there a way to query when a certain version of a package was published on package.elm-lang?
I've been looking into that, too. I happened across some code that seems to indicate that may actually become a query-able thing in a next version of the package listing, but currently the best I've managed is using the github api: <https://api.github.com/repos/zwilias/elm-tree/tags> to get the published tags, and inspecting the relevant commit to get the data. This is only an approximation, tho - a repo can be tagged before publishing, and a tag can be repushed after publishing..
Hey where to look for elm jobs? I took a jab at major job boards, couldn't find much. Is elm not industry friendly yet?
<@U69DMBMEU>  <#C0LUAGWRK|jobs>
<@U69DMBMEU> are you in the <#C0LUAGWRK|jobs> channel?
Check the pinned messages
No I was not in <#C0LUAGWRK|jobs> channel yet.
Thanks :slightly_smiling_face:
I'd rather say the industry isn't terribly Elm-friendly *yet*
I think prospects are good, worth betting on it.
Is is possible to "chunk" your elm code, so only parts are downloaded that are needed for the app. Like if you have 1000 pages then the elm code will become big. But most of the users only visit a few sections then you only preload the most common pages/code
i hope this idea is clearly explained haha
<https://github.com/elm-lang/projects/blob/master/roadmap.md#how-do-i-make-a-single-page-app> :slightly_smiling_face:
Ohw nice thank you <@U3SJEDR96>
so, I think the error message is wrong here: <https://ellie-app.com/3MwPWRydszfa1/2>
apparently, I cannot create a Dict from a `List (Date.Date, Float)`, which, why not, but the message is not at all that... is it?
well, it depends on how you look at it I suppose, there is certainly room to clear away cruft and say that the mismatch is that `Date.Date` is not `comparable`
It's not _wrong_. It's not super clear, but it's not exactly wrong :smile:
but yeah, `Date` isn't `comparable`
I figured that was the problem, but certainly not thanks to the message ^^
(btw, Date could totally be comparable ^^)
The Elm compiler generally has such good error messages so you get disappointed at messages like this, but coming from Haskell this message is super clear :slightly_smiling_face:
"The following difference equation has no solution in the category of small Haskell types: ..." &lt;- the typical Haskell error message.
^^
augustin82: if it were special cased - sure. But special casing = more magic, and that's not always good, either :wink:
and the json looks something like `{"play": "foobar"}` or it could be `{"say": "baz"}`
where `verb` would be either `play` or `say`
decode it as a dictionary
that, or `keyValuePairs string |&gt; List.map (uncurry OpeningHours)`
yes that is better. the dict approach will give problems when using the same key for multiple values
interesting, do you have an example of using `keyValuePairs` with a decoder <@U3SJEDR96>
there is a `Decode.map` missing I believe
urrgh, yeah, there is :smile:
<@U37HUSJ4R> funny, I'm writing that kind of decoder as we speak :smiley:
