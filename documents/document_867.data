U663SK5K2 : Thanks
U5U4MSHC1 : I would prefer a :taco: :wink:
U663SK5K2 : <@U5U4MSHC1>  sir now i am doing this exercise
Use the dictionary, port1 = {21: "FTP", 22:"SSH", 23: "telnet", 80:
"http"}, and make a new dictionary in which keys become values and values
become keys, as shown: Port2 = {“FTP":21, "SSH":22, “telnet":23,
"http": 80

my ans is --&gt;
port1 = {21:"FTP",22:"SSH",23:"Telnet",80:"HTTP"}
port2 = {}

for v,k in port1.items():
	port2.append(v + " : " + k)

but showing error

U65CTNMTR : Python supports dictionary comprehensions, `port2 = {value:key for key, value in port1.items()}` so iterating the `key, value` pair from each item of the dictionary, and switching their positions for the comprehension will work
U663SK5K2 : thanksthis is what i did 

res = dict((v,k) for k,v in port1.items())
print(res)

and works fine

U5ZPMJA06 : <@U663SK5K2> You can also use `zip` to build a dictionary from a sequence of keys and a sequence of values:
U5ZPMJA06 : ```ports = [21, 22, 80]services = ["ftp", "sftp", "http"]
port_to_service = dict(zip(ports, services))
print port_to_service
```

U663SK5K2 : <@U5ZPMJA06>  thanks i got it :smile:
U64MJCDNH : I need help, I have```while True:```
and I need to restart script for 2 hours
How to do that ?

U0LSCQQNR : crontab?
U64MJCDNH : no, this is python script witch provision some API request and I have ```while True:
            time.sleep(15)```
but I need to restart script every two hours because API security keys expires after two hours, and then I need to again generate that key

U0LSCQQNR : ok
U0LSCQQNR : then so have your script execute
U0LSCQQNR : and then use crontab to execute it from the OS every two hours
U0LSCQQNR : that would be the easiest way to do it
U64MJCDNH : yes, script is execute but I wish to restart itself scipt if posible :slightly_smiling_face:
U0LSCQQNR : ????
U65CTNMTR : ```from threading import Timer

def get_new_api_keys():
    # do some thing

t = Timer(20 * 60, get_new_api_keys)
t.start()
```

U65CTNMTR : you could set a timer for example to refresh your API keys
U1NSCAY6R : You're better off using `crontab` over keeping script running. Better chances of it running successfully because a long-running process can die for a lot of reasons
U65CTNMTR : or a slightly more complete example for a recurring timer <https://stackoverflow.com/a/24488061/69893>
U0LSCQQNR : if you really want to get complex, you can write a daemon
U0LSCQQNR : and hook into systemd or something to run
U65CTNMTR : other options could be using signals, and trapping `SIGHUP`, and using a cronjob to send a `kill -HUP $(pgrep APPNAME)`
U65CTNMTR : and have your signal handle in your python app to refresh API keys on receiving a HUP
U1NSCAY6R : at that point may as well just run the script with cron itself ¯\_(?)_/¯
U65CTNMTR : cron isn't going to kill your script if it runs perpetually, it'll just spawn another instance


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
