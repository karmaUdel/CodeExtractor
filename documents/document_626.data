U1AN4JRFV : yes i had thought of that as my last resort excuse
U23SA861Y : can't out put stuff in the img tag specifically to handle this case?
U1AN4JRFV : :slightly_smiling_face: should be handled on the server, uhm
U1AN4JRFV : <@U23SA861Y> please explain?
U0JFGGZS6 : (where it can be done in parallel etc.)
U0LPMPL2U : Have your server guarantee that all urls in the JSON are good
U23SA861Y : hmm never mind, I thought the brower would handle it different
U1AN4JRFV : <@U0LPMPL2U> sure, i am just stuck with the situation of having to dissect this app in a company-internal workshop scenario, and it's critical that it is a smooth experience for the success of elm with my company.
U1AN4JRFV : so the server side does not matter, somehow. because it's not going to change until then
U0LPMPL2U : OK
U23SA861Y : ```&lt;object data="avatar.jpg" type="image/jpg"&gt;
    &lt;img src="default.jpg" /&gt;
&lt;/object&gt;
```

U1AN4JRFV : this is probably about to not be elm-related much longer, as I might just have to not bring it up and explain the ways it could be solved, if it does
U23SA861Y : might work
U1AN4JRFV : oh, hey
U0JFGGZS6 : do you know exactly what the URLs will be ahead of time?  You could special-case the bad ones just for the demo
U1AN4JRFV : they are all ok now, it's just the code that will be iffy (and we are heavily looking at it together and there will be eyebrow-raising)
U0LPMPL2U : Typically, broken image links on the web are handled by the browser by showing some default "broken image" thumbnail
U0LPMPL2U : Are you trying to do something different?
U1AN4JRFV : good point
U23SA861Y : the html I posted allows you to do just that
U1AN4JRFV : i am about to try that, too
U23SA861Y : put the placeholder image in the img tag and the actual image from the json in the data field
U1AN4JRFV : i forgot to mention that it is an Svg.img... hope that won't matter...
U1AN4JRFV : `Svg.image` even, oh boy
U23SA861Y : umm, the placeholder is Svg.image or you have preloaded to data and generated an Svg.image
U1AN4JRFV : ` xlinkHref snack.imagepath`
U1AN4JRFV : crazy, i know
U0JFGGZS6 : haha fun fun
U0LPMPL2U : This is a table of users with broken avatars
U1AN4JRFV : yes, i like that best. i just remove the `onerror`-handler
U0LPMPL2U : would you want to now show a row at all if the image was missing?
U1AN4JRFV : thanks joel. that, and that it should be checked server-side, is good now.
U0LPMPL2U : or show a different image than the browser default thumbnail?
U1AN4JRFV : yes
U1AN4JRFV : that's what i did
U1AN4JRFV : ```unknownImage : Float -&gt; StringunknownImage size =
    let
        center =
            -(round (size / 2))
    in
    setAttributePx "width" (round size)
        ++ setAttributePx "height" (round size)
        ++ setAttributePx "x" center
        ++ setAttributePx "y" center
        ++ "setAttributeNS('<http://www.w3.org/1999/xlink>', 'href', '"
        ++ Config.fallbackImageUrl
        ++ "');"```

U1AN4JRFV : but I don't like it to be in the code when i show the gang
U1AN4JRFV : this is called `onerror` as an attribute of the image
U1AN4JRFV : but do you want to explain this to a beginner?
U1AN4JRFV : that's what i was going for and I got two solid outs. thanks again!
U0EUHKVGB : Yes, you are right
U0EUHKVGB : Think of the type of update syntax. It’s basically `record -&gt; record`, so it can’t change the fields
U4872964V : it can change the type of the fields, but not add fields
U4872964V : it’s a pretty arbitrary restriction though, but one that exists
U0EUHKVGB : That is a flaw rather than a feature


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
