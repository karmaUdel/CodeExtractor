U4872964V : If you are to have the Elm architecture, your reducer would also return something like the Elm Cmd
U4872964V : which could be “show the toast” for instance
U6AH7SUH5 : that would at least make it pure, but at the same time introduce even more boilerplate event classes
U4872964V : well, it’s hard to take “half” the architecture I suppose :slightly_smiling_face:
U4872964V : how do you handle fetching data for instance
U4872964V : let’s say i want to click something and then it should fetch me some data
U0CLDU8UB : I suppose you're looking for something more like the Redux side-effect libraries, and not really the Elm way?
U0CLDU8UB : (This is not a criticism, mind you, it might work out better in an OO language like Kotlin)
U4872964V : well, at least one of the Redux side-effect libraries does it the Elm way :slightly_smiling_face:
U4872964V : in any case, you should probably handle this in the same place where you handle for instance data fetching
U6AH7SUH5 : I'm not sure yet tbh. Currently I have an ADT of event types, that could be things happening in the UI or from outside (network) etc. I have various streams of events that I merge together to form a single stream, which then gets fed into the update function. Before merging everything into the final stream, I could flatMap the event that triggers a network action to the function that loads the data, which itself returns a stream of `LoadingStarted, LoadingFinished, FailedLoading` events
```
events = Stream.merge(
        view.sendEmailEvents,
        view.composeEmailEvents,
        view.refreshInboxEvents.flatMap(emailUseCase.loadEmails())
)  
```

That way I'll have all logic that changes the app state in the update Function and none in the stream. A significant disadvantage of this approach is that not all possible event types will ever reach the update function (since the refreshInbox event is already mapped to something else in the stream), which means I lose the exhaustion checking for ADTs in the update function

U4872964V : yes, well, it’s not easy to design these things I suppose. I would go for the Elm Architecture all the way, but that’s me :slightly_smiling_face:
U0CLDU8UB : <@U6AH7SUH5> Did you take a look at <https://github.com/glung/elm-architecture-android> ?
U0CLDU8UB : It doesn't look very polished, but maybe it has some ideas
U4872964V : implementing the architecture naively should not be much code, the tricky parts are making it fast :slightly_smiling_face:
U4872964V : something like react-native does
U4872964V : <https://github.com/zserge/anvil> perhaps
U3E6ZPM1A : I’m running into an issue using integer division:`378282246310005 // 10 == -1847312168`
I’m pretty sure it has something to do with using very large numbers with the JS bitwise or (`|`), which is what Elm uses under the hood. Does anyone have an idea of an alternative approach I could take? My goal is essentially to sum up all the digits of a number

U4872964V : yes, it truncates to 32 bits
U4872964V : if you expect less than 53 bits of int you can use Float instead
U4872964V : It’s a known issue: <https://github.com/elm-lang/core/issues/721>
U3E6ZPM1A : ah great I’ll try that approach
U4872964V : <http://package.elm-lang.org/packages/gilbertkennen/bigint/1.0.1/BigInt> is also available
U6AH7SUH5 : <@U0CLDU8UB> interesting approach, but I'm afraid that library will be far too slow to be usable
U0EUHKVGB : Just a PSA for anyone who is new, <#C0K384K4Y|news-and-links> is a great place to hang out if you like to see what's happening in the world of Elm :slightly_smiling_face: Everyone is welcome to share their projects there!
U0KNG2NHH : evening, folks, let’s see who’s up
U0KNG2NHH : given ```
type Bla = A Int | B Int
valA1 = A 1
valA2 = A 2
```
is there a way for me to check whether `valA1` has been constructed with the constructor of `valA2`?

U1CE9DL9H : not generically
U1CE9DL9H : but  `Maybe.map2` or `Result.map2` do something like it
U1CE9DL9H : actually, if you're feeling hacky, you could do something with `toString`, but...
U0KNG2NHH : <@U1CE9DL9H> no `toString` please :}
U1G51S63S : is anyone have an experience with elm-form? I can't skip validation at all. found this issue <https://github.com/etaque/elm-form/issues/88> but not sure how to use it :disappointed:
U1G51S63S : so when I am using it just like `succeed Contact` I got ```[TYPE MISMATCH]The definition of `contactValidation` does not match its type annotation.
The type annotation for `contactValidation` says it is a:

    Validation () (Contact)

But the definition (shown above) is a:

    Validation () (String -&gt; String -&gt; String -&gt; String -&gt; String -&gt; Contact)

Hint: It looks like a function needs 5 more arguments.```

U0EUHKVGB : <@U0KNG2NHH> There is not magical way to do that in Elm.
U0EUHKVGB : You can do `toString x |&gt; String.split " " |&gt; List.head == toString y |&gt; String.split " " |&gt; List.head`
U0EUHKVGB : Or define your own functions on a as-needed basis.


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
