U1C72J3J4 : <@U07S8JGF7> thank you, following the report...
U07S8JGF7 : <@U1C72J3J4> Be sure to upvote it if you want attention paid.
U297WCSHK : is there a formatter for clojure code that I can adapt progressively without converting the whole codebase at one? I tried parinfer for Atom, but it is too intrusive for me
U5XMV6DQT : emacs
U051SS2EU : `cljfmt` is a good plugin and unlike editor based options every collaborator can easily have the same rules
U051SS2EU : <https://github.com/weavejester/cljfmt>
U0B4ZBBKM : Is there an obvious way to write the following without repeating `x`? `(if (some-pred? x) y x)`Meaning if `x` is ok, just use it, otherwise use the alternative `y`

U5XMV6DQT : it could be written like ```(or (somefn x) y)```, but inside somefn there definitely would be repetitions of x or % argument
U1CTH1TUY : you have three values you care about, `x,` `y`, and `(some-pred? x)`, so you will need those three elements. if x is truthy, you could write the pred to return x or false and use `(or (some-pred? x) y)`, though that means custom predicates.
U1CTH1TUY : Doesn't work if you need pred to succeed on x being false / nil though
U5XMV6DQT : ```complement```
U11SJ6Q0K : I think `(if (foo? x) y x)` is readable and repeating one name, once as a parameter to the predicate, isn't bad
U056QFNM5 : <@U0B4ZBBKM> You can do that with a macro if you so desire. Something like this:
```
(defmacro pass-or-alternative [pred-expr value-expr alternative-expr]
  `(let [value# ~value-expr]
     (if (~pred-expr value#)
       value#
       ~alternative-expr)))
```

U1CTH1TUY : you don't need a macro, just `(fn [pred x y] (if (pred x) x y)`, then you'd just use it like `(my-fn pred x y)`
U0DJC1V3R : you do need a macro, you don't always want to evaluate `y`
U051SS2EU : if y has side effects the macro version is better
U08TWB99B : although the original question did not mention any lazy evaluation requirements
U051SS2EU : it wanted a replacement for if
U08TWB99B : i read it more as "how can I avoid re-typing 'x'" rather than "how can I replace a call to 'if' while keeping the characteristics of 'if'"
U0B4ZBBKM : Thanks for your suggestions!
U050R7ECY : is there a way to macroexpand a private macro?
U050R7ECY : `(macroexpand (private-macro foo))`


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
