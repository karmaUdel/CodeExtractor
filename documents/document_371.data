```
I found a typo in a docstring. I corrected it, but I want to make a link. Is there a way to do that?
Magic, thanks again!
It's a technical term, and it deserves a link to Wikipedia, I think
<@U57KYFW67> `[name of link](url)`
alternatively, `[name of link][]` and at the bottom, `[name of link]: url` (i.e. a sort of reference that is inlined while rendering)
yeah. Thanks :slightly_smiling_face:
the name `groupWhileTransitively` is bad :disappointed: lol
Yeah. I'm not a fan of how these functions look. I'm not sure it could be improved, though.
is there any sample json request code built in elm?
<@U64MK7215> json request code?
Yes. I want the complete elm program
<http://elm-lang.org/examples/http>
are you talking about the JSONRequest object or just general HTTP requests?
<https://guide.elm-lang.org/architecture/effects/http.html>
I want an exmaple of an elm program,not just a code snippet
<https://github.com/rtfeldman/elm-spa-example> perhaps?
not sure what you are after actually
almost all Elm programs use http requests
<@U64MK7215> ^that's an example. Perhaps you could clarify what you're looking for, and why :slightly_smiling_face:
What should I be doing?
you should do `case` on your value first, I suppose
you have to handle all types of Latex
Yep. Your `Latex` object may (or may no) be a macro. Maybe it's an `Environment`. If it is, the environment doesn't have a "name"
OK, that makes sense
Thanks <@U4872964V> and <@U57KYFW67>
but it does not work because in for `Macro`, `v` is a `Macro_`, for `Environment`, `v` is an `Environment_`, etc.  A case statement requires the values for each alternative to be of the same type.
I'd like, if possible, to have one function that when applied to a parser result, gives me a `Macro_`, an `Environment_`, etc. as the case may be.
well, that's not how the type system works in Elm. A value can only have one type, if you want to represent multiple types you make a union type, like the `Latex` type
so, instead, you do the stuff you want to do inside the `case` statement
OK, I'll think about how to proceed -- thanks!
first question, what do you want to do with the value you have?
My first goal is to write tests to make sure that as I change and add things, I haven't broken what is already built.  To do that I have to get into the inner structure of the parse results.
Eventually I will use parse results to produce html
so, you are writing a test, where you parse a given value and want to check if it parses correctly?
yes
I guess I will have to take a case-by-case approach
yes, so then you make a `case` statement where you do that check for the value you are supposed to get. All other cases will be failed tests.
OK, thanks, I will try that
