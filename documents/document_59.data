U0NCTKEV8 : the header map in clj-http is actually a special map type for dealing with header name case insensitivity
U0E1BND6Y : I'm trying to write a  csv file, but the data is truncated when I look at the output file. If I print out the vector that I pass into write-csv I see all of the results, but only part of them make it to the file.
U0E1BND6Y : I've also tried doubling the data `(into data data)` and that prints the rest of the result as well as some additional lines when it starts gets to the beginning of the original dataset again.
U0E1BND6Y : Ha! I should write in here more often, it gave me an idea to use `(with-open [writer (io/writer output-file-name)]        (csv/write-csv writer data))` and it worked!

U5YHNV0EA : i'm specifying an enviornment var in my project.clj in the :profiles :dev :env map. but when I try to run lein with-profile dev repl, that env variable is not there when using environ.core to load it. is there a piece to this process I'm missing?
U07QKGF9P : <@U0NCTKEV8> Sorry; yeah — I meant "I'm not sure how this would deal with a header value set twice", which explains why I only see parts of the set cookies :slightly_smiling_face:
U0QKTTY4D : i've seen many recommendations to use clojure.spec.alpha, but doesn't that require clojure 1.9? is the alpha stable enough for production or something?
U09LZR36F : I'm trying to create a java object &amp; getting no matching ctor. Is it possible to show the available ctors somehow?
U060FKQPN : use `clojure.reflect`
U09LZR36F : <@U060FKQPN> I'm trying, but not really sure what I'm looking for in there?
U060FKQPN : e.g. (sorry for the awkard code, wrote it on the repl) ```user=&gt; (-&gt; (cr/type-reflect String) :members (-&gt;&gt; (filter (comp #{'java.lang.String} :name)) (filter (comp #(contains? % :public) :flags)) (map :parameter-types)))([byte&lt;&gt;] [java.lang.StringBuilder] [int&lt;&gt; int int] [byte&lt;&gt; int int java.nio.charset.Charset] [byte&lt;&gt; java.lang.String] [] [byte&lt;&gt; int] [java.lang.StringBuffer] [byte&lt;&gt; int int java.lang.String] [char&lt;&gt; int int] [char&lt;&gt;] [byte&lt;&gt; int int int] [java.lang.String] [byte&lt;&gt; java.nio.charset.Charset] [byte&lt;&gt; int int])```

U060FKQPN : to get the public ctors
U060FKQPN : unless I'm not understanding what you're asking
U09LZR36F : Hmm, it's non-public. That's... odd right?
U050MP39D : <@U09LZR36F> in java land that's usually a sign that you're supposed to use a factory method, builder class, or some other way of getting instances of the object
U09LZR36F : I see :thinking_face: <https://github.com/centic9/jgit-cookbook/blob/master/src/main/java/org/dstadler/jgit/api/GetRevCommitFromObjectId.java> so I need to walk the git repo history instead. That sucks.
U050MP39D : ``` // You can also get the commit for an (abbreviated) SHA
                walk.reset();
                ObjectId id = repository.resolve("38d51408bd");
```

U050MP39D : ^ that doesn't help?
U09LZR36F : That made me reconsider, I can get the sha from objectid, but it was in a higher class... *sigh*. I hate java.
U09LZR36F : Oh, nvm, repository.resolve doesn't return a RevCommit, ^^
U09LZR36F : It's okay, the walker is simpler than expected
U050MP39D : yeah... this is a pretty good example of "god dammit there's a whole magical DSL around traversing the commits in a repo" rather than the repository just being represented by regular data structures
U050MP39D : iirc a git repo is DAG of immutable nodes, so would be perfectly representable as a persistent data structure
U0QKTTY4D : is there a way to have multiple handlers in bidi? i want to use `-&gt;ResourcesMaybe` with a fallback route... something like `[["/" (-&gt;ResourcesMaybe ...)] ["/" index-handler]]`
U0NCTKEV8 : the comment on <https://github.com/juxt/bidi/blob/master/src/bidi/ring.cljc#L110> seems to indicate it would work that way
U0NCTKEV8 : it may depend on you using bidi in a particular way to work


in above conversation, code/s mentioned has issue/s?
	If Yes:
	1.Bad	2.Very bad
	If No:
	1.Good	2.Very good


How confident are you?
	1.Low
	2.Average
	3.High

Optional!
can you highlight place/word/sentence which lead to your decision
